use super::shared::helper;

// region: s_has_minus_2_147_483_648_in_base_2
#[test]
fn s_has_minus_2_147_483_648_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_AA, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_AA,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_3
#[test]
fn s_has_minus_2_147_483_648_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_9B, 0x_C6, 0x_9B, 0x_9B, 0x_C6, 0x_9B, 0x_C6, 0x_C6, 0x_C6, 0x_9B, 0x_C6, 0x_9B, 0x_9B, 0x_72,
		0x_C6, 0x_72, 0x_C6, 0x_9B, 0x_72, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_9B, 0x_C6,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_5
#[test]
fn s_has_minus_2_147_483_648_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_9D, 0x_C6, 0x_C6, 0x_88, 0x_88, 0x_57, 0x_57, 0x_C6, 0x_88, 0x_C6, 0x_88, 0x_29, 0x_88, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_9D, 0x_57, 0x_C6, 0x_88,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_7
#[test]
fn s_has_minus_2_147_483_648_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_DA, 0x_E0, 0x_71, 0x_DA, 0x_24, 0x_71, 0x_98, 0x_DA, 0x_DA, 0x_DA, 0x_B0, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_DA, 0x_98, 0x_24, 0x_71, 0x_08, 0x_B0,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_11
#[test]
fn s_has_minus_2_147_483_648_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_9F, 0x_08, 0x_2E, 0x_2E, 0x_2E, 0x_08, 0x_2E, 0x_88, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_9E, 0x_2E, 0x_A3, 0x_5E, 0x_31, 0x_AF, 0x_9C, 0x_88, 0x_95, 0x_9F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_13
#[test]
fn s_has_minus_2_147_483_648_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_2A, 0x_57, 0x_2A, 0x_F7, 0x_61, 0x_F6, 0x_61, 0x_61, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_6D, 0x_2A, 0x_4D, 0x_F6, 0x_65, 0x_03, 0x_3F, 0x_57, 0x_82, 0x_61, 0x_F7, 0x_97,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_19
#[test]
fn s_has_minus_2_147_483_648_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_D6, 0x_5B, 0x_68, 0x_CF, 0x_5B, 0x_50, 0x_46, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_E1, 0x_D6, 0x_46, 0x_61, 0x_CF, 0x_D4, 0x_5B, 0x_B5, 0x_C5, 0x_A9, 0x_28, 0x_68, 0x_C0, 0x_AD,
		0x_DC, 0x_33, 0x_50, 0x_D5,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_42
#[test]
fn s_has_minus_2_147_483_648_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_CB, 0x_F0, 0x_AB, 0x_E2, 0x_FA, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_05, 0x_E9, 0x_08, 0x_59, 0x_AB, 0x_FF, 0x_39, 0x_26, 0x_63, 0x_E6, 0x_91, 0x_3F, 0x_8F, 0x_BD,
		0x_FA, 0x_CB, 0x_9D, 0x_F0, 0x_B5, 0x_E0, 0x_8E, 0x_9A, 0x_48, 0x_E2, 0x_64, 0x_D8, 0x_81, 0x_12, 0x_79,
		0x_BE, 0x_55, 0x_CE, 0x_E8, 0x_8B, 0x_6E, 0x_3D, 0x_4A, 0x_D0, 0x_24, 0x_F6, 0x_E7,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_73
#[test]
fn s_has_minus_2_147_483_648_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_73, 0x_61, 0x_CB, 0x_F6, 0x_96, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_73, 0x_61, 0x_D2, 0x_91, 0x_9B, 0x_56, 0x_8B, 0x_36, 0x_8C, 0x_10, 0x_1A, 0x_23, 0x_04, 0x_3A,
		0x_DF, 0x_D3, 0x_2A, 0x_12, 0x_FB, 0x_F6, 0x_4A, 0x_A1, 0x_51, 0x_29, 0x_B3, 0x_EC, 0x_CC, 0x_FE, 0x_03,
		0x_71, 0x_70, 0x_C6, 0x_DD, 0x_07, 0x_C1, 0x_74, 0x_B2, 0x_F4, 0x_FC, 0x_5F, 0x_40, 0x_3D, 0x_F0, 0x_96,
		0x_CB, 0x_7B, 0x_81, 0x_BC, 0x_EE, 0x_19, 0x_01, 0x_72, 0x_B7, 0x_9E, 0x_F8, 0x_BD, 0x_28, 0x_80, 0x_43,
		0x_53, 0x_59, 0x_38, 0x_ED, 0x_50, 0x_46, 0x_A0, 0x_97, 0x_B8, 0x_C5, 0x_BF, 0x_55, 0x_8A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_113
#[test]
fn s_has_minus_2_147_483_648_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_04, 0x_47, 0x_BB, 0x_2E, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_EF, 0x_CF, 0x_94, 0x_86, 0x_FC, 0x_8D, 0x_D6, 0x_FE, 0x_E5, 0x_B0, 0x_5C, 0x_84, 0x_04, 0x_79,
		0x_60, 0x_16, 0x_63, 0x_AA, 0x_47, 0x_62, 0x_A2, 0x_2C, 0x_8E, 0x_37, 0x_41, 0x_52, 0x_B8, 0x_D0, 0x_DE,
		0x_E9, 0x_F0, 0x_F2, 0x_1E, 0x_78, 0x_BB, 0x_96, 0x_9D, 0x_A6, 0x_FB, 0x_EE, 0x_26, 0x_38, 0x_7E, 0x_7C,
		0x_36, 0x_65, 0x_D4, 0x_B2, 0x_17, 0x_7F, 0x_C8, 0x_28, 0x_2E, 0x_11, 0x_3E, 0x_99, 0x_9C, 0x_D3, 0x_F7,
		0x_90, 0x_0E, 0x_24, 0x_87, 0x_1C, 0x_C5, 0x_CA, 0x_3F, 0x_B1, 0x_25, 0x_67, 0x_B4, 0x_48, 0x_AB, 0x_2F,
		0x_49, 0x_B3, 0x_A5, 0x_6A, 0x_3A, 0x_30, 0x_5B, 0x_C0, 0x_34, 0x_FF, 0x_9A, 0x_10, 0x_ED, 0x_54, 0x_5F,
		0x_A9, 0x_40, 0x_01, 0x_45, 0x_6B, 0x_6D, 0x_7B, 0x_33, 0x_9F, 0x_C2, 0x_D5, 0x_77, 0x_CC, 0x_DB, 0x_BE,
		0x_80, 0x_91, 0x_F5, 0x_8C, 0x_C1, 0x_9B, 0x_CB, 0x_DA,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_193
#[test]
fn s_has_minus_2_147_483_648_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_91, 0x_9A, 0x_2E, 0x_A2, 0x_BF,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_91, 0x_47, 0x_A7, 0x_3D, 0x_5F, 0x_F6, 0x_F4, 0x_19, 0x_9F, 0x_EA, 0x_70, 0x_A6, 0x_DF, 0x_9B,
		0x_D0, 0x_B9, 0x_48, 0x_FE, 0x_36, 0x_ED, 0x_3C, 0x_A2, 0x_CE, 0x_CD, 0x_4F, 0x_5C, 0x_94, 0x_FD, 0x_F9,
		0x_0F, 0x_BB, 0x_B4, 0x_E6, 0x_E0, 0x_9E, 0x_15, 0x_C0, 0x_E9, 0x_C8, 0x_AF, 0x_05, 0x_A9, 0x_C9, 0x_5D,
		0x_16, 0x_8A, 0x_D2, 0x_F0, 0x_55, 0x_83, 0x_01, 0x_39, 0x_7E, 0x_BF, 0x_B2, 0x_E4, 0x_B1, 0x_AB, 0x_41,
		0x_33, 0x_97, 0x_54, 0x_FC, 0x_B7, 0x_93, 0x_AA, 0x_5E, 0x_85, 0x_90, 0x_1A, 0x_59, 0x_D7, 0x_11, 0x_8F,
		0x_CA, 0x_67, 0x_53, 0x_B6, 0x_07, 0x_60, 0x_18, 0x_4B, 0x_B8, 0x_43, 0x_73, 0x_F5, 0x_81, 0x_3F, 0x_52,
		0x_AC, 0x_63, 0x_6C, 0x_C7, 0x_22, 0x_42, 0x_6E, 0x_32, 0x_99, 0x_9D, 0x_1C, 0x_96, 0x_51, 0x_92, 0x_37,
		0x_9A, 0x_A4, 0x_21, 0x_8E, 0x_B5, 0x_D1, 0x_2C, 0x_7A, 0x_C6, 0x_BC, 0x_1F, 0x_DC, 0x_1B, 0x_7D, 0x_A8,
		0x_30, 0x_75, 0x_A3, 0x_77, 0x_0E, 0x_AD, 0x_46, 0x_72, 0x_84, 0x_03, 0x_2A, 0x_D8, 0x_EF, 0x_98, 0x_4E,
		0x_C1, 0x_1E, 0x_E3, 0x_2E, 0x_45, 0x_80, 0x_3E, 0x_31, 0x_DE, 0x_FB, 0x_4D, 0x_E1, 0x_3B, 0x_A5, 0x_06,
		0x_7F, 0x_A1, 0x_DD, 0x_27, 0x_50, 0x_EB, 0x_88, 0x_D9, 0x_FF, 0x_10, 0x_04, 0x_D6, 0x_68, 0x_E5, 0x_89,
		0x_F2, 0x_78, 0x_49, 0x_62, 0x_38, 0x_D3, 0x_F8, 0x_82, 0x_25, 0x_BD, 0x_CF, 0x_5B, 0x_9C, 0x_17, 0x_E8,
		0x_71, 0x_C4, 0x_57, 0x_6D, 0x_F1, 0x_1D, 0x_BA, 0x_DA, 0x_7B, 0x_44, 0x_95, 0x_13, 0x_40,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_247
#[test]
fn s_has_minus_2_147_483_648_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_F1, 0x_1D, 0x_88, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_DC, 0x_F0, 0x_CF, 0x_D4, 0x_D1, 0x_D6, 0x_DF, 0x_05, 0x_FF, 0x_A1, 0x_30, 0x_2F, 0x_23, 0x_66,
		0x_EF, 0x_A2, 0x_65, 0x_8A, 0x_AF, 0x_93, 0x_FE, 0x_CC, 0x_7D, 0x_B0, 0x_56, 0x_BF, 0x_DE, 0x_3D, 0x_18,
		0x_CD, 0x_70, 0x_1F, 0x_A4, 0x_2E, 0x_38, 0x_D2, 0x_E2, 0x_68, 0x_55, 0x_E8, 0x_C5, 0x_15, 0x_44, 0x_03,
		0x_96, 0x_E3, 0x_7F, 0x_E6, 0x_17, 0x_4F, 0x_26, 0x_86, 0x_FC, 0x_B6, 0x_9A, 0x_B4, 0x_54, 0x_EC, 0x_C0,
		0x_58, 0x_1C, 0x_EB, 0x_41, 0x_69, 0x_8D, 0x_AC, 0x_87, 0x_5C, 0x_F3, 0x_14, 0x_11, 0x_6C, 0x_45, 0x_64,
		0x_7A, 0x_A0, 0x_F5, 0x_35, 0x_A7, 0x_CE, 0x_81, 0x_84, 0x_D3, 0x_36, 0x_4E, 0x_4B, 0x_9C, 0x_79, 0x_7B,
		0x_8C, 0x_DD, 0x_6D, 0x_32, 0x_16, 0x_02, 0x_52, 0x_39, 0x_BC, 0x_91, 0x_3A, 0x_E1, 0x_3C, 0x_73, 0x_47,
		0x_95, 0x_C2, 0x_40, 0x_AB, 0x_98, 0x_61, 0x_04, 0x_88, 0x_FB, 0x_71, 0x_BB, 0x_ED, 0x_01, 0x_37, 0x_6A,
		0x_A9, 0x_72, 0x_6F, 0x_50, 0x_6E, 0x_1D, 0x_AE, 0x_BA, 0x_29, 0x_48, 0x_C4, 0x_90, 0x_8B, 0x_D7, 0x_59,
		0x_E9, 0x_C3, 0x_9B, 0x_B1, 0x_28, 0x_5F, 0x_5D, 0x_F1, 0x_E4, 0x_97, 0x_6B, 0x_7C, 0x_A3, 0x_94, 0x_53,
		0x_F6, 0x_FD, 0x_92, 0x_D8, 0x_C8, 0x_C1, 0x_82, 0x_AD, 0x_4C, 0x_1A, 0x_8E, 0x_10, 0x_3E, 0x_2A, 0x_A5,
		0x_57, 0x_12, 0x_B8, 0x_24, 0x_A6, 0x_F7, 0x_F8, 0x_62, 0x_75, 0x_31, 0x_AA, 0x_9F, 0x_5E, 0x_E7, 0x_E5,
		0x_B5, 0x_E0, 0x_D5, 0x_89, 0x_BD, 0x_BE, 0x_06, 0x_C7, 0x_D0, 0x_34, 0x_B7, 0x_25, 0x_CA, 0x_B2, 0x_07,
		0x_63, 0x_33, 0x_DA, 0x_7E, 0x_2C, 0x_8F, 0x_13, 0x_3F, 0x_74, 0x_99, 0x_43, 0x_67, 0x_A8, 0x_27, 0x_FA,
		0x_42, 0x_B3, 0x_85, 0x_83, 0x_60, 0x_21, 0x_5B, 0x_9E, 0x_C9, 0x_D9, 0x_19, 0x_77, 0x_9D, 0x_0F, 0x_1E,
		0x_3B, 0x_78, 0x_F4, 0x_F9, 0x_46, 0x_F2, 0x_EE, 0x_76, 0x_C6, 0x_51, 0x_4A, 0x_CB, 0x_08, 0x_4D, 0x_22,
		0x_DB, 0x_1B, 0x_0E, 0x_EA, 0x_49, 0x_5A, 0x_B9,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_2
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_0C,
		0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_2D, 0x_AF, 0x_5B, 0x_5B, 0x_5B,
		0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B,
		0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_AF,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_3
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_2D, 0x_26,
		0x_F2, 0x_26, 0x_26, 0x_F2, 0x_26, 0x_F2, 0x_F2, 0x_F2, 0x_26, 0x_F2, 0x_26, 0x_26, 0x_84, 0x_F2, 0x_84,
		0x_F2, 0x_26, 0x_84, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_26, 0x_F2,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_5
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0B, 0x_2D, 0x_1B, 0x_27, 0x_27, 0x_42, 0x_42, 0x_C6, 0x_C6, 0x_27, 0x_42, 0x_27, 0x_42,
		0x_3E, 0x_42, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_1B, 0x_C6, 0x_27, 0x_42,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_7
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0D,
		0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_09,
		0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_2D, 0x_4E, 0x_0F, 0x_31, 0x_4E, 0x_DF, 0x_31, 0x_B8,
		0x_4E, 0x_4E, 0x_4E, 0x_75, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_4E, 0x_B8, 0x_DF, 0x_31, 0x_F6, 0x_75,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_11
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_11() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0B,
		0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0B,
		0x_2D, 0x_90, 0x_BD, 0x_A9, 0x_A9, 0x_A9, 0x_BD, 0x_A9, 0x_21, 0x_A9,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_7E, 0x_A9, 0x_D2, 0x_95, 0x_9F, 0x_1B, 0x_8A, 0x_21, 0x_ED, 0x_90,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_13
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0D,
		0x_20, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_20,
		0x_0A, 0x_09, 0x_20, 0x_2D, 0x_6F, 0x_38, 0x_6F, 0x_F3, 0x_AE, 0x_AF, 0x_AE, 0x_AE, 0x_F3,
	];
	const BASE: &[u8] = &[
		0x_6A, 0x_F4, 0x_6F, 0x_96, 0x_AF, 0x_E4, 0x_B3, 0x_7A, 0x_38, 0x_A0, 0x_AE, 0x_F3, 0x_80,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_19
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0A,
		0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_20,
		0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_2D, 0x_BE, 0x_DF, 0x_6F, 0x_81, 0x_DF,
		0x_74, 0x_10, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_8F, 0x_BE, 0x_10, 0x_2F, 0x_81, 0x_3A, 0x_DF, 0x_C4, 0x_5E, 0x_05, 0x_C6, 0x_6F, 0x_D9, 0x_91,
		0x_7F, 0x_53, 0x_74, 0x_9A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_42
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_20,
		0x_09, 0x_0D, 0x_09, 0x_20, 0x_2D, 0x_16, 0x_32, 0x_38, 0x_8E, 0x_CC, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_B1, 0x_D3, 0x_26, 0x_E2, 0x_38, 0x_B6, 0x_23, 0x_18, 0x_D8, 0x_39, 0x_52, 0x_63, 0x_FA, 0x_35,
		0x_CC, 0x_16, 0x_E6, 0x_32, 0x_1F, 0x_A0, 0x_D6, 0x_64, 0x_CD, 0x_8E, 0x_C8, 0x_F1, 0x_73, 0x_88, 0x_99,
		0x_5C, 0x_BD, 0x_19, 0x_D9, 0x_85, 0x_CA, 0x_A3, 0x_F4, 0x_F8, 0x_6E, 0x_84, 0x_3B,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_73
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_73() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_2D, 0x_0E, 0x_56, 0x_9D, 0x_50,
		0x_29, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_0E, 0x_56, 0x_6A, 0x_43, 0x_88, 0x_4B, 0x_AE, 0x_E5, 0x_01, 0x_54, 0x_55, 0x_C5, 0x_24, 0x_17,
		0x_DC, 0x_C9, 0x_FE, 0x_A1, 0x_F1, 0x_50, 0x_D1, 0x_B9, 0x_90, 0x_69, 0x_3A, 0x_4A, 0x_8E, 0x_A2, 0x_62,
		0x_F5, 0x_E9, 0x_D2, 0x_39, 0x_8D, 0x_A9, 0x_72, 0x_DA, 0x_FC, 0x_A8, 0x_91, 0x_DE, 0x_3C, 0x_3B, 0x_29,
		0x_9D, 0x_5F, 0x_AC, 0x_AB, 0x_B4, 0x_C4, 0x_76, 0x_32, 0x_B0, 0x_EF, 0x_D8, 0x_16, 0x_B8, 0x_BB, 0x_4D,
		0x_EE, 0x_1C, 0x_86, 0x_73, 0x_92, 0x_C8, 0x_DD, 0x_28, 0x_F3, 0x_D0, 0x_97, 0x_C1, 0x_49,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_113
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_113() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_2D, 0x_8F, 0x_E6, 0x_4E, 0x_3F, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_74, 0x_AE, 0x_9E, 0x_B7, 0x_25, 0x_5C, 0x_35, 0x_3C, 0x_8E, 0x_BE, 0x_FD, 0x_89, 0x_8F, 0x_31,
		0x_B8, 0x_BC, 0x_1E, 0x_1A, 0x_E6, 0x_9C, 0x_E1, 0x_48, 0x_A1, 0x_17, 0x_5B, 0x_19, 0x_D1, 0x_DB, 0x_46,
		0x_E3, 0x_5A, 0x_9D, 0x_7F, 0x_DD, 0x_4E, 0x_D8, 0x_08, 0x_56, 0x_57, 0x_C8, 0x_4D, 0x_EF, 0x_BF, 0x_AC,
		0x_6D, 0x_30, 0x_B9, 0x_8C, 0x_CA, 0x_34, 0x_DC, 0x_D5, 0x_3F, 0x_79, 0x_44, 0x_51, 0x_99, 0x_EB, 0x_73,
		0x_B6, 0x_90, 0x_CB, 0x_EE, 0x_02, 0x_13, 0x_54, 0x_2E, 0x_A7, 0x_14, 0x_C1, 0x_2A, 0x_C6, 0x_45, 0x_B4,
		0x_82, 0x_94, 0x_91, 0x_8D, 0x_85, 0x_52, 0x_87, 0x_65, 0x_60, 0x_3B, 0x_12, 0x_62, 0x_5E, 0x_95, 0x_B0,
		0x_76, 0x_6B, 0x_CC, 0x_1F, 0x_69, 0x_23, 0x_4B, 0x_70, 0x_D0, 0x_E4, 0x_F9, 0x_FF, 0x_98, 0x_92, 0x_C9,
		0x_05, 0x_2F, 0x_78, 0x_11, 0x_59, 0x_96, 0x_E5, 0x_37,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_193
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_2D, 0x_1C, 0x_76,
		0x_78, 0x_45, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_1C, 0x_50, 0x_11, 0x_25, 0x_70, 0x_68, 0x_92, 0x_72, 0x_52, 0x_BD, 0x_AB, 0x_96, 0x_59, 0x_6B,
		0x_B9, 0x_65, 0x_48, 0x_3D, 0x_58, 0x_DA, 0x_5B, 0x_45, 0x_84, 0x_07, 0x_40, 0x_77, 0x_55, 0x_DC, 0x_87,
		0x_60, 0x_CB, 0x_D6, 0x_90, 0x_DF, 0x_95, 0x_16, 0x_DE, 0x_F3, 0x_BE, 0x_CE, 0x_D3, 0x_D1, 0x_C9, 0x_F5,
		0x_3C, 0x_62, 0x_4B, 0x_10, 0x_A2, 0x_9C, 0x_38, 0x_9E, 0x_54, 0x_06, 0x_51, 0x_C8, 0x_0F, 0x_E5, 0x_82,
		0x_B1, 0x_18, 0x_8E, 0x_C7, 0x_AA, 0x_F4, 0x_8A, 0x_6F, 0x_47, 0x_3F, 0x_E1, 0x_CA, 0x_5E, 0x_64, 0x_E9,
		0x_E8, 0x_A9, 0x_6D, 0x_46, 0x_7D, 0x_FB, 0x_ED, 0x_63, 0x_FC, 0x_79, 0x_33, 0x_61, 0x_85, 0x_3E, 0x_5F,
		0x_91, 0x_BA, 0x_D0, 0x_1F, 0x_49, 0x_28, 0x_EF, 0x_5D, 0x_1A, 0x_75, 0x_8D, 0x_83, 0x_9A, 0x_FE, 0x_4E,
		0x_76, 0x_4C, 0x_A3, 0x_34, 0x_BC, 0x_39, 0x_FD, 0x_E3, 0x_1B, 0x_36, 0x_08, 0x_5A, 0x_9D, 0x_19, 0x_6A,
		0x_E0, 0x_21, 0x_E6, 0x_C6, 0x_BF, 0x_31, 0x_0E, 0x_B7, 0x_1D, 0x_CF, 0x_B0, 0x_81, 0x_E7, 0x_27, 0x_C3,
		0x_99, 0x_D5, 0x_CD, 0x_78, 0x_B8, 0x_24, 0x_94, 0x_D8, 0x_30, 0x_97, 0x_22, 0x_32, 0x_17, 0x_A7, 0x_4D,
		0x_15, 0x_AC, 0x_7F, 0x_3B, 0x_EC, 0x_F8, 0x_35, 0x_26, 0x_AD, 0x_73, 0x_FF, 0x_53, 0x_74, 0x_DB, 0x_B6,
		0x_57, 0x_7C, 0x_12, 0x_56, 0x_42, 0x_04, 0x_B3, 0x_B2, 0x_69, 0x_7E, 0x_71, 0x_A5, 0x_CC, 0x_5C, 0x_6C,
		0x_FA, 0x_B4, 0x_02, 0x_A4, 0x_9B, 0x_14, 0x_EA, 0x_2C, 0x_D2, 0x_C0, 0x_B5, 0x_EE, 0x_4A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_247
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_247() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0D,
		0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0B,
		0x_0C, 0x_20, 0x_2D, 0x_59, 0x_2C, 0x_85, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_C3, 0x_7D, 0x_3D, 0x_E2, 0x_2F, 0x_BE, 0x_E5, 0x_FA, 0x_36, 0x_C8, 0x_0F, 0x_D5, 0x_E0, 0x_5C,
		0x_C4, 0x_C6, 0x_63, 0x_F5, 0x_DD, 0x_46, 0x_B5, 0x_A1, 0x_F2, 0x_DE, 0x_2A, 0x_A4, 0x_3E, 0x_BA, 0x_88,
		0x_6B, 0x_AA, 0x_53, 0x_01, 0x_DC, 0x_CA, 0x_19, 0x_86, 0x_4E, 0x_8B, 0x_4A, 0x_9F, 0x_E7, 0x_74, 0x_80,
		0x_D3, 0x_15, 0x_02, 0x_55, 0x_44, 0x_79, 0x_54, 0x_77, 0x_43, 0x_AE, 0x_7E, 0x_93, 0x_BD, 0x_96, 0x_1E,
		0x_30, 0x_D1, 0x_76, 0x_C7, 0x_16, 0x_23, 0x_A2, 0x_E8, 0x_2E, 0x_58, 0x_6F, 0x_1C, 0x_28, 0x_EF, 0x_8C,
		0x_97, 0x_9A, 0x_51, 0x_98, 0x_75, 0x_38, 0x_4C, 0x_3C, 0x_72, 0x_29, 0x_82, 0x_78, 0x_56, 0x_6A, 0x_50,
		0x_BB, 0x_26, 0x_A6, 0x_EC, 0x_12, 0x_91, 0x_0E, 0x_39, 0x_37, 0x_D2, 0x_A8, 0x_11, 0x_03, 0x_AF, 0x_5B,
		0x_FF, 0x_84, 0x_D8, 0x_FD, 0x_5D, 0x_CE, 0x_F0, 0x_85, 0x_C5, 0x_D4, 0x_AC, 0x_68, 0x_AB, 0x_70, 0x_F3,
		0x_06, 0x_05, 0x_64, 0x_D0, 0x_71, 0x_2C, 0x_5E, 0x_8E, 0x_67, 0x_FB, 0x_40, 0x_F4, 0x_73, 0x_52, 0x_99,
		0x_E4, 0x_6D, 0x_13, 0x_92, 0x_61, 0x_F7, 0x_DF, 0x_59, 0x_7B, 0x_60, 0x_B2, 0x_CD, 0x_3B, 0x_B3, 0x_C0,
		0x_C9, 0x_9E, 0x_B7, 0x_66, 0x_6C, 0x_B4, 0x_3F, 0x_8A, 0x_6E, 0x_4B, 0x_62, 0x_9C, 0x_BF, 0x_F1, 0x_90,
		0x_27, 0x_F6, 0x_B6, 0x_5F, 0x_7C, 0x_F9, 0x_DB, 0x_17, 0x_48, 0x_5A, 0x_EB, 0x_ED, 0x_94, 0x_B9, 0x_87,
		0x_EA, 0x_7A, 0x_C1, 0x_A3, 0x_CB, 0x_69, 0x_FC, 0x_A5, 0x_4F, 0x_81, 0x_A0, 0x_E1, 0x_57, 0x_9D, 0x_47,
		0x_9B, 0x_1B, 0x_1F, 0x_E6, 0x_BC, 0x_31, 0x_34, 0x_1D, 0x_35, 0x_32, 0x_10, 0x_DA, 0x_18, 0x_25, 0x_45,
		0x_22, 0x_07, 0x_A9, 0x_4D, 0x_49, 0x_B0, 0x_CC, 0x_7F, 0x_D9, 0x_42, 0x_1A, 0x_65, 0x_3A, 0x_14, 0x_21,
		0x_8F, 0x_95, 0x_41, 0x_E9, 0x_D6, 0x_C2, 0x_EE, 0x_FE, 0x_E3, 0x_04, 0x_83, 0x_AD, 0x_B8, 0x_08, 0x_A7,
		0x_B1, 0x_24, 0x_F8, 0x_D7, 0x_CF, 0x_33, 0x_89,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_2
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_D1, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_D1,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_3
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_FC,
		0x_CD, 0x_FC, 0x_FC, 0x_CD, 0x_FC, 0x_CD, 0x_CD, 0x_CD, 0x_FC, 0x_CD, 0x_FC, 0x_FC, 0x_01, 0x_CD, 0x_01,
		0x_CD, 0x_FC, 0x_01, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_FC, 0x_CD,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_5
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_FC, 0x_73, 0x_73, 0x_A7, 0x_A7, 0x_87,
		0x_87, 0x_73, 0x_A7, 0x_73, 0x_A7, 0x_F2, 0x_A7, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_FC, 0x_87, 0x_73, 0x_A7,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_7
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_CB, 0x_FE, 0x_69, 0x_CB, 0x_65, 0x_69, 0x_D2, 0x_CB, 0x_CB, 0x_CB, 0x_F3, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_FE, 0x_CB, 0x_D2, 0x_65, 0x_69, 0x_8C, 0x_F3,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_11
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_CE,
		0x_44, 0x_93, 0x_93, 0x_93, 0x_44, 0x_93, 0x_7B, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_B3, 0x_93, 0x_21, 0x_75, 0x_98, 0x_01, 0x_04, 0x_7B, 0x_3A, 0x_CE,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_13
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_62, 0x_F6, 0x_62, 0x_4E, 0x_89,
		0x_F3, 0x_89, 0x_89, 0x_4E,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_76, 0x_62, 0x_CA, 0x_F3, 0x_C6, 0x_72, 0x_27, 0x_F6, 0x_24, 0x_89, 0x_4E, 0x_EF,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_19
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_7C, 0x_FC, 0x_49, 0x_FA, 0x_FC, 0x_AC, 0x_5F, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_12, 0x_7C, 0x_5F, 0x_1A, 0x_FA, 0x_DA, 0x_FC, 0x_FB, 0x_8A, 0x_42, 0x_62, 0x_49, 0x_76, 0x_E7,
		0x_3F, 0x_DC, 0x_AC, 0x_AD,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_42
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_CB, 0x_55, 0x_C2, 0x_BF, 0x_70, 0x_6B,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_06, 0x_6B, 0x_F8, 0x_8A, 0x_C2, 0x_E7, 0x_66, 0x_51, 0x_2A, 0x_B5, 0x_DE, 0x_98, 0x_99, 0x_9A,
		0x_70, 0x_CB, 0x_D9, 0x_55, 0x_4F, 0x_77, 0x_4C, 0x_62, 0x_4E, 0x_BF, 0x_1B, 0x_12, 0x_EC, 0x_67, 0x_7C,
		0x_C9, 0x_21, 0x_A1, 0x_A6, 0x_C0, 0x_07, 0x_D6, 0x_47, 0x_B9, 0x_3A, 0x_60, 0x_A9,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_73
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_F9, 0x_E6, 0x_3D, 0x_42,
		0x_47, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_F9, 0x_E6, 0x_E0, 0x_DA, 0x_8E, 0x_DE, 0x_C1, 0x_7E, 0x_50, 0x_9F, 0x_10, 0x_F0, 0x_CA, 0x_55,
		0x_1B, 0x_CB, 0x_14, 0x_EB, 0x_96, 0x_42, 0x_CD, 0x_DD, 0x_97, 0x_8C, 0x_87, 0x_F2, 0x_88, 0x_13, 0x_B7,
		0x_03, 0x_85, 0x_CE, 0x_81, 0x_59, 0x_F3, 0x_B4, 0x_E5, 0x_C8, 0x_92, 0x_B9, 0x_F1, 0x_3A, 0x_B3, 0x_47,
		0x_3D, 0x_3E, 0x_BB, 0x_19, 0x_D4, 0x_FF, 0x_AF, 0x_AC, 0x_FC, 0x_44, 0x_D1, 0x_1F, 0x_C6, 0x_9A, 0x_6D,
		0x_5C, 0x_91, 0x_5A, 0x_33, 0x_E7, 0x_ED, 0x_73, 0x_8A, 0x_E8, 0x_BE, 0x_62, 0x_B1, 0x_24,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_113
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_7D, 0x_75, 0x_C5,
		0x_3B, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_CA, 0x_2A, 0x_D3, 0x_4E, 0x_D0, 0x_6C, 0x_B3, 0x_CD, 0x_B1, 0x_F3, 0x_51, 0x_8B, 0x_7D, 0x_63,
		0x_45, 0x_15, 0x_6D, 0x_A6, 0x_75, 0x_33, 0x_F2, 0x_AE, 0x_D7, 0x_83, 0x_38, 0x_D6, 0x_36, 0x_68, 0x_CE,
		0x_76, 0x_58, 0x_E3, 0x_C7, 0x_6B, 0x_C5, 0x_F1, 0x_5A, 0x_9C, 0x_FE, 0x_95, 0x_55, 0x_24, 0x_BF, 0x_46,
		0x_1C, 0x_42, 0x_C2, 0x_BB, 0x_B7, 0x_89, 0x_ED, 0x_B4, 0x_3B, 0x_C0, 0x_C4, 0x_86, 0x_A0, 0x_F5, 0x_D4,
		0x_88, 0x_7B, 0x_91, 0x_C6, 0x_1D, 0x_A5, 0x_65, 0x_22, 0x_7F, 0x_9F, 0x_EF, 0x_F9, 0x_AB, 0x_57, 0x_D9,
		0x_29, 0x_78, 0x_53, 0x_21, 0x_17, 0x_74, 0x_2F, 0x_98, 0x_FD, 0x_1E, 0x_3C, 0x_07, 0x_37, 0x_E6, 0x_03,
		0x_BA, 0x_92, 0x_A7, 0x_F0, 0x_E4, 0x_B6, 0x_DF, 0x_35, 0x_5F, 0x_40, 0x_EE, 0x_1F, 0x_0E, 0x_F6, 0x_80,
		0x_5B, 0x_D1, 0x_D2, 0x_59, 0x_70, 0x_8E, 0x_AF, 0x_AA,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_193
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_B8, 0x_85, 0x_A5, 0x_F6, 0x_5B,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_B8, 0x_C1, 0x_12, 0x_E0, 0x_30, 0x_C3, 0x_AE, 0x_14, 0x_BC, 0x_7F, 0x_81, 0x_6D, 0x_47, 0x_95,
		0x_0F, 0x_CC, 0x_53, 0x_FE, 0x_C9, 0x_4A, 0x_5F, 0x_F6, 0x_31, 0x_3D, 0x_23, 0x_CE, 0x_11, 0x_77, 0x_88,
		0x_4D, 0x_29, 0x_7C, 0x_B1, 0x_1A, 0x_ED, 0x_03, 0x_44, 0x_51, 0x_C5, 0x_F5, 0x_F1, 0x_3E, 0x_9F, 0x_34,
		0x_A2, 0x_EB, 0x_07, 0x_2E, 0x_2F, 0x_E1, 0x_D4, 0x_56, 0x_EC, 0x_5B, 0x_57, 0x_E3, 0x_B0, 0x_38, 0x_8C,
		0x_DF, 0x_63, 0x_9E, 0x_AB, 0x_73, 0x_D5, 0x_E7, 0x_7A, 0x_22, 0x_96, 0x_3F, 0x_6E, 0x_0E, 0x_98, 0x_8D,
		0x_C0, 0x_5D, 0x_6F, 0x_71, 0x_4B, 0x_16, 0x_42, 0x_86, 0x_55, 0x_33, 0x_37, 0x_FA, 0x_2A, 0x_82, 0x_AF,
		0x_91, 0x_DD, 0x_DE, 0x_62, 0x_94, 0x_60, 0x_DC, 0x_EA, 0x_3C, 0x_04, 0x_B7, 0x_3B, 0x_9D, 0x_F4, 0x_E2,
		0x_85, 0x_75, 0x_6A, 0x_92, 0x_93, 0x_F3, 0x_EE, 0x_2C, 0x_78, 0x_24, 0x_45, 0x_76, 0x_28, 0x_D2, 0x_A7,
		0x_FF, 0x_10, 0x_B6, 0x_5E, 0x_66, 0x_C7, 0x_1C, 0x_50, 0x_C4, 0x_64, 0x_E4, 0x_AD, 0x_46, 0x_43, 0x_F7,
		0x_B4, 0x_58, 0x_69, 0x_A5, 0x_9B, 0x_8E, 0x_27, 0x_D6, 0x_A1, 0x_A8, 0x_19, 0x_E9, 0x_AA, 0x_DA, 0x_C6,
		0x_B9, 0x_41, 0x_C8, 0x_21, 0x_7D, 0x_D7, 0x_87, 0x_54, 0x_CF, 0x_7E, 0x_5A, 0x_4C, 0x_84, 0x_17, 0x_FD,
		0x_CD, 0x_CA, 0x_C2, 0x_65, 0x_13, 0x_49, 0x_7B, 0x_E5, 0x_5C, 0x_48, 0x_A3, 0x_4E, 0x_26, 0x_E8, 0x_BE,
		0x_25, 0x_18, 0x_DB, 0x_6B, 0x_9A, 0x_B2, 0x_52, 0x_40, 0x_8B, 0x_1D, 0x_68, 0x_A6, 0x_8F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_247
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_BE, 0x_FF, 0x_53, 0x_63,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_81, 0x_22, 0x_5D, 0x_7C, 0x_70, 0x_18, 0x_8C, 0x_85, 0x_BD, 0x_3E, 0x_95, 0x_EC, 0x_99, 0x_9C,
		0x_F9, 0x_57, 0x_73, 0x_3F, 0x_6C, 0x_C1, 0x_29, 0x_A0, 0x_EE, 0x_DE, 0x_DF, 0x_C6, 0x_3C, 0x_D8, 0x_C4,
		0x_87, 0x_44, 0x_B0, 0x_05, 0x_B4, 0x_F2, 0x_F7, 0x_94, 0x_04, 0x_0F, 0x_BA, 0x_89, 0x_17, 0x_8B, 0x_96,
		0x_9D, 0x_ED, 0x_4C, 0x_A4, 0x_DD, 0x_78, 0x_A3, 0x_39, 0x_66, 0x_9E, 0x_43, 0x_93, 0x_5E, 0x_19, 0x_6B,
		0x_A2, 0x_A9, 0x_16, 0x_CA, 0x_A1, 0x_7E, 0x_E0, 0x_FD, 0x_38, 0x_92, 0x_35, 0x_27, 0x_FB, 0x_46, 0x_48,
		0x_4A, 0x_74, 0x_F8, 0x_23, 0x_B8, 0x_CF, 0x_DC, 0x_97, 0x_9B, 0x_8F, 0x_82, 0x_2E, 0x_DB, 0x_5F, 0x_49,
		0x_F6, 0x_72, 0x_E9, 0x_03, 0x_3B, 0x_40, 0x_13, 0x_77, 0x_42, 0x_A6, 0x_6F, 0x_A5, 0x_75, 0x_CE, 0x_88,
		0x_9F, 0x_28, 0x_91, 0x_2C, 0x_D5, 0x_10, 0x_1A, 0x_53, 0x_9A, 0x_62, 0x_B1, 0x_12, 0x_24, 0x_C0, 0x_FC,
		0x_2F, 0x_C8, 0x_71, 0x_D0, 0x_A8, 0x_FF, 0x_C2, 0x_FE, 0x_BC, 0x_E5, 0x_C7, 0x_D4, 0x_58, 0x_FA, 0x_F5,
		0x_90, 0x_59, 0x_21, 0x_B9, 0x_E2, 0x_68, 0x_79, 0x_BE, 0x_08, 0x_B5, 0x_64, 0x_BF, 0x_7D, 0x_D6, 0x_65,
		0x_B6, 0x_BB, 0x_26, 0x_61, 0x_B3, 0x_83, 0x_EA, 0x_E8, 0x_AC, 0x_F3, 0x_DA, 0x_52, 0x_30, 0x_8E, 0x_E4,
		0x_11, 0x_5B, 0x_B7, 0x_76, 0x_5C, 0x_60, 0x_45, 0x_D2, 0x_84, 0x_80, 0x_F0, 0x_D3, 0x_3D, 0x_F4, 0x_CC,
		0x_33, 0x_E7, 0x_32, 0x_14, 0x_AE, 0x_51, 0x_4E, 0x_31, 0x_67, 0x_1C, 0x_7F, 0x_37, 0x_47, 0x_63, 0x_8D,
		0x_4F, 0x_56, 0x_E1, 0x_CB, 0x_54, 0x_02, 0x_01, 0x_06, 0x_D7, 0x_7A, 0x_69, 0x_5A, 0x_07, 0x_C5, 0x_15,
		0x_6A, 0x_41, 0x_0E, 0x_1B, 0x_2A, 0x_EB, 0x_E3, 0x_6E, 0x_36, 0x_EF, 0x_3A, 0x_55, 0x_F1, 0x_6D, 0x_D1,
		0x_E6, 0x_98, 0x_AB, 0x_C3, 0x_AF, 0x_25, 0x_A7, 0x_34, 0x_50, 0x_8A, 0x_4D, 0x_AD, 0x_4B, 0x_1E, 0x_86,
		0x_AA, 0x_1D, 0x_CD, 0x_B2, 0x_C9, 0x_D9, 0x_1F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_2
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_C8, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_C8,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_3
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_82, 0x_B8, 0x_1B, 0x_B8, 0x_B8, 0x_1B, 0x_B8, 0x_1B, 0x_1B, 0x_1B, 0x_B8, 0x_1B, 0x_B8, 0x_B8,
		0x_82, 0x_1B, 0x_82, 0x_1B, 0x_B8, 0x_82, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_B8, 0x_1B,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_5
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_6C, 0x_A9, 0x_A9, 0x_DE, 0x_DE, 0x_99, 0x_99, 0x_A9, 0x_DE, 0x_A9, 0x_DE, 0x_F6,
		0x_DE, 0x_A9,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_6C, 0x_99, 0x_A9, 0x_DE,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_7
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD,
		0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_15, 0x_DD, 0x_75, 0x_15, 0x_FE, 0x_75, 0x_AC, 0x_15, 0x_15, 0x_15,
		0x_D1, 0x_AC,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_15, 0x_AC, 0x_FE, 0x_75, 0x_49, 0x_D1,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_11
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_26, 0x_CE,
		0x_15, 0x_15, 0x_15, 0x_CE, 0x_15, 0x_F4, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_23, 0x_15, 0x_EE, 0x_13, 0x_FA, 0x_AA, 0x_EA, 0x_F4, 0x_C4, 0x_26,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_13
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_95, 0x_95, 0x_95, 0x_95, 0x_95, 0x_63, 0x_93, 0x_63, 0x_6F, 0x_80, 0x_B5, 0x_80, 0x_80, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_95, 0x_38, 0x_63, 0x_EF, 0x_B5, 0x_88, 0x_3B, 0x_A9, 0x_93, 0x_3E, 0x_80, 0x_6F, 0x_EA,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_19
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA,
		0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA,
		0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_74, 0x_F4, 0x_06, 0x_75, 0x_F4, 0x_47, 0x_30, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_D5, 0x_74, 0x_30, 0x_2F, 0x_75, 0x_44, 0x_F4, 0x_DC, 0x_34, 0x_4B, 0x_1F, 0x_06, 0x_A4, 0x_1D,
		0x_4C, 0x_9A, 0x_47, 0x_DF,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_42
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_1C, 0x_61, 0x_B5, 0x_D0, 0x_84, 0x_6F, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_7E, 0x_BE, 0x_4F, 0x_A7, 0x_D0, 0x_FF, 0x_88, 0x_50, 0x_C8, 0x_11, 0x_D6, 0x_51, 0x_43, 0x_63,
		0x_6F, 0x_61, 0x_86, 0x_B5, 0x_5E, 0x_6E, 0x_D3, 0x_23, 0x_E4, 0x_84, 0x_8B, 0x_A6, 0x_97, 0x_82, 0x_9F,
		0x_3B, 0x_7D, 0x_75, 0x_90, 0x_A0, 0x_28, 0x_AF, 0x_FE, 0x_91, 0x_A2, 0x_3E, 0x_4E,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_73
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73,
		0x_73, 0x_73, 0x_73, 0x_73, 0x_57, 0x_F9, 0x_51, 0x_24, 0x_32, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_57, 0x_F9, 0x_9E, 0x_F1, 0x_79, 0x_1A, 0x_C5, 0x_1E, 0x_59, 0x_B0, 0x_5D, 0x_BA, 0x_AD, 0x_39,
		0x_B4, 0x_82, 0x_8A, 0x_DE, 0x_36, 0x_24, 0x_18, 0x_FB, 0x_15, 0x_D5, 0x_3E, 0x_80, 0x_1C, 0x_47, 0x_7C,
		0x_27, 0x_B8, 0x_76, 0x_34, 0x_4E, 0x_6C, 0x_72, 0x_01, 0x_69, 0x_91, 0x_71, 0x_C7, 0x_7F, 0x_08, 0x_32,
		0x_51, 0x_7E, 0x_BF, 0x_5A, 0x_11, 0x_E1, 0x_37, 0x_D6, 0x_44, 0x_A8, 0x_A6, 0x_5E, 0x_B5, 0x_4D, 0x_FF,
		0x_48, 0x_70, 0x_CF, 0x_8E, 0x_92, 0x_E6, 0x_FE, 0x_E9, 0x_D4, 0x_9D, 0x_F6, 0x_A0, 0x_8B,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_113
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_AE, 0x_3F, 0x_EC, 0x_FF, 0x_4E,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_9E, 0x_46, 0x_5B, 0x_87, 0x_A2, 0x_9C, 0x_84, 0x_4E, 0x_F3, 0x_68, 0x_8C, 0x_38, 0x_AE, 0x_4B,
		0x_80, 0x_75, 0x_27, 0x_2F, 0x_3F, 0x_BC, 0x_97, 0x_93, 0x_B5, 0x_E6, 0x_89, 0x_90, 0x_78, 0x_BB, 0x_DB,
		0x_59, 0x_08, 0x_23, 0x_07, 0x_EF, 0x_EC, 0x_92, 0x_DE, 0x_E5, 0x_18, 0x_35, 0x_8E, 0x_5D, 0x_D8, 0x_A6,
		0x_6C, 0x_C9, 0x_A4, 0x_AC, 0x_C3, 0x_CD, 0x_04, 0x_03, 0x_FF, 0x_67, 0x_C0, 0x_F1, 0x_F0, 0x_7C, 0x_5E,
		0x_B6, 0x_8D, 0x_6A, 0x_70, 0x_98, 0x_9B, 0x_53, 0x_1D, 0x_BA, 0x_39, 0x_DA, 0x_C4, 0x_D0, 0x_12, 0x_E3,
		0x_7D, 0x_19, 0x_AB, 0x_C1, 0x_8B, 0x_1B, 0x_94, 0x_FE, 0x_29, 0x_77, 0x_26, 0x_52, 0x_7A, 0x_F6, 0x_C6,
		0x_49, 0x_CA, 0x_99, 0x_83, 0x_48, 0x_66, 0x_B4, 0x_0F, 0x_A5, 0x_FA, 0x_2E, 0x_50, 0x_9F, 0x_DF, 0x_06,
		0x_65, 0x_A3, 0x_05, 0x_31, 0x_D6, 0x_3B, 0x_10, 0x_01,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_193
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_D7, 0x_B0, 0x_C7, 0x_3E, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_D7, 0x_7F, 0x_D6, 0x_0E, 0x_8F, 0x_B4, 0x_48, 0x_C4, 0x_BB, 0x_61, 0x_71, 0x_CC, 0x_4C, 0x_17,
		0x_45, 0x_9D, 0x_55, 0x_40, 0x_06, 0x_E8, 0x_BC, 0x_3E, 0x_7C, 0x_12, 0x_7B, 0x_41, 0x_5E, 0x_1A, 0x_82,
		0x_A3, 0x_A7, 0x_59, 0x_94, 0x_F8, 0x_70, 0x_57, 0x_C8, 0x_97, 0x_74, 0x_24, 0x_E5, 0x_13, 0x_EC, 0x_58,
		0x_51, 0x_60, 0x_19, 0x_D5, 0x_7A, 0x_B7, 0x_FF, 0x_F1, 0x_85, 0x_64, 0x_26, 0x_39, 0x_53, 0x_EF, 0x_16,
		0x_BD, 0x_91, 0x_C9, 0x_D1, 0x_F3, 0x_80, 0x_B9, 0x_FA, 0x_1C, 0x_E9, 0x_84, 0x_49, 0x_9C, 0x_3C, 0x_21,
		0x_11, 0x_1D, 0x_8B, 0x_96, 0x_76, 0x_BE, 0x_A5, 0x_E1, 0x_5A, 0x_CA, 0x_F4, 0x_F5, 0x_89, 0x_56, 0x_34,
		0x_A2, 0x_C0, 0x_1F, 0x_DE, 0x_27, 0x_B3, 0x_E3, 0x_BF, 0x_14, 0x_EB, 0x_52, 0x_8D, 0x_6B, 0x_28, 0x_D0,
		0x_B0, 0x_78, 0x_1E, 0x_92, 0x_D3, 0x_7E, 0x_BA, 0x_A8, 0x_3F, 0x_DD, 0x_C2, 0x_73, 0x_C6, 0x_9B, 0x_8C,
		0x_72, 0x_3A, 0x_01, 0x_98, 0x_E0, 0x_25, 0x_AF, 0x_88, 0x_79, 0x_2C, 0x_AB, 0x_69, 0x_B8, 0x_D4, 0x_9E,
		0x_6D, 0x_F6, 0x_75, 0x_C7, 0x_6C, 0x_0F, 0x_87, 0x_5C, 0x_FC, 0x_AE, 0x_CD, 0x_22, 0x_AC, 0x_23, 0x_47,
		0x_E6, 0x_86, 0x_46, 0x_42, 0x_54, 0x_4A, 0x_A4, 0x_30, 0x_FB, 0x_E7, 0x_F0, 0x_7D, 0x_4E, 0x_08, 0x_D8,
		0x_32, 0x_03, 0x_CF, 0x_5B, 0x_DF, 0x_4F, 0x_66, 0x_B1, 0x_A9, 0x_B2, 0x_1B, 0x_29, 0x_A6, 0x_35, 0x_9A,
		0x_31, 0x_05, 0x_6A, 0x_D2, 0x_63, 0x_DC, 0x_4D, 0x_18, 0x_A0, 0x_95, 0x_FE, 0x_3B, 0x_5D,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_247
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_1E, 0x_DB, 0x_2A, 0x_39, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_A0, 0x_4A, 0x_FA, 0x_E6, 0x_33, 0x_F9, 0x_2E, 0x_03, 0x_01, 0x_F0, 0x_E3, 0x_41, 0x_CC, 0x_E7,
		0x_53, 0x_4B, 0x_31, 0x_37, 0x_4E, 0x_1D, 0x_DD, 0x_E8, 0x_85, 0x_49, 0x_B5, 0x_19, 0x_E5, 0x_F8, 0x_CB,
		0x_B8, 0x_DC, 0x_BD, 0x_57, 0x_9A, 0x_9D, 0x_73, 0x_ED, 0x_C1, 0x_6C, 0x_9B, 0x_3E, 0x_9C, 0x_DF, 0x_2C,
		0x_D1, 0x_32, 0x_C9, 0x_24, 0x_FF, 0x_23, 0x_9F, 0x_17, 0x_26, 0x_11, 0x_28, 0x_14, 0x_90, 0x_9E, 0x_EF,
		0x_3D, 0x_C7, 0x_F7, 0x_93, 0x_A2, 0x_62, 0x_6E, 0x_EA, 0x_D9, 0x_B3, 0x_D0, 0x_66, 0x_4C, 0x_16, 0x_7B,
		0x_52, 0x_29, 0x_F1, 0x_22, 0x_C0, 0x_EB, 0x_55, 0x_5F, 0x_E1, 0x_3B, 0x_F5, 0x_96, 0x_AC, 0x_94, 0x_CF,
		0x_C4, 0x_58, 0x_44, 0x_1C, 0x_5A, 0x_12, 0x_A6, 0x_36, 0x_E2, 0x_1A, 0x_25, 0x_C3, 0x_D6, 0x_2F, 0x_6D,
		0x_A5, 0x_1B, 0x_3A, 0x_A7, 0x_6A, 0x_47, 0x_08, 0x_39, 0x_E4, 0x_06, 0x_5D, 0x_E9, 0x_E0, 0x_64, 0x_35,
		0x_F4, 0x_8D, 0x_3C, 0x_A4, 0x_B2, 0x_2A, 0x_FB, 0x_FE, 0x_8A, 0x_7A, 0x_68, 0x_88, 0x_AD, 0x_D8, 0x_54,
		0x_AA, 0x_8C, 0x_4D, 0x_91, 0x_48, 0x_5C, 0x_1F, 0x_DB, 0x_7C, 0x_40, 0x_B7, 0x_0E, 0x_34, 0x_15, 0x_18,
		0x_B6, 0x_CA, 0x_BC, 0x_77, 0x_04, 0x_B0, 0x_87, 0x_BF, 0x_99, 0x_5E, 0x_76, 0x_EE, 0x_D2, 0x_D4, 0x_7F,
		0x_83, 0x_92, 0x_5B, 0x_C8, 0x_71, 0x_30, 0x_4F, 0x_D5, 0x_43, 0x_AF, 0x_F6, 0x_72, 0x_86, 0x_80, 0x_8B,
		0x_CD, 0x_BA, 0x_B1, 0x_98, 0x_F2, 0x_D7, 0x_DE, 0x_0F, 0x_89, 0x_AE, 0x_95, 0x_7D, 0x_8F, 0x_79, 0x_7E,
		0x_45, 0x_A8, 0x_84, 0x_6F, 0x_D3, 0x_65, 0x_C2, 0x_FD, 0x_AB, 0x_F3, 0x_50, 0x_CE, 0x_63, 0x_07, 0x_BE,
		0x_60, 0x_3F, 0x_51, 0x_78, 0x_A9, 0x_82, 0x_C5, 0x_A1, 0x_81, 0x_61, 0x_FC, 0x_6B, 0x_05, 0x_C6, 0x_02,
		0x_BB, 0x_38, 0x_42, 0x_46, 0x_A3, 0x_75, 0x_21, 0x_10, 0x_59, 0x_13, 0x_27, 0x_EC, 0x_B4, 0x_70, 0x_74,
		0x_97, 0x_69, 0x_8E, 0x_67, 0x_B9, 0x_DA, 0x_56,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_2_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_6F, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88,
		0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88,
		0x_88, 0x_88, 0x_88, 0x_4E, 0x_88, 0x_6F, 0x_88, 0x_88, 0x_6F, 0x_88, 0x_88, 0x_88, 0x_6F, 0x_88, 0x_88,
		0x_6F, 0x_88, 0x_88, 0x_6F, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_6F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_3_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B7, 0x_7F, 0x_B7, 0x_B7, 0x_7F, 0x_B7, 0x_7F, 0x_7F, 0x_7F, 0x_B7, 0x_7F, 0x_B7, 0x_B7, 0x_B3,
		0x_7F, 0x_B3, 0x_7F, 0x_B7, 0x_B3, 0x_7F, 0x_23, 0x_B3, 0x_B7, 0x_B3, 0x_7F, 0x_7F, 0x_B3, 0x_B3, 0x_B7,
		0x_7F, 0x_B7, 0x_B7, 0x_B7, 0x_7F, 0x_7F, 0x_B3, 0x_B3, 0x_B3, 0x_B7, 0x_B3, 0x_7F, 0x_B3, 0x_B3, 0x_7F,
		0x_B3, 0x_B7, 0x_B7, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_B7, 0x_7F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_5_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_A8, 0x_66, 0x_66, 0x_71, 0x_71, 0x_14, 0x_14, 0x_66, 0x_71, 0x_66, 0x_71, 0x_16, 0x_71, 0x_66,
		0x_21, 0x_66, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_A8, 0x_14, 0x_66, 0x_71,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_7_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_43, 0x_6D, 0x_E5, 0x_43, 0x_BC, 0x_E5, 0x_8D, 0x_43, 0x_43, 0x_43, 0x_FB, 0x_8D, 0x_A9, 0x_8D,
		0x_8D, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_43, 0x_8D, 0x_BC, 0x_E5, 0x_B3, 0x_FB,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_11_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_34, 0x_4F, 0x_59, 0x_59, 0x_59, 0x_4F, 0x_59, 0x_4B, 0x_59, 0x_53, 0x_34, 0x_50, 0x_E4, 0x_7A,
		0x_E4, 0x_5D, 0x_59, 0x_5D, 0x_59, 0x_E4, 0x_4B, 0x_50, 0x_E4, 0x_4B, 0x_89, 0x_59, 0x_4B, 0x_D0, 0x_E5,
		0x_50, 0x_E5, 0x_59, 0x_4B, 0x_7A, 0x_89, 0x_34, 0x_5D, 0x_7A, 0x_E5, 0x_5D, 0x_34, 0x_50, 0x_50, 0x_34,
		0x_34, 0x_D0, 0x_89, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_50, 0x_59, 0x_5D, 0x_89, 0x_D0, 0x_7A, 0x_E4, 0x_4B, 0x_E5, 0x_34,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_13_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_3C, 0x_9B, 0x_3C, 0x_E9, 0x_55, 0x_82, 0x_55, 0x_55, 0x_E9, 0x_EE, 0x_E9, 0x_C4, 0x_3C, 0x_99,
		0x_9B, 0x_73, 0x_9B, 0x_E9, 0x_6B, 0x_55, 0x_3C, 0x_1E, 0x_78, 0x_3A, 0x_E9, 0x_E9, 0x_6B, 0x_3C, 0x_9B,
		0x_82, 0x_73, 0x_6B, 0x_3A, 0x_C4, 0x_E9, 0x_3C, 0x_3A, 0x_73, 0x_3C, 0x_3C, 0x_E9, 0x_55, 0x_FD, 0x_FD,
		0x_6B, 0x_6B, 0x_55, 0x_55, 0x_E9, 0x_1E, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_6B, 0x_3C, 0x_1E, 0x_82, 0x_3A, 0x_73, 0x_FD, 0x_9B, 0x_C4, 0x_55, 0x_E9, 0x_78,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_19_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_CA, 0x_B5, 0x_8B, 0x_58, 0x_B5, 0x_E4, 0x_46, 0x_46, 0x_70, 0x_A4, 0x_72, 0x_A4, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_C8, 0x_CA, 0x_46, 0x_72, 0x_58, 0x_DC, 0x_B5, 0x_F8, 0x_33, 0x_62, 0x_56, 0x_8B, 0x_CE, 0x_3D,
		0x_D9, 0x_E0, 0x_E4, 0x_64,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_42_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_58, 0x_59, 0x_81, 0x_FD, 0x_6D, 0x_FC, 0x_B9, 0x_41, 0x_4B, 0x_4B, 0x_A5, 0x_59, 0x_69, 0x_58,
		0x_30, 0x_F3, 0x_40, 0x_30, 0x_1C, 0x_E5, 0x_40, 0x_EE, 0x_F5, 0x_4B, 0x_3B, 0x_1C, 0x_FC, 0x_6B, 0x_E8,
		0x_40, 0x_3B, 0x_CA, 0x_CE, 0x_39, 0x_D7, 0x_41, 0x_59, 0x_75, 0x_AE, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_48, 0x_FC, 0x_8C, 0x_47, 0x_81, 0x_A5, 0x_54, 0x_CA, 0x_B0, 0x_39, 0x_CE, 0x_C3, 0x_1C, 0x_AE,
		0x_6D, 0x_58, 0x_6B, 0x_59, 0x_41, 0x_E6, 0x_E5, 0x_F5, 0x_E8, 0x_FD, 0x_3B, 0x_92, 0x_69, 0x_40, 0x_EE,
		0x_75, 0x_30, 0x_97, 0x_D7, 0x_F3, 0x_D6, 0x_23, 0x_5E, 0x_5B, 0x_F6, 0x_4B, 0x_5F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_73_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_37, 0x_38, 0x_C4, 0x_AE, 0x_02, 0x_76, 0x_1F, 0x_D1, 0x_B5, 0x_15, 0x_1B, 0x_AE, 0x_E3, 0x_CF,
		0x_F8, 0x_5C, 0x_CF, 0x_D1, 0x_2E, 0x_D6, 0x_3E, 0x_F8, 0x_C0, 0x_88, 0x_19, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_E8, 0x_37, 0x_38, 0x_DF, 0x_EB, 0x_1B, 0x_D6, 0x_D7, 0x_C0, 0x_68, 0x_6D, 0x_BB, 0x_F8, 0x_CF, 0x_8C,
		0x_63, 0x_76, 0x_81, 0x_7D, 0x_18, 0x_AE, 0x_B7, 0x_3C, 0x_58, 0x_61, 0x_21, 0x_53, 0x_DB, 0x_94, 0x_F6,
		0x_EF, 0x_2E, 0x_41, 0x_CA, 0x_9D, 0x_3E, 0x_B5, 0x_95, 0x_43, 0x_F7, 0x_9F, 0x_0E, 0x_E3, 0x_5C, 0x_02,
		0x_C4, 0x_E6, 0x_19, 0x_52, 0x_D1, 0x_36, 0x_B9, 0x_79, 0x_67, 0x_06, 0x_88, 0x_F1, 0x_A4, 0x_2A, 0x_9E,
		0x_35, 0x_E7, 0x_C9, 0x_2C, 0x_50, 0x_E5, 0x_15, 0x_D9, 0x_CC, 0x_E1, 0x_4D, 0x_73, 0x_E0,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_113_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F9, 0x_D2, 0x_EC, 0x_E4, 0x_A6, 0x_50, 0x_BB, 0x_3A, 0x_ED, 0x_11, 0x_92, 0x_F3, 0x_8E, 0x_3B,
		0x_93, 0x_5C, 0x_FD, 0x_8B, 0x_11, 0x_52, 0x_AF, 0x_87, 0x_75, 0x_B4, 0x_9A, 0x_D6, 0x_EE, 0x_5A, 0x_35,
		0x_72, 0x_55, 0x_ED, 0x_90, 0x_33, 0x_9A, 0x_2A, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_90, 0x_42, 0x_9B, 0x_CB, 0x_66, 0x_FE, 0x_BB, 0x_A6, 0x_1F, 0x_B7, 0x_EB, 0x_46, 0x_F9, 0x_E2,
		0x_6D, 0x_3D, 0x_B4, 0x_EE, 0x_D2, 0x_BA, 0x_35, 0x_AE, 0x_DA, 0x_7E, 0x_55, 0x_82, 0x_A8, 0x_92, 0x_28,
		0x_C1, 0x_65, 0x_34, 0x_32, 0x_33, 0x_EC, 0x_CA, 0x_AF, 0x_A9, 0x_1E, 0x_D6, 0x_8E, 0x_97, 0x_3E, 0x_F4,
		0x_3F, 0x_5A, 0x_C5, 0x_D4, 0x_F3, 0x_52, 0x_8B, 0x_23, 0x_E4, 0x_0E, 0x_93, 0x_6B, 0x_75, 0x_98, 0x_83,
		0x_C4, 0x_DE, 0x_67, 0x_A2, 0x_C9, 0x_FD, 0x_3A, 0x_3B, 0x_BD, 0x_9C, 0x_95, 0x_68, 0x_5F, 0x_06, 0x_B6,
		0x_41, 0x_5E, 0x_11, 0x_7F, 0x_96, 0x_61, 0x_B8, 0x_8A, 0x_59, 0x_17, 0x_9F, 0x_2E, 0x_C8, 0x_2A, 0x_C0,
		0x_87, 0x_ED, 0x_51, 0x_47, 0x_CE, 0x_E5, 0x_5C, 0x_13, 0x_F2, 0x_72, 0x_D3, 0x_D9, 0x_79, 0x_B1, 0x_B2,
		0x_24, 0x_E3, 0x_BF, 0x_2F, 0x_9A, 0x_BC, 0x_E6, 0x_78,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_193_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_78, 0x_5F, 0x_FC, 0x_D4, 0x_9D, 0x_41, 0x_A7, 0x_10, 0x_F6, 0x_75, 0x_8E, 0x_A9, 0x_DB, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_78, 0x_B2, 0x_07, 0x_DF, 0x_55, 0x_7D, 0x_B8, 0x_54, 0x_DE, 0x_1F, 0x_82, 0x_94, 0x_F8, 0x_BA,
		0x_2A, 0x_C7, 0x_32, 0x_12, 0x_15, 0x_FA, 0x_34, 0x_D4, 0x_DC, 0x_1C, 0x_69, 0x_D3, 0x_67, 0x_1A, 0x_6E,
		0x_5E, 0x_C1, 0x_5A, 0x_E3, 0x_13, 0x_C5, 0x_6C, 0x_88, 0x_4F, 0x_5C, 0x_28, 0x_3E, 0x_08, 0x_16, 0x_5D,
		0x_29, 0x_E5, 0x_B4, 0x_18, 0x_CC, 0x_95, 0x_3C, 0x_3A, 0x_A3, 0x_9D, 0x_CA, 0x_53, 0x_FD, 0x_C6, 0x_61,
		0x_D9, 0x_9A, 0x_40, 0x_0E, 0x_64, 0x_97, 0x_D8, 0x_8B, 0x_D0, 0x_06, 0x_23, 0x_4D, 0x_83, 0x_D7, 0x_6B,
		0x_A4, 0x_B6, 0x_4B, 0x_5B, 0x_96, 0x_A1, 0x_92, 0x_4A, 0x_1B, 0x_81, 0x_D6, 0x_56, 0x_22, 0x_3B, 0x_6F,
		0x_2E, 0x_8F, 0x_8C, 0x_72, 0x_14, 0x_B0, 0x_E0, 0x_C8, 0x_3D, 0x_BF, 0x_21, 0x_DB, 0x_35, 0x_D5, 0x_04,
		0x_5F, 0x_57, 0x_86, 0x_EC, 0x_79, 0x_AA, 0x_A9, 0x_68, 0x_75, 0x_E1, 0x_02, 0x_A7, 0x_84, 0x_A0, 0x_1D,
		0x_D2, 0x_AF, 0x_76, 0x_7A, 0x_7F, 0x_2C, 0x_51, 0x_EF, 0x_31, 0x_A2, 0x_10, 0x_7B, 0x_44, 0x_F7, 0x_8E,
		0x_F3, 0x_7E, 0x_49, 0x_FC, 0x_01, 0x_0F, 0x_B3, 0x_BC, 0x_C9, 0x_C3, 0x_65, 0x_A6, 0x_E8, 0x_93, 0x_9E,
		0x_F1, 0x_CD, 0x_CB, 0x_39, 0x_AB, 0x_27, 0x_FB, 0x_A8, 0x_CF, 0x_37, 0x_BE, 0x_99, 0x_91, 0x_F6, 0x_19,
		0x_F4, 0x_17, 0x_43, 0x_98, 0x_11, 0x_AD, 0x_E2, 0x_DA, 0x_25, 0x_C2, 0x_A5, 0x_8D, 0x_BB, 0x_60, 0x_DD,
		0x_E6, 0x_ED, 0x_EE, 0x_BD, 0x_CE, 0x_F0, 0x_C0, 0x_03, 0x_38, 0x_EB, 0x_85, 0x_D1, 0x_71,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_minus_2_147_483_648_in_base_247_and_insignificant_bytes
#[test]
fn s_has_minus_2_147_483_648_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_5A, 0x_13, 0x_5D, 0x_B0, 0x_0C, 0x_1F, 0x_22, 0x_23, 0x_6E, 0x_D0, 0x_2E, 0x_14, 0x_61, 0x_72,
		0x_E2, 0x_BC, 0x_A5, 0x_26, 0x_1F, 0x_99, 0x_33, 0x_A9, 0x_85, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_EB, 0x_3C, 0x_27, 0x_84, 0x_2C, 0x_CD, 0x_72, 0x_92, 0x_C4, 0x_86, 0x_F5, 0x_FA, 0x_85, 0x_BB,
		0x_A9, 0x_DA, 0x_77, 0x_EC, 0x_61, 0x_E4, 0x_40, 0x_66, 0x_70, 0x_94, 0x_33, 0x_55, 0x_97, 0x_6C, 0x_2E,
		0x_F8, 0x_38, 0x_46, 0x_F0, 0x_19, 0x_FD, 0x_78, 0x_87, 0x_71, 0x_1C, 0x_47, 0x_26, 0x_3B, 0x_B3, 0x_9C,
		0x_AC, 0x_90, 0x_E6, 0x_6F, 0x_07, 0x_48, 0x_B4, 0x_E8, 0x_22, 0x_CB, 0x_B6, 0x_6A, 0x_08, 0x_F6, 0x_8A,
		0x_51, 0x_E7, 0x_BF, 0x_79, 0x_A2, 0x_C6, 0x_11, 0x_D9, 0x_EA, 0x_7E, 0x_C5, 0x_68, 0x_EE, 0x_A7, 0x_F7,
		0x_91, 0x_AE, 0x_12, 0x_1D, 0x_0E, 0x_73, 0x_18, 0x_2F, 0x_A0, 0x_C3, 0x_28, 0x_C1, 0x_BE, 0x_B2, 0x_D2,
		0x_50, 0x_49, 0x_7D, 0x_95, 0x_3F, 0x_03, 0x_75, 0x_A3, 0x_8C, 0x_DE, 0x_B5, 0x_21, 0x_F2, 0x_17, 0x_9F,
		0x_DF, 0x_64, 0x_01, 0x_16, 0x_25, 0x_FC, 0x_80, 0x_5D, 0x_41, 0x_76, 0x_7C, 0x_14, 0x_52, 0x_7B, 0x_1B,
		0x_3D, 0x_4A, 0x_A1, 0x_62, 0x_9B, 0x_13, 0x_89, 0x_D8, 0x_34, 0x_EF, 0x_35, 0x_DD, 0x_D5, 0x_DC, 0x_4F,
		0x_81, 0x_30, 0x_BD, 0x_83, 0x_AA, 0x_43, 0x_FB, 0x_5A, 0x_4C, 0x_D0, 0x_D4, 0x_9E, 0x_4D, 0x_67, 0x_6B,
		0x_F4, 0x_0F, 0x_9D, 0x_F9, 0x_F3, 0x_CC, 0x_29, 0x_AF, 0x_31, 0x_8E, 0x_FF, 0x_D3, 0x_C2, 0x_F1, 0x_A5,
		0x_D1, 0x_E9, 0x_45, 0x_AB, 0x_5E, 0x_A4, 0x_8F, 0x_8B, 0x_3E, 0x_32, 0x_1A, 0x_98, 0x_E1, 0x_CF, 0x_C7,
		0x_DB, 0x_44, 0x_E3, 0x_63, 0x_1E, 0x_C8, 0x_6E, 0x_8D, 0x_23, 0x_CE, 0x_69, 0x_C9, 0x_5B, 0x_B0, 0x_24,
		0x_93, 0x_AD, 0x_06, 0x_02, 0x_C0, 0x_57, 0x_4B, 0x_6D, 0x_58, 0x_1F, 0x_B9, 0x_65, 0x_15, 0x_04, 0x_3A,
		0x_FE, 0x_B1, 0x_59, 0x_5F, 0x_99, 0x_D7, 0x_37, 0x_36, 0x_42, 0x_D6, 0x_E0, 0x_BC, 0x_60, 0x_2A, 0x_A8,
		0x_B7, 0x_56, 0x_96, 0x_5C, 0x_A6, 0x_05, 0x_82, 0x_E5, 0x_53, 0x_ED, 0x_7F, 0x_10, 0x_54, 0x_B8, 0x_39,
		0x_88, 0x_7A, 0x_CA, 0x_4E, 0x_74, 0x_9A, 0x_E2,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_09,
		0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_12,
		0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74,
		0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74,
		0x_74,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_12,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_0B,
		0x_20, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0C,
		0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_EB, 0x_1A, 0x_EB, 0x_EB, 0x_1A, 0x_EB, 0x_1A, 0x_1A, 0x_1A, 0x_EB, 0x_1A, 0x_EB, 0x_EB,
		0x_28, 0x_1A, 0x_28, 0x_1A, 0x_EB, 0x_28, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_EB, 0x_1A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_5() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0A,
		0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_63, 0x_5F, 0x_5F, 0x_74, 0x_74, 0x_23, 0x_23, 0x_5F, 0x_74,
		0x_5F, 0x_74, 0x_2F, 0x_74, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_63, 0x_23, 0x_5F, 0x_74,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0C,
		0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_4B, 0x_56, 0x_33, 0x_4B, 0x_C3, 0x_33, 0x_61, 0x_4B, 0x_4B,
		0x_4B, 0x_66, 0x_61,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_4B, 0x_61, 0x_C3, 0x_33, 0x_2C, 0x_66,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_11() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0A,
		0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0A,
		0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_56, 0x_0E, 0x_59, 0x_59, 0x_59, 0x_0E, 0x_59, 0x_F4, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_42, 0x_59, 0x_CA, 0x_AE, 0x_8F, 0x_F5, 0x_EC, 0x_F4, 0x_1E, 0x_56,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_20,
		0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_15, 0x_86, 0x_15, 0x_3D, 0x_F6, 0x_10, 0x_F6, 0x_F6, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_53, 0x_15, 0x_91, 0x_10, 0x_57, 0x_9A, 0x_F7, 0x_86, 0x_DA, 0x_F6, 0x_3D, 0x_9C,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_B8, 0x_0E, 0x_80, 0x_FC, 0x_0E, 0x_E3, 0x_29,
		0x_29,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_F7, 0x_B8, 0x_29, 0x_02, 0x_FC, 0x_17, 0x_0E, 0x_23, 0x_8F, 0x_D8, 0x_CD, 0x_80, 0x_A3, 0x_DC,
		0x_92, 0x_4E, 0x_E3, 0x_47,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_CB,
		0x_BC, 0x_AF, 0x_24, 0x_ED, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_65, 0x_F8, 0x_F7, 0x_E6, 0x_AF, 0x_91, 0x_3B, 0x_02, 0x_70, 0x_DB, 0x_E7, 0x_27, 0x_D4, 0x_B9,
		0x_ED, 0x_CB, 0x_BE, 0x_BC, 0x_7E, 0x_A8, 0x_FD, 0x_4B, 0x_6D, 0x_24, 0x_EA, 0x_DF, 0x_43, 0x_9C, 0x_F6,
		0x_10, 0x_1D, 0x_13, 0x_F4, 0x_A3, 0x_01, 0x_94, 0x_E9, 0x_C6, 0x_52, 0x_E5, 0x_F3,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_09,
		0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_2B, 0x_2D, 0x_FE, 0x_5F, 0x_05, 0x_D5, 0x_9B, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_FE, 0x_5F, 0x_83, 0x_3E, 0x_2E, 0x_8D, 0x_8C, 0x_EE, 0x_48, 0x_86, 0x_C9, 0x_96, 0x_9F, 0x_F8,
		0x_2C, 0x_19, 0x_FF, 0x_9E, 0x_B7, 0x_D5, 0x_CE, 0x_95, 0x_A5, 0x_BF, 0x_60, 0x_21, 0x_67, 0x_80, 0x_63,
		0x_8A, 0x_A7, 0x_17, 0x_88, 0x_FB, 0x_71, 0x_10, 0x_3D, 0x_06, 0x_93, 0x_40, 0x_74, 0x_8F, 0x_D8, 0x_9B,
		0x_05, 0x_94, 0x_1E, 0x_62, 0x_E5, 0x_41, 0x_23, 0x_26, 0x_CA, 0x_04, 0x_6C, 0x_FD, 0x_2A, 0x_45, 0x_B8,
		0x_77, 0x_A1, 0x_99, 0x_AA, 0x_CF, 0x_C0, 0x_14, 0x_59, 0x_BB, 0x_AE, 0x_7B, 0x_54, 0x_A9,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_113() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0D,
		0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_20,
		0x_0A, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_50, 0x_DF, 0x_7B, 0x_4C, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_7F, 0x_BF, 0x_B7, 0x_80, 0x_BD, 0x_69, 0x_EF, 0x_F4, 0x_82, 0x_DA, 0x_84, 0x_6F, 0x_EA, 0x_50, 0x_8C,
		0x_A6, 0x_AE, 0x_62, 0x_2A, 0x_DF, 0x_65, 0x_22, 0x_86, 0x_33, 0x_55, 0x_DE, 0x_6D, 0x_7D, 0x_9A, 0x_FB,
		0x_15, 0x_25, 0x_6A, 0x_E6, 0x_45, 0x_7B, 0x_70, 0x_92, 0x_FE, 0x_4B, 0x_C6, 0x_01, 0x_53, 0x_68, 0x_2C,
		0x_64, 0x_5F, 0x_4A, 0x_8E, 0x_C4, 0x_7A, 0x_13, 0x_87, 0x_4C, 0x_49, 0x_94, 0x_C9, 0x_D0, 0x_AA, 0x_E0,
		0x_1C, 0x_1A, 0x_FA, 0x_F3, 0x_95, 0x_E8, 0x_9E, 0x_C0, 0x_81, 0x_6B, 0x_A5, 0x_78, 0x_27, 0x_24, 0x_A8,
		0x_59, 0x_5C, 0x_4E, 0x_46, 0x_48, 0x_16, 0x_18, 0x_17, 0x_2E, 0x_A1, 0x_63, 0x_D7, 0x_79, 0x_5B, 0x_30,
		0x_56, 0x_21, 0x_C1, 0x_5A, 0x_FF, 0x_F1, 0x_C3, 0x_39, 0x_31, 0x_F6, 0x_98, 0x_73, 0x_AB, 0x_10, 0x_ED,
		0x_B2, 0x_35, 0x_EE, 0x_52, 0x_CC, 0x_CD, 0x_8B, 0x_90,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_193() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0D,
		0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0B,
		0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_A3,
		0x_AE, 0x_D6, 0x_5D, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_3A, 0x_A3, 0x_12, 0x_DD, 0x_03, 0x_45, 0x_ED, 0x_6E, 0x_A2, 0x_E8, 0x_B7, 0x_7A, 0x_F7, 0x_7C, 0x_80,
		0x_6D, 0x_8D, 0x_1E, 0x_90, 0x_5A, 0x_DA, 0x_15, 0x_5D, 0x_C0, 0x_BB, 0x_EB, 0x_CD, 0x_92, 0x_CE, 0x_EF,
		0x_69, 0x_2A, 0x_17, 0x_4B, 0x_9D, 0x_85, 0x_04, 0x_19, 0x_51, 0x_41, 0x_55, 0x_BD, 0x_26, 0x_48, 0x_87,
		0x_7F, 0x_54, 0x_D9, 0x_FE, 0x_C4, 0x_40, 0x_CB, 0x_6C, 0x_FF, 0x_D5, 0x_A5, 0x_E0, 0x_89, 0x_E1, 0x_FC,
		0x_8F, 0x_2C, 0x_D1, 0x_9A, 0x_8A, 0x_5F, 0x_7D, 0x_29, 0x_39, 0x_C5, 0x_1A, 0x_23, 0x_B1, 0x_37, 0x_01,
		0x_A1, 0x_91, 0x_11, 0x_3D, 0x_76, 0x_86, 0x_8E, 0x_BA, 0x_4C, 0x_46, 0x_62, 0x_72, 0x_32, 0x_AF, 0x_67,
		0x_E9, 0x_2E, 0x_98, 0x_E2, 0x_65, 0x_DB, 0x_6F, 0x_22, 0x_9C, 0x_C8, 0x_73, 0x_42, 0x_B6, 0x_7E, 0x_21,
		0x_AE, 0x_E7, 0x_EE, 0x_A9, 0x_AC, 0x_1C, 0x_56, 0x_30, 0x_70, 0x_A8, 0x_FB, 0x_5E, 0x_74, 0x_CA, 0x_FD,
		0x_77, 0x_63, 0x_9F, 0x_82, 0x_3C, 0x_D2, 0x_64, 0x_AA, 0x_C2, 0x_58, 0x_A7, 0x_47, 0x_CF, 0x_A4, 0x_0E,
		0x_E6, 0x_50, 0x_F5, 0x_D6, 0x_84, 0x_DE, 0x_A0, 0x_8B, 0x_9B, 0x_05, 0x_4A, 0x_5C, 0x_35, 0x_D0, 0x_A6,
		0x_B5, 0x_9E, 0x_F8, 0x_1B, 0x_C1, 0x_27, 0x_B9, 0x_DC, 0x_DF, 0x_F1, 0x_99, 0x_83, 0x_8C, 0x_4D, 0x_16,
		0x_96, 0x_1F, 0x_6A, 0x_71, 0x_02, 0x_C6, 0x_D7, 0x_C9, 0x_49, 0x_38, 0x_EC, 0x_52, 0x_53, 0x_44, 0x_57,
		0x_BF, 0x_94, 0x_78, 0x_BC, 0x_F4, 0x_75, 0x_93, 0x_61, 0x_0F, 0x_68, 0x_60, 0x_59, 0x_4E,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_0A,
		0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_20,
		0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_5E, 0x_A7, 0x_7E, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_39, 0x_99, 0x_6F, 0x_4D, 0x_3B, 0x_E4, 0x_03, 0x_65, 0x_25, 0x_AB, 0x_68, 0x_4E, 0x_C3, 0x_9D,
		0x_1A, 0x_AA, 0x_51, 0x_28, 0x_93, 0x_33, 0x_7D, 0x_7F, 0x_30, 0x_4C, 0x_8B, 0x_18, 0x_32, 0x_AE, 0x_84,
		0x_2E, 0x_58, 0x_5B, 0x_A1, 0x_92, 0x_94, 0x_8F, 0x_EC, 0x_6C, 0x_15, 0x_72, 0x_DC, 0x_86, 0x_DB, 0x_CC,
		0x_6D, 0x_E0, 0x_CA, 0x_6B, 0x_EA, 0x_EE, 0x_8E, 0x_77, 0x_10, 0x_A2, 0x_75, 0x_3A, 0x_5A, 0x_19, 0x_ED,
		0x_D8, 0x_C4, 0x_DE, 0x_4F, 0x_11, 0x_E8, 0x_44, 0x_9B, 0x_0F, 0x_7B, 0x_83, 0x_F0, 0x_E9, 0x_78, 0x_C8,
		0x_98, 0x_4B, 0x_1C, 0x_05, 0x_9F, 0x_9A, 0x_80, 0x_67, 0x_F7, 0x_43, 0x_81, 0x_69, 0x_4A, 0x_D9, 0x_73,
		0x_0E, 0x_54, 0x_5F, 0x_63, 0x_BB, 0x_D0, 0x_BD, 0x_57, 0x_37, 0x_49, 0x_F4, 0x_04, 0x_BA, 0x_CD, 0x_53,
		0x_E6, 0x_48, 0x_59, 0x_62, 0x_1F, 0x_87, 0x_3E, 0x_7E, 0x_CF, 0x_88, 0x_F8, 0x_40, 0x_AC, 0x_AD, 0x_D6,
		0x_24, 0x_E7, 0x_9E, 0x_EF, 0x_F9, 0x_A7, 0x_1D, 0x_FD, 0x_C6, 0x_06, 0x_97, 0x_EB, 0x_A4, 0x_CE, 0x_C2,
		0x_95, 0x_13, 0x_64, 0x_E2, 0x_34, 0x_45, 0x_91, 0x_5E, 0x_60, 0x_D3, 0x_8C, 0x_08, 0x_21, 0x_96, 0x_CB,
		0x_BE, 0x_5C, 0x_31, 0x_B6, 0x_FE, 0x_F3, 0x_D4, 0x_8D, 0x_42, 0x_35, 0x_B8, 0x_2C, 0x_17, 0x_AF, 0x_DD,
		0x_1B, 0x_2F, 0x_C1, 0x_6E, 0x_56, 0x_41, 0x_D5, 0x_01, 0x_14, 0x_E1, 0x_1E, 0x_B0, 0x_B3, 0x_61, 0x_23,
		0x_E5, 0x_B2, 0x_C0, 0x_7A, 0x_C9, 0x_85, 0x_89, 0x_DA, 0x_16, 0x_D7, 0x_50, 0x_F2, 0x_7C, 0x_FC, 0x_D1,
		0x_FF, 0x_52, 0x_3F, 0x_B7, 0x_E3, 0x_79, 0x_B9, 0x_F1, 0x_36, 0x_B1, 0x_A6, 0x_29, 0x_9C, 0x_6A, 0x_55,
		0x_F6, 0x_C5, 0x_2A, 0x_74, 0x_71, 0x_12, 0x_A3, 0x_A0, 0x_C7, 0x_82, 0x_26, 0x_BF, 0x_90, 0x_F5, 0x_07,
		0x_A8, 0x_FA, 0x_A9, 0x_02, 0x_46, 0x_66, 0x_27, 0x_B4, 0x_3C, 0x_47, 0x_70, 0x_A5, 0x_D2, 0x_8A, 0x_DF,
		0x_FB, 0x_BC, 0x_38, 0x_5D, 0x_B5, 0x_22, 0x_76,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_09,
		0x_09, 0x_0D, 0x_2D, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_16, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_16,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_20,
		0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_2D, 0x_F7, 0x_F7, 0x_F7, 0x_F7,
		0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7,
		0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F2, 0x_68, 0x_F2, 0x_F2, 0x_68, 0x_F2, 0x_68, 0x_68, 0x_68, 0x_F2,
		0x_68, 0x_F2, 0x_F2, 0x_F7, 0x_68, 0x_F7, 0x_68, 0x_F2, 0x_F7, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_F2, 0x_68,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_2D, 0x_40,
		0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_9A, 0x_9B, 0x_9B, 0x_89, 0x_89, 0x_AF, 0x_AF, 0x_9B, 0x_89, 0x_9B,
		0x_89, 0x_40, 0x_89, 0x_9B,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_9A, 0x_AF, 0x_9B, 0x_89,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_7() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_0B,
		0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_2D, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70,
		0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_52, 0x_70, 0x_E4, 0x_52, 0x_FE, 0x_E4, 0x_5D,
		0x_52, 0x_52, 0x_52, 0x_C9, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_70, 0x_52, 0x_5D, 0x_FE, 0x_E4, 0x_A2, 0x_C9,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0A,
		0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_2D, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_5B, 0x_7E,
		0x_D3, 0x_D3, 0x_D3, 0x_7E, 0x_D3, 0x_25, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_AA, 0x_D3, 0x_C4, 0x_7A, 0x_44, 0x_19, 0x_C5, 0x_25, 0x_C8, 0x_5B,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0C,
		0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_2D, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88,
		0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88,
		0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88,
		0x_88, 0x_81, 0x_45, 0x_81, 0x_F0, 0x_F3, 0x_3C, 0x_F3, 0x_F3, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_2F, 0x_81, 0x_D8, 0x_3C, 0x_F8, 0x_E4, 0x_27, 0x_45, 0x_05, 0x_F3, 0x_F0, 0x_8E,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_2D, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5,
		0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5,
		0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_94, 0x_F5,
		0x_EF, 0x_EC, 0x_F5, 0x_60, 0x_F9, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_1A, 0x_94, 0x_F9, 0x_CA, 0x_EC, 0x_83, 0x_F5, 0x_6F, 0x_9E, 0x_3A, 0x_F3, 0x_EF, 0x_77, 0x_6D,
		0x_53, 0x_54, 0x_60, 0x_5A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0A, 0x_2D, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF,
		0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF,
		0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_78, 0x_6E, 0x_87, 0x_48, 0x_34, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_1C, 0x_C3, 0x_D4, 0x_4B, 0x_87, 0x_19, 0x_70, 0x_2F, 0x_F6, 0x_AA, 0x_A8, 0x_43, 0x_B7, 0x_60,
		0x_34, 0x_78, 0x_9D, 0x_6E, 0x_7F, 0x_C8, 0x_67, 0x_D3, 0x_F1, 0x_48, 0x_7C, 0x_57, 0x_A6, 0x_9C, 0x_D0,
		0x_76, 0x_80, 0x_B9, 0x_4C, 0x_6D, 0x_31, 0x_8F, 0x_BD, 0x_99, 0x_06, 0x_89, 0x_D6,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_2D,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_42, 0x_6E, 0x_64, 0x_3A, 0x_C3, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_42, 0x_6E, 0x_C2, 0x_A6, 0x_EF, 0x_1C, 0x_EC, 0x_F3, 0x_18, 0x_0E, 0x_3E, 0x_A5, 0x_11, 0x_EA,
		0x_9B, 0x_8B, 0x_AE, 0x_85, 0x_38, 0x_3A, 0x_A9, 0x_8A, 0x_A0, 0x_DF, 0x_AD, 0x_B8, 0x_BE, 0x_4F, 0x_DE,
		0x_55, 0x_FE, 0x_95, 0x_1E, 0x_E7, 0x_DD, 0x_8F, 0x_53, 0x_28, 0x_D6, 0x_5E, 0x_08, 0x_DA, 0x_52, 0x_C3,
		0x_64, 0x_ED, 0x_22, 0x_04, 0x_D3, 0x_03, 0x_F8, 0x_63, 0x_65, 0x_81, 0x_46, 0x_26, 0x_7B, 0x_F0, 0x_35,
		0x_C6, 0x_F7, 0x_6B, 0x_E9, 0x_4D, 0x_DC, 0x_B0, 0x_13, 0x_70, 0x_AA, 0x_83, 0x_67, 0x_6F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_2D, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B,
		0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B,
		0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_16, 0x_C8, 0x_FF, 0x_04, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_8B, 0x_B3, 0x_58, 0x_26, 0x_1D, 0x_C0, 0x_05, 0x_7C, 0x_82, 0x_AE, 0x_D0, 0x_3D, 0x_4D, 0x_16, 0x_A0,
		0x_A3, 0x_28, 0x_93, 0x_6B, 0x_C8, 0x_85, 0x_41, 0x_9E, 0x_13, 0x_FA, 0x_F8, 0x_DA, 0x_CB, 0x_FC, 0x_B6,
		0x_65, 0x_DF, 0x_32, 0x_6D, 0x_7D, 0x_FF, 0x_FE, 0x_87, 0x_62, 0x_01, 0x_C4, 0x_91, 0x_88, 0x_A6, 0x_03,
		0x_CF, 0x_F4, 0x_4F, 0x_2F, 0x_B7, 0x_8F, 0x_5E, 0x_89, 0x_04, 0x_E1, 0x_7A, 0x_A1, 0x_11, 0x_07, 0x_F1,
		0x_8C, 0x_66, 0x_6A, 0x_F9, 0x_AD, 0x_42, 0x_55, 0x_31, 0x_5D, 0x_BF, 0x_C6, 0x_63, 0x_8A, 0x_4B, 0x_CE,
		0x_C2, 0x_43, 0x_EA, 0x_2A, 0x_A9, 0x_D9, 0x_30, 0x_36, 0x_44, 0x_56, 0x_9D, 0x_73, 0x_E6, 0x_22, 0x_E3,
		0x_80, 0x_3B, 0x_CD, 0x_45, 0x_51, 0x_A4, 0x_40, 0x_78, 0x_68, 0x_12, 0x_E0, 0x_1C, 0x_D7, 0x_4E, 0x_E9,
		0x_FD, 0x_47, 0x_06, 0x_6E, 0x_B4, 0x_3A, 0x_77, 0x_5C,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0C,
		0x_0B, 0x_20, 0x_2D, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96,
		0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96,
		0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96,
		0x_F8, 0x_B1, 0x_DD, 0x_39, 0x_94,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_F8, 0x_0F, 0x_6E, 0x_D3, 0x_07, 0x_DB, 0x_C3, 0x_2C, 0x_41, 0x_72, 0x_58, 0x_49, 0x_FC, 0x_D6,
		0x_59, 0x_42, 0x_92, 0x_D1, 0x_BF, 0x_DA, 0x_05, 0x_39, 0x_8F, 0x_5B, 0x_E7, 0x_74, 0x_81, 0x_3F, 0x_B9,
		0x_C9, 0x_6F, 0x_ED, 0x_F5, 0x_E5, 0x_EE, 0x_34, 0x_25, 0x_08, 0x_63, 0x_57, 0x_9F, 0x_AE, 0x_47, 0x_43,
		0x_8A, 0x_76, 0x_82, 0x_D7, 0x_B7, 0x_38, 0x_1B, 0x_A1, 0x_B5, 0x_94, 0x_26, 0x_B0, 0x_04, 0x_23, 0x_31,
		0x_A9, 0x_32, 0x_B3, 0x_62, 0x_3E, 0x_A7, 0x_80, 0x_7B, 0x_5D, 0x_F2, 0x_F7, 0x_A6, 0x_70, 0x_93, 0x_9B,
		0x_40, 0x_3C, 0x_1D, 0x_B4, 0x_C7, 0x_BE, 0x_7A, 0x_9A, 0x_3D, 0x_75, 0x_E1, 0x_73, 0x_28, 0x_37, 0x_F3,
		0x_C0, 0x_4B, 0x_03, 0x_21, 0x_87, 0x_65, 0x_69, 0x_84, 0x_2E, 0x_64, 0x_97, 0x_AA, 0x_E6, 0x_1E, 0x_02,
		0x_B1, 0x_29, 0x_99, 0x_FB, 0x_E2, 0x_EA, 0x_83, 0x_B8, 0x_EC, 0x_88, 0x_68, 0x_D4, 0x_A8, 0x_5A, 0x_A0,
		0x_D2, 0x_E4, 0x_86, 0x_AB, 0x_CF, 0x_66, 0x_67, 0x_DF, 0x_18, 0x_0E, 0x_1C, 0x_6D, 0x_36, 0x_EB, 0x_3A,
		0x_BD, 0x_FD, 0x_9C, 0x_DD, 0x_98, 0x_F6, 0x_FE, 0x_B6, 0x_8D, 0x_CB, 0x_22, 0x_6B, 0x_30, 0x_CC, 0x_11,
		0x_E3, 0x_53, 0x_E0, 0x_F1, 0x_15, 0x_AF, 0x_1A, 0x_60, 0x_9D, 0x_C2, 0x_27, 0x_46, 0x_5E, 0x_01, 0x_AC,
		0x_35, 0x_8E, 0x_6C, 0x_2F, 0x_2A, 0x_7C, 0x_BA, 0x_17, 0x_24, 0x_A5, 0x_D0, 0x_8B, 0x_C8, 0x_EF, 0x_CE,
		0x_E8, 0x_CD, 0x_5F, 0x_45, 0x_FA, 0x_4E, 0x_55, 0x_4C, 0x_7D, 0x_CA, 0x_D5, 0x_BC, 0x_1F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_09,
		0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_2D, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F,
		0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_A0, 0x_5C,
		0x_EF, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_45, 0x_AC, 0x_32, 0x_61, 0x_84, 0x_ED, 0x_F1, 0x_F7, 0x_DE, 0x_6A, 0x_6E, 0x_5F, 0x_A5, 0x_14,
		0x_90, 0x_6C, 0x_C7, 0x_CC, 0x_9E, 0x_A8, 0x_02, 0x_C9, 0x_5E, 0x_F9, 0x_55, 0x_52, 0x_D3, 0x_B5, 0x_74,
		0x_22, 0x_AB, 0x_8B, 0x_10, 0x_53, 0x_3C, 0x_91, 0x_23, 0x_6F, 0x_72, 0x_DB, 0x_4E, 0x_3B, 0x_77, 0x_FE,
		0x_F6, 0x_56, 0x_DA, 0x_41, 0x_82, 0x_07, 0x_CB, 0x_A2, 0x_47, 0x_7F, 0x_89, 0x_85, 0x_0E, 0x_E6, 0x_28,
		0x_E8, 0x_8D, 0x_19, 0x_8C, 0x_D5, 0x_BB, 0x_12, 0x_BF, 0x_66, 0x_E2, 0x_7C, 0x_62, 0x_E3, 0x_DC, 0x_1D,
		0x_81, 0x_6D, 0x_AA, 0x_35, 0x_3A, 0x_73, 0x_5D, 0x_93, 0x_CA, 0x_26, 0x_EB, 0x_15, 0x_63, 0x_BA, 0x_D0,
		0x_2F, 0x_EA, 0x_3F, 0x_D6, 0x_EC, 0x_1B, 0x_F4, 0x_CD, 0x_D4, 0x_B6, 0x_B1, 0x_13, 0x_87, 0x_F3, 0x_76,
		0x_59, 0x_C5, 0x_4B, 0x_7A, 0x_7E, 0x_CE, 0x_2A, 0x_EF, 0x_33, 0x_44, 0x_D9, 0x_E9, 0x_C2, 0x_48, 0x_FA,
		0x_BE, 0x_E1, 0x_38, 0x_9A, 0x_7D, 0x_5C, 0x_51, 0x_75, 0x_DD, 0x_54, 0x_29, 0x_C3, 0x_30, 0x_42, 0x_0F,
		0x_A4, 0x_FC, 0x_D8, 0x_B3, 0x_04, 0x_AF, 0x_B9, 0x_A0, 0x_24, 0x_C0, 0x_4A, 0x_B7, 0x_B2, 0x_11, 0x_97,
		0x_FD, 0x_C6, 0x_88, 0x_37, 0x_05, 0x_B8, 0x_F2, 0x_8A, 0x_3E, 0x_4D, 0x_BD, 0x_92, 0x_1C, 0x_78, 0x_83,
		0x_CF, 0x_1F, 0x_08, 0x_50, 0x_60, 0x_D2, 0x_16, 0x_31, 0x_96, 0x_C4, 0x_A1, 0x_A7, 0x_1E, 0x_D1, 0x_7B,
		0x_A3, 0x_E4, 0x_86, 0x_E0, 0x_C1, 0x_5A, 0x_A9, 0x_B0, 0x_80, 0x_18, 0x_B4, 0x_8F, 0x_3D, 0x_FB, 0x_E7,
		0x_9C, 0x_6B, 0x_A6, 0x_D7, 0x_5B, 0x_71, 0x_27, 0x_39, 0x_F8, 0x_43, 0x_AE, 0x_01, 0x_C8, 0x_70, 0x_94,
		0x_F0, 0x_8E, 0x_95, 0x_03, 0x_F5, 0x_21, 0x_79, 0x_36, 0x_58, 0x_9F, 0x_68, 0x_9B, 0x_40, 0x_BC, 0x_FF,
		0x_EE, 0x_46, 0x_99, 0x_25, 0x_34, 0x_06, 0x_69, 0x_2C, 0x_1A, 0x_64, 0x_49, 0x_DF, 0x_AD, 0x_4C, 0x_2E,
		0x_67, 0x_9D, 0x_98, 0x_65, 0x_17, 0x_E5, 0x_57,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_20,
		0x_09, 0x_2D, 0x_48, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_40, 0x_48, 0x_CF, 0x_48, 0x_CF, 0x_CF, 0x_48, 0x_CF, 0x_48, 0x_48, 0x_CF,
		0x_48, 0x_CF, 0x_48, 0x_48, 0x_CF, 0x_48, 0x_48, 0x_48, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_48, 0x_48,
		0x_48, 0x_CF, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_48,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0C,
		0x_2D, 0x_8A, 0x_5C, 0x_8A, 0x_8A, 0x_5C, 0x_8A, 0x_5C, 0x_5C, 0x_5C, 0x_8A, 0x_5C, 0x_8A, 0x_8A, 0x_F8,
		0x_5C, 0x_F8, 0x_5C, 0x_8A, 0x_F8, 0x_5C, 0x_DD, 0x_8A, 0x_5C, 0x_8A, 0x_F8, 0x_F8, 0x_F8, 0x_5C, 0x_5C,
		0x_F8, 0x_F8, 0x_F8, 0x_5C, 0x_F8, 0x_5C, 0x_8A, 0x_8A, 0x_5C, 0x_5C, 0x_F8, 0x_F8, 0x_8A, 0x_5C, 0x_8A,
		0x_5C, 0x_F8, 0x_8A, 0x_5C, 0x_F8, 0x_5C, 0x_8A, 0x_8A, 0x_F8, 0x_F8, 0x_5C, 0x_F8, 0x_8A, 0x_F8, 0x_8A,
		0x_5C, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_8A, 0x_5C,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_2D, 0x_C4, 0x_7C, 0x_7C, 0x_62, 0x_62, 0x_77, 0x_77, 0x_7C, 0x_62, 0x_7C, 0x_62, 0x_69, 0x_62,
		0x_7C, 0x_14, 0x_62, 0x_69, 0x_77, 0x_77, 0x_77, 0x_C4, 0x_C4, 0x_62, 0x_7C, 0x_62, 0x_7C, 0x_69, 0x_77,
		0x_7C, 0x_62, 0x_62, 0x_7C, 0x_7C, 0x_77, 0x_7C, 0x_7C, 0x_7C, 0x_C4, 0x_69, 0x_7C, 0x_C4, 0x_77, 0x_69,
		0x_C4, 0x_69, 0x_C4, 0x_69, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_C4, 0x_77, 0x_7C, 0x_62,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_20,
		0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_2D, 0x_43, 0x_2C, 0x_72, 0x_43, 0x_81, 0x_72, 0x_1A, 0x_43, 0x_43, 0x_43,
		0x_C0, 0x_1A, 0x_52, 0x_C0, 0x_2C, 0x_1A, 0x_43, 0x_C0, 0x_81, 0x_1A, 0x_2C, 0x_2C, 0x_72, 0x_1A, 0x_1A,
		0x_43, 0x_72, 0x_2C, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_43, 0x_1A, 0x_81, 0x_72, 0x_E4, 0x_C0,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_09, 0x_2D, 0x_D9, 0x_94,
		0x_AB, 0x_AB, 0x_AB, 0x_94, 0x_AB, 0x_65, 0x_AB, 0x_60, 0x_D9, 0x_65, 0x_6D, 0x_AB, 0x_6A, 0x_D9, 0x_A0,
		0x_D9, 0x_94, 0x_94, 0x_4B, 0x_C7, 0x_94, 0x_C7, 0x_65, 0x_4B, 0x_6A, 0x_94, 0x_6D, 0x_65, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_F9, 0x_AB, 0x_6A, 0x_4B, 0x_6D, 0x_A0, 0x_2C, 0x_65, 0x_C7, 0x_D9,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_09,
		0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_0C,
		0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_2D, 0x_D1, 0x_7B, 0x_D1, 0x_D0, 0x_6D, 0x_71, 0x_6D, 0x_6D, 0x_D0,
		0x_52, 0x_3A, 0x_B3, 0x_D0, 0x_C9, 0x_6D, 0x_64, 0x_C9, 0x_3A, 0x_B3, 0x_7B, 0x_D1, 0x_71, 0x_64, 0x_E1,
		0x_63, 0x_5A, 0x_3A, 0x_5A, 0x_7B, 0x_3A, 0x_D1, 0x_D0, 0x_63, 0x_E1, 0x_5A, 0x_C9, 0x_E1, 0x_6D, 0x_6D,
		0x_D0, 0x_C9, 0x_B4, 0x_3A, 0x_D1, 0x_71, 0x_B4,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_5A, 0x_D1, 0x_B3, 0x_71, 0x_64, 0x_3A, 0x_B4, 0x_7B, 0x_63, 0x_6D, 0x_D0, 0x_C9,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_2D, 0x_F3, 0x_3C, 0x_50, 0x_9E, 0x_3C, 0x_A2, 0x_83, 0x_83,
		0x_7E, 0x_3C, 0x_83, 0x_BA, 0x_21, 0x_6C, 0x_21, 0x_3C, 0x_86, 0x_83, 0x_83, 0x_6C, 0x_83, 0x_21, 0x_21,
		0x_FB, 0x_FB, 0x_49, 0x_11, 0x_6B, 0x_49, 0x_BA, 0x_D8, 0x_9E, 0x_50, 0x_D8, 0x_50, 0x_3C, 0x_D7, 0x_50,
		0x_8E, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_FB, 0x_F3, 0x_83, 0x_D8, 0x_9E, 0x_9D, 0x_3C, 0x_21, 0x_86, 0x_6B, 0x_49, 0x_50, 0x_D7, 0x_8E,
		0x_11, 0x_6C, 0x_A2, 0x_BA,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0B,
		0x_20, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_2D, 0x_7B,
		0x_81, 0x_A9, 0x_D5, 0x_59, 0x_DB, 0x_69, 0x_C4, 0x_38, 0x_78, 0x_78, 0x_7A, 0x_AB, 0x_89, 0x_AB, 0x_B6,
		0x_DB, 0x_11, 0x_8F, 0x_7F, 0x_3A, 0x_33, 0x_B6, 0x_9F, 0x_EF, 0x_DB, 0x_7B, 0x_3C, 0x_B6, 0x_3E, 0x_6E,
		0x_3A, 0x_78, 0x_3A, 0x_E2, 0x_38, 0x_3C, 0x_B6, 0x_43, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_71, 0x_99, 0x_DB, 0x_89, 0x_E2, 0x_A9, 0x_24, 0x_13, 0x_38, 0x_3E, 0x_26, 0x_BA, 0x_7A, 0x_B6, 0x_BB,
		0x_59, 0x_7B, 0x_78, 0x_81, 0x_BC, 0x_B3, 0x_3C, 0x_C4, 0x_01, 0x_D5, 0x_AD, 0x_95, 0x_6E, 0x_9F, 0x_40,
		0x_AB, 0x_43, 0x_BF, 0x_8B, 0x_3A, 0x_8F, 0x_11, 0x_C8, 0x_EF, 0x_35, 0x_7F, 0x_33,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_2D, 0x_3D, 0x_D8, 0x_A5, 0x_53, 0x_BA, 0x_55, 0x_70, 0x_31, 0x_73, 0x_50,
		0x_03, 0x_25, 0x_69, 0x_D9, 0x_26, 0x_DD, 0x_A5, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_3D, 0x_D8, 0x_50, 0x_E7, 0x_C3, 0x_FC, 0x_D7, 0x_EF, 0x_BF, 0x_24, 0x_6D, 0x_1A, 0x_30, 0x_31,
		0x_73, 0x_55, 0x_B4, 0x_F7, 0x_CA, 0x_53, 0x_23, 0x_37, 0x_84, 0x_D5, 0x_C2, 0x_FA, 0x_46, 0x_47, 0x_7B,
		0x_33, 0x_14, 0x_F0, 0x_03, 0x_26, 0x_C0, 0x_41, 0x_01, 0x_EC, 0x_DA, 0x_3C, 0x_1D, 0x_10, 0x_B3, 0x_BA,
		0x_A5, 0x_39, 0x_A6, 0x_35, 0x_8D, 0x_18, 0x_0F, 0x_25, 0x_87, 0x_61, 0x_F5, 0x_A3, 0x_6F, 0x_85, 0x_3A,
		0x_B2, 0x_E4, 0x_AD, 0x_13, 0x_07, 0x_E1, 0x_90, 0x_21, 0x_1B, 0x_DD, 0x_D9, 0x_BD, 0x_69,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0C,
		0x_0C, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_2D, 0x_10, 0x_D7, 0x_63, 0x_CF, 0x_E9, 0x_57, 0x_2A, 0x_85, 0x_A6,
		0x_78, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_1F, 0x_70, 0x_3C, 0x_B8, 0x_EB, 0x_CD, 0x_FE, 0x_6F, 0x_E9, 0x_44, 0x_BF, 0x_AD, 0x_0F, 0x_10, 0x_04,
		0x_A0, 0x_C6, 0x_53, 0x_7B, 0x_D7, 0x_2E, 0x_78, 0x_B2, 0x_DF, 0x_C7, 0x_64, 0x_79, 0x_48, 0x_03, 0x_CA,
		0x_C5, 0x_29, 0x_E4, 0x_D4, 0x_85, 0x_63, 0x_74, 0x_B5, 0x_07, 0x_80, 0x_41, 0x_D9, 0x_19, 0x_B0, 0x_8C,
		0x_4C, 0x_60, 0x_8D, 0x_A9, 0x_7C, 0x_92, 0x_C1, 0x_01, 0x_CF, 0x_81, 0x_61, 0x_83, 0x_2C, 0x_11, 0x_77,
		0x_BE, 0x_9E, 0x_38, 0x_BC, 0x_24, 0x_62, 0x_58, 0x_89, 0x_14, 0x_D2, 0x_86, 0x_A6, 0x_AC, 0x_CB, 0x_23,
		0x_72, 0x_90, 0x_EA, 0x_D3, 0x_12, 0x_52, 0x_EF, 0x_2A, 0x_B1, 0x_8E, 0x_1B, 0x_C8, 0x_84, 0x_68, 0x_D1,
		0x_F0, 0x_7A, 0x_A7, 0x_9A, 0x_FB, 0x_F4, 0x_6A, 0x_1D, 0x_55, 0x_98, 0x_6B, 0x_B9, 0x_CC, 0x_6D, 0x_A3,
		0x_9C, 0x_5D, 0x_18, 0x_F2, 0x_7D, 0x_88, 0x_4D, 0x_F5,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_0D,
		0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0D,
		0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_2D, 0x_B6, 0x_60, 0x_3F, 0x_7B, 0x_CD, 0x_73,
		0x_06, 0x_D5, 0x_9D, 0x_F6, 0x_50, 0x_39, 0x_86, 0x_E7, 0x_C0, 0x_84, 0x_1E, 0x_FE, 0x_6B, 0x_7E, 0x_49,
		0x_E4, 0x_DC, 0x_BF, 0x_33, 0x_FE, 0x_AF, 0x_A4, 0x_C0, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_EC, 0x_B6, 0x_1A, 0x_A2, 0x_BD, 0x_AF, 0x_E4, 0x_EA, 0x_DE, 0x_C0, 0x_92, 0x_88, 0x_D8, 0x_10, 0x_85,
		0x_52, 0x_95, 0x_BA, 0x_C1, 0x_D6, 0x_43, 0x_14, 0x_7B, 0x_DA, 0x_4B, 0x_4F, 0x_57, 0x_CF, 0x_5B, 0x_89,
		0x_34, 0x_D3, 0x_16, 0x_07, 0x_DC, 0x_18, 0x_13, 0x_6C, 0x_21, 0x_99, 0x_FC, 0x_59, 0x_11, 0x_BF, 0x_B1,
		0x_4C, 0x_D5, 0x_23, 0x_67, 0x_A9, 0x_BC, 0x_F1, 0x_C8, 0x_A5, 0x_CD, 0x_5A, 0x_B7, 0x_45, 0x_47, 0x_FF,
		0x_F2, 0x_68, 0x_80, 0x_55, 0x_E8, 0x_1F, 0x_CE, 0x_05, 0x_2A, 0x_B4, 0x_A3, 0x_DF, 0x_F7, 0x_F6, 0x_C7,
		0x_76, 0x_06, 0x_9D, 0x_FE, 0x_97, 0x_39, 0x_7D, 0x_03, 0x_49, 0x_CA, 0x_1E, 0x_FA, 0x_71, 0x_50, 0x_D2,
		0x_3D, 0x_44, 0x_38, 0x_33, 0x_7F, 0x_D7, 0x_B9, 0x_8D, 0x_1D, 0x_E7, 0x_54, 0x_3A, 0x_B5, 0x_84, 0x_86,
		0x_60, 0x_27, 0x_AD, 0x_8C, 0x_A8, 0x_26, 0x_AE, 0x_36, 0x_ED, 0x_F0, 0x_DD, 0x_8B, 0x_78, 0x_B8, 0x_70,
		0x_C6, 0x_A6, 0x_53, 0x_FD, 0x_D9, 0x_51, 0x_C2, 0x_0F, 0x_EF, 0x_B0, 0x_D4, 0x_93, 0x_5C, 0x_19, 0x_08,
		0x_E3, 0x_91, 0x_72, 0x_3F, 0x_5E, 0x_98, 0x_6D, 0x_B3, 0x_5F, 0x_3B, 0x_A1, 0x_37, 0x_87, 0x_0E, 0x_9C,
		0x_A7, 0x_81, 0x_E9, 0x_1B, 0x_6B, 0x_3C, 0x_74, 0x_9E, 0x_AA, 0x_17, 0x_48, 0x_CC, 0x_61, 0x_F3, 0x_8F,
		0x_B2, 0x_E2, 0x_C3, 0x_F4, 0x_DB, 0x_31, 0x_79, 0x_35, 0x_A4, 0x_32, 0x_64, 0x_4D, 0x_04, 0x_AC, 0x_F5,
		0x_E6, 0x_15, 0x_3E, 0x_22, 0x_83, 0x_4E, 0x_2F, 0x_7C, 0x_9A, 0x_C4, 0x_D1, 0x_82, 0x_7E,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_09, 0x_2D, 0x_6A, 0x_C6, 0x_DD, 0x_E7, 0x_20, 0x_A3, 0x_C5, 0x_62, 0x_F5, 0x_41, 0x_EB,
		0x_95, 0x_4D, 0x_77, 0x_B4, 0x_76, 0x_6D, 0x_80, 0x_8D, 0x_13, 0x_64, 0x_25, 0x_23, 0x_89, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_C7, 0x_5D, 0x_EF, 0x_35, 0x_EC, 0x_AB, 0x_FD, 0x_21, 0x_B0, 0x_D6, 0x_95, 0x_39, 0x_18, 0x_93,
		0x_92, 0x_A0, 0x_40, 0x_25, 0x_42, 0x_28, 0x_F9, 0x_C8, 0x_3B, 0x_3D, 0x_17, 0x_27, 0x_C2, 0x_4C, 0x_60,
		0x_67, 0x_97, 0x_7B, 0x_10, 0x_0E, 0x_82, 0x_D9, 0x_BC, 0x_90, 0x_37, 0x_69, 0x_BE, 0x_A1, 0x_94, 0x_43,
		0x_2F, 0x_A4, 0x_31, 0x_8D, 0x_F5, 0x_22, 0x_E4, 0x_AF, 0x_D0, 0x_72, 0x_F7, 0x_16, 0x_DA, 0x_30, 0x_50,
		0x_C9, 0x_9E, 0x_24, 0x_D7, 0x_12, 0x_33, 0x_26, 0x_8A, 0x_FB, 0x_65, 0x_F4, 0x_5F, 0x_AC, 0x_E1, 0x_D2,
		0x_13, 0x_45, 0x_1C, 0x_EB, 0x_B9, 0x_80, 0x_E0, 0x_F3, 0x_8C, 0x_76, 0x_DB, 0x_03, 0x_FF, 0x_E2, 0x_5E,
		0x_7A, 0x_3A, 0x_D3, 0x_32, 0x_6D, 0x_B4, 0x_A3, 0x_4D, 0x_1F, 0x_9F, 0x_14, 0x_D8, 0x_89, 0x_F6, 0x_F8,
		0x_9C, 0x_AD, 0x_2C, 0x_BD, 0x_59, 0x_AE, 0x_EA, 0x_DD, 0x_05, 0x_E3, 0x_4F, 0x_F0, 0x_6F, 0x_38, 0x_BB,
		0x_64, 0x_A2, 0x_CE, 0x_CB, 0x_46, 0x_C6, 0x_56, 0x_6B, 0x_C4, 0x_48, 0x_63, 0x_3F, 0x_9B, 0x_77, 0x_83,
		0x_9A, 0x_79, 0x_51, 0x_F1, 0x_EE, 0x_B3, 0x_2A, 0x_6A, 0x_49, 0x_47, 0x_62, 0x_B2, 0x_1B, 0x_4E, 0x_2E,
		0x_AA, 0x_7D, 0x_B1, 0x_1D, 0x_B8, 0x_3C, 0x_7C, 0x_DC, 0x_D1, 0x_58, 0x_DE, 0x_8B, 0x_29, 0x_02, 0x_C1,
		0x_CA, 0x_4A, 0x_3E, 0x_C3, 0x_99, 0x_86, 0x_CF, 0x_8E, 0x_84, 0x_B5, 0x_73, 0x_66, 0x_70, 0x_A6, 0x_CD,
		0x_08, 0x_FA, 0x_61, 0x_A9, 0x_FE, 0x_81, 0x_44, 0x_96, 0x_ED, 0x_E9, 0x_DF, 0x_75, 0x_04, 0x_E7, 0x_23,
		0x_A8, 0x_D4, 0x_01, 0x_8F, 0x_B7, 0x_E5, 0x_5A, 0x_55, 0x_98, 0x_4B, 0x_87, 0x_BF, 0x_07, 0x_B6, 0x_52,
		0x_5C, 0x_C5, 0x_CC, 0x_41, 0x_1E, 0x_A7, 0x_BA, 0x_57, 0x_5B, 0x_88, 0x_9D, 0x_53, 0x_85, 0x_E6, 0x_A5,
		0x_36, 0x_D5, 0x_34, 0x_6C, 0x_FC, 0x_7E, 0x_91, 0x_E8, 0x_C0, 0x_1A, 0x_74, 0x_7F, 0x_F2, 0x_06, 0x_11,
		0x_19, 0x_54, 0x_71, 0x_78, 0x_68, 0x_15, 0x_0F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_2
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_AD, 0x_AD, 0x_AD,
		0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD,
		0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD,
		0x_4D, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD,
		0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD,
		0x_AD, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_AD, 0x_4D,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_3
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29,
		0x_29, 0x_29, 0x_29, 0x_AE, 0x_B7, 0x_AE, 0x_AE, 0x_B7, 0x_AE, 0x_B7, 0x_B7, 0x_B7, 0x_AE, 0x_B7, 0x_AE,
		0x_AE, 0x_29, 0x_B7, 0x_29, 0x_B7, 0x_AE, 0x_29, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_AE, 0x_B7,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_5
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_AF, 0x_40, 0x_40, 0x_7C, 0x_7C, 0x_6B, 0x_6B,
		0x_40, 0x_7C, 0x_40, 0x_7C, 0x_D8, 0x_7C, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_AF, 0x_6B, 0x_40, 0x_7C,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_7
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13,
		0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13,
		0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13,
		0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_05, 0x_13, 0x_B3, 0x_05, 0x_D0, 0x_B3, 0x_60, 0x_05, 0x_05, 0x_05,
		0x_68, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_05, 0x_60, 0x_D0, 0x_B3, 0x_72, 0x_68,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_11
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_3D, 0x_C8, 0x_D3, 0x_D3,
		0x_D3, 0x_C8, 0x_D3, 0x_C3, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_EE, 0x_D3, 0x_F8, 0x_A8, 0x_7A, 0x_97, 0x_51, 0x_C3, 0x_63, 0x_3D,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_13
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_62, 0x_ED, 0x_62, 0x_4F, 0x_5E, 0x_8C, 0x_5E, 0x_5E, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_E7, 0x_62, 0x_A6, 0x_8C, 0x_FE, 0x_29, 0x_46, 0x_ED, 0x_DD, 0x_5E, 0x_4F, 0x_BC,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_19
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78,
		0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78,
		0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_9A, 0x_C7, 0x_D9, 0x_F2, 0x_C7,
		0x_14, 0x_47, 0x_47,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_77, 0x_9A, 0x_47, 0x_B7, 0x_F2, 0x_4B, 0x_C7, 0x_45, 0x_60, 0x_CE, 0x_F0, 0x_D9, 0x_A2, 0x_37,
		0x_92, 0x_38, 0x_14, 0x_10,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_42
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_85, 0x_05, 0x_07,
		0x_21, 0x_1B, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_E7, 0x_46, 0x_5E, 0x_DB, 0x_07, 0x_B7, 0x_B2, 0x_B1, 0x_C0, 0x_D1, 0x_31, 0x_CD, 0x_F6, 0x_01,
		0x_1B, 0x_85, 0x_91, 0x_05, 0x_6B, 0x_F4, 0x_64, 0x_7C, 0x_A4, 0x_21, 0x_37, 0x_71, 0x_58, 0x_53, 0x_BB,
		0x_57, 0x_FB, 0x_E3, 0x_27, 0x_AF, 0x_B0, 0x_EE, 0x_97, 0x_35, 0x_72, 0x_04, 0x_AA,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_73
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99,
		0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99,
		0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_3E, 0x_60, 0x_AA, 0x_D9, 0x_28, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_3E, 0x_60, 0x_42, 0x_92, 0x_E8, 0x_91, 0x_A2, 0x_08, 0x_E0, 0x_F0, 0x_CD, 0x_E1, 0x_D6, 0x_EA,
		0x_AE, 0x_D0, 0x_34, 0x_52, 0x_57, 0x_D9, 0x_FE, 0x_DD, 0x_CF, 0x_4E, 0x_DC, 0x_78, 0x_7D, 0x_35, 0x_8B,
		0x_DB, 0x_11, 0x_8C, 0x_72, 0x_50, 0x_6C, 0x_81, 0x_D5, 0x_01, 0x_07, 0x_9D, 0x_4C, 0x_58, 0x_14, 0x_28,
		0x_AA, 0x_2E, 0x_3F, 0x_C2, 0x_1F, 0x_5B, 0x_E9, 0x_85, 0x_C9, 0x_76, 0x_89, 0x_C7, 0x_22, 0x_F7, 0x_D7,
		0x_10, 0x_80, 0x_EE, 0x_D4, 0x_C4, 0x_74, 0x_12, 0x_66, 0x_44, 0x_25, 0x_7C, 0x_9E, 0x_5A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_113
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_EC, 0x_F8, 0x_39, 0x_74, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_FA, 0x_05, 0x_D0, 0x_80, 0x_0E, 0x_B1, 0x_B0, 0x_52, 0x_F5, 0x_A9, 0x_8F, 0x_1C, 0x_EC, 0x_B4,
		0x_60, 0x_5A, 0x_9F, 0x_2A, 0x_F8, 0x_51, 0x_A7, 0x_D1, 0x_23, 0x_40, 0x_AC, 0x_86, 0x_CB, 0x_E2, 0x_1F,
		0x_41, 0x_6C, 0x_A3, 0x_96, 0x_DF, 0x_39, 0x_ED, 0x_6D, 0x_53, 0x_06, 0x_AB, 0x_7C, 0x_3F, 0x_92, 0x_D9,
		0x_C2, 0x_FE, 0x_77, 0x_5C, 0x_FF, 0x_4A, 0x_DB, 0x_82, 0x_74, 0x_F0, 0x_FB, 0x_6F, 0x_43, 0x_EF, 0x_C0,
		0x_E6, 0x_D4, 0x_29, 0x_E0, 0x_BA, 0x_89, 0x_C7, 0x_3A, 0x_AA, 0x_C4, 0x_25, 0x_FC, 0x_5E, 0x_9C, 0x_97,
		0x_88, 0x_79, 0x_F2, 0x_3B, 0x_C9, 0x_44, 0x_CF, 0x_D7, 0x_30, 0x_24, 0x_C8, 0x_73, 0x_38, 0x_FD, 0x_DD,
		0x_26, 0x_DE, 0x_49, 0x_F7, 0x_E3, 0x_78, 0x_0F, 0x_2C, 0x_D5, 0x_6E, 0x_BC, 0x_D3, 0x_63, 0x_9E, 0x_C6,
		0x_64, 0x_C5, 0x_72, 0x_AF, 0x_32, 0x_A0, 0x_83, 0x_CD,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_193
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_4F, 0x_67, 0x_46, 0x_9F, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_4F, 0x_6D, 0x_9E, 0x_83, 0x_B8, 0x_85, 0x_D3, 0x_F3, 0x_17, 0x_DF, 0x_25, 0x_D1, 0x_9C, 0x_7D,
		0x_A2, 0x_A1, 0x_2E, 0x_AB, 0x_8B, 0x_9A, 0x_42, 0x_9F, 0x_F4, 0x_75, 0x_E8, 0x_0E, 0x_3A, 0x_BD, 0x_4E,
		0x_FE, 0x_87, 0x_47, 0x_2F, 0x_03, 0x_65, 0x_F6, 0x_BA, 0x_64, 0x_19, 0x_C2, 0x_AA, 0x_E4, 0x_62, 0x_BE,
		0x_33, 0x_8E, 0x_7A, 0x_1E, 0x_D9, 0x_59, 0x_97, 0x_76, 0x_22, 0x_D4, 0x_40, 0x_F0, 0x_37, 0x_DB, 0x_E1,
		0x_FF, 0x_88, 0x_84, 0x_61, 0x_81, 0x_8C, 0x_B6, 0x_A8, 0x_92, 0x_3B, 0x_B3, 0x_3D, 0x_CB, 0x_66, 0x_D0,
		0x_6A, 0x_CE, 0x_11, 0x_A3, 0x_1F, 0x_5B, 0x_3F, 0x_FA, 0x_57, 0x_CF, 0x_7B, 0x_58, 0x_6C, 0x_C7, 0x_DC,
		0x_82, 0x_AE, 0x_A9, 0x_9D, 0x_E0, 0x_72, 0x_F9, 0x_B5, 0x_90, 0x_B2, 0x_21, 0x_35, 0x_EA, 0x_39, 0x_34,
		0x_67, 0x_F2, 0x_78, 0x_51, 0x_24, 0x_68, 0x_38, 0x_FB, 0x_E6, 0x_4D, 0x_13, 0x_B1, 0x_07, 0x_EF, 0x_EE,
		0x_98, 0x_12, 0x_C6, 0x_AF, 0x_A7, 0x_44, 0x_FC, 0x_95, 0x_2C, 0x_F8, 0x_E2, 0x_D5, 0x_80, 0x_63, 0x_CC,
		0x_41, 0x_55, 0x_26, 0x_46, 0x_A4, 0x_C5, 0x_3C, 0x_3E, 0x_FD, 0x_1C, 0x_F1, 0x_94, 0x_48, 0x_EB, 0x_B7,
		0x_06, 0x_60, 0x_18, 0x_5E, 0x_93, 0x_08, 0x_69, 0x_D8, 0x_70, 0x_E9, 0x_89, 0x_C3, 0x_7F, 0x_53, 0x_50,
		0x_DE, 0x_B0, 0x_6E, 0x_C0, 0x_4A, 0x_04, 0x_6F, 0x_AC, 0x_C9, 0x_1D, 0x_C4, 0x_99, 0x_EC, 0x_5D, 0x_10,
		0x_29, 0x_7E, 0x_E3, 0x_C8, 0x_01, 0x_B9, 0x_27, 0x_7C, 0x_8A, 0x_D7, 0x_28, 0x_2A, 0x_F7,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_247
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB,
		0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_4A, 0x_5D, 0x_E0, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_CB, 0x_69, 0x_90, 0x_AA, 0x_C2, 0x_51, 0x_42, 0x_33, 0x_ED, 0x_2C, 0x_0F, 0x_E2, 0x_30, 0x_53, 0x_12,
		0x_89, 0x_47, 0x_E1, 0x_8C, 0x_77, 0x_92, 0x_36, 0x_8F, 0x_41, 0x_D3, 0x_F6, 0x_62, 0x_AE, 0x_27, 0x_BC,
		0x_B0, 0x_DC, 0x_7B, 0x_EF, 0x_3F, 0x_BD, 0x_CC, 0x_24, 0x_B2, 0x_34, 0x_C8, 0x_3B, 0x_35, 0x_02, 0x_19,
		0x_59, 0x_E4, 0x_CD, 0x_66, 0x_96, 0x_58, 0x_6B, 0x_DD, 0x_7D, 0x_B4, 0x_76, 0x_E3, 0x_A9, 0x_99, 0x_67,
		0x_A8, 0x_21, 0x_7C, 0x_05, 0x_D9, 0x_08, 0x_80, 0x_FF, 0x_63, 0x_A5, 0x_DB, 0x_81, 0x_83, 0x_DA, 0x_5B,
		0x_9A, 0x_4B, 0x_1D, 0x_F0, 0x_45, 0x_AD, 0x_3E, 0x_87, 0x_78, 0x_FC, 0x_91, 0x_03, 0x_AB, 0x_55, 0x_14,
		0x_9C, 0x_79, 0x_CE, 0x_3C, 0x_97, 0x_B5, 0x_44, 0x_95, 0x_A3, 0x_1F, 0x_56, 0x_8B, 0x_9D, 0x_A1, 0x_1E,
		0x_AF, 0x_D1, 0x_1A, 0x_57, 0x_B7, 0x_38, 0x_9F, 0x_E0, 0x_2F, 0x_FA, 0x_CF, 0x_11, 0x_23, 0x_D8, 0x_28,
		0x_22, 0x_BE, 0x_B1, 0x_70, 0x_61, 0x_5D, 0x_A7, 0x_EC, 0x_EB, 0x_F9, 0x_A4, 0x_4C, 0x_E8, 0x_25, 0x_31,
		0x_6F, 0x_06, 0x_5C, 0x_D4, 0x_10, 0x_EE, 0x_2A, 0x_4A, 0x_F1, 0x_B8, 0x_BB, 0x_E7, 0x_F7, 0x_75, 0x_F5,
		0x_17, 0x_D0, 0x_D5, 0x_6A, 0x_8D, 0x_60, 0x_7E, 0x_64, 0x_4E, 0x_C9, 0x_72, 0x_B9, 0x_71, 0x_B3, 0x_BA,
		0x_18, 0x_84, 0x_F4, 0x_2E, 0x_C4, 0x_07, 0x_46, 0x_DF, 0x_C7, 0x_26, 0x_94, 0x_C1, 0x_04, 0x_6D, 0x_68,
		0x_5A, 0x_43, 0x_E9, 0x_A0, 0x_40, 0x_6C, 0x_FE, 0x_7A, 0x_FB, 0x_01, 0x_32, 0x_85, 0x_1C, 0x_C3, 0x_AC,
		0x_F8, 0x_E5, 0x_C0, 0x_F3, 0x_C5, 0x_FD, 0x_13, 0x_15, 0x_37, 0x_CA, 0x_39, 0x_4D, 0x_E6, 0x_D2, 0x_C6,
		0x_0E, 0x_D6, 0x_98, 0x_49, 0x_EA, 0x_52, 0x_1B, 0x_5F, 0x_8E, 0x_73, 0x_16, 0x_A2, 0x_3A, 0x_6E, 0x_9B,
		0x_4F, 0x_3D, 0x_86, 0x_A6, 0x_82, 0x_DE, 0x_93, 0x_9E, 0x_48, 0x_BF, 0x_88, 0x_B6, 0x_74, 0x_50, 0x_29,
		0x_D7, 0x_5E, 0x_7F, 0x_65, 0x_F2, 0x_54, 0x_8A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_54, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_B5, 0x_54, 0x_44, 0x_54, 0x_54, 0x_54,
		0x_44, 0x_44, 0x_54, 0x_44, 0x_44, 0x_54, 0x_54, 0x_54, 0x_44, 0x_44, 0x_44, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_44, 0x_54, 0x_44, 0x_54, 0x_54, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_54,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_CB, 0x_19, 0x_CB, 0x_CB, 0x_19, 0x_CB, 0x_19, 0x_19, 0x_19, 0x_CB, 0x_19, 0x_CB, 0x_CB, 0x_F7, 0x_19,
		0x_F7, 0x_19, 0x_CB, 0x_F7, 0x_19, 0x_EA, 0x_F7, 0x_F7, 0x_19, 0x_CB, 0x_F7, 0x_F7, 0x_19, 0x_19, 0x_F7,
		0x_CB, 0x_19, 0x_19, 0x_F7, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_CB, 0x_19,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_32, 0x_AA, 0x_AA, 0x_52, 0x_52, 0x_D5, 0x_D5, 0x_AA, 0x_52, 0x_AA, 0x_52, 0x_FD,
		0x_52, 0x_AA, 0x_EF, 0x_FD, 0x_32, 0x_AA, 0x_52, 0x_52, 0x_FD, 0x_AA, 0x_AA, 0x_52, 0x_52, 0x_D5, 0x_FD,
		0x_AA, 0x_FD, 0x_D5, 0x_32, 0x_FD, 0x_FD, 0x_AA, 0x_32, 0x_52, 0x_FD, 0x_32, 0x_D5, 0x_32, 0x_FD, 0x_AA,
		0x_D5,
	];
	const BASE: &[u8] = &[
		0x_FD, 0x_32, 0x_D5, 0x_AA, 0x_52,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_6E, 0x_CA, 0x_29, 0x_6E, 0x_33, 0x_29, 0x_AC, 0x_6E, 0x_6E,
		0x_6E, 0x_A7, 0x_AC, 0x_EB, 0x_6E, 0x_AC, 0x_F0, 0x_6E, 0x_29, 0x_A7, 0x_A7, 0x_CA, 0x_CA, 0x_AC, 0x_F0,
		0x_CA,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_6E, 0x_AC, 0x_33, 0x_29, 0x_F0, 0x_A7,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2A, 0x_EF, 0x_9E, 0x_9E, 0x_9E, 0x_EF, 0x_9E,
		0x_11, 0x_9E, 0x_67, 0x_8D, 0x_A8, 0x_9E, 0x_A8, 0x_9E, 0x_9E, 0x_8D, 0x_EF, 0x_BA, 0x_74, 0x_50, 0x_74,
		0x_DA, 0x_11, 0x_74, 0x_9E, 0x_EF, 0x_2A, 0x_11, 0x_2A, 0x_2A, 0x_11, 0x_74, 0x_29, 0x_74, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_DA, 0x_9E, 0x_74, 0x_A8, 0x_29, 0x_8D, 0x_50, 0x_11, 0x_BA, 0x_2A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2F, 0x_D2, 0x_2F, 0x_91,
		0x_D3, 0x_89, 0x_D3, 0x_D3, 0x_91, 0x_95, 0x_69, 0x_02, 0x_02, 0x_91, 0x_48, 0x_2F, 0x_7A, 0x_69, 0x_48,
		0x_57, 0x_48, 0x_97, 0x_DF, 0x_76, 0x_02, 0x_69, 0x_2F, 0x_D2, 0x_2F, 0x_48, 0x_97, 0x_D3, 0x_48, 0x_91,
		0x_DF, 0x_97, 0x_48, 0x_76, 0x_DF, 0x_DF, 0x_89, 0x_02, 0x_2F, 0x_69, 0x_89,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_DF, 0x_2F, 0x_97, 0x_89, 0x_7A, 0x_57, 0x_69, 0x_D2, 0x_02, 0x_D3, 0x_91, 0x_76,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_AF, 0x_AA, 0x_95, 0x_F5, 0x_AA, 0x_F6, 0x_EE, 0x_EE, 0x_DE, 0x_92, 0x_62, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_FE, 0x_AF, 0x_EE, 0x_33, 0x_F5, 0x_6F, 0x_AA, 0x_62, 0x_92, 0x_56, 0x_CC, 0x_95, 0x_E8, 0x_4A,
		0x_3D, 0x_0F, 0x_F6, 0x_77,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_8B, 0x_E9, 0x_26,
		0x_69, 0x_3D, 0x_E5, 0x_70, 0x_D6, 0x_C8, 0x_A7, 0x_F5, 0x_17, 0x_3D, 0x_8B, 0x_7A, 0x_DD, 0x_C4, 0x_80,
		0x_26, 0x_67, 0x_45, 0x_58, 0x_5E, 0x_E9, 0x_26, 0x_51, 0x_12, 0x_54, 0x_DD, 0x_A2,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_B1, 0x_E5, 0x_7A, 0x_58, 0x_26, 0x_75, 0x_45, 0x_C8, 0x_51, 0x_D6, 0x_BC, 0x_89, 0x_DD, 0x_CD,
		0x_3D, 0x_8B, 0x_E1, 0x_E9, 0x_F5, 0x_3C, 0x_2A, 0x_5C, 0x_67, 0x_69, 0x_E3, 0x_80, 0x_12, 0x_9D, 0x_17,
		0x_57, 0x_A1, 0x_A7, 0x_F3, 0x_C9, 0x_3A, 0x_A2, 0x_68, 0x_CC, 0x_5E, 0x_95, 0x_C4,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_1A, 0x_92, 0x_75,
		0x_A9, 0x_E5, 0x_9D, 0x_FA, 0x_53, 0x_DC, 0x_91, 0x_87, 0x_23, 0x_C4, 0x_71, 0x_59, 0x_1D, 0x_71, 0x_75,
		0x_2A, 0x_93, 0x_84, 0x_13, 0x_E7, 0x_7A, 0x_5C, 0x_A9, 0x_37, 0x_7F, 0x_E5, 0x_6C, 0x_C1, 0x_94,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_1A, 0x_92, 0x_A7, 0x_65, 0x_86, 0x_C4, 0x_67, 0x_B9, 0x_B5, 0x_49, 0x_89, 0x_7C, 0x_6E, 0x_5E,
		0x_95, 0x_9D, 0x_59, 0x_44, 0x_4F, 0x_A9, 0x_80, 0x_9E, 0x_1C, 0x_EF, 0x_C7, 0x_AA, 0x_7A, 0x_02, 0x_88,
		0x_F8, 0x_19, 0x_4D, 0x_A2, 0x_AD, 0x_E7, 0x_A1, 0x_13, 0x_2C, 0x_FD, 0x_37, 0x_94, 0x_45, 0x_A8, 0x_E5,
		0x_75, 0x_93, 0x_6C, 0x_47, 0x_4B, 0x_23, 0x_71, 0x_7B, 0x_87, 0x_77, 0x_F4, 0x_2A, 0x_0F, 0x_7F, 0x_F3,
		0x_A0, 0x_21, 0x_50, 0x_DC, 0x_84, 0x_F6, 0x_74, 0x_D4, 0x_1D, 0x_5C, 0x_2E, 0x_53, 0x_91,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_4E, 0x_F8, 0x_16,
		0x_7B, 0x_CD, 0x_86, 0x_45, 0x_45, 0x_8C, 0x_EC, 0x_85, 0x_B4, 0x_A4, 0x_F0, 0x_3B, 0x_46, 0x_3F, 0x_3B,
		0x_AC, 0x_52, 0x_A1, 0x_F8, 0x_8A, 0x_E1, 0x_55, 0x_B9, 0x_83, 0x_66, 0x_74, 0x_B1, 0x_CE, 0x_D7, 0x_84,
		0x_76, 0x_40, 0x_9C, 0x_3F, 0x_16, 0x_C4, 0x_46, 0x_7B, 0x_C1, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_A0, 0x_AF, 0x_43, 0x_AC, 0x_A3, 0x_D5, 0x_CE, 0x_CD, 0x_18, 0x_8A, 0x_9D, 0x_CC, 0x_4E, 0x_D8,
		0x_5A, 0x_3C, 0x_73, 0x_A1, 0x_F8, 0x_83, 0x_FB, 0x_CF, 0x_84, 0x_C4, 0x_DC, 0x_46, 0x_39, 0x_8F, 0x_B1,
		0x_36, 0x_17, 0x_04, 0x_EC, 0x_49, 0x_16, 0x_E9, 0x_6E, 0x_7F, 0x_B9, 0x_A4, 0x_E8, 0x_C6, 0x_87, 0x_4F,
		0x_29, 0x_E6, 0x_8C, 0x_A5, 0x_E1, 0x_85, 0x_DD, 0x_1E, 0x_7B, 0x_2E, 0x_40, 0x_94, 0x_C8, 0x_EF, 0x_74,
		0x_53, 0x_3F, 0x_ED, 0x_65, 0x_B4, 0x_44, 0x_A7, 0x_56, 0x_BE, 0x_61, 0x_93, 0x_F1, 0x_9C, 0x_55, 0x_13,
		0x_82, 0x_57, 0x_F7, 0x_DE, 0x_A2, 0x_5F, 0x_75, 0x_64, 0x_F0, 0x_05, 0x_EB, 0x_D7, 0x_A8, 0x_3E, 0x_10,
		0x_01, 0x_80, 0x_B5, 0x_76, 0x_60, 0x_E4, 0x_9E, 0x_4A, 0x_C1, 0x_45, 0x_63, 0x_EE, 0x_E3, 0x_58, 0x_71,
		0x_48, 0x_66, 0x_3B, 0x_F6, 0x_0F, 0x_52, 0x_A9, 0x_6C,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_63, 0x_8D, 0x_70, 0x_55, 0x_B2, 0x_DE, 0x_E4, 0x_F6, 0x_8E, 0x_E0,
		0x_95, 0x_48, 0x_E5, 0x_F8, 0x_30, 0x_13, 0x_37, 0x_D0, 0x_CF, 0x_25, 0x_84, 0x_C1, 0x_D4, 0x_48, 0x_50,
		0x_95, 0x_1B, 0x_67, 0x_B9, 0x_CB, 0x_32, 0x_DB, 0x_62, 0x_92, 0x_F3, 0x_D6, 0x_34, 0x_C5, 0x_48, 0x_26,
		0x_71, 0x_05, 0x_C6, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_63, 0x_E7, 0x_1B, 0x_DC, 0x_AC, 0x_E1, 0x_F8, 0x_1C, 0x_A8, 0x_3E, 0x_74, 0x_98, 0x_C8, 0x_8B,
		0x_D2, 0x_0F, 0x_58, 0x_28, 0x_BB, 0x_5D, 0x_C1, 0x_55, 0x_CC, 0x_26, 0x_C4, 0x_81, 0x_04, 0x_16, 0x_A6,
		0x_B8, 0x_EF, 0x_FC, 0x_93, 0x_37, 0x_85, 0x_5A, 0x_F3, 0x_29, 0x_2F, 0x_31, 0x_FB, 0x_5F, 0x_38, 0x_24,
		0x_45, 0x_90, 0x_D5, 0x_E8, 0x_CF, 0x_25, 0x_F4, 0x_0E, 0x_DD, 0x_B2, 0x_A4, 0x_3C, 0x_39, 0x_A1, 0x_23,
		0x_F6, 0x_BC, 0x_78, 0x_02, 0x_A7, 0x_A2, 0x_C6, 0x_01, 0x_27, 0x_AE, 0x_3A, 0x_A5, 0x_D0, 0x_13, 0x_68,
		0x_43, 0x_71, 0x_95, 0x_67, 0x_E3, 0x_92, 0x_3F, 0x_ED, 0x_17, 0x_60, 0x_4B, 0x_7F, 0x_B0, 0x_15, 0x_7A,
		0x_07, 0x_AF, 0x_88, 0x_F2, 0x_72, 0x_BF, 0x_8A, 0x_E4, 0x_48, 0x_C9, 0x_36, 0x_84, 0x_51, 0x_EA, 0x_F9,
		0x_8D, 0x_1E, 0x_59, 0x_22, 0x_76, 0x_D3, 0x_5E, 0x_9D, 0x_61, 0x_B9, 0x_32, 0x_05, 0x_7D, 0x_CD, 0x_C0,
		0x_AD, 0x_9A, 0x_3B, 0x_AB, 0x_F7, 0x_80, 0x_06, 0x_6F, 0x_6E, 0x_FD, 0x_9F, 0x_96, 0x_BA, 0x_C3, 0x_4F,
		0x_6D, 0x_1D, 0x_5C, 0x_70, 0x_65, 0x_7E, 0x_42, 0x_69, 0x_AA, 0x_CE, 0x_FA, 0x_8C, 0x_41, 0x_2A, 0x_9E,
		0x_77, 0x_56, 0x_E0, 0x_10, 0x_49, 0x_87, 0x_A3, 0x_14, 0x_CB, 0x_D1, 0x_EB, 0x_89, 0x_11, 0x_8E, 0x_D6,
		0x_C7, 0x_30, 0x_50, 0x_E5, 0x_52, 0x_FE, 0x_6C, 0x_9B, 0x_21, 0x_5B, 0x_19, 0x_18, 0x_DA, 0x_7B, 0x_03,
		0x_DB, 0x_2E, 0x_44, 0x_E6, 0x_D4, 0x_C5, 0x_4A, 0x_34, 0x_99, 0x_33, 0x_B7, 0x_62, 0x_86,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_72, 0x_45, 0x_38, 0x_F6, 0x_0C, 0x_3D, 0x_D4, 0x_CF, 0x_C6, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_CD, 0x_69, 0x_55, 0x_01, 0x_67, 0x_96, 0x_43, 0x_58, 0x_02, 0x_C9, 0x_8C, 0x_E8, 0x_11, 0x_D0,
		0x_A3, 0x_F8, 0x_C6, 0x_7A, 0x_33, 0x_99, 0x_51, 0x_EF, 0x_41, 0x_DB, 0x_DF, 0x_65, 0x_53, 0x_27, 0x_6B,
		0x_A2, 0x_C5, 0x_A0, 0x_19, 0x_A7, 0x_90, 0x_4D, 0x_CF, 0x_7D, 0x_04, 0x_3A, 0x_6F, 0x_B7, 0x_C2, 0x_86,
		0x_63, 0x_EB, 0x_75, 0x_7B, 0x_48, 0x_B1, 0x_AC, 0x_B5, 0x_C7, 0x_6C, 0x_FE, 0x_5C, 0x_17, 0x_DC, 0x_05,
		0x_AD, 0x_88, 0x_5B, 0x_56, 0x_CE, 0x_BA, 0x_F7, 0x_2A, 0x_EA, 0x_AE, 0x_ED, 0x_C3, 0x_25, 0x_C4, 0x_B6,
		0x_52, 0x_68, 0x_76, 0x_8B, 0x_C8, 0x_F3, 0x_9F, 0x_B3, 0x_AA, 0x_82, 0x_93, 0x_42, 0x_47, 0x_A6, 0x_A5,
		0x_4F, 0x_87, 0x_9C, 0x_F2, 0x_98, 0x_A4, 0x_10, 0x_4A, 0x_70, 0x_40, 0x_D2, 0x_85, 0x_4C, 0x_21, 0x_61,
		0x_D7, 0x_4B, 0x_1B, 0x_84, 0x_D4, 0x_9B, 0x_BE, 0x_38, 0x_D8, 0x_5A, 0x_31, 0x_23, 0x_81, 0x_77, 0x_A1,
		0x_73, 0x_74, 0x_94, 0x_B8, 0x_DE, 0x_45, 0x_64, 0x_4E, 0x_06, 0x_34, 0x_13, 0x_36, 0x_A9, 0x_07, 0x_3E,
		0x_FF, 0x_E4, 0x_D1, 0x_03, 0x_DA, 0x_AB, 0x_50, 0x_72, 0x_E6, 0x_3C, 0x_30, 0x_DD, 0x_15, 0x_B2, 0x_5D,
		0x_95, 0x_1F, 0x_A8, 0x_B4, 0x_32, 0x_F1, 0x_9D, 0x_7F, 0x_60, 0x_F9, 0x_57, 0x_3D, 0x_D9, 0x_C0, 0x_29,
		0x_80, 0x_FD, 0x_E0, 0x_44, 0x_35, 0x_BF, 0x_9E, 0x_89, 0x_46, 0x_22, 0x_BC, 0x_28, 0x_39, 0x_BD, 0x_79,
		0x_66, 0x_CB, 0x_D6, 0x_E5, 0x_54, 0x_3F, 0x_14, 0x_2C, 0x_AF, 0x_E9, 0x_7C, 0x_C1, 0x_6A, 0x_F6, 0x_CA,
		0x_9A, 0x_F0, 0x_5E, 0x_BB, 0x_49, 0x_E1, 0x_B0, 0x_7E, 0x_FA, 0x_8F, 0x_08, 0x_24, 0x_6E, 0x_0F, 0x_5F,
		0x_78, 0x_71, 0x_F5, 0x_26, 0x_FB, 0x_2F, 0x_8A, 0x_0E, 0x_B9, 0x_FC, 0x_3B, 0x_59, 0x_92, 0x_1A, 0x_6D,
		0x_CC, 0x_D5, 0x_F4, 0x_18, 0x_12, 0x_E3, 0x_97, 0x_83, 0x_16, 0x_91, 0x_D3, 0x_E2, 0x_62, 0x_2E, 0x_1D,
		0x_8D, 0x_1E, 0x_37, 0x_EC, 0x_1C, 0x_E7, 0x_EE,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC,
		0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_B4, 0x_EC, 0x_EC, 0x_EC,
		0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC,
		0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_BA, 0x_B4,
		0x_EC, 0x_B4, 0x_B4, 0x_EC, 0x_B4, 0x_EC, 0x_B4, 0x_EC, 0x_B4, 0x_B4, 0x_EC, 0x_EC, 0x_EC, 0x_B4, 0x_EC,
		0x_B4, 0x_B4, 0x_B4, 0x_EC, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_EC, 0x_B4, 0x_EC, 0x_EC, 0x_EC, 0x_B4, 0x_B4,
		0x_B4, 0x_B4, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_B4,
	];
	const BASE: &[u8] = &[
		0x_EC, 0x_B4,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25,
		0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_CD, 0x_8B, 0x_CD, 0x_CD, 0x_8B, 0x_CD, 0x_8B,
		0x_8B, 0x_8B, 0x_CD, 0x_8B, 0x_CD, 0x_CD, 0x_25, 0x_8B, 0x_25, 0x_8B, 0x_CD, 0x_25, 0x_8B, 0x_40, 0x_CD,
		0x_8B, 0x_25, 0x_CD, 0x_25, 0x_25, 0x_25, 0x_25, 0x_CD, 0x_25, 0x_25, 0x_CD, 0x_25, 0x_CD, 0x_25, 0x_CD,
		0x_8B, 0x_CD, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_CD, 0x_8B,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_C1, 0x_C7, 0x_C7, 0x_3F, 0x_3F, 0x_8B, 0x_8B, 0x_C7,
		0x_3F, 0x_C7, 0x_3F, 0x_B4, 0x_3F, 0x_C7, 0x_09, 0x_C7, 0x_B4, 0x_C7, 0x_C1, 0x_B4, 0x_C7, 0x_C7, 0x_B4,
		0x_C1, 0x_B4, 0x_B4, 0x_C1, 0x_C1, 0x_B4, 0x_3F, 0x_B4,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_C1, 0x_8B, 0x_C7, 0x_3F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76,
		0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_9E, 0x_76, 0x_16, 0x_9E, 0x_F0, 0x_16, 0x_7F, 0x_9E, 0x_9E,
		0x_9E, 0x_A2, 0x_7F, 0x_73, 0x_F0, 0x_F0, 0x_F0, 0x_D8, 0x_76, 0x_F0, 0x_76, 0x_9E, 0x_D8, 0x_16, 0x_9E,
		0x_7F, 0x_D8, 0x_7F, 0x_7F, 0x_16, 0x_A2, 0x_16, 0x_7F, 0x_A2,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_9E, 0x_7F, 0x_F0, 0x_16, 0x_D8, 0x_A2,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA,
		0x_BA, 0x_BA, 0x_BA, 0x_A6, 0x_BA, 0x_E5, 0x_E5, 0x_E5, 0x_BA, 0x_E5, 0x_60, 0x_E5, 0x_02, 0x_A6, 0x_50,
		0x_9A, 0x_73, 0x_58, 0x_23, 0x_A6, 0x_37, 0x_60, 0x_58, 0x_26, 0x_73, 0x_50, 0x_50, 0x_9A, 0x_E5, 0x_50,
		0x_BA, 0x_58, 0x_23, 0x_23, 0x_37, 0x_58, 0x_60, 0x_50, 0x_58, 0x_A6, 0x_50, 0x_37, 0x_58, 0x_50, 0x_50,
		0x_73, 0x_26, 0x_37, 0x_A6, 0x_BA, 0x_26, 0x_9A, 0x_60, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_73, 0x_E5, 0x_23, 0x_9A, 0x_50, 0x_37, 0x_58, 0x_60, 0x_26, 0x_A6,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_CC, 0x_9A, 0x_CC, 0x_3D, 0x_AC, 0x_76, 0x_AC,
		0x_AC, 0x_3D, 0x_CD, 0x_15, 0x_3A, 0x_3A, 0x_AC, 0x_3A, 0x_7B, 0x_CC, 0x_AC, 0x_CC, 0x_7B, 0x_78, 0x_76,
		0x_7B, 0x_78, 0x_3A, 0x_9A, 0x_9A, 0x_9A, 0x_3A, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_7C, 0x_CC, 0x_32, 0x_76, 0x_C8, 0x_7B, 0x_78, 0x_9A, 0x_3A, 0x_AC, 0x_3D, 0x_D2,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5,
		0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5,
		0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_70, 0x_0E, 0x_50,
		0x_49, 0x_0E, 0x_BA, 0x_39, 0x_39, 0x_83, 0x_BC, 0x_3A, 0x_46, 0x_F1, 0x_DF, 0x_70, 0x_49, 0x_39, 0x_E1,
		0x_0E, 0x_BA, 0x_50, 0x_0E, 0x_3A, 0x_70, 0x_3A, 0x_E1, 0x_BA, 0x_24, 0x_6A, 0x_F1, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_03, 0x_70, 0x_39, 0x_46, 0x_49, 0x_31, 0x_0E, 0x_DF, 0x_E1, 0x_F1, 0x_B1, 0x_50, 0x_BC, 0x_6A,
		0x_3A, 0x_B7, 0x_BA, 0x_24,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_10, 0x_10, 0x_10, 0x_7C, 0x_67, 0x_4F, 0x_9B, 0x_2A, 0x_C1, 0x_7B, 0x_01, 0x_78, 0x_B1, 0x_DF, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_01, 0x_C1, 0x_FA, 0x_6B, 0x_4F, 0x_97, 0x_D6, 0x_F4, 0x_72, 0x_AC, 0x_64, 0x_9A, 0x_41, 0x_1B,
		0x_2A, 0x_7C, 0x_57, 0x_67, 0x_80, 0x_48, 0x_1F, 0x_38, 0x_B1, 0x_9B, 0x_DF, 0x_86, 0x_F9, 0x_5A, 0x_EB,
		0x_DA, 0x_60, 0x_E0, 0x_D5, 0x_77, 0x_4A, 0x_BF, 0x_3F, 0x_02, 0x_E8, 0x_83, 0x_78,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_4D, 0x_FC, 0x_C0, 0x_06, 0x_19,
		0x_E6, 0x_C9, 0x_DA, 0x_99, 0x_3F, 0x_67, 0x_05, 0x_03, 0x_21, 0x_03, 0x_DD, 0x_8A, 0x_5B, 0x_3C, 0x_93,
		0x_3C, 0x_05, 0x_5B, 0x_F2, 0x_A2, 0x_03, 0x_DA, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_4D, 0x_FC, 0x_64, 0x_AE, 0x_05, 0x_C4, 0x_9D, 0x_E0, 0x_8A, 0x_4C, 0x_3D, 0x_BA, 0x_77, 0x_B9,
		0x_07, 0x_E6, 0x_53, 0x_F4, 0x_94, 0x_06, 0x_3B, 0x_FD, 0x_E7, 0x_D4, 0x_76, 0x_AF, 0x_A7, 0x_7A, 0x_3F,
		0x_78, 0x_5B, 0x_D0, 0x_6B, 0x_A2, 0x_F7, 0x_22, 0x_E4, 0x_DD, 0x_34, 0x_EA, 0x_27, 0x_72, 0x_21, 0x_19,
		0x_C0, 0x_CA, 0x_69, 0x_87, 0x_E5, 0x_70, 0x_BE, 0x_99, 0x_90, 0x_25, 0x_DA, 0x_41, 0x_54, 0x_93, 0x_CB,
		0x_B5, 0x_4E, 0x_18, 0x_38, 0x_DB, 0x_B0, 0x_03, 0x_3C, 0x_61, 0x_F2, 0x_C5, 0x_FF, 0x_67,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58,
		0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58,
		0x_65, 0x_5E, 0x_93, 0x_80, 0x_2E, 0x_E7, 0x_58, 0x_CB, 0x_7F, 0x_B4, 0x_DE, 0x_8D, 0x_42, 0x_C6, 0x_3D,
		0x_3B, 0x_AC, 0x_16, 0x_3D, 0x_CF, 0x_04, 0x_4C, 0x_82, 0x_98, 0x_FB, 0x_E9, 0x_2C, 0x_F5, 0x_CB, 0x_26,
		0x_BA, 0x_6D, 0x_6C, 0x_F7, 0x_35, 0x_59, 0x_9E, 0x_61, 0x_C0, 0x_61, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_58, 0x_EC, 0x_DE, 0x_6A, 0x_79, 0x_43, 0x_6C, 0x_CD, 0x_2E, 0x_BA, 0x_CC, 0x_2C, 0x_C6, 0x_65, 0x_3D,
		0x_85, 0x_38, 0x_D6, 0x_37, 0x_5E, 0x_B5, 0x_B4, 0x_B6, 0x_E0, 0x_AB, 0x_96, 0x_FD, 0x_ED, 0x_26, 0x_02,
		0x_C8, 0x_3B, 0x_59, 0x_8B, 0x_24, 0x_93, 0x_7F, 0x_9D, 0x_8F, 0x_7D, 0x_CF, 0x_D8, 0x_75, 0x_90, 0x_45,
		0x_3F, 0x_16, 0x_E3, 0x_82, 0x_6E, 0x_49, 0x_54, 0x_BF, 0x_80, 0x_35, 0x_E4, 0x_4C, 0x_64, 0x_8A, 0x_98,
		0x_1A, 0x_6D, 0x_8C, 0x_AA, 0x_30, 0x_FC, 0x_C0, 0x_F7, 0x_DC, 0x_CB, 0x_95, 0x_66, 0x_3C, 0x_F9, 0x_E8,
		0x_61, 0x_E6, 0x_7A, 0x_A0, 0x_63, 0x_5B, 0x_F4, 0x_2F, 0x_04, 0x_4F, 0x_1F, 0x_71, 0x_E9, 0x_BE, 0x_14,
		0x_B1, 0x_A6, 0x_FB, 0x_D4, 0x_50, 0x_BD, 0x_CA, 0x_70, 0x_7B, 0x_84, 0x_C9, 0x_8D, 0x_42, 0x_F3, 0x_AC,
		0x_D9, 0x_E1, 0x_22, 0x_72, 0x_9E, 0x_F5, 0x_3E, 0x_AE,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_1E, 0x_7D, 0x_B7, 0x_5D, 0x_21, 0x_59, 0x_0B, 0x_DF, 0x_9F, 0x_E8, 0x_F5, 0x_69, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_7D, 0x_A9, 0x_7B, 0x_9E, 0x_2F, 0x_B8, 0x_AF, 0x_44, 0x_B1, 0x_CC, 0x_81, 0x_50, 0x_14, 0x_5A,
		0x_B3, 0x_77, 0x_D7, 0x_A8, 0x_C2, 0x_8A, 0x_C6, 0x_21, 0x_79, 0x_34, 0x_3A, 0x_95, 0x_7A, 0x_75, 0x_E2,
		0x_03, 0x_89, 0x_D5, 0x_70, 0x_3B, 0x_9D, 0x_55, 0x_2A, 0x_C3, 0x_4F, 0x_6F, 0x_F9, 0x_BB, 0x_16, 0x_D6,
		0x_DF, 0x_07, 0x_EE, 0x_BD, 0x_42, 0x_FC, 0x_86, 0x_E4, 0x_E7, 0x_59, 0x_94, 0x_CB, 0x_1B, 0x_64, 0x_C8,
		0x_FB, 0x_73, 0x_85, 0x_7C, 0x_BA, 0x_4C, 0x_7F, 0x_B4, 0x_1C, 0x_39, 0x_EB, 0x_23, 0x_8E, 0x_DA, 0x_E0,
		0x_A1, 0x_D8, 0x_9F, 0x_96, 0x_A6, 0x_49, 0x_80, 0x_AA, 0x_AC, 0x_43, 0x_A2, 0x_8C, 0x_37, 0x_D3, 0x_27,
		0x_57, 0x_A4, 0x_74, 0x_13, 0x_68, 0x_A0, 0x_9B, 0x_F5, 0x_5C, 0x_ED, 0x_8B, 0x_40, 0x_22, 0x_33, 0x_41,
		0x_B7, 0x_19, 0x_84, 0x_29, 0x_F0, 0x_E8, 0x_17, 0x_60, 0x_CA, 0x_61, 0x_E9, 0x_C4, 0x_6B, 0x_B2, 0x_E1,
		0x_F3, 0x_51, 0x_15, 0x_AB, 0x_D9, 0x_4B, 0x_97, 0x_FD, 0x_1F, 0x_12, 0x_B5, 0x_6D, 0x_30, 0x_45, 0x_CF,
		0x_69, 0x_93, 0x_32, 0x_5D, 0x_BF, 0x_BE, 0x_B6, 0x_31, 0x_9C, 0x_AE, 0x_46, 0x_CE, 0x_B0, 0x_10, 0x_4E,
		0x_36, 0x_76, 0x_C5, 0x_24, 0x_F6, 0x_47, 0x_0E, 0x_05, 0x_67, 0x_35, 0x_D1, 0x_66, 0x_98, 0x_58, 0x_C9,
		0x_9A, 0x_E6, 0x_83, 0x_EC, 0x_52, 0x_DC, 0x_6A, 0x_11, 0x_5E, 0x_82, 0x_2E, 0x_F7, 0x_38, 0x_3C, 0x_DE,
		0x_F1, 0x_56, 0x_06, 0x_91, 0x_26, 0x_48, 0x_8F, 0x_4D, 0x_C7, 0x_62, 0x_E3, 0x_AD, 0x_0F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_zeros_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_23, 0x_BF, 0x_88,
		0x_EA, 0x_2D, 0x_AB, 0x_C4, 0x_68, 0x_31, 0x_CB, 0x_EF, 0x_92, 0x_ED, 0x_FA, 0x_0E, 0x_F3, 0x_4E, 0x_13,
		0x_BF, 0x_82, 0x_68, 0x_8C, 0x_D2, 0x_8A, 0x_4F, 0x_BF, 0x_6A, 0x_C4, 0x_68, 0x_E7, 0x_A1, 0x_3D, 0x_C5,
		0x_BE, 0x_D7, 0x_CC, 0x_EA, 0x_9A, 0x_2E, 0x_C7, 0x_48, 0x_C7, 0x_60, 0x_D7, 0x_E6, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_D1, 0x_99, 0x_64, 0x_49, 0x_4C, 0x_78, 0x_BB, 0x_39, 0x_C1, 0x_58, 0x_96, 0x_82, 0x_EE, 0x_3B,
		0x_97, 0x_85, 0x_76, 0x_8D, 0x_A2, 0x_8E, 0x_9B, 0x_A6, 0x_C0, 0x_0F, 0x_34, 0x_30, 0x_45, 0x_41, 0x_AB,
		0x_C4, 0x_29, 0x_5B, 0x_44, 0x_11, 0x_75, 0x_B8, 0x_02, 0x_E3, 0x_FB, 0x_3A, 0x_6D, 0x_60, 0x_F7, 0x_19,
		0x_46, 0x_6A, 0x_8A, 0x_BE, 0x_F5, 0x_72, 0x_7A, 0x_A9, 0x_25, 0x_57, 0x_1E, 0x_DB, 0x_15, 0x_F6, 0x_DF,
		0x_12, 0x_ED, 0x_1F, 0x_90, 0x_13, 0x_40, 0x_91, 0x_CD, 0x_7F, 0x_AC, 0x_5D, 0x_E6, 0x_B7, 0x_48, 0x_CE,
		0x_AD, 0x_05, 0x_F9, 0x_7C, 0x_94, 0x_D2, 0x_9E, 0x_C5, 0x_98, 0x_81, 0x_22, 0x_1B, 0x_32, 0x_65, 0x_80,
		0x_2C, 0x_A4, 0x_3F, 0x_47, 0x_89, 0x_6F, 0x_D3, 0x_8B, 0x_04, 0x_28, 0x_A3, 0x_C6, 0x_EC, 0x_F4, 0x_9C,
		0x_9A, 0x_7B, 0x_92, 0x_B6, 0x_74, 0x_C7, 0x_8F, 0x_88, 0x_D9, 0x_8C, 0x_E1, 0x_E5, 0x_66, 0x_21, 0x_E8,
		0x_55, 0x_B3, 0x_4B, 0x_26, 0x_7D, 0x_BF, 0x_6C, 0x_C3, 0x_D4, 0x_95, 0x_0E, 0x_2E, 0x_16, 0x_50, 0x_F2,
		0x_1C, 0x_FA, 0x_18, 0x_E7, 0x_14, 0x_A0, 0x_E9, 0x_23, 0x_17, 0x_FF, 0x_69, 0x_08, 0x_B1, 0x_A7, 0x_B9,
		0x_43, 0x_FD, 0x_F8, 0x_4D, 0x_D8, 0x_6E, 0x_5F, 0x_5E, 0x_DD, 0x_F1, 0x_AF, 0x_54, 0x_A1, 0x_3D, 0x_27,
		0x_10, 0x_67, 0x_87, 0x_24, 0x_03, 0x_4E, 0x_E4, 0x_2F, 0x_F0, 0x_CC, 0x_36, 0x_DE, 0x_B0, 0x_CB, 0x_D5,
		0x_52, 0x_BD, 0x_B2, 0x_A5, 0x_42, 0x_F3, 0x_06, 0x_AA, 0x_51, 0x_4A, 0x_70, 0x_63, 0x_C8, 0x_EA, 0x_3C,
		0x_CA, 0x_31, 0x_EB, 0x_84, 0x_1D, 0x_C2, 0x_B4, 0x_37, 0x_77, 0x_BC, 0x_38, 0x_01, 0x_56, 0x_07, 0x_D6,
		0x_5A, 0x_FC, 0x_6B, 0x_35, 0x_4F, 0x_DC, 0x_DA, 0x_62, 0x_93, 0x_5C, 0x_B5, 0x_68, 0x_9D, 0x_9F, 0x_AE,
		0x_86, 0x_59, 0x_E2, 0x_53, 0x_E0, 0x_D0, 0x_EF, 0x_61, 0x_7E, 0x_3E, 0x_1A, 0x_71, 0x_A8, 0x_73, 0x_79,
		0x_FE, 0x_CF, 0x_83, 0x_2A, 0x_D7, 0x_BA, 0x_33,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C2, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_C2,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_6C,
		0x_2A, 0x_6C, 0x_6C, 0x_2A, 0x_6C, 0x_2A, 0x_2A, 0x_2A, 0x_6C, 0x_2A, 0x_6C, 0x_6C, 0x_A8, 0x_2A, 0x_A8,
		0x_2A, 0x_6C, 0x_A8, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_6C, 0x_2A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_5() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_09,
		0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_5D, 0x_72,
		0x_72, 0x_42, 0x_42, 0x_DE, 0x_DE, 0x_72, 0x_42, 0x_72, 0x_42, 0x_D4, 0x_42, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_5D, 0x_DE, 0x_72, 0x_42,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_7() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0B,
		0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_8E, 0x_8E, 0x_DD, 0x_8E, 0x_7C, 0x_DD, 0x_4C, 0x_7C, 0x_C5, 0x_DD, 0x_DD, 0x_DD, 0x_D5,
		0x_C5,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_DD, 0x_C5, 0x_4C, 0x_7C, 0x_B9, 0x_D5,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_C5, 0x_68, 0x_8C, 0x_8C, 0x_8C, 0x_68, 0x_8C, 0x_12, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_A2, 0x_8C, 0x_B1, 0x_FA, 0x_E7, 0x_88, 0x_99, 0x_12, 0x_82, 0x_C5,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_13() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0D,
		0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0B,
		0x_0A, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_16, 0x_3D, 0x_16, 0x_DD, 0x_E8, 0x_23, 0x_E8, 0x_E8, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_1C, 0x_16, 0x_98, 0x_23, 0x_64, 0x_BE, 0x_B9, 0x_3D, 0x_4A, 0x_E8, 0x_DD, 0x_F4,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0B,
		0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_0D,
		0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_99, 0x_D7, 0x_36, 0x_9F, 0x_D7, 0x_E7, 0x_F4, 0x_F4,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_8D, 0x_99, 0x_F4, 0x_2F, 0x_9F, 0x_1A, 0x_D7, 0x_E0, 0x_42, 0x_74, 0x_7C, 0x_36, 0x_3F, 0x_07,
		0x_65, 0x_5A, 0x_E7, 0x_08,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_42() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_0D,
		0x_0A, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_20,
		0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_D6,
		0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6,
		0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6,
		0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_03, 0x_FF, 0x_C4, 0x_8C, 0x_6A, 0x_57,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_9E, 0x_57, 0x_DE, 0x_95, 0x_C4, 0x_07, 0x_74, 0x_D5, 0x_3D, 0x_4B, 0x_63, 0x_3B, 0x_7E, 0x_A9,
		0x_6A, 0x_03, 0x_C2, 0x_FF, 0x_B7, 0x_2E, 0x_01, 0x_AA, 0x_E5, 0x_8C, 0x_B1, 0x_18, 0x_3E, 0x_52, 0x_90,
		0x_D1, 0x_5B, 0x_94, 0x_7A, 0x_4C, 0x_A5, 0x_0E, 0x_7B, 0x_CE, 0x_5D, 0x_59, 0x_BC,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0A,
		0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_20, 0x_09, 0x_20, 0x_20,
		0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_C5, 0x_FD, 0x_86, 0x_05, 0x_FB, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_C5, 0x_FD, 0x_1F, 0x_82, 0x_A7, 0x_02, 0x_46, 0x_A4, 0x_7D, 0x_58, 0x_33, 0x_32, 0x_3A, 0x_06,
		0x_BD, 0x_75, 0x_CD, 0x_EE, 0x_1D, 0x_05, 0x_D0, 0x_BE, 0x_07, 0x_04, 0x_80, 0x_74, 0x_B4, 0x_A8, 0x_68,
		0x_C0, 0x_03, 0x_C3, 0x_66, 0x_4E, 0x_C7, 0x_40, 0x_17, 0x_C6, 0x_21, 0x_AA, 0x_2C, 0x_AB, 0x_42, 0x_FB,
		0x_86, 0x_45, 0x_5C, 0x_53, 0x_1E, 0x_4C, 0x_FA, 0x_93, 0x_71, 0x_73, 0x_54, 0x_ED, 0x_51, 0x_F5, 0x_7C,
		0x_97, 0x_E4, 0x_43, 0x_CB, 0x_4D, 0x_88, 0x_5D, 0x_1B, 0x_DB, 0x_99, 0x_11, 0x_28, 0x_B9,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0C,
		0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE,
		0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_49, 0x_CC, 0x_79, 0x_76, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_04, 0x_1C, 0x_92, 0x_93, 0x_7F, 0x_A3, 0x_2E, 0x_91, 0x_E8, 0x_E7, 0x_50, 0x_37, 0x_49, 0x_6E,
		0x_D1, 0x_98, 0x_A7, 0x_F8, 0x_CC, 0x_23, 0x_F3, 0x_C7, 0x_FC, 0x_55, 0x_75, 0x_E9, 0x_5E, 0x_5D, 0x_9C,
		0x_D4, 0x_05, 0x_4B, 0x_71, 0x_84, 0x_79, 0x_89, 0x_4E, 0x_1A, 0x_8A, 0x_D3, 0x_B4, 0x_2C, 0x_F9, 0x_7E,
		0x_62, 0x_8E, 0x_48, 0x_80, 0x_D2, 0x_32, 0x_54, 0x_BD, 0x_76, 0x_DA, 0x_4C, 0x_60, 0x_FA, 0x_29, 0x_C4,
		0x_8B, 0x_31, 0x_EC, 0x_DD, 0x_1B, 0x_28, 0x_65, 0x_11, 0x_57, 0x_9F, 0x_F0, 0x_6F, 0x_66, 0x_D0, 0x_BA,
		0x_E5, 0x_07, 0x_A5, 0x_03, 0x_52, 0x_7C, 0x_CD, 0x_C6, 0x_1F, 0x_C3, 0x_C8, 0x_6A, 0x_EE, 0x_8F, 0x_FD,
		0x_EF, 0x_DE, 0x_2A, 0x_0E, 0x_BC, 0x_51, 0x_38, 0x_1D, 0x_53, 0x_A2, 0x_78, 0x_40, 0x_42, 0x_41, 0x_BB,
		0x_C2, 0x_74, 0x_06, 0x_58, 0x_F1, 0x_7B, 0x_A6, 0x_DC,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_193() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0B,
		0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_0A,
		0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_32, 0x_CC, 0x_83, 0x_4C, 0x_DF,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_32, 0x_41, 0x_5A, 0x_F7, 0x_3D, 0x_31, 0x_39, 0x_E6, 0x_BF, 0x_D9, 0x_37, 0x_71, 0x_60, 0x_C1,
		0x_8E, 0x_B1, 0x_B7, 0x_7F, 0x_5E, 0x_1F, 0x_DE, 0x_4C, 0x_E9, 0x_73, 0x_6A, 0x_33, 0x_2A, 0x_13, 0x_14,
		0x_9B, 0x_EF, 0x_16, 0x_57, 0x_F4, 0x_97, 0x_9E, 0x_45, 0x_67, 0x_12, 0x_4B, 0x_BE, 0x_47, 0x_56, 0x_AF,
		0x_ED, 0x_93, 0x_25, 0x_9D, 0x_87, 0x_D1, 0x_76, 0x_A9, 0x_04, 0x_DF, 0x_D5, 0x_75, 0x_40, 0x_4F, 0x_CE,
		0x_2F, 0x_C8, 0x_D3, 0x_54, 0x_5B, 0x_35, 0x_5D, 0x_52, 0x_88, 0x_A4, 0x_8F, 0x_8A, 0x_84, 0x_9A, 0x_C0,
		0x_89, 0x_3E, 0x_7E, 0x_E7, 0x_94, 0x_96, 0x_34, 0x_CB, 0x_8C, 0x_95, 0x_1B, 0x_49, 0x_21, 0x_CD, 0x_D4,
		0x_06, 0x_68, 0x_F9, 0x_3A, 0x_A0, 0x_66, 0x_C2, 0x_6D, 0x_C4, 0x_2C, 0x_48, 0x_22, 0x_C9, 0x_FA, 0x_2E,
		0x_CC, 0x_B2, 0x_85, 0x_9C, 0x_BC, 0x_0E, 0x_A8, 0x_6C, 0x_B4, 0x_1E, 0x_5C, 0x_DA, 0x_26, 0x_E4, 0x_AE,
		0x_5F, 0x_18, 0x_53, 0x_4D, 0x_F2, 0x_D8, 0x_29, 0x_BD, 0x_11, 0x_6F, 0x_86, 0x_07, 0x_F5, 0x_B9, 0x_91,
		0x_43, 0x_78, 0x_6E, 0x_83, 0x_27, 0x_C7, 0x_44, 0x_EE, 0x_7B, 0x_FD, 0x_FF, 0x_08, 0x_A5, 0x_59, 0x_90,
		0x_74, 0x_79, 0x_D7, 0x_98, 0x_7D, 0x_3F, 0x_DC, 0x_C6, 0x_CA, 0x_24, 0x_02, 0x_8D, 0x_A7, 0x_58, 0x_D0,
		0x_8B, 0x_1C, 0x_A1, 0x_36, 0x_65, 0x_51, 0x_72, 0x_4A, 0x_9F, 0x_01, 0x_61, 0x_4E, 0x_7A, 0x_30, 0x_81,
		0x_03, 0x_92, 0x_6B, 0x_64, 0x_FB, 0x_AD, 0x_0F, 0x_A2, 0x_15, 0x_38, 0x_28, 0x_1A, 0x_EB,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_82, 0x_40, 0x_A2, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_87, 0x_EF, 0x_D5, 0x_97, 0x_1C, 0x_9E, 0x_93, 0x_F6, 0x_15, 0x_B1, 0x_37, 0x_CE, 0x_67, 0x_77, 0x_F2,
		0x_98, 0x_B5, 0x_A7, 0x_72, 0x_7A, 0x_25, 0x_22, 0x_AC, 0x_9B, 0x_AF, 0x_63, 0x_33, 0x_71, 0x_70, 0x_DC,
		0x_61, 0x_94, 0x_A9, 0x_AA, 0x_6D, 0x_38, 0x_3B, 0x_FA, 0x_5B, 0x_44, 0x_04, 0x_D4, 0x_BA, 0x_13, 0x_1B,
		0x_4A, 0x_31, 0x_FC, 0x_1E, 0x_CF, 0x_83, 0x_3D, 0x_C7, 0x_A6, 0x_DD, 0x_64, 0x_E5, 0x_6B, 0x_3F, 0x_A8,
		0x_A4, 0x_F0, 0x_21, 0x_C4, 0x_D6, 0x_28, 0x_A0, 0x_32, 0x_D9, 0x_4E, 0x_80, 0x_E6, 0x_10, 0x_CB, 0x_5F,
		0x_49, 0x_EA, 0x_DE, 0x_69, 0x_B3, 0x_36, 0x_59, 0x_84, 0x_92, 0x_52, 0x_DA, 0x_F5, 0x_B8, 0x_17, 0x_F7,
		0x_03, 0x_6A, 0x_DF, 0x_1D, 0x_8D, 0x_51, 0x_F9, 0x_7F, 0x_47, 0x_DB, 0x_99, 0x_3E, 0x_9C, 0x_5A, 0x_11,
		0x_D8, 0x_50, 0x_D7, 0x_C1, 0x_AD, 0x_56, 0x_C6, 0x_A2, 0x_B0, 0x_4F, 0x_ED, 0x_6F, 0x_90, 0x_AE, 0x_12,
		0x_07, 0x_1F, 0x_A3, 0x_7B, 0x_01, 0x_40, 0x_2E, 0x_76, 0x_CD, 0x_E9, 0x_8C, 0x_B4, 0x_5E, 0x_18, 0x_7D,
		0x_B7, 0x_E0, 0x_D1, 0x_85, 0x_B6, 0x_4B, 0x_EC, 0x_82, 0x_53, 0x_39, 0x_4D, 0x_58, 0x_B2, 0x_AB, 0x_19,
		0x_65, 0x_E8, 0x_E7, 0x_86, 0x_78, 0x_05, 0x_66, 0x_CA, 0x_2F, 0x_C9, 0x_F3, 0x_62, 0x_CC, 0x_43, 0x_81,
		0x_C0, 0x_06, 0x_14, 0x_26, 0x_9A, 0x_7C, 0x_34, 0x_C3, 0x_02, 0x_E1, 0x_24, 0x_42, 0x_57, 0x_EE, 0x_54,
		0x_75, 0x_29, 0x_68, 0x_6C, 0x_5C, 0x_E3, 0x_8A, 0x_F4, 0x_E2, 0x_45, 0x_23, 0x_9D, 0x_FB, 0x_1A, 0x_FE,
		0x_BF, 0x_BC, 0x_D0, 0x_27, 0x_3C, 0x_7E, 0x_C2, 0x_6E, 0x_0E, 0x_C5, 0x_60, 0x_3A, 0x_88, 0x_A5, 0x_95,
		0x_F8, 0x_4C, 0x_30, 0x_74, 0x_73, 0x_41, 0x_E4, 0x_96, 0x_A1, 0x_79, 0x_8E, 0x_B9, 0x_FD, 0x_5D, 0x_D3,
		0x_8F, 0x_16, 0x_0F, 0x_91, 0x_FF, 0x_BE, 0x_2A, 0x_9F, 0x_2C, 0x_48, 0x_89, 0x_8B, 0x_BD, 0x_EB, 0x_46,
		0x_35, 0x_F1, 0x_08, 0x_D2, 0x_55, 0x_C8, 0x_BB,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0B,
		0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0C,
		0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_1B, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_D4, 0x_17, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_17, 0x_17, 0x_17,
		0x_1B, 0x_1B, 0x_17, 0x_17, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_17,
		0x_1B, 0x_17, 0x_17, 0x_1B, 0x_1B, 0x_1B, 0x_17, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_1B,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_20,
		0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0D,
		0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_22, 0x_72, 0x_22, 0x_22, 0x_72, 0x_22, 0x_72, 0x_72, 0x_72, 0x_22,
		0x_72, 0x_22, 0x_22, 0x_5C, 0x_72, 0x_5C, 0x_72, 0x_22, 0x_5C, 0x_72, 0x_7C, 0x_22, 0x_22, 0x_22, 0x_72,
		0x_72, 0x_5C, 0x_5C, 0x_22, 0x_5C, 0x_22, 0x_72, 0x_5C, 0x_5C, 0x_5C, 0x_22, 0x_5C, 0x_72, 0x_72, 0x_72,
		0x_5C, 0x_5C, 0x_22, 0x_72, 0x_22, 0x_5C, 0x_72, 0x_72, 0x_72, 0x_22, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_22, 0x_72,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_0A,
		0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_FC, 0x_38, 0x_38, 0x_60, 0x_60, 0x_AA, 0x_AA, 0x_38, 0x_60, 0x_38,
		0x_60, 0x_0F, 0x_60, 0x_38, 0x_39, 0x_0F, 0x_AA, 0x_FC, 0x_AA, 0x_60, 0x_60, 0x_60, 0x_0F, 0x_FC, 0x_38,
		0x_38, 0x_0F, 0x_60, 0x_38, 0x_AA, 0x_60, 0x_0F, 0x_FC, 0x_38, 0x_AA, 0x_0F, 0x_AA, 0x_AA, 0x_0F, 0x_FC,
		0x_0F, 0x_0F, 0x_60, 0x_AA, 0x_AA, 0x_0F, 0x_FC, 0x_60, 0x_38, 0x_0F, 0x_0F, 0x_60, 0x_FC, 0x_AA, 0x_38,
		0x_60,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_FC, 0x_AA, 0x_38, 0x_60,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_20, 0x_0C,
		0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_5B, 0x_A6, 0x_4B, 0x_5B, 0x_ED, 0x_4B, 0x_3D, 0x_5B, 0x_5B, 0x_5B, 0x_4D, 0x_3D, 0x_2F,
		0x_A6, 0x_5B, 0x_B1, 0x_4B, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_4B, 0x_4B, 0x_ED, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_5B, 0x_3D, 0x_ED, 0x_4B, 0x_B1, 0x_4D,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_60, 0x_D7, 0x_11, 0x_11,
		0x_11, 0x_D7, 0x_11, 0x_31, 0x_11, 0x_0D, 0x_9F, 0x_BB, 0x_31, 0x_F3, 0x_9F, 0x_54, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_9F, 0x_11, 0x_D5, 0x_BB, 0x_75, 0x_54, 0x_F3, 0x_31, 0x_24, 0x_60,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_20,
		0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_8E, 0x_50, 0x_8E, 0x_19, 0x_67,
		0x_99, 0x_67, 0x_67, 0x_19, 0x_13, 0x_9E, 0x_67, 0x_96, 0x_67, 0x_D7, 0x_33, 0x_50, 0x_96, 0x_9E, 0x_33,
		0x_19, 0x_67, 0x_16, 0x_A4, 0x_50, 0x_19, 0x_8E, 0x_19, 0x_99, 0x_9E, 0x_A4, 0x_50, 0x_19, 0x_A4, 0x_96,
		0x_50, 0x_8E, 0x_92, 0x_16, 0x_92, 0x_A4, 0x_D7, 0x_19, 0x_99, 0x_16, 0x_D7, 0x_16, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_92, 0x_8E, 0x_16, 0x_99, 0x_96, 0x_9E, 0x_A4, 0x_50, 0x_FB, 0x_67, 0x_19, 0x_D7,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_7B, 0x_E7, 0x_98, 0x_E5, 0x_E7, 0x_32, 0x_EB, 0x_EB,
		0x_45, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_58, 0x_7B, 0x_EB, 0x_79, 0x_E5, 0x_06, 0x_E7, 0x_3A, 0x_97, 0x_6D, 0x_7C, 0x_98, 0x_3F, 0x_5B,
		0x_E6, 0x_F6, 0x_32, 0x_23,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_20,
		0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_09,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_B9, 0x_D5, 0x_D7, 0x_1E, 0x_23,
		0x_FD, 0x_9E, 0x_5F, 0x_23, 0x_42, 0x_A6, 0x_23, 0x_AC, 0x_D5, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_42, 0x_FD, 0x_8B, 0x_8F, 0x_D7, 0x_D1, 0x_3D, 0x_ED, 0x_99, 0x_96, 0x_12, 0x_E1, 0x_25, 0x_7F,
		0x_23, 0x_B9, 0x_0F, 0x_D5, 0x_5F, 0x_D3, 0x_48, 0x_AC, 0x_A6, 0x_1E, 0x_35, 0x_4E, 0x_38, 0x_E3, 0x_9B,
		0x_4B, 0x_7E, 0x_9F, 0x_3C, 0x_F4, 0x_F9, 0x_A5, 0x_B1, 0x_EA, 0x_BC, 0x_F7, 0x_EE,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_AB, 0x_84, 0x_14, 0x_D0, 0x_85,
		0x_AE, 0x_B8, 0x_F7, 0x_D8, 0x_D8, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_AB, 0x_84, 0x_05, 0x_2A, 0x_0F, 0x_B5, 0x_4F, 0x_A0, 0x_A3, 0x_9B, 0x_02, 0x_9F, 0x_33, 0x_83,
		0x_54, 0x_AE, 0x_CB, 0x_D5, 0x_63, 0x_D0, 0x_4C, 0x_7A, 0x_50, 0x_E8, 0x_58, 0x_BA, 0x_F4, 0x_DF, 0x_32,
		0x_91, 0x_17, 0x_36, 0x_C9, 0x_11, 0x_BF, 0x_3A, 0x_49, 0x_E0, 0x_EA, 0x_70, 0x_D8, 0x_C2, 0x_B7, 0x_85,
		0x_14, 0x_E6, 0x_9C, 0x_13, 0x_88, 0x_FA, 0x_C8, 0x_CC, 0x_37, 0x_18, 0x_98, 0x_A4, 0x_E3, 0x_65, 0x_E5,
		0x_69, 0x_9D, 0x_48, 0x_75, 0x_F7, 0x_93, 0x_19, 0x_42, 0x_44, 0x_DD, 0x_7C, 0x_6D, 0x_62,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_BD, 0x_E0, 0x_75, 0x_9C, 0x_7B, 0x_BB,
		0x_EF, 0x_E1, 0x_81, 0x_A0, 0x_7E, 0x_58, 0x_36, 0x_01, 0x_98, 0x_80, 0x_54, 0x_39, 0x_A0, 0x_B4, 0x_48,
		0x_16, 0x_F8, 0x_54, 0x_AD, 0x_F8, 0x_60, 0x_E1, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_36, 0x_F9, 0x_F6, 0x_6C, 0x_8E, 0x_2C, 0x_16, 0x_7B, 0x_C4, 0x_EF, 0x_89, 0x_D2, 0x_BD, 0x_CB,
		0x_98, 0x_18, 0x_F8, 0x_A6, 0x_E0, 0x_D0, 0x_71, 0x_15, 0x_53, 0x_60, 0x_47, 0x_B7, 0x_7D, 0x_E1, 0x_3D,
		0x_8C, 0x_E4, 0x_BF, 0x_EC, 0x_90, 0x_75, 0x_6F, 0x_ED, 0x_48, 0x_40, 0x_39, 0x_FF, 0x_D3, 0x_59, 0x_E8,
		0x_0E, 0x_BA, 0x_D6, 0x_CD, 0x_EE, 0x_35, 0x_B4, 0x_03, 0x_9C, 0x_63, 0x_D7, 0x_D8, 0x_C6, 0x_96, 0x_58,
		0x_4C, 0x_10, 0x_34, 0x_42, 0x_C0, 0x_A0, 0x_11, 0x_69, 0x_A2, 0x_F0, 0x_2A, 0x_AD, 0x_80, 0x_9F, 0x_B0,
		0x_E6, 0x_A5, 0x_FC, 0x_1F, 0x_7E, 0x_AB, 0x_73, 0x_91, 0x_D9, 0x_A3, 0x_DA, 0x_54, 0x_F5, 0x_61, 0x_81,
		0x_68, 0x_49, 0x_C1, 0x_82, 0x_01, 0x_7A, 0x_F4, 0x_4D, 0x_5D, 0x_55, 0x_29, 0x_0F, 0x_83, 0x_87, 0x_3C,
		0x_D5, 0x_B5, 0x_5A, 0x_46, 0x_A1, 0x_93, 0x_92, 0x_76,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_09,
		0x_2B, 0x_2D, 0x_EB, 0x_FC, 0x_D3, 0x_CB, 0x_D4, 0x_0D, 0x_F9, 0x_7F, 0x_AE, 0x_CA, 0x_06, 0x_3D, 0x_2C,
		0x_40, 0x_A0, 0x_F2, 0x_89, 0x_B7, 0x_70, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_EB, 0x_B3, 0x_26, 0x_07, 0x_EA, 0x_3D, 0x_DF, 0x_48, 0x_30, 0x_62, 0x_91, 0x_A5, 0x_79, 0x_84,
		0x_22, 0x_6C, 0x_CA, 0x_EE, 0x_2E, 0x_AC, 0x_D1, 0x_CB, 0x_66, 0x_A4, 0x_E1, 0x_F9, 0x_CF, 0x_93, 0x_7A,
		0x_C0, 0x_16, 0x_DA, 0x_86, 0x_31, 0x_97, 0x_F8, 0x_3E, 0x_3F, 0x_5A, 0x_46, 0x_24, 0x_34, 0x_85, 0x_3A,
		0x_BD, 0x_21, 0x_8E, 0x_4E, 0x_67, 0x_D5, 0x_7E, 0x_53, 0x_63, 0x_D4, 0x_AD, 0x_FA, 0x_40, 0x_12, 0x_39,
		0x_44, 0x_C5, 0x_C6, 0x_33, 0x_78, 0x_60, 0x_E5, 0x_99, 0x_5D, 0x_5C, 0x_7D, 0x_88, 0x_2C, 0x_95, 0x_6E,
		0x_45, 0x_4B, 0x_EF, 0x_19, 0x_64, 0x_23, 0x_89, 0x_7B, 0x_AA, 0x_8A, 0x_A6, 0x_BE, 0x_E3, 0x_B2, 0x_FE,
		0x_F0, 0x_1A, 0x_E9, 0x_08, 0x_49, 0x_E4, 0x_02, 0x_56, 0x_7C, 0x_13, 0x_4A, 0x_59, 0x_3C, 0x_27, 0x_C3,
		0x_FC, 0x_10, 0x_28, 0x_D2, 0x_A3, 0x_3B, 0x_AF, 0x_0F, 0x_F6, 0x_6D, 0x_F3, 0x_B5, 0x_41, 0x_61, 0x_E8,
		0x_96, 0x_A1, 0x_5F, 0x_E7, 0x_0E, 0x_D7, 0x_15, 0x_DB, 0x_68, 0x_9B, 0x_69, 0x_F1, 0x_D0, 0x_9D, 0x_8C,
		0x_8F, 0x_BB, 0x_C9, 0x_D3, 0x_A0, 0x_18, 0x_57, 0x_C2, 0x_B8, 0x_FD, 0x_25, 0x_65, 0x_A9, 0x_8D, 0x_FB,
		0x_8B, 0x_9F, 0x_E2, 0x_06, 0x_72, 0x_05, 0x_55, 0x_70, 0x_1C, 0x_CC, 0x_B6, 0x_CD, 0x_F2, 0x_2F, 0x_92,
		0x_83, 0x_DE, 0x_1D, 0x_11, 0x_B1, 0x_6B, 0x_CE, 0x_F5, 0x_B7, 0x_2A, 0x_54, 0x_5B, 0x_AE, 0x_52, 0x_6F,
		0x_ED, 0x_74, 0x_B0, 0x_BC, 0x_17, 0x_9A, 0x_73, 0x_E0, 0x_DD, 0x_29, 0x_7F, 0x_03, 0x_76,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_0C,
		0x_0D, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_0E, 0x_6A, 0x_1D, 0x_71,
		0x_20, 0x_72, 0x_37, 0x_7F, 0x_A2, 0x_24, 0x_AE, 0x_21, 0x_67, 0x_D0, 0x_26, 0x_05, 0x_E6, 0x_6E, 0x_F0,
		0x_12, 0x_C9, 0x_EB, 0x_B0, 0x_AF, 0x_E6, 0x_CE, 0x_9E, 0x_FD, 0x_57, 0x_48, 0x_5F, 0x_01, 0x_4B, 0x_43,
		0x_AF, 0x_64, 0x_1A, 0x_54, 0x_74, 0x_FC, 0x_D1, 0x_CD, 0x_78, 0x_16,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_E7, 0x_4D, 0x_EB, 0x_D8, 0x_3E, 0x_5E, 0x_92, 0x_CA, 0x_B7, 0x_A9, 0x_67, 0x_B3, 0x_F8, 0x_83,
		0x_F7, 0x_73, 0x_C0, 0x_EF, 0x_FA, 0x_FC, 0x_AB, 0x_B0, 0x_94, 0x_36, 0x_CB, 0x_3D, 0x_E0, 0x_5C, 0x_FB,
		0x_9F, 0x_05, 0x_C7, 0x_E4, 0x_CD, 0x_F6, 0x_93, 0x_9C, 0x_A0, 0x_C9, 0x_FF, 0x_BC, 0x_C4, 0x_BD, 0x_49,
		0x_F0, 0x_C2, 0x_98, 0x_11, 0x_E2, 0x_EE, 0x_06, 0x_61, 0x_63, 0x_52, 0x_22, 0x_66, 0x_60, 0x_39, 0x_E5,
		0x_99, 0x_D4, 0x_F2, 0x_8B, 0x_96, 0x_8C, 0x_A4, 0x_13, 0x_A3, 0x_AD, 0x_2E, 0x_59, 0x_74, 0x_62, 0x_AE,
		0x_DC, 0x_80, 0x_EA, 0x_7D, 0x_54, 0x_69, 0x_6E, 0x_4A, 0x_D0, 0x_31, 0x_FE, 0x_76, 0x_D3, 0x_DA, 0x_58,
		0x_28, 0x_0F, 0x_C8, 0x_2F, 0x_B4, 0x_B8, 0x_32, 0x_4E, 0x_89, 0x_38, 0x_AF, 0x_10, 0x_70, 0x_03, 0x_E9,
		0x_15, 0x_35, 0x_EC, 0x_BA, 0x_24, 0x_12, 0x_85, 0x_1D, 0x_E1, 0x_DD, 0x_68, 0x_4C, 0x_AC, 0x_D2, 0x_1B,
		0x_7A, 0x_43, 0x_CE, 0x_64, 0x_C3, 0x_6A, 0x_CF, 0x_DE, 0x_30, 0x_75, 0x_88, 0x_BB, 0x_9B, 0x_95, 0x_56,
		0x_C6, 0x_87, 0x_3B, 0x_1F, 0x_8F, 0x_14, 0x_72, 0x_0E, 0x_1E, 0x_F4, 0x_6F, 0x_77, 0x_5D, 0x_42, 0x_D1,
		0x_4F, 0x_F9, 0x_51, 0x_8A, 0x_86, 0x_AA, 0x_1C, 0x_D7, 0x_2C, 0x_82, 0x_D6, 0x_5F, 0x_F1, 0x_F5, 0x_50,
		0x_A1, 0x_7F, 0x_04, 0x_7C, 0x_97, 0x_29, 0x_8E, 0x_DB, 0x_07, 0x_90, 0x_5B, 0x_4B, 0x_D9, 0x_37, 0x_ED,
		0x_9A, 0x_3C, 0x_F3, 0x_23, 0x_01, 0x_27, 0x_08, 0x_65, 0x_BE, 0x_2A, 0x_53, 0x_26, 0x_8D, 0x_71, 0x_84,
		0x_9D, 0x_CC, 0x_02, 0x_1A, 0x_E3, 0x_B6, 0x_19, 0x_B2, 0x_18, 0x_A8, 0x_FD, 0x_D5, 0x_79, 0x_BF, 0x_6C,
		0x_3F, 0x_78, 0x_41, 0x_57, 0x_81, 0x_B5, 0x_45, 0x_6B, 0x_44, 0x_E6, 0x_3A, 0x_16, 0x_46, 0x_47, 0x_6D,
		0x_33, 0x_A6, 0x_A5, 0x_C5, 0x_A2, 0x_E8, 0x_25, 0x_5A, 0x_B1, 0x_55, 0x_C1, 0x_DF, 0x_17, 0x_34, 0x_91,
		0x_B9, 0x_A7, 0x_7B, 0x_48, 0x_9E, 0x_21, 0x_40,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_20,
		0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_09,
		0x_09, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_2D, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_39, 0x_39, 0x_9E, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_95, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_9E,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_2D, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC,
		0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC,
		0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC,
		0x_CC, 0x_CC, 0x_77, 0x_53, 0x_77, 0x_77, 0x_53, 0x_77, 0x_53, 0x_53, 0x_53, 0x_77, 0x_53, 0x_77, 0x_77,
		0x_CC, 0x_53, 0x_CC, 0x_53, 0x_77, 0x_CC, 0x_53, 0x_DB, 0x_77, 0x_53, 0x_CC, 0x_77, 0x_CC, 0x_77, 0x_CC,
		0x_77, 0x_53, 0x_CC, 0x_53, 0x_53, 0x_53, 0x_CC, 0x_CC, 0x_53, 0x_77, 0x_53, 0x_53, 0x_53, 0x_CC, 0x_53,
		0x_CC, 0x_77, 0x_CC, 0x_CC, 0x_53, 0x_77, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_77, 0x_53,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0B,
		0x_20, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_2D, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_93, 0x_8B, 0x_8B, 0x_78, 0x_78, 0x_3B, 0x_3B,
		0x_8B, 0x_78, 0x_8B, 0x_78, 0x_87, 0x_78, 0x_8B, 0x_6B, 0x_3B, 0x_87, 0x_8B, 0x_87, 0x_3B, 0x_3B, 0x_87,
		0x_93, 0x_78, 0x_78, 0x_93, 0x_78, 0x_3B, 0x_78, 0x_3B, 0x_93, 0x_8B, 0x_8B, 0x_8B, 0x_87, 0x_8B, 0x_93,
		0x_8B,
	];
	const BASE: &[u8] = &[
		0x_87, 0x_93, 0x_3B, 0x_8B, 0x_78,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_09,
		0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_2D, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_BE, 0x_8F, 0x_49, 0x_BE, 0x_5C, 0x_49, 0x_9F, 0x_BE, 0x_BE, 0x_BE, 0x_1C,
		0x_9F, 0x_50, 0x_1C, 0x_8F, 0x_8F, 0x_1C, 0x_5C, 0x_8F, 0x_49, 0x_BE, 0x_9F, 0x_DE, 0x_DE, 0x_DE, 0x_8F,
		0x_1C, 0x_BE, 0x_5C, 0x_BE, 0x_DE, 0x_9F, 0x_8F, 0x_49, 0x_1C, 0x_9F, 0x_DE, 0x_DE, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_BE, 0x_9F, 0x_5C, 0x_49, 0x_DE, 0x_1C,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_09,
		0x_0A, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_09,
		0x_0A, 0x_0C, 0x_2D, 0x_08, 0x_08, 0x_08, 0x_4A, 0x_08, 0x_7F, 0x_7F, 0x_7F, 0x_08, 0x_7F, 0x_16, 0x_7F,
		0x_5C, 0x_16, 0x_AE, 0x_AE, 0x_79, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_79, 0x_7F, 0x_3F, 0x_AE, 0x_EC, 0x_EE, 0x_6F, 0x_16, 0x_68, 0x_4A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0A,
		0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_2D, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_6C, 0x_A8, 0x_6C, 0x_C3, 0x_C8, 0x_B9, 0x_C8, 0x_C8, 0x_C3, 0x_2B, 0x_C3,
		0x_7D, 0x_B9, 0x_E4, 0x_C3, 0x_A1, 0x_C8, 0x_6C,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_AE, 0x_6C, 0x_7D, 0x_B9, 0x_16, 0x_A1, 0x_E4, 0x_A8, 0x_BD, 0x_C8, 0x_C3, 0x_BF,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_2D, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FB, 0x_D0, 0x_F1, 0x_74, 0x_D0, 0x_C4, 0x_A8,
		0x_A8, 0x_14, 0x_F1, 0x_FB, 0x_1A, 0x_C4, 0x_75, 0x_B1, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_11, 0x_FB, 0x_A8, 0x_D5, 0x_74, 0x_1A, 0x_D0, 0x_DB, 0x_63, 0x_75, 0x_23, 0x_F1, 0x_DA, 0x_ED,
		0x_B1, 0x_CC, 0x_C4, 0x_0E,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_2D, 0x_52,
		0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52,
		0x_52, 0x_CF, 0x_9D, 0x_BF, 0x_75, 0x_BD, 0x_2C, 0x_8F, 0x_EA, 0x_31, 0x_30, 0x_02, 0x_63, 0x_2C, 0x_5C,
		0x_9C, 0x_52, 0x_5C, 0x_38, 0x_31, 0x_44, 0x_10, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_6D, 0x_2C, 0x_93, 0x_F3, 0x_BF, 0x_14, 0x_30, 0x_31, 0x_B3, 0x_21, 0x_1E, 0x_5C, 0x_5D, 0x_A4,
		0x_BD, 0x_CF, 0x_1C, 0x_9D, 0x_D6, 0x_10, 0x_C4, 0x_CE, 0x_9B, 0x_75, 0x_63, 0x_05, 0x_3C, 0x_B1, 0x_EA,
		0x_44, 0x_9C, 0x_F0, 0x_AC, 0x_02, 0x_89, 0x_38, 0x_A2, 0x_55, 0x_22, 0x_08, 0x_98,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0A,
		0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_2D,
		0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59,
		0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_0F, 0x_DC, 0x_D8,
		0x_54, 0x_15, 0x_32, 0x_CE, 0x_F8, 0x_43, 0x_5F, 0x_3B, 0x_2A, 0x_4B, 0x_D8, 0x_43, 0x_43, 0x_9D, 0x_49,
		0x_D4, 0x_B0, 0x_8F, 0x_71, 0x_53, 0x_67, 0x_32, 0x_5E, 0x_04, 0x_08, 0x_D8, 0x_0F, 0x_F8, 0x_67, 0x_B9,
		0x_53, 0x_4B, 0x_5B, 0x_90, 0x_9E, 0x_49, 0x_3C, 0x_3B, 0x_28, 0x_72, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_0F, 0x_DC, 0x_6F, 0x_43, 0x_3C, 0x_D6, 0x_90, 0x_49, 0x_EC, 0x_F8, 0x_4D, 0x_89, 0x_17, 0x_73,
		0x_C8, 0x_32, 0x_A0, 0x_71, 0x_5E, 0x_54, 0x_AE, 0x_A8, 0x_72, 0x_F3, 0x_A4, 0x_3B, 0x_B9, 0x_B0, 0x_9D,
		0x_53, 0x_2A, 0x_D4, 0x_45, 0x_40, 0x_76, 0x_9E, 0x_91, 0x_69, 0x_1F, 0x_08, 0x_78, 0x_18, 0x_28, 0x_15,
		0x_D8, 0x_42, 0x_C4, 0x_D9, 0x_21, 0x_F2, 0x_BA, 0x_26, 0x_8F, 0x_2C, 0x_DE, 0x_E5, 0x_07, 0x_BC, 0x_EB,
		0x_F9, 0x_B8, 0x_EE, 0x_46, 0x_5B, 0x_A6, 0x_8D, 0x_5A, 0x_4B, 0x_04, 0x_67, 0x_85, 0x_5F,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_2D, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_5F, 0x_E7, 0x_69, 0x_2E, 0x_24, 0x_A7, 0x_60, 0x_87, 0x_89, 0x_A9, 0x_84, 0x_80,
		0x_49, 0x_2C, 0x_62, 0x_B5, 0x_22, 0x_D3, 0x_89, 0x_96, 0x_5D, 0x_A8, 0x_60, 0x_A9, 0x_CA, 0x_B7, 0x_13,
		0x_C2, 0x_60, 0x_5D, 0x_13, 0x_13, 0x_C1, 0x_22, 0x_D7, 0x_4D, 0x_CF, 0x_EB, 0x_A1, 0x_0E, 0x_45, 0x_29,
		0x_FF,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_97, 0x_83, 0x_FF, 0x_E8, 0x_B8, 0x_68, 0x_14, 0x_24, 0x_48, 0x_EA, 0x_27, 0x_B7, 0x_5F, 0x_1B,
		0x_57, 0x_D1, 0x_03, 0x_3E, 0x_E7, 0x_52, 0x_E6, 0x_06, 0x_62, 0x_2C, 0x_CF, 0x_6D, 0x_49, 0x_AE, 0x_74,
		0x_01, 0x_5D, 0x_FC, 0x_B4, 0x_53, 0x_69, 0x_72, 0x_A6, 0x_61, 0x_D7, 0x_60, 0x_BC, 0x_B6, 0x_D2, 0x_DB,
		0x_78, 0x_6B, 0x_F1, 0x_A9, 0x_B9, 0x_45, 0x_35, 0x_96, 0x_2E, 0x_F4, 0x_CB, 0x_F9, 0x_84, 0x_AC, 0x_C6,
		0x_1D, 0x_31, 0x_89, 0x_CA, 0x_99, 0x_A3, 0x_88, 0x_E2, 0x_23, 0x_D3, 0x_C2, 0x_12, 0x_C8, 0x_4D, 0x_32,
		0x_85, 0x_3A, 0x_5E, 0x_2F, 0x_39, 0x_C1, 0x_75, 0x_EF, 0x_22, 0x_A5, 0x_A1, 0x_CC, 0x_BE, 0x_95, 0x_65,
		0x_FB, 0x_A8, 0x_77, 0x_E1, 0x_07, 0x_46, 0x_87, 0x_A2, 0x_B5, 0x_13, 0x_EB, 0x_86, 0x_29, 0x_93, 0x_43,
		0x_0E, 0x_F5, 0x_C5, 0x_80, 0x_30, 0x_BF, 0x_10, 0x_BB,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_20,
		0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_2D, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_8B, 0x_25,
		0x_23, 0x_E6, 0x_D2, 0x_21, 0x_E6, 0x_AD, 0x_2E, 0x_A6, 0x_E3, 0x_0E, 0x_9E, 0x_A6, 0x_8D, 0x_19, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_CD, 0x_8B, 0x_F4, 0x_DC, 0x_63, 0x_45, 0x_77, 0x_4A, 0x_AF, 0x_C8, 0x_EC, 0x_E4, 0x_F7, 0x_83, 0x_CF,
		0x_36, 0x_58, 0x_76, 0x_BB, 0x_5E, 0x_AD, 0x_AC, 0x_E6, 0x_7F, 0x_40, 0x_BE, 0x_87, 0x_96, 0x_9E, 0x_67,
		0x_44, 0x_5F, 0x_F1, 0x_A6, 0x_BD, 0x_61, 0x_92, 0x_03, 0x_39, 0x_30, 0x_84, 0x_2C, 0x_01, 0x_B9, 0x_17,
		0x_FA, 0x_62, 0x_1B, 0x_A5, 0x_B1, 0x_BA, 0x_35, 0x_6A, 0x_C1, 0x_D2, 0x_9F, 0x_65, 0x_97, 0x_B5, 0x_DF,
		0x_B4, 0x_12, 0x_DA, 0x_3C, 0x_06, 0x_F3, 0x_52, 0x_CA, 0x_49, 0x_C6, 0x_24, 0x_16, 0x_A8, 0x_9B, 0x_9A,
		0x_22, 0x_5B, 0x_42, 0x_4E, 0x_A0, 0x_D6, 0x_ED, 0x_EB, 0x_AB, 0x_1A, 0x_19, 0x_6D, 0x_3E, 0x_A4, 0x_DD,
		0x_78, 0x_89, 0x_66, 0x_A2, 0x_6F, 0x_E2, 0x_FF, 0x_31, 0x_64, 0x_2A, 0x_43, 0x_D9, 0x_56, 0x_8D, 0x_3A,
		0x_25, 0x_E8, 0x_C4, 0x_B3, 0x_D5, 0x_E7, 0x_7B, 0x_28, 0x_E5, 0x_80, 0x_53, 0x_A3, 0x_C3, 0x_4B, 0x_29,
		0x_FC, 0x_33, 0x_B0, 0x_86, 0x_1F, 0x_02, 0x_BF, 0x_51, 0x_2E, 0x_FE, 0x_E1, 0x_18, 0x_AA, 0x_8F, 0x_9C,
		0x_60, 0x_0E, 0x_AE, 0x_23, 0x_E3, 0x_CE, 0x_71, 0x_04, 0x_5A, 0x_8C, 0x_95, 0x_DE, 0x_F2, 0x_3F, 0x_1D,
		0x_D8, 0x_98, 0x_90, 0x_9D, 0x_13, 0x_C7, 0x_5D, 0x_79, 0x_5C, 0x_91, 0x_47, 0x_73, 0x_F9, 0x_C0, 0x_4D,
		0x_EE, 0x_69, 0x_F0, 0x_48, 0x_EF, 0x_55, 0x_C5, 0x_75, 0x_72, 0x_D0, 0x_CC, 0x_74, 0x_68, 0x_E0, 0x_1C,
		0x_26, 0x_50, 0x_94, 0x_37, 0x_A9, 0x_DB, 0x_B6, 0x_EA, 0x_7C, 0x_85, 0x_08, 0x_57, 0x_6C,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_2D, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_23, 0x_5D, 0x_4C, 0x_EF,
		0x_0C, 0x_C2, 0x_01, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_95, 0x_B0, 0x_1D, 0x_41, 0x_99, 0x_81, 0x_9C, 0x_F6, 0x_75, 0x_CE, 0x_53, 0x_D5, 0x_97, 0x_07,
		0x_DA, 0x_E1, 0x_90, 0x_43, 0x_EE, 0x_F0, 0x_C6, 0x_8E, 0x_6E, 0x_40, 0x_7D, 0x_FF, 0x_96, 0x_85, 0x_AC,
		0x_B2, 0x_0F, 0x_5A, 0x_64, 0x_9E, 0x_2F, 0x_6B, 0x_52, 0x_6F, 0x_84, 0x_2C, 0x_14, 0x_8F, 0x_3C, 0x_86,
		0x_C3, 0x_51, 0x_35, 0x_63, 0x_C7, 0x_2A, 0x_05, 0x_1A, 0x_79, 0x_A4, 0x_13, 0x_E6, 0x_A9, 0x_AB, 0x_AD,
		0x_DC, 0x_82, 0x_7A, 0x_B5, 0x_3B, 0x_E5, 0x_6C, 0x_62, 0x_F1, 0x_25, 0x_E4, 0x_0E, 0x_9A, 0x_CD, 0x_5C,
		0x_7F, 0x_E2, 0x_04, 0x_5F, 0x_28, 0x_6A, 0x_3F, 0x_CF, 0x_54, 0x_FB, 0x_B6, 0x_4D, 0x_5B, 0x_26, 0x_BC,
		0x_10, 0x_27, 0x_6D, 0x_A5, 0x_E3, 0x_77, 0x_B7, 0x_38, 0x_B4, 0x_A7, 0x_4F, 0x_5E, 0x_94, 0x_D7, 0x_29,
		0x_9F, 0x_CA, 0x_BF, 0x_EA, 0x_D0, 0x_F2, 0x_15, 0x_4C, 0x_A2, 0x_67, 0x_BB, 0x_34, 0x_18, 0x_70, 0x_49,
		0x_83, 0x_01, 0x_B9, 0x_73, 0x_D4, 0x_5D, 0x_72, 0x_08, 0x_E0, 0x_B1, 0x_98, 0x_03, 0x_9B, 0x_30, 0x_74,
		0x_80, 0x_D8, 0x_24, 0x_31, 0x_69, 0x_56, 0x_E7, 0x_23, 0x_FC, 0x_3A, 0x_F8, 0x_22, 0x_A1, 0x_59, 0x_EC,
		0x_89, 0x_7B, 0x_F5, 0x_ED, 0x_A6, 0x_78, 0x_BA, 0x_87, 0x_4E, 0x_16, 0x_E9, 0x_91, 0x_C4, 0x_F7, 0x_FA,
		0x_46, 0x_FE, 0x_48, 0x_58, 0x_4A, 0x_D1, 0x_C8, 0x_92, 0x_65, 0x_DD, 0x_1E, 0x_F4, 0x_D2, 0x_C1, 0x_19,
		0x_F3, 0x_50, 0x_9D, 0x_47, 0x_2E, 0x_33, 0x_44, 0x_8D, 0x_17, 0x_8B, 0x_3D, 0x_F9, 0x_60, 0x_EF, 0x_A0,
		0x_CC, 0x_C5, 0x_8C, 0x_D6, 0x_DF, 0x_76, 0x_61, 0x_36, 0x_71, 0x_DE, 0x_7C, 0x_66, 0x_11, 0x_D9, 0x_3E,
		0x_88, 0x_57, 0x_1F, 0x_D3, 0x_37, 0x_39, 0x_42, 0x_68, 0x_45, 0x_B8, 0x_21, 0x_DB, 0x_A8, 0x_B3, 0x_4B,
		0x_CB, 0x_93, 0x_1B, 0x_C9, 0x_C0, 0x_AE, 0x_FD, 0x_AF, 0x_55, 0x_C2, 0x_7E, 0x_A3, 0x_06, 0x_BE, 0x_BD,
		0x_8A, 0x_12, 0x_E8, 0x_1C, 0x_32, 0x_02, 0x_EB,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_E7, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_C5, 0x_45, 0x_E7, 0x_45, 0x_45, 0x_E7, 0x_45, 0x_E7, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_E7,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93,
		0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_34, 0x_B4, 0x_34, 0x_34, 0x_B4,
		0x_34, 0x_B4, 0x_B4, 0x_B4, 0x_34, 0x_B4, 0x_34, 0x_34, 0x_93, 0x_B4, 0x_93, 0x_B4, 0x_34, 0x_93, 0x_B4,
		0x_F7, 0x_34, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_34, 0x_34, 0x_93, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_34,
		0x_93, 0x_34, 0x_93, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_34, 0x_B4,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_6B, 0x_3F,
		0x_3F, 0x_5A, 0x_5A, 0x_4C, 0x_4C, 0x_3F, 0x_5A, 0x_3F, 0x_5A, 0x_9E, 0x_5A, 0x_3F, 0x_D8, 0x_4C, 0x_9E,
		0x_9E, 0x_4C, 0x_3F, 0x_3F, 0x_4C, 0x_9E, 0x_5A, 0x_5A, 0x_3F, 0x_9E, 0x_6B, 0x_6B, 0x_9E, 0x_4C, 0x_3F,
		0x_9E, 0x_9E, 0x_4C, 0x_4C, 0x_5A, 0x_3F, 0x_6B, 0x_5A, 0x_9E, 0x_9E, 0x_9E, 0x_5A, 0x_9E, 0x_6B, 0x_3F,
		0x_6B, 0x_3F, 0x_3F, 0x_4C,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_6B, 0x_4C, 0x_3F, 0x_5A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_4E, 0x_C4, 0x_26, 0x_4E, 0x_E8, 0x_26, 0x_EA, 0x_4E,
		0x_4E, 0x_4E, 0x_6C, 0x_EA, 0x_49, 0x_EA, 0x_E8, 0x_EA, 0x_26, 0x_E8, 0x_6C, 0x_6C, 0x_26, 0x_B5, 0x_B5,
		0x_4E, 0x_E8, 0x_E8, 0x_6C, 0x_E8, 0x_C4, 0x_EA, 0x_B5, 0x_C4, 0x_6C, 0x_B5, 0x_26, 0x_E8, 0x_B5, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_4E, 0x_EA, 0x_E8, 0x_26, 0x_B5, 0x_6C,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71,
		0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71,
		0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71,
		0x_71, 0x_C3, 0x_71, 0x_1C, 0x_1C, 0x_1C, 0x_71, 0x_1C, 0x_F5, 0x_1C, 0x_96, 0x_1C, 0x_9F, 0x_CF, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_71, 0x_CE, 0x_1C, 0x_BA, 0x_A5, 0x_A9, 0x_CF, 0x_9F, 0x_F5, 0x_A3, 0x_C3,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_ED, 0x_4A, 0x_ED, 0x_08, 0x_01, 0x_D6, 0x_01, 0x_01, 0x_08, 0x_E5,
		0x_AE, 0x_D6, 0x_FC, 0x_4B, 0x_4B, 0x_4A, 0x_FC, 0x_08, 0x_4B, 0x_4B, 0x_ED, 0x_01, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_FC, 0x_ED, 0x_4B, 0x_D6, 0x_BD, 0x_AE, 0x_40, 0x_4A, 0x_D5, 0x_01, 0x_08, 0x_78,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE,
		0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE,
		0x_BE, 0x_BE, 0x_BE, 0x_5E, 0x_C9, 0x_75, 0x_4D, 0x_C9, 0x_81, 0x_9D, 0x_9D, 0x_FA, 0x_75, 0x_4B, 0x_C9,
		0x_BE, 0x_02, 0x_02, 0x_BF, 0x_C2, 0x_B4, 0x_BE, 0x_4B, 0x_12, 0x_C9, 0x_4D, 0x_C2, 0x_59, 0x_BF, 0x_C2,
		0x_90, 0x_B4, 0x_BE, 0x_C2, 0x_12, 0x_B4, 0x_02, 0x_90, 0x_AB, 0x_B4, 0x_02, 0x_75, 0x_BF, 0x_B4, 0x_90,
		0x_4D, 0x_C2, 0x_BE, 0x_81, 0x_4D, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_BE, 0x_59, 0x_5E, 0x_9D, 0x_02, 0x_4D, 0x_C2, 0x_C9, 0x_AB, 0x_90, 0x_8B, 0x_12, 0x_75, 0x_4B, 0x_B4,
		0x_BF, 0x_8F, 0x_81, 0x_79,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88,
		0x_88, 0x_6B, 0x_D7, 0x_AA, 0x_BB, 0x_CC, 0x_D2, 0x_AB, 0x_18, 0x_39, 0x_24, 0x_A7, 0x_E0, 0x_C3, 0x_8B,
		0x_A2, 0x_CC, 0x_D2, 0x_DE, 0x_B8, 0x_8A, 0x_D0, 0x_2F, 0x_2F, 0x_C3, 0x_AA, 0x_D2, 0x_8A, 0x_A2,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_7F, 0x_D2, 0x_E4, 0x_FC, 0x_AA, 0x_E0, 0x_DE, 0x_8A, 0x_2A, 0x_2F, 0x_60, 0x_04, 0x_8E, 0x_A2,
		0x_CC, 0x_6B, 0x_DF, 0x_D7, 0x_39, 0x_B1, 0x_18, 0x_25, 0x_27, 0x_BB, 0x_A7, 0x_24, 0x_8B, 0x_30, 0x_32,
		0x_CB, 0x_C3, 0x_B4, 0x_D5, 0x_6F, 0x_E6, 0x_B8, 0x_4E, 0x_B7, 0x_D9, 0x_D0, 0x_7D,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_05, 0x_05, 0x_05, 0x_05,
		0x_7D, 0x_5E, 0x_72, 0x_90, 0x_EB, 0x_D7, 0x_4A, 0x_35, 0x_FF, 0x_02, 0x_89, 0x_F2, 0x_80, 0x_01, 0x_FB,
		0x_CF, 0x_98, 0x_FC, 0x_9A, 0x_18, 0x_DE, 0x_01, 0x_AB, 0x_1A, 0x_BB, 0x_18, 0x_9B, 0x_AB, 0x_82, 0x_14,
		0x_9B, 0x_E2, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_7D, 0x_5E, 0x_55, 0x_B4, 0x_D4, 0x_79, 0x_F0, 0x_40, 0x_74, 0x_CF, 0x_02, 0x_AB, 0x_7A, 0x_80,
		0x_C3, 0x_D7, 0x_97, 0x_89, 0x_39, 0x_90, 0x_47, 0x_18, 0x_C0, 0x_A1, 0x_DE, 0x_6C, 0x_BF, 0x_9B, 0x_2A,
		0x_82, 0x_42, 0x_A5, 0x_35, 0x_9D, 0x_6B, 0x_E2, 0x_B2, 0x_1B, 0x_2F, 0x_CB, 0x_4D, 0x_88, 0x_76, 0x_EB,
		0x_72, 0x_A9, 0x_D5, 0x_FC, 0x_E1, 0x_26, 0x_F8, 0x_A6, 0x_98, 0x_C2, 0x_BB, 0x_AD, 0x_9A, 0x_15, 0x_EE,
		0x_AC, 0x_01, 0x_63, 0x_1C, 0x_19, 0x_FB, 0x_14, 0x_F2, 0x_CA, 0x_CC, 0x_50, 0x_1A, 0x_FF,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2,
		0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2,
		0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_06, 0x_C8, 0x_96, 0x_A5, 0x_2E, 0x_02, 0x_31,
		0x_AA, 0x_DB, 0x_29, 0x_F8, 0x_FC, 0x_24, 0x_16, 0x_4B, 0x_50, 0x_4F, 0x_49, 0x_A8, 0x_3F, 0x_FF, 0x_CB,
		0x_3C, 0x_90, 0x_BA, 0x_34, 0x_FE, 0x_3F, 0x_39, 0x_13, 0x_79, 0x_34, 0x_43, 0x_ED, 0x_1C, 0x_C1, 0x_63,
		0x_33, 0x_F9, 0x_31, 0x_08, 0x_F9, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_16, 0x_3C, 0x_34, 0x_F4, 0x_62, 0x_BF, 0x_4B, 0x_2E, 0x_1A, 0x_D7, 0x_31, 0x_2C, 0x_06, 0x_BC,
		0x_CC, 0x_C1, 0x_5B, 0x_33, 0x_C8, 0x_72, 0x_1C, 0x_DB, 0x_F9, 0x_73, 0x_C5, 0x_28, 0x_27, 0x_47, 0x_4E,
		0x_A8, 0x_D3, 0x_D5, 0x_4F, 0x_70, 0x_96, 0x_4D, 0x_D0, 0x_AE, 0x_35, 0x_95, 0x_A1, 0x_63, 0x_FB, 0x_E5,
		0x_DC, 0x_0E, 0x_E3, 0x_37, 0x_DA, 0x_3E, 0x_90, 0x_7B, 0x_A5, 0x_45, 0x_8E, 0x_51, 0x_B4, 0x_9D, 0x_C3,
		0x_9C, 0x_FE, 0x_92, 0x_8A, 0x_5E, 0x_A7, 0x_F5, 0x_39, 0x_50, 0x_CF, 0x_24, 0x_FF, 0x_6B, 0x_DF, 0x_D8,
		0x_14, 0x_6A, 0x_88, 0x_B7, 0x_43, 0x_C6, 0x_91, 0x_1E, 0x_F8, 0x_8D, 0x_BA, 0x_F1, 0x_13, 0x_F7, 0x_A0,
		0x_04, 0x_3F, 0x_AC, 0x_38, 0x_FC, 0x_9F, 0x_49, 0x_1F, 0x_08, 0x_77, 0x_3D, 0x_C4, 0x_CB, 0x_29, 0x_5A,
		0x_AA, 0x_79, 0x_44, 0x_ED, 0x_36, 0x_DE, 0x_6F, 0x_B3,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_69, 0x_69, 0x_69, 0x_69,
		0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_A9,
		0x_31, 0x_CC, 0x_47, 0x_37, 0x_43, 0x_D8, 0x_D8, 0x_6B, 0x_9B, 0x_2F, 0x_51, 0x_C9, 0x_6B, 0x_17, 0x_48,
		0x_DA,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_A9, 0x_94, 0x_EE, 0x_E5, 0x_21, 0x_8B, 0x_AF, 0x_C1, 0x_4C, 0x_86, 0x_EC, 0x_91, 0x_B3, 0x_08,
		0x_2F, 0x_E8, 0x_1F, 0x_BF, 0x_8A, 0x_92, 0x_9E, 0x_47, 0x_E3, 0x_A3, 0x_5A, 0x_19, 0x_48, 0x_45, 0x_26,
		0x_6D, 0x_7C, 0x_24, 0x_36, 0x_7E, 0x_D0, 0x_1E, 0x_50, 0x_1B, 0x_07, 0x_96, 0x_82, 0x_C9, 0x_8F, 0x_FA,
		0x_74, 0x_8E, 0x_65, 0x_25, 0x_18, 0x_E7, 0x_D3, 0x_46, 0x_B2, 0x_37, 0x_84, 0x_81, 0x_05, 0x_B1, 0x_C6,
		0x_BD, 0x_DF, 0x_98, 0x_D9, 0x_79, 0x_E1, 0x_80, 0x_F0, 0x_9C, 0x_02, 0x_AE, 0x_77, 0x_CA, 0x_5D, 0x_7F,
		0x_2C, 0x_51, 0x_C4, 0x_B7, 0x_17, 0x_D6, 0x_7D, 0x_35, 0x_2A, 0x_F8, 0x_BC, 0x_EA, 0x_D7, 0x_ED, 0x_60,
		0x_61, 0x_BA, 0x_AB, 0x_0F, 0x_9A, 0x_FB, 0x_DA, 0x_4A, 0x_DB, 0x_F4, 0x_59, 0x_8C, 0x_D4, 0x_29, 0x_B8,
		0x_31, 0x_CB, 0x_D8, 0x_04, 0x_F3, 0x_4F, 0x_52, 0x_C3, 0x_D2, 0x_49, 0x_06, 0x_E9, 0x_2E, 0x_58, 0x_28,
		0x_6C, 0x_F1, 0x_BB, 0x_A0, 0x_5B, 0x_A2, 0x_5C, 0x_11, 0x_95, 0x_9F, 0x_AC, 0x_4B, 0x_F9, 0x_54, 0x_AA,
		0x_B5, 0x_30, 0x_C2, 0x_CC, 0x_EB, 0x_70, 0x_66, 0x_01, 0x_15, 0x_27, 0x_6A, 0x_6B, 0x_16, 0x_A1, 0x_C7,
		0x_BE, 0x_57, 0x_4D, 0x_39, 0x_67, 0x_A7, 0x_3F, 0x_3B, 0x_9B, 0x_4E, 0x_89, 0x_FD, 0x_72, 0x_68, 0x_97,
		0x_6E, 0x_3A, 0x_B9, 0x_C5, 0x_12, 0x_CF, 0x_90, 0x_E0, 0x_22, 0x_83, 0x_7A, 0x_63, 0x_F7, 0x_34, 0x_3C,
		0x_03, 0x_41, 0x_78, 0x_EF, 0x_56, 0x_B0, 0x_87, 0x_23, 0x_DC, 0x_FE, 0x_A5, 0x_99, 0x_73,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_C0, 0x_C0, 0x_C0, 0x_C0,
		0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_4E, 0x_62, 0x_47, 0x_BF, 0x_0A, 0x_3A,
		0x_3D, 0x_1B, 0x_34, 0x_D1, 0x_A7, 0x_E4, 0x_A0, 0x_14, 0x_BD, 0x_05, 0x_7B, 0x_E4, 0x_96, 0x_BB, 0x_9B,
		0x_47, 0x_39, 0x_F9, 0x_B8, 0x_97,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_0E, 0x_43, 0x_C8, 0x_56, 0x_F2, 0x_21, 0x_FF, 0x_36, 0x_F0, 0x_02, 0x_01, 0x_49, 0x_33, 0x_7D,
		0x_48, 0x_F6, 0x_EC, 0x_8C, 0x_8A, 0x_53, 0x_42, 0x_C6, 0x_78, 0x_68, 0x_E4, 0x_D2, 0x_AE, 0x_B4, 0x_FE,
		0x_30, 0x_39, 0x_F5, 0x_9B, 0x_DE, 0x_D5, 0x_4A, 0x_6D, 0x_8E, 0x_D7, 0x_9A, 0x_31, 0x_95, 0x_51, 0x_B5,
		0x_9F, 0x_37, 0x_94, 0x_E6, 0x_66, 0x_34, 0x_A2, 0x_CB, 0x_CC, 0x_A7, 0x_63, 0x_57, 0x_80, 0x_4D, 0x_C2,
		0x_90, 0x_1D, 0x_79, 0x_40, 0x_0F, 0x_76, 0x_18, 0x_12, 0x_27, 0x_16, 0x_15, 0x_81, 0x_97, 0x_DC, 0x_F4,
		0x_AA, 0x_44, 0x_5F, 0x_F8, 0x_5C, 0x_69, 0x_C7, 0x_BD, 0x_06, 0x_1A, 0x_CF, 0x_41, 0x_D0, 0x_1B, 0x_2E,
		0x_D6, 0x_19, 0x_9E, 0x_FA, 0x_A4, 0x_D9, 0x_13, 0x_C1, 0x_E7, 0x_8B, 0x_D3, 0x_98, 0x_2F, 0x_3E, 0x_A1,
		0x_26, 0x_B1, 0x_84, 0x_83, 0x_E3, 0x_DA, 0x_50, 0x_47, 0x_E2, 0x_28, 0x_3F, 0x_74, 0x_11, 0x_03, 0x_B3,
		0x_4B, 0x_F1, 0x_B7, 0x_CE, 0x_25, 0x_62, 0x_85, 0x_C9, 0x_2C, 0x_55, 0x_EE, 0x_52, 0x_61, 0x_BB, 0x_3C,
		0x_EA, 0x_AC, 0x_8F, 0x_70, 0x_88, 0x_DF, 0x_1E, 0x_4E, 0x_A3, 0x_99, 0x_08, 0x_87, 0x_D1, 0x_75, 0x_1C,
		0x_04, 0x_22, 0x_B2, 0x_6C, 0x_F9, 0x_7B, 0x_93, 0x_71, 0x_91, 0x_5A, 0x_89, 0x_DD, 0x_32, 0x_DB, 0x_3A,
		0x_A9, 0x_3B, 0x_8D, 0x_58, 0x_ED, 0x_29, 0x_73, 0x_17, 0x_96, 0x_E8, 0x_E5, 0x_BC, 0x_45, 0x_60, 0x_FC,
		0x_E9, 0x_7F, 0x_2A, 0x_59, 0x_B9, 0x_64, 0x_FD, 0x_46, 0x_A8, 0x_38, 0x_FB, 0x_A5, 0x_3D, 0x_BF, 0x_B6,
		0x_AF, 0x_24, 0x_7A, 0x_C4, 0x_7C, 0x_D4, 0x_E1, 0x_F3, 0x_72, 0x_EF, 0x_92, 0x_CA, 0x_65, 0x_CD, 0x_D8,
		0x_82, 0x_67, 0x_AB, 0x_BE, 0x_AD, 0x_77, 0x_B0, 0x_07, 0x_6E, 0x_E0, 0x_EB, 0x_9D, 0x_35, 0x_5E, 0x_5B,
		0x_6A, 0x_23, 0x_A0, 0x_14, 0x_6B, 0x_1F, 0x_B8, 0x_7E, 0x_86, 0x_54, 0x_5D, 0x_4C, 0x_C5, 0x_BA, 0x_6F,
		0x_05, 0x_C3, 0x_9C, 0x_10, 0x_4F, 0x_A6, 0x_F7,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0C,
		0x_20, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_09,
		0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_CE, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_1D, 0x_CE, 0x_CE, 0x_CE, 0x_11, 0x_11, 0x_CE, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_CE,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_0C,
		0x_0B, 0x_20, 0x_0D, 0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_9D, 0x_D9, 0x_9D, 0x_9D, 0x_D9, 0x_9D, 0x_D9, 0x_D9, 0x_D9, 0x_9D,
		0x_D9, 0x_9D, 0x_9D, 0x_E6, 0x_D9, 0x_E6, 0x_D9, 0x_9D, 0x_E6, 0x_D9, 0x_2F, 0x_D9, 0x_E6, 0x_E6, 0x_D9,
		0x_E6, 0x_9D, 0x_9D, 0x_E6,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_9D, 0x_D9,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_1D, 0x_48, 0x_41, 0x_41, 0x_FA, 0x_FA, 0x_45, 0x_45, 0x_41, 0x_FA, 0x_41, 0x_FA, 0x_1D,
		0x_FA, 0x_41, 0x_7A, 0x_1D, 0x_41, 0x_41, 0x_FA, 0x_41, 0x_41, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_41,
		0x_1D, 0x_41, 0x_1D, 0x_41, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_48, 0x_45, 0x_41, 0x_FA,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA,
		0x_B7, 0x_FA, 0x_E3, 0x_B7, 0x_FB, 0x_E3, 0x_5B, 0x_B7, 0x_B7, 0x_B7, 0x_5D, 0x_5B, 0x_C1, 0x_5D, 0x_E3,
		0x_E3, 0x_E3, 0x_FA, 0x_B7, 0x_E3, 0x_FA, 0x_B7, 0x_B7, 0x_5D, 0x_B7, 0x_E3, 0x_FA, 0x_E3, 0x_5D, 0x_FA,
		0x_FA, 0x_21, 0x_E3, 0x_5B, 0x_FB, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_B7, 0x_5B, 0x_FB, 0x_E3, 0x_21, 0x_5D,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_51, 0x_51, 0x_51,
		0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_5E, 0x_51, 0x_81, 0x_81, 0x_81, 0x_51, 0x_81, 0x_FC, 0x_81,
		0x_C3, 0x_B1, 0x_9F, 0x_B1, 0x_5E, 0x_CF, 0x_5E, 0x_51, 0x_48, 0x_B1, 0x_51, 0x_2C, 0x_2C, 0x_FC, 0x_81,
		0x_C2, 0x_FC, 0x_9F, 0x_9F, 0x_6F, 0x_6F, 0x_CF, 0x_81, 0x_2C, 0x_FC, 0x_FC, 0x_48, 0x_81, 0x_FC, 0x_81,
		0x_FC, 0x_2C, 0x_2C, 0x_C2, 0x_C2, 0x_CF, 0x_9F, 0x_6F, 0x_81, 0x_6F, 0x_C2, 0x_C2, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_6F, 0x_81, 0x_48, 0x_B1, 0x_2C, 0x_CF, 0x_C2, 0x_FC, 0x_9F, 0x_5E,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_60, 0x_60, 0x_60, 0x_60, 0x_FE, 0x_15,
		0x_FE, 0x_2E, 0x_BE, 0x_70, 0x_BE, 0x_BE, 0x_2E, 0x_EA, 0x_BE, 0x_FB, 0x_60, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_DC, 0x_FE, 0x_FB, 0x_70, 0x_1B, 0x_84, 0x_71, 0x_15, 0x_CE, 0x_BE, 0x_2E, 0x_AA,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_20,
		0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0B,
		0x_0B, 0x_09, 0x_09, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1,
		0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_CE, 0x_5C, 0x_92, 0x_99, 0x_5C, 0x_D4,
		0x_9C, 0x_9C, 0x_4F, 0x_34, 0x_CE, 0x_34, 0x_9F, 0x_7C, 0x_9C, 0x_D4, 0x_D4, 0x_7E, 0x_5C, 0x_FA, 0x_7E,
		0x_13, 0x_9C, 0x_A1, 0x_35, 0x_34, 0x_EB, 0x_A1, 0x_9F, 0x_9F, 0x_45, 0x_9F, 0x_35, 0x_A1, 0x_7E, 0x_CE,
		0x_35, 0x_EB, 0x_35, 0x_D4, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_A1, 0x_EB, 0x_CE, 0x_9C, 0x_35, 0x_99, 0x_06, 0x_5C, 0x_A2, 0x_45, 0x_7E, 0x_9F, 0x_92, 0x_5D, 0x_13,
		0x_FA, 0x_7C, 0x_D4, 0x_34,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_C3, 0x_AE, 0x_9D, 0x_9A, 0x_44, 0x_7E, 0x_0C, 0x_32, 0x_CE,
		0x_B5, 0x_10, 0x_AE, 0x_59, 0x_CB, 0x_06, 0x_44, 0x_32, 0x_A9, 0x_59, 0x_17, 0x_CE, 0x_34, 0x_44, 0x_59,
		0x_98, 0x_DC, 0x_F1, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_3F, 0x_7E, 0x_70, 0x_F1, 0x_9D, 0x_06, 0x_7C, 0x_73, 0x_32, 0x_93, 0x_F5, 0x_87, 0x_17, 0x_BE,
		0x_44, 0x_C3, 0x_CE, 0x_AE, 0x_7B, 0x_81, 0x_B5, 0x_E8, 0x_59, 0x_9A, 0x_26, 0x_F6, 0x_DC, 0x_78, 0x_74,
		0x_3C, 0x_69, 0x_30, 0x_A9, 0x_34, 0x_FA, 0x_0F, 0x_98, 0x_4E, 0x_5E, 0x_50, 0x_CB,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_4B, 0x_4B, 0x_4B,
		0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B,
		0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B,
		0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_55, 0x_B6, 0x_86, 0x_FF, 0x_A2, 0x_3B, 0x_AD, 0x_7F, 0x_B2, 0x_91,
		0x_17, 0x_89, 0x_07, 0x_91, 0x_80, 0x_80, 0x_C9, 0x_3B, 0x_EC, 0x_E6, 0x_F1, 0x_2C, 0x_69, 0x_85, 0x_B2,
		0x_17, 0x_7A, 0x_C5, 0x_80, 0x_07, 0x_95, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_55, 0x_B6, 0x_16, 0x_F1, 0x_33, 0x_62, 0x_42, 0x_9D, 0x_C6, 0x_48, 0x_E6, 0x_A5, 0x_69, 0x_31,
		0x_A0, 0x_3B, 0x_2C, 0x_18, 0x_8D, 0x_FF, 0x_7F, 0x_4E, 0x_A7, 0x_BA, 0x_EC, 0x_C8, 0x_D4, 0x_6D, 0x_32,
		0x_29, 0x_17, 0x_C7, 0x_BE, 0x_85, 0x_3A, 0x_9A, 0x_40, 0x_EB, 0x_C5, 0x_70, 0x_0E, 0x_C9, 0x_50, 0x_A2,
		0x_86, 0x_91, 0x_FD, 0x_F9, 0x_D2, 0x_39, 0x_9E, 0x_CE, 0x_F2, 0x_A8, 0x_89, 0x_9C, 0x_7A, 0x_68, 0x_07,
		0x_E1, 0x_95, 0x_80, 0x_0F, 0x_B2, 0x_73, 0x_76, 0x_2F, 0x_66, 0x_E7, 0x_D6, 0x_2E, 0x_BC,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_113_and_insignificant_bytes()
{
	const S: &[u8] = &[
		0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_86, 0x_FB, 0x_19, 0x_C9, 0x_CC,
		0x_0E, 0x_DB, 0x_D3, 0x_6D, 0x_CB, 0x_C1, 0x_67, 0x_D9, 0x_CC, 0x_27, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_06, 0x_50, 0x_03, 0x_45, 0x_7F, 0x_F2, 0x_F5, 0x_CC, 0x_79, 0x_93, 0x_5B, 0x_9A, 0x_86, 0x_4F,
		0x_6D, 0x_6F, 0x_D3, 0x_4C, 0x_FB, 0x_C4, 0x_34, 0x_DF, 0x_BA, 0x_37, 0x_3F, 0x_11, 0x_7B, 0x_42, 0x_A5,
		0x_E6, 0x_EC, 0x_E1, 0x_6B, 0x_72, 0x_19, 0x_FD, 0x_08, 0x_55, 0x_D8, 0x_78, 0x_1B, 0x_FE, 0x_75, 0x_40,
		0x_9D, 0x_4E, 0x_3A, 0x_EF, 0x_15, 0x_28, 0x_70, 0x_FA, 0x_C9, 0x_88, 0x_05, 0x_31, 0x_3C, 0x_D2, 0x_D6,
		0x_AA, 0x_49, 0x_FC, 0x_E3, 0x_22, 0x_89, 0x_D9, 0x_4B, 0x_69, 0x_46, 0x_77, 0x_38, 0x_B9, 0x_82, 0x_A7,
		0x_C1, 0x_A2, 0x_4A, 0x_67, 0x_9C, 0x_1A, 0x_5D, 0x_41, 0x_FF, 0x_76, 0x_99, 0x_E7, 0x_52, 0x_A6, 0x_27,
		0x_E0, 0x_D7, 0x_CB, 0x_B2, 0x_CD, 0x_C6, 0x_CF, 0x_59, 0x_92, 0x_9F, 0x_DB, 0x_3B, 0x_E4, 0x_33, 0x_62,
		0x_C0, 0x_64, 0x_C8, 0x_32, 0x_91, 0x_EB, 0x_68, 0x_BF,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_193_and_insignificant_bytes()
{
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_09,
		0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_0B,
		0x_09, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_CB, 0x_48, 0x_9F, 0x_9D, 0x_30, 0x_22, 0x_F0, 0x_6B,
		0x_11, 0x_A4, 0x_C6, 0x_43, 0x_7A, 0x_FF, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_CB, 0x_46, 0x_76, 0x_9A, 0x_9E, 0x_F7, 0x_25, 0x_C0, 0x_43, 0x_37, 0x_6D, 0x_1E, 0x_24, 0x_44,
		0x_38, 0x_2E, 0x_2C, 0x_96, 0x_11, 0x_DC, 0x_CA, 0x_9D, 0x_E6, 0x_A5, 0x_A2, 0x_99, 0x_79, 0x_DF, 0x_1A,
		0x_78, 0x_7E, 0x_AC, 0x_A6, 0x_5F, 0x_39, 0x_F3, 0x_4C, 0x_19, 0x_AE, 0x_15, 0x_12, 0x_A7, 0x_FB, 0x_59,
		0x_83, 0x_FF, 0x_E0, 0x_DD, 0x_C1, 0x_C2, 0x_4E, 0x_5C, 0x_07, 0x_30, 0x_1F, 0x_5A, 0x_A9, 0x_34, 0x_F6,
		0x_F2, 0x_BB, 0x_1D, 0x_74, 0x_7D, 0x_C3, 0x_75, 0x_80, 0x_B0, 0x_42, 0x_CC, 0x_5E, 0x_B2, 0x_65, 0x_29,
		0x_14, 0x_B3, 0x_18, 0x_03, 0x_21, 0x_91, 0x_41, 0x_04, 0x_4F, 0x_A1, 0x_1B, 0x_8B, 0x_51, 0x_FC, 0x_31,
		0x_E9, 0x_F4, 0x_3B, 0x_86, 0x_DA, 0x_AF, 0x_67, 0x_F5, 0x_6F, 0x_FA, 0x_DE, 0x_17, 0x_B7, 0x_D3, 0x_58,
		0x_48, 0x_B6, 0x_85, 0x_64, 0x_35, 0x_D2, 0x_0E, 0x_D1, 0x_7A, 0x_C4, 0x_6B, 0x_32, 0x_A0, 0x_E7, 0x_98,
		0x_8F, 0x_89, 0x_73, 0x_71, 0x_F0, 0x_90, 0x_70, 0x_BC, 0x_6E, 0x_E1, 0x_4B, 0x_1C, 0x_87, 0x_52, 0x_82,
		0x_10, 0x_4D, 0x_57, 0x_9F, 0x_97, 0x_3C, 0x_BD, 0x_8E, 0x_A3, 0x_69, 0x_F1, 0x_B5, 0x_EE, 0x_50, 0x_66,
		0x_CD, 0x_72, 0x_02, 0x_94, 0x_40, 0x_92, 0x_A4, 0x_D5, 0x_7C, 0x_F9, 0x_3E, 0x_EB, 0x_0F, 0x_D4, 0x_D7,
		0x_06, 0x_13, 0x_C6, 0x_68, 0x_B1, 0x_95, 0x_23, 0x_3F, 0x_AA, 0x_62, 0x_DB, 0x_BF, 0x_D8, 0x_8D, 0x_26,
		0x_E3, 0x_AD, 0x_5B, 0x_FE, 0x_CF, 0x_AB, 0x_BA, 0x_93, 0x_2F, 0x_84, 0x_ED, 0x_55, 0x_8A,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_147_483_648_in_base_247_and_insignificant_bytes()
{
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0A, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_01, 0x_CC, 0x_4A, 0x_4C, 0x_AE, 0x_20, 0x_F9, 0x_83, 0x_F4, 0x_D8, 0x_3B, 0x_DF, 0x_2E, 0x_7D,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_E5, 0x_C6, 0x_4D, 0x_FB, 0x_C1, 0x_7E, 0x_51, 0x_37, 0x_F4, 0x_B6, 0x_C8, 0x_81, 0x_E2, 0x_5D,
		0x_25, 0x_CE, 0x_D4, 0x_2E, 0x_C4, 0x_7F, 0x_9C, 0x_E9, 0x_FF, 0x_38, 0x_03, 0x_AD, 0x_A4, 0x_1E, 0x_26,
		0x_E4, 0x_CD, 0x_71, 0x_AC, 0x_3D, 0x_39, 0x_EB, 0x_FE, 0x_90, 0x_F5, 0x_44, 0x_75, 0x_54, 0x_62, 0x_08,
		0x_C0, 0x_36, 0x_34, 0x_6A, 0x_98, 0x_83, 0x_D3, 0x_76, 0x_C7, 0x_40, 0x_19, 0x_A3, 0x_14, 0x_6D, 0x_DF,
		0x_50, 0x_1C, 0x_74, 0x_F2, 0x_0F, 0x_3C, 0x_8D, 0x_04, 0x_A9, 0x_58, 0x_63, 0x_3F, 0x_59, 0x_68, 0x_52,
		0x_15, 0x_F8, 0x_2C, 0x_30, 0x_0E, 0x_7B, 0x_B5, 0x_A8, 0x_6C, 0x_85, 0x_1D, 0x_F3, 0x_78, 0x_C5, 0x_9E,
		0x_D6, 0x_43, 0x_C9, 0x_21, 0x_5F, 0x_46, 0x_9A, 0x_9B, 0x_EF, 0x_24, 0x_67, 0x_41, 0x_D7, 0x_13, 0x_6F,
		0x_06, 0x_18, 0x_A1, 0x_88, 0x_80, 0x_29, 0x_3A, 0x_4C, 0x_95, 0x_86, 0x_AB, 0x_89, 0x_56, 0x_1B, 0x_28,
		0x_1A, 0x_5A, 0x_FD, 0x_D0, 0x_87, 0x_4A, 0x_DD, 0x_27, 0x_3E, 0x_82, 0x_DB, 0x_64, 0x_D2, 0x_7D, 0x_EE,
		0x_3B, 0x_32, 0x_93, 0x_BB, 0x_F0, 0x_A0, 0x_8F, 0x_CC, 0x_BC, 0x_F6, 0x_8C, 0x_C3, 0x_DA, 0x_D1, 0x_70,
		0x_99, 0x_DC, 0x_5C, 0x_23, 0x_22, 0x_BD, 0x_F9, 0x_E7, 0x_E1, 0x_69, 0x_33, 0x_66, 0x_16, 0x_7C, 0x_D5,
		0x_DE, 0x_05, 0x_BF, 0x_92, 0x_D9, 0x_B0, 0x_5E, 0x_45, 0x_12, 0x_4F, 0x_65, 0x_B2, 0x_8B, 0x_EC, 0x_B7,
		0x_2A, 0x_ED, 0x_94, 0x_B9, 0x_11, 0x_47, 0x_B1, 0x_CA, 0x_4E, 0x_48, 0x_BA, 0x_B3, 0x_9F, 0x_AE, 0x_79,
		0x_8A, 0x_E6, 0x_72, 0x_53, 0x_73, 0x_55, 0x_97, 0x_4B, 0x_57, 0x_FC, 0x_AF, 0x_49, 0x_AA, 0x_02, 0x_F7,
		0x_A7, 0x_BE, 0x_31, 0x_10, 0x_35, 0x_96, 0x_A5, 0x_A2, 0x_1F, 0x_B8, 0x_CF, 0x_D8, 0x_6B, 0x_77, 0x_7A,
		0x_A6, 0x_61, 0x_EA, 0x_2F, 0x_F1, 0x_E3, 0x_42, 0x_9D, 0x_5B, 0x_8E, 0x_17, 0x_E8, 0x_60, 0x_C2, 0x_FA,
		0x_B4, 0x_07, 0x_E0, 0x_CB, 0x_6E, 0x_84, 0x_91,
	];

	helper(S, BASE, -2_147_483_648);
}
// endregion
