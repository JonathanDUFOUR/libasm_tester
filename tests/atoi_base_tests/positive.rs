use super::shared::helper;

// region: s_has_5_in_base_2
#[test]
fn s_has_5_in_base_2() {
	const S: &[u8] = &[
		0x_07, 0x_01, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_07,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_61_in_base_2
#[test]
fn s_has_61_in_base_2() {
	const S: &[u8] = &[
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_1A, 0x_6D,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_6D,
	];

	helper(S, BASE, 61);
}
// endregion
// region: s_has_640_in_base_2
#[test]
fn s_has_640_in_base_2() {
	const S: &[u8] = &[
		0x_45, 0x_C7, 0x_45, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_45,
	];

	helper(S, BASE, 640);
}
// endregion
// region: s_has_6_526_in_base_2
#[test]
fn s_has_6_526_in_base_2() {
	const S: &[u8] = &[
		0x_44, 0x_44, 0x_74, 0x_74, 0x_44, 0x_74, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_44,
	];

	helper(S, BASE, 6_526);
}
// endregion
// region: s_has_16_896_in_base_2
#[test]
fn s_has_16_896_in_base_2() {
	const S: &[u8] = &[
		0x_6F, 0x_02, 0x_02, 0x_02, 0x_02, 0x_6F, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_6F,
	];

	helper(S, BASE, 16_896);
}
// endregion
// region: s_has_860_088_in_base_2
#[test]
fn s_has_860_088_in_base_2() {
	const S: &[u8] = &[
		0x_43, 0x_43, 0x_3D, 0x_43, 0x_3D, 0x_3D, 0x_3D, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_3D, 0x_43,
		0x_43, 0x_43, 0x_3D, 0x_3D, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_43,
	];

	helper(S, BASE, 860_088);
}
// endregion
// region: s_has_3_942_611_in_base_2
#[test]
fn s_has_3_942_611_in_base_2() {
	const S: &[u8] = &[
		0x_79, 0x_79, 0x_79, 0x_79, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_79, 0x_FB, 0x_79, 0x_FB, 0x_FB, 0x_FB, 0x_79,
		0x_79, 0x_FB, 0x_79, 0x_FB, 0x_FB, 0x_79, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_79,
	];

	helper(S, BASE, 3_942_611);
}
// endregion
// region: s_has_31_553_059_in_base_2
#[test]
fn s_has_31_553_059_in_base_2() {
	const S: &[u8] = &[
		0x_08, 0x_08, 0x_08, 0x_08, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_08, 0x_1E, 0x_08, 0x_08, 0x_08, 0x_1E, 0x_08,
		0x_08, 0x_1E, 0x_1E, 0x_1E, 0x_08, 0x_1E, 0x_1E, 0x_1E, 0x_08, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_08,
	];

	helper(S, BASE, 31_553_059);
}
// endregion
// region: s_has_927_834_052_in_base_2
#[test]
fn s_has_927_834_052_in_base_2() {
	const S: &[u8] = &[
		0x_BE, 0x_BE, 0x_3E, 0x_BE, 0x_BE, 0x_BE, 0x_3E, 0x_BE, 0x_3E, 0x_3E, 0x_BE, 0x_BE, 0x_3E, 0x_BE, 0x_BE,
		0x_3E, 0x_3E, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_3E, 0x_3E, 0x_3E, 0x_BE, 0x_3E, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_BE,
	];

	helper(S, BASE, 927_834_052);
}
// endregion
// region: s_has_2_in_base_3
#[test]
fn s_has_2_in_base_3() {
	const S: &[u8] = &[0x_6E];
	const BASE: &[u8] = &[
		0x_AC, 0x_62, 0x_6E,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_62_in_base_3
#[test]
fn s_has_62_in_base_3() {
	const S: &[u8] = &[
		0x_AB, 0x_1E, 0x_AB, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_40, 0x_AB,
	];

	helper(S, BASE, 62);
}
// endregion
// region: s_has_228_in_base_3
#[test]
fn s_has_228_in_base_3() {
	const S: &[u8] = &[
		0x_2C, 0x_2C, 0x_51, 0x_51, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_51, 0x_2C,
	];

	helper(S, BASE, 228);
}
// endregion
// region: s_has_7_701_in_base_3
#[test]
fn s_has_7_701_in_base_3() {
	const S: &[u8] = &[
		0x_A1, 0x_11, 0x_A1, 0x_A1, 0x_98, 0x_11, 0x_11, 0x_98, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_A1, 0x_98,
	];

	helper(S, BASE, 7_701);
}
// endregion
// region: s_has_92_455_in_base_3
#[test]
fn s_has_92_455_in_base_3() {
	const S: &[u8] = &[
		0x_35, 0x_35, 0x_B0, 0x_2E, 0x_2E, 0x_B0, 0x_35, 0x_35, 0x_2E, 0x_B0, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_35, 0x_B0,
	];

	helper(S, BASE, 92_455);
}
// endregion
// region: s_has_980_816_in_base_3
#[test]
fn s_has_980_816_in_base_3() {
	const S: &[u8] = &[
		0x_C0, 0x_CD, 0x_C0, 0x_C0, 0x_CD, 0x_C0, 0x_C0, 0x_C0, 0x_DF, 0x_CD, 0x_C0, 0x_C0, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_C0, 0x_CD,
	];

	helper(S, BASE, 980_816);
}
// endregion
// region: s_has_3_366_414_in_base_3
#[test]
fn s_has_3_366_414_in_base_3() {
	const S: &[u8] = &[
		0x_5D, 0x_3E, 0x_FD, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_5D, 0x_FD, 0x_5D, 0x_3E, 0x_3E, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_FD, 0x_5D,
	];

	helper(S, BASE, 3_366_414);
}
// endregion
// region: s_has_77_433_783_in_base_3
#[test]
fn s_has_77_433_783_in_base_3() {
	const S: &[u8] = &[
		0x_C9, 0x_AC, 0x_C9, 0x_CA, 0x_C9, 0x_AC, 0x_CA, 0x_C9, 0x_CA, 0x_CA, 0x_C9, 0x_CA, 0x_C9, 0x_C9, 0x_AC,
		0x_AC, 0x_CA,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_C9, 0x_AC,
	];

	helper(S, BASE, 77_433_783);
}
// endregion
// region: s_has_918_439_488_in_base_3
#[test]
fn s_has_918_439_488_in_base_3() {
	const S: &[u8] = &[
		0x_3F, 0x_1D, 0x_49, 0x_1D, 0x_49, 0x_49, 0x_49, 0x_49, 0x_1D, 0x_3F, 0x_1D, 0x_3F, 0x_49, 0x_49, 0x_1D,
		0x_49, 0x_1D, 0x_49, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_1D, 0x_3F,
	];

	helper(S, BASE, 918_439_488);
}
// endregion
// region: s_has_8_in_base_5
#[test]
fn s_has_8_in_base_5() {
	const S: &[u8] = &[
		0x_BE, 0x_AA,
	];
	const BASE: &[u8] = &[
		0x_7F, 0x_BE, 0x_17, 0x_AA, 0x_F7,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_85_in_base_5
#[test]
fn s_has_85_in_base_5() {
	const S: &[u8] = &[
		0x_63, 0x_21, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_7C, 0x_21, 0x_63, 0x_54,
	];

	helper(S, BASE, 85);
}
// endregion
// region: s_has_246_in_base_5
#[test]
fn s_has_246_in_base_5() {
	const S: &[u8] = &[
		0x_B3, 0x_DF, 0x_DF, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_B3, 0x_C8, 0x_06, 0x_DF,
	];

	helper(S, BASE, 246);
}
// endregion
// region: s_has_4_522_in_base_5
#[test]
fn s_has_4_522_in_base_5() {
	const S: &[u8] = &[
		0x_50, 0x_E1, 0x_50, 0x_D7, 0x_A9, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_50, 0x_E1, 0x_5A, 0x_A9,
	];

	helper(S, BASE, 4_522);
}
// endregion
// region: s_has_76_921_in_base_5
#[test]
fn s_has_76_921_in_base_5() {
	const S: &[u8] = &[
		0x_E9, 0x_E9, 0x_F6, 0x_10, 0x_83, 0x_E9, 0x_83,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_83, 0x_A8, 0x_F6, 0x_E9,
	];

	helper(S, BASE, 76_921);
}
// endregion
// region: s_has_399_371_in_base_5
#[test]
fn s_has_399_371_in_base_5() {
	const S: &[u8] = &[
		0x_C3, 0x_59, 0x_59, 0x_21, 0x_E1, 0x_78, 0x_78, 0x_78, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_C3, 0x_21, 0x_E1, 0x_78,
	];

	helper(S, BASE, 399_371);
}
// endregion
// region: s_has_1_224_605_in_base_5
#[test]
fn s_has_1_224_605_in_base_5() {
	const S: &[u8] = &[
		0x_95, 0x_90, 0x_95, 0x_74, 0x_8B, 0x_74, 0x_8B, 0x_74, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_74, 0x_F8, 0x_95, 0x_8B,
	];

	helper(S, BASE, 1_224_605);
}
// endregion
// region: s_has_64_528_247_in_base_5
#[test]
fn s_has_64_528_247_in_base_5() {
	const S: &[u8] = &[
		0x_CF, 0x_CF, 0x_E4, 0x_B6, 0x_B6, 0x_C1, 0x_C1, 0x_B6, 0x_B6, 0x_C1, 0x_C1, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_CF, 0x_FF, 0x_E4, 0x_C1,
	];

	helper(S, BASE, 64_528_247);
}
// endregion
// region: s_has_847_766_123_in_base_5
#[test]
fn s_has_847_766_123_in_base_5() {
	const S: &[u8] = &[
		0x_9D, 0x_81, 0x_4B, 0x_E2, 0x_78, 0x_4B, 0x_81, 0x_78, 0x_78, 0x_9D, 0x_E2, 0x_E2, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_4B, 0x_81, 0x_9D, 0x_E2,
	];

	helper(S, BASE, 847_766_123);
}
// endregion
// region: s_has_8_in_base_7
#[test]
fn s_has_8_in_base_7() {
	const S: &[u8] = &[
		0x_87, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_87, 0x_F6, 0x_B5, 0x_3E, 0x_76, 0x_C8,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_21_in_base_7
#[test]
fn s_has_21_in_base_7() {
	const S: &[u8] = &[
		0x_63, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_1B, 0x_98, 0x_E9, 0x_63, 0x_ED, 0x_39, 0x_F7,
	];

	helper(S, BASE, 21);
}
// endregion
// region: s_has_824_in_base_7
#[test]
fn s_has_824_in_base_7() {
	const S: &[u8] = &[
		0x_7A, 0x_7A, 0x_5B, 0x_5B,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_A8, 0x_7A, 0x_83, 0x_BE, 0x_5B, 0x_4B,
	];

	helper(S, BASE, 824);
}
// endregion
// region: s_has_3_466_in_base_7
#[test]
fn s_has_3_466_in_base_7() {
	const S: &[u8] = &[
		0x_5A, 0x_45, 0x_27, 0x_EB, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_5A, 0x_12, 0x_45, 0x_63, 0x_EB, 0x_55,
	];

	helper(S, BASE, 3_466);
}
// endregion
// region: s_has_11_623_in_base_7
#[test]
fn s_has_11_623_in_base_7() {
	const S: &[u8] = &[
		0x_14, 0x_C2, 0x_BA, 0x_6E, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_6E, 0x_E8, 0x_75, 0x_14, 0x_C2, 0x_BA,
	];

	helper(S, BASE, 11_623);
}
// endregion
// region: s_has_883_336_in_base_7
#[test]
fn s_has_883_336_in_base_7() {
	const S: &[u8] = &[
		0x_9C, 0x_9F, 0x_86, 0x_86, 0x_1C, 0x_38, 0x_9C, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_9C, 0x_38, 0x_86, 0x_E0, 0x_CC, 0x_1C,
	];

	helper(S, BASE, 883_336);
}
// endregion
// region: s_has_2_563_073_in_base_7
#[test]
fn s_has_2_563_073_in_base_7() {
	const S: &[u8] = &[
		0x_92, 0x_AB, 0x_B6, 0x_92, 0x_92, 0x_92, 0x_62, 0x_DF,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_E9, 0x_DF, 0x_92, 0x_62, 0x_B6, 0x_C5,
	];

	helper(S, BASE, 2_563_073);
}
// endregion
// region: s_has_14_579_847_in_base_7
#[test]
fn s_has_14_579_847_in_base_7() {
	const S: &[u8] = &[
		0x_98, 0x_4C, 0x_13, 0x_F9, 0x_4C, 0x_98, 0x_9E, 0x_F9, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_8E, 0x_98, 0x_4C, 0x_13, 0x_9E, 0x_F9,
	];

	helper(S, BASE, 14_579_847);
}
// endregion
// region: s_has_902_271_931_in_base_7
#[test]
fn s_has_902_271_931_in_base_7() {
	const S: &[u8] = &[
		0x_A9, 0x_BB, 0x_82, 0x_A9, 0x_2A, 0x_BB, 0x_82, 0x_A3, 0x_82, 0x_C4, 0x_BB,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_BB, 0x_82, 0x_A9, 0x_2A, 0x_C7, 0x_C4,
	];

	helper(S, BASE, 902_271_931);
}
// endregion
// region: s_has_8_in_base_11
#[test]
fn s_has_8_in_base_11() {
	const S: &[u8] = &[0x_1D];
	const BASE: &[u8] = &[
		0x_61, 0x_90, 0x_13, 0x_3E, 0x_18, 0x_60, 0x_67, 0x_66, 0x_1D, 0x_A3, 0x_80,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_81_in_base_11
#[test]
fn s_has_81_in_base_11() {
	const S: &[u8] = &[
		0x_9A, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_ED, 0x_FF, 0x_E1, 0x_94, 0x_1A, 0x_45, 0x_12, 0x_9A, 0x_96, 0x_31, 0x_66,
	];

	helper(S, BASE, 81);
}
// endregion
// region: s_has_369_in_base_11
#[test]
fn s_has_369_in_base_11() {
	const S: &[u8] = &[
		0x_88, 0x_DB, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_50, 0x_76, 0x_88, 0x_B8, 0x_30, 0x_33, 0x_90, 0x_38, 0x_4A, 0x_25,
	];

	helper(S, BASE, 369);
}
// endregion
// region: s_has_3_357_in_base_11
#[test]
fn s_has_3_357_in_base_11() {
	const S: &[u8] = &[
		0x_38, 0x_C1, 0x_18, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_58, 0x_93, 0x_38, 0x_06, 0x_EE, 0x_C1, 0x_17, 0x_CC, 0x_18, 0x_D7, 0x_CE,
	];

	helper(S, BASE, 3_357);
}
// endregion
// region: s_has_41_213_in_base_11
#[test]
fn s_has_41_213_in_base_11() {
	const S: &[u8] = &[
		0x_97, 0x_6E, 0x_D9, 0x_18, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_96, 0x_97, 0x_9B, 0x_D5, 0x_98, 0x_18, 0x_92, 0x_6E, 0x_E6, 0x_D9,
	];

	helper(S, BASE, 41_213);
}
// endregion
// region: s_has_581_400_in_base_11
#[test]
fn s_has_581_400_in_base_11() {
	const S: &[u8] = &[
		0x_E5, 0x_73, 0x_D5, 0x_E1, 0x_A3, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_3B, 0x_E7, 0x_E5, 0x_81, 0x_59, 0x_73, 0x_D5, 0x_E1, 0x_77, 0x_A3,
	];

	helper(S, BASE, 581_400);
}
// endregion
// region: s_has_6_616_478_in_base_11
#[test]
fn s_has_6_616_478_in_base_11() {
	const S: &[u8] = &[
		0x_6B, 0x_98, 0x_11, 0x_A4, 0x_11, 0x_90, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_E1, 0x_EF, 0x_6B, 0x_3C, 0x_A9, 0x_0F, 0x_90, 0x_98, 0x_71, 0x_A4,
	];

	helper(S, BASE, 6_616_478);
}
// endregion
// region: s_has_79_813_114_in_base_11
#[test]
fn s_has_79_813_114_in_base_11() {
	const S: &[u8] = &[
		0x_E6, 0x_EC, 0x_E9, 0x_7D, 0x_8B, 0x_BA, 0x_90, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_E9, 0x_EC, 0x_B9, 0x_8B, 0x_E6, 0x_90, 0x_7D, 0x_6F, 0x_BA, 0x_0F, 0x_AB,
	];

	helper(S, BASE, 79_813_114);
}
// endregion
// region: s_has_269_129_401_in_base_11
#[test]
fn s_has_269_129_401_in_base_11() {
	const S: &[u8] = &[
		0x_CD, 0x_B7, 0x_30, 0x_13, 0x_8C, 0x_88, 0x_88, 0x_13, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_CD, 0x_B7, 0x_C8, 0x_37, 0x_12, 0x_AC, 0x_C1, 0x_30, 0x_88, 0x_13,
	];

	helper(S, BASE, 269_129_401);
}
// endregion
// region: s_has_1_in_base_13
#[test]
fn s_has_1_in_base_13() {
	const S: &[u8] = &[0x_F7];
	const BASE: &[u8] = &[
		0x_CB, 0x_F7, 0x_93, 0x_5C, 0x_BE, 0x_9A, 0x_63, 0x_14, 0x_89, 0x_6C, 0x_70, 0x_FC, 0x_01,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_51_in_base_13
#[test]
fn s_has_51_in_base_13() {
	const S: &[u8] = &[
		0x_15, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_BA, 0x_9B, 0x_15, 0x_4F, 0x_80, 0x_65, 0x_13, 0x_08, 0x_32, 0x_0E, 0x_9E, 0x_18,
	];

	helper(S, BASE, 51);
}
// endregion
// region: s_has_154_in_base_13
#[test]
fn s_has_154_in_base_13() {
	const S: &[u8] = &[
		0x_C9, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_CE, 0x_93, 0x_B7, 0x_3C, 0x_70, 0x_C2, 0x_39, 0x_6E, 0x_21, 0x_3A, 0x_C9, 0x_EC,
	];

	helper(S, BASE, 154);
}
// endregion
// region: s_has_8_661_in_base_13
#[test]
fn s_has_8_661_in_base_13() {
	const S: &[u8] = &[
		0x_A0, 0x_91, 0x_A0, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_33, 0x_7A, 0x_A0, 0x_74, 0x_65, 0x_4D, 0x_8E, 0x_A9, 0x_A4, 0x_AC, 0x_43, 0x_91,
	];

	helper(S, BASE, 8_661);
}
// endregion
// region: s_has_72_284_in_base_13
#[test]
fn s_has_72_284_in_base_13() {
	const S: &[u8] = &[
		0x_61, 0x_A0, 0x_10, 0x_57, 0x_16,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_F9, 0x_61, 0x_F2, 0x_16, 0x_E5, 0x_A0, 0x_AB, 0x_80, 0x_57, 0x_3E, 0x_10, 0x_6E,
	];

	helper(S, BASE, 72_284);
}
// endregion
// region: s_has_562_597_in_base_13
#[test]
fn s_has_562_597_in_base_13() {
	const S: &[u8] = &[
		0x_80, 0x_13, 0x_C4, 0x_98, 0x_5D, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_80, 0x_A7, 0x_4E, 0x_AE, 0x_BE, 0x_13, 0x_3A, 0x_64, 0x_C4, 0x_CC, 0x_5A, 0x_5D,
	];

	helper(S, BASE, 562_597);
}
// endregion
// region: s_has_2_795_966_in_base_13
#[test]
fn s_has_2_795_966_in_base_13() {
	const S: &[u8] = &[
		0x_9D, 0x_72, 0x_F8, 0x_C4, 0x_0E, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_19, 0x_0E, 0x_89, 0x_D0, 0x_6E, 0x_72, 0x_9D, 0x_C4, 0x_5A, 0x_92, 0x_F8, 0x_02,
	];

	helper(S, BASE, 2_795_966);
}
// endregion
// region: s_has_80_208_898_in_base_13
#[test]
fn s_has_80_208_898_in_base_13() {
	const S: &[u8] = &[
		0x_62, 0x_61, 0x_B7, 0x_A9, 0x_E7, 0x_E7, 0x_13, 0x_61,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_62, 0x_7D, 0x_61, 0x_E7, 0x_70, 0x_29, 0x_24, 0x_B7, 0x_CE, 0x_8D, 0x_13, 0x_3D,
	];

	helper(S, BASE, 80_208_898);
}
// endregion
// region: s_has_610_807_308_in_base_13
#[test]
fn s_has_610_807_308_in_base_13() {
	const S: &[u8] = &[
		0x_53, 0x_53, 0x_E6, 0x_40, 0x_AB, 0x_15, 0x_94, 0x_E6,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_40, 0x_67, 0x_B7, 0x_70, 0x_94, 0x_E0, 0x_E6, 0x_D5, 0x_53, 0x_15, 0x_61, 0x_E9,
	];

	helper(S, BASE, 610_807_308);
}
// endregion
// region: s_has_5_in_base_19
#[test]
fn s_has_5_in_base_19() {
	const S: &[u8] = &[0x_98];
	const BASE: &[u8] = &[
		0x_63, 0x_16, 0x_60, 0x_9F, 0x_52, 0x_98, 0x_BA, 0x_7E, 0x_D0, 0x_D5, 0x_A0, 0x_6E, 0x_4D, 0x_3D, 0x_8A,
		0x_DC, 0x_A8, 0x_97, 0x_B4,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_86_in_base_19
#[test]
fn s_has_86_in_base_19() {
	const S: &[u8] = &[
		0x_40, 0x_F4,
	];
	const BASE: &[u8] = &[
		0x_63, 0x_57, 0x_D4, 0x_BB, 0x_40, 0x_F8, 0x_EB, 0x_EA, 0x_E8, 0x_3D, 0x_F4, 0x_5A, 0x_CF, 0x_4E, 0x_F0,
		0x_74, 0x_46, 0x_C2, 0x_10,
	];

	helper(S, BASE, 86);
}
// endregion
// region: s_has_995_in_base_19
#[test]
fn s_has_995_in_base_19() {
	const S: &[u8] = &[
		0x_8A, 0x_65, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_81, 0x_8A, 0x_13, 0x_12, 0x_27, 0x_3F, 0x_95, 0x_4C, 0x_A9, 0x_6B, 0x_6D, 0x_A8, 0x_5B, 0x_65,
		0x_42, 0x_B9, 0x_74, 0x_86,
	];

	helper(S, BASE, 995);
}
// endregion
// region: s_has_8_234_in_base_19
#[test]
fn s_has_8_234_in_base_19() {
	const S: &[u8] = &[
		0x_1D, 0x_51, 0x_80, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_1D, 0x_36, 0x_51, 0x_C1, 0x_ED, 0x_78, 0x_25, 0x_EB, 0x_9A, 0x_4D, 0x_1A, 0x_3C, 0x_95, 0x_38,
		0x_80, 0x_D5, 0x_7F, 0x_64,
	];

	helper(S, BASE, 8_234);
}
// endregion
// region: s_has_43_455_in_base_19
#[test]
fn s_has_43_455_in_base_19() {
	const S: &[u8] = &[
		0x_DD, 0x_DD, 0x_3B, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_35, 0x_79, 0x_D1, 0x_5B, 0x_DF, 0x_DD, 0x_3B, 0x_DA, 0x_7B, 0x_26, 0x_70, 0x_45, 0x_EB, 0x_BD,
		0x_C3, 0x_F7, 0x_01, 0x_25,
	];

	helper(S, BASE, 43_455);
}
// endregion
// region: s_has_859_522_in_base_19
#[test]
fn s_has_859_522_in_base_19() {
	const S: &[u8] = &[
		0x_C7, 0x_24, 0x_83, 0x_18, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_29, 0x_7C, 0x_5E, 0x_D9, 0x_83, 0x_C7, 0x_D5, 0x_3B, 0x_A6, 0x_E5, 0x_24, 0x_F6, 0x_C3, 0x_5F,
		0x_C0, 0x_E9, 0x_8D, 0x_18,
	];

	helper(S, BASE, 859_522);
}
// endregion
// region: s_has_9_621_386_in_base_19
#[test]
fn s_has_9_621_386_in_base_19() {
	const S: &[u8] = &[
		0x_DF, 0x_02, 0x_B9, 0x_78, 0x_59, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_F6, 0x_5F, 0x_DF, 0x_A3, 0x_22, 0x_25, 0x_E5, 0x_AB, 0x_3A, 0x_DB, 0x_31, 0x_88, 0x_11, 0x_78,
		0x_B9, 0x_02, 0x_30, 0x_40,
	];

	helper(S, BASE, 9_621_386);
}
// endregion
// region: s_has_33_603_095_in_base_19
#[test]
fn s_has_33_603_095_in_base_19() {
	const S: &[u8] = &[
		0x_50, 0x_1D, 0x_31, 0x_A1, 0x_EF, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_98, 0x_A1, 0x_60, 0x_77, 0x_2C, 0x_EF, 0x_D6, 0x_E0, 0x_9D, 0x_1D, 0x_7C, 0x_5F, 0x_50, 0x_C3,
		0x_E7, 0x_31, 0x_02, 0x_CD,
	];

	helper(S, BASE, 33_603_095);
}
// endregion
// region: s_has_770_020_710_in_base_19
#[test]
fn s_has_770_020_710_in_base_19() {
	const S: &[u8] = &[
		0x_DA, 0x_33, 0x_75, 0x_7D, 0x_80, 0x_33, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_9B, 0x_FF, 0x_87, 0x_E3, 0x_80, 0x_33, 0x_15, 0x_34, 0x_BE, 0x_FA, 0x_77, 0x_7D, 0x_AD, 0x_BA,
		0x_FD, 0x_DA, 0x_0E, 0x_75,
	];

	helper(S, BASE, 770_020_710);
}
// endregion
// region: s_has_7_in_base_42
#[test]
fn s_has_7_in_base_42() {
	const S: &[u8] = &[0x_BC];
	const BASE: &[u8] = &[
		0x_A8, 0x_8C, 0x_2A, 0x_85, 0x_58, 0x_84, 0x_CB, 0x_BC, 0x_C1, 0x_7F, 0x_BF, 0x_66, 0x_71, 0x_30, 0x_93,
		0x_DE, 0x_EE, 0x_F7, 0x_BE, 0x_59, 0x_35, 0x_AD, 0x_E0, 0x_97, 0x_19, 0x_9A, 0x_16, 0x_E8, 0x_3E, 0x_18,
		0x_10, 0x_73, 0x_87, 0x_62, 0x_A7, 0x_75, 0x_CE, 0x_AC, 0x_94, 0x_E5, 0x_FF, 0x_B5,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_88_in_base_42
#[test]
fn s_has_88_in_base_42() {
	const S: &[u8] = &[
		0x_6E, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_17, 0x_6E, 0x_62, 0x_D5, 0x_B0, 0x_23, 0x_34, 0x_8B, 0x_8E, 0x_10, 0x_A3, 0x_1F, 0x_E1, 0x_9E,
		0x_DB, 0x_40, 0x_33, 0x_7E, 0x_11, 0x_6A, 0x_1E, 0x_BF, 0x_B9, 0x_B6, 0x_B2, 0x_C9, 0x_95, 0x_5A, 0x_67,
		0x_9A, 0x_BD, 0x_7A, 0x_75, 0x_43, 0x_21, 0x_ED, 0x_9B, 0x_A9, 0x_29, 0x_77, 0x_B3,
	];

	helper(S, BASE, 88);
}
// endregion
// region: s_has_169_in_base_42
#[test]
fn s_has_169_in_base_42() {
	const S: &[u8] = &[
		0x_A2, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_52, 0x_E9, 0x_26, 0x_A2, 0x_01, 0x_79, 0x_B1, 0x_F8, 0x_0F, 0x_F5, 0x_B6, 0x_AE, 0x_F1, 0x_D0,
		0x_E1, 0x_98, 0x_29, 0x_4D, 0x_5C, 0x_7A, 0x_87, 0x_B7, 0x_9F, 0x_44, 0x_5A, 0x_D3, 0x_6A, 0x_8E, 0x_ED,
		0x_5F, 0x_78, 0x_49, 0x_DB, 0x_25, 0x_BB, 0x_32, 0x_D8, 0x_B4, 0x_D5, 0x_EF, 0x_FF,
	];

	helper(S, BASE, 169);
}
// endregion
// region: s_has_2_802_in_base_42
#[test]
fn s_has_2_802_in_base_42() {
	const S: &[u8] = &[
		0x_2A, 0x_7A, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_2A, 0x_29, 0x_88, 0x_A1, 0x_03, 0x_49, 0x_95, 0x_B3, 0x_BA, 0x_FF, 0x_56, 0x_44, 0x_F1, 0x_7F,
		0x_02, 0x_15, 0x_9F, 0x_11, 0x_E1, 0x_7E, 0x_B5, 0x_C3, 0x_BB, 0x_7A, 0x_FE, 0x_6A, 0x_F0, 0x_70, 0x_04,
		0x_EA, 0x_E0, 0x_57, 0x_53, 0x_C9, 0x_AB, 0x_AD, 0x_84, 0x_E7, 0x_B9, 0x_D3, 0x_B7,
	];

	helper(S, BASE, 2_802);
}
// endregion
// region: s_has_75_801_in_base_42
#[test]
fn s_has_75_801_in_base_42() {
	const S: &[u8] = &[
		0x_4D, 0x_46, 0x_7E, 0x_97,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_4D, 0x_54, 0x_CC, 0x_A1, 0x_15, 0x_A2, 0x_E7, 0x_64, 0x_DF, 0x_90, 0x_1E, 0x_F5, 0x_BB, 0x_21,
		0x_D7, 0x_98, 0x_A3, 0x_7B, 0x_74, 0x_B9, 0x_16, 0x_CB, 0x_8B, 0x_7F, 0x_11, 0x_22, 0x_EE, 0x_84, 0x_D8,
		0x_6F, 0x_30, 0x_FF, 0x_97, 0x_EF, 0x_13, 0x_CF, 0x_A8, 0x_3E, 0x_44, 0x_7E, 0x_9F,
	];

	helper(S, BASE, 75_801);
}
// endregion
// region: s_has_104_045_in_base_42
#[test]
fn s_has_104_045_in_base_42() {
	const S: &[u8] = &[
		0x_D3, 0x_80, 0x_3D, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_D3, 0x_E0, 0x_19, 0x_DF, 0x_82, 0x_64, 0x_63, 0x_BB, 0x_60, 0x_C5, 0x_38, 0x_16, 0x_6A, 0x_51,
		0x_49, 0x_80, 0x_5E, 0x_CF, 0x_F8, 0x_96, 0x_07, 0x_06, 0x_76, 0x_90, 0x_21, 0x_6F, 0x_7D, 0x_61, 0x_8C,
		0x_D4, 0x_6B, 0x_48, 0x_5B, 0x_AB, 0x_34, 0x_32, 0x_D1, 0x_11, 0x_74, 0x_B5, 0x_3D,
	];

	helper(S, BASE, 104_045);
}
// endregion
// region: s_has_9_944_898_in_base_42
#[test]
fn s_has_9_944_898_in_base_42() {
	const S: &[u8] = &[
		0x_AA, 0x_BB, 0x_2F, 0x_49, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_6B, 0x_D0, 0x_AA, 0x_8D, 0x_C1, 0x_A1, 0x_48, 0x_BB, 0x_2F, 0x_AB, 0x_92, 0x_66, 0x_CC, 0x_A5,
		0x_96, 0x_D6, 0x_55, 0x_CF, 0x_8B, 0x_6E, 0x_7F, 0x_1E, 0x_BC, 0x_03, 0x_6A, 0x_9D, 0x_A9, 0x_A2, 0x_49,
		0x_AE, 0x_57, 0x_27, 0x_40, 0x_F7, 0x_59, 0x_35, 0x_7C, 0x_1A, 0x_D8, 0x_29, 0x_8E,
	];

	helper(S, BASE, 9_944_898);
}
// endregion
// region: s_has_99_508_083_in_base_42
#[test]
fn s_has_99_508_083_in_base_42() {
	const S: &[u8] = &[
		0x_E7, 0x_A7, 0x_E0, 0x_3B, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_46, 0x_66, 0x_B6, 0x_E0, 0x_01, 0x_93, 0x_3E, 0x_E4, 0x_A1, 0x_D6, 0x_DB, 0x_AC, 0x_82, 0x_47,
		0x_ED, 0x_36, 0x_91, 0x_58, 0x_39, 0x_3B, 0x_85, 0x_14, 0x_A5, 0x_B2, 0x_C9, 0x_38, 0x_6D, 0x_17, 0x_5D,
		0x_24, 0x_E7, 0x_12, 0x_BF, 0x_86, 0x_AF, 0x_5F, 0x_4C, 0x_4A, 0x_52, 0x_80, 0x_A7,
	];

	helper(S, BASE, 99_508_083);
}
// endregion
// region: s_has_111_381_052_in_base_42
#[test]
fn s_has_111_381_052_in_base_42() {
	const S: &[u8] = &[
		0x_4C, 0x_E3, 0x_5D, 0x_A5, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_4A, 0x_C8, 0x_CC, 0x_57, 0x_AE, 0x_91, 0x_A5, 0x_75, 0x_62, 0x_9C, 0x_13, 0x_6C, 0x_30, 0x_C1,
		0x_5D, 0x_0F, 0x_BF, 0x_B1, 0x_DD, 0x_60, 0x_7A, 0x_14, 0x_59, 0x_8F, 0x_12, 0x_EA, 0x_5C, 0x_64, 0x_E8,
		0x_51, 0x_4D, 0x_E6, 0x_E3, 0x_8D, 0x_4C, 0x_02, 0x_1D, 0x_19, 0x_28, 0x_C3, 0x_35,
	];

	helper(S, BASE, 111_381_052);
}
// endregion
// region: s_has_9_in_base_73
#[test]
fn s_has_9_in_base_73() {
	const S: &[u8] = &[0x_38];
	const BASE: &[u8] = &[
		0x_1C, 0x_28, 0x_DC, 0x_36, 0x_62, 0x_E4, 0x_98, 0x_CA, 0x_0E, 0x_38, 0x_8D, 0x_C5, 0x_02, 0x_D0, 0x_78,
		0x_D7, 0x_70, 0x_9A, 0x_D4, 0x_8F, 0x_FC, 0x_7E, 0x_A1, 0x_40, 0x_6C, 0x_03, 0x_BA, 0x_5B, 0x_E5, 0x_E1,
		0x_A5, 0x_1F, 0x_AC, 0x_32, 0x_30, 0x_DF, 0x_BD, 0x_D1, 0x_60, 0x_CD, 0x_F6, 0x_44, 0x_65, 0x_80, 0x_3E,
		0x_AB, 0x_7A, 0x_F9, 0x_50, 0x_37, 0x_B5, 0x_9D, 0x_F8, 0x_F3, 0x_A0, 0x_D5, 0x_45, 0x_31, 0x_7D, 0x_73,
		0x_26, 0x_83, 0x_06, 0x_DE, 0x_1A, 0x_5F, 0x_B3, 0x_77, 0x_79, 0x_B1, 0x_6D, 0x_E2, 0x_D6,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_86_in_base_73
#[test]
fn s_has_86_in_base_73() {
	const S: &[u8] = &[
		0x_9B, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_9B, 0x_52, 0x_C4, 0x_BE, 0x_A5, 0x_96, 0x_E3, 0x_7E, 0x_9A, 0x_94, 0x_7C, 0x_D7, 0x_06, 0x_DB,
		0x_D3, 0x_1D, 0x_AD, 0x_9F, 0x_08, 0x_F8, 0x_28, 0x_1E, 0x_B6, 0x_B9, 0x_42, 0x_AC, 0x_77, 0x_A1, 0x_A7,
		0x_A0, 0x_91, 0x_34, 0x_F0, 0x_CA, 0x_B7, 0x_FF, 0x_CB, 0x_81, 0x_FC, 0x_97, 0x_46, 0x_32, 0x_38, 0x_A2,
		0x_1F, 0x_6D, 0x_EA, 0x_43, 0x_70, 0x_55, 0x_DC, 0x_25, 0x_DF, 0x_B4, 0x_63, 0x_0F, 0x_59, 0x_CF, 0x_57,
		0x_BF, 0x_4D, 0x_3D, 0x_47, 0x_48, 0x_84, 0x_E8, 0x_51, 0x_11, 0x_AB, 0x_30, 0x_33, 0x_07,
	];

	helper(S, BASE, 86);
}
// endregion
// region: s_has_641_in_base_73
#[test]
fn s_has_641_in_base_73() {
	const S: &[u8] = &[
		0x_94, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_B9, 0x_A0, 0x_6C, 0x_FE, 0x_23, 0x_42, 0x_B8, 0x_94, 0x_60, 0x_F1, 0x_85, 0x_AC, 0x_EE, 0x_AF,
		0x_CB, 0x_52, 0x_2E, 0x_05, 0x_D7, 0x_28, 0x_74, 0x_AE, 0x_4A, 0x_7F, 0x_FA, 0x_27, 0x_16, 0x_9B, 0x_76,
		0x_90, 0x_F0, 0x_EB, 0x_A9, 0x_3D, 0x_1C, 0x_4D, 0x_79, 0x_A4, 0x_D0, 0x_63, 0x_E4, 0x_DA, 0x_E8, 0x_31,
		0x_4F, 0x_B5, 0x_FB, 0x_68, 0x_C3, 0x_77, 0x_40, 0x_7C, 0x_E0, 0x_41, 0x_A1, 0x_7B, 0x_96, 0x_32, 0x_BC,
		0x_99, 0x_6E, 0x_CE, 0x_BD, 0x_47, 0x_37, 0x_2C, 0x_49, 0x_C9, 0x_FD, 0x_E7, 0x_B3, 0x_D4,
	];

	helper(S, BASE, 641);
}
// endregion
// region: s_has_4_328_in_base_73
#[test]
fn s_has_4_328_in_base_73() {
	const S: &[u8] = &[
		0x_AA, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_75, 0x_55, 0x_82, 0x_65, 0x_7E, 0x_2C, 0x_85, 0x_EC, 0x_43, 0x_C4, 0x_8C, 0x_36, 0x_A5, 0x_4D,
		0x_78, 0x_E5, 0x_30, 0x_95, 0x_16, 0x_C1, 0x_93, 0x_F5, 0x_AF, 0x_C5, 0x_6F, 0x_98, 0x_9A, 0x_87, 0x_E1,
		0x_E8, 0x_FA, 0x_3A, 0x_73, 0x_26, 0x_90, 0x_5B, 0x_8B, 0x_F0, 0x_D8, 0x_38, 0x_B8, 0x_80, 0x_52, 0x_A0,
		0x_C7, 0x_7A, 0x_A7, 0x_3C, 0x_22, 0x_4E, 0x_F8, 0x_D5, 0x_9E, 0x_40, 0x_13, 0x_E2, 0x_CA, 0x_91, 0x_AA,
		0x_84, 0x_DB, 0x_1E, 0x_10, 0x_E4, 0x_1D, 0x_70, 0x_63, 0x_AD, 0x_46, 0x_A4, 0x_4A, 0x_35,
	];

	helper(S, BASE, 4_328);
}
// endregion
// region: s_has_18_321_in_base_73
#[test]
fn s_has_18_321_in_base_73() {
	const S: &[u8] = &[
		0x_A1, 0x_A7, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_FE, 0x_D7, 0x_A1, 0x_7A, 0x_78, 0x_66, 0x_C1, 0x_84, 0x_94, 0x_23, 0x_53, 0x_E4, 0x_3C, 0x_F5,
		0x_A8, 0x_D0, 0x_E2, 0x_30, 0x_ED, 0x_F9, 0x_26, 0x_BC, 0x_5E, 0x_8C, 0x_65, 0x_AD, 0x_11, 0x_36, 0x_B6,
		0x_67, 0x_A7, 0x_CE, 0x_B8, 0x_95, 0x_C5, 0x_8D, 0x_F4, 0x_10, 0x_B3, 0x_2E, 0x_A2, 0x_D6, 0x_F3, 0x_DF,
		0x_43, 0x_C4, 0x_F6, 0x_5C, 0x_5F, 0x_13, 0x_FD, 0x_58, 0x_AE, 0x_39, 0x_72, 0x_A9, 0x_D2, 0x_FB, 0x_E5,
		0x_AC, 0x_A3, 0x_69, 0x_86, 0x_02, 0x_3B, 0x_12, 0x_75, 0x_C3, 0x_F0, 0x_14, 0x_48, 0x_4C,
	];

	helper(S, BASE, 18_321);
}
// endregion
// region: s_has_855_621_in_base_73
#[test]
fn s_has_855_621_in_base_73() {
	const S: &[u8] = &[
		0x_4B, 0x_8E, 0x_77, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_1B, 0x_56, 0x_4B, 0x_33, 0x_36, 0x_02, 0x_C3, 0x_1E, 0x_5C, 0x_06, 0x_D5, 0x_BA, 0x_AE, 0x_6A, 0x_8E,
		0x_85, 0x_27, 0x_DD, 0x_D9, 0x_9B, 0x_E3, 0x_70, 0x_52, 0x_DE, 0x_B0, 0x_2F, 0x_30, 0x_FC, 0x_37, 0x_6E,
		0x_5F, 0x_22, 0x_7F, 0x_79, 0x_54, 0x_D0, 0x_AF, 0x_F0, 0x_F4, 0x_34, 0x_77, 0x_5E, 0x_93, 0x_AD, 0x_90,
		0x_58, 0x_17, 0x_16, 0x_ED, 0x_B3, 0x_C5, 0x_1D, 0x_AA, 0x_FD, 0x_D2, 0x_E7, 0x_C4, 0x_D3, 0x_DF, 0x_EC,
		0x_BF, 0x_26, 0x_CD, 0x_F6, 0x_B7, 0x_DA, 0x_2E, 0x_53, 0x_B8, 0x_E5, 0x_18, 0x_6F, 0x_CE,
	];

	helper(S, BASE, 855_621);
}
// endregion
// region: s_has_7_805_082_in_base_73
#[test]
fn s_has_7_805_082_in_base_73() {
	const S: &[u8] = &[
		0x_FB, 0x_64, 0x_E2, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_C9, 0x_0E, 0x_9E, 0x_64, 0x_79, 0x_5C, 0x_AE, 0x_42, 0x_E3, 0x_2A, 0x_39, 0x_9A, 0x_FA, 0x_C5,
		0x_B1, 0x_91, 0x_08, 0x_FC, 0x_18, 0x_FB, 0x_13, 0x_F4, 0x_5E, 0x_38, 0x_55, 0x_6A, 0x_10, 0x_17, 0x_AB,
		0x_31, 0x_CE, 0x_65, 0x_80, 0x_35, 0x_C4, 0x_EB, 0x_BE, 0x_D9, 0x_93, 0x_3B, 0x_D6, 0x_23, 0x_EF, 0x_E9,
		0x_DB, 0x_E2, 0x_76, 0x_AD, 0x_A2, 0x_1C, 0x_21, 0x_4E, 0x_C8, 0x_FF, 0x_BD, 0x_3F, 0x_57, 0x_72, 0x_1F,
		0x_97, 0x_03, 0x_82, 0x_9B, 0x_59, 0x_36, 0x_7B, 0x_2E, 0x_4F, 0x_70, 0x_52, 0x_E8, 0x_95,
	];

	helper(S, BASE, 7_805_082);
}
// endregion
// region: s_has_54_802_925_in_base_73
#[test]
fn s_has_54_802_925_in_base_73() {
	const S: &[u8] = &[
		0x_17, 0x_D7, 0x_13, 0x_F1, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_17, 0x_9D, 0x_E0, 0x_A7, 0x_FD, 0x_CD, 0x_62, 0x_CF, 0x_58, 0x_51, 0x_DD, 0x_22, 0x_A5, 0x_AD,
		0x_93, 0x_28, 0x_E1, 0x_B7, 0x_5F, 0x_0E, 0x_C7, 0x_55, 0x_3E, 0x_FE, 0x_30, 0x_FA, 0x_48, 0x_8F, 0x_A0,
		0x_67, 0x_DA, 0x_A6, 0x_89, 0x_56, 0x_DF, 0x_4B, 0x_8C, 0x_02, 0x_1E, 0x_F0, 0x_1F, 0x_F3, 0x_CE, 0x_5B,
		0x_64, 0x_8E, 0x_4A, 0x_8D, 0x_70, 0x_D8, 0x_B1, 0x_63, 0x_78, 0x_1C, 0x_5E, 0x_9E, 0x_38, 0x_EC, 0x_84,
		0x_B0, 0x_10, 0x_61, 0x_13, 0x_69, 0x_85, 0x_F1, 0x_D7, 0x_B8, 0x_CB, 0x_BE, 0x_AB, 0x_F6,
	];

	helper(S, BASE, 54_802_925);
}
// endregion
// region: s_has_935_065_345_in_base_73
#[test]
fn s_has_935_065_345_in_base_73() {
	const S: &[u8] = &[
		0x_97, 0x_F6, 0x_8B, 0x_56, 0x_56,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_77, 0x_0E, 0x_63, 0x_90, 0x_5F, 0x_4E, 0x_A6, 0x_A3, 0x_2E, 0x_2A, 0x_F2, 0x_49, 0x_EC, 0x_BF,
		0x_1A, 0x_87, 0x_12, 0x_BA, 0x_D3, 0x_B6, 0x_FB, 0x_7A, 0x_56, 0x_A4, 0x_28, 0x_19, 0x_A0, 0x_ED, 0x_9E,
		0x_52, 0x_4B, 0x_97, 0x_31, 0x_45, 0x_40, 0x_A7, 0x_78, 0x_8F, 0x_08, 0x_73, 0x_01, 0x_D4, 0x_91, 0x_EE,
		0x_7F, 0x_9A, 0x_F5, 0x_8B, 0x_80, 0x_AF, 0x_06, 0x_E7, 0x_44, 0x_8C, 0x_C7, 0x_C4, 0x_B7, 0x_5A, 0x_34,
		0x_46, 0x_B5, 0x_D1, 0x_0F, 0x_42, 0x_FD, 0x_B9, 0x_F6, 0x_C0, 0x_41, 0x_65, 0x_6F, 0x_10,
	];

	helper(S, BASE, 935_065_345);
}
// endregion
// region: s_has_8_in_base_113
#[test]
fn s_has_8_in_base_113() {
	const S: &[u8] = &[0x_41];
	const BASE: &[u8] = &[
		0x_68, 0x_95, 0x_1E, 0x_8B, 0x_6A, 0x_DF, 0x_45, 0x_CE, 0x_41, 0x_E9, 0x_5C, 0x_F8, 0x_3B, 0x_77, 0x_43,
		0x_13, 0x_51, 0x_58, 0x_36, 0x_9A, 0x_73, 0x_22, 0x_C4, 0x_4E, 0x_7F, 0x_21, 0x_0F, 0x_12, 0x_66, 0x_B9,
		0x_16, 0x_2C, 0x_E6, 0x_C8, 0x_1A, 0x_7D, 0x_B2, 0x_B1, 0x_D4, 0x_4C, 0x_6E, 0x_8D, 0x_D9, 0x_67, 0x_F2,
		0x_F7, 0x_ED, 0x_D5, 0x_BC, 0x_82, 0x_57, 0x_23, 0x_37, 0x_83, 0x_9E, 0x_88, 0x_5F, 0x_A9, 0x_17, 0x_BA,
		0x_8A, 0x_81, 0x_D0, 0x_9C, 0x_99, 0x_2A, 0x_FD, 0x_85, 0x_44, 0x_CB, 0x_35, 0x_BF, 0x_B7, 0x_BE, 0x_24,
		0x_7C, 0x_62, 0x_0E, 0x_AD, 0x_A6, 0x_5A, 0x_2E, 0x_C9, 0x_FF, 0x_92, 0x_04, 0x_1C, 0x_1D, 0x_19, 0x_D8,
		0x_C6, 0x_C2, 0x_DA, 0x_52, 0x_6F, 0x_86, 0x_D6, 0x_E0, 0x_69, 0x_AB, 0x_FE, 0x_8E, 0x_29, 0x_CD, 0x_7E,
		0x_48, 0x_F5, 0x_F4, 0x_A2, 0x_EA, 0x_A8, 0x_14, 0x_28,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_10_in_base_113
#[test]
fn s_has_10_in_base_113() {
	const S: &[u8] = &[0x_DB];
	const BASE: &[u8] = &[
		0x_D9, 0x_30, 0x_53, 0x_01, 0x_9F, 0x_DE, 0x_05, 0x_A5, 0x_1A, 0x_35, 0x_DB, 0x_D6, 0x_66, 0x_42, 0x_2C,
		0x_7F, 0x_7B, 0x_72, 0x_91, 0x_B3, 0x_28, 0x_16, 0x_13, 0x_C8, 0x_4C, 0x_E1, 0x_C3, 0x_62, 0x_94, 0x_90,
		0x_4A, 0x_92, 0x_41, 0x_5E, 0x_A2, 0x_02, 0x_D4, 0x_9C, 0x_8D, 0x_CD, 0x_81, 0x_DA, 0x_87, 0x_64, 0x_A4,
		0x_5F, 0x_A0, 0x_DC, 0x_BE, 0x_97, 0x_A8, 0x_F3, 0x_B4, 0x_33, 0x_CB, 0x_0E, 0x_B0, 0x_AC, 0x_5C, 0x_C5,
		0x_1C, 0x_9B, 0x_FD, 0x_AD, 0x_2E, 0x_2F, 0x_56, 0x_F5, 0x_06, 0x_39, 0x_E7, 0x_67, 0x_F1, 0x_3C, 0x_B8,
		0x_EB, 0x_D1, 0x_15, 0x_FC, 0x_C4, 0x_36, 0x_E5, 0x_55, 0x_EE, 0x_AF, 0x_76, 0x_9E, 0x_BA, 0x_60, 0x_43,
		0x_82, 0x_B9, 0x_98, 0x_4B, 0x_FA, 0x_04, 0x_E0, 0x_C7, 0x_E6, 0x_69, 0x_10, 0x_0F, 0x_7C, 0x_D3, 0x_8E,
		0x_8F, 0x_A7, 0x_71, 0x_B5, 0x_75, 0x_6B, 0x_58, 0x_FF,
	];

	helper(S, BASE, 10);
}
// endregion
// region: s_has_196_in_base_113
#[test]
fn s_has_196_in_base_113() {
	const S: &[u8] = &[
		0x_D5, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_D5, 0x_43, 0x_60, 0x_D7, 0x_10, 0x_DB, 0x_3F, 0x_48, 0x_90, 0x_9D, 0x_53, 0x_58, 0x_A9, 0x_11,
		0x_B3, 0x_72, 0x_D2, 0x_49, 0x_51, 0x_7C, 0x_25, 0x_FC, 0x_C4, 0x_F2, 0x_42, 0x_DF, 0x_F1, 0x_CE, 0x_40,
		0x_26, 0x_CD, 0x_B0, 0x_50, 0x_65, 0x_BA, 0x_8C, 0x_7E, 0x_7B, 0x_8F, 0x_82, 0x_9E, 0x_1D, 0x_E9, 0x_D9,
		0x_61, 0x_B5, 0x_08, 0x_23, 0x_7F, 0x_A2, 0x_BC, 0x_59, 0x_E0, 0x_C7, 0x_B2, 0x_64, 0x_EE, 0x_2F, 0x_DC,
		0x_38, 0x_D6, 0x_77, 0x_BD, 0x_3C, 0x_86, 0x_AE, 0x_68, 0x_95, 0x_5E, 0x_BE, 0x_AC, 0x_FF, 0x_BB, 0x_76,
		0x_F6, 0x_4C, 0x_81, 0x_1C, 0x_79, 0x_71, 0x_22, 0x_87, 0x_FD, 0x_E2, 0x_DA, 0x_39, 0x_33, 0x_15, 0x_03,
		0x_AF, 0x_62, 0x_8D, 0x_2A, 0x_55, 0x_FB, 0x_4A, 0x_D4, 0x_6E, 0x_92, 0x_D3, 0x_63, 0x_88, 0x_98, 0x_4B,
		0x_84, 0x_13, 0x_19, 0x_54, 0x_37, 0x_B8, 0x_E8, 0x_A5,
	];

	helper(S, BASE, 196);
}
// endregion
// region: s_has_7_617_in_base_113
#[test]
fn s_has_7_617_in_base_113() {
	const S: &[u8] = &[
		0x_4D, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_84, 0x_EF, 0x_A6, 0x_D7, 0x_35, 0x_F1, 0x_EA, 0x_05, 0x_6E, 0x_D1, 0x_A2, 0x_8D, 0x_80, 0x_30,
		0x_7A, 0x_26, 0x_38, 0x_61, 0x_C1, 0x_13, 0x_48, 0x_FD, 0x_88, 0x_8C, 0x_8E, 0x_A0, 0x_89, 0x_DF, 0x_1E,
		0x_6A, 0x_65, 0x_6F, 0x_4C, 0x_81, 0x_C6, 0x_62, 0x_67, 0x_60, 0x_33, 0x_B9, 0x_AA, 0x_D2, 0x_79, 0x_A1,
		0x_7C, 0x_51, 0x_C5, 0x_FB, 0x_53, 0x_31, 0x_BA, 0x_01, 0x_4F, 0x_6D, 0x_15, 0x_AE, 0x_02, 0x_68, 0x_14,
		0x_11, 0x_B0, 0x_24, 0x_71, 0x_96, 0x_DD, 0x_FF, 0x_4D, 0x_25, 0x_F3, 0x_17, 0x_55, 0x_5E, 0x_5C, 0x_34,
		0x_D8, 0x_B3, 0x_A8, 0x_D5, 0x_46, 0x_3B, 0x_44, 0x_2F, 0x_EE, 0x_DE, 0x_F2, 0x_E3, 0x_27, 0x_28, 0x_98,
		0x_94, 0x_1F, 0x_F8, 0x_18, 0x_22, 0x_CE, 0x_E4, 0x_E0, 0x_A3, 0x_E8, 0x_6C, 0x_7D, 0x_42, 0x_C3, 0x_A5,
		0x_72, 0x_9F, 0x_39, 0x_70, 0x_E1, 0x_AB, 0x_DC, 0x_8F,
	];

	helper(S, BASE, 7_617);
}
// endregion
// region: s_has_67_949_in_base_113
#[test]
fn s_has_67_949_in_base_113() {
	const S: &[u8] = &[
		0x_10, 0x_F0, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_C7, 0x_E7, 0x_A4, 0x_50, 0x_10, 0x_C6, 0x_57, 0x_6B, 0x_DE, 0x_85, 0x_FC, 0x_F9, 0x_3F, 0x_EB,
		0x_AD, 0x_AB, 0x_87, 0x_A5, 0x_22, 0x_BC, 0x_DF, 0x_EE, 0x_9F, 0x_DC, 0x_C1, 0x_21, 0x_72, 0x_6E, 0x_9D,
		0x_56, 0x_D1, 0x_45, 0x_F5, 0x_4E, 0x_5D, 0x_F0, 0x_53, 0x_86, 0x_34, 0x_6A, 0x_35, 0x_3D, 0x_D9, 0x_F4,
		0x_13, 0x_D7, 0x_28, 0x_63, 0x_5B, 0x_FB, 0x_B9, 0x_80, 0x_F8, 0x_77, 0x_1B, 0x_4F, 0x_30, 0x_37, 0x_CF,
		0x_62, 0x_39, 0x_E9, 0x_92, 0x_7A, 0x_52, 0x_C2, 0x_25, 0x_B3, 0x_E1, 0x_1A, 0x_D5, 0x_CE, 0x_AE, 0x_4A,
		0x_BA, 0x_91, 0x_42, 0x_18, 0x_01, 0x_5A, 0x_82, 0x_43, 0x_C9, 0x_7F, 0x_AC, 0x_B1, 0x_C3, 0x_06, 0x_89,
		0x_98, 0x_2A, 0x_36, 0x_19, 0x_83, 0x_70, 0x_B7, 0x_A7, 0x_E3, 0x_67, 0x_FD, 0x_93, 0x_65, 0x_8F, 0x_4B,
		0x_3B, 0x_2C, 0x_F6, 0x_8E, 0x_68, 0x_33, 0x_D4, 0x_29,
	];

	helper(S, BASE, 67_949);
}
// endregion
// region: s_has_676_633_in_base_113
#[test]
fn s_has_676_633_in_base_113() {
	const S: &[u8] = &[
		0x_AA, 0x_3B, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_8B, 0x_E3, 0x_C2, 0x_32, 0x_FE, 0x_D1, 0x_49, 0x_69, 0x_A5, 0x_76, 0x_07, 0x_78, 0x_B0, 0x_63,
		0x_26, 0x_34, 0x_18, 0x_D5, 0x_22, 0x_AE, 0x_E5, 0x_DB, 0x_BB, 0x_A7, 0x_E1, 0x_3D, 0x_1E, 0x_66, 0x_90,
		0x_51, 0x_E6, 0x_AF, 0x_4B, 0x_92, 0x_CD, 0x_AC, 0x_D2, 0x_12, 0x_45, 0x_25, 0x_62, 0x_B2, 0x_7A, 0x_D9,
		0x_94, 0x_DC, 0x_F1, 0x_D4, 0x_36, 0x_BC, 0x_30, 0x_AA, 0x_64, 0x_21, 0x_9A, 0x_8D, 0x_68, 0x_F5, 0x_C0,
		0x_DD, 0x_DE, 0x_31, 0x_7D, 0x_AB, 0x_03, 0x_72, 0x_48, 0x_19, 0x_7B, 0x_4E, 0x_44, 0x_8F, 0x_50, 0x_06,
		0x_70, 0x_54, 0x_EC, 0x_41, 0x_A4, 0x_29, 0x_75, 0x_DF, 0x_B4, 0x_B3, 0x_CE, 0x_93, 0x_E8, 0x_7F, 0x_04,
		0x_7E, 0x_2A, 0x_ED, 0x_58, 0x_15, 0x_6B, 0x_5B, 0x_83, 0x_CC, 0x_42, 0x_B9, 0x_9C, 0x_08, 0x_FB, 0x_BE,
		0x_B8, 0x_85, 0x_65, 0x_F8, 0x_6A, 0x_61, 0x_3B, 0x_F0,
	];

	helper(S, BASE, 676_633);
}
// endregion
// region: s_has_2_962_144_in_base_113
#[test]
fn s_has_2_962_144_in_base_113() {
	const S: &[u8] = &[
		0x_85, 0x_D1, 0x_22, 0x_C5,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_A1, 0x_85, 0x_3A, 0x_31, 0x_D1, 0x_4A, 0x_90, 0x_D2, 0x_76, 0x_E6, 0x_E3, 0x_1F, 0x_14, 0x_DD,
		0x_1D, 0x_3C, 0x_0E, 0x_01, 0x_B1, 0x_AB, 0x_CD, 0x_C2, 0x_3D, 0x_96, 0x_9C, 0x_5C, 0x_54, 0x_05, 0x_23,
		0x_CF, 0x_32, 0x_E7, 0x_A4, 0x_BA, 0x_FD, 0x_57, 0x_C6, 0x_9E, 0x_BE, 0x_99, 0x_F3, 0x_FB, 0x_28, 0x_A7,
		0x_F4, 0x_BB, 0x_6D, 0x_FF, 0x_C4, 0x_04, 0x_7E, 0x_F8, 0x_77, 0x_69, 0x_EF, 0x_5E, 0x_2E, 0x_84, 0x_43,
		0x_3B, 0x_1A, 0x_24, 0x_48, 0x_D7, 0x_2C, 0x_1E, 0x_E2, 0x_F6, 0x_9D, 0x_6E, 0x_7F, 0x_38, 0x_58, 0x_71,
		0x_C5, 0x_60, 0x_BD, 0x_A9, 0x_6F, 0x_E4, 0x_3E, 0x_89, 0x_C0, 0x_AE, 0x_6C, 0x_B3, 0x_67, 0x_78, 0x_CA,
		0x_4C, 0x_A2, 0x_29, 0x_5B, 0x_E5, 0x_DB, 0x_07, 0x_7A, 0x_0F, 0x_D4, 0x_26, 0x_5A, 0x_98, 0x_15, 0x_75,
		0x_1B, 0x_27, 0x_93, 0x_13, 0x_A8, 0x_22, 0x_EC, 0x_3F,
	];

	helper(S, BASE, 2_962_144);
}
// endregion
// region: s_has_58_791_759_in_base_113
#[test]
fn s_has_58_791_759_in_base_113() {
	const S: &[u8] = &[
		0x_D9, 0x_94, 0x_38, 0x_F4,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_4F, 0x_5A, 0x_46, 0x_DA, 0x_8F, 0x_F4, 0x_4D, 0x_D6, 0x_8C, 0x_3C, 0x_8A, 0x_75, 0x_83, 0x_7D,
		0x_99, 0x_B1, 0x_FF, 0x_B8, 0x_30, 0x_B3, 0x_E5, 0x_32, 0x_E6, 0x_FE, 0x_F0, 0x_15, 0x_FD, 0x_2C, 0x_38,
		0x_47, 0x_79, 0x_70, 0x_D8, 0x_A8, 0x_88, 0x_31, 0x_B5, 0x_FC, 0x_34, 0x_D9, 0x_C3, 0x_93, 0x_D7, 0x_BD,
		0x_5E, 0x_3A, 0x_10, 0x_BA, 0x_DD, 0x_01, 0x_65, 0x_89, 0x_61, 0x_96, 0x_3D, 0x_C7, 0x_1C, 0x_5B, 0x_66,
		0x_26, 0x_82, 0x_C6, 0x_F3, 0x_37, 0x_7C, 0x_6D, 0x_40, 0x_44, 0x_2A, 0x_76, 0x_24, 0x_CA, 0x_6F, 0x_E0,
		0x_71, 0x_AE, 0x_B0, 0x_02, 0x_A0, 0x_54, 0x_E7, 0x_84, 0x_67, 0x_94, 0x_F8, 0x_6B, 0x_0E, 0x_80, 0x_51,
		0x_CF, 0x_08, 0x_EF, 0x_D0, 0x_64, 0x_21, 0x_7F, 0x_04, 0x_C0, 0x_42, 0x_85, 0x_52, 0x_81, 0x_06, 0x_8B,
		0x_AF, 0x_D1, 0x_3E, 0x_8E, 0x_6A, 0x_14, 0x_1D, 0x_5F,
	];

	helper(S, BASE, 58_791_759);
}
// endregion
// region: s_has_997_066_079_in_base_113
#[test]
fn s_has_997_066_079_in_base_113() {
	const S: &[u8] = &[
		0x_99, 0x_8B, 0x_2F, 0x_B8, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_2F, 0x_47, 0x_B7, 0x_94, 0x_A2, 0x_99, 0x_28, 0x_68, 0x_69, 0x_32, 0x_CE, 0x_10, 0x_8B, 0x_9A,
		0x_3D, 0x_96, 0x_D8, 0x_41, 0x_C7, 0x_72, 0x_C3, 0x_BA, 0x_0E, 0x_3B, 0x_BF, 0x_93, 0x_C0, 0x_58, 0x_16,
		0x_17, 0x_E0, 0x_4F, 0x_7B, 0x_92, 0x_A1, 0x_C6, 0x_D9, 0x_1D, 0x_67, 0x_CF, 0x_89, 0x_A5, 0x_F9, 0x_B9,
		0x_DC, 0x_23, 0x_EC, 0x_74, 0x_EB, 0x_44, 0x_ED, 0x_0F, 0x_D1, 0x_85, 0x_1B, 0x_08, 0x_A4, 0x_B1, 0x_F5,
		0x_AF, 0x_D7, 0x_71, 0x_DF, 0x_5D, 0x_43, 0x_7C, 0x_AA, 0x_84, 0x_DB, 0x_60, 0x_57, 0x_5F, 0x_64, 0x_50,
		0x_C1, 0x_D0, 0x_AE, 0x_AB, 0x_01, 0x_4D, 0x_13, 0x_F6, 0x_D2, 0x_A9, 0x_4C, 0x_30, 0x_42, 0x_39, 0x_81,
		0x_CC, 0x_83, 0x_B2, 0x_14, 0x_9F, 0x_2C, 0x_86, 0x_2E, 0x_5B, 0x_E7, 0x_3E, 0x_B8, 0x_F2, 0x_29, 0x_F3,
		0x_15, 0x_D5, 0x_5E, 0x_59, 0x_7A, 0x_24, 0x_9B, 0x_5C,
	];

	helper(S, BASE, 997_066_079);
}
// endregion
// region: s_has_4_in_base_193
#[test]
fn s_has_4_in_base_193() {
	const S: &[u8] = &[0x_15];
	const BASE: &[u8] = &[
		0x_83, 0x_97, 0x_9D, 0x_94, 0x_15, 0x_9C, 0x_38, 0x_14, 0x_02, 0x_67, 0x_68, 0x_B7, 0x_82, 0x_89, 0x_F8,
		0x_3B, 0x_12, 0x_39, 0x_18, 0x_F7, 0x_4E, 0x_17, 0x_F3, 0x_4F, 0x_4A, 0x_13, 0x_ED, 0x_95, 0x_5A, 0x_8C,
		0x_A7, 0x_55, 0x_8F, 0x_CB, 0x_69, 0x_65, 0x_B6, 0x_22, 0x_A4, 0x_CD, 0x_3F, 0x_62, 0x_F2, 0x_F9, 0x_66,
		0x_A2, 0x_E3, 0x_92, 0x_C4, 0x_24, 0x_05, 0x_51, 0x_F1, 0x_DD, 0x_29, 0x_35, 0x_F5, 0x_7B, 0x_75, 0x_04,
		0x_F6, 0x_FA, 0x_3E, 0x_EE, 0x_3C, 0x_CC, 0x_7D, 0x_EF, 0x_98, 0x_C9, 0x_81, 0x_E0, 0x_27, 0x_B1, 0x_96,
		0x_91, 0x_E2, 0x_A9, 0x_5D, 0x_46, 0x_80, 0x_45, 0x_2A, 0x_1F, 0x_49, 0x_1C, 0x_6F, 0x_A1, 0x_6A, 0x_76,
		0x_52, 0x_EC, 0x_03, 0x_5F, 0x_60, 0x_A3, 0x_DC, 0x_BA, 0x_40, 0x_0F, 0x_5C, 0x_FF, 0x_26, 0x_D1, 0x_7F,
		0x_43, 0x_56, 0x_C6, 0x_B5, 0x_C5, 0x_C2, 0x_D2, 0x_63, 0x_4C, 0x_30, 0x_4D, 0x_D3, 0x_F4, 0x_32, 0x_1E,
		0x_74, 0x_71, 0x_1D, 0x_3D, 0x_41, 0x_DA, 0x_AE, 0x_1B, 0x_72, 0x_23, 0x_16, 0x_11, 0x_C0, 0x_07, 0x_0E,
		0x_70, 0x_9F, 0x_A6, 0x_AA, 0x_BD, 0x_E8, 0x_7C, 0x_2C, 0x_C7, 0x_CE, 0x_BC, 0x_E4, 0x_8B, 0x_E9, 0x_7A,
		0x_B2, 0x_61, 0x_FE, 0x_FB, 0x_A0, 0x_EA, 0x_EB, 0x_59, 0x_5B, 0x_AC, 0x_CF, 0x_D6, 0x_9E, 0x_73, 0x_B3,
		0x_B9, 0x_87, 0x_1A, 0x_6D, 0x_A8, 0x_77, 0x_DF, 0x_9A, 0x_78, 0x_4B, 0x_37, 0x_85, 0x_8E, 0x_86, 0x_E5,
		0x_E7, 0x_08, 0x_9B, 0x_10, 0x_D0, 0x_DE, 0x_AD, 0x_FC, 0x_6B, 0x_AF, 0x_C3, 0x_88, 0x_B4,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_62_in_base_193
#[test]
fn s_has_62_in_base_193() {
	const S: &[u8] = &[0x_76];
	const BASE: &[u8] = &[
		0x_DD, 0x_BD, 0x_8D, 0x_D7, 0x_82, 0x_E3, 0x_1C, 0x_29, 0x_AC, 0x_F5, 0x_C5, 0x_CC, 0x_73, 0x_C9, 0x_A7,
		0x_89, 0x_D0, 0x_27, 0x_04, 0x_A1, 0x_D6, 0x_18, 0x_9B, 0x_AD, 0x_3E, 0x_77, 0x_E9, 0x_3F, 0x_4F, 0x_7E,
		0x_CF, 0x_01, 0x_46, 0x_BA, 0x_85, 0x_83, 0x_F3, 0x_91, 0x_B1, 0x_1B, 0x_22, 0x_7B, 0x_51, 0x_7F, 0x_EA,
		0x_FF, 0x_FD, 0x_32, 0x_B2, 0x_D2, 0x_74, 0x_C7, 0x_F0, 0x_63, 0x_33, 0x_95, 0x_69, 0x_B0, 0x_BC, 0x_C3,
		0x_53, 0x_FE, 0x_76, 0x_B3, 0x_E5, 0x_E1, 0x_34, 0x_FB, 0x_40, 0x_1D, 0x_CA, 0x_87, 0x_E8, 0x_4A, 0x_E4,
		0x_F9, 0x_59, 0x_58, 0x_B6, 0x_FC, 0x_D5, 0x_4C, 0x_CD, 0x_14, 0x_61, 0x_30, 0x_36, 0x_42, 0x_F4, 0x_5B,
		0x_E0, 0x_57, 0x_71, 0x_EB, 0x_B5, 0x_79, 0x_C2, 0x_19, 0x_A0, 0x_1E, 0x_4E, 0x_4B, 0x_47, 0x_B4, 0x_A9,
		0x_EC, 0x_F8, 0x_DF, 0x_66, 0x_28, 0x_88, 0x_84, 0x_75, 0x_A8, 0x_B7, 0x_8A, 0x_6A, 0x_31, 0x_92, 0x_0F,
		0x_AB, 0x_ED, 0x_9C, 0x_B8, 0x_F6, 0x_81, 0x_9A, 0x_0E, 0x_15, 0x_D3, 0x_3C, 0x_DB, 0x_08, 0x_9E, 0x_DC,
		0x_8B, 0x_6E, 0x_E6, 0x_24, 0x_11, 0x_8E, 0x_5A, 0x_60, 0x_E2, 0x_AA, 0x_D8, 0x_BB, 0x_B9, 0x_48, 0x_55,
		0x_1F, 0x_D4, 0x_94, 0x_80, 0x_5E, 0x_FA, 0x_C6, 0x_97, 0x_C8, 0x_6B, 0x_37, 0x_A3, 0x_A5, 0x_7C, 0x_1A,
		0x_C4, 0x_93, 0x_67, 0x_F2, 0x_C1, 0x_F1, 0x_6D, 0x_BF, 0x_49, 0x_35, 0x_CE, 0x_BE, 0x_02, 0x_07, 0x_26,
		0x_DA, 0x_21, 0x_38, 0x_17, 0x_8C, 0x_8F, 0x_EE, 0x_5F, 0x_03, 0x_05, 0x_98, 0x_7A, 0x_AE,
	];

	helper(S, BASE, 62);
}
// endregion
// region: s_has_678_in_base_193
#[test]
fn s_has_678_in_base_193() {
	const S: &[u8] = &[
		0x_55, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_4B, 0x_E6, 0x_55, 0x_1C, 0x_CA, 0x_19, 0x_98, 0x_6C, 0x_32, 0x_BD, 0x_51, 0x_FB, 0x_73, 0x_3F,
		0x_DD, 0x_48, 0x_14, 0x_84, 0x_4A, 0x_FF, 0x_B6, 0x_9A, 0x_4E, 0x_9E, 0x_33, 0x_B8, 0x_FD, 0x_CC, 0x_5C,
		0x_92, 0x_B1, 0x_EE, 0x_CB, 0x_E8, 0x_49, 0x_6B, 0x_7C, 0x_79, 0x_9D, 0x_81, 0x_AA, 0x_06, 0x_C7, 0x_D3,
		0x_28, 0x_62, 0x_B2, 0x_23, 0x_3E, 0x_91, 0x_78, 0x_C1, 0x_08, 0x_8A, 0x_86, 0x_57, 0x_F7, 0x_F1, 0x_D5,
		0x_C6, 0x_AE, 0x_3A, 0x_E5, 0x_25, 0x_B7, 0x_FC, 0x_99, 0x_C3, 0x_2E, 0x_D4, 0x_04, 0x_B4, 0x_6E, 0x_0F,
		0x_7D, 0x_0E, 0x_DC, 0x_94, 0x_4D, 0x_11, 0x_5B, 0x_F2, 0x_D2, 0x_89, 0x_B0, 0x_35, 0x_1E, 0x_45, 0x_F0,
		0x_5A, 0x_BB, 0x_15, 0x_C5, 0x_36, 0x_12, 0x_F8, 0x_DA, 0x_A0, 0x_EB, 0x_61, 0x_D7, 0x_A8, 0x_C0, 0x_D0,
		0x_AF, 0x_1F, 0x_60, 0x_AB, 0x_A2, 0x_5E, 0x_52, 0x_22, 0x_85, 0x_53, 0x_A4, 0x_A9, 0x_5D, 0x_BC, 0x_24,
		0x_C9, 0x_39, 0x_E9, 0x_37, 0x_69, 0x_43, 0x_7A, 0x_70, 0x_BE, 0x_66, 0x_5F, 0x_26, 0x_7F, 0x_96, 0x_40,
		0x_71, 0x_CD, 0x_A7, 0x_F6, 0x_6D, 0x_D8, 0x_03, 0x_54, 0x_31, 0x_BA, 0x_E3, 0x_18, 0x_83, 0x_41, 0x_13,
		0x_EC, 0x_3B, 0x_D6, 0x_95, 0x_38, 0x_AC, 0x_56, 0x_8E, 0x_65, 0x_77, 0x_6A, 0x_7E, 0x_D1, 0x_59, 0x_EF,
		0x_DF, 0x_B5, 0x_AD, 0x_9B, 0x_01, 0x_B3, 0x_1A, 0x_72, 0x_47, 0x_DE, 0x_3D, 0x_74, 0x_97, 0x_F4, 0x_A5,
		0x_58, 0x_F3, 0x_FE, 0x_87, 0x_44, 0x_B9, 0x_64, 0x_07, 0x_F9, 0x_E1, 0x_90, 0x_88, 0x_C8,
	];

	helper(S, BASE, 678);
}
// endregion
// region: s_has_5_295_in_base_193
#[test]
fn s_has_5_295_in_base_193() {
	const S: &[u8] = &[
		0x_A0, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_41, 0x_7F, 0x_C7, 0x_D1, 0x_9C, 0x_94, 0x_50, 0x_AD, 0x_B6, 0x_3F, 0x_9D, 0x_D3, 0x_E2, 0x_BB,
		0x_D0, 0x_9F, 0x_49, 0x_21, 0x_6D, 0x_D5, 0x_C2, 0x_FC, 0x_53, 0x_64, 0x_A5, 0x_E4, 0x_A0, 0x_51, 0x_97,
		0x_92, 0x_CD, 0x_68, 0x_03, 0x_91, 0x_BE, 0x_72, 0x_E0, 0x_43, 0x_BD, 0x_A6, 0x_B8, 0x_32, 0x_08, 0x_E9,
		0x_A1, 0x_52, 0x_8B, 0x_F5, 0x_5E, 0x_30, 0x_1D, 0x_61, 0x_02, 0x_44, 0x_4D, 0x_95, 0x_3D, 0x_AC, 0x_9A,
		0x_9B, 0x_86, 0x_4C, 0x_F7, 0x_DA, 0x_A3, 0x_FD, 0x_56, 0x_1E, 0x_11, 0x_1B, 0x_5D, 0x_29, 0x_E6, 0x_AA,
		0x_18, 0x_C3, 0x_8A, 0x_BA, 0x_F2, 0x_1A, 0x_24, 0x_2A, 0x_7E, 0x_7B, 0x_01, 0x_7D, 0x_EC, 0x_FB, 0x_E7,
		0x_74, 0x_79, 0x_CA, 0x_EB, 0x_70, 0x_D6, 0x_45, 0x_13, 0x_B0, 0x_D8, 0x_2C, 0x_B9, 0x_2E, 0x_63, 0x_A4,
		0x_2F, 0x_0E, 0x_12, 0x_FE, 0x_F8, 0x_E8, 0x_28, 0x_C9, 0x_BC, 0x_19, 0x_38, 0x_15, 0x_A2, 0x_B5, 0x_A8,
		0x_D2, 0x_CF, 0x_4E, 0x_65, 0x_78, 0x_71, 0x_6F, 0x_3B, 0x_D9, 0x_EA, 0x_40, 0x_62, 0x_46, 0x_81, 0x_AF,
		0x_59, 0x_75, 0x_FF, 0x_F6, 0x_8E, 0x_47, 0x_E3, 0x_0F, 0x_6C, 0x_3E, 0x_33, 0x_26, 0x_93, 0x_22, 0x_C6,
		0x_B4, 0x_87, 0x_5A, 0x_BF, 0x_96, 0x_6B, 0x_1C, 0x_B3, 0x_55, 0x_77, 0x_8C, 0x_DD, 0x_CB, 0x_6E, 0x_57,
		0x_25, 0x_A7, 0x_05, 0x_C1, 0x_3C, 0x_07, 0x_73, 0x_83, 0x_39, 0x_88, 0x_8D, 0x_C5, 0x_80, 0x_EE, 0x_5C,
		0x_35, 0x_CC, 0x_C0, 0x_B2, 0x_7A, 0x_DF, 0x_8F, 0x_EF, 0x_7C, 0x_D4, 0x_DE, 0x_14, 0x_89,
	];

	helper(S, BASE, 5_295);
}
// endregion
// region: s_has_27_149_in_base_193
#[test]
fn s_has_27_149_in_base_193() {
	const S: &[u8] = &[
		0x_68, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_FD, 0x_96, 0x_76, 0x_10, 0x_34, 0x_AC, 0x_FB, 0x_33, 0x_26, 0x_A1, 0x_29, 0x_6A, 0x_41, 0x_64, 0x_B1,
		0x_A7, 0x_44, 0x_AF, 0x_53, 0x_CF, 0x_67, 0x_60, 0x_97, 0x_4B, 0x_3D, 0x_8C, 0x_8A, 0x_C6, 0x_D7, 0x_E1,
		0x_21, 0x_5E, 0x_40, 0x_9C, 0x_A3, 0x_C9, 0x_A6, 0x_4A, 0x_6F, 0x_9B, 0x_F4, 0x_24, 0x_C5, 0x_FA, 0x_D0,
		0x_70, 0x_22, 0x_58, 0x_CE, 0x_59, 0x_E6, 0x_DE, 0x_5B, 0x_B9, 0x_E4, 0x_0F, 0x_8E, 0x_35, 0x_1E, 0x_82,
		0x_38, 0x_1D, 0x_B8, 0x_48, 0x_07, 0x_8F, 0x_25, 0x_D8, 0x_EE, 0x_18, 0x_7D, 0x_A9, 0x_80, 0x_31, 0x_C0,
		0x_45, 0x_CB, 0x_3E, 0x_16, 0x_46, 0x_EB, 0x_89, 0x_ED, 0x_0E, 0x_85, 0x_D1, 0x_C7, 0x_77, 0x_5D, 0x_6B,
		0x_D9, 0x_BF, 0x_D3, 0x_05, 0x_65, 0x_84, 0x_DA, 0x_98, 0x_08, 0x_91, 0x_7F, 0x_F6, 0x_BB, 0x_8B, 0x_06,
		0x_DB, 0x_43, 0x_37, 0x_C1, 0x_74, 0x_7A, 0x_6D, 0x_E8, 0x_C3, 0x_62, 0x_5A, 0x_AB, 0x_47, 0x_5C, 0x_81,
		0x_11, 0x_1F, 0x_13, 0x_F2, 0x_71, 0x_61, 0x_01, 0x_8D, 0x_F9, 0x_17, 0x_DC, 0x_78, 0x_92, 0x_B2, 0x_9E,
		0x_F8, 0x_39, 0x_4F, 0x_2E, 0x_73, 0x_68, 0x_F1, 0x_FC, 0x_2F, 0x_28, 0x_C2, 0x_FE, 0x_EA, 0x_79, 0x_D5,
		0x_C4, 0x_1C, 0x_D2, 0x_75, 0x_CD, 0x_F0, 0x_FF, 0x_2A, 0x_3F, 0x_F5, 0x_12, 0x_5F, 0x_95, 0x_B7, 0x_36,
		0x_04, 0x_57, 0x_C8, 0x_BD, 0x_99, 0x_03, 0x_52, 0x_D4, 0x_E0, 0x_02, 0x_4C, 0x_87, 0x_A8, 0x_7B, 0x_93,
		0x_EC, 0x_9A, 0x_83, 0x_54, 0x_E7, 0x_56, 0x_88, 0x_7C, 0x_1A, 0x_BE, 0x_A0, 0x_A4, 0x_B3,
	];

	helper(S, BASE, 27_149);
}
// endregion
// region: s_has_692_410_in_base_193
#[test]
fn s_has_692_410_in_base_193() {
	const S: &[u8] = &[
		0x_E5, 0x_38, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_C6, 0x_65, 0x_B2, 0x_5C, 0x_CA, 0x_F7, 0x_BD, 0x_C3, 0x_DD, 0x_F9, 0x_71, 0x_BB, 0x_A3, 0x_07,
		0x_6F, 0x_A0, 0x_1E, 0x_E5, 0x_6A, 0x_F3, 0x_99, 0x_8D, 0x_3E, 0x_72, 0x_FD, 0x_80, 0x_A6, 0x_43, 0x_6E,
		0x_14, 0x_B9, 0x_12, 0x_F8, 0x_37, 0x_57, 0x_DB, 0x_F4, 0x_2E, 0x_E3, 0x_9E, 0x_75, 0x_3F, 0x_77, 0x_86,
		0x_B3, 0x_1B, 0x_EA, 0x_E0, 0x_51, 0x_82, 0x_EE, 0x_01, 0x_A4, 0x_5A, 0x_AE, 0x_44, 0x_8B, 0x_02, 0x_5E,
		0x_FB, 0x_40, 0x_A2, 0x_41, 0x_AF, 0x_13, 0x_DA, 0x_5F, 0x_91, 0x_E6, 0x_1F, 0x_79, 0x_85, 0x_CB, 0x_15,
		0x_D6, 0x_64, 0x_94, 0x_F2, 0x_B8, 0x_17, 0x_87, 0x_59, 0x_49, 0x_B1, 0x_BA, 0x_CF, 0x_0F, 0x_D2, 0x_C8,
		0x_BF, 0x_47, 0x_D1, 0x_95, 0x_4C, 0x_3D, 0x_39, 0x_23, 0x_26, 0x_CC, 0x_F5, 0x_61, 0x_7C, 0x_67, 0x_89,
		0x_FC, 0x_B4, 0x_A1, 0x_E4, 0x_28, 0x_60, 0x_9B, 0x_A5, 0x_38, 0x_E7, 0x_BC, 0x_C0, 0x_52, 0x_35, 0x_31,
		0x_4F, 0x_06, 0x_29, 0x_A7, 0x_ED, 0x_1A, 0x_DE, 0x_97, 0x_2F, 0x_A8, 0x_E2, 0x_03, 0x_EF, 0x_3C, 0x_08,
		0x_78, 0x_66, 0x_22, 0x_C5, 0x_FA, 0x_AB, 0x_7E, 0x_21, 0x_8A, 0x_CD, 0x_33, 0x_7A, 0x_7F, 0x_36, 0x_90,
		0x_C9, 0x_4B, 0x_76, 0x_5B, 0x_84, 0x_48, 0x_45, 0x_CE, 0x_3B, 0x_F6, 0x_EC, 0x_04, 0x_55, 0x_93, 0x_B7,
		0x_46, 0x_3A, 0x_53, 0x_92, 0x_19, 0x_69, 0x_8E, 0x_10, 0x_EB, 0x_BE, 0x_30, 0x_70, 0x_56, 0x_A9, 0x_25,
		0x_E8, 0x_7D, 0x_68, 0x_88, 0x_96, 0x_C2, 0x_D7, 0x_7B, 0x_AC, 0x_9F, 0x_4A, 0x_8F, 0x_B5,
	];

	helper(S, BASE, 692_410);
}
// endregion
// region: s_has_4_134_324_in_base_193
#[test]
fn s_has_4_134_324_in_base_193() {
	const S: &[u8] = &[
		0x_42, 0x_45, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_F9, 0x_A1, 0x_65, 0x_E7, 0x_63, 0x_C7, 0x_4E, 0x_BB, 0x_B6, 0x_AA, 0x_DD, 0x_DE, 0x_7B, 0x_35,
		0x_FA, 0x_F8, 0x_73, 0x_1A, 0x_FB, 0x_EF, 0x_68, 0x_46, 0x_62, 0x_86, 0x_8B, 0x_B8, 0x_CD, 0x_57, 0x_90,
		0x_DC, 0x_69, 0x_A9, 0x_F1, 0x_0E, 0x_E6, 0x_3A, 0x_3B, 0x_21, 0x_A0, 0x_11, 0x_03, 0x_67, 0x_5B, 0x_33,
		0x_08, 0x_4D, 0x_49, 0x_4B, 0x_A4, 0x_BD, 0x_44, 0x_F4, 0x_A2, 0x_04, 0x_DA, 0x_8F, 0x_CE, 0x_B0, 0x_9C,
		0x_97, 0x_85, 0x_3F, 0x_93, 0x_27, 0x_36, 0x_50, 0x_DB, 0x_EC, 0x_70, 0x_1C, 0x_10, 0x_29, 0x_3C, 0x_B5,
		0x_F5, 0x_F0, 0x_54, 0x_95, 0x_82, 0x_DF, 0x_D4, 0x_AB, 0x_78, 0x_BE, 0x_47, 0x_94, 0x_40, 0x_3E, 0x_66,
		0x_CF, 0x_7E, 0x_76, 0x_75, 0x_89, 0x_C9, 0x_23, 0x_9E, 0x_37, 0x_07, 0x_87, 0x_D1, 0x_2F, 0x_E2, 0x_2C,
		0x_5F, 0x_30, 0x_12, 0x_24, 0x_1B, 0x_42, 0x_22, 0x_BA, 0x_C6, 0x_92, 0x_51, 0x_F3, 0x_D0, 0x_C5, 0x_91,
		0x_0F, 0x_D3, 0x_55, 0x_61, 0x_D7, 0x_AC, 0x_53, 0x_96, 0x_41, 0x_99, 0x_ED, 0x_56, 0x_1D, 0x_AD, 0x_72,
		0x_A6, 0x_1F, 0x_83, 0x_A5, 0x_9A, 0x_9D, 0x_C8, 0x_5A, 0x_81, 0x_13, 0x_C2, 0x_80, 0x_F7, 0x_C1, 0x_6B,
		0x_BF, 0x_E5, 0x_59, 0x_32, 0x_FC, 0x_AE, 0x_98, 0x_FE, 0x_16, 0x_88, 0x_E1, 0x_4C, 0x_19, 0x_52, 0x_34,
		0x_4F, 0x_25, 0x_B3, 0x_C4, 0x_7F, 0x_EE, 0x_A8, 0x_39, 0x_2A, 0x_FD, 0x_5E, 0x_8A, 0x_26, 0x_01, 0x_8C,
		0x_C3, 0x_EA, 0x_A7, 0x_9B, 0x_D6, 0x_06, 0x_43, 0x_F2, 0x_9F, 0x_A3, 0x_5C, 0x_45, 0x_64,
	];

	helper(S, BASE, 4_134_324);
}
// endregion
// region: s_has_89_240_734_in_base_193
#[test]
fn s_has_89_240_734_in_base_193() {
	const S: &[u8] = &[
		0x_7A, 0x_27, 0x_4E, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_2C, 0x_F9, 0x_50, 0x_1F, 0x_6B, 0x_BE, 0x_3E, 0x_9F, 0x_3A, 0x_41, 0x_C5, 0x_7A, 0x_40, 0x_72,
		0x_6C, 0x_73, 0x_22, 0x_62, 0x_83, 0x_47, 0x_69, 0x_93, 0x_36, 0x_E9, 0x_75, 0x_70, 0x_B3, 0x_F8, 0x_39,
		0x_8D, 0x_43, 0x_E0, 0x_5B, 0x_F3, 0x_B0, 0x_4D, 0x_F4, 0x_33, 0x_15, 0x_D2, 0x_FE, 0x_56, 0x_B7, 0x_99,
		0x_DF, 0x_59, 0x_78, 0x_C0, 0x_A3, 0x_8E, 0x_86, 0x_5D, 0x_94, 0x_1A, 0x_F6, 0x_C8, 0x_CC, 0x_AB, 0x_7D,
		0x_C7, 0x_46, 0x_34, 0x_7B, 0x_95, 0x_7C, 0x_6E, 0x_2F, 0x_9B, 0x_DE, 0x_BD, 0x_8C, 0x_57, 0x_97, 0x_23,
		0x_A5, 0x_77, 0x_BC, 0x_BA, 0x_27, 0x_EE, 0x_10, 0x_35, 0x_BF, 0x_85, 0x_FB, 0x_9C, 0x_EB, 0x_E4, 0x_DA,
		0x_42, 0x_CA, 0x_8A, 0x_98, 0x_D4, 0x_1E, 0x_AE, 0x_4B, 0x_03, 0x_74, 0x_7E, 0x_B8, 0x_4F, 0x_E1, 0x_ED,
		0x_1B, 0x_DD, 0x_11, 0x_D9, 0x_FF, 0x_B6, 0x_F1, 0x_90, 0x_65, 0x_4A, 0x_DB, 0x_21, 0x_EF, 0x_88, 0x_7F,
		0x_A6, 0x_18, 0x_5E, 0x_D5, 0x_CF, 0x_B1, 0x_32, 0x_13, 0x_4C, 0x_D0, 0x_24, 0x_8B, 0x_66, 0x_AD, 0x_82,
		0x_5F, 0x_EA, 0x_F5, 0x_1C, 0x_6A, 0x_C6, 0x_C3, 0x_5C, 0x_49, 0x_3D, 0x_CD, 0x_91, 0x_48, 0x_55, 0x_53,
		0x_F2, 0x_2A, 0x_4E, 0x_16, 0x_89, 0x_51, 0x_E5, 0x_E8, 0x_17, 0x_9E, 0x_87, 0x_68, 0x_3B, 0x_04, 0x_EC,
		0x_31, 0x_05, 0x_CE, 0x_FA, 0x_6D, 0x_08, 0x_C1, 0x_52, 0x_2E, 0x_45, 0x_1D, 0x_A9, 0x_61, 0x_84, 0x_A8,
		0x_9A, 0x_E2, 0x_19, 0x_B5, 0x_63, 0x_06, 0x_01, 0x_CB, 0x_0E, 0x_71, 0x_BB, 0x_C4, 0x_D3,
	];

	helper(S, BASE, 89_240_734);
}
// endregion
// region: s_has_906_579_705_in_base_193
#[test]
fn s_has_906_579_705_in_base_193() {
	const S: &[u8] = &[
		0x_15, 0x_D3, 0x_6E, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_D2, 0x_8F, 0x_EF, 0x_A7, 0x_84, 0x_08, 0x_8A, 0x_1D, 0x_71, 0x_77, 0x_51, 0x_89, 0x_18, 0x_C3,
		0x_C0, 0x_1E, 0x_A4, 0x_54, 0x_2C, 0x_D3, 0x_38, 0x_E5, 0x_14, 0x_7F, 0x_C2, 0x_9C, 0x_4E, 0x_99, 0x_2E,
		0x_06, 0x_46, 0x_FA, 0x_B1, 0x_80, 0x_E3, 0x_11, 0x_4F, 0x_D5, 0x_40, 0x_C6, 0x_F6, 0x_E6, 0x_E0, 0x_72,
		0x_73, 0x_76, 0x_50, 0x_9F, 0x_A5, 0x_1B, 0x_6F, 0x_7B, 0x_55, 0x_B3, 0x_EB, 0x_C9, 0x_9D, 0x_DB, 0x_B6,
		0x_58, 0x_23, 0x_94, 0x_8E, 0x_B2, 0x_A8, 0x_F4, 0x_5B, 0x_C4, 0x_05, 0x_6E, 0x_C1, 0x_1C, 0x_CA, 0x_CF,
		0x_04, 0x_2A, 0x_98, 0x_B0, 0x_A1, 0x_26, 0x_F3, 0x_D8, 0x_AF, 0x_29, 0x_7D, 0x_16, 0x_5F, 0x_31, 0x_3A,
		0x_57, 0x_8D, 0x_AC, 0x_2F, 0x_3D, 0x_95, 0x_AE, 0x_7A, 0x_13, 0x_E7, 0x_3C, 0x_A3, 0x_C5, 0x_7E, 0x_82,
		0x_CD, 0x_AD, 0x_60, 0x_64, 0x_FD, 0x_E9, 0x_75, 0x_1A, 0x_28, 0x_BC, 0x_BB, 0x_5A, 0x_C8, 0x_FE, 0x_EC,
		0x_78, 0x_92, 0x_F2, 0x_0E, 0x_41, 0x_83, 0x_15, 0x_79, 0x_85, 0x_B5, 0x_34, 0x_A2, 0x_52, 0x_EE, 0x_5D,
		0x_63, 0x_A6, 0x_62, 0x_96, 0x_68, 0x_AA, 0x_9A, 0x_D4, 0x_97, 0x_91, 0x_BE, 0x_66, 0x_F1, 0x_35, 0x_25,
		0x_D0, 0x_3F, 0x_0F, 0x_37, 0x_EA, 0x_4D, 0x_DD, 0x_67, 0x_9E, 0x_88, 0x_45, 0x_A0, 0x_48, 0x_42, 0x_22,
		0x_DC, 0x_F9, 0x_81, 0x_49, 0x_E1, 0x_4C, 0x_27, 0x_E8, 0x_A9, 0x_12, 0x_5C, 0x_6B, 0x_86, 0x_87, 0x_33,
		0x_59, 0x_3E, 0x_4A, 0x_CE, 0x_70, 0x_47, 0x_DE, 0x_BA, 0x_F7, 0x_10, 0x_6C, 0x_53, 0x_32,
	];

	helper(S, BASE, 906_579_705);
}
// endregion
// region: s_has_5_in_base_247
#[test]
fn s_has_5_in_base_247() {
	const S: &[u8] = &[0x_69];
	const BASE: &[u8] = &[
		0x_B0, 0x_01, 0x_DC, 0x_34, 0x_78, 0x_69, 0x_FB, 0x_1E, 0x_80, 0x_BF, 0x_A9, 0x_D8, 0x_43, 0x_6E, 0x_B5,
		0x_89, 0x_BE, 0x_DF, 0x_81, 0x_24, 0x_06, 0x_33, 0x_1F, 0x_F0, 0x_AE, 0x_AA, 0x_4E, 0x_93, 0x_96, 0x_FE,
		0x_68, 0x_58, 0x_9B, 0x_26, 0x_B3, 0x_C0, 0x_7D, 0x_EB, 0x_1A, 0x_3E, 0x_1B, 0x_8E, 0x_16, 0x_56, 0x_F2,
		0x_1D, 0x_DA, 0x_7B, 0x_5E, 0x_FD, 0x_28, 0x_19, 0x_40, 0x_9E, 0x_21, 0x_08, 0x_91, 0x_6A, 0x_AB, 0x_17,
		0x_03, 0x_83, 0x_48, 0x_04, 0x_61, 0x_22, 0x_57, 0x_3F, 0x_86, 0x_A2, 0x_44, 0x_74, 0x_70, 0x_47, 0x_63,
		0x_A3, 0x_E9, 0x_EF, 0x_05, 0x_D1, 0x_60, 0x_53, 0x_A1, 0x_5F, 0x_11, 0x_46, 0x_30, 0x_6D, 0x_97, 0x_7A,
		0x_C4, 0x_C5, 0x_C3, 0x_D6, 0x_18, 0x_3C, 0x_51, 0x_15, 0x_92, 0x_F1, 0x_E8, 0x_E0, 0x_E7, 0x_8F, 0x_7C,
		0x_07, 0x_D3, 0x_3A, 0x_45, 0x_41, 0x_AC, 0x_E3, 0x_5D, 0x_49, 0x_25, 0x_BB, 0x_31, 0x_90, 0x_27, 0x_59,
		0x_10, 0x_62, 0x_66, 0x_98, 0x_77, 0x_C6, 0x_12, 0x_8B, 0x_BD, 0x_FA, 0x_52, 0x_50, 0x_B1, 0x_C1, 0x_23,
		0x_B2, 0x_D9, 0x_9A, 0x_E1, 0x_B4, 0x_A4, 0x_CA, 0x_CC, 0x_4D, 0x_5B, 0x_64, 0x_4B, 0x_C2, 0x_67, 0x_D7,
		0x_87, 0x_D5, 0x_AD, 0x_2E, 0x_D0, 0x_F7, 0x_32, 0x_9D, 0x_C8, 0x_3B, 0x_3D, 0x_E2, 0x_8A, 0x_8C, 0x_38,
		0x_4C, 0x_54, 0x_B7, 0x_79, 0x_2F, 0x_7E, 0x_84, 0x_85, 0x_39, 0x_5C, 0x_6F, 0x_0F, 0x_A0, 0x_B8, 0x_37,
		0x_2A, 0x_AF, 0x_D2, 0x_D4, 0x_DD, 0x_13, 0x_B6, 0x_4F, 0x_F3, 0x_9F, 0x_A5, 0x_94, 0x_88, 0x_72, 0x_DE,
		0x_8D, 0x_2C, 0x_6C, 0x_E4, 0x_E6, 0x_C9, 0x_5A, 0x_FC, 0x_55, 0x_36, 0x_C7, 0x_E5, 0x_A8, 0x_ED, 0x_BA,
		0x_6B, 0x_F4, 0x_71, 0x_02, 0x_F8, 0x_14, 0x_CB, 0x_1C, 0x_7F, 0x_CD, 0x_9C, 0x_4A, 0x_65, 0x_F5, 0x_A7,
		0x_35, 0x_FF, 0x_82, 0x_B9, 0x_73, 0x_95, 0x_CE, 0x_76, 0x_EC, 0x_CF, 0x_EA, 0x_0E, 0x_29, 0x_A6, 0x_42,
		0x_75, 0x_99, 0x_BC, 0x_EE, 0x_F9, 0x_F6, 0x_DB,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_37_in_base_247
#[test]
fn s_has_37_in_base_247() {
	const S: &[u8] = &[0x_66];
	const BASE: &[u8] = &[
		0x_85, 0x_05, 0x_31, 0x_1F, 0x_68, 0x_BF, 0x_B9, 0x_03, 0x_BC, 0x_E8, 0x_D7, 0x_EE, 0x_F8, 0x_73, 0x_8E,
		0x_B4, 0x_95, 0x_C5, 0x_F5, 0x_28, 0x_41, 0x_E4, 0x_24, 0x_11, 0x_D4, 0x_19, 0x_86, 0x_6D, 0x_3D, 0x_8F,
		0x_8C, 0x_90, 0x_38, 0x_CF, 0x_B0, 0x_98, 0x_29, 0x_66, 0x_1B, 0x_2F, 0x_2C, 0x_7C, 0x_F4, 0x_A7, 0x_B6,
		0x_D0, 0x_55, 0x_BB, 0x_59, 0x_08, 0x_5A, 0x_3B, 0x_E2, 0x_9B, 0x_06, 0x_BE, 0x_1C, 0x_DE, 0x_DF, 0x_70,
		0x_DA, 0x_87, 0x_56, 0x_94, 0x_47, 0x_88, 0x_7B, 0x_CB, 0x_9C, 0x_FD, 0x_1A, 0x_C2, 0x_62, 0x_97, 0x_DD,
		0x_49, 0x_4E, 0x_46, 0x_77, 0x_A6, 0x_5B, 0x_A1, 0x_E0, 0x_4B, 0x_D8, 0x_D5, 0x_CD, 0x_63, 0x_6B, 0x_AF,
		0x_17, 0x_3C, 0x_FA, 0x_3E, 0x_69, 0x_40, 0x_84, 0x_58, 0x_15, 0x_EB, 0x_EC, 0x_9A, 0x_35, 0x_96, 0x_C1,
		0x_8D, 0x_1E, 0x_64, 0x_4A, 0x_D1, 0x_30, 0x_4F, 0x_D2, 0x_9D, 0x_CC, 0x_04, 0x_A8, 0x_13, 0x_61, 0x_AC,
		0x_F7, 0x_7F, 0x_A4, 0x_6F, 0x_AE, 0x_ED, 0x_E3, 0x_B5, 0x_9E, 0x_D3, 0x_FB, 0x_C0, 0x_54, 0x_32, 0x_A5,
		0x_F2, 0x_23, 0x_25, 0x_74, 0x_91, 0x_78, 0x_E9, 0x_FC, 0x_7E, 0x_D6, 0x_CE, 0x_AD, 0x_42, 0x_52, 0x_E6,
		0x_A9, 0x_B7, 0x_57, 0x_2A, 0x_B2, 0x_FF, 0x_7A, 0x_16, 0x_44, 0x_C9, 0x_6A, 0x_36, 0x_7D, 0x_71, 0x_76,
		0x_5C, 0x_C8, 0x_93, 0x_21, 0x_27, 0x_1D, 0x_3F, 0x_60, 0x_C4, 0x_BD, 0x_D9, 0x_4C, 0x_F1, 0x_22, 0x_A3,
		0x_89, 0x_DC, 0x_39, 0x_F9, 0x_5D, 0x_92, 0x_C3, 0x_0E, 0x_5F, 0x_81, 0x_82, 0x_F0, 0x_C7, 0x_E5, 0x_83,
		0x_45, 0x_F6, 0x_9F, 0x_26, 0x_B1, 0x_6E, 0x_10, 0x_E1, 0x_0F, 0x_CA, 0x_EA, 0x_EF, 0x_79, 0x_14, 0x_B3,
		0x_AA, 0x_67, 0x_75, 0x_E7, 0x_6C, 0x_43, 0x_02, 0x_34, 0x_A0, 0x_01, 0x_AB, 0x_F3, 0x_18, 0x_65, 0x_12,
		0x_33, 0x_99, 0x_53, 0x_B8, 0x_8A, 0x_C6, 0x_4D, 0x_8B, 0x_BA, 0x_5E, 0x_3A, 0x_37, 0x_2E, 0x_DB, 0x_50,
		0x_A2, 0x_07, 0x_72, 0x_51, 0x_48, 0x_FE, 0x_80,
	];

	helper(S, BASE, 37);
}
// endregion
// region: s_has_343_in_base_247
#[test]
fn s_has_343_in_base_247() {
	const S: &[u8] = &[
		0x_67, 0x_99,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_67, 0x_DB, 0x_D5, 0x_5B, 0x_90, 0x_2C, 0x_D9, 0x_C0, 0x_57, 0x_24, 0x_B6, 0x_AC, 0x_3A, 0x_A5,
		0x_5C, 0x_E9, 0x_15, 0x_D4, 0x_A2, 0x_63, 0x_B5, 0x_36, 0x_D8, 0x_55, 0x_A8, 0x_1D, 0x_E1, 0x_C7, 0x_C4,
		0x_17, 0x_B9, 0x_FE, 0x_A4, 0x_97, 0x_C3, 0x_40, 0x_CD, 0x_BA, 0x_84, 0x_69, 0x_DF, 0x_88, 0x_E4, 0x_FC,
		0x_6E, 0x_F5, 0x_4A, 0x_30, 0x_14, 0x_CF, 0x_3E, 0x_44, 0x_DD, 0x_D6, 0x_8F, 0x_89, 0x_AF, 0x_E3, 0x_77,
		0x_75, 0x_27, 0x_D3, 0x_56, 0x_26, 0x_C9, 0x_DA, 0x_18, 0x_83, 0x_5A, 0x_6C, 0x_25, 0x_BC, 0x_82, 0x_D0,
		0x_7D, 0x_B1, 0x_68, 0x_49, 0x_42, 0x_76, 0x_72, 0x_31, 0x_EA, 0x_28, 0x_AD, 0x_2A, 0x_52, 0x_5D, 0x_BE,
		0x_F3, 0x_A6, 0x_BB, 0x_A9, 0x_A7, 0x_58, 0x_99, 0x_F9, 0x_61, 0x_DE, 0x_65, 0x_8E, 0x_EC, 0x_81, 0x_13,
		0x_3B, 0x_AA, 0x_80, 0x_23, 0x_FD, 0x_4E, 0x_F8, 0x_EF, 0x_39, 0x_D2, 0x_B7, 0x_60, 0x_E8, 0x_E7, 0x_B8,
		0x_2F, 0x_AE, 0x_CB, 0x_1A, 0x_C6, 0x_1F, 0x_1C, 0x_A1, 0x_F4, 0x_6B, 0x_93, 0x_04, 0x_BF, 0x_06, 0x_48,
		0x_C2, 0x_2E, 0x_A0, 0x_3D, 0x_59, 0x_D1, 0x_7C, 0x_64, 0x_C1, 0x_9D, 0x_FB, 0x_9E, 0x_3F, 0x_11, 0x_38,
		0x_F2, 0x_C5, 0x_D7, 0x_35, 0x_F0, 0x_BD, 0x_CE, 0x_CA, 0x_9C, 0x_37, 0x_46, 0x_34, 0x_45, 0x_7A, 0x_0E,
		0x_21, 0x_50, 0x_5E, 0x_DC, 0x_66, 0x_08, 0x_E0, 0x_6F, 0x_E5, 0x_62, 0x_70, 0x_79, 0x_9A, 0x_8A, 0x_F1,
		0x_22, 0x_4F, 0x_B2, 0x_F6, 0x_47, 0x_96, 0x_8B, 0x_EE, 0x_EB, 0x_86, 0x_98, 0x_A3, 0x_6D, 0x_7F, 0x_4C,
		0x_E2, 0x_CC, 0x_41, 0x_B0, 0x_6A, 0x_F7, 0x_53, 0x_12, 0x_8C, 0x_ED, 0x_7E, 0x_87, 0x_73, 0x_78, 0x_95,
		0x_19, 0x_29, 0x_43, 0x_02, 0x_4D, 0x_1E, 0x_FF, 0x_0F, 0x_4B, 0x_9F, 0x_7B, 0x_91, 0x_85, 0x_10, 0x_E6,
		0x_51, 0x_71, 0x_07, 0x_94, 0x_B4, 0x_8D, 0x_C8, 0x_92, 0x_AB, 0x_33, 0x_1B, 0x_5F, 0x_03, 0x_B3, 0x_16,
		0x_9B, 0x_05, 0x_FA, 0x_74, 0x_32, 0x_54, 0x_3C,
	];

	helper(S, BASE, 343);
}
// endregion
// region: s_has_8_068_in_base_247
#[test]
fn s_has_8_068_in_base_247() {
	const S: &[u8] = &[
		0x_5C, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_2F, 0x_55, 0x_34, 0x_DF, 0x_CC, 0x_E5, 0x_F8, 0x_FE, 0x_1A, 0x_4D, 0x_33, 0x_C6, 0x_81, 0x_89,
		0x_A0, 0x_D6, 0x_EC, 0x_59, 0x_31, 0x_7D, 0x_DA, 0x_7E, 0x_8C, 0x_2E, 0x_28, 0x_3F, 0x_98, 0x_5D, 0x_80,
		0x_B6, 0x_99, 0x_5C, 0x_40, 0x_27, 0x_4A, 0x_F7, 0x_84, 0x_6C, 0x_46, 0x_7F, 0x_11, 0x_D9, 0x_F6, 0x_47,
		0x_1D, 0x_70, 0x_9D, 0x_9F, 0x_22, 0x_56, 0x_C5, 0x_92, 0x_D4, 0x_9A, 0x_8A, 0x_A8, 0x_76, 0x_85, 0x_24,
		0x_69, 0x_DD, 0x_2A, 0x_07, 0x_F9, 0x_41, 0x_E7, 0x_44, 0x_01, 0x_A2, 0x_35, 0x_ED, 0x_90, 0x_63, 0x_9C,
		0x_CB, 0x_D8, 0x_2C, 0x_6E, 0x_8B, 0x_B8, 0x_3A, 0x_4C, 0x_EF, 0x_A4, 0x_AB, 0x_3E, 0x_FD, 0x_60, 0x_FA,
		0x_AE, 0x_3D, 0x_82, 0x_C1, 0x_DE, 0x_DC, 0x_65, 0x_61, 0x_F1, 0x_14, 0x_A1, 0x_FB, 0x_08, 0x_7A, 0x_91,
		0x_64, 0x_F4, 0x_D3, 0x_E6, 0x_52, 0x_42, 0x_DB, 0x_21, 0x_E8, 0x_1B, 0x_18, 0x_BD, 0x_BA, 0x_3B, 0x_54,
		0x_D2, 0x_15, 0x_BE, 0x_68, 0x_39, 0x_CA, 0x_C0, 0x_8D, 0x_A6, 0x_F5, 0x_83, 0x_8E, 0x_D7, 0x_93, 0x_AD,
		0x_96, 0x_37, 0x_72, 0x_C4, 0x_C2, 0x_C7, 0x_57, 0x_B0, 0x_94, 0x_95, 0x_0F, 0x_48, 0x_10, 0x_BF, 0x_E9,
		0x_C3, 0x_B9, 0x_43, 0x_9B, 0x_E3, 0x_5F, 0x_CD, 0x_7B, 0x_62, 0x_EB, 0x_53, 0x_F2, 0x_29, 0x_88, 0x_FF,
		0x_58, 0x_45, 0x_5A, 0x_A3, 0x_73, 0x_E2, 0x_87, 0x_26, 0x_17, 0x_AA, 0x_D0, 0x_E4, 0x_6D, 0x_4B, 0x_23,
		0x_04, 0x_13, 0x_5E, 0x_CE, 0x_16, 0x_7C, 0x_B7, 0x_0E, 0x_FC, 0x_BC, 0x_B1, 0x_F0, 0x_19, 0x_4E, 0x_B5,
		0x_AC, 0x_38, 0x_A9, 0x_97, 0x_A5, 0x_77, 0x_02, 0x_E1, 0x_EE, 0x_CF, 0x_A7, 0x_03, 0x_E0, 0x_05, 0x_D1,
		0x_36, 0x_9E, 0x_F3, 0x_51, 0x_50, 0x_75, 0x_25, 0x_66, 0x_B2, 0x_B3, 0x_1F, 0x_12, 0x_32, 0x_71, 0x_BB,
		0x_30, 0x_3C, 0x_AF, 0x_6A, 0x_79, 0x_49, 0x_C8, 0x_4F, 0x_D5, 0x_6B, 0x_8F, 0x_06, 0x_EA, 0x_67, 0x_86,
		0x_5B, 0x_74, 0x_1E, 0x_78, 0x_C9, 0x_1C, 0x_6F,
	];

	helper(S, BASE, 8_068);
}
// endregion
// region: s_has_11_904_in_base_247
#[test]
fn s_has_11_904_in_base_247() {
	const S: &[u8] = &[
		0x_0E, 0x_0E,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_75, 0x_C7, 0x_2C, 0x_78, 0x_63, 0x_BA, 0x_E5, 0x_6A, 0x_72, 0x_39, 0x_84, 0x_FE, 0x_14, 0x_19,
		0x_73, 0x_71, 0x_A9, 0x_54, 0x_60, 0x_04, 0x_42, 0x_DF, 0x_08, 0x_11, 0x_3A, 0x_D3, 0x_F2, 0x_4C, 0x_A1,
		0x_18, 0x_6C, 0x_C2, 0x_76, 0x_34, 0x_DD, 0x_E8, 0x_A2, 0x_64, 0x_DC, 0x_BB, 0x_AB, 0x_81, 0x_51, 0x_41,
		0x_B8, 0x_4D, 0x_50, 0x_0E, 0x_B4, 0x_D2, 0x_C0, 0x_AF, 0x_D4, 0x_40, 0x_A3, 0x_FD, 0x_B3, 0x_AE, 0x_CF,
		0x_77, 0x_AA, 0x_8D, 0x_EC, 0x_03, 0x_2E, 0x_DB, 0x_88, 0x_FB, 0x_13, 0x_12, 0x_52, 0x_1E, 0x_99, 0x_5F,
		0x_AD, 0x_9B, 0x_8B, 0x_C4, 0x_F8, 0x_D7, 0x_BF, 0x_74, 0x_A6, 0x_7B, 0x_56, 0x_16, 0x_DE, 0x_3B, 0x_67,
		0x_07, 0x_57, 0x_EE, 0x_D1, 0x_94, 0x_24, 0x_36, 0x_3D, 0x_F3, 0x_33, 0x_7F, 0x_68, 0x_CD, 0x_A7, 0x_1F,
		0x_E0, 0x_32, 0x_31, 0x_93, 0x_55, 0x_FC, 0x_C1, 0x_10, 0x_25, 0x_F9, 0x_EA, 0x_F6, 0x_98, 0x_69, 0x_2F,
		0x_48, 0x_96, 0x_C5, 0x_83, 0x_B7, 0x_ED, 0x_89, 0x_CA, 0x_E7, 0x_49, 0x_9C, 0x_6B, 0x_3C, 0x_EF, 0x_5B,
		0x_8C, 0x_AC, 0x_79, 0x_53, 0x_CB, 0x_66, 0x_86, 0x_7E, 0x_C9, 0x_C3, 0x_B9, 0x_44, 0x_61, 0x_0F, 0x_5E,
		0x_1B, 0x_92, 0x_1C, 0x_9A, 0x_8E, 0x_17, 0x_BD, 0x_FA, 0x_BE, 0x_3E, 0x_E6, 0x_B2, 0x_BC, 0x_DA, 0x_4B,
		0x_82, 0x_F4, 0x_2A, 0x_70, 0x_21, 0x_6E, 0x_3F, 0x_65, 0x_58, 0x_E2, 0x_06, 0x_4A, 0x_A4, 0x_8F, 0x_23,
		0x_1A, 0x_87, 0x_1D, 0x_A0, 0x_9E, 0x_01, 0x_95, 0x_43, 0x_D8, 0x_A5, 0x_6F, 0x_E9, 0x_B1, 0x_9F, 0x_26,
		0x_85, 0x_6D, 0x_46, 0x_91, 0x_E4, 0x_A8, 0x_37, 0x_5D, 0x_B5, 0x_22, 0x_5C, 0x_C8, 0x_02, 0x_90, 0x_E1,
		0x_EB, 0x_30, 0x_28, 0x_59, 0x_F0, 0x_4F, 0x_8A, 0x_5A, 0x_7D, 0x_9D, 0x_80, 0x_C6, 0x_F5, 0x_05, 0x_47,
		0x_29, 0x_CC, 0x_D6, 0x_D5, 0x_62, 0x_97, 0x_FF, 0x_15, 0x_7A, 0x_35, 0x_B0, 0x_D9, 0x_27, 0x_F7, 0x_4E,
		0x_B6, 0x_D0, 0x_CE, 0x_7C, 0x_F1, 0x_E3, 0x_45,
	];

	helper(S, BASE, 11_904);
}
// endregion
// region: s_has_463_632_in_base_247
#[test]
fn s_has_463_632_in_base_247() {
	const S: &[u8] = &[
		0x_3E, 0x_DC, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_A2, 0x_4E, 0x_7B, 0x_A3, 0x_51, 0x_C7, 0x_3E, 0x_32, 0x_71, 0x_F0, 0x_A9, 0x_9C, 0x_B8, 0x_A6,
		0x_88, 0x_31, 0x_E0, 0x_E4, 0x_0E, 0x_B1, 0x_7F, 0x_B5, 0x_C3, 0x_57, 0x_27, 0x_9D, 0x_5E, 0x_EB, 0x_97,
		0x_48, 0x_81, 0x_04, 0x_63, 0x_60, 0x_8F, 0x_77, 0x_65, 0x_D5, 0x_2C, 0x_49, 0x_B9, 0x_C2, 0x_80, 0x_76,
		0x_A1, 0x_0F, 0x_70, 0x_06, 0x_75, 0x_89, 0x_EC, 0x_18, 0x_A8, 0x_8A, 0x_62, 0x_17, 0x_68, 0x_6C, 0x_10,
		0x_41, 0x_C6, 0x_B7, 0x_E5, 0x_3B, 0x_D2, 0x_91, 0x_1A, 0x_43, 0x_CA, 0x_AD, 0x_02, 0x_6D, 0x_B6, 0x_DA,
		0x_3C, 0x_F3, 0x_E9, 0x_1D, 0x_50, 0x_21, 0x_8E, 0x_2E, 0x_1B, 0x_03, 0x_15, 0x_33, 0x_37, 0x_E1, 0x_3F,
		0x_56, 0x_C4, 0x_C1, 0x_7D, 0x_A5, 0x_CF, 0x_92, 0x_FC, 0x_72, 0x_1E, 0x_D9, 0x_45, 0x_28, 0x_F6, 0x_C8,
		0x_95, 0x_AA, 0x_CE, 0x_11, 0x_3D, 0x_B2, 0x_1F, 0x_40, 0x_F4, 0x_EE, 0x_2A, 0x_BD, 0x_7E, 0x_F5, 0x_58,
		0x_4D, 0x_94, 0x_67, 0x_90, 0x_26, 0x_83, 0x_BB, 0x_39, 0x_38, 0x_9B, 0x_07, 0x_9A, 0x_BF, 0x_CD, 0x_87,
		0x_46, 0x_55, 0x_D8, 0x_AF, 0x_93, 0x_CB, 0x_4B, 0x_05, 0x_2F, 0x_E8, 0x_F9, 0x_D3, 0x_FD, 0x_DC, 0x_54,
		0x_AE, 0x_ED, 0x_5F, 0x_5C, 0x_EA, 0x_DD, 0x_69, 0x_E2, 0x_36, 0x_12, 0x_19, 0x_64, 0x_08, 0x_B3, 0x_F8,
		0x_F1, 0x_73, 0x_3A, 0x_BC, 0x_D0, 0x_24, 0x_82, 0x_FE, 0x_FB, 0x_84, 0x_4C, 0x_D7, 0x_1C, 0x_86, 0x_34,
		0x_7A, 0x_CC, 0x_C5, 0x_6F, 0x_4A, 0x_AC, 0x_99, 0x_9E, 0x_61, 0x_29, 0x_EF, 0x_13, 0x_D4, 0x_9F, 0x_8C,
		0x_74, 0x_E3, 0x_A7, 0x_5D, 0x_A0, 0x_01, 0x_7C, 0x_D6, 0x_79, 0x_14, 0x_DE, 0x_6B, 0x_FA, 0x_B4, 0x_C0,
		0x_85, 0x_D1, 0x_78, 0x_35, 0x_A4, 0x_F2, 0x_6E, 0x_E7, 0x_52, 0x_22, 0x_E6, 0x_5B, 0x_16, 0x_96, 0x_F7,
		0x_30, 0x_C9, 0x_25, 0x_8D, 0x_42, 0x_AB, 0x_5A, 0x_23, 0x_59, 0x_FF, 0x_BA, 0x_DB, 0x_44, 0x_47, 0x_6A,
		0x_DF, 0x_98, 0x_B0, 0x_4F, 0x_53, 0x_8B, 0x_BE,
	];

	helper(S, BASE, 463_632);
}
// endregion
// region: s_has_5_408_839_in_base_247
#[test]
fn s_has_5_408_839_in_base_247() {
	const S: &[u8] = &[
		0x_4B, 0x_B6, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_C5, 0x_60, 0x_CE, 0x_D9, 0x_61, 0x_7A, 0x_D4, 0x_AD, 0x_7D, 0x_F3, 0x_C0, 0x_17, 0x_86, 0x_05,
		0x_1F, 0x_3D, 0x_63, 0x_CF, 0x_6F, 0x_28, 0x_A7, 0x_81, 0x_9A, 0x_43, 0x_D6, 0x_92, 0x_4D, 0x_C3, 0x_D8,
		0x_D0, 0x_3F, 0x_94, 0x_2E, 0x_A0, 0x_B0, 0x_65, 0x_96, 0x_DF, 0x_BA, 0x_01, 0x_06, 0x_57, 0x_14, 0x_BD,
		0x_8F, 0x_FE, 0x_EB, 0x_10, 0x_44, 0x_97, 0x_5E, 0x_BC, 0x_D5, 0x_68, 0x_F0, 0x_8A, 0x_2A, 0x_E1, 0x_8C,
		0x_AE, 0x_19, 0x_74, 0x_4F, 0x_B5, 0x_E9, 0x_1A, 0x_32, 0x_66, 0x_EE, 0x_53, 0x_87, 0x_3C, 0x_AC, 0x_41,
		0x_80, 0x_A2, 0x_DC, 0x_ED, 0x_3B, 0x_18, 0x_F1, 0x_35, 0x_1E, 0x_C8, 0x_D7, 0x_89, 0x_A5, 0x_4B, 0x_5D,
		0x_31, 0x_39, 0x_85, 0x_DA, 0x_6A, 0x_CB, 0x_7C, 0x_83, 0x_64, 0x_B9, 0x_79, 0x_4E, 0x_23, 0x_59, 0x_C9,
		0x_99, 0x_03, 0x_7F, 0x_90, 0x_45, 0x_78, 0x_55, 0x_2C, 0x_BF, 0x_42, 0x_DB, 0x_21, 0x_A6, 0x_95, 0x_26,
		0x_D3, 0x_CC, 0x_1B, 0x_A4, 0x_82, 0x_08, 0x_29, 0x_F5, 0x_C2, 0x_E2, 0x_F6, 0x_7E, 0x_CD, 0x_4C, 0x_E5,
		0x_E7, 0x_34, 0x_B2, 0x_93, 0x_50, 0x_84, 0x_6E, 0x_D2, 0x_6D, 0x_4A, 0x_8B, 0x_B3, 0x_B7, 0x_9F, 0x_52,
		0x_30, 0x_E6, 0x_37, 0x_9B, 0x_70, 0x_6B, 0x_8E, 0x_9E, 0x_C1, 0x_5A, 0x_11, 0x_2F, 0x_B6, 0x_49, 0x_E4,
		0x_F2, 0x_9C, 0x_27, 0x_48, 0x_FA, 0x_F7, 0x_AB, 0x_EA, 0x_51, 0x_04, 0x_91, 0x_02, 0x_25, 0x_38, 0x_CA,
		0x_9D, 0x_B4, 0x_F8, 0x_1C, 0x_A1, 0x_71, 0x_D1, 0x_22, 0x_EF, 0x_AA, 0x_A3, 0x_C4, 0x_67, 0x_BB, 0x_F4,
		0x_24, 0x_0E, 0x_46, 0x_7B, 0x_A8, 0x_EC, 0x_33, 0x_3A, 0x_5B, 0x_72, 0x_FD, 0x_0F, 0x_56, 0x_77, 0x_A9,
		0x_F9, 0x_58, 0x_AF, 0x_FC, 0x_15, 0x_69, 0x_FB, 0x_98, 0x_DD, 0x_12, 0x_E8, 0x_1D, 0x_62, 0x_B8, 0x_5C,
		0x_E3, 0x_B1, 0x_88, 0x_5F, 0x_07, 0x_FF, 0x_40, 0x_47, 0x_DE, 0x_E0, 0x_6C, 0x_75, 0x_73, 0x_16, 0x_13,
		0x_3E, 0x_BE, 0x_8D, 0x_76, 0x_C7, 0x_36, 0x_C6,
	];

	helper(S, BASE, 5_408_839);
}
// endregion
// region: s_has_27_113_523_in_base_247
#[test]
fn s_has_27_113_523_in_base_247() {
	const S: &[u8] = &[
		0x_D5, 0x_8F, 0x_A9, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_D5, 0x_08, 0x_11, 0x_D3, 0x_12, 0x_EF, 0x_32, 0x_72, 0x_4A, 0x_F5, 0x_79, 0x_7A, 0x_EC, 0x_49,
		0x_6D, 0x_C1, 0x_F1, 0x_B1, 0x_ED, 0x_A2, 0x_1C, 0x_B5, 0x_D8, 0x_25, 0x_83, 0x_81, 0x_9F, 0x_7F, 0x_26,
		0x_85, 0x_59, 0x_E6, 0x_06, 0x_F3, 0x_84, 0x_66, 0x_FB, 0x_8E, 0x_E8, 0x_78, 0x_64, 0x_B6, 0x_3F, 0x_8B,
		0x_1E, 0x_65, 0x_33, 0x_61, 0x_FC, 0x_DE, 0x_02, 0x_BF, 0x_B3, 0x_7B, 0x_27, 0x_5A, 0x_05, 0x_58, 0x_B9,
		0x_AF, 0x_97, 0x_E7, 0x_91, 0x_57, 0x_F2, 0x_42, 0x_C8, 0x_14, 0x_5F, 0x_E5, 0x_C5, 0x_D4, 0x_46, 0x_9E,
		0x_76, 0x_95, 0x_01, 0x_92, 0x_7E, 0x_C9, 0x_DC, 0x_AC, 0x_87, 0x_82, 0x_37, 0x_28, 0x_19, 0x_30, 0x_B0,
		0x_3C, 0x_22, 0x_E9, 0x_5C, 0x_BA, 0x_0F, 0x_E3, 0x_DB, 0x_51, 0x_8D, 0x_A5, 0x_24, 0x_CC, 0x_A9, 0x_4E,
		0x_35, 0x_FD, 0x_17, 0x_31, 0x_94, 0x_63, 0x_4F, 0x_5B, 0x_D6, 0x_F0, 0x_A1, 0x_D1, 0x_CF, 0x_CA, 0x_AA,
		0x_C3, 0x_D7, 0x_A6, 0x_AE, 0x_56, 0x_1D, 0x_F4, 0x_7D, 0x_68, 0x_71, 0x_67, 0x_53, 0x_E4, 0x_9B, 0x_69,
		0x_34, 0x_FF, 0x_54, 0x_9D, 0x_60, 0x_C7, 0x_E0, 0x_39, 0x_48, 0x_D9, 0x_FE, 0x_B4, 0x_B7, 0x_E1, 0x_DD,
		0x_C4, 0x_A8, 0x_3A, 0x_43, 0x_EA, 0x_29, 0x_6F, 0x_6E, 0x_BC, 0x_80, 0x_89, 0x_77, 0x_70, 0x_5D, 0x_86,
		0x_F6, 0x_18, 0x_21, 0x_D0, 0x_4D, 0x_1A, 0x_A0, 0x_50, 0x_B8, 0x_2C, 0x_4B, 0x_44, 0x_41, 0x_AB, 0x_C0,
		0x_CD, 0x_04, 0x_D2, 0x_A7, 0x_2E, 0x_45, 0x_6A, 0x_90, 0x_52, 0x_5E, 0x_8C, 0x_98, 0x_62, 0x_38, 0x_23,
		0x_3D, 0x_0E, 0x_8F, 0x_73, 0x_EE, 0x_47, 0x_F7, 0x_CB, 0x_C2, 0x_16, 0x_9A, 0x_DF, 0x_AD, 0x_3B, 0x_BE,
		0x_C6, 0x_88, 0x_75, 0x_1F, 0x_DA, 0x_40, 0x_55, 0x_F9, 0x_B2, 0x_2F, 0x_BD, 0x_96, 0x_6B, 0x_99, 0x_9C,
		0x_CE, 0x_A3, 0x_8A, 0x_BB, 0x_13, 0x_07, 0x_2A, 0x_10, 0x_E2, 0x_6C, 0x_3E, 0x_03, 0x_4C, 0x_36, 0x_93,
		0x_EB, 0x_15, 0x_74, 0x_7C, 0x_A4, 0x_1B, 0x_FA,
	];

	helper(S, BASE, 27_113_523);
}
// endregion
// region: s_has_705_608_905_in_base_247
#[test]
fn s_has_705_608_905_in_base_247() {
	const S: &[u8] = &[
		0x_D0, 0x_15, 0x_39, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_6A, 0x_E8, 0x_60, 0x_AF, 0x_81, 0x_06, 0x_32, 0x_48, 0x_31, 0x_91, 0x_37, 0x_78, 0x_CC, 0x_12, 0x_F4,
		0x_F0, 0x_90, 0x_3E, 0x_C5, 0x_7E, 0x_0E, 0x_EF, 0x_EA, 0x_19, 0x_98, 0x_B7, 0x_99, 0x_4C, 0x_42, 0x_07,
		0x_2E, 0x_C2, 0x_F5, 0x_7D, 0x_82, 0x_62, 0x_28, 0x_C1, 0x_71, 0x_1A, 0x_5C, 0x_4D, 0x_66, 0x_67, 0x_86,
		0x_A0, 0x_D0, 0x_53, 0x_D7, 0x_11, 0x_65, 0x_57, 0x_AC, 0x_E9, 0x_8B, 0x_AE, 0x_FB, 0x_70, 0x_BC, 0x_05,
		0x_E7, 0x_9D, 0x_CD, 0x_83, 0x_A9, 0x_AA, 0x_25, 0x_6E, 0x_41, 0x_8F, 0x_5E, 0x_7F, 0x_A1, 0x_BA, 0x_A3,
		0x_A4, 0x_29, 0x_76, 0x_BB, 0x_40, 0x_B4, 0x_77, 0x_23, 0x_E2, 0x_18, 0x_80, 0x_03, 0x_4A, 0x_C4, 0x_B8,
		0x_B0, 0x_E1, 0x_D6, 0x_59, 0x_4F, 0x_6F, 0x_AD, 0x_22, 0x_34, 0x_EB, 0x_01, 0x_DA, 0x_B9, 0x_B5, 0x_1F,
		0x_FA, 0x_10, 0x_2C, 0x_C9, 0x_C8, 0x_5D, 0x_E0, 0x_BF, 0x_D5, 0x_EC, 0x_61, 0x_21, 0x_F1, 0x_45, 0x_D3,
		0x_04, 0x_FF, 0x_C7, 0x_E5, 0x_F9, 0x_F8, 0x_3B, 0x_FC, 0x_7A, 0x_14, 0x_FD, 0x_5A, 0x_92, 0x_68, 0x_84,
		0x_E3, 0x_BE, 0x_BD, 0x_49, 0x_3C, 0x_96, 0x_9C, 0x_85, 0x_CB, 0x_16, 0x_6D, 0x_38, 0x_5F, 0x_D4, 0x_87,
		0x_24, 0x_B3, 0x_1B, 0x_44, 0x_79, 0x_D2, 0x_08, 0x_CF, 0x_FE, 0x_26, 0x_88, 0x_39, 0x_D9, 0x_56, 0x_47,
		0x_3F, 0x_75, 0x_58, 0x_F2, 0x_9F, 0x_D8, 0x_B6, 0x_8A, 0x_A5, 0x_69, 0x_C6, 0x_3A, 0x_94, 0x_F7, 0x_9B,
		0x_8C, 0x_D1, 0x_6C, 0x_74, 0x_DB, 0x_7B, 0x_F3, 0x_A6, 0x_2A, 0x_55, 0x_A8, 0x_1E, 0x_27, 0x_F6, 0x_EE,
		0x_DC, 0x_63, 0x_A2, 0x_CE, 0x_73, 0x_0F, 0x_52, 0x_72, 0x_15, 0x_5B, 0x_B1, 0x_35, 0x_64, 0x_E6, 0x_43,
		0x_1C, 0x_50, 0x_3D, 0x_8D, 0x_A7, 0x_4B, 0x_17, 0x_C3, 0x_51, 0x_95, 0x_1D, 0x_DF, 0x_CA, 0x_DD, 0x_E4,
		0x_9A, 0x_6B, 0x_97, 0x_36, 0x_9E, 0x_89, 0x_2F, 0x_30, 0x_8E, 0x_B2, 0x_AB, 0x_46, 0x_93, 0x_ED, 0x_02,
		0x_DE, 0x_33, 0x_54, 0x_4E, 0x_C0, 0x_7C, 0x_13,
	];

	helper(S, BASE, 705_608_905);
}
// endregion
// region: s_has_whitespaces_and_1_in_base_2
#[test]
fn s_has_whitespaces_and_1_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_09,
		0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0D,
		0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_07,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_whitespaces_and_36_in_base_2
#[test]
fn s_has_whitespaces_and_36_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_09,
		0x_D5, 0x_D0, 0x_D0, 0x_D5, 0x_D0, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_D0, 0x_D5,
	];

	helper(S, BASE, 36);
}
// endregion
// region: s_has_whitespaces_and_594_in_base_2
#[test]
fn s_has_whitespaces_and_594_in_base_2() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_60, 0x_90, 0x_90, 0x_60, 0x_90, 0x_60, 0x_90,
		0x_90, 0x_60, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_60,
	];

	helper(S, BASE, 594);
}
// endregion
// region: s_has_whitespaces_and_6_711_in_base_2
#[test]
fn s_has_whitespaces_and_6_711_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_65, 0x_65, 0x_16, 0x_65, 0x_16, 0x_16, 0x_16, 0x_65, 0x_65, 0x_16, 0x_65, 0x_65, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_65,
	];

	helper(S, BASE, 6_711);
}
// endregion
// region: s_has_whitespaces_and_80_215_in_base_2
#[test]
fn s_has_whitespaces_and_80_215_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_07, 0x_21, 0x_21, 0x_07, 0x_07,
		0x_07, 0x_21, 0x_21, 0x_07, 0x_21, 0x_07, 0x_21, 0x_07, 0x_21, 0x_07, 0x_07, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_07,
	];

	helper(S, BASE, 80_215);
}
// endregion
// region: s_has_whitespaces_and_209_698_in_base_2
#[test]
fn s_has_whitespaces_and_209_698_in_base_2() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_23, 0x_23, 0x_E6, 0x_E6,
		0x_23, 0x_23, 0x_E6, 0x_E6, 0x_23, 0x_23, 0x_E6, 0x_E6, 0x_23, 0x_E6, 0x_E6, 0x_E6, 0x_23, 0x_E6,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_23,
	];

	helper(S, BASE, 209_698);
}
// endregion
// region: s_has_whitespaces_and_4_487_224_in_base_2
#[test]
fn s_has_whitespaces_and_4_487_224_in_base_2() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_09,
		0x_0C, 0x_0D, 0x_8A, 0x_A1, 0x_A1, 0x_A1, 0x_8A, 0x_A1, 0x_A1, 0x_A1, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_A1,
		0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_8A, 0x_8A, 0x_8A, 0x_A1, 0x_A1, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_A1, 0x_8A,
	];

	helper(S, BASE, 4_487_224);
}
// endregion
// region: s_has_whitespaces_and_82_401_062_in_base_2
#[test]
fn s_has_whitespaces_and_82_401_062_in_base_2() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_20,
		0x_20, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_59, 0x_68, 0x_68, 0x_59, 0x_59, 0x_59, 0x_68,
		0x_59, 0x_68, 0x_68, 0x_59, 0x_68, 0x_59, 0x_68, 0x_59, 0x_68, 0x_59, 0x_59, 0x_59, 0x_68, 0x_68, 0x_59,
		0x_68, 0x_68, 0x_59, 0x_59, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_59,
	];

	helper(S, BASE, 82_401_062);
}
// endregion
// region: s_has_whitespaces_and_967_921_472_in_base_2
#[test]
fn s_has_whitespaces_and_967_921_472_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0B,
		0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_20,
		0x_A7, 0x_A7, 0x_A7, 0x_5C, 0x_5C, 0x_A7, 0x_A7, 0x_5C, 0x_A7, 0x_A7, 0x_5C, 0x_5C, 0x_5C, 0x_A7, 0x_5C,
		0x_A7, 0x_5C, 0x_5C, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_5C, 0x_A7, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_A7,
	];

	helper(S, BASE, 967_921_472);
}
// endregion
// region: s_has_whitespaces_and_9_in_base_3
#[test]
fn s_has_whitespaces_and_9_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_2E, 0x_FB, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_2E, 0x_7A,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_whitespaces_and_30_in_base_3
#[test]
fn s_has_whitespaces_and_30_in_base_3() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_20,
		0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_0C,
		0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_31, 0x_22, 0x_31, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_31, 0x_2F,
	];

	helper(S, BASE, 30);
}
// endregion
// region: s_has_whitespaces_and_141_in_base_3
#[test]
fn s_has_whitespaces_and_141_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0C,
		0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_81, 0x_76, 0x_D4, 0x_76, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_81, 0x_76,
	];

	helper(S, BASE, 141);
}
// endregion
// region: s_has_whitespaces_and_9_250_in_base_3
#[test]
fn s_has_whitespaces_and_9_250_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_70, 0x_70, 0x_68, 0x_D2, 0x_68, 0x_68, 0x_70, 0x_D2, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_70, 0x_D2,
	];

	helper(S, BASE, 9_250);
}
// endregion
// region: s_has_whitespaces_and_44_714_in_base_3
#[test]
fn s_has_whitespaces_and_44_714_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_0D,
		0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0D,
		0x_09, 0x_20, 0x_09, 0x_EE, 0x_DA, 0x_EE, 0x_60, 0x_60, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_60, 0x_EE,
	];

	helper(S, BASE, 44_714);
}
// endregion
// region: s_has_whitespaces_and_231_116_in_base_3
#[test]
fn s_has_whitespaces_and_231_116_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0D,
		0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0C,
		0x_1B, 0x_8F, 0x_D0, 0x_D0, 0x_8F, 0x_D0, 0x_8F, 0x_8F, 0x_8F, 0x_D0, 0x_1B, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_1B, 0x_D0,
	];

	helper(S, BASE, 231_116);
}
// endregion
// region: s_has_whitespaces_and_2_001_692_in_base_3
#[test]
fn s_has_whitespaces_and_2_001_692_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_C6, 0x_1D, 0x_FC, 0x_1D, 0x_FC, 0x_FC, 0x_1D, 0x_1D,
		0x_FC, 0x_C6, 0x_1D, 0x_FC, 0x_1D, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_C6, 0x_FC,
	];

	helper(S, BASE, 2_001_692);
}
// endregion
// region: s_has_whitespaces_and_85_060_810_in_base_3
#[test]
fn s_has_whitespaces_and_85_060_810_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_6D, 0x_FA, 0x_FA, 0x_FA,
		0x_6D, 0x_77, 0x_77, 0x_6D, 0x_6D, 0x_6D, 0x_FA, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_77, 0x_6D,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_6D, 0x_FA,
	];

	helper(S, BASE, 85_060_810);
}
// endregion
// region: s_has_whitespaces_and_698_275_135_in_base_3
#[test]
fn s_has_whitespaces_and_698_275_135_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0B,
		0x_09, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_57, 0x_28, 0x_57, 0x_A0, 0x_57, 0x_28, 0x_28, 0x_28, 0x_28, 0x_57,
		0x_A0, 0x_A0, 0x_57, 0x_57, 0x_A0, 0x_28, 0x_A0, 0x_A0, 0x_57,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_57, 0x_28,
	];

	helper(S, BASE, 698_275_135);
}
// endregion
// region: s_has_whitespaces_and_8_in_base_5
#[test]
fn s_has_whitespaces_and_8_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_20, 0x_D3, 0x_E6,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_D3, 0x_4B, 0x_E6, 0x_04,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_whitespaces_and_62_in_base_5
#[test]
fn s_has_whitespaces_and_62_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_0D,
		0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_BD, 0x_BD, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_F1, 0x_BD, 0x_AC, 0x_AB,
	];

	helper(S, BASE, 62);
}
// endregion
// region: s_has_whitespaces_and_878_in_base_5
#[test]
fn s_has_whitespaces_and_878_in_base_5() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_09,
		0x_0A, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_20,
		0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_47, 0x_DF, 0x_46, 0x_46, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_47, 0x_DF, 0x_5A, 0x_FE,
	];

	helper(S, BASE, 878);
}
// endregion
// region: s_has_whitespaces_and_3_719_in_base_5
#[test]
fn s_has_whitespaces_and_3_719_in_base_5() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_20,
		0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_08, 0x_89,
		0x_3B, 0x_91, 0x_91, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_08, 0x_4C, 0x_91, 0x_3B,
	];

	helper(S, BASE, 3_719);
}
// endregion
// region: s_has_whitespaces_and_33_223_in_base_5
#[test]
fn s_has_whitespaces_and_33_223_in_base_5() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_20,
		0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_AE, 0x_91, 0x_5D, 0x_91, 0x_5D, 0x_94, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_F5, 0x_AE, 0x_5D, 0x_94,
	];

	helper(S, BASE, 33_223);
}
// endregion
// region: s_has_whitespaces_and_176_755_in_base_5
#[test]
fn s_has_whitespaces_and_176_755_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_49, 0x_F4, 0x_F4,
		0x_49, 0x_C1, 0x_60, 0x_F4, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_F4, 0x_49, 0x_41, 0x_C1,
	];

	helper(S, BASE, 176_755);
}
// endregion
// region: s_has_whitespaces_and_6_354_059_in_base_5
#[test]
fn s_has_whitespaces_and_6_354_059_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_20,
		0x_20, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0B,
		0x_0A, 0x_5E, 0x_E3, 0x_E3, 0x_E3, 0x_5E, 0x_E3, 0x_BB, 0x_BB, 0x_E3, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_E3, 0x_BB, 0x_5E, 0x_ED,
	];

	helper(S, BASE, 6_354_059);
}
// endregion
// region: s_has_whitespaces_and_91_538_481_in_base_5
#[test]
fn s_has_whitespaces_and_91_538_481_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0A,
		0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_09,
		0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_97, 0x_4A, 0x_97, 0x_4A, 0x_97, 0x_88, 0x_43, 0x_97,
		0x_43, 0x_4A, 0x_97, 0x_97,
	];
	const BASE: &[u8] = &[
		0x_58, 0x_97, 0x_43, 0x_88, 0x_4A,
	];

	helper(S, BASE, 91_538_481);
}
// endregion
// region: s_has_whitespaces_and_943_529_165_in_base_5
#[test]
fn s_has_whitespaces_and_943_529_165_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0C,
		0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_BB, 0x_4C, 0x_DF, 0x_BB, 0x_86, 0x_47,
		0x_86, 0x_4C, 0x_DF, 0x_BB, 0x_DF, 0x_BB, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_DF, 0x_47, 0x_BB, 0x_4C,
	];

	helper(S, BASE, 943_529_165);
}
// endregion
// region: s_has_whitespaces_and_6_in_base_7
#[test]
fn s_has_whitespaces_and_6_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_7D, 0x_47, 0x_77, 0x_F4, 0x_38, 0x_39,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_whitespaces_and_94_in_base_7
#[test]
fn s_has_whitespaces_and_94_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0B,
		0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_0A,
		0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_CA, 0x_1A, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_CA, 0x_EA, 0x_39, 0x_50, 0x_36, 0x_1A,
	];

	helper(S, BASE, 94);
}
// endregion
// region: s_has_whitespaces_and_388_in_base_7
#[test]
fn s_has_whitespaces_and_388_in_base_7() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0D,
		0x_0B, 0x_20, 0x_09, 0x_CF, 0x_D8, 0x_66, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_CF, 0x_BE, 0x_FE, 0x_D5, 0x_6B, 0x_66,
	];

	helper(S, BASE, 388);
}
// endregion
// region: s_has_whitespaces_and_4_369_in_base_7
#[test]
fn s_has_whitespaces_and_4_369_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_09,
		0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_09,
		0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_E2, 0x_FB, 0x_FB, 0x_E2, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_E2, 0x_D9, 0x_4B, 0x_84, 0x_FB, 0x_27,
	];

	helper(S, BASE, 4_369);
}
// endregion
// region: s_has_whitespaces_and_42_243_in_base_7
#[test]
fn s_has_whitespaces_and_42_243_in_base_7() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_02, 0x_A2, 0x_70, 0x_6A, 0x_D9, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_6A, 0x_02, 0x_A2, 0x_70, 0x_AF, 0x_9B,
	];

	helper(S, BASE, 42_243);
}
// endregion
// region: s_has_whitespaces_and_764_937_in_base_7
#[test]
fn s_has_whitespaces_and_764_937_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_55, 0x_EA, 0x_EA, 0x_D2, 0x_C7, 0x_55, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_21, 0x_BB, 0x_EA, 0x_D2, 0x_45, 0x_55,
	];

	helper(S, BASE, 764_937);
}
// endregion
// region: s_has_whitespaces_and_2_614_413_in_base_7
#[test]
fn s_has_whitespaces_and_2_614_413_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_F5, 0x_88, 0x_88,
		0x_F5, 0x_5E, 0x_88, 0x_21, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_88, 0x_21, 0x_F5, 0x_65, 0x_AB, 0x_5E,
	];

	helper(S, BASE, 2_614_413);
}
// endregion
// region: s_has_whitespaces_and_76_166_731_in_base_7
#[test]
fn s_has_whitespaces_and_76_166_731_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0A,
		0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0A,
		0x_67, 0x_18, 0x_67, 0x_37, 0x_FD, 0x_0E, 0x_18, 0x_37, 0x_6D, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_67, 0x_FD, 0x_37, 0x_D7, 0x_0E, 0x_18,
	];

	helper(S, BASE, 76_166_731);
}
// endregion
// region: s_has_whitespaces_and_857_765_780_in_base_7
#[test]
fn s_has_whitespaces_and_857_765_780_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_39, 0x_C7, 0x_AE, 0x_AA, 0x_39, 0x_0F, 0x_AE,
		0x_39, 0x_0F, 0x_C7, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_AE, 0x_4D, 0x_39, 0x_32, 0x_AA, 0x_0F,
	];

	helper(S, BASE, 857_765_780);
}
// endregion
// region: s_has_whitespaces_and_6_in_base_11
#[test]
fn s_has_whitespaces_and_6_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0D,
		0x_20, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0A,
		0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_4A, 0x_3E, 0x_52, 0x_47, 0x_12, 0x_72, 0x_C0, 0x_79, 0x_5C, 0x_E8,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_whitespaces_and_52_in_base_11
#[test]
fn s_has_whitespaces_and_52_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_3E, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_24, 0x_FD, 0x_C4, 0x_69, 0x_3E, 0x_36, 0x_4D, 0x_92, 0x_62, 0x_FF, 0x_8D,
	];

	helper(S, BASE, 52);
}
// endregion
// region: s_has_whitespaces_and_588_in_base_11
#[test]
fn s_has_whitespaces_and_588_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_09,
		0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_EC, 0x_36, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_BD, 0x_38, 0x_AE, 0x_EC, 0x_91, 0x_6C, 0x_58, 0x_F6, 0x_36, 0x_ED,
	];

	helper(S, BASE, 588);
}
// endregion
// region: s_has_whitespaces_and_6_891_in_base_11
#[test]
fn s_has_whitespaces_and_6_891_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_20,
		0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_20,
		0x_09, 0x_20, 0x_0C, 0x_20, 0x_1D, 0x_29, 0x_91, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_29, 0x_19, 0x_F4, 0x_92, 0x_1D, 0x_68, 0x_82, 0x_05, 0x_33, 0x_91,
	];

	helper(S, BASE, 6_891);
}
// endregion
// region: s_has_whitespaces_and_38_683_in_base_11
#[test]
fn s_has_whitespaces_and_38_683_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_F5, 0x_67, 0x_C2, 0x_67, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_AD, 0x_F5, 0x_85, 0x_55, 0x_D5, 0x_1C, 0x_67, 0x_CD, 0x_CE, 0x_62,
	];

	helper(S, BASE, 38_683);
}
// endregion
// region: s_has_whitespaces_and_521_325_in_base_11
#[test]
fn s_has_whitespaces_and_521_325_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_09,
		0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_09,
		0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_72, 0x_FF, 0x_63, 0x_AF, 0x_8E, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_3D, 0x_FF, 0x_72, 0x_3B, 0x_8E, 0x_63, 0x_AF, 0x_F2, 0x_77, 0x_B0,
	];

	helper(S, BASE, 521_325);
}
// endregion
// region: s_has_whitespaces_and_7_101_394_in_base_11
#[test]
fn s_has_whitespaces_and_7_101_394_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0C,
		0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_20,
		0x_58, 0x_76, 0x_E0, 0x_76, 0x_58, 0x_E9, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_E0, 0x_E9, 0x_C6, 0x_58, 0x_34, 0x_3C, 0x_69, 0x_AE, 0x_43, 0x_3D,
	];

	helper(S, BASE, 7_101_394);
}
// endregion
// region: s_has_whitespaces_and_96_534_489_in_base_11
#[test]
fn s_has_whitespaces_and_96_534_489_in_base_11() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0D,
		0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0D,
		0x_20, 0x_25, 0x_7C, 0x_C5, 0x_25, 0x_25, 0x_2F, 0x_48, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_E5, 0x_A9, 0x_6B, 0x_25, 0x_C5, 0x_D7, 0x_48, 0x_2F, 0x_D9, 0x_7C,
	];

	helper(S, BASE, 96_534_489);
}
// endregion
// region: s_has_whitespaces_and_835_260_165_in_base_11
#[test]
fn s_has_whitespaces_and_835_260_165_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_20,
		0x_0A, 0x_0A, 0x_0B, 0x_9A, 0x_98, 0x_98, 0x_75, 0x_9A, 0x_7E, 0x_9A, 0x_9D, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_E4, 0x_92, 0x_9A, 0x_7E, 0x_75, 0x_9D, 0x_0F, 0x_BE, 0x_98, 0x_A0,
	];

	helper(S, BASE, 835_260_165);
}
// endregion
// region: s_has_whitespaces_and_1_in_base_13
#[test]
fn s_has_whitespaces_and_1_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_20, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_10, 0x_1D, 0x_46, 0x_75, 0x_FC, 0x_D2, 0x_54, 0x_F0, 0x_B5, 0x_73, 0x_0E, 0x_97,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_whitespaces_and_44_in_base_13
#[test]
fn s_has_whitespaces_and_44_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_88, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_57, 0x_32, 0x_88, 0x_E9, 0x_1B, 0x_E4, 0x_BE, 0x_94, 0x_1D, 0x_C7, 0x_A5, 0x_5E,
	];

	helper(S, BASE, 44);
}
// endregion
// region: s_has_whitespaces_and_192_in_base_13
#[test]
fn s_has_whitespaces_and_192_in_base_13() {
	const S: &[u8] = &[
		0x_0D, 0x_64, 0x_64, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_67, 0x_64, 0x_E8, 0x_A8, 0x_31, 0x_08, 0x_46, 0x_1B, 0x_D3, 0x_4A, 0x_F1, 0x_C3, 0x_12,
	];

	helper(S, BASE, 192);
}
// endregion
// region: s_has_whitespaces_and_6_416_in_base_13
#[test]
fn s_has_whitespaces_and_6_416_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_E5, 0x_A0, 0x_BD, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_13, 0x_E5, 0x_91, 0x_A6, 0x_A8, 0x_F4, 0x_E9, 0x_DF, 0x_AD, 0x_CE, 0x_A0, 0x_BD,
	];

	helper(S, BASE, 6_416);
}
// endregion
// region: s_has_whitespaces_and_25_617_in_base_13
#[test]
fn s_has_whitespaces_and_25_617_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_8E, 0x_CF, 0x_1C, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_9D, 0x_6B, 0x_E7, 0x_96, 0x_84, 0x_F2, 0x_3D, 0x_1C, 0x_CF, 0x_F7, 0x_98, 0x_8E, 0x_01,
	];

	helper(S, BASE, 25_617);
}
// endregion
// region: s_has_whitespaces_and_795_464_in_base_13
#[test]
fn s_has_whitespaces_and_795_464_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_0A,
		0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_49, 0x_8B, 0x_24, 0x_8A, 0x_24, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_8B, 0x_49, 0x_30, 0x_51, 0x_65, 0x_1F, 0x_1D, 0x_7C, 0x_10, 0x_C0, 0x_24, 0x_E2,
	];

	helper(S, BASE, 795_464);
}
// endregion
// region: s_has_whitespaces_and_4_371_383_in_base_13
#[test]
fn s_has_whitespaces_and_4_371_383_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_EE, 0x_85, 0x_D7, 0x_FD, 0x_A2, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_57, 0x_A2, 0x_06, 0x_D2, 0x_59, 0x_6A, 0x_8A, 0x_BA, 0x_FD, 0x_85, 0x_EE, 0x_96,
	];

	helper(S, BASE, 4_371_383);
}
// endregion
// region: s_has_whitespaces_and_14_911_041_in_base_13
#[test]
fn s_has_whitespaces_and_14_911_041_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_0B,
		0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_01, 0x_87, 0x_0E, 0x_87,
		0x_D5, 0x_D5, 0x_0E,
	];
	const BASE: &[u8] = &[
		0x_D5, 0x_87, 0x_0E, 0x_01, 0x_DD, 0x_7D, 0x_FF, 0x_13, 0x_8C, 0x_A8, 0x_6F, 0x_F7, 0x_A1,
	];

	helper(S, BASE, 14_911_041);
}
// endregion
// region: s_has_whitespaces_and_818_119_936_in_base_13
#[test]
fn s_has_whitespaces_and_818_119_936_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_09,
		0x_0D, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0C,
		0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_6D, 0x_E5, 0x_E5, 0x_40, 0x_86, 0x_24, 0x_40, 0x_B3, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_6D, 0x_FA, 0x_A6, 0x_B3, 0x_86, 0x_40, 0x_0E, 0x_24, 0x_CA, 0x_1B, 0x_58, 0x_EA,
	];

	helper(S, BASE, 818_119_936);
}
// endregion
// region: s_has_whitespaces_and_7_in_base_19
#[test]
fn s_has_whitespaces_and_7_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_2E, 0x_37, 0x_05, 0x_45, 0x_16, 0x_7F, 0x_C1, 0x_50, 0x_2A, 0x_97, 0x_0F, 0x_F5, 0x_7E, 0x_87,
		0x_80, 0x_27, 0x_FE, 0x_C5,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_21_in_base_19
#[test]
fn s_has_whitespaces_and_21_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_08, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_08, 0x_9D, 0x_E3, 0x_4F, 0x_9B, 0x_78, 0x_59, 0x_D1, 0x_C4, 0x_FE, 0x_29, 0x_32, 0x_24, 0x_41,
		0x_9F, 0x_93, 0x_A3, 0x_C2,
	];

	helper(S, BASE, 21);
}
// endregion
// region: s_has_whitespaces_and_931_in_base_19
#[test]
fn s_has_whitespaces_and_931_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_09,
		0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_09,
		0x_0C, 0x_0B, 0x_0B, 0x_63, 0x_68, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_61, 0x_63, 0x_1D, 0x_E3, 0x_82, 0x_2E, 0x_39, 0x_58, 0x_04, 0x_6F, 0x_68, 0x_78, 0x_B1, 0x_1E,
		0x_72, 0x_99, 0x_FE, 0x_18,
	];

	helper(S, BASE, 931);
}
// endregion
// region: s_has_whitespaces_and_8_390_in_base_19
#[test]
fn s_has_whitespaces_and_8_390_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_63, 0x_86, 0x_86, 0x_04,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_63, 0x_26, 0x_DD, 0x_86, 0x_4D, 0x_A4, 0x_E7, 0x_14, 0x_22, 0x_BB, 0x_04, 0x_18, 0x_66, 0x_6B,
		0x_F3, 0x_FD, 0x_D7, 0x_71,
	];

	helper(S, BASE, 8_390);
}
// endregion
// region: s_has_whitespaces_and_38_264_in_base_19
#[test]
fn s_has_whitespaces_and_38_264_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_09, 0x_7C, 0x_D3, 0x_15, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_81, 0x_A3, 0x_3E, 0x_4A, 0x_7C, 0x_83, 0x_07, 0x_E9, 0x_9A, 0x_D3, 0x_51, 0x_BE, 0x_BB, 0x_6E,
		0x_6C, 0x_2C, 0x_52, 0x_15,
	];

	helper(S, BASE, 38_264);
}
// endregion
// region: s_has_whitespaces_and_884_325_in_base_19
#[test]
fn s_has_whitespaces_and_884_325_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_0B,
		0x_0C, 0x_69, 0x_83, 0x_21, 0x_DC, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_6A, 0x_B1, 0x_FD, 0x_8A, 0x_1C, 0x_69, 0x_7A, 0x_39, 0x_72, 0x_2C, 0x_CB, 0x_DC, 0x_40, 0x_83,
		0x_BF, 0x_5A, 0x_21, 0x_3E,
	];

	helper(S, BASE, 884_325);
}
// endregion
// region: s_has_whitespaces_and_3_196_937_in_base_19
#[test]
fn s_has_whitespaces_and_3_196_937_in_base_19() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_8E, 0x_45, 0x_D0, 0x_8E, 0x_78,
		0x_F3,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_8E, 0x_4E, 0x_AF, 0x_15, 0x_45, 0x_07, 0x_3F, 0x_73, 0x_FB, 0x_D0, 0x_5E, 0x_87, 0x_F8, 0x_78,
		0x_53, 0x_F3, 0x_E1, 0x_42,
	];

	helper(S, BASE, 3_196_937);
}
// endregion
// region: s_has_whitespaces_and_16_185_851_in_base_19
#[test]
fn s_has_whitespaces_and_16_185_851_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_11, 0x_88, 0x_3F, 0x_85, 0x_B7, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_B4, 0x_B7, 0x_3F, 0x_94, 0x_44, 0x_11, 0x_CA, 0x_A8, 0x_41, 0x_88, 0x_BB, 0x_9C, 0x_FB, 0x_63,
		0x_85, 0x_A3, 0x_62, 0x_EE,
	];

	helper(S, BASE, 16_185_851);
}
// endregion
// region: s_has_whitespaces_and_141_725_765_in_base_19
#[test]
fn s_has_whitespaces_and_141_725_765_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_0A,
		0x_09, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_6C, 0x_B1, 0x_D0, 0x_73,
		0x_FC, 0x_7B, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_B7, 0x_7B, 0x_6C, 0x_D0, 0x_E0, 0x_28, 0x_54, 0x_6F, 0x_73, 0x_3E, 0x_1E, 0x_90, 0x_47, 0x_FC,
		0x_1B, 0x_58, 0x_8A, 0x_C3,
	];

	helper(S, BASE, 141_725_765);
}
// endregion
// region: s_has_whitespaces_and_5_in_base_42
#[test]
fn s_has_whitespaces_and_5_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_91, 0x_73, 0x_E0, 0x_34, 0x_1B, 0x_4B, 0x_12, 0x_41, 0x_96, 0x_B1, 0x_9D, 0x_8B, 0x_24, 0x_FB,
		0x_AD, 0x_C3, 0x_C2, 0x_7D, 0x_E9, 0x_8A, 0x_E8, 0x_49, 0x_A7, 0x_C8, 0x_C6, 0x_6F, 0x_B7, 0x_8D, 0x_5E,
		0x_B8, 0x_84, 0x_1D, 0x_3C, 0x_23, 0x_33, 0x_EC, 0x_3D, 0x_EE, 0x_45, 0x_28, 0x_48,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_10_in_base_42
#[test]
fn s_has_whitespaces_and_10_in_base_42() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_20,
		0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_FA,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_27, 0x_7B, 0x_13, 0x_43, 0x_50, 0x_9B, 0x_18, 0x_11, 0x_2E, 0x_FA, 0x_F7, 0x_78, 0x_81, 0x_04,
		0x_92, 0x_B7, 0x_1F, 0x_1C, 0x_BB, 0x_CA, 0x_85, 0x_3E, 0x_E8, 0x_28, 0x_3F, 0x_8D, 0x_8E, 0x_5D, 0x_31,
		0x_F6, 0x_B8, 0x_9F, 0x_97, 0x_9E, 0x_CD, 0x_53, 0x_D8, 0x_37, 0x_45, 0x_65, 0x_4D,
	];

	helper(S, BASE, 10);
}
// endregion
// region: s_has_whitespaces_and_991_in_base_42
#[test]
fn s_has_whitespaces_and_991_in_base_42() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_20,
		0x_0D, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_09,
		0x_20, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_7A, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_82, 0x_C0, 0x_D4, 0x_30, 0x_FA, 0x_35, 0x_44, 0x_98, 0x_12, 0x_69, 0x_F6, 0x_B9, 0x_AB, 0x_D5,
		0x_2F, 0x_B6, 0x_16, 0x_57, 0x_A5, 0x_EF, 0x_11, 0x_5C, 0x_7A, 0x_8A, 0x_1F, 0x_71, 0x_9F, 0x_96, 0x_FD,
		0x_85, 0x_68, 0x_9E, 0x_CA, 0x_EE, 0x_99, 0x_93, 0x_88, 0x_B1, 0x_14, 0x_92, 0x_36,
	];

	helper(S, BASE, 991);
}
// endregion
// region: s_has_whitespaces_and_4_796_in_base_42
#[test]
fn s_has_whitespaces_and_4_796_in_base_42() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_09,
		0x_0C, 0x_0C, 0x_0C, 0x_25, 0x_10, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_CF, 0x_25, 0x_6D, 0x_27, 0x_16, 0x_7B, 0x_B9, 0x_F6, 0x_1A, 0x_6C, 0x_E7, 0x_9B, 0x_12, 0x_63,
		0x_9F, 0x_23, 0x_DF, 0x_50, 0x_34, 0x_B1, 0x_AC, 0x_04, 0x_E9, 0x_C8, 0x_B6, 0x_06, 0x_03, 0x_C2, 0x_8F,
		0x_10, 0x_98, 0x_F1, 0x_A2, 0x_8D, 0x_4F, 0x_14, 0x_51, 0x_5A, 0x_FC, 0x_B8, 0x_11,
	];

	helper(S, BASE, 4_796);
}
// endregion
// region: s_has_whitespaces_and_98_958_in_base_42
#[test]
fn s_has_whitespaces_and_98_958_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0A,
		0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_A3,
		0x_9E, 0x_4A, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_A3, 0x_B7, 0x_BD, 0x_4A, 0x_62, 0x_A4, 0x_07, 0x_B8, 0x_EA, 0x_37, 0x_0E, 0x_F4, 0x_E1, 0x_9E,
		0x_D8, 0x_56, 0x_D0, 0x_72, 0x_0F, 0x_43, 0x_74, 0x_4C, 0x_BA, 0x_8F, 0x_16, 0x_4B, 0x_E2, 0x_50, 0x_60,
		0x_E8, 0x_85, 0x_65, 0x_11, 0x_B4, 0x_3D, 0x_D3, 0x_7E, 0x_24, 0x_88, 0x_EF, 0x_48,
	];

	helper(S, BASE, 98_958);
}
// endregion
// region: s_has_whitespaces_and_477_802_in_base_42
#[test]
fn s_has_whitespaces_and_477_802_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_DC,
		0x_4F, 0x_E9, 0x_C7,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_81, 0x_B6, 0x_7A, 0x_E7, 0x_F7, 0x_DC, 0x_47, 0x_16, 0x_33, 0x_C7, 0x_CB, 0x_C4, 0x_CE, 0x_D3,
		0x_F6, 0x_2E, 0x_A4, 0x_4F, 0x_25, 0x_08, 0x_32, 0x_DE, 0x_F3, 0x_11, 0x_45, 0x_94, 0x_19, 0x_B8, 0x_67,
		0x_F9, 0x_90, 0x_24, 0x_29, 0x_82, 0x_C9, 0x_E9, 0x_5A, 0x_BA, 0x_03, 0x_B1, 0x_B3,
	];

	helper(S, BASE, 477_802);
}
// endregion
// region: s_has_whitespaces_and_4_983_625_in_base_42
#[test]
fn s_has_whitespaces_and_4_983_625_in_base_42() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0B,
		0x_20, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_D1, 0x_EC, 0x_3F, 0x_B2, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_D1, 0x_54, 0x_72, 0x_9A, 0x_26, 0x_A0, 0x_B2, 0x_73, 0x_65, 0x_A1, 0x_3F, 0x_FE, 0x_6E, 0x_DE,
		0x_69, 0x_6C, 0x_56, 0x_0E, 0x_05, 0x_19, 0x_BD, 0x_E7, 0x_2F, 0x_C1, 0x_EC, 0x_9C, 0x_71, 0x_B7, 0x_CB,
		0x_35, 0x_9D, 0x_E5, 0x_DC, 0x_ED, 0x_4C, 0x_C4, 0x_B4, 0x_DD, 0x_D9, 0x_EB, 0x_F6,
	];

	helper(S, BASE, 4_983_625);
}
// endregion
// region: s_has_whitespaces_and_46_982_694_in_base_42
#[test]
fn s_has_whitespaces_and_46_982_694_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_09,
		0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_20, 0x_20, 0x_09, 0x_0D,
		0x_0A, 0x_0C, 0x_41, 0x_A3, 0x_C6, 0x_58, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_3C, 0x_4E, 0x_3F, 0x_A3, 0x_86, 0x_C6, 0x_58, 0x_D4, 0x_73, 0x_07, 0x_E8, 0x_5F, 0x_50, 0x_25,
		0x_41, 0x_FD, 0x_87, 0x_6E, 0x_DE, 0x_22, 0x_1D, 0x_BD, 0x_63, 0x_8A, 0x_5B, 0x_36, 0x_34, 0x_64, 0x_4B,
		0x_67, 0x_12, 0x_1F, 0x_84, 0x_A7, 0x_A5, 0x_27, 0x_8D, 0x_BF, 0x_29, 0x_31, 0x_E4,
	];

	helper(S, BASE, 46_982_694);
}
// endregion
// region: s_has_whitespaces_and_933_995_844_in_base_42
#[test]
fn s_has_whitespaces_and_933_995_844_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_20, 0x_0A, 0x_74, 0x_C6, 0x_C6, 0x_04, 0x_82, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_24, 0x_98, 0x_E2, 0x_82, 0x_5B, 0x_C6, 0x_74, 0x_30, 0x_C4, 0x_72, 0x_6A, 0x_75, 0x_DF, 0x_62,
		0x_E0, 0x_44, 0x_73, 0x_94, 0x_46, 0x_E8, 0x_83, 0x_B7, 0x_01, 0x_04, 0x_1B, 0x_3E, 0x_8B, 0x_58, 0x_40,
		0x_70, 0x_4E, 0x_AF, 0x_1A, 0x_08, 0x_81, 0x_10, 0x_9B, 0x_1D, 0x_37, 0x_DE, 0x_35,
	];

	helper(S, BASE, 933_995_844);
}
// endregion
// region: s_has_whitespaces_and_7_in_base_73
#[test]
fn s_has_whitespaces_and_7_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_FD, 0x_FC, 0x_A1, 0x_4E, 0x_F9, 0x_DB, 0x_F2, 0x_98, 0x_A2, 0x_93, 0x_C5, 0x_C3, 0x_1F, 0x_32,
		0x_2A, 0x_41, 0x_12, 0x_22, 0x_16, 0x_74, 0x_F8, 0x_0E, 0x_F3, 0x_24, 0x_FA, 0x_E7, 0x_A4, 0x_33, 0x_F0,
		0x_44, 0x_A8, 0x_A7, 0x_CC, 0x_AE, 0x_4C, 0x_94, 0x_F1, 0x_B4, 0x_F6, 0x_38, 0x_49, 0x_2F, 0x_FB, 0x_48,
		0x_8D, 0x_D1, 0x_91, 0x_63, 0x_D8, 0x_B8, 0x_9E, 0x_A0, 0x_75, 0x_B1, 0x_AA, 0x_30, 0x_BA, 0x_D6, 0x_81,
		0x_97, 0x_2C, 0x_DF, 0x_03, 0x_13, 0x_2E, 0x_21, 0x_BD, 0x_C7, 0x_DD, 0x_A9, 0x_46, 0x_8E,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_82_in_base_73
#[test]
fn s_has_whitespaces_and_82_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_40, 0x_9B,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_40, 0x_4D, 0x_A4, 0x_15, 0x_95, 0x_59, 0x_24, 0x_30, 0x_9B, 0x_E7, 0x_F3, 0x_1A, 0x_E3, 0x_39,
		0x_7A, 0x_D0, 0x_AF, 0x_F0, 0x_7C, 0x_36, 0x_AA, 0x_1D, 0x_EE, 0x_C8, 0x_7F, 0x_97, 0x_35, 0x_F9, 0x_23,
		0x_DC, 0x_4A, 0x_9C, 0x_81, 0x_66, 0x_2E, 0x_F2, 0x_2C, 0x_DD, 0x_E2, 0x_1E, 0x_03, 0x_2A, 0x_CE, 0x_29,
		0x_75, 0x_F4, 0x_90, 0x_B2, 0x_41, 0x_73, 0x_18, 0x_62, 0x_D3, 0x_04, 0x_42, 0x_9D, 0x_D2, 0x_5F, 0x_A0,
		0x_BC, 0x_32, 0x_5E, 0x_7D, 0x_B1, 0x_1B, 0x_3D, 0x_E8, 0x_33, 0x_50, 0x_02, 0x_86, 0x_F6,
	];

	helper(S, BASE, 82);
}
// endregion
// region: s_has_whitespaces_and_340_in_base_73
#[test]
fn s_has_whitespaces_and_340_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_92, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_D0, 0x_FE, 0x_23, 0x_92, 0x_AF, 0x_58, 0x_A5, 0x_68, 0x_B4, 0x_6A, 0x_57, 0x_26, 0x_E3, 0x_01,
		0x_5A, 0x_54, 0x_79, 0x_B6, 0x_D2, 0x_84, 0x_35, 0x_51, 0x_61, 0x_64, 0x_A2, 0x_04, 0x_E0, 0x_7D, 0x_27,
		0x_1B, 0x_F8, 0x_F2, 0x_FF, 0x_D8, 0x_99, 0x_C1, 0x_52, 0x_DE, 0x_29, 0x_03, 0x_BE, 0x_3A, 0x_D4, 0x_C4,
		0x_3F, 0x_2C, 0x_CF, 0x_D5, 0x_AC, 0x_82, 0x_3C, 0x_8A, 0x_C2, 0x_B3, 0x_EF, 0x_1A, 0x_6E, 0x_49, 0x_6F,
		0x_4C, 0x_FC, 0x_1D, 0x_F7, 0x_D3, 0x_B5, 0x_02, 0x_40, 0x_97, 0x_67, 0x_BA, 0x_53, 0x_C3,
	];

	helper(S, BASE, 340);
}
// endregion
// region: s_has_whitespaces_and_4_331_in_base_73
#[test]
fn s_has_whitespaces_and_4_331_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_09,
		0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_6A,
		0x_78,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_BB, 0x_DE, 0x_DD, 0x_45, 0x_65, 0x_13, 0x_79, 0x_91, 0x_A8, 0x_47, 0x_F0, 0x_4E, 0x_72, 0x_76,
		0x_8D, 0x_AF, 0x_60, 0x_6F, 0x_CA, 0x_35, 0x_53, 0x_FC, 0x_28, 0x_78, 0x_CB, 0x_7C, 0x_4B, 0x_FF, 0x_04,
		0x_EF, 0x_FE, 0x_D2, 0x_0E, 0x_C2, 0x_11, 0x_03, 0x_93, 0x_80, 0x_87, 0x_07, 0x_8E, 0x_36, 0x_1F, 0x_8A,
		0x_4A, 0x_27, 0x_83, 0x_1C, 0x_B5, 0x_43, 0x_CC, 0x_73, 0x_F8, 0x_06, 0x_A7, 0x_7A, 0x_E0, 0x_B7, 0x_6A,
		0x_85, 0x_CF, 0x_B0, 0x_16, 0x_68, 0x_19, 0x_4C, 0x_AA, 0x_D8, 0x_7B, 0x_75, 0x_5A, 0x_3B,
	];

	helper(S, BASE, 4_331);
}
// endregion
// region: s_has_whitespaces_and_97_778_in_base_73
#[test]
fn s_has_whitespaces_and_97_778_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_E6, 0x_2E, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_D5, 0x_F7, 0x_69, 0x_86, 0x_7E, 0x_28, 0x_FE, 0x_45, 0x_80, 0x_EB, 0x_C0, 0x_A9, 0x_91, 0x_9F,
		0x_E1, 0x_1A, 0x_B9, 0x_E6, 0x_02, 0x_97, 0x_DE, 0x_05, 0x_AB, 0x_C2, 0x_2E, 0x_F8, 0x_EE, 0x_E0, 0x_8B,
		0x_D9, 0x_AF, 0x_9D, 0x_F1, 0x_21, 0x_38, 0x_1B, 0x_6B, 0x_06, 0x_78, 0x_AA, 0x_A1, 0x_DC, 0x_FF, 0x_F3,
		0x_43, 0x_6C, 0x_5F, 0x_FB, 0x_0E, 0x_56, 0x_8F, 0x_68, 0x_8E, 0x_26, 0x_01, 0x_CF, 0x_5D, 0x_17, 0x_07,
		0x_74, 0x_F2, 0x_0F, 0x_36, 0x_4B, 0x_79, 0x_B5, 0x_93, 0x_88, 0x_B6, 0x_3F, 0x_C9, 0x_57,
	];

	helper(S, BASE, 97_778);
}
// endregion
// region: s_has_whitespaces_and_485_198_in_base_73
#[test]
fn s_has_whitespaces_and_485_198_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_B8, 0x_3B, 0x_DB, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_B8, 0x_45, 0x_DB, 0x_74, 0x_22, 0x_DF, 0x_C2, 0x_F6, 0x_E4, 0x_42, 0x_CA, 0x_0F, 0x_54, 0x_BB,
		0x_96, 0x_FA, 0x_52, 0x_3B, 0x_B1, 0x_80, 0x_93, 0x_49, 0x_AE, 0x_41, 0x_67, 0x_2E, 0x_2C, 0x_EF, 0x_1C,
		0x_08, 0x_ED, 0x_8A, 0x_B5, 0x_FF, 0x_1E, 0x_1F, 0x_2F, 0x_C9, 0x_58, 0x_BD, 0x_EB, 0x_34, 0x_03, 0x_7B,
		0x_FE, 0x_06, 0x_3E, 0x_E6, 0x_04, 0x_90, 0x_B3, 0x_77, 0x_F0, 0x_48, 0x_BA, 0x_DC, 0x_10, 0x_1B, 0x_AB,
		0x_62, 0x_9C, 0x_35, 0x_51, 0x_A3, 0x_60, 0x_3A, 0x_21, 0x_E0, 0x_37, 0x_05, 0x_39, 0x_92,
	];

	helper(S, BASE, 485_198);
}
// endregion
// region: s_has_whitespaces_and_1_899_564_in_base_73
#[test]
fn s_has_whitespaces_and_1_899_564_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_20,
		0x_09, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0B,
		0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_CC, 0x_A9, 0x_BE,
		0x_C9,
	];
	const BASE: &[u8] = &[
		0x_A1, 0x_3B, 0x_0E, 0x_DB, 0x_CC, 0x_47, 0x_F2, 0x_54, 0x_F1, 0x_70, 0x_5C, 0x_A3, 0x_17, 0x_37, 0x_D3,
		0x_60, 0x_04, 0x_C8, 0x_C7, 0x_4A, 0x_83, 0x_DF, 0x_C1, 0x_D1, 0x_CA, 0x_01, 0x_3D, 0x_72, 0x_1E, 0x_2F,
		0x_F5, 0x_C9, 0x_7C, 0x_BE, 0x_06, 0x_13, 0x_F0, 0x_A5, 0x_BB, 0x_33, 0x_FF, 0x_66, 0x_02, 0x_9D, 0x_DC,
		0x_B4, 0x_53, 0x_62, 0x_8D, 0x_F7, 0x_24, 0x_97, 0x_DE, 0x_8C, 0x_9B, 0x_48, 0x_75, 0x_6B, 0x_CF, 0x_05,
		0x_85, 0x_19, 0x_69, 0x_D4, 0x_A9, 0x_10, 0x_51, 0x_07, 0x_38, 0x_67, 0x_5D, 0x_5A, 0x_D6,
	];

	helper(S, BASE, 1_899_564);
}
// endregion
// region: s_has_whitespaces_and_51_248_961_in_base_73
#[test]
fn s_has_whitespaces_and_51_248_961_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_09,
		0x_09, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0A,
		0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_DD, 0x_E8, 0x_EB,
		0x_1E, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_DD, 0x_8A, 0x_BE, 0x_CB, 0x_6A, 0x_11, 0x_04, 0x_EA, 0x_73, 0x_90, 0x_65, 0x_15, 0x_F0, 0x_0E,
		0x_4B, 0x_3C, 0x_EF, 0x_C3, 0x_9E, 0x_C9, 0x_FD, 0x_F6, 0x_CA, 0x_08, 0x_B6, 0x_29, 0x_BD, 0x_B2, 0x_21,
		0x_1F, 0x_3B, 0x_86, 0x_9A, 0x_76, 0x_F4, 0x_E3, 0x_D5, 0x_E7, 0x_28, 0x_E2, 0x_C1, 0x_B0, 0x_85, 0x_51,
		0x_E4, 0x_70, 0x_B4, 0x_D9, 0x_92, 0x_61, 0x_13, 0x_AF, 0x_EB, 0x_53, 0x_41, 0x_AB, 0x_A9, 0x_E8, 0x_F9,
		0x_5A, 0x_FB, 0x_10, 0x_D1, 0x_EC, 0x_6E, 0x_A8, 0x_63, 0x_87, 0x_A3, 0x_05, 0x_82, 0x_1E,
	];

	helper(S, BASE, 51_248_961);
}
// endregion
// region: s_has_whitespaces_and_534_762_444_in_base_73
#[test]
fn s_has_whitespaces_and_534_762_444_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0B,
		0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_03, 0x_4D, 0x_19, 0x_58, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_25, 0x_A4, 0x_B9, 0x_A1, 0x_6A, 0x_A5, 0x_F4, 0x_74, 0x_B3, 0x_5F, 0x_26, 0x_27, 0x_30, 0x_59,
		0x_78, 0x_67, 0x_5D, 0x_03, 0x_B5, 0x_2A, 0x_5B, 0x_83, 0x_E6, 0x_3C, 0x_1D, 0x_A7, 0x_82, 0x_4A, 0x_73,
		0x_77, 0x_65, 0x_0E, 0x_F2, 0x_35, 0x_58, 0x_E3, 0x_28, 0x_B0, 0x_7F, 0x_2E, 0x_B1, 0x_DD, 0x_CE, 0x_F9,
		0x_3F, 0x_D1, 0x_19, 0x_79, 0x_29, 0x_2C, 0x_DE, 0x_EF, 0x_21, 0x_66, 0x_BF, 0x_7A, 0x_4C, 0x_BB, 0x_DB,
		0x_4D, 0x_4E, 0x_3D, 0x_47, 0x_40, 0x_B6, 0x_52, 0x_15, 0x_C8, 0x_C4, 0x_E1, 0x_12, 0x_C7,
	];

	helper(S, BASE, 534_762_444);
}
// endregion
// region: s_has_whitespaces_and_3_in_base_113
#[test]
fn s_has_whitespaces_and_3_in_base_113() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_0D,
		0x_06,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_76, 0x_24, 0x_06, 0x_D5, 0x_5A, 0x_E4, 0x_31, 0x_AF, 0x_CC, 0x_CA, 0x_67, 0x_EE, 0x_C4, 0x_A2,
		0x_8C, 0x_E6, 0x_7B, 0x_7A, 0x_5C, 0x_57, 0x_29, 0x_A7, 0x_8E, 0x_86, 0x_58, 0x_BC, 0x_36, 0x_AC, 0x_16,
		0x_5B, 0x_D3, 0x_07, 0x_F1, 0x_85, 0x_E8, 0x_6C, 0x_25, 0x_17, 0x_94, 0x_B2, 0x_47, 0x_D0, 0x_89, 0x_D1,
		0x_E9, 0x_75, 0x_8A, 0x_72, 0x_A8, 0x_1D, 0x_B9, 0x_ED, 0x_48, 0x_92, 0x_1B, 0x_3B, 0x_9E, 0x_C7, 0x_60,
		0x_88, 0x_D6, 0x_12, 0x_42, 0x_35, 0x_A6, 0x_FE, 0x_3C, 0x_21, 0x_E3, 0x_DD, 0x_0F, 0x_B7, 0x_3A, 0x_8D,
		0x_19, 0x_77, 0x_08, 0x_03, 0x_9B, 0x_D4, 0x_F4, 0x_C9, 0x_13, 0x_15, 0x_38, 0x_97, 0x_4A, 0x_71, 0x_18,
		0x_C3, 0x_84, 0x_78, 0x_A4, 0x_FD, 0x_6F, 0x_C1, 0x_2A, 0x_E5, 0x_22, 0x_FB, 0x_EA, 0x_73, 0x_28, 0x_1F,
		0x_96, 0x_05, 0x_45, 0x_F5, 0x_F7, 0x_26, 0x_BE, 0x_34,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_87_in_base_113
#[test]
fn s_has_whitespaces_and_87_in_base_113() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_BC, 0x_A8, 0x_B2, 0x_46, 0x_75, 0x_D9, 0x_CC, 0x_84, 0x_06, 0x_33, 0x_10, 0x_FA, 0x_92, 0x_EA,
		0x_26, 0x_C8, 0x_15, 0x_5A, 0x_49, 0x_C5, 0x_E1, 0x_ED, 0x_04, 0x_54, 0x_C3, 0x_79, 0x_EC, 0x_3F, 0x_6A,
		0x_F6, 0x_31, 0x_7A, 0x_0F, 0x_39, 0x_8E, 0x_56, 0x_D7, 0x_BE, 0x_E5, 0x_28, 0x_51, 0x_01, 0x_42, 0x_99,
		0x_AF, 0x_23, 0x_53, 0x_0E, 0x_43, 0x_68, 0x_7D, 0x_94, 0x_A2, 0x_D5, 0x_1F, 0x_D0, 0x_BB, 0x_95, 0x_8C,
		0x_BA, 0x_74, 0x_6B, 0x_9C, 0x_DC, 0x_FC, 0x_34, 0x_E9, 0x_45, 0x_47, 0x_48, 0x_62, 0x_CF, 0x_66, 0x_AD,
		0x_D8, 0x_F8, 0x_29, 0x_86, 0x_18, 0x_DE, 0x_97, 0x_1D, 0x_87, 0x_3E, 0x_FD, 0x_3C, 0x_DD, 0x_98, 0x_91,
		0x_D3, 0x_F2, 0x_FE, 0x_A6, 0x_7F, 0x_08, 0x_02, 0x_73, 0x_32, 0x_E7, 0x_9B, 0x_90, 0x_52, 0x_9D, 0x_9E,
		0x_5E, 0x_7E, 0x_59, 0x_FB, 0x_11, 0x_6C, 0x_30, 0x_EB,
	];

	helper(S, BASE, 87);
}
// endregion
// region: s_has_whitespaces_and_741_in_base_113
#[test]
fn s_has_whitespaces_and_741_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_20,
		0x_0B, 0x_0B, 0x_20, 0x_09, 0x_97, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_BC, 0x_9E, 0x_F0, 0x_58, 0x_99, 0x_97, 0x_80, 0x_E8, 0x_74, 0x_39, 0x_D4, 0x_2E, 0x_BB, 0x_68,
		0x_66, 0x_33, 0x_9C, 0x_7C, 0x_E4, 0x_2F, 0x_3E, 0x_92, 0x_0F, 0x_81, 0x_26, 0x_47, 0x_6E, 0x_EA, 0x_8C,
		0x_57, 0x_A7, 0x_1A, 0x_FD, 0x_BA, 0x_FF, 0x_29, 0x_DE, 0x_05, 0x_1C, 0x_A0, 0x_6C, 0x_E9, 0x_82, 0x_B9,
		0x_E1, 0x_3B, 0x_D3, 0x_1E, 0x_88, 0x_22, 0x_19, 0x_5C, 0x_A3, 0x_1B, 0x_70, 0x_98, 0x_17, 0x_41, 0x_FA,
		0x_37, 0x_FE, 0x_8B, 0x_A8, 0x_56, 0x_E3, 0x_4A, 0x_72, 0x_86, 0x_C7, 0x_84, 0x_EE, 0x_B6, 0x_24, 0x_15,
		0x_60, 0x_5B, 0x_67, 0x_90, 0x_5A, 0x_A2, 0x_23, 0x_D9, 0x_5F, 0x_D0, 0x_C6, 0x_07, 0x_C5, 0x_A6, 0x_4C,
		0x_E7, 0x_EF, 0x_F8, 0x_6A, 0x_3F, 0x_FB, 0x_AE, 0x_B4, 0x_C3, 0x_35, 0x_4D, 0x_8A, 0x_76, 0x_0E, 0x_62,
		0x_B5, 0x_32, 0x_45, 0x_43, 0x_CD, 0x_CA, 0x_BD, 0x_6B,
	];

	helper(S, BASE, 741);
}
// endregion
// region: s_has_whitespaces_and_9_883_in_base_113
#[test]
fn s_has_whitespaces_and_9_883_in_base_113() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_94, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_B9, 0x_6A, 0x_64, 0x_21, 0x_1B, 0x_68, 0x_B3, 0x_1F, 0x_58, 0x_2C, 0x_E9, 0x_3E, 0x_CE, 0x_1A,
		0x_C4, 0x_51, 0x_96, 0x_D4, 0x_6D, 0x_F0, 0x_16, 0x_23, 0x_71, 0x_66, 0x_AA, 0x_CD, 0x_40, 0x_56, 0x_5A,
		0x_B5, 0x_3D, 0x_3C, 0x_65, 0x_EB, 0x_84, 0x_A2, 0x_88, 0x_BA, 0x_50, 0x_A0, 0x_22, 0x_C9, 0x_E6, 0x_A9,
		0x_15, 0x_B7, 0x_9D, 0x_C5, 0x_CF, 0x_7C, 0x_A8, 0x_39, 0x_E5, 0x_DD, 0x_17, 0x_49, 0x_B4, 0x_EE, 0x_70,
		0x_8E, 0x_27, 0x_7E, 0x_41, 0x_EC, 0x_76, 0x_10, 0x_74, 0x_9E, 0x_D5, 0x_53, 0x_8F, 0x_E3, 0x_02, 0x_69,
		0x_AD, 0x_0F, 0x_E1, 0x_5F, 0x_9A, 0x_07, 0x_33, 0x_C1, 0x_13, 0x_72, 0x_9C, 0x_83, 0x_94, 0x_7F, 0x_F7,
		0x_ED, 0x_19, 0x_FF, 0x_DE, 0x_44, 0x_87, 0x_4A, 0x_B0, 0x_5E, 0x_8A, 0x_5B, 0x_38, 0x_61, 0x_9F, 0x_F9,
		0x_3B, 0x_4B, 0x_F8, 0x_73, 0x_55, 0x_D0, 0x_47, 0x_EF,
	];

	helper(S, BASE, 9_883);
}
// endregion
// region: s_has_whitespaces_and_27_613_in_base_113
#[test]
fn s_has_whitespaces_and_27_613_in_base_113() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_B3, 0x_54, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_85, 0x_B3, 0x_7E, 0x_F4, 0x_5E, 0x_C6, 0x_76, 0x_6E, 0x_32, 0x_88, 0x_FE, 0x_33, 0x_71, 0x_3F,
		0x_C4, 0x_AD, 0x_FD, 0x_54, 0x_15, 0x_C8, 0x_28, 0x_E1, 0x_56, 0x_3D, 0x_77, 0x_22, 0x_55, 0x_68, 0x_17,
		0x_D4, 0x_4A, 0x_E2, 0x_BC, 0x_83, 0x_F2, 0x_A8, 0x_7D, 0x_AB, 0x_9C, 0x_B9, 0x_6F, 0x_F8, 0x_BD, 0x_E7,
		0x_F1, 0x_82, 0x_F7, 0x_6B, 0x_6C, 0x_4E, 0x_8F, 0x_7F, 0x_BB, 0x_ED, 0x_3A, 0x_78, 0x_B2, 0x_0E, 0x_DD,
		0x_67, 0x_58, 0x_CA, 0x_2A, 0x_E8, 0x_04, 0x_C2, 0x_FC, 0x_60, 0x_14, 0x_16, 0x_21, 0x_10, 0x_36, 0x_DA,
		0x_73, 0x_C0, 0x_A0, 0x_96, 0x_1B, 0x_53, 0x_3E, 0x_2F, 0x_3C, 0x_49, 0x_7B, 0x_23, 0x_06, 0x_D0, 0x_AC,
		0x_E5, 0x_E9, 0x_64, 0x_CE, 0x_7A, 0x_08, 0x_93, 0x_D1, 0x_2C, 0x_2E, 0x_97, 0x_8D, 0x_24, 0x_E6, 0x_A5,
		0x_CC, 0x_27, 0x_31, 0x_B8, 0x_86, 0x_E4, 0x_5D, 0x_B5,
	];

	helper(S, BASE, 27_613);
}
// endregion
// region: s_has_whitespaces_and_509_916_in_base_113
#[test]
fn s_has_whitespaces_and_509_916_in_base_113() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_80, 0x_66, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_B8, 0x_58, 0x_CA, 0x_B5, 0x_34, 0x_0F, 0x_C8, 0x_D9, 0x_71, 0x_4B, 0x_E7, 0x_F4, 0x_60, 0x_36,
		0x_2C, 0x_A7, 0x_4C, 0x_F3, 0x_18, 0x_39, 0x_55, 0x_EF, 0x_8A, 0x_15, 0x_88, 0x_2F, 0x_BB, 0x_57, 0x_7B,
		0x_FF, 0x_56, 0x_24, 0x_69, 0x_01, 0x_3F, 0x_F5, 0x_E2, 0x_B6, 0x_80, 0x_D2, 0x_7E, 0x_B2, 0x_DB, 0x_4E,
		0x_E1, 0x_48, 0x_C1, 0x_B7, 0x_68, 0x_DA, 0x_82, 0x_6E, 0x_3C, 0x_EC, 0x_A4, 0x_43, 0x_59, 0x_86, 0x_52,
		0x_3B, 0x_A1, 0x_13, 0x_65, 0x_50, 0x_04, 0x_3A, 0x_98, 0x_81, 0x_9B, 0x_64, 0x_CC, 0x_D4, 0x_FB, 0x_F1,
		0x_7F, 0x_97, 0x_D5, 0x_93, 0x_9F, 0x_1B, 0x_77, 0x_9C, 0x_49, 0x_C7, 0x_11, 0x_AA, 0x_96, 0x_16, 0x_CF,
		0x_F8, 0x_75, 0x_A0, 0x_CE, 0x_AB, 0x_ED, 0x_22, 0x_6D, 0x_B0, 0x_3E, 0x_9D, 0x_94, 0x_5B, 0x_5E, 0x_AE,
		0x_66, 0x_D7, 0x_90, 0x_62, 0x_A2, 0x_BC, 0x_5D, 0x_4D,
	];

	helper(S, BASE, 509_916);
}
// endregion
// region: s_has_whitespaces_and_8_001_931_in_base_113
#[test]
fn s_has_whitespaces_and_8_001_931_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_33, 0x_AC, 0x_77, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_78, 0x_8F, 0x_58, 0x_DF, 0x_33, 0x_94, 0x_71, 0x_5D, 0x_8B, 0x_C1, 0x_A4, 0x_86, 0x_6C, 0x_E1,
		0x_14, 0x_36, 0x_E4, 0x_1C, 0x_70, 0x_35, 0x_96, 0x_7E, 0x_CD, 0x_4B, 0x_B4, 0x_6D, 0x_C2, 0x_65, 0x_46,
		0x_F1, 0x_7F, 0x_67, 0x_FD, 0x_43, 0x_83, 0x_32, 0x_D0, 0x_B8, 0x_7A, 0x_62, 0x_E7, 0x_85, 0x_CB, 0x_4F,
		0x_7B, 0x_5A, 0x_E0, 0x_2A, 0x_A1, 0x_BA, 0x_80, 0x_1D, 0x_92, 0x_FA, 0x_A9, 0x_15, 0x_EE, 0x_3D, 0x_2F,
		0x_5F, 0x_AC, 0x_E3, 0x_41, 0x_03, 0x_A2, 0x_4D, 0x_FE, 0x_E9, 0x_61, 0x_81, 0x_BD, 0x_C7, 0x_11, 0x_5C,
		0x_77, 0x_D1, 0x_D5, 0x_1F, 0x_6F, 0x_BB, 0x_C5, 0x_9F, 0x_F5, 0x_26, 0x_3A, 0x_F9, 0x_23, 0x_C3, 0x_90,
		0x_D7, 0x_D8, 0x_B1, 0x_91, 0x_C0, 0x_3B, 0x_6E, 0x_29, 0x_6A, 0x_EB, 0x_3F, 0x_31, 0x_73, 0x_7C, 0x_EF,
		0x_9B, 0x_E2, 0x_18, 0x_89, 0x_34, 0x_13, 0x_27, 0x_28,
	];

	helper(S, BASE, 8_001_931);
}
// endregion
// region: s_has_whitespaces_and_63_483_002_in_base_113
#[test]
fn s_has_whitespaces_and_63_483_002_in_base_113() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_20,
		0x_20, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0D,
		0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_7C, 0x_23, 0x_D2, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_1F, 0x_53, 0x_3C, 0x_FC, 0x_71, 0x_C0, 0x_5D, 0x_9C, 0x_46, 0x_0E, 0x_22, 0x_1B, 0x_72, 0x_D6,
		0x_D3, 0x_C4, 0x_49, 0x_36, 0x_58, 0x_B9, 0x_17, 0x_B8, 0x_4C, 0x_FB, 0x_9F, 0x_C9, 0x_1D, 0x_4D, 0x_E6,
		0x_47, 0x_F9, 0x_63, 0x_D1, 0x_87, 0x_4E, 0x_DA, 0x_8F, 0x_DF, 0x_97, 0x_7B, 0x_44, 0x_B4, 0x_7C, 0x_C5,
		0x_66, 0x_A1, 0x_2F, 0x_78, 0x_96, 0x_B3, 0x_62, 0x_38, 0x_9D, 0x_A8, 0x_EE, 0x_67, 0x_8C, 0x_15, 0x_54,
		0x_02, 0x_1A, 0x_AB, 0x_1C, 0x_F4, 0x_28, 0x_BA, 0x_5A, 0x_4A, 0x_A7, 0x_B0, 0x_21, 0x_A2, 0x_D2, 0x_B5,
		0x_42, 0x_70, 0x_F7, 0x_10, 0x_BB, 0x_E4, 0x_D8, 0x_33, 0x_26, 0x_D7, 0x_86, 0x_05, 0x_9A, 0x_D9, 0x_31,
		0x_13, 0x_2C, 0x_27, 0x_D5, 0x_C1, 0x_6F, 0x_5B, 0x_50, 0x_F8, 0x_12, 0x_07, 0x_DB, 0x_A0, 0x_AD, 0x_6C,
		0x_77, 0x_6D, 0x_08, 0x_E0, 0x_DC, 0x_30, 0x_83, 0x_23,
	];

	helper(S, BASE, 63_483_002);
}
// endregion
// region: s_has_whitespaces_and_435_532_364_in_base_113
#[test]
fn s_has_whitespaces_and_435_532_364_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_0B,
		0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0A,
		0x_0C, 0x_0A, 0x_2F, 0x_74, 0x_9B, 0x_75, 0x_6B,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_E4, 0x_2F, 0x_BD, 0x_53, 0x_AC, 0x_E3, 0x_F8, 0x_DB, 0x_87, 0x_34, 0x_F0, 0x_DE, 0x_E1, 0x_43,
		0x_AA, 0x_02, 0x_1A, 0x_EB, 0x_9F, 0x_08, 0x_D0, 0x_C6, 0x_D3, 0x_CD, 0x_44, 0x_DA, 0x_E7, 0x_E6, 0x_88,
		0x_1B, 0x_7E, 0x_27, 0x_59, 0x_B4, 0x_EF, 0x_D4, 0x_EA, 0x_7D, 0x_62, 0x_A5, 0x_63, 0x_49, 0x_C0, 0x_BA,
		0x_9C, 0x_3B, 0x_BB, 0x_51, 0x_D6, 0x_5A, 0x_78, 0x_17, 0x_58, 0x_E5, 0x_67, 0x_7F, 0x_F6, 0x_31, 0x_66,
		0x_DD, 0x_CB, 0x_A4, 0x_71, 0x_75, 0x_54, 0x_13, 0x_21, 0x_F1, 0x_ED, 0x_F4, 0x_CE, 0x_98, 0x_D9, 0x_41,
		0x_74, 0x_A2, 0x_47, 0x_25, 0x_D1, 0x_6B, 0x_82, 0x_14, 0x_69, 0x_AE, 0x_BF, 0x_BC, 0x_2C, 0x_8A, 0x_3E,
		0x_45, 0x_B0, 0x_8D, 0x_12, 0x_E2, 0x_9B, 0x_2E, 0x_05, 0x_03, 0x_06, 0x_4C, 0x_65, 0x_4B, 0x_A9, 0x_FD,
		0x_9E, 0x_70, 0x_EE, 0x_26, 0x_8C, 0x_37, 0x_85, 0x_E0,
	];

	helper(S, BASE, 435_532_364);
}
// endregion
// region: s_has_whitespaces_and_6_in_base_193
#[test]
fn s_has_whitespaces_and_6_in_base_193() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0A,
		0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_F4, 0x_2F, 0x_D9, 0x_D3, 0x_79, 0x_64, 0x_C1, 0x_C2, 0x_95, 0x_A4, 0x_AB, 0x_D0, 0x_96, 0x_54,
		0x_4E, 0x_22, 0x_6A, 0x_9C, 0x_DE, 0x_40, 0x_D8, 0x_60, 0x_C4, 0x_82, 0x_99, 0x_DA, 0x_C6, 0x_7F, 0x_AD,
		0x_68, 0x_15, 0x_1E, 0x_3F, 0x_B8, 0x_F9, 0x_8C, 0x_8A, 0x_BC, 0x_F7, 0x_74, 0x_FE, 0x_EE, 0x_3C, 0x_49,
		0x_EA, 0x_8D, 0x_88, 0x_17, 0x_28, 0x_52, 0x_B2, 0x_A5, 0x_19, 0x_3D, 0x_AC, 0x_CB, 0x_A2, 0x_94, 0x_6E,
		0x_55, 0x_BA, 0x_10, 0x_45, 0x_A1, 0x_AE, 0x_67, 0x_8B, 0x_1F, 0x_D1, 0x_35, 0x_CC, 0x_FF, 0x_6D, 0x_DB,
		0x_6B, 0x_5B, 0x_36, 0x_AF, 0x_34, 0x_32, 0x_5A, 0x_72, 0x_98, 0x_01, 0x_9B, 0x_6F, 0x_21, 0x_93, 0x_F3,
		0x_29, 0x_ED, 0x_E2, 0x_7E, 0x_24, 0x_D4, 0x_06, 0x_51, 0x_FC, 0x_3B, 0x_AA, 0x_5D, 0x_FD, 0x_18, 0x_2C,
		0x_B1, 0x_CF, 0x_F2, 0x_E0, 0x_E9, 0x_26, 0x_81, 0x_C9, 0x_F5, 0x_4B, 0x_CE, 0x_CA, 0x_08, 0x_33, 0x_04,
		0x_B0, 0x_57, 0x_7A, 0x_7B, 0x_E6, 0x_11, 0x_59, 0x_7D, 0x_6C, 0x_E5, 0x_90, 0x_07, 0x_91, 0x_5E, 0x_C0,
		0x_A8, 0x_B9, 0x_1B, 0x_3E, 0x_CD, 0x_41, 0x_80, 0x_13, 0x_85, 0x_2A, 0x_75, 0x_E1, 0x_5F, 0x_61, 0x_62,
		0x_71, 0x_14, 0x_83, 0x_0F, 0x_65, 0x_39, 0x_A0, 0x_50, 0x_70, 0x_89, 0x_02, 0x_3A, 0x_77, 0x_A7, 0x_E8,
		0x_46, 0x_1D, 0x_97, 0x_42, 0x_30, 0x_A9, 0x_B5, 0x_FA, 0x_47, 0x_78, 0x_84, 0x_EB, 0x_37, 0x_DC, 0x_B3,
		0x_8F, 0x_0E, 0x_2E, 0x_12, 0x_23, 0x_73, 0x_8E, 0x_63, 0x_D5, 0x_C7, 0x_C3, 0x_4D, 0x_05,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_whitespaces_and_26_in_base_193
#[test]
fn s_has_whitespaces_and_26_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_09,
		0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_0B,
		0x_0C, 0x_0D, 0x_0D, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_0E, 0x_F9, 0x_C3, 0x_90, 0x_13, 0x_A1, 0x_55, 0x_23, 0x_E3, 0x_46, 0x_FF, 0x_C8, 0x_5D, 0x_C6,
		0x_24, 0x_C9, 0x_77, 0x_97, 0x_D0, 0x_2C, 0x_6B, 0x_1C, 0x_7C, 0x_E4, 0x_79, 0x_53, 0x_86, 0x_08, 0x_88,
		0x_4C, 0x_F4, 0x_47, 0x_F3, 0x_F8, 0x_67, 0x_01, 0x_E5, 0x_F5, 0x_6C, 0x_7B, 0x_E0, 0x_18, 0x_82, 0x_03,
		0x_32, 0x_DC, 0x_D4, 0x_29, 0x_FA, 0x_81, 0x_A6, 0x_22, 0x_73, 0x_C4, 0x_AF, 0x_E2, 0x_94, 0x_C0, 0x_B3,
		0x_AE, 0x_1E, 0x_98, 0x_8F, 0x_8A, 0x_EC, 0x_28, 0x_D6, 0x_16, 0x_87, 0x_A5, 0x_D2, 0x_BC, 0x_AB, 0x_6F,
		0x_CE, 0x_4B, 0x_BE, 0x_85, 0x_9F, 0x_80, 0x_CF, 0x_49, 0x_38, 0x_9E, 0x_3F, 0x_30, 0x_5F, 0x_59, 0x_F7,
		0x_04, 0x_91, 0x_BD, 0x_71, 0x_45, 0x_BF, 0x_AD, 0x_8D, 0x_26, 0x_DD, 0x_CD, 0x_D3, 0x_84, 0x_99, 0x_F6,
		0x_4D, 0x_1B, 0x_5E, 0x_8B, 0x_39, 0x_74, 0x_A3, 0x_A9, 0x_2A, 0x_DF, 0x_6A, 0x_70, 0x_33, 0x_FD, 0x_61,
		0x_92, 0x_FC, 0x_35, 0x_50, 0x_11, 0x_96, 0x_B0, 0x_9D, 0x_2F, 0x_4F, 0x_E9, 0x_4E, 0x_31, 0x_6D, 0x_B1,
		0x_36, 0x_D9, 0x_8E, 0x_B5, 0x_A4, 0x_AA, 0x_44, 0x_B6, 0x_43, 0x_E8, 0x_F1, 0x_89, 0x_15, 0x_EB, 0x_34,
		0x_C1, 0x_D7, 0x_41, 0x_05, 0x_56, 0x_9C, 0x_07, 0x_40, 0x_62, 0x_C2, 0x_CA, 0x_B8, 0x_EA, 0x_ED, 0x_19,
		0x_B2, 0x_10, 0x_A7, 0x_A8, 0x_42, 0x_DB, 0x_69, 0x_C5, 0x_72, 0x_76, 0x_5C, 0x_DE, 0x_65, 0x_F0, 0x_B4,
		0x_C7, 0x_B7, 0x_95, 0x_52, 0x_B9, 0x_1D, 0x_D1, 0x_8C, 0x_14, 0x_3B, 0x_1A, 0x_D5, 0x_AC,
	];

	helper(S, BASE, 26);
}
// endregion
// region: s_has_whitespaces_and_633_in_base_193
#[test]
fn s_has_whitespaces_and_633_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0B,
		0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_7B, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_B2, 0x_A5, 0x_7B, 0x_FE, 0x_E5, 0x_68, 0x_CA, 0x_AC, 0x_04, 0x_DE, 0x_F3, 0x_BF, 0x_BA, 0x_8A,
		0x_79, 0x_EE, 0x_AF, 0x_2E, 0x_4A, 0x_64, 0x_3F, 0x_54, 0x_05, 0x_AB, 0x_4F, 0x_69, 0x_A6, 0x_18, 0x_7F,
		0x_33, 0x_FC, 0x_C2, 0x_19, 0x_95, 0x_23, 0x_25, 0x_77, 0x_1E, 0x_D5, 0x_70, 0x_52, 0x_C9, 0x_EC, 0x_1B,
		0x_17, 0x_C3, 0x_E2, 0x_45, 0x_A7, 0x_9B, 0x_DD, 0x_78, 0x_5F, 0x_15, 0x_D4, 0x_B7, 0x_6C, 0x_B1, 0x_06,
		0x_7D, 0x_58, 0x_F2, 0x_4E, 0x_16, 0x_8B, 0x_8F, 0x_57, 0x_51, 0x_6B, 0x_44, 0x_B4, 0x_D1, 0x_DF, 0x_99,
		0x_C1, 0x_92, 0x_73, 0x_A1, 0x_B0, 0x_80, 0x_31, 0x_27, 0x_38, 0x_42, 0x_35, 0x_56, 0x_C8, 0x_B5, 0x_28,
		0x_60, 0x_3B, 0x_ED, 0x_67, 0x_1A, 0x_34, 0x_E6, 0x_F8, 0x_3D, 0x_6F, 0x_A2, 0x_81, 0x_11, 0x_FA, 0x_4B,
		0x_C6, 0x_8D, 0x_87, 0x_85, 0x_55, 0x_89, 0x_62, 0x_91, 0x_6E, 0x_9C, 0x_E8, 0x_26, 0x_B9, 0x_D2, 0x_48,
		0x_F7, 0x_DA, 0x_75, 0x_94, 0x_BC, 0x_F1, 0x_30, 0x_74, 0x_2A, 0x_02, 0x_43, 0x_5E, 0x_CC, 0x_84, 0x_1C,
		0x_FF, 0x_EB, 0x_36, 0x_D7, 0x_46, 0x_D3, 0x_9A, 0x_BE, 0x_0E, 0x_88, 0x_2C, 0x_63, 0x_0F, 0x_01, 0x_7A,
		0x_C7, 0x_E1, 0x_47, 0x_9F, 0x_37, 0x_07, 0x_5C, 0x_03, 0x_3C, 0x_F9, 0x_BD, 0x_72, 0x_E3, 0x_F0, 0x_14,
		0x_CE, 0x_A9, 0x_76, 0x_71, 0x_D0, 0x_B6, 0x_21, 0x_8E, 0x_EA, 0x_49, 0x_1F, 0x_DC, 0x_39, 0x_6D, 0x_AE,
		0x_9D, 0x_29, 0x_96, 0x_4C, 0x_59, 0x_AA, 0x_1D, 0x_C4, 0x_A0, 0x_D8, 0x_5D, 0x_B3, 0x_C0,
	];

	helper(S, BASE, 633);
}
// endregion
// region: s_has_whitespaces_and_6_260_in_base_193
#[test]
fn s_has_whitespaces_and_6_260_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_A6, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_19, 0x_08, 0x_E0, 0x_DA, 0x_98, 0x_2E, 0x_B4, 0x_A9, 0x_F2, 0x_15, 0x_7F, 0x_AE, 0x_46, 0x_72,
		0x_34, 0x_9C, 0x_12, 0x_70, 0x_69, 0x_DE, 0x_AB, 0x_76, 0x_13, 0x_29, 0x_0F, 0x_40, 0x_A0, 0x_4A, 0x_BE,
		0x_C5, 0x_92, 0x_A6, 0x_37, 0x_27, 0x_6C, 0x_CB, 0x_5E, 0x_FD, 0x_A8, 0x_1D, 0x_96, 0x_D4, 0x_1C, 0x_E7,
		0x_35, 0x_1B, 0x_B2, 0x_04, 0x_10, 0x_FC, 0x_87, 0x_4C, 0x_1A, 0x_CA, 0x_57, 0x_81, 0x_39, 0x_EF, 0x_38,
		0x_55, 0x_CC, 0x_53, 0x_E5, 0x_A3, 0x_79, 0x_66, 0x_06, 0x_95, 0x_ED, 0x_D6, 0x_30, 0x_2F, 0x_22, 0x_BF,
		0x_71, 0x_5C, 0x_6F, 0x_EB, 0x_2A, 0x_B6, 0x_AF, 0x_01, 0x_45, 0x_3B, 0x_DB, 0x_82, 0x_9E, 0x_D5, 0x_4B,
		0x_8C, 0x_9D, 0x_EC, 0x_6D, 0x_E9, 0x_49, 0x_05, 0x_C7, 0x_7E, 0x_91, 0x_21, 0x_B1, 0x_1E, 0x_A2, 0x_75,
		0x_B0, 0x_BC, 0x_D1, 0x_56, 0x_47, 0x_F7, 0x_59, 0x_6E, 0x_F4, 0x_03, 0x_18, 0x_E4, 0x_99, 0x_E6, 0x_9F,
		0x_C9, 0x_77, 0x_D8, 0x_4E, 0x_4D, 0x_58, 0x_E8, 0x_CE, 0x_86, 0x_AA, 0x_D2, 0x_7A, 0x_61, 0x_D0, 0x_3C,
		0x_83, 0x_C0, 0x_64, 0x_93, 0x_E1, 0x_32, 0x_28, 0x_02, 0x_26, 0x_B7, 0x_68, 0x_D7, 0x_8B, 0x_74, 0x_A1,
		0x_44, 0x_6B, 0x_F5, 0x_7C, 0x_D3, 0x_F1, 0x_FF, 0x_F8, 0x_42, 0x_B3, 0x_94, 0x_E2, 0x_50, 0x_A5, 0x_5D,
		0x_B5, 0x_9A, 0x_89, 0x_F9, 0x_8A, 0x_16, 0x_F0, 0x_AD, 0x_3D, 0x_97, 0x_FE, 0x_25, 0x_67, 0x_C2, 0x_84,
		0x_51, 0x_A4, 0x_BD, 0x_BA, 0x_A7, 0x_48, 0x_7B, 0x_FA, 0x_DF, 0x_0E, 0x_14, 0x_90, 0x_8E,
	];

	helper(S, BASE, 6_260);
}
// endregion
// region: s_has_whitespaces_and_11_973_in_base_193
#[test]
fn s_has_whitespaces_and_11_973_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0D,
		0x_0D, 0x_09, 0x_0D, 0x_D6, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_B4, 0x_5B, 0x_64, 0x_46, 0x_D2, 0x_39, 0x_B2, 0x_44, 0x_85, 0x_72, 0x_05, 0x_C5, 0x_B9, 0x_24,
		0x_E0, 0x_06, 0x_E5, 0x_11, 0x_1E, 0x_FC, 0x_28, 0x_98, 0x_BF, 0x_4C, 0x_7D, 0x_71, 0x_9D, 0x_56, 0x_DD,
		0x_74, 0x_5F, 0x_ED, 0x_4E, 0x_86, 0x_7E, 0x_8D, 0x_B1, 0x_77, 0x_D4, 0x_30, 0x_50, 0x_91, 0x_C6, 0x_17,
		0x_AD, 0x_CD, 0x_E3, 0x_33, 0x_9E, 0x_63, 0x_9B, 0x_C1, 0x_5E, 0x_89, 0x_F9, 0x_D5, 0x_12, 0x_A2, 0x_60,
		0x_EC, 0x_4F, 0x_D6, 0x_31, 0x_07, 0x_D1, 0x_CC, 0x_6E, 0x_7F, 0x_37, 0x_DF, 0x_79, 0x_F0, 0x_65, 0x_AE,
		0x_93, 0x_8B, 0x_92, 0x_59, 0x_E8, 0x_2E, 0x_F2, 0x_99, 0x_C7, 0x_AA, 0x_97, 0x_3C, 0x_A7, 0x_22, 0x_D3,
		0x_D8, 0x_B3, 0x_B6, 0x_F5, 0x_9C, 0x_81, 0x_3D, 0x_A3, 0x_55, 0x_EA, 0x_73, 0x_7B, 0x_C8, 0x_B8, 0x_18,
		0x_27, 0x_96, 0x_95, 0x_9F, 0x_AB, 0x_87, 0x_6B, 0x_16, 0x_EE, 0x_C9, 0x_BD, 0x_21, 0x_CB, 0x_8E, 0x_F1,
		0x_C4, 0x_43, 0x_82, 0x_14, 0x_CA, 0x_40, 0x_41, 0x_E6, 0x_6C, 0x_35, 0x_3F, 0x_FB, 0x_66, 0x_57, 0x_03,
		0x_76, 0x_02, 0x_D9, 0x_EB, 0x_08, 0x_10, 0x_A9, 0x_51, 0x_9A, 0x_F3, 0x_2A, 0x_94, 0x_3B, 0x_FF, 0x_49,
		0x_68, 0x_BB, 0x_DC, 0x_C3, 0x_83, 0x_E2, 0x_F6, 0x_FE, 0x_75, 0x_6A, 0x_7C, 0x_1D, 0x_52, 0x_DB, 0x_8F,
		0x_26, 0x_1A, 0x_A8, 0x_5A, 0x_FD, 0x_62, 0x_BC, 0x_4D, 0x_38, 0x_3E, 0x_34, 0x_E7, 0x_04, 0x_A1, 0x_32,
		0x_36, 0x_FA, 0x_C0, 0x_01, 0x_1F, 0x_8C, 0x_0F, 0x_DA, 0x_3A, 0x_88, 0x_8A, 0x_25, 0x_CF,
	];

	helper(S, BASE, 11_973);
}
// endregion
// region: s_has_whitespaces_and_252_510_in_base_193
#[test]
fn s_has_whitespaces_and_252_510_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_09, 0x_0B, 0x_B1, 0x_05, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_04, 0x_8C, 0x_FF, 0x_82, 0x_80, 0x_B1, 0x_0E, 0x_73, 0x_D2, 0x_06, 0x_A6, 0x_25, 0x_61, 0x_DF,
		0x_B0, 0x_DA, 0x_B8, 0x_B2, 0x_67, 0x_38, 0x_66, 0x_DE, 0x_54, 0x_B3, 0x_60, 0x_7D, 0x_57, 0x_D9, 0x_13,
		0x_E3, 0x_76, 0x_86, 0x_45, 0x_F4, 0x_EF, 0x_4B, 0x_2C, 0x_42, 0x_C7, 0x_6A, 0x_30, 0x_D1, 0x_DD, 0x_6D,
		0x_68, 0x_52, 0x_AE, 0x_FA, 0x_7E, 0x_3E, 0x_1F, 0x_65, 0x_7C, 0x_D4, 0x_2E, 0x_4C, 0x_59, 0x_D7, 0x_7B,
		0x_1D, 0x_56, 0x_E6, 0x_70, 0x_26, 0x_8A, 0x_6E, 0x_51, 0x_11, 0x_BD, 0x_F2, 0x_23, 0x_C0, 0x_F0, 0x_55,
		0x_18, 0x_E1, 0x_78, 0x_1E, 0x_24, 0x_AF, 0x_F1, 0x_77, 0x_FD, 0x_E5, 0x_90, 0x_81, 0x_3D, 0x_19, 0x_CB,
		0x_37, 0x_BF, 0x_C6, 0x_F5, 0x_C4, 0x_49, 0x_E4, 0x_5F, 0x_A5, 0x_28, 0x_12, 0x_A0, 0x_15, 0x_8B, 0x_72,
		0x_5D, 0x_3C, 0x_CD, 0x_7A, 0x_9A, 0x_A9, 0x_A2, 0x_4E, 0x_D3, 0x_B7, 0x_AD, 0x_40, 0x_3B, 0x_74, 0x_39,
		0x_CF, 0x_6B, 0x_8F, 0x_E2, 0x_89, 0x_31, 0x_21, 0x_EB, 0x_1B, 0x_B9, 0x_93, 0x_6F, 0x_0F, 0x_5B, 0x_22,
		0x_F7, 0x_ED, 0x_1C, 0x_4D, 0x_79, 0x_9B, 0x_C9, 0x_6C, 0x_BC, 0x_17, 0x_CE, 0x_63, 0x_C2, 0x_D5, 0x_E8,
		0x_05, 0x_83, 0x_D0, 0x_F8, 0x_5C, 0x_8D, 0x_95, 0x_CA, 0x_35, 0x_E0, 0x_DB, 0x_10, 0x_34, 0x_9F, 0x_98,
		0x_D6, 0x_E9, 0x_DC, 0x_C3, 0x_3F, 0x_94, 0x_02, 0x_5A, 0x_B5, 0x_5E, 0x_9D, 0x_36, 0x_A4, 0x_69, 0x_62,
		0x_53, 0x_B4, 0x_43, 0x_27, 0x_D8, 0x_8E, 0x_07, 0x_48, 0x_A3, 0x_1A, 0x_AC, 0x_AA, 0x_96,
	];

	helper(S, BASE, 252_510);
}
// endregion
// region: s_has_whitespaces_and_5_675_609_in_base_193
#[test]
fn s_has_whitespaces_and_5_675_609_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_20,
		0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0A,
		0x_09, 0x_09, 0x_0A, 0x_0B, 0x_29, 0x_83, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_CF, 0x_8F, 0x_47, 0x_34, 0x_05, 0x_07, 0x_7B, 0x_C9, 0x_DF, 0x_80, 0x_C0, 0x_5E, 0x_19, 0x_8A,
		0x_2E, 0x_C5, 0x_24, 0x_86, 0x_94, 0x_DC, 0x_DB, 0x_53, 0x_69, 0x_7D, 0x_39, 0x_65, 0x_70, 0x_5D, 0x_C2,
		0x_67, 0x_A9, 0x_E3, 0x_9D, 0x_4A, 0x_96, 0x_D2, 0x_C4, 0x_1B, 0x_21, 0x_D3, 0x_E7, 0x_01, 0x_CA, 0x_4E,
		0x_71, 0x_57, 0x_55, 0x_C1, 0x_A5, 0x_F4, 0x_AA, 0x_91, 0x_E2, 0x_1C, 0x_27, 0x_97, 0x_42, 0x_D7, 0x_E1,
		0x_EE, 0x_61, 0x_C8, 0x_28, 0x_16, 0x_D6, 0x_F1, 0x_B6, 0x_04, 0x_63, 0x_F3, 0x_83, 0x_E4, 0x_66, 0x_3C,
		0x_3F, 0x_11, 0x_41, 0x_3B, 0x_B8, 0x_82, 0x_A4, 0x_A8, 0x_E0, 0x_FE, 0x_1F, 0x_AF, 0x_B2, 0x_D8, 0x_77,
		0x_F5, 0x_F8, 0x_D5, 0x_44, 0x_0F, 0x_C7, 0x_4F, 0x_76, 0x_CB, 0x_D9, 0x_58, 0x_F2, 0x_62, 0x_3E, 0x_8D,
		0x_1A, 0x_5F, 0x_EC, 0x_7C, 0x_A1, 0x_BC, 0x_F6, 0x_C3, 0x_FD, 0x_22, 0x_60, 0x_E6, 0x_A2, 0x_AD, 0x_BA,
		0x_51, 0x_6C, 0x_79, 0x_75, 0x_C6, 0x_B3, 0x_72, 0x_0E, 0x_26, 0x_87, 0x_46, 0x_54, 0x_23, 0x_AB, 0x_CE,
		0x_48, 0x_6D, 0x_BD, 0x_73, 0x_8B, 0x_14, 0x_25, 0x_74, 0x_CC, 0x_2F, 0x_33, 0x_EF, 0x_99, 0x_FF, 0x_93,
		0x_5B, 0x_B7, 0x_29, 0x_06, 0x_FC, 0x_9F, 0x_B0, 0x_5C, 0x_7A, 0x_BF, 0x_68, 0x_D4, 0x_A6, 0x_B9, 0x_52,
		0x_64, 0x_43, 0x_56, 0x_5A, 0x_B5, 0x_9B, 0x_EA, 0x_90, 0x_50, 0x_FA, 0x_36, 0x_85, 0x_BE, 0x_EB, 0x_F0,
		0x_BB, 0x_8C, 0x_CD, 0x_92, 0x_2A, 0x_37, 0x_84, 0x_35, 0x_9E, 0x_7E, 0x_A3, 0x_32, 0x_A0,
	];

	helper(S, BASE, 5_675_609);
}
// endregion
// region: s_has_whitespaces_and_41_339_864_in_base_193
#[test]
fn s_has_whitespaces_and_41_339_864_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_B6, 0x_4C, 0x_02, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_B9, 0x_ED, 0x_9F, 0x_C0, 0x_B6, 0x_AB, 0x_44, 0x_F7, 0x_B4, 0x_EA, 0x_7A, 0x_CF, 0x_D3, 0x_38,
		0x_CA, 0x_1A, 0x_73, 0x_55, 0x_9E, 0x_41, 0x_BA, 0x_1E, 0x_AF, 0x_6E, 0x_58, 0x_88, 0x_1D, 0x_98, 0x_54,
		0x_7E, 0x_E9, 0x_5A, 0x_DA, 0x_EF, 0x_8D, 0x_C6, 0x_29, 0x_B8, 0x_2A, 0x_40, 0x_7D, 0x_FB, 0x_74, 0x_42,
		0x_64, 0x_10, 0x_93, 0x_F4, 0x_7C, 0x_EC, 0x_C1, 0x_99, 0x_04, 0x_61, 0x_5C, 0x_DD, 0x_E5, 0x_BB, 0x_84,
		0x_DB, 0x_E1, 0x_3B, 0x_6B, 0x_15, 0x_6A, 0x_72, 0x_EE, 0x_43, 0x_25, 0x_E7, 0x_F3, 0x_65, 0x_C3, 0x_BC,
		0x_F8, 0x_89, 0x_6C, 0x_D5, 0x_68, 0x_33, 0x_BD, 0x_3D, 0x_AD, 0x_79, 0x_A1, 0x_14, 0x_87, 0x_E8, 0x_C7,
		0x_4A, 0x_3F, 0x_A8, 0x_D4, 0x_0E, 0x_9B, 0x_C5, 0x_7B, 0x_FD, 0x_9C, 0x_A6, 0x_E0, 0x_76, 0x_28, 0x_59,
		0x_F0, 0x_1B, 0x_32, 0x_B1, 0x_94, 0x_75, 0x_97, 0x_36, 0x_D0, 0x_11, 0x_45, 0x_9D, 0x_63, 0x_2C, 0x_49,
		0x_37, 0x_48, 0x_D9, 0x_81, 0x_67, 0x_21, 0x_E4, 0x_56, 0x_F9, 0x_F5, 0x_CE, 0x_23, 0x_22, 0x_8C, 0x_CD,
		0x_5E, 0x_0F, 0x_FA, 0x_FC, 0x_6F, 0x_7F, 0x_D1, 0x_8E, 0x_60, 0x_4C, 0x_4B, 0x_31, 0x_C8, 0x_2F, 0x_A3,
		0x_4E, 0x_77, 0x_B5, 0x_5F, 0x_DC, 0x_3E, 0x_B2, 0x_50, 0x_B3, 0x_02, 0x_CC, 0x_B0, 0x_05, 0x_3C, 0x_E2,
		0x_34, 0x_47, 0x_C2, 0x_96, 0x_92, 0x_66, 0x_17, 0x_A7, 0x_12, 0x_D6, 0x_5B, 0x_A0, 0x_1F, 0x_53, 0x_A2,
		0x_35, 0x_08, 0x_90, 0x_07, 0x_AE, 0x_F2, 0x_03, 0x_E3, 0x_5D, 0x_BE, 0x_F6, 0x_85, 0x_E6,
	];

	helper(S, BASE, 41_339_864);
}
// endregion
// region: s_has_whitespaces_and_610_951_841_in_base_193
#[test]
fn s_has_whitespaces_and_610_951_841_in_base_193() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0D,
		0x_0B, 0x_0C, 0x_FA, 0x_B7, 0x_66, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_44, 0x_FE, 0x_C9, 0x_89, 0x_1F, 0x_DD, 0x_F7, 0x_EE, 0x_81, 0x_7B, 0x_51, 0x_5E, 0x_11, 0x_6B,
		0x_2F, 0x_3A, 0x_8D, 0x_67, 0x_57, 0x_B0, 0x_73, 0x_F6, 0x_F3, 0x_CB, 0x_4D, 0x_DC, 0x_41, 0x_5F, 0x_1E,
		0x_D5, 0x_C3, 0x_D3, 0x_43, 0x_72, 0x_71, 0x_74, 0x_86, 0x_BA, 0x_56, 0x_6E, 0x_F0, 0x_5B, 0x_3E, 0x_A0,
		0x_45, 0x_4B, 0x_EA, 0x_8F, 0x_32, 0x_F9, 0x_69, 0x_60, 0x_79, 0x_D8, 0x_31, 0x_3D, 0x_68, 0x_0E, 0x_9E,
		0x_1D, 0x_47, 0x_4C, 0x_ED, 0x_C6, 0x_E3, 0x_E9, 0x_9B, 0x_63, 0x_54, 0x_E4, 0x_02, 0x_6C, 0x_9C, 0x_04,
		0x_D4, 0x_16, 0x_C7, 0x_FD, 0x_D7, 0x_1B, 0x_A6, 0x_B2, 0x_28, 0x_FA, 0x_18, 0x_BD, 0x_23, 0x_EB, 0x_01,
		0x_F1, 0x_91, 0x_24, 0x_3B, 0x_94, 0x_0F, 0x_CC, 0x_99, 0x_D2, 0x_D9, 0x_50, 0x_6F, 0x_96, 0x_E8, 0x_87,
		0x_03, 0x_62, 0x_05, 0x_AC, 0x_BB, 0x_40, 0x_4A, 0x_3F, 0x_30, 0x_53, 0x_13, 0x_2E, 0x_FF, 0x_26, 0x_C2,
		0x_6D, 0x_AB, 0x_DB, 0x_95, 0x_D1, 0x_B6, 0x_17, 0x_F2, 0x_36, 0x_39, 0x_A4, 0x_48, 0x_A1, 0x_FB, 0x_7F,
		0x_80, 0x_5C, 0x_33, 0x_59, 0x_E1, 0x_B8, 0x_27, 0x_3C, 0x_65, 0x_CF, 0x_2C, 0x_49, 0x_6A, 0x_5A, 0x_93,
		0x_E0, 0x_C1, 0x_1A, 0x_76, 0x_A3, 0x_29, 0x_64, 0x_C5, 0x_EC, 0x_7D, 0x_66, 0x_19, 0x_9D, 0x_7A, 0x_A7,
		0x_CD, 0x_B4, 0x_92, 0x_9A, 0x_CA, 0x_55, 0x_37, 0x_77, 0x_22, 0x_52, 0x_B1, 0x_A8, 0x_4F, 0x_58, 0x_21,
		0x_08, 0x_C4, 0x_E6, 0x_B3, 0x_85, 0x_83, 0x_AD, 0x_5D, 0x_A9, 0x_B7, 0x_DF, 0x_E7, 0x_EF,
	];

	helper(S, BASE, 610_951_841);
}
// endregion
// region: s_has_whitespaces_and_7_in_base_247
#[test]
fn s_has_whitespaces_and_7_in_base_247() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_09,
		0x_20, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_5E, 0x_82, 0x_72, 0x_B1, 0x_BD, 0x_C9, 0x_E4, 0x_46, 0x_DB, 0x_4F, 0x_41, 0x_21, 0x_12, 0x_17,
		0x_54, 0x_A7, 0x_D3, 0x_2F, 0x_30, 0x_E5, 0x_91, 0x_57, 0x_16, 0x_C4, 0x_1B, 0x_05, 0x_6C, 0x_9A, 0x_10,
		0x_CB, 0x_39, 0x_1A, 0x_E1, 0x_7D, 0x_63, 0x_FF, 0x_04, 0x_38, 0x_B2, 0x_71, 0x_A4, 0x_88, 0x_67, 0x_7F,
		0x_6D, 0x_4B, 0x_F2, 0x_25, 0x_F3, 0x_DF, 0x_D7, 0x_BF, 0x_D9, 0x_75, 0x_8F, 0x_86, 0x_06, 0x_EF, 0x_A3,
		0x_73, 0x_EE, 0x_7C, 0x_A6, 0x_3F, 0x_A9, 0x_F9, 0x_1E, 0x_CD, 0x_CF, 0x_65, 0x_4D, 0x_6E, 0x_AD, 0x_AF,
		0x_EC, 0x_79, 0x_98, 0x_B8, 0x_55, 0x_48, 0x_3D, 0x_89, 0x_64, 0x_C5, 0x_87, 0x_51, 0x_3C, 0x_AC, 0x_D1,
		0x_96, 0x_FD, 0x_8E, 0x_7B, 0x_47, 0x_B9, 0x_2C, 0x_8B, 0x_3E, 0x_07, 0x_D6, 0x_53, 0x_B4, 0x_BB, 0x_6A,
		0x_1D, 0x_CA, 0x_BE, 0x_E2, 0x_D2, 0x_B3, 0x_B6, 0x_0E, 0x_8C, 0x_F5, 0x_28, 0x_C3, 0x_90, 0x_DE, 0x_7E,
		0x_5A, 0x_5F, 0x_A1, 0x_37, 0x_76, 0x_23, 0x_A5, 0x_3B, 0x_AB, 0x_4E, 0x_B0, 0x_93, 0x_66, 0x_9E, 0x_CE,
		0x_9F, 0x_92, 0x_01, 0x_68, 0x_62, 0x_84, 0x_59, 0x_29, 0x_83, 0x_56, 0x_E6, 0x_E3, 0x_6B, 0x_5B, 0x_F4,
		0x_31, 0x_8A, 0x_80, 0x_D0, 0x_B5, 0x_DA, 0x_50, 0x_44, 0x_32, 0x_33, 0x_34, 0x_FE, 0x_70, 0x_08, 0x_B7,
		0x_13, 0x_FB, 0x_99, 0x_C0, 0x_11, 0x_F6, 0x_F1, 0x_ED, 0x_5C, 0x_52, 0x_97, 0x_A8, 0x_95, 0x_1C, 0x_03,
		0x_DD, 0x_24, 0x_BC, 0x_3A, 0x_9B, 0x_E9, 0x_19, 0x_FA, 0x_A0, 0x_60, 0x_5D, 0x_7A, 0x_35, 0x_42, 0x_14,
		0x_85, 0x_D4, 0x_F7, 0x_43, 0x_D5, 0x_C7, 0x_69, 0x_C8, 0x_6F, 0x_78, 0x_74, 0x_BA, 0x_58, 0x_45, 0x_40,
		0x_D8, 0x_CC, 0x_36, 0x_F0, 0x_4C, 0x_EA, 0x_AA, 0x_A2, 0x_81, 0x_C6, 0x_C2, 0x_E8, 0x_1F, 0x_49, 0x_15,
		0x_AE, 0x_94, 0x_02, 0x_27, 0x_0F, 0x_2E, 0x_26, 0x_9C, 0x_2A, 0x_E7, 0x_61, 0x_77, 0x_C1, 0x_9D, 0x_F8,
		0x_18, 0x_E0, 0x_EB, 0x_8D, 0x_DC, 0x_22, 0x_4A,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_29_in_base_247
#[test]
fn s_has_whitespaces_and_29_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_5A, 0x_11, 0x_94, 0x_F5, 0x_04, 0x_A2, 0x_37, 0x_9B, 0x_85, 0x_3F, 0x_BB, 0x_8C, 0x_38, 0x_B0,
		0x_5B, 0x_48, 0x_F7, 0x_16, 0x_68, 0x_92, 0x_E7, 0x_FC, 0x_CF, 0x_55, 0x_36, 0x_BC, 0x_C2, 0x_31, 0x_96,
		0x_76, 0x_1C, 0x_B8, 0x_EB, 0x_8A, 0x_8B, 0x_A7, 0x_B2, 0x_C5, 0x_54, 0x_DF, 0x_D9, 0x_B4, 0x_19, 0x_08,
		0x_F2, 0x_D8, 0x_42, 0x_5C, 0x_13, 0x_67, 0x_84, 0x_69, 0x_BA, 0x_3E, 0x_8E, 0x_E1, 0x_F9, 0x_CA, 0x_5E,
		0x_D1, 0x_95, 0x_F4, 0x_B5, 0x_C1, 0x_72, 0x_E3, 0x_D6, 0x_29, 0x_7B, 0x_81, 0x_70, 0x_3D, 0x_88, 0x_98,
		0x_E6, 0x_A9, 0x_A5, 0x_AA, 0x_25, 0x_64, 0x_65, 0x_45, 0x_A0, 0x_B6, 0x_C7, 0x_5D, 0x_24, 0x_49, 0x_30,
		0x_80, 0x_A6, 0x_1E, 0x_46, 0x_D3, 0x_2F, 0x_9F, 0x_FB, 0x_63, 0x_33, 0x_99, 0x_87, 0x_6C, 0x_DA, 0x_8D,
		0x_FF, 0x_78, 0x_9A, 0x_35, 0x_4B, 0x_51, 0x_D7, 0x_39, 0x_B3, 0x_3A, 0x_EF, 0x_52, 0x_E9, 0x_18, 0x_66,
		0x_56, 0x_F0, 0x_4A, 0x_A1, 0x_C4, 0x_EE, 0x_3C, 0x_89, 0x_06, 0x_FA, 0x_9D, 0x_7F, 0x_5F, 0x_C9, 0x_79,
		0x_58, 0x_90, 0x_7E, 0x_6E, 0x_D0, 0x_2A, 0x_0F, 0x_34, 0x_23, 0x_FE, 0x_6B, 0x_CD, 0x_F6, 0x_CB, 0x_91,
		0x_59, 0x_74, 0x_10, 0x_EC, 0x_B7, 0x_41, 0x_7D, 0x_21, 0x_40, 0x_AB, 0x_6D, 0x_E5, 0x_C6, 0x_4E, 0x_EA,
		0x_9E, 0x_D2, 0x_4D, 0x_4F, 0x_2E, 0x_15, 0x_1A, 0x_57, 0x_32, 0x_75, 0x_2C, 0x_6F, 0x_B9, 0x_CC, 0x_BE,
		0x_27, 0x_DB, 0x_A3, 0x_83, 0x_E0, 0x_86, 0x_3B, 0x_1D, 0x_A8, 0x_07, 0x_97, 0x_22, 0x_B1, 0x_9C, 0x_F1,
		0x_8F, 0x_E2, 0x_05, 0x_F8, 0x_ED, 0x_D5, 0x_43, 0x_D4, 0x_E8, 0x_44, 0x_14, 0x_AC, 0x_AE, 0x_BF, 0x_73,
		0x_AF, 0x_02, 0x_CE, 0x_47, 0x_17, 0x_C8, 0x_FD, 0x_60, 0x_12, 0x_01, 0x_F3, 0x_82, 0x_DD, 0x_A4, 0x_93,
		0x_E4, 0x_50, 0x_BD, 0x_C0, 0x_26, 0x_53, 0x_7A, 0x_61, 0x_0E, 0x_6A, 0x_28, 0x_7C, 0x_77, 0x_AD, 0x_62,
		0x_1B, 0x_4C, 0x_1F, 0x_DC, 0x_C3, 0x_DE, 0x_71,
	];

	helper(S, BASE, 29);
}
// endregion
// region: s_has_whitespaces_and_160_in_base_247
#[test]
fn s_has_whitespaces_and_160_in_base_247() {
	const S: &[u8] = &[
		0x_0C, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_AD, 0x_B8, 0x_1C, 0x_9D, 0x_A5, 0x_33, 0x_15, 0x_B7, 0x_E7, 0x_34, 0x_C0, 0x_A8, 0x_9B, 0x_59, 0x_65,
		0x_3B, 0x_EF, 0x_91, 0x_4A, 0x_D9, 0x_63, 0x_57, 0x_F7, 0x_B0, 0x_A2, 0x_93, 0x_C1, 0x_DF, 0x_25, 0x_CB,
		0x_04, 0x_66, 0x_7D, 0x_FE, 0x_DE, 0x_9C, 0x_7C, 0x_9E, 0x_5A, 0x_29, 0x_3F, 0x_22, 0x_43, 0x_D4, 0x_98,
		0x_95, 0x_BA, 0x_28, 0x_4F, 0x_81, 0x_74, 0x_50, 0x_D1, 0x_CA, 0x_2E, 0x_83, 0x_E5, 0x_7B, 0x_64, 0x_01,
		0x_D0, 0x_70, 0x_24, 0x_5B, 0x_62, 0x_56, 0x_46, 0x_E6, 0x_14, 0x_1B, 0x_55, 0x_87, 0x_1A, 0x_39, 0x_76,
		0x_8E, 0x_EC, 0x_79, 0x_60, 0x_ED, 0x_05, 0x_EB, 0x_13, 0x_7E, 0x_77, 0x_5E, 0x_D8, 0x_1D, 0x_8B, 0x_45,
		0x_2C, 0x_A6, 0x_E0, 0x_27, 0x_EE, 0x_52, 0x_4D, 0x_C4, 0x_B6, 0x_8A, 0x_D2, 0x_C3, 0x_84, 0x_6F, 0x_23,
		0x_8F, 0x_97, 0x_9A, 0x_88, 0x_4C, 0x_C2, 0x_4B, 0x_03, 0x_A1, 0x_31, 0x_FA, 0x_41, 0x_3E, 0x_D6, 0x_85,
		0x_2A, 0x_5C, 0x_6E, 0x_17, 0x_BD, 0x_35, 0x_F0, 0x_8C, 0x_A0, 0x_68, 0x_D7, 0x_3A, 0x_BC, 0x_44, 0x_92,
		0x_75, 0x_40, 0x_36, 0x_10, 0x_89, 0x_F1, 0x_54, 0x_A3, 0x_6C, 0x_B5, 0x_FF, 0x_47, 0x_A9, 0x_18, 0x_0F,
		0x_21, 0x_32, 0x_A4, 0x_C7, 0x_4E, 0x_5D, 0x_FC, 0x_12, 0x_11, 0x_DB, 0x_69, 0x_DD, 0x_82, 0x_B1, 0x_71,
		0x_38, 0x_8D, 0x_AA, 0x_86, 0x_F9, 0x_90, 0x_5F, 0x_1F, 0x_72, 0x_1E, 0x_C8, 0x_E4, 0x_3D, 0x_58, 0x_53,
		0x_42, 0x_F3, 0x_94, 0x_FD, 0x_0E, 0x_61, 0x_BF, 0x_19, 0x_EA, 0x_C9, 0x_08, 0x_3C, 0x_26, 0x_06, 0x_73,
		0x_C6, 0x_96, 0x_E3, 0x_DC, 0x_AF, 0x_E2, 0x_E8, 0x_D5, 0x_CD, 0x_6B, 0x_F5, 0x_16, 0x_AE, 0x_67, 0x_C5,
		0x_A7, 0x_CE, 0x_DA, 0x_7F, 0x_F2, 0x_7A, 0x_E1, 0x_48, 0x_F8, 0x_FB, 0x_78, 0x_6A, 0x_B4, 0x_BE, 0x_E9,
		0x_CC, 0x_B3, 0x_07, 0x_02, 0x_9F, 0x_30, 0x_B9, 0x_BB, 0x_6D, 0x_D3, 0x_2F, 0x_F4, 0x_51, 0x_49, 0x_CF,
		0x_AB, 0x_99, 0x_AC, 0x_37, 0x_80, 0x_F6, 0x_B2,
	];

	helper(S, BASE, 160);
}
// endregion
// region: s_has_whitespaces_and_4_246_in_base_247
#[test]
fn s_has_whitespaces_and_4_246_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_9A,
		0x_C4,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_77, 0x_38, 0x_3C, 0x_27, 0x_79, 0x_B4, 0x_10, 0x_F3, 0x_34, 0x_FB, 0x_39, 0x_35, 0x_A4, 0x_E6,
		0x_2F, 0x_5C, 0x_9A, 0x_43, 0x_13, 0x_7A, 0x_04, 0x_F8, 0x_A2, 0x_F7, 0x_A3, 0x_55, 0x_A7, 0x_60, 0x_AA,
		0x_94, 0x_75, 0x_C0, 0x_2C, 0x_59, 0x_70, 0x_FA, 0x_D8, 0x_58, 0x_7D, 0x_01, 0x_16, 0x_06, 0x_1F, 0x_33,
		0x_64, 0x_E8, 0x_C4, 0x_AF, 0x_87, 0x_6D, 0x_B3, 0x_52, 0x_8A, 0x_F2, 0x_7F, 0x_62, 0x_15, 0x_B5, 0x_6C,
		0x_FE, 0x_A1, 0x_CE, 0x_03, 0x_E2, 0x_BD, 0x_B2, 0x_42, 0x_E3, 0x_61, 0x_7C, 0x_99, 0x_B8, 0x_54, 0x_EB,
		0x_76, 0x_CD, 0x_49, 0x_23, 0x_95, 0x_D9, 0x_9F, 0x_F4, 0x_47, 0x_1B, 0x_D2, 0x_63, 0x_48, 0x_40, 0x_74,
		0x_82, 0x_B1, 0x_1D, 0x_FD, 0x_DC, 0x_6F, 0x_AD, 0x_D6, 0x_91, 0x_C8, 0x_28, 0x_A5, 0x_93, 0x_5B, 0x_EA,
		0x_73, 0x_3E, 0x_2A, 0x_DB, 0x_D0, 0x_86, 0x_69, 0x_B6, 0x_9D, 0x_5E, 0x_EC, 0x_E7, 0x_9C, 0x_24, 0x_BC,
		0x_BB, 0x_25, 0x_FC, 0x_89, 0x_6E, 0x_ED, 0x_B0, 0x_08, 0x_DA, 0x_E4, 0x_31, 0x_5A, 0x_C2, 0x_DE, 0x_CF,
		0x_68, 0x_72, 0x_4F, 0x_05, 0x_AB, 0x_CC, 0x_88, 0x_A8, 0x_6A, 0x_7E, 0x_1A, 0x_F9, 0x_D5, 0x_21, 0x_44,
		0x_0F, 0x_29, 0x_3D, 0x_A6, 0x_D7, 0x_97, 0x_8F, 0x_3A, 0x_98, 0x_41, 0x_E0, 0x_4A, 0x_8B, 0x_CB, 0x_6B,
		0x_5D, 0x_EF, 0x_71, 0x_2E, 0x_78, 0x_DF, 0x_C5, 0x_66, 0x_EE, 0x_11, 0x_E1, 0x_F6, 0x_3B, 0x_C6, 0x_8E,
		0x_4C, 0x_84, 0x_12, 0x_51, 0x_56, 0x_14, 0x_81, 0x_90, 0x_4D, 0x_DD, 0x_83, 0x_26, 0x_B7, 0x_36, 0x_02,
		0x_45, 0x_8D, 0x_46, 0x_32, 0x_BE, 0x_F5, 0x_19, 0x_F1, 0x_5F, 0x_AE, 0x_92, 0x_1E, 0x_57, 0x_53, 0x_A9,
		0x_E5, 0x_67, 0x_BA, 0x_BF, 0x_C7, 0x_4E, 0x_C1, 0x_C3, 0x_E9, 0x_C9, 0x_07, 0x_96, 0x_80, 0x_B9, 0x_17,
		0x_22, 0x_D1, 0x_3F, 0x_FF, 0x_9B, 0x_7B, 0x_37, 0x_18, 0x_AC, 0x_0E, 0x_D3, 0x_30, 0x_9E, 0x_CA, 0x_A0,
		0x_F0, 0x_D4, 0x_1C, 0x_50, 0x_65, 0x_85, 0x_8C,
	];

	helper(S, BASE, 4_246);
}
// endregion
// region: s_has_whitespaces_and_88_671_in_base_247
#[test]
fn s_has_whitespaces_and_88_671_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_C9, 0x_ED, 0x_81,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_C9, 0x_A9, 0x_5C, 0x_15, 0x_BD, 0x_28, 0x_1B, 0x_CC, 0x_A1, 0x_4F, 0x_5B, 0x_D3, 0x_24, 0x_90,
		0x_89, 0x_FF, 0x_91, 0x_DF, 0x_AB, 0x_8F, 0x_85, 0x_44, 0x_86, 0x_08, 0x_71, 0x_9C, 0x_67, 0x_D1, 0x_C7,
		0x_83, 0x_78, 0x_1E, 0x_35, 0x_74, 0x_BC, 0x_4D, 0x_22, 0x_0E, 0x_14, 0x_40, 0x_29, 0x_16, 0x_79, 0x_EB,
		0x_D8, 0x_DB, 0x_11, 0x_E9, 0x_99, 0x_1D, 0x_37, 0x_75, 0x_FC, 0x_C2, 0x_97, 0x_43, 0x_21, 0x_D2, 0x_E4,
		0x_3B, 0x_6E, 0x_D5, 0x_61, 0x_FE, 0x_62, 0x_F5, 0x_F6, 0x_FA, 0x_32, 0x_DC, 0x_CB, 0x_B7, 0x_8A, 0x_4C,
		0x_E5, 0x_58, 0x_1F, 0x_72, 0x_7E, 0x_FB, 0x_38, 0x_98, 0x_F4, 0x_F2, 0x_3E, 0x_C6, 0x_CA, 0x_AF, 0x_5A,
		0x_57, 0x_EF, 0x_19, 0x_41, 0x_D7, 0x_DE, 0x_3C, 0x_9B, 0x_A2, 0x_6C, 0x_BB, 0x_D9, 0x_68, 0x_C3, 0x_BF,
		0x_73, 0x_8B, 0x_C5, 0x_33, 0x_E0, 0x_6A, 0x_ED, 0x_A6, 0x_BA, 0x_1A, 0x_EE, 0x_C8, 0x_F1, 0x_CD, 0x_9F,
		0x_63, 0x_DD, 0x_2C, 0x_87, 0x_D6, 0x_1C, 0x_02, 0x_3D, 0x_65, 0x_0F, 0x_8C, 0x_49, 0x_B9, 0x_9E, 0x_E1,
		0x_7D, 0x_55, 0x_E8, 0x_AA, 0x_CF, 0x_C1, 0x_B1, 0x_AE, 0x_AD, 0x_01, 0x_7F, 0x_10, 0x_FD, 0x_66, 0x_E3,
		0x_47, 0x_CE, 0x_30, 0x_26, 0x_B5, 0x_45, 0x_18, 0x_F7, 0x_B0, 0x_48, 0x_F0, 0x_B2, 0x_2A, 0x_05, 0x_A0,
		0x_06, 0x_A5, 0x_96, 0x_5F, 0x_12, 0x_34, 0x_54, 0x_4A, 0x_23, 0x_17, 0x_94, 0x_F3, 0x_82, 0x_B3, 0x_46,
		0x_76, 0x_B6, 0x_53, 0x_6B, 0x_E2, 0x_39, 0x_9A, 0x_F8, 0x_7C, 0x_7B, 0x_36, 0x_DA, 0x_92, 0x_AC, 0x_69,
		0x_F9, 0x_42, 0x_B4, 0x_E6, 0x_A4, 0x_25, 0x_13, 0x_8D, 0x_2E, 0x_80, 0x_B8, 0x_A7, 0x_BE, 0x_52, 0x_3A,
		0x_4E, 0x_07, 0x_70, 0x_3F, 0x_A8, 0x_C0, 0x_03, 0x_27, 0x_2F, 0x_7A, 0x_88, 0x_6F, 0x_59, 0x_56, 0x_EA,
		0x_4B, 0x_D0, 0x_E7, 0x_77, 0x_A3, 0x_84, 0x_5E, 0x_6D, 0x_C4, 0x_50, 0x_D4, 0x_9D, 0x_51, 0x_95, 0x_93,
		0x_5D, 0x_EC, 0x_60, 0x_04, 0x_8E, 0x_81, 0x_31,
	];

	helper(S, BASE, 88_671);
}
// endregion
// region: s_has_whitespaces_and_490_092_in_base_247
#[test]
fn s_has_whitespaces_and_490_092_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_23, 0x_23, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_F8, 0x_93, 0x_9B, 0x_7A, 0x_9A, 0x_CD, 0x_A5, 0x_23, 0x_16, 0x_92, 0x_44, 0x_D9, 0x_F3, 0x_E0,
		0x_12, 0x_69, 0x_E8, 0x_39, 0x_58, 0x_2C, 0x_84, 0x_26, 0x_98, 0x_8D, 0x_1B, 0x_5B, 0x_C9, 0x_8A, 0x_A6,
		0x_65, 0x_07, 0x_7D, 0x_BC, 0x_38, 0x_34, 0x_02, 0x_4A, 0x_5D, 0x_6E, 0x_43, 0x_60, 0x_FC, 0x_01, 0x_1E,
		0x_D0, 0x_C2, 0x_40, 0x_5C, 0x_73, 0x_A0, 0x_77, 0x_A2, 0x_F6, 0x_AC, 0x_94, 0x_33, 0x_76, 0x_C4, 0x_49,
		0x_95, 0x_E7, 0x_2F, 0x_F0, 0x_FE, 0x_32, 0x_48, 0x_D5, 0x_DE, 0x_97, 0x_E6, 0x_DD, 0x_F1, 0x_4C, 0x_7E,
		0x_46, 0x_CA, 0x_71, 0x_B4, 0x_3B, 0x_1A, 0x_A3, 0x_DC, 0x_A7, 0x_EE, 0x_47, 0x_C7, 0x_C1, 0x_8F, 0x_CF,
		0x_CC, 0x_51, 0x_B0, 0x_6A, 0x_37, 0x_F5, 0x_DA, 0x_8E, 0x_13, 0x_6B, 0x_E1, 0x_04, 0x_50, 0x_A8, 0x_21,
		0x_ED, 0x_C5, 0x_7F, 0x_85, 0x_9C, 0x_C0, 0x_D6, 0x_14, 0x_19, 0x_9D, 0x_53, 0x_66, 0x_78, 0x_7C, 0x_99,
		0x_F7, 0x_B3, 0x_1C, 0x_03, 0x_08, 0x_C8, 0x_24, 0x_4D, 0x_91, 0x_DF, 0x_3E, 0x_BB, 0x_74, 0x_22, 0x_45,
		0x_B1, 0x_D2, 0x_EB, 0x_FA, 0x_F2, 0x_BA, 0x_63, 0x_EF, 0x_64, 0x_30, 0x_A1, 0x_FF, 0x_87, 0x_BD, 0x_62,
		0x_B6, 0x_88, 0x_AD, 0x_17, 0x_8B, 0x_AF, 0x_B2, 0x_81, 0x_E4, 0x_5E, 0x_5A, 0x_36, 0x_42, 0x_31, 0x_D4,
		0x_D7, 0x_0F, 0x_B8, 0x_83, 0x_2E, 0x_FB, 0x_B7, 0x_A4, 0x_11, 0x_1F, 0x_EC, 0x_70, 0x_F4, 0x_8C, 0x_F9,
		0x_CB, 0x_AB, 0x_C3, 0x_5F, 0x_A9, 0x_18, 0x_6F, 0x_10, 0x_E5, 0x_C6, 0x_D1, 0x_15, 0x_3C, 0x_E2, 0x_75,
		0x_B5, 0x_AA, 0x_27, 0x_90, 0x_68, 0x_3A, 0x_61, 0x_6C, 0x_29, 0x_B9, 0x_AE, 0x_89, 0x_E3, 0x_4F, 0x_05,
		0x_55, 0x_BE, 0x_4E, 0x_35, 0x_57, 0x_54, 0x_59, 0x_EA, 0x_56, 0x_25, 0x_1D, 0x_CE, 0x_D8, 0x_96, 0x_2A,
		0x_E9, 0x_67, 0x_86, 0x_3F, 0x_28, 0x_06, 0x_FD, 0x_79, 0x_80, 0x_9E, 0x_7B, 0x_52, 0x_82, 0x_72, 0x_6D,
		0x_9F, 0x_3D, 0x_41, 0x_D3, 0x_BF, 0x_0E, 0x_DB,
	];

	helper(S, BASE, 490_092);
}
// endregion
// region: s_has_whitespaces_and_6_199_242_in_base_247
#[test]
fn s_has_whitespaces_and_6_199_242_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_20,
		0x_05, 0x_7D, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_B2, 0x_B5, 0x_3B, 0x_CC, 0x_95, 0x_D0, 0x_87, 0x_5D, 0x_E3, 0x_6A, 0x_84, 0x_AC, 0x_0E, 0x_17,
		0x_5F, 0x_69, 0x_A0, 0x_CE, 0x_EE, 0x_41, 0x_49, 0x_35, 0x_7B, 0x_DE, 0x_B0, 0x_FC, 0x_75, 0x_1D, 0x_21,
		0x_9D, 0x_8D, 0x_4A, 0x_77, 0x_E5, 0x_F1, 0x_C1, 0x_8E, 0x_3F, 0x_16, 0x_62, 0x_B9, 0x_F9, 0x_73, 0x_53,
		0x_11, 0x_3A, 0x_07, 0x_F6, 0x_4E, 0x_56, 0x_8B, 0x_A1, 0x_18, 0x_BC, 0x_9B, 0x_1B, 0x_DF, 0x_BF, 0x_28,
		0x_37, 0x_B3, 0x_F0, 0x_93, 0x_68, 0x_3C, 0x_36, 0x_D3, 0x_08, 0x_A3, 0x_6B, 0x_64, 0x_13, 0x_70, 0x_5A,
		0x_8A, 0x_AA, 0x_4F, 0x_5C, 0x_67, 0x_AD, 0x_42, 0x_8F, 0x_1C, 0x_A4, 0x_45, 0x_6E, 0x_82, 0x_7A, 0x_1F,
		0x_CB, 0x_AE, 0x_B6, 0x_E6, 0x_2C, 0x_81, 0x_D2, 0x_C0, 0x_D4, 0x_32, 0x_90, 0x_05, 0x_46, 0x_D7, 0x_C5,
		0x_02, 0x_30, 0x_39, 0x_29, 0x_98, 0x_AF, 0x_EA, 0x_D1, 0x_EF, 0x_25, 0x_BE, 0x_D6, 0x_40, 0x_9C, 0x_27,
		0x_F2, 0x_EC, 0x_F7, 0x_BA, 0x_96, 0x_54, 0x_23, 0x_14, 0x_66, 0x_EB, 0x_4D, 0x_E0, 0x_33, 0x_C3, 0x_E8,
		0x_F5, 0x_43, 0x_C6, 0x_61, 0x_B4, 0x_D9, 0x_F3, 0x_0F, 0x_6D, 0x_6C, 0x_D5, 0x_5E, 0x_C2, 0x_A8, 0x_1A,
		0x_79, 0x_7D, 0x_2E, 0x_15, 0x_A2, 0x_24, 0x_26, 0x_19, 0x_12, 0x_48, 0x_CA, 0x_2A, 0x_BB, 0x_10, 0x_B7,
		0x_71, 0x_31, 0x_55, 0x_47, 0x_C4, 0x_DB, 0x_FE, 0x_9A, 0x_E2, 0x_FB, 0x_FF, 0x_91, 0x_A9, 0x_1E, 0x_97,
		0x_A7, 0x_65, 0x_C9, 0x_83, 0x_6F, 0x_74, 0x_06, 0x_51, 0x_80, 0x_8C, 0x_60, 0x_DD, 0x_99, 0x_57, 0x_5B,
		0x_4B, 0x_3E, 0x_E7, 0x_44, 0x_4C, 0x_DA, 0x_CF, 0x_59, 0x_E4, 0x_03, 0x_7C, 0x_38, 0x_E1, 0x_89, 0x_01,
		0x_B8, 0x_DC, 0x_D8, 0x_76, 0x_CD, 0x_FD, 0x_7E, 0x_A6, 0x_F4, 0x_50, 0x_9F, 0x_ED, 0x_52, 0x_86, 0x_92,
		0x_FA, 0x_22, 0x_7F, 0x_85, 0x_E9, 0x_78, 0x_9E, 0x_88, 0x_04, 0x_B1, 0x_C8, 0x_F8, 0x_94, 0x_A5, 0x_AB,
		0x_34, 0x_72, 0x_58, 0x_63, 0x_BD, 0x_C7, 0x_3D,
	];

	helper(S, BASE, 6_199_242);
}
// endregion
// region: s_has_whitespaces_and_70_020_746_in_base_247
#[test]
fn s_has_whitespaces_and_70_020_746_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_B5, 0x_E9, 0x_F9, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_A9, 0x_58, 0x_1F, 0x_B5, 0x_C2, 0x_EF, 0x_1E, 0x_5E, 0x_55, 0x_56, 0x_76, 0x_27, 0x_E4, 0x_03,
		0x_3B, 0x_BC, 0x_E0, 0x_CE, 0x_0E, 0x_34, 0x_E1, 0x_83, 0x_E5, 0x_38, 0x_07, 0x_68, 0x_9C, 0x_CF, 0x_66,
		0x_9A, 0x_D2, 0x_C6, 0x_33, 0x_9B, 0x_BA, 0x_B1, 0x_7C, 0x_41, 0x_74, 0x_AA, 0x_CB, 0x_C5, 0x_CA, 0x_36,
		0x_D0, 0x_CD, 0x_3D, 0x_A6, 0x_D5, 0x_EE, 0x_54, 0x_46, 0x_69, 0x_80, 0x_D3, 0x_04, 0x_B0, 0x_26, 0x_84,
		0x_15, 0x_49, 0x_F8, 0x_DC, 0x_FD, 0x_D6, 0x_9D, 0x_8C, 0x_EB, 0x_71, 0x_9E, 0x_43, 0x_22, 0x_2F, 0x_BB,
		0x_7E, 0x_8B, 0x_F7, 0x_6F, 0x_5A, 0x_8A, 0x_87, 0x_B8, 0x_08, 0x_FE, 0x_1B, 0x_77, 0x_6A, 0x_70, 0x_C9,
		0x_ED, 0x_BD, 0x_BF, 0x_6B, 0x_48, 0x_62, 0x_7A, 0x_1A, 0x_A0, 0x_2E, 0x_1D, 0x_11, 0x_28, 0x_97, 0x_C0,
		0x_4A, 0x_DA, 0x_C7, 0x_75, 0x_D4, 0x_10, 0x_16, 0x_B7, 0x_4E, 0x_8F, 0x_D7, 0x_FB, 0x_73, 0x_82, 0x_01,
		0x_F4, 0x_7F, 0x_37, 0x_05, 0x_BE, 0x_44, 0x_98, 0x_79, 0x_5C, 0x_D1, 0x_29, 0x_57, 0x_21, 0x_24, 0x_EA,
		0x_2A, 0x_4C, 0x_4B, 0x_45, 0x_A1, 0x_A3, 0x_F2, 0x_19, 0x_E7, 0x_F6, 0x_DD, 0x_12, 0x_B3, 0x_C3, 0x_90,
		0x_81, 0x_E3, 0x_5B, 0x_3E, 0x_FF, 0x_06, 0x_C1, 0x_63, 0x_FA, 0x_E9, 0x_A4, 0x_C8, 0x_40, 0x_E6, 0x_5F,
		0x_35, 0x_AF, 0x_6E, 0x_50, 0x_1C, 0x_59, 0x_F5, 0x_85, 0x_DE, 0x_4D, 0x_F9, 0x_3A, 0x_6C, 0x_47, 0x_EC,
		0x_17, 0x_8E, 0x_65, 0x_89, 0x_52, 0x_88, 0x_C4, 0x_F0, 0x_3C, 0x_A8, 0x_64, 0x_A2, 0x_86, 0x_E2, 0x_92,
		0x_FC, 0x_61, 0x_91, 0x_D9, 0x_3F, 0x_51, 0x_6D, 0x_F1, 0x_B4, 0x_13, 0x_94, 0x_B9, 0x_53, 0x_93, 0x_99,
		0x_AC, 0x_D8, 0x_E8, 0x_2C, 0x_67, 0x_DF, 0x_30, 0x_18, 0x_F3, 0x_78, 0x_42, 0x_0F, 0x_DB, 0x_AE, 0x_25,
		0x_14, 0x_7D, 0x_32, 0x_A5, 0x_60, 0x_23, 0x_CC, 0x_9F, 0x_5D, 0x_31, 0x_B6, 0x_39, 0x_A7, 0x_95, 0x_72,
		0x_96, 0x_4F, 0x_B2, 0x_8D, 0x_7B, 0x_02, 0x_AD,
	];

	helper(S, BASE, 70_020_746);
}
// endregion
// region: s_has_whitespaces_and_397_736_110_in_base_247
#[test]
fn s_has_whitespaces_and_397_736_110_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0D,
		0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_9A, 0x_8B, 0x_95,
		0x_28,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_3B, 0x_61, 0x_5E, 0x_08, 0x_F8, 0x_A7, 0x_8C, 0x_BE, 0x_4B, 0x_76, 0x_85, 0x_66, 0x_48, 0x_1B,
		0x_63, 0x_58, 0x_EC, 0x_D9, 0x_EE, 0x_FE, 0x_A1, 0x_88, 0x_52, 0x_6C, 0x_13, 0x_9A, 0x_59, 0x_93, 0x_80,
		0x_C6, 0x_D2, 0x_F3, 0x_F5, 0x_AC, 0x_31, 0x_FB, 0x_12, 0x_1F, 0x_27, 0x_B8, 0x_C5, 0x_71, 0x_3A, 0x_99,
		0x_A4, 0x_2A, 0x_6B, 0x_D5, 0x_4E, 0x_C7, 0x_30, 0x_72, 0x_A0, 0x_F0, 0x_79, 0x_33, 0x_A2, 0x_45, 0x_19,
		0x_97, 0x_14, 0x_50, 0x_F7, 0x_7A, 0x_68, 0x_1C, 0x_EF, 0x_37, 0x_8E, 0x_54, 0x_AE, 0x_E6, 0x_F9, 0x_95,
		0x_77, 0x_90, 0x_18, 0x_03, 0x_06, 0x_15, 0x_DD, 0x_38, 0x_44, 0x_AA, 0x_49, 0x_E4, 0x_7F, 0x_56, 0x_FD,
		0x_E0, 0x_5D, 0x_8F, 0x_67, 0x_DA, 0x_B7, 0x_FA, 0x_8B, 0x_75, 0x_D3, 0x_D0, 0x_DC, 0x_21, 0x_02, 0x_7C,
		0x_C8, 0x_78, 0x_A9, 0x_29, 0x_CD, 0x_07, 0x_FF, 0x_B3, 0x_83, 0x_46, 0x_9D, 0x_C1, 0x_B5, 0x_41, 0x_11,
		0x_F6, 0x_1E, 0x_96, 0x_5A, 0x_DE, 0x_6D, 0x_2F, 0x_4F, 0x_FC, 0x_26, 0x_25, 0x_53, 0x_2E, 0x_C2, 0x_5B,
		0x_3E, 0x_3D, 0x_24, 0x_01, 0x_D1, 0x_32, 0x_64, 0x_74, 0x_87, 0x_3F, 0x_8D, 0x_B0, 0x_22, 0x_E2, 0x_CA,
		0x_05, 0x_6F, 0x_F2, 0x_CB, 0x_B9, 0x_A6, 0x_17, 0x_A5, 0x_B2, 0x_5C, 0x_B1, 0x_28, 0x_D8, 0x_E1, 0x_F1,
		0x_34, 0x_BF, 0x_16, 0x_C0, 0x_7D, 0x_40, 0x_86, 0x_4A, 0x_04, 0x_89, 0x_73, 0x_6E, 0x_9F, 0x_C9, 0x_A3,
		0x_62, 0x_EB, 0x_CE, 0x_36, 0x_D4, 0x_E9, 0x_98, 0x_23, 0x_BC, 0x_E5, 0x_AF, 0x_B6, 0x_35, 0x_1D, 0x_84,
		0x_47, 0x_E7, 0x_69, 0x_F4, 0x_BA, 0x_C3, 0x_39, 0x_E8, 0x_D6, 0x_AB, 0x_EA, 0x_70, 0x_60, 0x_4C, 0x_8A,
		0x_82, 0x_DB, 0x_91, 0x_BB, 0x_42, 0x_51, 0x_AD, 0x_57, 0x_B4, 0x_81, 0x_9C, 0x_0E, 0x_55, 0x_10, 0x_DF,
		0x_A8, 0x_0F, 0x_3C, 0x_7E, 0x_94, 0x_BD, 0x_7B, 0x_CF, 0x_4D, 0x_1A, 0x_92, 0x_9E, 0x_43, 0x_2C, 0x_E3,
		0x_9B, 0x_6A, 0x_5F, 0x_65, 0x_CC, 0x_ED, 0x_C4,
	];

	helper(S, BASE, 397_736_110);
}
// endregion
// region: s_has_signs_and_8_in_base_2
#[test]
fn s_has_signs_and_8_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_4B, 0x_D3, 0x_D3,
		0x_D3,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_4B,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_signs_and_95_in_base_2
#[test]
fn s_has_signs_and_95_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_C5, 0x_49, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_C5,
	];

	helper(S, BASE, 95);
}
// endregion
// region: s_has_signs_and_340_in_base_2
#[test]
fn s_has_signs_and_340_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_85, 0x_A8, 0x_85, 0x_A8, 0x_85, 0x_A8, 0x_85, 0x_A8, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_85,
	];

	helper(S, BASE, 340);
}
// endregion
// region: s_has_signs_and_1_775_in_base_2
#[test]
fn s_has_signs_and_1_775_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_30, 0x_30, 0x_DC, 0x_30, 0x_30, 0x_30, 0x_DC,
		0x_30, 0x_30, 0x_30, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_30,
	];

	helper(S, BASE, 1_775);
}
// endregion
// region: s_has_signs_and_94_958_in_base_2
#[test]
fn s_has_signs_and_94_958_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_B0, 0x_B3, 0x_B0, 0x_B0, 0x_B0, 0x_B3, 0x_B3, 0x_B0,
		0x_B3, 0x_B0, 0x_B0, 0x_B0, 0x_B3, 0x_B0, 0x_B0, 0x_B0, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_B0,
	];

	helper(S, BASE, 94_958);
}
// endregion
// region: s_has_signs_and_177_009_in_base_2
#[test]
fn s_has_signs_and_177_009_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_5A, 0x_5C, 0x_5A, 0x_5C, 0x_5A, 0x_5A, 0x_5C, 0x_5C, 0x_5A, 0x_5A,
		0x_5C, 0x_5A, 0x_5A, 0x_5A, 0x_5C, 0x_5C, 0x_5C, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_5A,
	];

	helper(S, BASE, 177_009);
}
// endregion
// region: s_has_signs_and_3_007_746_in_base_2
#[test]
fn s_has_signs_and_3_007_746_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_41, 0x_B7, 0x_41, 0x_41, 0x_B7, 0x_41, 0x_41, 0x_41, 0x_41, 0x_B7,
		0x_B7, 0x_41, 0x_B7, 0x_41, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_41, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_41,
	];

	helper(S, BASE, 3_007_746);
}
// endregion
// region: s_has_signs_and_97_609_227_in_base_2
#[test]
fn s_has_signs_and_97_609_227_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_90, 0x_C2, 0x_90, 0x_90, 0x_90, 0x_C2,
		0x_90, 0x_C2, 0x_C2, 0x_C2, 0x_90, 0x_C2, 0x_90, 0x_90, 0x_C2, 0x_C2, 0x_90, 0x_90, 0x_C2, 0x_C2, 0x_C2,
		0x_C2, 0x_C2, 0x_90, 0x_C2, 0x_90, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_90,
	];

	helper(S, BASE, 97_609_227);
}
// endregion
// region: s_has_signs_and_439_506_734_in_base_2
#[test]
fn s_has_signs_and_439_506_734_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_64, 0x_64, 0x_51, 0x_64, 0x_51, 0x_51,
		0x_51, 0x_64, 0x_64, 0x_51, 0x_51, 0x_64, 0x_51, 0x_51, 0x_64, 0x_51, 0x_64, 0x_51, 0x_64, 0x_64, 0x_64,
		0x_51, 0x_51, 0x_64, 0x_51, 0x_64, 0x_64, 0x_64, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_64,
	];

	helper(S, BASE, 439_506_734);
}
// endregion
// region: s_has_signs_and_4_in_base_3
#[test]
fn s_has_signs_and_4_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_A7, 0x_A7,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_A7, 0x_4A,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_signs_and_86_in_base_3
#[test]
fn s_has_signs_and_86_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_38, 0x_25, 0x_25, 0x_38, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_38, 0x_45,
	];

	helper(S, BASE, 86);
}
// endregion
// region: s_has_signs_and_817_in_base_3
#[test]
fn s_has_signs_and_817_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_4F, 0x_3B, 0x_4F, 0x_3B, 0x_3B, 0x_A3, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_3B, 0x_4F, 0x_A3,
	];

	helper(S, BASE, 817);
}
// endregion
// region: s_has_signs_and_7_320_in_base_3
#[test]
fn s_has_signs_and_7_320_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_80, 0x_3F, 0x_80, 0x_3F, 0x_3F, 0x_80, 0x_3F, 0x_80, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_80, 0x_33,
	];

	helper(S, BASE, 7_320);
}
// endregion
// region: s_has_signs_and_83_733_in_base_3
#[test]
fn s_has_signs_and_83_733_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_DF, 0x_DF,
		0x_91, 0x_AA, 0x_91, 0x_AA, 0x_DF, 0x_AA, 0x_91, 0x_AA, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_DF, 0x_AA,
	];

	helper(S, BASE, 83_733);
}
// endregion
// region: s_has_signs_and_949_446_in_base_3
#[test]
fn s_has_signs_and_949_446_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_07, 0x_9F, 0x_07, 0x_1A, 0x_1A, 0x_9F, 0x_1A, 0x_07, 0x_1A, 0x_07, 0x_9F,
		0x_1A, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_07, 0x_9F,
	];

	helper(S, BASE, 949_446);
}
// endregion
// region: s_has_signs_and_8_328_289_in_base_3
#[test]
fn s_has_signs_and_8_328_289_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_C4, 0x_78, 0x_F3, 0x_78, 0x_F3,
		0x_F3, 0x_F3, 0x_C4, 0x_F3, 0x_F3, 0x_78, 0x_C4, 0x_F3, 0x_C4, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_F3, 0x_C4, 0x_78,
	];

	helper(S, BASE, 8_328_289);
}
// endregion
// region: s_has_signs_and_57_398_873_in_base_3
#[test]
fn s_has_signs_and_57_398_873_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_70,
		0x_70, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_70, 0x_70, 0x_70, 0x_70, 0x_BF, 0x_BF, 0x_70,
		0x_28,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_70, 0x_28,
	];

	helper(S, BASE, 57_398_873);
}
// endregion
// region: s_has_signs_and_777_279_337_in_base_3
#[test]
fn s_has_signs_and_777_279_337_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_56, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_18, 0x_18, 0x_18, 0x_56, 0x_C4, 0x_56,
		0x_18, 0x_56, 0x_56, 0x_18, 0x_C4, 0x_18, 0x_56, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_18, 0x_56,
	];

	helper(S, BASE, 777_279_337);
}
// endregion
// region: s_has_signs_and_5_in_base_5
#[test]
fn s_has_signs_and_5_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_F9, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_F9, 0x_F8, 0x_1D, 0x_6A,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_signs_and_92_in_base_5
#[test]
fn s_has_signs_and_92_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_F4, 0x_F4, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_3F, 0x_AF, 0x_F4, 0x_81,
	];

	helper(S, BASE, 92);
}
// endregion
// region: s_has_signs_and_145_in_base_5
#[test]
fn s_has_signs_and_145_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_C9, 0x_F7, 0x_18, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_C9, 0x_DF, 0x_17, 0x_18,
	];

	helper(S, BASE, 145);
}
// endregion
// region: s_has_signs_and_8_693_in_base_5
#[test]
fn s_has_signs_and_8_693_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_E7, 0x_9D, 0x_7F, 0x_E7, 0x_9D, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_5F, 0x_E7, 0x_9D, 0x_7F,
	];

	helper(S, BASE, 8_693);
}
// endregion
// region: s_has_signs_and_71_982_in_base_5
#[test]
fn s_has_signs_and_71_982_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_05,
		0x_9F, 0x_F4, 0x_F4, 0x_05, 0x_89, 0x_AA,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_89, 0x_AA, 0x_9F, 0x_05,
	];

	helper(S, BASE, 71_982);
}
// endregion
// region: s_has_signs_and_750_996_in_base_5
#[test]
fn s_has_signs_and_750_996_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_8B, 0x_3D,
		0x_7E, 0x_AF, 0x_8B, 0x_93, 0x_3D, 0x_3D, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_8B, 0x_93, 0x_7E, 0x_3D,
	];

	helper(S, BASE, 750_996);
}
// endregion
// region: s_has_signs_and_5_178_186_in_base_5
#[test]
fn s_has_signs_and_5_178_186_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_3F, 0x_39, 0x_1A, 0x_1A, 0x_3F, 0x_59, 0x_59, 0x_3F, 0x_3F, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_1A, 0x_3F, 0x_39, 0x_50,
	];

	helper(S, BASE, 5_178_186);
}
// endregion
// region: s_has_signs_and_32_987_668_in_base_5
#[test]
fn s_has_signs_and_32_987_668_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_1C, 0x_83, 0x_EE, 0x_53, 0x_83,
		0x_83, 0x_B6, 0x_83, 0x_83, 0x_1C, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_83, 0x_53, 0x_1C, 0x_EE,
	];

	helper(S, BASE, 32_987_668);
}
// endregion
// region: s_has_signs_and_586_093_525_in_base_5
#[test]
fn s_has_signs_and_586_093_525_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_67, 0x_67, 0x_49, 0x_49, 0x_49, 0x_D7, 0x_F7, 0x_F7, 0x_F7, 0x_C3, 0x_D7, 0x_49, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_D7, 0x_67, 0x_C3, 0x_F7,
	];

	helper(S, BASE, 586_093_525);
}
// endregion
// region: s_has_signs_and_3_in_base_7
#[test]
fn s_has_signs_and_3_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_5E, 0x_5B, 0x_7F, 0x_16, 0x_C1, 0x_1A,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_signs_and_79_in_base_7
#[test]
fn s_has_signs_and_79_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_E6, 0x_B6, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_E6, 0x_5F, 0x_98, 0x_B6, 0x_25, 0x_F7,
	];

	helper(S, BASE, 79);
}
// endregion
// region: s_has_signs_and_683_in_base_7
#[test]
fn s_has_signs_and_683_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_52, 0x_D7, 0x_D7, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_52, 0x_22, 0x_C9, 0x_49, 0x_80, 0x_D7,
	];

	helper(S, BASE, 683);
}
// endregion
// region: s_has_signs_and_3_373_in_base_7
#[test]
fn s_has_signs_and_3_373_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_C0,
		0x_26, 0x_A3, 0x_A3, 0x_A2,
	];
	const BASE: &[u8] = &[
		0x_E7, 0x_C0, 0x_26, 0x_66, 0x_B0, 0x_A3, 0x_A2,
	];

	helper(S, BASE, 3_373);
}
// endregion
// region: s_has_signs_and_19_440_in_base_7
#[test]
fn s_has_signs_and_19_440_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_B6, 0x_B6, 0x_B2, 0x_BD, 0x_4B,
		0x_B6,
	];
	const BASE: &[u8] = &[
		0x_B2, 0x_B6, 0x_36, 0x_BF, 0x_BD, 0x_4B, 0x_92,
	];

	helper(S, BASE, 19_440);
}
// endregion
// region: s_has_signs_and_350_954_in_base_7
#[test]
fn s_has_signs_and_350_954_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_DE, 0x_26, 0x_26, 0x_E2, 0x_E2, 0x_DE, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_E2, 0x_DE, 0x_84, 0x_32, 0x_FA, 0x_26,
	];

	helper(S, BASE, 350_954);
}
// endregion
// region: s_has_signs_and_3_465_123_in_base_7
#[test]
fn s_has_signs_and_3_465_123_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_87, 0x_5F, 0x_86, 0x_5F, 0x_5F, 0x_06, 0x_E8, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_5F, 0x_06, 0x_86, 0x_87, 0x_E8, 0x_8B,
	];

	helper(S, BASE, 3_465_123);
}
// endregion
// region: s_has_signs_and_84_119_990_in_base_7
#[test]
fn s_has_signs_and_84_119_990_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_7D, 0x_F9, 0x_9B, 0x_F3, 0x_F9, 0x_F9, 0x_7D, 0x_2C, 0x_FB, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_F3, 0x_7D, 0x_FB, 0x_9B, 0x_2C, 0x_37,
	];

	helper(S, BASE, 84_119_990);
}
// endregion
// region: s_has_signs_and_616_783_764_in_base_7
#[test]
fn s_has_signs_and_616_783_764_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_4A, 0x_93, 0x_93, 0x_A5, 0x_A5, 0x_BA, 0x_45, 0x_93, 0x_4A, 0x_03, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_93, 0x_4A, 0x_E9, 0x_BA, 0x_03, 0x_A5,
	];

	helper(S, BASE, 616_783_764);
}
// endregion
// region: s_has_signs_and_7_in_base_11
#[test]
fn s_has_signs_and_7_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_03, 0x_E6, 0x_B5, 0x_E9, 0x_FC, 0x_FD, 0x_A0, 0x_7D, 0x_54, 0x_CF,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_signs_and_39_in_base_11
#[test]
fn s_has_signs_and_39_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_66, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_C6, 0x_3A, 0x_66, 0x_42, 0x_A1, 0x_35, 0x_74, 0x_0E, 0x_65, 0x_02,
	];

	helper(S, BASE, 39);
}
// endregion
// region: s_has_signs_and_919_in_base_11
#[test]
fn s_has_signs_and_919_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_80,
		0x_24, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_C2, 0x_D5, 0x_69, 0x_CE, 0x_C8, 0x_24, 0x_80, 0x_3E, 0x_2E, 0x_5F,
	];

	helper(S, BASE, 919);
}
// endregion
// region: s_has_signs_and_8_697_in_base_11
#[test]
fn s_has_signs_and_8_697_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_E6, 0x_7B, 0x_EB, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_66, 0x_C7, 0x_1D, 0x_9A, 0x_7B, 0x_E6, 0x_5A, 0x_68, 0x_EB, 0x_A6,
	];

	helper(S, BASE, 8_697);
}
// endregion
// region: s_has_signs_and_86_015_in_base_11
#[test]
fn s_has_signs_and_86_015_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_B7, 0x_E8,
		0x_83, 0x_E8, 0x_83,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_C1, 0x_40, 0x_57, 0x_E6, 0x_B7, 0x_83, 0x_B6, 0x_21, 0x_E8, 0x_6E,
	];

	helper(S, BASE, 86_015);
}
// endregion
// region: s_has_signs_and_166_585_in_base_11
#[test]
fn s_has_signs_and_166_585_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_5F, 0x_77, 0x_12, 0x_5F, 0x_30, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_5F, 0x_F1, 0x_7F, 0x_12, 0x_D8, 0x_27, 0x_B9, 0x_30, 0x_33, 0x_96,
	];

	helper(S, BASE, 166_585);
}
// endregion
// region: s_has_signs_and_2_048_889_in_base_11
#[test]
fn s_has_signs_and_2_048_889_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_68, 0x_68, 0x_D8, 0x_C6, 0x_3A, 0x_C6, 0x_D8,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_68, 0x_A3, 0x_3A, 0x_3F, 0x_81, 0x_AB, 0x_D8, 0x_6D, 0x_3B, 0x_C6,
	];

	helper(S, BASE, 2_048_889);
}
// endregion
// region: s_has_signs_and_37_789_198_in_base_11
#[test]
fn s_has_signs_and_37_789_198_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_FC, 0x_C5, 0x_85, 0x_72, 0x_03, 0x_41,
		0x_D0, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_FC, 0x_36, 0x_85, 0x_D0, 0x_9A, 0x_41, 0x_72, 0x_EF, 0x_C0, 0x_C5,
	];

	helper(S, BASE, 37_789_198);
}
// endregion
// region: s_has_signs_and_967_608_927_in_base_11
#[test]
fn s_has_signs_and_967_608_927_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_C8, 0x_46, 0x_D2, 0x_2F, 0x_5F, 0x_78, 0x_D4, 0x_78, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_3B, 0x_2F, 0x_9F, 0x_C8, 0x_46, 0x_1C, 0x_D2, 0x_25, 0x_D4, 0x_78,
	];

	helper(S, BASE, 967_608_927);
}
// endregion
// region: s_has_signs_and_8_in_base_13
#[test]
fn s_has_signs_and_8_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_80, 0x_34, 0x_49, 0x_14, 0x_DE, 0x_18, 0x_7B, 0x_1F, 0x_BE, 0x_61, 0x_85, 0x_5D,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_signs_and_60_in_base_13
#[test]
fn s_has_signs_and_60_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_FE, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_38, 0x_A6, 0x_E6, 0x_FE, 0x_C1, 0x_CD, 0x_37, 0x_D7, 0x_E8, 0x_AF, 0x_7C, 0x_B1,
	];

	helper(S, BASE, 60);
}
// endregion
// region: s_has_signs_and_603_in_base_13
#[test]
fn s_has_signs_and_603_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_91, 0x_C9, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_0E, 0x_B0, 0x_91, 0x_39, 0x_F9, 0x_93, 0x_C9, 0x_EC, 0x_59, 0x_31, 0x_C6, 0x_64,
	];

	helper(S, BASE, 603);
}
// endregion
// region: s_has_signs_and_6_052_in_base_13
#[test]
fn s_has_signs_and_6_052_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_01, 0x_C9, 0x_27, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_3E, 0x_01, 0x_72, 0x_F2, 0x_5F, 0x_AB, 0x_EF, 0x_83, 0x_C9, 0x_27, 0x_AF, 0x_C5,
	];

	helper(S, BASE, 6_052);
}
// endregion
// region: s_has_signs_and_97_389_in_base_13
#[test]
fn s_has_signs_and_97_389_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_F8, 0x_25, 0x_10, 0x_F8,
		0x_A4,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_63, 0x_48, 0x_F8, 0x_10, 0x_25, 0x_A4, 0x_50, 0x_ED, 0x_E8, 0x_3D, 0x_D7, 0x_C1,
	];

	helper(S, BASE, 97_389);
}
// endregion
// region: s_has_signs_and_816_170_in_base_13
#[test]
fn s_has_signs_and_816_170_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_72, 0x_72, 0x_9A, 0x_B5, 0x_44, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_5B, 0x_72, 0x_F2, 0x_3A, 0x_44, 0x_B5, 0x_9A, 0x_0F, 0x_7B, 0x_51, 0x_01, 0x_FB,
	];

	helper(S, BASE, 816_170);
}
// endregion
// region: s_has_signs_and_9_330_080_in_base_13
#[test]
fn s_has_signs_and_9_330_080_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_18, 0x_1E, 0x_18, 0x_B6, 0x_F1, 0x_BA, 0x_5B,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_18, 0x_EA, 0x_2C, 0x_4C, 0x_EB, 0x_5B, 0x_BA, 0x_B6, 0x_F1, 0x_4A, 0x_71, 0x_1E,
	];

	helper(S, BASE, 9_330_080);
}
// endregion
// region: s_has_signs_and_88_121_573_in_base_13
#[test]
fn s_has_signs_and_88_121_573_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_F8, 0x_D8,
		0x_22, 0x_2A, 0x_2A, 0x_BE, 0x_D8, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_F8, 0x_48, 0x_22, 0x_2A, 0x_D8, 0x_CD, 0x_5A, 0x_6C, 0x_EB, 0x_A8, 0x_59, 0x_BE,
	];

	helper(S, BASE, 88_121_573);
}
// endregion
// region: s_has_signs_and_389_772_768_in_base_13
#[test]
fn s_has_signs_and_389_772_768_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_91, 0x_D6, 0x_47, 0x_1B, 0x_29, 0x_82, 0x_47, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_10, 0x_D6, 0x_BA, 0x_82, 0x_43, 0x_91, 0x_B0, 0x_8A, 0x_47, 0x_1B, 0x_6A, 0x_E2,
	];

	helper(S, BASE, 389_772_768);
}
// endregion
// region: s_has_signs_and_5_in_base_19
#[test]
fn s_has_signs_and_5_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_67, 0x_7C, 0x_16, 0x_41, 0x_F1, 0x_D9, 0x_3B, 0x_8B, 0x_EC, 0x_B7, 0x_1C, 0x_5C, 0x_E0, 0x_9C,
		0x_45, 0x_35, 0x_C8, 0x_1B,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_signs_and_14_in_base_19
#[test]
fn s_has_signs_and_14_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_E6, 0x_24, 0x_E4, 0x_B1, 0x_DE, 0x_36, 0x_3D, 0x_A4, 0x_29, 0x_3A, 0x_19, 0x_A3, 0x_AA, 0x_B2,
		0x_E8, 0x_06, 0x_4F, 0x_30,
	];

	helper(S, BASE, 14);
}
// endregion
// region: s_has_signs_and_679_in_base_19
#[test]
fn s_has_signs_and_679_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_C1, 0x_EC, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_C1, 0x_16, 0x_50, 0x_D7, 0x_83, 0x_5A, 0x_38, 0x_66, 0x_1F, 0x_BD, 0x_D5, 0x_9E, 0x_03, 0x_67,
		0x_CB, 0x_EC, 0x_7B, 0x_3B,
	];

	helper(S, BASE, 679);
}
// endregion
// region: s_has_signs_and_7_708_in_base_19
#[test]
fn s_has_signs_and_7_708_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_63, 0x_9A, 0x_BE, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_63, 0x_9A, 0x_EA, 0x_A5, 0x_48, 0x_BE, 0x_01, 0x_57, 0x_92, 0x_03, 0x_CB, 0x_12, 0x_FF, 0x_68,
		0x_18, 0x_98, 0x_4C, 0x_15,
	];

	helper(S, BASE, 7_708);
}
// endregion
// region: s_has_signs_and_62_828_in_base_19
#[test]
fn s_has_signs_and_62_828_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_4F, 0x_E0, 0x_BC, 0x_DC,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_FE, 0x_74, 0x_E0, 0x_29, 0x_75, 0x_36, 0x_5A, 0x_5B, 0x_4F, 0x_68, 0x_CA, 0x_C1, 0x_3A, 0x_DC,
		0x_65, 0x_94, 0x_32, 0x_7E,
	];

	helper(S, BASE, 62_828);
}
// endregion
// region: s_has_signs_and_127_209_in_base_19
#[test]
fn s_has_signs_and_127_209_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_B9, 0x_C0, 0x_FF, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_64, 0x_A8, 0x_A7, 0x_AD, 0x_0F, 0x_57, 0x_FF, 0x_A2, 0x_80, 0x_C0, 0x_32, 0x_8A, 0x_D1, 0x_52,
		0x_A9, 0x_CB, 0x_6B, 0x_B9,
	];

	helper(S, BASE, 127_209);
}
// endregion
// region: s_has_signs_and_3_672_806_in_base_19
#[test]
fn s_has_signs_and_3_672_806_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_12,
		0x_48, 0x_5C, 0x_7F, 0x_1A, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_12, 0x_08, 0x_5C, 0x_A7, 0x_A2, 0x_7E, 0x_B8, 0x_7F, 0x_48, 0x_72, 0x_59, 0x_69, 0x_CE, 0x_93,
		0x_64, 0x_56, 0x_41, 0x_1A,
	];

	helper(S, BASE, 3_672_806);
}
// endregion
// region: s_has_signs_and_88_868_952_in_base_19
#[test]
fn s_has_signs_and_88_868_952_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_55, 0x_4F, 0x_4F, 0x_66, 0x_5C, 0x_C5, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_95, 0x_55, 0x_50, 0x_7F, 0x_AE, 0x_6F, 0x_45, 0x_C5, 0x_E6, 0x_CD, 0x_5C, 0x_FD, 0x_BD, 0x_1C, 0x_99,
		0x_AA, 0x_4F, 0x_66, 0x_A1,
	];

	helper(S, BASE, 88_868_952);
}
// endregion
// region: s_has_signs_and_807_674_602_in_base_19
#[test]
fn s_has_signs_and_807_674_602_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_60, 0x_9E, 0x_9E, 0x_CF, 0x_E8, 0x_11, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_4A, 0x_97, 0x_9E, 0x_83, 0x_FE, 0x_A4, 0x_C2, 0x_90, 0x_C9, 0x_CF, 0x_C3, 0x_C4, 0x_5D, 0x_11,
		0x_BB, 0x_AB, 0x_60, 0x_E8,
	];

	helper(S, BASE, 807_674_602);
}
// endregion
// region: s_has_signs_and_3_in_base_42
#[test]
fn s_has_signs_and_3_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_58, 0x_BC, 0x_E1, 0x_50, 0x_4A, 0x_E6, 0x_81, 0x_6E, 0x_FC, 0x_1B, 0x_6F, 0x_A2, 0x_AD, 0x_99, 0x_BF,
		0x_88, 0x_34, 0x_BD, 0x_10, 0x_6B, 0x_08, 0x_A0, 0x_C9, 0x_67, 0x_C4, 0x_15, 0x_D3, 0x_EB, 0x_28, 0x_85,
		0x_31, 0x_C3, 0x_64, 0x_96, 0x_79, 0x_B8, 0x_DF, 0x_F2, 0x_30, 0x_5A, 0x_DA, 0x_68,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_signs_and_69_in_base_42
#[test]
fn s_has_signs_and_69_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_6A, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_6A, 0x_F1, 0x_1E, 0x_CE, 0x_DD, 0x_FE, 0x_79, 0x_98, 0x_53, 0x_27, 0x_C8, 0x_CB, 0x_CD, 0x_7A,
		0x_4A, 0x_6D, 0x_3D, 0x_12, 0x_90, 0x_D1, 0x_01, 0x_A0, 0x_21, 0x_A5, 0x_DB, 0x_F7, 0x_9A, 0x_A7, 0x_48,
		0x_7B, 0x_19, 0x_0F, 0x_BB, 0x_D5, 0x_82, 0x_81, 0x_B0, 0x_F8, 0x_D3, 0x_C7, 0x_07,
	];

	helper(S, BASE, 69);
}
// endregion
// region: s_has_signs_and_371_in_base_42
#[test]
fn s_has_signs_and_371_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_6E, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_8F, 0x_C3, 0x_C8, 0x_FF, 0x_E7, 0x_D0, 0x_56, 0x_6E, 0x_C5, 0x_85, 0x_BE, 0x_84, 0x_38, 0x_10,
		0x_B8, 0x_3E, 0x_75, 0x_AD, 0x_7B, 0x_E9, 0x_DA, 0x_E1, 0x_76, 0x_07, 0x_5F, 0x_6D, 0x_F4, 0x_74, 0x_F3,
		0x_CD, 0x_D4, 0x_90, 0x_03, 0x_72, 0x_B7, 0x_35, 0x_C4, 0x_C1, 0x_5E, 0x_24, 0x_93,
	];

	helper(S, BASE, 371);
}
// endregion
// region: s_has_signs_and_1_641_in_base_42
#[test]
fn s_has_signs_and_1_641_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_24, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_D1, 0x_0E, 0x_72, 0x_99, 0x_E0, 0x_A3, 0x_7E, 0x_E4, 0x_12, 0x_3E, 0x_C9, 0x_FE, 0x_E8, 0x_E9,
		0x_E6, 0x_7A, 0x_82, 0x_80, 0x_42, 0x_5C, 0x_26, 0x_B3, 0x_EC, 0x_33, 0x_AC, 0x_1B, 0x_8B, 0x_EA, 0x_6D,
		0x_3D, 0x_3A, 0x_DA, 0x_A2, 0x_AB, 0x_74, 0x_38, 0x_40, 0x_63, 0x_24, 0x_B8, 0x_C4,
	];

	helper(S, BASE, 1_641);
}
// endregion
// region: s_has_signs_and_36_327_in_base_42
#[test]
fn s_has_signs_and_36_327_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_26, 0x_4A, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_CA, 0x_BF, 0x_08, 0x_9D, 0x_41, 0x_BC, 0x_D2, 0x_35, 0x_28, 0x_B2, 0x_59, 0x_C5, 0x_52, 0x_24,
		0x_64, 0x_3C, 0x_71, 0x_4B, 0x_9F, 0x_26, 0x_9E, 0x_34, 0x_E6, 0x_4A, 0x_B0, 0x_AE, 0x_2C, 0x_5E, 0x_DE,
		0x_D7, 0x_D0, 0x_58, 0x_19, 0x_38, 0x_01, 0x_17, 0x_AA, 0x_2A, 0x_45, 0x_2F, 0x_93,
	];

	helper(S, BASE, 36_327);
}
// endregion
// region: s_has_signs_and_360_225_in_base_42
#[test]
fn s_has_signs_and_360_225_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_D2, 0x_D3, 0x_16, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_7D, 0x_80, 0x_BA, 0x_D2, 0x_91, 0x_C6, 0x_E6, 0x_16, 0x_8C, 0x_C2, 0x_03, 0x_50, 0x_37, 0x_98,
		0x_1B, 0x_53, 0x_4F, 0x_AC, 0x_E8, 0x_A3, 0x_A6, 0x_6F, 0x_E7, 0x_45, 0x_88, 0x_41, 0x_42, 0x_FA, 0x_83,
		0x_35, 0x_6A, 0x_3F, 0x_3D, 0x_DB, 0x_76, 0x_D3, 0x_9B, 0x_8F, 0x_3C, 0x_EB, 0x_43,
	];

	helper(S, BASE, 360_225);
}
// endregion
// region: s_has_signs_and_5_432_877_in_base_42
#[test]
fn s_has_signs_and_5_432_877_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_D5, 0x_35, 0x_29, 0x_28, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_D5, 0x_50, 0x_30, 0x_B6, 0x_C9, 0x_C6, 0x_F5, 0x_63, 0x_64, 0x_B4, 0x_58, 0x_73, 0x_29, 0x_B2,
		0x_07, 0x_01, 0x_E1, 0x_A5, 0x_43, 0x_6F, 0x_31, 0x_E0, 0x_A3, 0x_EA, 0x_F6, 0x_E2, 0x_76, 0x_FB, 0x_12,
		0x_97, 0x_35, 0x_4C, 0x_DB, 0x_13, 0x_1D, 0x_28, 0x_8A, 0x_3C, 0x_80, 0x_7F, 0x_37,
	];

	helper(S, BASE, 5_432_877);
}
// endregion
// region: s_has_signs_and_83_084_770_in_base_42
#[test]
fn s_has_signs_and_83_084_770_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_9E, 0x_46, 0x_7B, 0x_25, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_7F, 0x_50, 0x_DF, 0x_E3, 0x_4F, 0x_9F, 0x_9B, 0x_E5, 0x_25, 0x_B2, 0x_EB, 0x_90, 0x_FA, 0x_92, 0x_4D,
		0x_64, 0x_B9, 0x_EC, 0x_7B, 0x_51, 0x_4A, 0x_F7, 0x_3C, 0x_D5, 0x_9D, 0x_7D, 0x_9E, 0x_B5, 0x_5E, 0x_46,
		0x_FD, 0x_1D, 0x_80, 0x_E4, 0x_B0, 0x_4C, 0x_41, 0x_16, 0x_74, 0x_79, 0x_53, 0x_B3,
	];

	helper(S, BASE, 83_084_770);
}
// endregion
// region: s_has_signs_and_400_835_529_in_base_42
#[test]
fn s_has_signs_and_400_835_529_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_B5, 0x_30, 0x_B3, 0x_5D, 0x_72,
		0x_B5,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_72, 0x_30, 0x_B5, 0x_BF, 0x_9A, 0x_18, 0x_6A, 0x_F2, 0x_D8, 0x_70, 0x_5D, 0x_D1, 0x_8A, 0x_EA,
		0x_27, 0x_08, 0x_49, 0x_74, 0x_F5, 0x_1E, 0x_A7, 0x_F9, 0x_80, 0x_DD, 0x_DA, 0x_D0, 0x_43, 0x_92, 0x_E7,
		0x_68, 0x_E3, 0x_D3, 0x_C1, 0x_B3, 0x_D9, 0x_21, 0x_C8, 0x_64, 0x_03, 0x_23, 0x_6D,
	];

	helper(S, BASE, 400_835_529);
}
// endregion
// region: s_has_signs_and_1_in_base_73
#[test]
fn s_has_signs_and_1_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_8B, 0x_6A, 0x_73, 0x_FF, 0x_C4, 0x_97, 0x_BB, 0x_F9, 0x_4D, 0x_98, 0x_01, 0x_91, 0x_3B, 0x_5C,
		0x_D5, 0x_63, 0x_E6, 0x_BA, 0x_90, 0x_F1, 0x_1D, 0x_4E, 0x_43, 0x_37, 0x_8C, 0x_50, 0x_C0, 0x_F4, 0x_DB,
		0x_64, 0x_E7, 0x_AB, 0x_E9, 0x_EC, 0x_0F, 0x_EB, 0x_A1, 0x_CA, 0x_FD, 0x_2F, 0x_CC, 0x_D9, 0x_D0, 0x_52,
		0x_C5, 0x_81, 0x_05, 0x_1C, 0x_48, 0x_BE, 0x_2A, 0x_87, 0x_66, 0x_2E, 0x_4A, 0x_93, 0x_9E, 0x_15, 0x_DF,
		0x_4F, 0x_06, 0x_CB, 0x_AF, 0x_49, 0x_6C, 0x_95, 0x_F8, 0x_C2, 0x_3E, 0x_9D, 0x_7F, 0x_54,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_signs_and_28_in_base_73
#[test]
fn s_has_signs_and_28_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_D8,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_41, 0x_10, 0x_A4, 0x_B2, 0x_2F, 0x_92, 0x_E2, 0x_EF, 0x_BC, 0x_72, 0x_F6, 0x_2A, 0x_FE, 0x_6F,
		0x_5E, 0x_F5, 0x_A3, 0x_48, 0x_6C, 0x_6A, 0x_F3, 0x_7D, 0x_8E, 0x_1A, 0x_3B, 0x_D0, 0x_BE, 0x_D8, 0x_45,
		0x_A0, 0x_6E, 0x_E3, 0x_24, 0x_61, 0x_F9, 0x_E8, 0x_08, 0x_52, 0x_49, 0x_CC, 0x_C0, 0x_C8, 0x_AA, 0x_75,
		0x_4B, 0x_F1, 0x_CB, 0x_90, 0x_11, 0x_71, 0x_B0, 0x_5C, 0x_44, 0x_5A, 0x_B6, 0x_AE, 0x_30, 0x_7A, 0x_68,
		0x_17, 0x_74, 0x_22, 0x_51, 0x_47, 0x_EC, 0x_33, 0x_38, 0x_3A, 0x_A1, 0x_96, 0x_9F, 0x_D7,
	];

	helper(S, BASE, 28);
}
// endregion
// region: s_has_signs_and_394_in_base_73
#[test]
fn s_has_signs_and_394_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_FC, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_DE, 0x_BD, 0x_E6, 0x_14, 0x_FC, 0x_3B, 0x_5E, 0x_4C, 0x_6D, 0x_6C, 0x_AD, 0x_31, 0x_AB, 0x_5D,
		0x_11, 0x_47, 0x_89, 0x_B5, 0x_94, 0x_F1, 0x_60, 0x_CE, 0x_10, 0x_18, 0x_D6, 0x_3E, 0x_68, 0x_69, 0x_21,
		0x_22, 0x_46, 0x_F0, 0x_8F, 0x_87, 0x_E5, 0x_C5, 0x_CB, 0x_1B, 0x_7D, 0x_DA, 0x_66, 0x_C7, 0x_7C, 0x_3F,
		0x_95, 0x_EA, 0x_D4, 0x_9F, 0x_16, 0x_A1, 0x_56, 0x_C6, 0x_25, 0x_51, 0x_EF, 0x_07, 0x_CC, 0x_50, 0x_DC,
		0x_FE, 0x_40, 0x_F8, 0x_F4, 0x_48, 0x_58, 0x_62, 0x_1C, 0x_45, 0x_E3, 0x_39, 0x_7E, 0x_75,
	];

	helper(S, BASE, 394);
}
// endregion
// region: s_has_signs_and_9_824_in_base_73
#[test]
fn s_has_signs_and_9_824_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_7E, 0x_C3, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_7E, 0x_92, 0x_64, 0x_04, 0x_4E, 0x_5B, 0x_18, 0x_7C, 0x_4D, 0x_D1, 0x_54, 0x_FE, 0x_87, 0x_EB,
		0x_FC, 0x_8D, 0x_3E, 0x_66, 0x_79, 0x_07, 0x_F5, 0x_BF, 0x_A0, 0x_A6, 0x_2C, 0x_02, 0x_57, 0x_14, 0x_98,
		0x_9D, 0x_ED, 0x_B1, 0x_51, 0x_F6, 0x_C7, 0x_89, 0x_7B, 0x_3F, 0x_15, 0x_45, 0x_9C, 0x_42, 0x_B9, 0x_C1,
		0x_43, 0x_A1, 0x_DB, 0x_F7, 0x_40, 0x_D3, 0x_2E, 0x_A4, 0x_4B, 0x_3A, 0x_34, 0x_B7, 0x_C2, 0x_3D, 0x_E2,
		0x_E0, 0x_C3, 0x_01, 0x_DC, 0x_22, 0x_BE, 0x_36, 0x_88, 0x_A7, 0x_F8, 0x_F1, 0x_A8, 0x_6D,
	];

	helper(S, BASE, 9_824);
}
// endregion
// region: s_has_signs_and_76_097_in_base_73
#[test]
fn s_has_signs_and_76_097_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_74, 0x_E6, 0x_13,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_7D, 0x_5C, 0x_88, 0x_3D, 0x_02, 0x_71, 0x_DD, 0x_EE, 0x_58, 0x_50, 0x_CB, 0x_6C, 0x_E3, 0x_74,
		0x_21, 0x_3F, 0x_41, 0x_28, 0x_EC, 0x_E6, 0x_92, 0x_4B, 0x_14, 0x_72, 0x_94, 0x_F2, 0x_04, 0x_9E, 0x_29,
		0x_7C, 0x_13, 0x_7A, 0x_AD, 0x_FF, 0x_A8, 0x_80, 0x_52, 0x_EA, 0x_D2, 0x_5E, 0x_F3, 0x_FD, 0x_C6, 0x_E9,
		0x_1A, 0x_1C, 0x_EF, 0x_D5, 0x_0F, 0x_E0, 0x_47, 0x_CE, 0x_B1, 0x_F1, 0x_51, 0x_C5, 0x_08, 0x_8D, 0x_AC,
		0x_2A, 0x_9C, 0x_E2, 0x_23, 0x_97, 0x_95, 0x_6F, 0x_DB, 0x_DF, 0x_91, 0x_FE, 0x_4A, 0x_12,
	];

	helper(S, BASE, 76_097);
}
// endregion
// region: s_has_signs_and_508_763_in_base_73
#[test]
fn s_has_signs_and_508_763_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_9C, 0x_C6, 0x_04, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_9C, 0x_B0, 0x_37, 0x_4F, 0x_96, 0x_22, 0x_78, 0x_4A, 0x_C2, 0x_71, 0x_27, 0x_67, 0x_83, 0x_0F,
		0x_E7, 0x_B1, 0x_15, 0x_76, 0x_BF, 0x_18, 0x_56, 0x_C6, 0x_55, 0x_40, 0x_63, 0x_7B, 0x_F5, 0x_B8, 0x_5C,
		0x_81, 0x_92, 0x_3B, 0x_6A, 0x_04, 0x_07, 0x_4D, 0x_BD, 0x_DE, 0x_57, 0x_AA, 0x_A5, 0x_E9, 0x_87, 0x_12,
		0x_99, 0x_A9, 0x_D4, 0x_E2, 0x_AF, 0x_7E, 0x_5D, 0x_EB, 0x_7A, 0x_3C, 0x_01, 0x_97, 0x_FE, 0x_64, 0x_DC,
		0x_41, 0x_BA, 0x_85, 0x_EE, 0x_23, 0x_D6, 0x_98, 0x_3F, 0x_91, 0x_61, 0x_65, 0x_17, 0x_93,
	];

	helper(S, BASE, 508_763);
}
// endregion
// region: s_has_signs_and_9_384_624_in_base_73
#[test]
fn s_has_signs_and_9_384_624_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_69, 0x_E1, 0x_E6, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_71, 0x_1E, 0x_47, 0x_E6, 0x_F3, 0x_92, 0x_AA, 0x_7D, 0x_BD, 0x_E1, 0x_94, 0x_8C, 0x_3C, 0x_22, 0x_AC,
		0x_55, 0x_60, 0x_1F, 0x_70, 0x_DE, 0x_06, 0x_DA, 0x_FD, 0x_C3, 0x_69, 0x_32, 0x_AF, 0x_1C, 0x_80, 0x_2E,
		0x_FE, 0x_2F, 0x_14, 0x_BB, 0x_21, 0x_FB, 0x_D4, 0x_A8, 0x_C5, 0x_F1, 0x_27, 0x_B8, 0x_9F, 0x_A0, 0x_EC,
		0x_35, 0x_33, 0x_E0, 0x_52, 0x_CE, 0x_25, 0x_EB, 0x_C4, 0x_3E, 0x_5C, 0x_CA, 0x_A4, 0x_91, 0x_C2, 0x_ED,
		0x_38, 0x_58, 0x_28, 0x_12, 0x_16, 0x_02, 0x_4F, 0x_95, 0x_C9, 0x_FF, 0x_39, 0x_6B, 0x_83,
	];

	helper(S, BASE, 9_384_624);
}
// endregion
// region: s_has_signs_and_69_368_161_in_base_73
#[test]
fn s_has_signs_and_69_368_161_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_3E, 0x_3C,
		0x_CB, 0x_51, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_A2, 0x_F0, 0x_3E, 0x_A6, 0x_CA, 0x_F8, 0x_5A, 0x_51, 0x_10, 0x_62, 0x_B1, 0x_7E, 0x_C7, 0x_8C, 0x_7A,
		0x_34, 0x_32, 0x_26, 0x_53, 0x_63, 0x_90, 0x_39, 0x_3F, 0x_CB, 0x_23, 0x_33, 0x_B0, 0x_7C, 0x_4D, 0x_F6,
		0x_58, 0x_70, 0x_3C, 0x_D4, 0x_9F, 0x_DA, 0x_56, 0x_2C, 0x_D6, 0x_79, 0x_01, 0x_A7, 0x_2F, 0x_87, 0x_C1,
		0x_22, 0x_8A, 0x_A9, 0x_80, 0x_B5, 0x_BB, 0x_4C, 0x_4B, 0x_37, 0x_3B, 0x_EC, 0x_E9, 0x_F7, 0x_BC, 0x_12,
		0x_72, 0x_64, 0x_7D, 0x_74, 0x_C8, 0x_49, 0x_B4, 0x_05, 0x_94, 0x_F9, 0x_6D, 0x_91, 0x_4E,
	];

	helper(S, BASE, 69_368_161);
}
// endregion
// region: s_has_signs_and_683_049_532_in_base_73
#[test]
fn s_has_signs_and_683_049_532_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_9E, 0x_D8,
		0x_B3, 0x_49, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_E8, 0x_7C, 0x_FC, 0x_D8, 0x_F7, 0x_C2, 0x_30, 0x_D3, 0x_15, 0x_B7, 0x_A6, 0x_22, 0x_39, 0x_C8, 0x_AB,
		0x_6F, 0x_24, 0x_21, 0x_34, 0x_38, 0x_3B, 0x_14, 0x_F2, 0x_9F, 0x_9E, 0x_37, 0x_CC, 0x_77, 0x_CE, 0x_ED,
		0x_3D, 0x_B6, 0x_A2, 0x_E2, 0x_41, 0x_B8, 0x_E4, 0x_EC, 0x_6B, 0x_CD, 0x_31, 0x_A5, 0x_91, 0x_18, 0x_C1,
		0x_C6, 0x_92, 0x_E5, 0x_0F, 0x_4C, 0x_84, 0x_4B, 0x_A9, 0x_26, 0x_58, 0x_7D, 0x_EB, 0x_17, 0x_47, 0x_4F,
		0x_B3, 0x_1C, 0x_80, 0x_90, 0x_BE, 0x_59, 0x_70, 0x_49, 0x_36, 0x_E7, 0x_5A, 0x_11, 0x_1F,
	];

	helper(S, BASE, 683_049_532);
}
// endregion
// region: s_has_signs_and_6_in_base_113
#[test]
fn s_has_signs_and_6_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_A2, 0x_60, 0x_6A, 0x_B7, 0x_AA, 0x_58, 0x_B3, 0x_F6, 0x_12, 0x_CE, 0x_44, 0x_43, 0x_BB, 0x_EE,
		0x_66, 0x_F3, 0x_99, 0x_6E, 0x_B1, 0x_C8, 0x_B9, 0x_69, 0x_23, 0x_75, 0x_01, 0x_F1, 0x_31, 0x_3A, 0x_1D,
		0x_94, 0x_79, 0x_34, 0x_E4, 0x_CD, 0x_AB, 0x_4E, 0x_D5, 0x_FF, 0x_61, 0x_D4, 0x_27, 0x_AD, 0x_07, 0x_C6,
		0x_B0, 0x_54, 0x_F2, 0x_8A, 0x_DF, 0x_3D, 0x_AE, 0x_97, 0x_D2, 0x_24, 0x_6B, 0x_7A, 0x_A6, 0x_7C, 0x_0F,
		0x_EB, 0x_FE, 0x_BF, 0x_BA, 0x_57, 0x_E6, 0x_6F, 0x_32, 0x_C0, 0x_9C, 0x_80, 0x_52, 0x_7B, 0x_18, 0x_E5,
		0x_D7, 0x_40, 0x_4B, 0x_82, 0x_76, 0x_42, 0x_9D, 0x_1E, 0x_E0, 0x_1A, 0x_D3, 0x_1F, 0x_C9, 0x_E7, 0x_8E,
		0x_11, 0x_05, 0x_C4, 0x_1B, 0x_92, 0x_A4, 0x_DD, 0x_15, 0x_F5, 0x_E1, 0x_03, 0x_88, 0x_E8, 0x_84, 0x_71,
		0x_55, 0x_D8, 0x_14, 0x_4F, 0x_46, 0x_8F, 0x_FB, 0x_4A,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_signs_and_35_in_base_113
#[test]
fn s_has_signs_and_35_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_89,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_7F, 0x_E6, 0x_5D, 0x_35, 0x_11, 0x_33, 0x_07, 0x_4E, 0x_FA, 0x_C8, 0x_B3, 0x_78, 0x_B9, 0x_31,
		0x_76, 0x_66, 0x_54, 0x_8F, 0x_6F, 0x_A0, 0x_77, 0x_B7, 0x_D0, 0x_22, 0x_4B, 0x_32, 0x_74, 0x_2F, 0x_1D,
		0x_E0, 0x_21, 0x_C5, 0x_8E, 0x_8B, 0x_89, 0x_D4, 0x_30, 0x_4D, 0x_F4, 0x_9B, 0x_82, 0x_F1, 0x_3D, 0x_51,
		0x_E5, 0x_43, 0x_26, 0x_71, 0x_56, 0x_EA, 0x_8A, 0x_DC, 0x_C4, 0x_7D, 0x_E1, 0x_E4, 0x_48, 0x_39, 0x_D2,
		0x_27, 0x_75, 0x_B8, 0x_04, 0x_C0, 0x_29, 0x_FF, 0x_C6, 0x_ED, 0x_9F, 0x_A7, 0x_F3, 0x_D7, 0x_01, 0x_1B,
		0x_DA, 0x_85, 0x_55, 0x_18, 0x_40, 0x_8D, 0x_C1, 0x_67, 0x_69, 0x_AD, 0x_3F, 0x_62, 0x_70, 0x_CD, 0x_C2,
		0x_7B, 0x_4C, 0x_1C, 0x_E8, 0x_BC, 0x_4A, 0x_A4, 0x_5F, 0x_24, 0x_53, 0x_EE, 0x_97, 0x_06, 0x_6C, 0x_F8,
		0x_15, 0x_E3, 0x_10, 0x_7A, 0x_3B, 0x_41, 0x_E2, 0x_A9,
	];

	helper(S, BASE, 35);
}
// endregion
// region: s_has_signs_and_696_in_base_113
#[test]
fn s_has_signs_and_696_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_11, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_1B, 0x_D7, 0x_64, 0x_CC, 0x_C8, 0x_11, 0x_47, 0x_9D, 0x_AD, 0x_28, 0x_F0, 0x_9B, 0x_58, 0x_68,
		0x_BE, 0x_ED, 0x_76, 0x_96, 0x_23, 0x_5D, 0x_E6, 0x_71, 0x_E7, 0x_80, 0x_B7, 0x_84, 0x_C0, 0x_46, 0x_B1,
		0x_75, 0x_6C, 0x_49, 0x_EA, 0x_BC, 0x_9C, 0x_6E, 0x_F8, 0x_66, 0x_B5, 0x_CD, 0x_C1, 0x_D6, 0x_6B, 0x_8E,
		0x_88, 0x_55, 0x_16, 0x_94, 0x_04, 0x_38, 0x_D0, 0x_AF, 0x_BB, 0x_F5, 0x_32, 0x_7D, 0x_D2, 0x_07, 0x_44,
		0x_35, 0x_A3, 0x_9F, 0x_A5, 0x_BD, 0x_65, 0x_EB, 0x_42, 0x_A8, 0x_51, 0x_D3, 0x_4A, 0x_91, 0x_FD, 0x_54,
		0x_C9, 0x_A6, 0x_50, 0x_25, 0x_9E, 0x_BA, 0x_03, 0x_B6, 0x_59, 0x_48, 0x_DF, 0x_01, 0x_78, 0x_62, 0x_DB,
		0x_99, 0x_1F, 0x_F2, 0x_3B, 0x_E8, 0x_F4, 0x_17, 0x_FC, 0x_C3, 0x_41, 0x_C4, 0x_40, 0x_10, 0x_8B, 0x_19,
		0x_C5, 0x_DC, 0x_18, 0x_B9, 0x_A4, 0x_5E, 0x_63, 0x_43,
	];

	helper(S, BASE, 696);
}
// endregion
// region: s_has_signs_and_7_705_in_base_113
#[test]
fn s_has_signs_and_7_705_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_6C, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_D8, 0x_84, 0x_EC, 0x_A7, 0x_FE, 0x_9D, 0x_5D, 0x_4D, 0x_10, 0x_3F, 0x_13, 0x_7F, 0x_F8, 0x_A0,
		0x_81, 0x_95, 0x_F4, 0x_8A, 0x_EE, 0x_44, 0x_9C, 0x_83, 0x_19, 0x_AF, 0x_DF, 0x_25, 0x_AA, 0x_59, 0x_1B,
		0x_94, 0x_B2, 0x_C2, 0x_29, 0x_F9, 0x_C5, 0x_A4, 0x_7B, 0x_AD, 0x_D2, 0x_41, 0x_E6, 0x_DA, 0x_74, 0x_47,
		0x_79, 0x_37, 0x_8B, 0x_BD, 0x_42, 0x_48, 0x_5F, 0x_55, 0x_F5, 0x_3D, 0x_89, 0x_B9, 0x_4F, 0x_62, 0x_3C,
		0x_DB, 0x_90, 0x_BB, 0x_46, 0x_58, 0x_1A, 0x_D0, 0x_69, 0x_6C, 0x_50, 0x_3B, 0x_6A, 0x_6B, 0x_A5, 0x_B4,
		0x_7D, 0x_5C, 0x_11, 0x_22, 0x_77, 0x_2C, 0x_CE, 0x_38, 0x_FB, 0x_26, 0x_36, 0x_03, 0x_32, 0x_D5, 0x_9F,
		0x_C8, 0x_8D, 0x_C6, 0x_2A, 0x_75, 0x_27, 0x_4C, 0x_C4, 0x_AC, 0x_01, 0x_35, 0x_EA, 0x_67, 0x_1C, 0x_C1,
		0x_B1, 0x_BF, 0x_49, 0x_63, 0x_C7, 0x_21, 0x_E2, 0x_E5,
	];

	helper(S, BASE, 7_705);
}
// endregion
// region: s_has_signs_and_12_597_in_base_113
#[test]
fn s_has_signs_and_12_597_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_80, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_D6, 0x_D8, 0x_19, 0x_66, 0x_BE, 0x_C1, 0x_CA, 0x_EF, 0x_AE, 0x_95, 0x_1A, 0x_FE, 0x_1D, 0x_43,
		0x_BA, 0x_69, 0x_AD, 0x_FF, 0x_99, 0x_6A, 0x_EC, 0x_82, 0x_51, 0x_FC, 0x_5B, 0x_34, 0x_8F, 0x_5D, 0x_76,
		0x_90, 0x_05, 0x_E8, 0x_63, 0x_B3, 0x_A6, 0x_B2, 0x_85, 0x_2C, 0x_8D, 0x_15, 0x_F0, 0x_10, 0x_79, 0x_39,
		0x_6E, 0x_87, 0x_24, 0x_4C, 0x_B5, 0x_56, 0x_45, 0x_70, 0x_77, 0x_36, 0x_BB, 0x_A1, 0x_EA, 0x_B4, 0x_53,
		0x_1B, 0x_F7, 0x_DD, 0x_7D, 0x_58, 0x_46, 0x_81, 0x_3D, 0x_F3, 0x_54, 0x_B9, 0x_D0, 0x_7E, 0x_35, 0x_26,
		0x_9C, 0x_97, 0x_A7, 0x_96, 0x_38, 0x_91, 0x_04, 0x_BC, 0x_57, 0x_5C, 0x_8A, 0x_5E, 0x_E2, 0x_6B, 0x_4A,
		0x_FD, 0x_2E, 0x_32, 0x_23, 0x_18, 0x_7F, 0x_29, 0x_17, 0x_DB, 0x_F5, 0x_9E, 0x_75, 0x_9D, 0x_C3, 0x_D3,
		0x_D4, 0x_4D, 0x_67, 0x_78, 0x_E5, 0x_AA, 0x_80, 0x_D9,
	];

	helper(S, BASE, 12_597);
}
// endregion
// region: s_has_signs_and_907_294_in_base_113
#[test]
fn s_has_signs_and_907_294_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_0F,
		0x_7A, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_67, 0x_F2, 0x_F0, 0x_B8, 0x_EE, 0x_7A, 0x_48, 0x_87, 0x_A8, 0x_8A, 0x_92, 0x_46, 0x_FE, 0x_6F,
		0x_D3, 0x_6B, 0x_37, 0x_45, 0x_01, 0x_A9, 0x_75, 0x_89, 0x_69, 0x_AD, 0x_7D, 0x_6C, 0x_DD, 0x_13, 0x_5C,
		0x_61, 0x_D4, 0x_E4, 0x_78, 0x_43, 0x_AA, 0x_E8, 0x_8B, 0x_33, 0x_F5, 0x_B0, 0x_98, 0x_9D, 0x_72, 0x_CF,
		0x_F6, 0x_C6, 0x_38, 0x_C4, 0x_BF, 0x_F3, 0x_EB, 0x_B6, 0x_C1, 0x_FC, 0x_DC, 0x_A4, 0x_DB, 0x_88, 0x_34,
		0x_32, 0x_7F, 0x_BD, 0x_3C, 0x_08, 0x_B7, 0x_11, 0x_3D, 0x_21, 0x_9B, 0x_66, 0x_0F, 0x_64, 0x_86, 0x_B5,
		0x_22, 0x_1C, 0x_A2, 0x_49, 0x_9A, 0x_4B, 0x_BA, 0x_C2, 0x_96, 0x_E9, 0x_F9, 0x_4D, 0x_CB, 0x_23, 0x_25,
		0x_44, 0x_84, 0x_9E, 0x_7C, 0x_03, 0x_8D, 0x_76, 0x_57, 0x_1E, 0x_05, 0x_B4, 0x_50, 0x_A0, 0x_06, 0x_60,
		0x_ED, 0x_A7, 0x_97, 0x_E2, 0x_5A, 0x_10, 0x_0E, 0x_83,
	];

	helper(S, BASE, 907_294);
}
// endregion
// region: s_has_signs_and_2_044_366_in_base_113
#[test]
fn s_has_signs_and_2_044_366_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_6B, 0x_1D, 0x_06, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_6B, 0x_12, 0x_6E, 0x_8E, 0x_68, 0x_C2, 0x_2E, 0x_FC, 0x_64, 0x_D7, 0x_06, 0x_9A, 0x_8F, 0x_CB,
		0x_F9, 0x_29, 0x_D2, 0x_67, 0x_0E, 0x_38, 0x_AB, 0x_EA, 0x_6F, 0x_02, 0x_CC, 0x_FF, 0x_A6, 0x_91, 0x_D0,
		0x_56, 0x_E9, 0x_EF, 0x_63, 0x_4A, 0x_E4, 0x_4E, 0x_8D, 0x_F1, 0x_48, 0x_24, 0x_2A, 0x_F3, 0x_9D, 0x_03,
		0x_7E, 0x_11, 0x_1D, 0x_7C, 0x_76, 0x_32, 0x_A8, 0x_2F, 0x_EC, 0x_18, 0x_3A, 0x_07, 0x_F4, 0x_D9, 0x_30,
		0x_1F, 0x_F7, 0x_C7, 0x_01, 0x_DC, 0x_D6, 0x_08, 0x_33, 0x_B2, 0x_27, 0x_19, 0x_46, 0x_E1, 0x_39, 0x_4B,
		0x_5D, 0x_7D, 0x_70, 0x_36, 0x_04, 0x_85, 0x_58, 0x_7B, 0x_96, 0x_25, 0x_97, 0x_C0, 0x_43, 0x_E7, 0x_5E,
		0x_AE, 0x_62, 0x_D5, 0x_50, 0x_0F, 0x_98, 0x_72, 0x_84, 0x_44, 0x_B1, 0x_B5, 0x_F0, 0x_B8, 0x_71, 0x_CD,
		0x_BE, 0x_F2, 0x_B3, 0x_65, 0x_66, 0x_E6, 0x_F8, 0x_ED,
	];

	helper(S, BASE, 2_044_366);
}
// endregion
// region: s_has_signs_and_19_036_313_in_base_113
#[test]
fn s_has_signs_and_19_036_313_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_22, 0x_5E, 0x_1E, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_49, 0x_AA, 0x_8C, 0x_85, 0x_92, 0x_EF, 0x_87, 0x_5F, 0x_7A, 0x_BC, 0x_50, 0x_B4, 0x_22, 0x_81,
		0x_E0, 0x_46, 0x_4F, 0x_D8, 0x_86, 0x_9B, 0x_5E, 0x_35, 0x_B8, 0x_8F, 0x_42, 0x_54, 0x_2C, 0x_13, 0x_65,
		0x_F5, 0x_3A, 0x_1C, 0x_4D, 0x_6E, 0x_40, 0x_7C, 0x_45, 0x_AD, 0x_5D, 0x_1F, 0x_33, 0x_EC, 0x_7F, 0x_B2,
		0x_6C, 0x_8D, 0x_84, 0x_62, 0x_75, 0x_0F, 0x_D7, 0x_4B, 0x_69, 0x_C6, 0x_26, 0x_14, 0x_05, 0x_3F, 0x_76,
		0x_A5, 0x_F3, 0x_79, 0x_59, 0x_7E, 0x_A9, 0x_9F, 0x_2A, 0x_8E, 0x_F9, 0x_64, 0x_B3, 0x_03, 0x_4A, 0x_68,
		0x_CB, 0x_18, 0x_58, 0x_30, 0x_6B, 0x_11, 0x_DC, 0x_91, 0x_34, 0x_73, 0x_FC, 0x_02, 0x_C0, 0x_90, 0x_B6,
		0x_95, 0x_C1, 0x_1E, 0x_F4, 0x_A1, 0x_9C, 0x_B9, 0x_A0, 0x_F8, 0x_6A, 0x_39, 0x_F1, 0x_B0, 0x_56, 0x_CF,
		0x_29, 0x_5A, 0x_B1, 0x_52, 0x_51, 0x_ED, 0x_E3, 0x_80,
	];

	helper(S, BASE, 19_036_313);
}
// endregion
// region: s_has_signs_and_858_798_199_in_base_113
#[test]
fn s_has_signs_and_858_798_199_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_99, 0x_46, 0x_C0, 0x_8E, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_CC, 0x_39, 0x_8F, 0x_45, 0x_99, 0x_16, 0x_28, 0x_44, 0x_7C, 0x_79, 0x_80, 0x_AF, 0x_3B, 0x_12,
		0x_D2, 0x_82, 0x_BA, 0x_6F, 0x_D9, 0x_3A, 0x_C0, 0x_4F, 0x_11, 0x_51, 0x_5D, 0x_7D, 0x_BF, 0x_85, 0x_7B,
		0x_46, 0x_F4, 0x_E1, 0x_E5, 0x_93, 0x_B3, 0x_36, 0x_9B, 0x_AB, 0x_C2, 0x_4C, 0x_BE, 0x_10, 0x_D6, 0x_F8,
		0x_75, 0x_13, 0x_C8, 0x_A6, 0x_F9, 0x_A8, 0x_02, 0x_43, 0x_32, 0x_EC, 0x_14, 0x_8E, 0x_E7, 0x_15, 0x_B9,
		0x_6C, 0x_A5, 0x_81, 0x_73, 0x_DC, 0x_5A, 0x_1C, 0x_06, 0x_59, 0x_BC, 0x_58, 0x_B8, 0x_E0, 0x_50, 0x_47,
		0x_FC, 0x_6A, 0x_4B, 0x_CF, 0x_68, 0x_53, 0x_7E, 0x_01, 0x_4A, 0x_D7, 0x_F5, 0x_69, 0x_23, 0x_2C, 0x_C5,
		0x_2A, 0x_A9, 0x_03, 0x_90, 0x_64, 0x_19, 0x_49, 0x_FD, 0x_38, 0x_E8, 0x_94, 0x_34, 0x_A7, 0x_F0, 0x_71,
		0x_CA, 0x_D4, 0x_5C, 0x_DB, 0x_1A, 0x_72, 0x_FF, 0x_31,
	];

	helper(S, BASE, 858_798_199);
}
// endregion
// region: s_has_signs_and_2_in_base_193
#[test]
fn s_has_signs_and_2_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_15, 0x_D0, 0x_6F, 0x_25, 0x_EB, 0x_BA, 0x_59, 0x_0E, 0x_43, 0x_AA, 0x_C2, 0x_61, 0x_B6, 0x_8B,
		0x_CD, 0x_C8, 0x_48, 0x_BD, 0x_76, 0x_05, 0x_23, 0x_AF, 0x_B0, 0x_9D, 0x_8E, 0x_78, 0x_99, 0x_DF, 0x_4C,
		0x_E6, 0x_81, 0x_37, 0x_3D, 0x_3A, 0x_63, 0x_89, 0x_EC, 0x_2F, 0x_E9, 0x_D1, 0x_CA, 0x_CE, 0x_9F, 0x_87,
		0x_B3, 0x_88, 0x_F0, 0x_29, 0x_F5, 0x_F3, 0x_51, 0x_CF, 0x_A3, 0x_4F, 0x_F8, 0x_E5, 0x_C6, 0x_FE, 0x_84,
		0x_C5, 0x_10, 0x_CC, 0x_11, 0x_FC, 0x_18, 0x_3F, 0x_49, 0x_26, 0x_82, 0x_C7, 0x_BE, 0x_93, 0x_36, 0x_4E,
		0x_FA, 0x_08, 0x_B2, 0x_EF, 0x_6D, 0x_4D, 0x_BB, 0x_97, 0x_16, 0x_6E, 0x_70, 0x_39, 0x_A6, 0x_52, 0x_A5,
		0x_30, 0x_71, 0x_A7, 0x_47, 0x_53, 0x_F2, 0x_C9, 0x_5D, 0x_D9, 0x_57, 0x_7C, 0x_C3, 0x_3B, 0x_AD, 0x_1C,
		0x_AB, 0x_5C, 0x_74, 0x_96, 0x_E2, 0x_4A, 0x_1D, 0x_1B, 0x_8C, 0x_55, 0x_FB, 0x_40, 0x_F9, 0x_80, 0x_5A,
		0x_6B, 0x_E7, 0x_7E, 0x_C0, 0x_5B, 0x_DE, 0x_45, 0x_44, 0x_AE, 0x_42, 0x_3E, 0x_73, 0x_1A, 0x_8F, 0x_02,
		0x_A2, 0x_77, 0x_06, 0x_8D, 0x_62, 0x_BF, 0x_A0, 0x_A1, 0x_17, 0x_BC, 0x_B5, 0x_54, 0x_04, 0x_95, 0x_D4,
		0x_72, 0x_07, 0x_28, 0x_7B, 0x_2E, 0x_66, 0x_60, 0x_85, 0x_33, 0x_F4, 0x_38, 0x_FD, 0x_8A, 0x_41, 0x_31,
		0x_A4, 0x_E4, 0x_35, 0x_B7, 0x_E0, 0x_22, 0x_7A, 0x_3C, 0x_C1, 0x_91, 0x_AC, 0x_98, 0x_64, 0x_68, 0x_56,
		0x_DD, 0x_E1, 0x_5E, 0x_EE, 0x_79, 0x_F1, 0x_6C, 0x_5F, 0x_0F, 0x_32, 0x_B1, 0x_A9, 0x_67,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_signs_and_31_in_base_193
#[test]
fn s_has_signs_and_31_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_B8, 0x_28, 0x_DD, 0x_DF, 0x_11, 0x_3B, 0x_51, 0x_C5, 0x_74, 0x_CF, 0x_BD, 0x_FB, 0x_FA, 0x_F3,
		0x_5E, 0x_D5, 0x_61, 0x_D9, 0x_35, 0x_7E, 0x_55, 0x_81, 0x_8E, 0x_21, 0x_99, 0x_02, 0x_4A, 0x_EB, 0x_18,
		0x_AD, 0x_B3, 0x_6E, 0x_2E, 0x_A6, 0x_4C, 0x_F4, 0x_E7, 0x_82, 0x_34, 0x_A3, 0x_A9, 0x_9A, 0x_15, 0x_C8,
		0x_9B, 0x_9C, 0x_7B, 0x_A0, 0x_C1, 0x_56, 0x_69, 0x_54, 0x_37, 0x_40, 0x_98, 0x_B7, 0x_5D, 0x_50, 0x_BC,
		0x_17, 0x_A2, 0x_79, 0x_EE, 0x_95, 0x_84, 0x_67, 0x_D2, 0x_70, 0x_CD, 0x_52, 0x_F2, 0x_FE, 0x_65, 0x_4D,
		0x_AC, 0x_94, 0x_8D, 0x_62, 0x_59, 0x_AF, 0x_DE, 0x_BE, 0x_EA, 0x_7F, 0x_25, 0x_29, 0x_B1, 0x_07, 0x_0E,
		0x_26, 0x_DC, 0x_B0, 0x_46, 0x_B5, 0x_A7, 0x_08, 0x_93, 0x_38, 0x_BB, 0x_B9, 0x_C2, 0x_3A, 0x_63, 0x_E2,
		0x_30, 0x_AA, 0x_23, 0x_B6, 0x_47, 0x_76, 0x_F9, 0x_32, 0x_5C, 0x_83, 0x_90, 0x_01, 0x_41, 0x_78, 0x_7A,
		0x_BA, 0x_FF, 0x_D8, 0x_12, 0x_D7, 0x_66, 0x_CA, 0x_6C, 0x_FD, 0x_36, 0x_DB, 0x_C3, 0x_D1, 0x_80, 0x_C0,
		0x_C7, 0x_F1, 0x_E6, 0x_2F, 0x_D3, 0x_4F, 0x_10, 0x_A8, 0x_9F, 0x_EF, 0x_5F, 0x_A1, 0x_B2, 0x_68, 0x_6F,
		0x_58, 0x_FC, 0x_8F, 0x_D6, 0x_06, 0x_5B, 0x_D0, 0x_9E, 0x_64, 0x_B4, 0x_1A, 0x_13, 0x_44, 0x_75, 0x_60,
		0x_86, 0x_87, 0x_E4, 0x_43, 0x_4E, 0x_24, 0x_27, 0x_C6, 0x_96, 0x_6A, 0x_92, 0x_F6, 0x_1E, 0x_AB, 0x_CB,
		0x_DA, 0x_1D, 0x_9D, 0x_3E, 0x_2C, 0x_6D, 0x_8C, 0x_42, 0x_91, 0x_4B, 0x_3D, 0x_39, 0x_A5,
	];

	helper(S, BASE, 31);
}
// endregion
// region: s_has_signs_and_819_in_base_193
#[test]
fn s_has_signs_and_819_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_DD, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_FD, 0x_85, 0x_87, 0x_71, 0x_DD, 0x_C9, 0x_4D, 0x_B4, 0x_6F, 0x_3E, 0x_E0, 0x_15, 0x_A8, 0x_D8, 0x_C3,
		0x_7D, 0x_86, 0x_E8, 0x_6E, 0x_24, 0x_BA, 0x_B2, 0x_5A, 0x_5D, 0x_F6, 0x_14, 0x_DF, 0x_50, 0x_CA, 0x_53,
		0x_29, 0x_08, 0x_9A, 0x_74, 0x_05, 0x_5E, 0x_A7, 0x_2E, 0x_07, 0x_58, 0x_7F, 0x_A2, 0x_61, 0x_D1, 0x_88,
		0x_42, 0x_DC, 0x_43, 0x_16, 0x_6D, 0x_84, 0x_9F, 0x_44, 0x_B0, 0x_30, 0x_C1, 0x_75, 0x_7C, 0x_81, 0x_C6,
		0x_01, 0x_F1, 0x_9D, 0x_DB, 0x_27, 0x_52, 0x_22, 0x_B8, 0x_77, 0x_E2, 0x_6C, 0x_76, 0x_F7, 0x_C0, 0x_4F,
		0x_89, 0x_1C, 0x_A0, 0x_1A, 0x_4E, 0x_C4, 0x_3F, 0x_83, 0x_62, 0x_B1, 0x_0F, 0x_10, 0x_47, 0x_AC, 0x_0E,
		0x_23, 0x_2F, 0x_5B, 0x_32, 0x_93, 0x_80, 0x_FB, 0x_C5, 0x_C2, 0x_11, 0x_56, 0x_E5, 0x_D9, 0x_6B, 0x_F3,
		0x_97, 0x_64, 0x_ED, 0x_F8, 0x_E1, 0x_D7, 0x_69, 0x_34, 0x_78, 0x_7E, 0x_8A, 0x_57, 0x_AF, 0x_92, 0x_EA,
		0x_82, 0x_E6, 0x_CE, 0x_1F, 0x_A9, 0x_BF, 0x_A3, 0x_F9, 0x_F4, 0x_1E, 0x_35, 0x_EB, 0x_37, 0x_C7, 0x_B3,
		0x_95, 0x_CB, 0x_04, 0x_B6, 0x_E9, 0x_8B, 0x_E3, 0x_25, 0x_BE, 0x_40, 0x_46, 0x_65, 0x_66, 0x_3B, 0x_BB,
		0x_8F, 0x_DA, 0x_68, 0x_A6, 0x_48, 0x_8D, 0x_F0, 0x_6A, 0x_21, 0x_E7, 0x_79, 0x_D6, 0x_8C, 0x_38, 0x_03,
		0x_45, 0x_36, 0x_12, 0x_96, 0x_B5, 0x_EF, 0x_7B, 0x_D3, 0x_60, 0x_2C, 0x_BD, 0x_4C, 0x_91, 0x_5C, 0x_2A,
		0x_9E, 0x_EC, 0x_FF, 0x_72, 0x_19, 0x_3D, 0x_CC, 0x_63, 0x_AE, 0x_BC, 0x_DE, 0x_AA, 0x_90,
	];

	helper(S, BASE, 819);
}
// endregion
// region: s_has_signs_and_7_588_in_base_193
#[test]
fn s_has_signs_and_7_588_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_13, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_8C, 0x_43, 0x_15, 0x_18, 0x_BA, 0x_02, 0x_56, 0x_3A, 0x_D4, 0x_CD, 0x_94, 0x_BC, 0x_AE, 0x_33,
		0x_8E, 0x_97, 0x_DA, 0x_EC, 0x_67, 0x_ED, 0x_35, 0x_E0, 0x_C3, 0x_FB, 0x_DD, 0x_84, 0x_59, 0x_87, 0x_57,
		0x_99, 0x_8D, 0x_FA, 0x_B1, 0x_BD, 0x_9C, 0x_DB, 0x_C9, 0x_A4, 0x_13, 0x_7B, 0x_1E, 0x_C0, 0x_1C, 0x_5A,
		0x_74, 0x_A7, 0x_7E, 0x_6E, 0x_50, 0x_E1, 0x_3E, 0x_54, 0x_79, 0x_22, 0x_4E, 0x_F8, 0x_D1, 0x_44, 0x_6C,
		0x_32, 0x_53, 0x_61, 0x_B8, 0x_9F, 0x_6F, 0x_06, 0x_65, 0x_E8, 0x_4F, 0x_01, 0x_31, 0x_37, 0x_A1, 0x_3B,
		0x_AB, 0x_5D, 0x_07, 0x_45, 0x_5F, 0x_AF, 0x_4C, 0x_7C, 0x_82, 0x_F9, 0x_6A, 0x_03, 0x_F7, 0x_A5, 0x_F6,
		0x_2E, 0x_4A, 0x_14, 0x_1F, 0x_D7, 0x_2C, 0x_B9, 0x_CC, 0x_A9, 0x_DE, 0x_86, 0x_F4, 0x_E5, 0x_19, 0x_AD,
		0x_EA, 0x_F0, 0x_16, 0x_EE, 0x_30, 0x_6B, 0x_90, 0x_89, 0x_3C, 0x_63, 0x_2A, 0x_68, 0x_42, 0x_F3, 0x_F1,
		0x_62, 0x_DF, 0x_BE, 0x_41, 0x_A3, 0x_70, 0x_66, 0x_C7, 0x_3F, 0x_5B, 0x_FC, 0x_05, 0x_AC, 0x_27, 0x_B4,
		0x_0F, 0x_A8, 0x_98, 0x_B3, 0x_E6, 0x_95, 0x_E3, 0x_64, 0x_C6, 0x_85, 0x_78, 0x_A6, 0x_25, 0x_CB, 0x_D8,
		0x_8B, 0x_96, 0x_51, 0x_7D, 0x_93, 0x_55, 0x_C1, 0x_92, 0x_D0, 0x_FD, 0x_91, 0x_24, 0x_B6, 0x_A2, 0x_52,
		0x_81, 0x_3D, 0x_2F, 0x_10, 0x_B0, 0x_B5, 0x_A0, 0x_23, 0x_D5, 0x_AA, 0x_1B, 0x_9B, 0x_D6, 0x_9E, 0x_7A,
		0x_12, 0x_72, 0x_21, 0x_39, 0x_28, 0x_F2, 0x_17, 0x_F5, 0x_48, 0x_29, 0x_47, 0x_E4, 0x_C5,
	];

	helper(S, BASE, 7_588);
}
// endregion
// region: s_has_signs_and_29_002_in_base_193
#[test]
fn s_has_signs_and_29_002_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_46, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_D0, 0x_98, 0x_73, 0x_2E, 0x_C4, 0x_B2, 0x_A3, 0x_A0, 0x_1A, 0x_34, 0x_78, 0x_E7, 0x_43, 0x_87, 0x_9D,
		0x_BB, 0x_BD, 0x_93, 0x_C0, 0x_EF, 0x_75, 0x_5D, 0x_5B, 0x_50, 0x_AF, 0x_E2, 0x_E3, 0x_4F, 0x_7D, 0x_63,
		0x_3B, 0x_F0, 0x_D8, 0x_7E, 0x_6A, 0x_DE, 0x_99, 0x_EA, 0x_44, 0x_A2, 0x_64, 0x_A6, 0x_3E, 0x_29, 0x_BE,
		0x_B6, 0x_49, 0x_DD, 0x_68, 0x_6B, 0x_D6, 0x_FF, 0x_7F, 0x_AB, 0x_CE, 0x_4B, 0x_82, 0x_A4, 0x_AD, 0x_04,
		0x_D9, 0x_8A, 0x_A5, 0x_33, 0x_E1, 0x_27, 0x_66, 0x_F8, 0x_B3, 0x_9A, 0x_40, 0x_12, 0x_DA, 0x_4A, 0x_5A,
		0x_FC, 0x_D2, 0x_1D, 0x_88, 0x_E8, 0x_F5, 0x_39, 0x_92, 0x_90, 0x_15, 0x_D7, 0x_3C, 0x_21, 0x_11, 0x_16,
		0x_B5, 0x_4E, 0x_A1, 0x_36, 0x_57, 0x_58, 0x_03, 0x_D3, 0x_08, 0x_7B, 0x_B0, 0x_42, 0x_72, 0x_8C, 0x_37,
		0x_95, 0x_DF, 0x_5F, 0x_FB, 0x_D4, 0x_02, 0x_6C, 0x_B8, 0x_EB, 0x_E5, 0x_D5, 0x_1F, 0x_05, 0x_F6, 0x_94,
		0x_AA, 0x_62, 0x_2F, 0x_85, 0x_80, 0x_56, 0x_96, 0x_F3, 0x_91, 0x_30, 0x_79, 0x_F1, 0x_1B, 0x_E9, 0x_C8,
		0x_19, 0x_81, 0x_69, 0x_CA, 0x_5E, 0x_C7, 0x_54, 0x_86, 0x_C1, 0x_24, 0x_B9, 0x_65, 0x_55, 0x_B1, 0x_45,
		0x_46, 0x_6F, 0x_07, 0x_8B, 0x_E4, 0x_77, 0x_CD, 0x_F4, 0x_C6, 0x_8F, 0x_DB, 0x_5C, 0x_F7, 0x_E6, 0x_B4,
		0x_1E, 0x_32, 0x_70, 0x_7C, 0x_CB, 0x_A7, 0x_BA, 0x_74, 0x_3D, 0x_C3, 0x_A8, 0x_31, 0x_48, 0x_9F, 0x_84,
		0x_D1, 0x_ED, 0x_A9, 0x_8D, 0x_53, 0x_18, 0x_3F, 0x_4C, 0x_0F, 0x_EE, 0x_22, 0x_35, 0x_2C,
	];

	helper(S, BASE, 29_002);
}
// endregion
// region: s_has_signs_and_491_719_in_base_193
#[test]
fn s_has_signs_and_491_719_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_81, 0x_7D, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_FA, 0x_74, 0x_A3, 0x_AE, 0x_94, 0x_1D, 0x_15, 0x_A0, 0x_7E, 0x_34, 0x_28, 0x_BF, 0x_81, 0x_8F,
		0x_3B, 0x_47, 0x_76, 0x_1B, 0x_E6, 0x_1C, 0x_FC, 0x_30, 0x_E7, 0x_A6, 0x_D8, 0x_5A, 0x_9D, 0x_85, 0x_13,
		0x_5B, 0x_54, 0x_C4, 0x_D6, 0x_8D, 0x_A9, 0x_68, 0x_EE, 0x_7D, 0x_6D, 0x_5D, 0x_63, 0x_3C, 0x_D4, 0x_C1,
		0x_9A, 0x_B7, 0x_04, 0x_FE, 0x_88, 0x_98, 0x_B1, 0x_10, 0x_9E, 0x_4B, 0x_87, 0x_80, 0x_1E, 0x_45, 0x_71,
		0x_E2, 0x_4D, 0x_AB, 0x_24, 0x_DA, 0x_E5, 0x_5F, 0x_01, 0x_25, 0x_B9, 0x_77, 0x_11, 0x_97, 0x_3A, 0x_02,
		0x_AD, 0x_EB, 0x_B5, 0x_EC, 0x_6B, 0x_4C, 0x_9B, 0x_38, 0x_61, 0x_99, 0x_A4, 0x_66, 0x_CD, 0x_84, 0x_14,
		0x_12, 0x_4E, 0x_05, 0x_F9, 0x_3D, 0x_CC, 0x_E9, 0x_E4, 0x_16, 0x_50, 0x_43, 0x_07, 0x_1A, 0x_90, 0x_6E,
		0x_72, 0x_23, 0x_B6, 0x_33, 0x_8C, 0x_F8, 0x_C3, 0x_6F, 0x_7C, 0x_82, 0x_B8, 0x_DB, 0x_37, 0x_8E, 0x_78,
		0x_46, 0x_18, 0x_4A, 0x_BA, 0x_F2, 0x_DD, 0x_AA, 0x_C2, 0x_51, 0x_3E, 0x_2E, 0x_C6, 0x_AF, 0x_E1, 0x_57,
		0x_79, 0x_67, 0x_EF, 0x_29, 0x_F1, 0x_C8, 0x_CB, 0x_69, 0x_FB, 0x_CF, 0x_93, 0x_A5, 0x_95, 0x_F0, 0x_06,
		0x_26, 0x_96, 0x_7F, 0x_FF, 0x_C9, 0x_9C, 0x_7B, 0x_D1, 0x_CA, 0x_EA, 0x_91, 0x_8B, 0x_35, 0x_49, 0x_1F,
		0x_39, 0x_70, 0x_F7, 0x_36, 0x_19, 0x_55, 0x_48, 0x_D7, 0x_6C, 0x_F5, 0x_65, 0x_92, 0x_E0, 0x_FD, 0x_31,
		0x_BE, 0x_73, 0x_7A, 0x_2A, 0x_A1, 0x_56, 0x_27, 0x_D3, 0x_41, 0x_CE, 0x_A2, 0x_A7, 0x_62,
	];

	helper(S, BASE, 491_719);
}
// endregion
// region: s_has_signs_and_8_522_106_in_base_193
#[test]
fn s_has_signs_and_8_522_106_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_87, 0x_FB, 0x_19, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_87, 0x_48, 0x_14, 0x_75, 0x_63, 0x_A4, 0x_81, 0x_24, 0x_99, 0x_EA, 0x_57, 0x_8E, 0x_B6, 0x_AC,
		0x_1C, 0x_6E, 0x_E9, 0x_54, 0x_33, 0x_73, 0x_BC, 0x_51, 0x_F2, 0x_90, 0x_64, 0x_4B, 0x_9F, 0x_A7, 0x_47,
		0x_31, 0x_04, 0x_B7, 0x_1A, 0x_A8, 0x_FB, 0x_AE, 0x_FE, 0x_6A, 0x_BD, 0x_EE, 0x_AA, 0x_9B, 0x_D3, 0x_ED,
		0x_4C, 0x_5E, 0x_7D, 0x_D6, 0x_B4, 0x_16, 0x_3F, 0x_2C, 0x_6B, 0x_BA, 0x_76, 0x_74, 0x_77, 0x_94, 0x_CA,
		0x_98, 0x_6D, 0x_EC, 0x_AB, 0x_DA, 0x_A3, 0x_80, 0x_67, 0x_3C, 0x_F9, 0x_9E, 0x_2F, 0x_38, 0x_3B, 0x_BE,
		0x_E1, 0x_5F, 0x_7C, 0x_17, 0x_61, 0x_A9, 0x_42, 0x_CB, 0x_59, 0x_A1, 0x_97, 0x_46, 0x_21, 0x_15, 0x_72,
		0x_40, 0x_71, 0x_8C, 0x_E5, 0x_0E, 0x_B3, 0x_C6, 0x_1F, 0x_13, 0x_BF, 0x_B0, 0x_5A, 0x_37, 0x_85, 0x_D7,
		0x_03, 0x_D2, 0x_E7, 0x_29, 0x_4D, 0x_DF, 0x_56, 0x_6C, 0x_5D, 0x_E6, 0x_34, 0x_69, 0x_60, 0x_CD, 0x_8A,
		0x_12, 0x_8B, 0x_F0, 0x_F7, 0x_7B, 0x_BB, 0x_DC, 0x_62, 0x_DB, 0x_2A, 0x_E8, 0x_D8, 0x_9D, 0x_7F, 0x_C8,
		0x_C9, 0x_F3, 0x_7A, 0x_E3, 0x_79, 0x_FD, 0x_C2, 0x_AD, 0x_44, 0x_FC, 0x_D0, 0x_66, 0x_07, 0x_C1, 0x_5C,
		0x_F8, 0x_19, 0x_02, 0x_D5, 0x_52, 0x_CE, 0x_92, 0x_35, 0x_23, 0x_9A, 0x_7E, 0x_4F, 0x_C4, 0x_C5, 0x_06,
		0x_01, 0x_C7, 0x_1B, 0x_55, 0x_E0, 0x_8F, 0x_EF, 0x_1E, 0x_30, 0x_DE, 0x_39, 0x_F4, 0x_9C, 0x_F1, 0x_3E,
		0x_28, 0x_B5, 0x_88, 0x_93, 0x_08, 0x_45, 0x_11, 0x_4E, 0x_A0, 0x_A5, 0x_82, 0x_8D, 0x_3D,
	];

	helper(S, BASE, 8_522_106);
}
// endregion
// region: s_has_signs_and_45_727_742_in_base_193
#[test]
fn s_has_signs_and_45_727_742_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_C2, 0x_FF, 0x_AA, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_FD, 0x_7D, 0x_72, 0x_31, 0x_74, 0x_50, 0x_C2, 0x_A1, 0x_F6, 0x_6D, 0x_FE, 0x_80, 0x_02, 0x_4F, 0x_F3,
		0x_15, 0x_47, 0x_9C, 0x_66, 0x_D8, 0x_51, 0x_62, 0x_B8, 0x_04, 0x_90, 0x_4C, 0x_1A, 0x_37, 0x_75, 0x_7E,
		0x_7F, 0x_CC, 0x_45, 0x_1C, 0x_8A, 0x_53, 0x_06, 0x_E9, 0x_86, 0x_A0, 0x_C4, 0x_8F, 0x_4E, 0x_F1, 0x_13,
		0x_4B, 0x_AE, 0x_F0, 0x_B7, 0x_3D, 0x_89, 0x_5F, 0x_E3, 0x_34, 0x_BE, 0x_1E, 0x_2A, 0x_87, 0x_40, 0x_28,
		0x_64, 0x_76, 0x_B4, 0x_A7, 0x_95, 0x_8E, 0x_41, 0x_23, 0x_F8, 0x_FF, 0x_CB, 0x_AC, 0x_E2, 0x_D2, 0x_63,
		0x_EC, 0x_F5, 0x_B3, 0x_B0, 0x_77, 0x_7B, 0x_11, 0x_07, 0x_DC, 0x_CF, 0x_3E, 0x_F2, 0x_C0, 0x_5A, 0x_22,
		0x_25, 0x_83, 0x_3B, 0x_0F, 0x_5E, 0x_8D, 0x_B1, 0x_91, 0x_6B, 0x_2C, 0x_32, 0x_9F, 0x_18, 0x_C9, 0x_D3,
		0x_65, 0x_57, 0x_71, 0x_4A, 0x_A9, 0x_6A, 0x_AB, 0x_5C, 0x_DE, 0x_D5, 0x_D4, 0x_9D, 0x_30, 0x_DF, 0x_99,
		0x_AA, 0x_DD, 0x_6C, 0x_46, 0x_17, 0x_92, 0x_A4, 0x_44, 0x_7A, 0x_73, 0x_D1, 0x_19, 0x_C5, 0x_EF, 0x_BC,
		0x_3C, 0x_C8, 0x_E5, 0x_B2, 0x_BF, 0x_60, 0x_82, 0x_4D, 0x_36, 0x_A8, 0x_C1, 0x_01, 0x_55, 0x_59, 0x_97,
		0x_EB, 0x_79, 0x_14, 0x_54, 0x_96, 0x_85, 0x_3A, 0x_24, 0x_EA, 0x_F9, 0x_94, 0x_C6, 0x_68, 0x_D9, 0x_27,
		0x_38, 0x_88, 0x_AF, 0x_58, 0x_EE, 0x_B9, 0x_39, 0x_2F, 0x_29, 0x_E1, 0x_0E, 0x_E7, 0x_03, 0x_3F, 0x_A2,
		0x_9B, 0x_98, 0x_CD, 0x_9E, 0x_C7, 0x_05, 0x_CE, 0x_DB, 0x_E0, 0x_F4, 0x_21, 0x_E8, 0x_70,
	];

	helper(S, BASE, 45_727_742);
}
// endregion
// region: s_has_signs_and_290_188_888_in_base_193
#[test]
fn s_has_signs_and_290_188_888_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_79, 0x_A3, 0x_93, 0x_BB,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_42, 0x_80, 0x_87, 0x_C4, 0x_06, 0x_21, 0x_27, 0x_47, 0x_40, 0x_E4, 0x_F6, 0x_9E, 0x_9A, 0x_AF,
		0x_B8, 0x_EF, 0x_C1, 0x_68, 0x_51, 0x_34, 0x_95, 0x_E5, 0x_7E, 0x_D2, 0x_05, 0x_F4, 0x_B1, 0x_91, 0x_A7,
		0x_39, 0x_CF, 0x_07, 0x_9D, 0x_01, 0x_DC, 0x_31, 0x_AA, 0x_5F, 0x_2A, 0x_79, 0x_AE, 0x_BE, 0x_A0, 0x_8B,
		0x_0E, 0x_0F, 0x_3C, 0x_7B, 0x_58, 0x_E7, 0x_15, 0x_A5, 0x_6D, 0x_55, 0x_B0, 0x_11, 0x_22, 0x_4F, 0x_64,
		0x_6F, 0x_96, 0x_18, 0x_28, 0x_26, 0x_E6, 0x_57, 0x_67, 0x_E0, 0x_1E, 0x_A3, 0x_BB, 0x_B7, 0x_45, 0x_6B,
		0x_78, 0x_3B, 0x_B6, 0x_D7, 0x_9B, 0x_36, 0x_C0, 0x_D1, 0x_61, 0x_FE, 0x_90, 0x_59, 0x_3E, 0x_AC, 0x_56,
		0x_94, 0x_8D, 0x_13, 0x_E8, 0x_3F, 0x_60, 0x_82, 0x_3A, 0x_38, 0x_93, 0x_BD, 0x_C8, 0x_2E, 0x_71, 0x_16,
		0x_02, 0x_4C, 0x_17, 0x_C5, 0x_D4, 0x_5C, 0x_75, 0x_FC, 0x_AD, 0x_A1, 0x_F7, 0x_C3, 0x_37, 0x_A4, 0x_D0,
		0x_B4, 0x_7F, 0x_D5, 0x_F5, 0x_8F, 0x_8C, 0x_84, 0x_66, 0x_23, 0x_1D, 0x_25, 0x_77, 0x_EC, 0x_35, 0x_1A,
		0x_D8, 0x_D3, 0x_DE, 0x_CA, 0x_65, 0x_FF, 0x_29, 0x_EB, 0x_FD, 0x_7A, 0x_52, 0x_48, 0x_83, 0x_14, 0x_24,
		0x_C2, 0x_3D, 0x_10, 0x_69, 0x_81, 0x_5E, 0x_FB, 0x_72, 0x_1F, 0x_B2, 0x_BC, 0x_33, 0x_70, 0x_F1, 0x_63,
		0x_41, 0x_5A, 0x_DF, 0x_6E, 0x_30, 0x_DD, 0x_CD, 0x_99, 0x_4B, 0x_F0, 0x_E3, 0x_B5, 0x_1C, 0x_5B, 0x_19,
		0x_53, 0x_4D, 0x_DB, 0x_04, 0x_98, 0x_D6, 0x_46, 0x_6C, 0x_49, 0x_12, 0x_F3, 0x_F2, 0x_86,
	];

	helper(S, BASE, 290_188_888);
}
// endregion
// region: s_has_signs_and_9_in_base_247
#[test]
fn s_has_signs_and_9_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_4D, 0x_D8, 0x_BD, 0x_E9, 0x_53, 0x_C5, 0x_67, 0x_5E, 0x_35, 0x_DA, 0x_33, 0x_DB, 0x_B8, 0x_10,
		0x_6B, 0x_E4, 0x_9B, 0x_74, 0x_E6, 0x_98, 0x_D4, 0x_9A, 0x_BA, 0x_23, 0x_3E, 0x_8C, 0x_8B, 0x_A3, 0x_80,
		0x_76, 0x_64, 0x_65, 0x_B2, 0x_59, 0x_83, 0x_D0, 0x_05, 0x_45, 0x_8E, 0x_CF, 0x_47, 0x_F7, 0x_CE, 0x_1D,
		0x_77, 0x_17, 0x_AD, 0x_D2, 0x_C4, 0x_79, 0x_AF, 0x_A9, 0x_68, 0x_78, 0x_14, 0x_B0, 0x_7D, 0x_F3, 0x_71,
		0x_36, 0x_9E, 0x_C1, 0x_87, 0x_51, 0x_4A, 0x_F4, 0x_61, 0x_1C, 0x_B1, 0x_F2, 0x_5B, 0x_75, 0x_90, 0x_57,
		0x_8D, 0x_6A, 0x_2A, 0x_4C, 0x_86, 0x_FE, 0x_2F, 0x_F8, 0x_A2, 0x_CC, 0x_60, 0x_2C, 0x_BF, 0x_29, 0x_81,
		0x_7A, 0x_7B, 0x_A7, 0x_43, 0x_C0, 0x_DE, 0x_5D, 0x_E3, 0x_42, 0x_A8, 0x_A1, 0x_88, 0x_2E, 0x_AC, 0x_9C,
		0x_DC, 0x_E1, 0x_6E, 0x_A6, 0x_BC, 0x_3A, 0x_4B, 0x_F1, 0x_30, 0x_D6, 0x_DD, 0x_1E, 0x_C2, 0x_69, 0x_39,
		0x_94, 0x_ED, 0x_22, 0x_12, 0x_9F, 0x_93, 0x_AB, 0x_7F, 0x_5C, 0x_A5, 0x_A0, 0x_13, 0x_E7, 0x_CA, 0x_46,
		0x_70, 0x_21, 0x_58, 0x_D9, 0x_6F, 0x_AE, 0x_E2, 0x_DF, 0x_BE, 0x_96, 0x_0E, 0x_EA, 0x_91, 0x_C8, 0x_38,
		0x_AA, 0x_02, 0x_C6, 0x_34, 0x_72, 0x_FA, 0x_C3, 0x_5A, 0x_3C, 0x_8F, 0x_27, 0x_0F, 0x_D5, 0x_D1, 0x_62,
		0x_25, 0x_C7, 0x_06, 0x_4F, 0x_CD, 0x_16, 0x_84, 0x_50, 0x_3F, 0x_A4, 0x_FB, 0x_66, 0x_40, 0x_07, 0x_BB,
		0x_48, 0x_3B, 0x_FD, 0x_15, 0x_5F, 0x_7C, 0x_1A, 0x_08, 0x_99, 0x_B6, 0x_E5, 0x_37, 0x_56, 0x_FC, 0x_95,
		0x_3D, 0x_FF, 0x_92, 0x_D3, 0x_EE, 0x_E8, 0x_B3, 0x_F0, 0x_6C, 0x_03, 0x_B7, 0x_73, 0x_E0, 0x_04, 0x_63,
		0x_49, 0x_CB, 0x_32, 0x_52, 0x_4E, 0x_18, 0x_01, 0x_85, 0x_F6, 0x_EB, 0x_8A, 0x_F9, 0x_B9, 0x_B4, 0x_6D,
		0x_89, 0x_41, 0x_28, 0x_54, 0x_F5, 0x_55, 0x_EC, 0x_31, 0x_24, 0x_11, 0x_D7, 0x_7E, 0x_26, 0x_9D, 0x_44,
		0x_97, 0x_1F, 0x_C9, 0x_1B, 0x_B5, 0x_82, 0x_EF,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_signs_and_75_in_base_247
#[test]
fn s_has_signs_and_75_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_28, 0x_5E, 0x_A4, 0x_9C, 0x_A0, 0x_2A, 0x_B7, 0x_69, 0x_94, 0x_58, 0x_5F, 0x_BB, 0x_39, 0x_22,
		0x_C1, 0x_6E, 0x_1F, 0x_54, 0x_C2, 0x_43, 0x_8E, 0x_1D, 0x_C0, 0x_6D, 0x_31, 0x_3B, 0x_8B, 0x_08, 0x_A3,
		0x_78, 0x_97, 0x_92, 0x_E4, 0x_CC, 0x_2E, 0x_D3, 0x_57, 0x_F3, 0x_02, 0x_83, 0x_82, 0x_D4, 0x_84, 0x_EE,
		0x_17, 0x_E7, 0x_B4, 0x_62, 0x_75, 0x_A5, 0x_72, 0x_C9, 0x_AC, 0x_77, 0x_73, 0x_ED, 0x_80, 0x_5D, 0x_6F,
		0x_C5, 0x_87, 0x_F8, 0x_CE, 0x_35, 0x_8D, 0x_9F, 0x_B6, 0x_EB, 0x_85, 0x_DD, 0x_19, 0x_88, 0x_E9, 0x_AE,
		0x_46, 0x_6C, 0x_91, 0x_14, 0x_FA, 0x_49, 0x_9D, 0x_64, 0x_FB, 0x_BD, 0x_3A, 0x_60, 0x_7E, 0x_3F, 0x_0F,
		0x_B1, 0x_55, 0x_34, 0x_9A, 0x_81, 0x_26, 0x_1A, 0x_9B, 0x_D1, 0x_C6, 0x_E1, 0x_F6, 0x_01, 0x_0E, 0x_7F,
		0x_D9, 0x_4C, 0x_9E, 0x_59, 0x_07, 0x_63, 0x_BF, 0x_BA, 0x_21, 0x_CD, 0x_79, 0x_A2, 0x_D7, 0x_13, 0x_C4,
		0x_5A, 0x_BE, 0x_44, 0x_B3, 0x_F7, 0x_EC, 0x_D0, 0x_52, 0x_E3, 0x_DF, 0x_23, 0x_45, 0x_4F, 0x_A6, 0x_CB,
		0x_67, 0x_D5, 0x_8F, 0x_6A, 0x_36, 0x_4D, 0x_AA, 0x_61, 0x_E5, 0x_15, 0x_27, 0x_25, 0x_95, 0x_AB, 0x_A1,
		0x_F9, 0x_FE, 0x_41, 0x_18, 0x_6B, 0x_99, 0x_CF, 0x_F2, 0x_30, 0x_56, 0x_5B, 0x_E2, 0x_2C, 0x_89, 0x_10,
		0x_04, 0x_11, 0x_DE, 0x_FF, 0x_CA, 0x_47, 0x_E6, 0x_33, 0x_12, 0x_A7, 0x_48, 0x_A9, 0x_EA, 0x_70, 0x_4A,
		0x_F4, 0x_68, 0x_42, 0x_3E, 0x_03, 0x_06, 0x_7C, 0x_7B, 0x_DB, 0x_3D, 0x_40, 0x_32, 0x_05, 0x_4B, 0x_3C,
		0x_E8, 0x_7D, 0x_F5, 0x_B9, 0x_A8, 0x_2F, 0x_B2, 0x_90, 0x_FD, 0x_66, 0x_71, 0x_50, 0x_AF, 0x_53, 0x_AD,
		0x_51, 0x_DC, 0x_C3, 0x_65, 0x_1C, 0x_86, 0x_C7, 0x_E0, 0x_7A, 0x_4E, 0x_98, 0x_B5, 0x_96, 0x_D8, 0x_EF,
		0x_16, 0x_8C, 0x_29, 0x_F0, 0x_B0, 0x_B8, 0x_1E, 0x_76, 0x_D6, 0x_8A, 0x_BC, 0x_38, 0x_DA, 0x_93, 0x_74,
		0x_F1, 0x_24, 0x_37, 0x_D2, 0x_C8, 0x_5C, 0x_1B,
	];

	helper(S, BASE, 75);
}
// endregion
// region: s_has_signs_and_490_in_base_247
#[test]
fn s_has_signs_and_490_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_A0, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_A0, 0x_10, 0x_46, 0x_DA, 0x_3D, 0x_B3, 0x_84, 0x_15, 0x_6F, 0x_1A, 0x_ED, 0x_98, 0x_32, 0x_13,
		0x_60, 0x_08, 0x_B0, 0x_38, 0x_30, 0x_3E, 0x_F6, 0x_EF, 0x_FE, 0x_D8, 0x_FA, 0x_73, 0x_87, 0x_C0, 0x_4F,
		0x_4B, 0x_88, 0x_DF, 0x_48, 0x_B5, 0x_83, 0x_80, 0x_BF, 0x_96, 0x_16, 0x_8E, 0x_F8, 0x_AF, 0x_A6, 0x_0F,
		0x_39, 0x_EC, 0x_1B, 0x_67, 0x_C7, 0x_25, 0x_22, 0x_F0, 0x_7F, 0x_6A, 0x_FB, 0x_DC, 0x_41, 0x_DE, 0x_5E,
		0x_66, 0x_5B, 0x_94, 0x_40, 0x_28, 0x_EE, 0x_3A, 0x_D7, 0x_D9, 0x_E5, 0x_E7, 0x_6B, 0x_D0, 0x_33, 0x_97,
		0x_90, 0x_12, 0x_8A, 0x_0E, 0x_FF, 0x_9F, 0x_45, 0x_A4, 0x_65, 0x_AD, 0x_9C, 0x_B7, 0x_7E, 0x_56, 0x_8B,
		0x_E9, 0x_E6, 0x_F5, 0x_AC, 0x_37, 0x_8C, 0x_CF, 0x_F1, 0x_A5, 0x_F3, 0x_4D, 0x_64, 0x_BC, 0x_8F, 0x_A9,
		0x_4A, 0x_E2, 0x_6C, 0x_9E, 0x_2A, 0x_E3, 0x_36, 0x_F9, 0x_82, 0x_5A, 0x_50, 0x_06, 0x_D3, 0x_21, 0x_C6,
		0x_C9, 0x_95, 0x_CC, 0x_79, 0x_02, 0x_BB, 0x_6D, 0x_5F, 0x_31, 0x_27, 0x_C1, 0x_4E, 0x_07, 0x_2C, 0x_54,
		0x_1E, 0x_C8, 0x_BA, 0x_AB, 0x_3B, 0x_49, 0x_3C, 0x_3F, 0x_D5, 0x_51, 0x_BE, 0x_52, 0x_29, 0x_17, 0x_24,
		0x_53, 0x_69, 0x_93, 0x_FC, 0x_19, 0x_F2, 0x_99, 0x_62, 0x_85, 0x_CE, 0x_A7, 0x_43, 0x_E8, 0x_CD, 0x_04,
		0x_A2, 0x_B1, 0x_58, 0x_E1, 0x_81, 0x_7B, 0x_1D, 0x_23, 0x_CB, 0x_14, 0x_D6, 0x_63, 0x_A1, 0x_86, 0x_9A,
		0x_92, 0x_8D, 0x_34, 0x_D4, 0x_7D, 0x_BD, 0x_5D, 0x_72, 0x_74, 0x_C2, 0x_AE, 0x_11, 0x_C3, 0x_6E, 0x_F4,
		0x_B9, 0x_B6, 0x_9B, 0x_2E, 0x_D2, 0x_05, 0x_18, 0x_C4, 0x_B2, 0x_E4, 0x_76, 0x_7A, 0x_01, 0x_C5, 0x_EA,
		0x_35, 0x_59, 0x_91, 0x_E0, 0x_B8, 0x_44, 0x_4C, 0x_77, 0x_DD, 0x_61, 0x_B4, 0x_26, 0x_42, 0x_75, 0x_71,
		0x_1C, 0x_68, 0x_47, 0x_7C, 0x_5C, 0x_89, 0x_D1, 0x_A8, 0x_FD, 0x_9D, 0x_DB, 0x_EB, 0x_AA, 0x_CA, 0x_A3,
		0x_57, 0x_70, 0x_55, 0x_F7, 0x_78, 0x_03, 0x_1F,
	];

	helper(S, BASE, 490);
}
// endregion
// region: s_has_signs_and_2_177_in_base_247
#[test]
fn s_has_signs_and_2_177_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_FB, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_37, 0x_85, 0x_D5, 0x_55, 0x_5A, 0x_E9, 0x_23, 0x_FB, 0x_AB, 0x_D1, 0x_19, 0x_2F, 0x_1A, 0x_68,
		0x_07, 0x_E0, 0x_66, 0x_AA, 0x_E6, 0x_B3, 0x_94, 0x_4D, 0x_D3, 0x_EC, 0x_49, 0x_DD, 0x_9F, 0x_2A, 0x_5D,
		0x_42, 0x_FC, 0x_57, 0x_3E, 0x_61, 0x_45, 0x_10, 0x_E7, 0x_7B, 0x_A6, 0x_F9, 0x_82, 0x_78, 0x_79, 0x_CB,
		0x_17, 0x_04, 0x_81, 0x_97, 0x_14, 0x_C2, 0x_9C, 0x_08, 0x_62, 0x_39, 0x_4E, 0x_1C, 0x_64, 0x_4F, 0x_52,
		0x_DA, 0x_F7, 0x_A3, 0x_C3, 0x_38, 0x_93, 0x_3F, 0x_75, 0x_4C, 0x_EE, 0x_03, 0x_A9, 0x_21, 0x_33, 0x_30,
		0x_8E, 0x_98, 0x_2C, 0x_28, 0x_AF, 0x_26, 0x_8D, 0x_DE, 0x_6C, 0x_9D, 0x_12, 0x_F8, 0x_F3, 0x_16, 0x_67,
		0x_77, 0x_5F, 0x_F4, 0x_C0, 0x_6A, 0x_6E, 0x_3D, 0x_E2, 0x_1F, 0x_B5, 0x_C5, 0x_58, 0x_EB, 0x_4A, 0x_4B,
		0x_9A, 0x_47, 0x_F2, 0x_5E, 0x_FE, 0x_7A, 0x_1D, 0x_31, 0x_05, 0x_3C, 0x_35, 0x_32, 0x_CA, 0x_F0, 0x_FF,
		0x_F6, 0x_7E, 0x_D6, 0x_83, 0x_B9, 0x_FD, 0x_EA, 0x_9E, 0x_34, 0x_80, 0x_50, 0x_AC, 0x_C8, 0x_B4, 0x_27,
		0x_86, 0x_BF, 0x_E1, 0x_C7, 0x_54, 0x_6B, 0x_E5, 0x_ED, 0x_3B, 0x_E8, 0x_8B, 0x_AD, 0x_A7, 0x_88, 0x_71,
		0x_13, 0x_CD, 0x_22, 0x_B6, 0x_1B, 0x_EF, 0x_99, 0x_2E, 0x_69, 0x_D8, 0x_24, 0x_48, 0x_25, 0x_B8, 0x_C4,
		0x_11, 0x_DC, 0x_FA, 0x_D9, 0x_CC, 0x_96, 0x_60, 0x_91, 0x_92, 0x_53, 0x_95, 0x_D0, 0x_A2, 0x_DF, 0x_72,
		0x_D2, 0x_9B, 0x_D7, 0x_29, 0x_6D, 0x_18, 0x_0F, 0x_44, 0x_A5, 0x_46, 0x_8C, 0x_C1, 0x_A0, 0x_59, 0x_CF,
		0x_5B, 0x_43, 0x_B1, 0x_84, 0x_8A, 0x_BD, 0x_BA, 0x_F5, 0x_15, 0x_BB, 0x_0E, 0x_65, 0x_73, 0x_E4, 0x_5C,
		0x_8F, 0x_B7, 0x_70, 0x_DB, 0x_AE, 0x_56, 0x_A1, 0x_87, 0x_7C, 0x_06, 0x_B2, 0x_A4, 0x_89, 0x_C9, 0x_B0,
		0x_02, 0x_40, 0x_CE, 0x_A8, 0x_E3, 0x_6F, 0x_41, 0x_36, 0x_D4, 0x_7D, 0x_76, 0x_BE, 0x_F1, 0x_74, 0x_63,
		0x_3A, 0x_01, 0x_7F, 0x_BC, 0x_1E, 0x_90, 0x_C6,
	];

	helper(S, BASE, 2_177);
}
// endregion
// region: s_has_signs_and_15_513_in_base_247
#[test]
fn s_has_signs_and_15_513_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_C4, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_71, 0x_31, 0x_A9, 0x_CF, 0x_BE, 0x_3E, 0x_6D, 0x_E3, 0x_CB, 0x_43, 0x_A7, 0x_B9, 0x_C3, 0x_4C, 0x_B1,
		0x_24, 0x_B7, 0x_8A, 0x_1E, 0x_22, 0x_9A, 0x_D0, 0x_EF, 0x_3C, 0x_7D, 0x_47, 0x_72, 0x_D5, 0x_7B, 0x_D1,
		0x_76, 0x_A3, 0x_DD, 0x_FD, 0x_C1, 0x_11, 0x_4E, 0x_F5, 0x_AF, 0x_0F, 0x_DB, 0x_BB, 0x_EC, 0x_8D, 0x_EA,
		0x_E9, 0x_E6, 0x_AC, 0x_CD, 0x_D9, 0x_1C, 0x_9B, 0x_FB, 0x_73, 0x_C0, 0x_41, 0x_A5, 0x_A8, 0x_38, 0x_F1,
		0x_3D, 0x_50, 0x_C4, 0x_90, 0x_05, 0x_40, 0x_84, 0x_06, 0x_F3, 0x_48, 0x_E1, 0x_14, 0x_6F, 0x_01, 0x_95,
		0x_CE, 0x_ED, 0x_23, 0x_88, 0x_07, 0x_EE, 0x_8E, 0x_55, 0x_96, 0x_7C, 0x_D2, 0x_A2, 0x_19, 0x_74, 0x_42,
		0x_FF, 0x_0E, 0x_26, 0x_57, 0x_51, 0x_79, 0x_D7, 0x_30, 0x_62, 0x_2A, 0x_A4, 0x_83, 0x_4D, 0x_69, 0x_58,
		0x_3F, 0x_82, 0x_7E, 0x_AD, 0x_75, 0x_70, 0x_CA, 0x_67, 0x_FA, 0x_1F, 0x_6A, 0x_78, 0x_A0, 0x_15, 0x_10,
		0x_AE, 0x_64, 0x_E5, 0x_89, 0x_A6, 0x_4B, 0x_5C, 0x_53, 0x_F8, 0x_18, 0x_B3, 0x_5A, 0x_1B, 0x_F2, 0x_9E,
		0x_BA, 0x_12, 0x_65, 0x_39, 0x_03, 0x_04, 0x_3A, 0x_54, 0x_D3, 0x_BC, 0x_DA, 0x_DF, 0x_91, 0x_68, 0x_C8,
		0x_21, 0x_9C, 0x_2C, 0x_C2, 0x_80, 0x_B4, 0x_AA, 0x_16, 0x_46, 0x_59, 0x_B8, 0x_4A, 0x_FE, 0x_81, 0x_27,
		0x_BF, 0x_E8, 0x_37, 0x_FC, 0x_C5, 0x_E2, 0x_17, 0x_45, 0x_B6, 0x_2F, 0x_25, 0x_F0, 0x_34, 0x_F6, 0x_AB,
		0x_DE, 0x_6B, 0x_77, 0x_B2, 0x_1A, 0x_66, 0x_86, 0x_35, 0x_B0, 0x_9D, 0x_6C, 0x_D6, 0x_6E, 0x_F7, 0x_F4,
		0x_63, 0x_7A, 0x_08, 0x_49, 0x_E4, 0x_E7, 0x_D4, 0x_E0, 0x_28, 0x_29, 0x_7F, 0x_9F, 0x_5D, 0x_60, 0x_CC,
		0x_C7, 0x_33, 0x_1D, 0x_92, 0x_8F, 0x_36, 0x_A1, 0x_87, 0x_4F, 0x_EB, 0x_5B, 0x_F9, 0x_B5, 0x_98, 0x_32,
		0x_61, 0x_8C, 0x_8B, 0x_56, 0x_DC, 0x_44, 0x_99, 0x_93, 0x_52, 0x_C9, 0x_13, 0x_D8, 0x_3B, 0x_5F, 0x_94,
		0x_2E, 0x_97, 0x_5E, 0x_BD, 0x_02, 0x_85, 0x_C6,
	];

	helper(S, BASE, 15_513);
}
// endregion
// region: s_has_signs_and_163_945_in_base_247
#[test]
fn s_has_signs_and_163_945_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_B2, 0x_49, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_E8, 0x_B2, 0x_8F, 0x_EA, 0x_03, 0x_BF, 0x_E4, 0x_4E, 0x_D2, 0x_79, 0x_C7, 0x_A0, 0x_A4, 0x_87,
		0x_75, 0x_89, 0x_02, 0x_0E, 0x_31, 0x_FB, 0x_17, 0x_50, 0x_CE, 0x_C5, 0x_88, 0x_CA, 0x_1F, 0x_92, 0x_E5,
		0x_81, 0x_04, 0x_EC, 0x_5D, 0x_E1, 0x_69, 0x_C0, 0x_2C, 0x_D6, 0x_DC, 0x_6D, 0x_6C, 0x_F1, 0x_CC, 0x_16,
		0x_22, 0x_41, 0x_BA, 0x_E2, 0x_56, 0x_93, 0x_F0, 0x_C4, 0x_A8, 0x_96, 0x_A1, 0x_D8, 0x_40, 0x_5C, 0x_CD,
		0x_A7, 0x_86, 0x_05, 0x_3F, 0x_D0, 0x_B5, 0x_B3, 0x_F9, 0x_9C, 0x_B9, 0x_77, 0x_4D, 0x_30, 0x_C6, 0x_2F,
		0x_07, 0x_94, 0x_5B, 0x_AF, 0x_EE, 0x_7C, 0x_8C, 0x_A3, 0x_91, 0x_90, 0x_1C, 0x_29, 0x_1D, 0x_76, 0x_9D,
		0x_67, 0x_5A, 0x_DE, 0x_D3, 0x_43, 0x_9B, 0x_19, 0x_59, 0x_14, 0x_D5, 0x_9E, 0x_26, 0x_63, 0x_F6, 0x_34,
		0x_7D, 0x_D4, 0x_F5, 0x_35, 0x_78, 0x_B1, 0x_4C, 0x_DD, 0x_FA, 0x_D9, 0x_FF, 0x_32, 0x_6A, 0x_2A, 0x_6B,
		0x_8A, 0x_06, 0x_45, 0x_53, 0x_3D, 0x_D7, 0x_AD, 0x_48, 0x_CB, 0x_25, 0x_B0, 0x_FC, 0x_DA, 0x_0F, 0x_7A,
		0x_36, 0x_85, 0x_DB, 0x_73, 0x_33, 0x_99, 0x_61, 0x_F8, 0x_CF, 0x_39, 0x_6E, 0x_4F, 0x_B6, 0x_A2, 0x_3A,
		0x_4A, 0x_E0, 0x_9A, 0x_68, 0x_E6, 0x_66, 0x_2E, 0x_ED, 0x_51, 0x_62, 0x_1B, 0x_C2, 0x_13, 0x_72, 0x_B8,
		0x_74, 0x_65, 0x_80, 0x_A6, 0x_49, 0x_47, 0x_1A, 0x_55, 0x_3B, 0x_60, 0x_70, 0x_7F, 0x_52, 0x_B7, 0x_FD,
		0x_E9, 0x_9F, 0x_18, 0x_38, 0x_3C, 0x_AA, 0x_5F, 0x_3E, 0x_23, 0x_15, 0x_84, 0x_AB, 0x_97, 0x_71, 0x_58,
		0x_AE, 0x_E3, 0x_F2, 0x_DF, 0x_7E, 0x_64, 0x_AC, 0x_82, 0x_C3, 0x_8E, 0x_C1, 0x_A9, 0x_01, 0x_BD, 0x_BE,
		0x_EF, 0x_EB, 0x_08, 0x_54, 0x_27, 0x_B4, 0x_37, 0x_44, 0x_95, 0x_F4, 0x_D1, 0x_42, 0x_F7, 0x_46, 0x_57,
		0x_C8, 0x_F3, 0x_FE, 0x_6F, 0x_24, 0x_5E, 0x_BC, 0x_98, 0x_1E, 0x_E7, 0x_12, 0x_BB, 0x_10, 0x_C9, 0x_11,
		0x_21, 0x_28, 0x_8B, 0x_A5, 0x_7B, 0x_8D, 0x_83,
	];

	helper(S, BASE, 163_945);
}
// endregion
// region: s_has_signs_and_5_981_759_in_base_247
#[test]
fn s_has_signs_and_5_981_759_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_FA, 0x_83, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_BB, 0x_0F, 0x_21, 0x_D0, 0x_70, 0x_44, 0x_5A, 0x_8D, 0x_D1, 0x_6B, 0x_83, 0x_C8, 0x_9E, 0x_81,
		0x_8F, 0x_59, 0x_92, 0x_61, 0x_4D, 0x_DB, 0x_48, 0x_F6, 0x_98, 0x_2C, 0x_C2, 0x_4E, 0x_D7, 0x_18, 0x_7F,
		0x_55, 0x_78, 0x_35, 0x_72, 0x_07, 0x_EB, 0x_EC, 0x_64, 0x_86, 0x_84, 0x_5E, 0x_D3, 0x_56, 0x_5B, 0x_29,
		0x_14, 0x_39, 0x_FE, 0x_02, 0x_08, 0x_6D, 0x_19, 0x_3C, 0x_97, 0x_66, 0x_EF, 0x_80, 0x_28, 0x_A7, 0x_A9,
		0x_DF, 0x_49, 0x_58, 0x_57, 0x_1D, 0x_B6, 0x_AB, 0x_5C, 0x_B0, 0x_47, 0x_F5, 0x_3B, 0x_33, 0x_F3, 0x_EA,
		0x_D5, 0x_C3, 0x_46, 0x_9B, 0x_8C, 0x_31, 0x_B3, 0x_51, 0x_1A, 0x_76, 0x_BA, 0x_62, 0x_C4, 0x_F0, 0x_DD,
		0x_06, 0x_63, 0x_65, 0x_AA, 0x_E2, 0x_DE, 0x_C0, 0x_4A, 0x_FA, 0x_A6, 0x_22, 0x_16, 0x_10, 0x_17, 0x_BF,
		0x_DC, 0x_4C, 0x_24, 0x_54, 0x_F9, 0x_6F, 0x_A8, 0x_05, 0x_E3, 0x_34, 0x_B2, 0x_91, 0x_5F, 0x_82, 0x_AF,
		0x_41, 0x_D8, 0x_6E, 0x_4B, 0x_E8, 0x_87, 0x_F4, 0x_43, 0x_F8, 0x_C6, 0x_CF, 0x_75, 0x_0E, 0x_C5, 0x_7B,
		0x_99, 0x_5D, 0x_4F, 0x_94, 0x_B7, 0x_7C, 0x_E4, 0x_37, 0x_95, 0x_67, 0x_77, 0x_3A, 0x_B9, 0x_3E, 0x_E1,
		0x_E5, 0x_7E, 0x_69, 0x_F2, 0x_79, 0x_45, 0x_BD, 0x_CB, 0x_D6, 0x_FB, 0x_9C, 0x_9D, 0x_93, 0x_A0, 0x_13,
		0x_D2, 0x_A1, 0x_85, 0x_30, 0x_3D, 0x_88, 0x_C7, 0x_E9, 0x_CE, 0x_A5, 0x_DA, 0x_74, 0x_60, 0x_ED, 0x_52,
		0x_15, 0x_EE, 0x_27, 0x_71, 0x_12, 0x_23, 0x_FD, 0x_9A, 0x_2A, 0x_1E, 0x_AC, 0x_8A, 0x_03, 0x_1C, 0x_01,
		0x_F7, 0x_50, 0x_FF, 0x_3F, 0x_AE, 0x_40, 0x_B1, 0x_1B, 0x_F1, 0x_CD, 0x_D9, 0x_CC, 0x_6A, 0x_D4, 0x_CA,
		0x_B5, 0x_B4, 0x_2E, 0x_C9, 0x_8E, 0x_E0, 0x_32, 0x_90, 0x_42, 0x_11, 0x_BC, 0x_89, 0x_7A, 0x_2F, 0x_9F,
		0x_E6, 0x_8B, 0x_53, 0x_73, 0x_04, 0x_B8, 0x_A3, 0x_38, 0x_A4, 0x_6C, 0x_36, 0x_FC, 0x_C1, 0x_96, 0x_A2,
		0x_68, 0x_26, 0x_E7, 0x_7D, 0x_BE, 0x_AD, 0x_1F,
	];

	helper(S, BASE, 5_981_759);
}
// endregion
// region: s_has_signs_and_25_002_566_in_base_247
#[test]
fn s_has_signs_and_25_002_566_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_7B, 0x_83, 0x_37, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_7B, 0x_BE, 0x_03, 0x_AE, 0x_C5, 0x_91, 0x_F4, 0x_80, 0x_84, 0x_43, 0x_49, 0x_BC, 0x_E1, 0x_E5,
		0x_11, 0x_67, 0x_1F, 0x_8D, 0x_F6, 0x_6A, 0x_69, 0x_65, 0x_C7, 0x_5E, 0x_17, 0x_D2, 0x_A2, 0x_97, 0x_46,
		0x_5D, 0x_F8, 0x_12, 0x_7D, 0x_4E, 0x_B8, 0x_E2, 0x_C9, 0x_CE, 0x_CC, 0x_44, 0x_C3, 0x_53, 0x_AF, 0x_05,
		0x_71, 0x_8C, 0x_EA, 0x_01, 0x_39, 0x_BD, 0x_6C, 0x_72, 0x_D5, 0x_60, 0x_E0, 0x_3F, 0x_47, 0x_AD, 0x_22,
		0x_25, 0x_B6, 0x_06, 0x_6E, 0x_F3, 0x_A5, 0x_0E, 0x_A3, 0x_FF, 0x_78, 0x_B1, 0x_50, 0x_7A, 0x_30, 0x_4B,
		0x_A7, 0x_02, 0x_F0, 0x_45, 0x_07, 0x_23, 0x_D7, 0x_36, 0x_41, 0x_F9, 0x_2A, 0x_A8, 0x_18, 0x_3A, 0x_62,
		0x_A0, 0x_AA, 0x_BA, 0x_90, 0x_CD, 0x_5C, 0x_4D, 0x_04, 0x_D6, 0x_27, 0x_B2, 0x_CF, 0x_75, 0x_D1, 0x_24,
		0x_48, 0x_73, 0x_6D, 0x_FD, 0x_D0, 0x_55, 0x_38, 0x_EE, 0x_89, 0x_8E, 0x_3D, 0x_61, 0x_ED, 0x_CB, 0x_42,
		0x_3B, 0x_6B, 0x_BB, 0x_54, 0x_8B, 0x_13, 0x_EB, 0x_51, 0x_FC, 0x_5F, 0x_59, 0x_2F, 0x_88, 0x_7F, 0x_4A,
		0x_E3, 0x_1D, 0x_68, 0x_74, 0x_9B, 0x_A9, 0x_2C, 0x_5A, 0x_33, 0x_A4, 0x_AC, 0x_95, 0x_D9, 0x_9E, 0x_29,
		0x_CA, 0x_3E, 0x_32, 0x_99, 0x_C8, 0x_EC, 0x_C0, 0x_BF, 0x_DE, 0x_B0, 0x_4F, 0x_94, 0x_83, 0x_C1, 0x_21,
		0x_E7, 0x_8F, 0x_63, 0x_3C, 0x_64, 0x_F7, 0x_E9, 0x_B4, 0x_56, 0x_10, 0x_08, 0x_C4, 0x_70, 0x_B5, 0x_E6,
		0x_1E, 0x_40, 0x_2E, 0x_F1, 0x_79, 0x_C2, 0x_6F, 0x_26, 0x_DF, 0x_1C, 0x_92, 0x_16, 0x_1A, 0x_AB, 0x_19,
		0x_DA, 0x_15, 0x_35, 0x_85, 0x_9F, 0x_66, 0x_37, 0x_8A, 0x_31, 0x_D4, 0x_34, 0x_86, 0x_C6, 0x_FE, 0x_5B,
		0x_58, 0x_0F, 0x_E4, 0x_D3, 0x_B3, 0x_DB, 0x_93, 0x_9D, 0x_D8, 0x_7E, 0x_57, 0x_DC, 0x_52, 0x_98, 0x_9A,
		0x_4C, 0x_76, 0x_96, 0x_FB, 0x_DD, 0x_77, 0x_F2, 0x_B9, 0x_F5, 0x_9C, 0x_81, 0x_A1, 0x_E8, 0x_B7, 0x_28,
		0x_14, 0x_A6, 0x_FA, 0x_82, 0x_1B, 0x_EF, 0x_87,
	];

	helper(S, BASE, 25_002_566);
}
// endregion
// region: s_has_signs_and_330_538_956_in_base_247
#[test]
fn s_has_signs_and_330_538_956_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_72, 0x_DC, 0x_C2, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_E1, 0x_65, 0x_FA, 0x_92, 0x_81, 0x_8A, 0x_6B, 0x_A2, 0x_EA, 0x_50, 0x_E7, 0x_51, 0x_AA, 0x_A8,
		0x_EF, 0x_06, 0x_62, 0x_ED, 0x_77, 0x_85, 0x_72, 0x_B6, 0x_3C, 0x_87, 0x_01, 0x_4D, 0x_7C, 0x_BA, 0x_8F,
		0x_79, 0x_63, 0x_03, 0x_A0, 0x_D9, 0x_A7, 0x_C5, 0x_8B, 0x_5D, 0x_B7, 0x_3D, 0x_1A, 0x_13, 0x_8D, 0x_02,
		0x_38, 0x_BD, 0x_CC, 0x_AB, 0x_D1, 0x_93, 0x_19, 0x_57, 0x_5F, 0x_52, 0x_F7, 0x_F6, 0x_91, 0x_56, 0x_55,
		0x_07, 0x_A6, 0x_A9, 0x_C6, 0x_D2, 0x_EC, 0x_A3, 0x_41, 0x_31, 0x_F9, 0x_25, 0x_46, 0x_2E, 0x_D0, 0x_AE,
		0x_7A, 0x_FE, 0x_80, 0x_08, 0x_6F, 0x_DF, 0x_68, 0x_B3, 0x_64, 0x_9F, 0x_9B, 0x_E3, 0x_D7, 0x_5C, 0x_3F,
		0x_66, 0x_1D, 0x_AF, 0x_4A, 0x_95, 0x_F3, 0x_76, 0x_4C, 0x_32, 0x_CE, 0x_B2, 0x_05, 0x_0E, 0x_B0, 0x_2F,
		0x_8E, 0x_40, 0x_89, 0x_F4, 0x_BE, 0x_C9, 0x_F5, 0x_F2, 0x_D4, 0x_6E, 0x_82, 0x_04, 0x_83, 0x_F8, 0x_86,
		0x_7D, 0x_96, 0x_BF, 0x_44, 0x_CB, 0x_17, 0x_54, 0x_5A, 0x_DB, 0x_E6, 0x_BC, 0x_EE, 0x_98, 0x_B5, 0x_10,
		0x_FC, 0x_29, 0x_C7, 0x_D8, 0x_E9, 0x_30, 0x_3A, 0x_42, 0x_E8, 0x_1F, 0x_E2, 0x_49, 0x_28, 0x_CF, 0x_E5,
		0x_C8, 0x_75, 0x_D6, 0x_6A, 0x_67, 0x_A4, 0x_7B, 0x_74, 0x_22, 0x_36, 0x_7F, 0x_43, 0x_39, 0x_2A, 0x_14,
		0x_37, 0x_21, 0x_EB, 0x_0F, 0x_AC, 0x_48, 0x_E4, 0x_8C, 0x_12, 0x_18, 0x_E0, 0x_5B, 0x_3B, 0x_C3, 0x_A1,
		0x_4F, 0x_FB, 0x_AD, 0x_88, 0x_26, 0x_53, 0x_94, 0x_15, 0x_4B, 0x_FD, 0x_B9, 0x_27, 0x_DD, 0x_60, 0x_1C,
		0x_90, 0x_7E, 0x_DE, 0x_58, 0x_6D, 0x_34, 0x_D5, 0x_C1, 0x_9D, 0x_B8, 0x_11, 0x_9C, 0x_FF, 0x_70, 0x_45,
		0x_6C, 0x_1B, 0x_2C, 0x_5E, 0x_DA, 0x_C2, 0x_C0, 0x_A5, 0x_61, 0x_69, 0x_78, 0x_B1, 0x_47, 0x_59, 0x_23,
		0x_F0, 0x_B4, 0x_35, 0x_BB, 0x_CA, 0x_DC, 0x_1E, 0x_71, 0x_33, 0x_97, 0x_73, 0x_9A, 0x_C4, 0x_CD, 0x_3E,
		0x_24, 0x_16, 0x_F1, 0x_84, 0x_9E, 0x_4E, 0x_D3,
	];

	helper(S, BASE, 330_538_956);
}
// endregion
// region: s_has_zeros_and_7_in_base_2
#[test]
fn s_has_zeros_and_7_in_base_2() {
	const S: &[u8] = &[
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_D9, 0x_D9, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_D9,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_zeros_and_96_in_base_2
#[test]
fn s_has_zeros_and_96_in_base_2() {
	const S: &[u8] = &[
		0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3,
		0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_7E, 0x_7E, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_7E,
	];

	helper(S, BASE, 96);
}
// endregion
// region: s_has_zeros_and_715_in_base_2
#[test]
fn s_has_zeros_and_715_in_base_2() {
	const S: &[u8] = &[
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_23, 0x_BC, 0x_23, 0x_23,
		0x_BC, 0x_BC, 0x_23, 0x_BC, 0x_23, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_23,
	];

	helper(S, BASE, 715);
}
// endregion
// region: s_has_zeros_and_6_073_in_base_2
#[test]
fn s_has_zeros_and_6_073_in_base_2() {
	const S: &[u8] = &[
		0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_B0,
		0x_25, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_25, 0x_B0, 0x_B0, 0x_B0, 0x_25, 0x_25, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_B0,
	];

	helper(S, BASE, 6_073);
}
// endregion
// region: s_has_zeros_and_21_549_in_base_2
#[test]
fn s_has_zeros_and_21_549_in_base_2() {
	const S: &[u8] = &[
		0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_03, 0x_F0, 0x_03, 0x_F0,
		0x_03, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_03, 0x_F0, 0x_03, 0x_03, 0x_F0, 0x_03,
	];
	const BASE: &[u8] = &[
		0x_F0, 0x_03,
	];

	helper(S, BASE, 21_549);
}
// endregion
// region: s_has_zeros_and_445_500_in_base_2
#[test]
fn s_has_zeros_and_445_500_in_base_2() {
	const S: &[u8] = &[
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_8F,
		0x_8F, 0x_41, 0x_8F, 0x_8F, 0x_41, 0x_41, 0x_8F, 0x_8F, 0x_41, 0x_41, 0x_41, 0x_41, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_41, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_8F,
	];

	helper(S, BASE, 445_500);
}
// endregion
// region: s_has_zeros_and_1_191_301_in_base_2
#[test]
fn s_has_zeros_and_1_191_301_in_base_2() {
	const S: &[u8] = &[
		0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7,
		0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_F6, 0x_D7, 0x_D7, 0x_F6,
		0x_D7, 0x_D7, 0x_D7, 0x_F6, 0x_D7, 0x_F6, 0x_F6, 0x_D7, 0x_F6, 0x_F6, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_F6,
		0x_D7, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_F6,
	];

	helper(S, BASE, 1_191_301);
}
// endregion
// region: s_has_zeros_and_48_704_874_in_base_2
#[test]
fn s_has_zeros_and_48_704_874_in_base_2() {
	const S: &[u8] = &[
		0x_75, 0x_75, 0x_39, 0x_75, 0x_39, 0x_39, 0x_39, 0x_75, 0x_75, 0x_39, 0x_39, 0x_39, 0x_75, 0x_75, 0x_39,
		0x_75, 0x_39, 0x_39, 0x_75, 0x_39, 0x_75, 0x_39, 0x_39, 0x_75, 0x_39, 0x_75, 0x_39, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_39,
	];

	helper(S, BASE, 48_704_874);
}
// endregion
// region: s_has_zeros_and_240_661_618_in_base_2
#[test]
fn s_has_zeros_and_240_661_618_in_base_2() {
	const S: &[u8] = &[
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F3, 0x_F3, 0x_F3, 0x_F2, 0x_F2, 0x_F3, 0x_F2, 0x_F3, 0x_F3, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F3, 0x_F3, 0x_F2, 0x_F3, 0x_F2, 0x_F2, 0x_F2, 0x_F3, 0x_F3, 0x_F3, 0x_F2, 0x_F2, 0x_F3,
		0x_F2,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_F3,
	];

	helper(S, BASE, 240_661_618);
}
// endregion
// region: s_has_zeros_and_1_in_base_3
#[test]
fn s_has_zeros_and_1_in_base_3() {
	const S: &[u8] = &[
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_8A, 0x_F9,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_zeros_and_32_in_base_3
#[test]
fn s_has_zeros_and_32_in_base_3() {
	const S: &[u8] = &[
		0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_D6,
		0x_25, 0x_D6, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_D6, 0x_FF,
	];

	helper(S, BASE, 32);
}
// endregion
// region: s_has_zeros_and_678_in_base_3
#[test]
fn s_has_zeros_and_678_in_base_3() {
	const S: &[u8] = &[
		0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63,
		0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63,
		0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_A3, 0x_A3, 0x_14, 0x_63, 0x_14, 0x_63,
	];
	const BASE: &[u8] = &[
		0x_63, 0x_14, 0x_A3,
	];

	helper(S, BASE, 678);
}
// endregion
// region: s_has_zeros_and_3_724_in_base_3
#[test]
fn s_has_zeros_and_3_724_in_base_3() {
	const S: &[u8] = &[
		0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_9E, 0x_B8, 0x_D5, 0x_D5, 0x_B8, 0x_B8,
		0x_B8, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_D5, 0x_9E, 0x_B8,
	];

	helper(S, BASE, 3_724);
}
// endregion
// region: s_has_zeros_and_16_583_in_base_3
#[test]
fn s_has_zeros_and_16_583_in_base_3() {
	const S: &[u8] = &[
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7,
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_A3, 0x_E5, 0x_E5, 0x_A3, 0x_B7, 0x_A3,
		0x_B7, 0x_E5, 0x_A3,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_E5, 0x_A3,
	];

	helper(S, BASE, 16_583);
}
// endregion
// region: s_has_zeros_and_889_318_in_base_3
#[test]
fn s_has_zeros_and_889_318_in_base_3() {
	const S: &[u8] = &[
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_7C, 0x_6F, 0x_75, 0x_75, 0x_75, 0x_7C, 0x_7C, 0x_6F, 0x_6F,
		0x_75, 0x_6F, 0x_75, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_7C, 0x_6F,
	];

	helper(S, BASE, 889_318);
}
// endregion
// region: s_has_zeros_and_1_119_485_in_base_3
#[test]
fn s_has_zeros_and_1_119_485_in_base_3() {
	const S: &[u8] = &[
		0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9,
		0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_30, 0x_D9, 0x_D9, 0x_30, 0x_30, 0x_2A, 0x_30, 0x_2A,
		0x_30, 0x_30, 0x_2A, 0x_D9, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_2A, 0x_30,
	];

	helper(S, BASE, 1_119_485);
}
// endregion
// region: s_has_zeros_and_30_412_346_in_base_3
#[test]
fn s_has_zeros_and_30_412_346_in_base_3() {
	const S: &[u8] = &[
		0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB,
		0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_96, 0x_AB,
		0x_B4, 0x_AB, 0x_AB, 0x_96, 0x_AB, 0x_AB, 0x_AB, 0x_96, 0x_96, 0x_96, 0x_AB, 0x_AB, 0x_B4, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_B4, 0x_96,
	];

	helper(S, BASE, 30_412_346);
}
// endregion
// region: s_has_zeros_and_133_135_894_in_base_3
#[test]
fn s_has_zeros_and_133_135_894_in_base_3() {
	const S: &[u8] = &[
		0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_76, 0x_AE, 0x_AE,
		0x_AE, 0x_D8, 0x_76, 0x_76, 0x_76, 0x_D8, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_76, 0x_AE, 0x_AE, 0x_AE, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_76, 0x_D8,
	];

	helper(S, BASE, 133_135_894);
}
// endregion
// region: s_has_zeros_and_3_in_base_5
#[test]
fn s_has_zeros_and_3_in_base_5() {
	const S: &[u8] = &[
		0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_E3, 0x_1D, 0x_B1, 0x_8C,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_zeros_and_86_in_base_5
#[test]
fn s_has_zeros_and_86_in_base_5() {
	const S: &[u8] = &[
		0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D0, 0x_CF, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_68, 0x_CF, 0x_D0, 0x_93,
	];

	helper(S, BASE, 86);
}
// endregion
// region: s_has_zeros_and_112_in_base_5
#[test]
fn s_has_zeros_and_112_in_base_5() {
	const S: &[u8] = &[
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_7C, 0x_B4, 0x_B4,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_4E, 0x_B4, 0x_95, 0x_7C,
	];

	helper(S, BASE, 112);
}
// endregion
// region: s_has_zeros_and_5_441_in_base_5
#[test]
fn s_has_zeros_and_5_441_in_base_5() {
	const S: &[u8] = &[
		0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90,
		0x_90, 0x_90, 0x_90, 0x_93, 0x_89, 0x_89, 0x_80, 0x_89, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_93, 0x_80, 0x_89, 0x_D0,
	];

	helper(S, BASE, 5_441);
}
// endregion
// region: s_has_zeros_and_51_080_in_base_5
#[test]
fn s_has_zeros_and_51_080_in_base_5() {
	const S: &[u8] = &[
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_01, 0x_1E, 0x_1E, 0x_01, 0x_01, 0x_1E, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_1E, 0x_97, 0x_01, 0x_BB,
	];

	helper(S, BASE, 51_080);
}
// endregion
// region: s_has_zeros_and_424_617_in_base_5
#[test]
fn s_has_zeros_and_424_617_in_base_5() {
	const S: &[u8] = &[
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_28, 0x_61, 0x_32, 0x_61, 0x_BF, 0x_28,
		0x_BF, 0x_74, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_28, 0x_32, 0x_74, 0x_BF,
	];

	helper(S, BASE, 424_617);
}
// endregion
// region: s_has_zeros_and_1_144_625_in_base_5
#[test]
fn s_has_zeros_and_1_144_625_in_base_5() {
	const S: &[u8] = &[
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_B8,
		0x_35, 0x_7E, 0x_7F, 0x_7F, 0x_B8, 0x_E6, 0x_E6, 0x_E6,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_7F, 0x_B8, 0x_7E, 0x_35,
	];

	helper(S, BASE, 1_144_625);
}
// endregion
// region: s_has_zeros_and_76_321_351_in_base_5
#[test]
fn s_has_zeros_and_76_321_351_in_base_5() {
	const S: &[u8] = &[
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_E6, 0x_1B, 0x_11, 0x_9C, 0x_E6, 0x_11, 0x_1B, 0x_11, 0x_9C, 0x_11, 0x_9C, 0x_E6,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_E6, 0x_1B, 0x_DA, 0x_11,
	];

	helper(S, BASE, 76_321_351);
}
// endregion
// region: s_has_zeros_and_790_460_724_in_base_5
#[test]
fn s_has_zeros_and_790_460_724_in_base_5() {
	const S: &[u8] = &[
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_9F, 0x_8F, 0x_2C, 0x_8D,
		0x_9F, 0x_4E, 0x_8D, 0x_4E, 0x_4E, 0x_2C, 0x_9F, 0x_8D, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_8F, 0x_4E, 0x_9F, 0x_8D,
	];

	helper(S, BASE, 790_460_724);
}
// endregion
// region: s_has_zeros_and_7_in_base_7
#[test]
fn s_has_zeros_and_7_in_base_7() {
	const S: &[u8] = &[
		0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_87, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_87, 0x_AD, 0x_29, 0x_9A, 0x_BB, 0x_E5,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_zeros_and_97_in_base_7
#[test]
fn s_has_zeros_and_97_in_base_7() {
	const S: &[u8] = &[
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_50, 0x_5E, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_50, 0x_3A, 0x_8F, 0x_C9, 0x_9E, 0x_5E,
	];

	helper(S, BASE, 97);
}
// endregion
// region: s_has_zeros_and_182_in_base_7
#[test]
fn s_has_zeros_and_182_in_base_7() {
	const S: &[u8] = &[
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_96, 0x_FF, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_6E, 0x_84, 0x_96, 0x_AF, 0x_FF, 0x_86,
	];

	helper(S, BASE, 182);
}
// endregion
// region: s_has_zeros_and_5_887_in_base_7
#[test]
fn s_has_zeros_and_5_887_in_base_7() {
	const S: &[u8] = &[
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_81, 0x_A5, 0x_23, 0x_23,
		0x_3C,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_23, 0x_81, 0x_A5, 0x_64, 0x_C5, 0x_39,
	];

	helper(S, BASE, 5_887);
}
// endregion
// region: s_has_zeros_and_33_899_in_base_7
#[test]
fn s_has_zeros_and_33_899_in_base_7() {
	const S: &[u8] = &[
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F0, 0x_F1, 0x_F1, 0x_F3, 0x_F3,
		0x_F3,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_C1, 0x_F0, 0x_DE, 0x_C6, 0x_F3, 0x_B4,
	];

	helper(S, BASE, 33_899);
}
// endregion
// region: s_has_zeros_and_816_225_in_base_7
#[test]
fn s_has_zeros_and_816_225_in_base_7() {
	const S: &[u8] = &[
		0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62,
		0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62,
		0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_1A, 0x_1A, 0x_A5,
		0x_1A, 0x_05, 0x_05, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_E0, 0x_27, 0x_A5, 0x_05, 0x_CE, 0x_1A,
	];

	helper(S, BASE, 816_225);
}
// endregion
// region: s_has_zeros_and_8_689_128_in_base_7
#[test]
fn s_has_zeros_and_8_689_128_in_base_7() {
	const S: &[u8] = &[
		0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43,
		0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_2E, 0x_DA, 0x_DA, 0x_55,
		0x_E0, 0x_E0, 0x_55, 0x_2E, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_43, 0x_2E, 0x_81, 0x_DA, 0x_5E, 0x_55, 0x_E0,
	];

	helper(S, BASE, 8_689_128);
}
// endregion
// region: s_has_zeros_and_94_494_296_in_base_7
#[test]
fn s_has_zeros_and_94_494_296_in_base_7() {
	const S: &[u8] = &[
		0x_B0, 0x_B0, 0x_E4, 0x_E4, 0x_E4, 0x_6B, 0x_28, 0x_E4, 0x_28, 0x_47, 0x_B0, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_28, 0x_E4, 0x_F4, 0x_47, 0x_6B, 0x_F1,
	];

	helper(S, BASE, 94_494_296);
}
// endregion
// region: s_has_zeros_and_640_485_258_in_base_7
#[test]
fn s_has_zeros_and_640_485_258_in_base_7() {
	const S: &[u8] = &[
		0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6,
		0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_D3, 0x_59, 0x_E6, 0x_A6, 0x_BD, 0x_A6, 0x_59, 0x_9F, 0x_E6,
		0x_BD, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_59, 0x_D3, 0x_F7, 0x_9F, 0x_BD, 0x_E6,
	];

	helper(S, BASE, 640_485_258);
}
// endregion
// region: s_has_zeros_and_4_in_base_11
#[test]
fn s_has_zeros_and_4_in_base_11() {
	const S: &[u8] = &[
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_DE, 0x_57, 0x_A3, 0x_73, 0x_C4, 0x_7A, 0x_E8, 0x_A7, 0x_22, 0x_68,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_zeros_and_56_in_base_11
#[test]
fn s_has_zeros_and_56_in_base_11() {
	const S: &[u8] = &[
		0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96,
		0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_E6, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_3C, 0x_E7, 0x_D3, 0x_ED, 0x_E6, 0x_85, 0x_16, 0x_68, 0x_A6, 0x_E1,
	];

	helper(S, BASE, 56);
}
// endregion
// region: s_has_zeros_and_787_in_base_11
#[test]
fn s_has_zeros_and_787_in_base_11() {
	const S: &[u8] = &[
		0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51,
		0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51,
		0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_49, 0x_BC, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_AD, 0x_21, 0x_07, 0x_6C, 0x_BC, 0x_49, 0x_70, 0x_EF, 0x_9A, 0x_E2,
	];

	helper(S, BASE, 787);
}
// endregion
// region: s_has_zeros_and_6_819_in_base_11
#[test]
fn s_has_zeros_and_6_819_in_base_11() {
	const S: &[u8] = &[
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_5C, 0x_BD, 0x_1B, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_BD, 0x_56, 0x_1B, 0x_B2, 0x_5C, 0x_D8, 0x_F3, 0x_91, 0x_63, 0x_72,
	];

	helper(S, BASE, 6_819);
}
// endregion
// region: s_has_zeros_and_30_059_in_base_11
#[test]
fn s_has_zeros_and_30_059_in_base_11() {
	const S: &[u8] = &[
		0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13,
		0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13,
		0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_CE, 0x_13, 0x_CD, 0x_C6, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_B0, 0x_CE, 0x_22, 0x_C6, 0x_30, 0x_CD, 0x_44, 0x_34, 0x_33, 0x_D7,
	];

	helper(S, BASE, 30_059);
}
// endregion
// region: s_has_zeros_and_528_318_in_base_11
#[test]
fn s_has_zeros_and_528_318_in_base_11() {
	const S: &[u8] = &[
		0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F,
		0x_8B, 0x_8B, 0x_0F, 0x_EF, 0x_C2, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_74, 0x_C2, 0x_8B, 0x_D8, 0x_C3, 0x_32, 0x_15, 0x_F3, 0x_98, 0x_EF,
	];

	helper(S, BASE, 528_318);
}
// endregion
// region: s_has_zeros_and_7_662_918_in_base_11
#[test]
fn s_has_zeros_and_7_662_918_in_base_11() {
	const S: &[u8] = &[
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_6A, 0x_19, 0x_9D, 0x_6A, 0x_7B, 0x_49, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_9B, 0x_7B, 0x_19, 0x_6A, 0x_F7, 0x_9D, 0x_D9, 0x_0E, 0x_49, 0x_BD,
	];

	helper(S, BASE, 7_662_918);
}
// endregion
// region: s_has_zeros_and_97_912_256_in_base_11
#[test]
fn s_has_zeros_and_97_912_256_in_base_11() {
	const S: &[u8] = &[
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_40,
		0x_EF, 0x_63, 0x_5A, 0x_40, 0x_5A, 0x_63, 0x_63,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_49, 0x_63, 0x_89, 0x_E8, 0x_40, 0x_87, 0x_07, 0x_FE, 0x_DC, 0x_5A,
	];

	helper(S, BASE, 97_912_256);
}
// endregion
// region: s_has_zeros_and_369_367_978_in_base_11
#[test]
fn s_has_zeros_and_369_367_978_in_base_11() {
	const S: &[u8] = &[
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_E1, 0x_D9, 0x_5C, 0x_6F, 0x_6F, 0x_B5, 0x_F1,
		0x_5C, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_E1, 0x_1F, 0x_B5, 0x_38, 0x_6F, 0x_F1, 0x_D9, 0x_30, 0x_AD, 0x_5C,
	];

	helper(S, BASE, 369_367_978);
}
// endregion
// region: s_has_zeros_and_1_in_base_13
#[test]
fn s_has_zeros_and_1_in_base_13() {
	const S: &[u8] = &[
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_42, 0x_74, 0x_A5, 0x_15, 0x_A0, 0x_77, 0x_E4, 0x_AF, 0x_8D, 0x_41, 0x_AC, 0x_65,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_zeros_and_82_in_base_13
#[test]
fn s_has_zeros_and_82_in_base_13() {
	const S: &[u8] = &[
		0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6,
		0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6,
		0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_95, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_D0, 0x_BF, 0x_A1, 0x_E8, 0x_BD, 0x_95, 0x_C3, 0x_FF, 0x_91, 0x_71, 0x_28, 0x_84,
	];

	helper(S, BASE, 82);
}
// endregion
// region: s_has_zeros_and_730_in_base_13
#[test]
fn s_has_zeros_and_730_in_base_13() {
	const S: &[u8] = &[
		0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26,
		0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26,
		0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_27, 0x_27, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_80, 0x_38, 0x_CC, 0x_27, 0x_8F, 0x_D0, 0x_5A, 0x_B0, 0x_57, 0x_CD, 0x_AB, 0x_1E,
	];

	helper(S, BASE, 730);
}
// endregion
// region: s_has_zeros_and_6_345_in_base_13
#[test]
fn s_has_zeros_and_6_345_in_base_13() {
	const S: &[u8] = &[
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_3F, 0x_1E, 0x_F6, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_98, 0x_3F, 0x_3C, 0x_E4, 0x_34, 0x_7B, 0x_F6, 0x_82, 0x_83, 0x_44, 0x_1E, 0x_E3,
	];

	helper(S, BASE, 6_345);
}
// endregion
// region: s_has_zeros_and_88_745_in_base_13
#[test]
fn s_has_zeros_and_88_745_in_base_13() {
	const S: &[u8] = &[
		0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_D7, 0x_AF, 0x_9A, 0x_AF, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_AF, 0x_2F, 0x_D7, 0x_CD, 0x_9A, 0x_F8, 0x_EC, 0x_C0, 0x_B2, 0x_BC, 0x_C8, 0x_CC,
	];

	helper(S, BASE, 88_745);
}
// endregion
// region: s_has_zeros_and_251_148_in_base_13
#[test]
fn s_has_zeros_and_251_148_in_base_13() {
	const S: &[u8] = &[
		0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63,
		0x_63, 0x_63, 0x_63, 0x_43, 0x_79, 0x_58, 0x_52, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_63, 0x_52, 0x_F9, 0x_B2, 0x_58, 0x_0E, 0x_C0, 0x_5E, 0x_43, 0x_F1, 0x_79, 0x_1E, 0x_F7,
	];

	helper(S, BASE, 251_148);
}
// endregion
// region: s_has_zeros_and_5_123_158_in_base_13
#[test]
fn s_has_zeros_and_5_123_158_in_base_13() {
	const S: &[u8] = &[
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_F0, 0x_D4, 0x_81, 0x_18, 0x_D0, 0x_34, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_F0, 0x_8C, 0x_A8, 0x_18, 0x_70, 0x_8F, 0x_34, 0x_F2, 0x_8E, 0x_81, 0x_D0, 0x_92,
	];

	helper(S, BASE, 5_123_158);
}
// endregion
// region: s_has_zeros_and_90_249_188_in_base_13
#[test]
fn s_has_zeros_and_90_249_188_in_base_13() {
	const S: &[u8] = &[
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_B7, 0x_A8, 0x_2A,
		0x_6D, 0x_46, 0x_19, 0x_46, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_B7, 0x_76, 0x_F7, 0x_19, 0x_A8, 0x_13, 0x_5A, 0x_A6, 0x_2A, 0x_D5, 0x_46, 0x_DE,
	];

	helper(S, BASE, 90_249_188);
}
// endregion
// region: s_has_zeros_and_348_152_150_in_base_13
#[test]
fn s_has_zeros_and_348_152_150_in_base_13() {
	const S: &[u8] = &[
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_9B, 0x_7B, 0x_B6,
		0x_12, 0x_02, 0x_C9, 0x_E5, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_B6, 0x_4C, 0x_54, 0x_19, 0x_9B, 0x_DE, 0x_7B, 0x_12, 0x_D8, 0x_02, 0x_E5, 0x_8D,
	];

	helper(S, BASE, 348_152_150);
}
// endregion
// region: s_has_zeros_and_5_in_base_19
#[test]
fn s_has_zeros_and_5_in_base_19() {
	const S: &[u8] = &[
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_19, 0x_EC, 0x_68, 0x_3D, 0x_2E, 0x_F2, 0x_F4, 0x_F1, 0x_A1, 0x_4D, 0x_29, 0x_65, 0x_26, 0x_52,
		0x_B5, 0x_7A, 0x_BF, 0x_FD,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_zeros_and_44_in_base_19
#[test]
fn s_has_zeros_and_44_in_base_19() {
	const S: &[u8] = &[
		0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98,
		0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98,
		0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_6D, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_1A, 0x_6D, 0x_B3, 0x_51, 0x_2A, 0x_4F, 0x_12, 0x_5F, 0x_E7, 0x_7D, 0x_AE, 0x_E0, 0x_DC, 0x_2F,
		0x_40, 0x_88, 0x_D2, 0x_41,
	];

	helper(S, BASE, 44);
}
// endregion
// region: s_has_zeros_and_140_in_base_19
#[test]
fn s_has_zeros_and_140_in_base_19() {
	const S: &[u8] = &[
		0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F,
		0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F,
		0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_A6, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_EB, 0x_A3, 0x_3A, 0x_4F, 0x_8C, 0x_32, 0x_A6, 0x_33, 0x_6F, 0x_3D, 0x_F0, 0x_60, 0x_E3, 0x_02,
		0x_F1, 0x_7A, 0x_56, 0x_84,
	];

	helper(S, BASE, 140);
}
// endregion
// region: s_has_zeros_and_9_943_in_base_19
#[test]
fn s_has_zeros_and_9_943_in_base_19() {
	const S: &[u8] = &[
		0x_3F, 0x_C1, 0x_2F, 0x_D4, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_C1, 0x_A7, 0x_C8, 0x_7E, 0x_93, 0x_4F, 0x_70, 0x_2F, 0x_24, 0x_D4, 0x_4E, 0x_51, 0x_36, 0x_FD,
		0x_95, 0x_07, 0x_19, 0x_5D,
	];

	helper(S, BASE, 9_943);
}
// endregion
// region: s_has_zeros_and_19_165_in_base_19
#[test]
fn s_has_zeros_and_19_165_in_base_19() {
	const S: &[u8] = &[
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_AF, 0x_26, 0x_D0, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_D0, 0x_AF, 0x_15, 0x_ED, 0x_31, 0x_49, 0x_DF, 0x_28, 0x_80, 0x_56, 0x_44, 0x_9D, 0x_AB, 0x_A6,
		0x_26, 0x_24, 0x_AC, 0x_C7,
	];

	helper(S, BASE, 19_165);
}
// endregion
// region: s_has_zeros_and_673_929_in_base_19
#[test]
fn s_has_zeros_and_673_929_in_base_19() {
	const S: &[u8] = &[
		0x_69, 0x_69, 0x_5B, 0x_13, 0x_56, 0x_E4, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_D7, 0x_1D, 0x_13, 0x_56, 0x_5B, 0x_A2, 0x_87, 0x_9B, 0x_A5, 0x_E9, 0x_65, 0x_01, 0x_FA, 0x_02,
		0x_E4, 0x_28, 0x_E1, 0x_E3,
	];

	helper(S, BASE, 673_929);
}
// endregion
// region: s_has_zeros_and_2_700_550_in_base_19
#[test]
fn s_has_zeros_and_2_700_550_in_base_19() {
	const S: &[u8] = &[
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_60, 0x_60, 0x_62, 0x_62, 0x_C0, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_60, 0x_78, 0x_EE, 0x_14, 0x_1E, 0x_96, 0x_2F, 0x_3E, 0x_5B, 0x_02, 0x_13, 0x_B5, 0x_62, 0x_C0,
		0x_FD, 0x_8C, 0x_A5, 0x_2E,
	];

	helper(S, BASE, 2_700_550);
}
// endregion
// region: s_has_zeros_and_58_263_518_in_base_19
#[test]
fn s_has_zeros_and_58_263_518_in_base_19() {
	const S: &[u8] = &[
		0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47,
		0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_FB, 0x_86, 0x_B0, 0x_FB, 0x_6F, 0x_45, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_FB, 0x_FD, 0x_F3, 0x_86, 0x_23, 0x_82, 0x_DD, 0x_6F, 0x_5C, 0x_B0, 0x_6B, 0x_AC, 0x_E8, 0x_45,
		0x_3A, 0x_60, 0x_95, 0x_E4,
	];

	helper(S, BASE, 58_263_518);
}
// endregion
// region: s_has_zeros_and_171_085_451_in_base_19
#[test]
fn s_has_zeros_and_171_085_451_in_base_19() {
	const S: &[u8] = &[
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_CE, 0x_33, 0x_E1, 0x_E7, 0x_CE, 0x_36, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_E1, 0x_7C, 0x_CE, 0x_C5, 0x_4F, 0x_BE, 0x_A6, 0x_F6, 0x_F2, 0x_93, 0x_50, 0x_33, 0x_E0, 0x_2C,
		0x_E7, 0x_88, 0x_36, 0x_46,
	];

	helper(S, BASE, 171_085_451);
}
// endregion
// region: s_has_zeros_and_1_in_base_42
#[test]
fn s_has_zeros_and_1_in_base_42() {
	const S: &[u8] = &[
		0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_AD, 0x_13, 0x_59, 0x_CB, 0x_52, 0x_E5, 0x_E6, 0x_1A, 0x_F1, 0x_F7, 0x_69, 0x_C5, 0x_B0, 0x_AA,
		0x_41, 0x_CF, 0x_C6, 0x_94, 0x_3B, 0x_4A, 0x_88, 0x_7E, 0x_A3, 0x_91, 0x_23, 0x_DE, 0x_05, 0x_4F, 0x_06,
		0x_A7, 0x_9B, 0x_D4, 0x_FB, 0x_C3, 0x_83, 0x_6B, 0x_5F, 0x_CC, 0x_57, 0x_F9, 0x_63,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_zeros_and_59_in_base_42
#[test]
fn s_has_zeros_and_59_in_base_42() {
	const S: &[u8] = &[
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_69, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_69, 0x_63, 0x_C1, 0x_23, 0x_07, 0x_1E, 0x_D6, 0x_13, 0x_B7, 0x_38, 0x_D5, 0x_FA, 0x_28, 0x_D2,
		0x_CD, 0x_9B, 0x_5C, 0x_01, 0x_D0, 0x_88, 0x_F4, 0x_34, 0x_F9, 0x_03, 0x_84, 0x_CE, 0x_E5, 0x_7D, 0x_AD,
		0x_54, 0x_95, 0x_89, 0x_DF, 0x_BB, 0x_11, 0x_3B, 0x_83, 0x_06, 0x_7F, 0x_E1, 0x_FB,
	];

	helper(S, BASE, 59);
}
// endregion
// region: s_has_zeros_and_795_in_base_42
#[test]
fn s_has_zeros_and_795_in_base_42() {
	const S: &[u8] = &[
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_EE, 0x_6C,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_8B, 0x_A6, 0x_46, 0x_D0, 0x_E6, 0x_1D, 0x_96, 0x_BB, 0x_CF, 0x_61, 0x_C5, 0x_EF, 0x_85, 0x_F6,
		0x_14, 0x_48, 0x_75, 0x_EE, 0x_15, 0x_3E, 0x_57, 0x_B2, 0x_26, 0x_03, 0x_C0, 0x_B9, 0x_A5, 0x_53, 0x_FD,
		0x_76, 0x_42, 0x_7A, 0x_31, 0x_CC, 0x_80, 0x_65, 0x_D3, 0x_C7, 0x_6C, 0x_A1, 0x_5E,
	];

	helper(S, BASE, 795);
}
// endregion
// region: s_has_zeros_and_8_892_in_base_42
#[test]
fn s_has_zeros_and_8_892_in_base_42() {
	const S: &[u8] = &[
		0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_2C, 0x_13, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_13, 0x_1C, 0x_B5, 0x_BE, 0x_2C, 0x_B2, 0x_7C, 0x_FC, 0x_8C, 0x_E2, 0x_A6, 0x_C4, 0x_CA, 0x_B6,
		0x_42, 0x_01, 0x_A8, 0x_5D, 0x_84, 0x_66, 0x_D4, 0x_48, 0x_EE, 0x_6B, 0x_F3, 0x_99, 0x_19, 0x_75, 0x_A0,
		0x_AF, 0x_D2, 0x_51, 0x_4A, 0x_24, 0x_6A, 0x_8D, 0x_FF, 0x_40, 0x_E4, 0x_97, 0x_59,
	];

	helper(S, BASE, 8_892);
}
// endregion
// region: s_has_zeros_and_38_004_in_base_42
#[test]
fn s_has_zeros_and_38_004_in_base_42() {
	const S: &[u8] = &[
		0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_5E, 0x_D9, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_40, 0x_7E, 0x_B4, 0x_9A, 0x_69, 0x_83, 0x_31, 0x_22, 0x_9C, 0x_1A, 0x_19, 0x_61, 0x_AB, 0x_D0,
		0x_33, 0x_49, 0x_90, 0x_D5, 0x_C9, 0x_76, 0x_5E, 0x_D9, 0x_BD, 0x_25, 0x_98, 0x_D7, 0x_2A, 0x_15, 0x_FD,
		0x_29, 0x_B0, 0x_A6, 0x_85, 0x_EC, 0x_80, 0x_59, 0x_39, 0x_3D, 0x_ED, 0x_42, 0x_55,
	];

	helper(S, BASE, 38_004);
}
// endregion
// region: s_has_zeros_and_444_602_in_base_42
#[test]
fn s_has_zeros_and_444_602_in_base_42() {
	const S: &[u8] = &[
		0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34,
		0x_34, 0x_78, 0x_34, 0x_D9, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_D9, 0x_A2, 0x_31, 0x_C4, 0x_42, 0x_78, 0x_25, 0x_FE, 0x_89, 0x_A5, 0x_E7, 0x_5F, 0x_03, 0x_A6,
		0x_01, 0x_6A, 0x_54, 0x_44, 0x_66, 0x_3B, 0x_3E, 0x_E0, 0x_ED, 0x_5D, 0x_AF, 0x_A9, 0x_F3, 0x_D0, 0x_C9,
		0x_35, 0x_8B, 0x_08, 0x_E9, 0x_33, 0x_1D, 0x_1B, 0x_DB, 0x_1E, 0x_BF, 0x_8E, 0x_E6,
	];

	helper(S, BASE, 444_602);
}
// endregion
// region: s_has_zeros_and_8_514_590_in_base_42
#[test]
fn s_has_zeros_and_8_514_590_in_base_42() {
	const S: &[u8] = &[
		0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_35, 0x_3D,
		0x_5A, 0x_CB, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_1B, 0x_35, 0x_89, 0x_17, 0x_FE, 0x_16, 0x_37, 0x_B9, 0x_BC, 0x_9E, 0x_F8, 0x_81, 0x_2E, 0x_D2,
		0x_C3, 0x_21, 0x_25, 0x_6A, 0x_85, 0x_E4, 0x_E9, 0x_56, 0x_8E, 0x_8B, 0x_A6, 0x_1F, 0x_C4, 0x_E8, 0x_9A,
		0x_3D, 0x_46, 0x_63, 0x_B8, 0x_34, 0x_A8, 0x_CB, 0x_B4, 0x_5A, 0x_C5, 0x_D6, 0x_6C,
	];

	helper(S, BASE, 8_514_590);
}
// endregion
// region: s_has_zeros_and_25_854_397_in_base_42
#[test]
fn s_has_zeros_and_25_854_397_in_base_42() {
	const S: &[u8] = &[
		0x_E7, 0x_3C, 0x_E5, 0x_63, 0x_FA, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_E7, 0x_95, 0x_39, 0x_5D, 0x_D6, 0x_AB, 0x_FE, 0x_9C, 0x_3C, 0x_45, 0x_CE, 0x_42, 0x_E5, 0x_61, 0x_69,
		0x_44, 0x_C8, 0x_60, 0x_66, 0x_55, 0x_9E, 0x_2A, 0x_0F, 0x_91, 0x_5F, 0x_3E, 0x_A5, 0x_B4, 0x_FA, 0x_D3,
		0x_18, 0x_98, 0x_64, 0x_1A, 0x_16, 0x_F9, 0x_03, 0x_C6, 0x_AA, 0x_6B, 0x_63, 0x_82,
	];

	helper(S, BASE, 25_854_397);
}
// endregion
// region: s_has_zeros_and_749_507_521_in_base_42
#[test]
fn s_has_zeros_and_749_507_521_in_base_42() {
	const S: &[u8] = &[
		0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A,
		0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_FE, 0x_F1,
		0x_F4, 0x_E8, 0x_88, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_D4, 0x_81, 0x_EC, 0x_DA, 0x_FE, 0x_C6, 0x_FD, 0x_CB, 0x_A9, 0x_03, 0x_D6, 0x_FB, 0x_A4, 0x_64,
		0x_70, 0x_F9, 0x_5F, 0x_E8, 0x_B8, 0x_68, 0x_52, 0x_38, 0x_45, 0x_87, 0x_4B, 0x_F0, 0x_27, 0x_3B, 0x_47,
		0x_F1, 0x_8A, 0x_3E, 0x_01, 0x_EA, 0x_8D, 0x_F4, 0x_88, 0x_D3, 0x_96, 0x_59, 0x_2C,
	];

	helper(S, BASE, 749_507_521);
}
// endregion
// region: s_has_zeros_and_1_in_base_73
#[test]
fn s_has_zeros_and_1_in_base_73() {
	const S: &[u8] = &[
		0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22,
		0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_46, 0x_32, 0x_9C, 0x_BB, 0x_64, 0x_50, 0x_C3, 0x_37, 0x_9A, 0x_C6, 0x_BA, 0x_23, 0x_49, 0x_17,
		0x_B3, 0x_8C, 0x_2E, 0x_F6, 0x_B5, 0x_FD, 0x_A8, 0x_42, 0x_2F, 0x_15, 0x_F9, 0x_55, 0x_D8, 0x_39, 0x_70,
		0x_65, 0x_E2, 0x_83, 0x_5B, 0x_95, 0x_1A, 0x_25, 0x_BF, 0x_14, 0x_6D, 0x_18, 0x_DB, 0x_EB, 0x_E6, 0x_AF,
		0x_D9, 0x_96, 0x_92, 0x_30, 0x_F5, 0x_9F, 0x_D0, 0x_48, 0x_54, 0x_34, 0x_58, 0x_98, 0x_04, 0x_EA, 0x_71,
		0x_61, 0x_59, 0x_AA, 0x_A1, 0x_A4, 0x_9B, 0x_AB, 0x_5C, 0x_2A, 0x_DC, 0x_28, 0x_81, 0x_A0,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_zeros_and_53_in_base_73
#[test]
fn s_has_zeros_and_53_in_base_73() {
	const S: &[u8] = &[
		0x_3D, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_6D, 0x_63, 0x_F8, 0x_26, 0x_6A, 0x_7D, 0x_7E, 0x_AB, 0x_C0, 0x_A0, 0x_71, 0x_64, 0x_9D, 0x_0E,
		0x_EA, 0x_04, 0x_78, 0x_87, 0x_F7, 0x_1A, 0x_E0, 0x_82, 0x_AC, 0x_40, 0x_F1, 0x_02, 0x_92, 0x_F4, 0x_08,
		0x_FD, 0x_C3, 0x_E5, 0x_90, 0x_D9, 0x_D1, 0x_D5, 0x_E7, 0x_4A, 0x_23, 0x_1D, 0x_4C, 0x_A1, 0x_24, 0x_D8,
		0x_59, 0x_22, 0x_98, 0x_49, 0x_35, 0x_4D, 0x_8D, 0x_7F, 0x_19, 0x_77, 0x_FE, 0x_F2, 0x_CF, 0x_29, 0x_F0,
		0x_1B, 0x_88, 0x_13, 0x_1F, 0x_74, 0x_14, 0x_27, 0x_16, 0x_DB, 0x_D7, 0x_47, 0x_BC, 0x_34,
	];

	helper(S, BASE, 53);
}
// endregion
// region: s_has_zeros_and_555_in_base_73
#[test]
fn s_has_zeros_and_555_in_base_73() {
	const S: &[u8] = &[
		0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_8F, 0x_B4,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_73, 0x_FB, 0x_D1, 0x_AA, 0x_DB, 0x_F6, 0x_8F, 0x_B5, 0x_22, 0x_CF, 0x_5C, 0x_C6, 0x_8B, 0x_1F,
		0x_9B, 0x_51, 0x_5F, 0x_F3, 0x_B3, 0x_FF, 0x_53, 0x_C3, 0x_2F, 0x_EE, 0x_99, 0x_FA, 0x_CE, 0x_F1, 0x_45,
		0x_E9, 0x_75, 0x_D9, 0x_15, 0x_5A, 0x_12, 0x_33, 0x_17, 0x_18, 0x_E3, 0x_1C, 0x_72, 0x_D2, 0x_21, 0x_B4,
		0x_90, 0x_7C, 0x_40, 0x_32, 0x_36, 0x_EB, 0x_14, 0x_4E, 0x_EC, 0x_3B, 0x_0E, 0x_04, 0x_57, 0x_38, 0x_46,
		0x_42, 0x_7B, 0x_F7, 0x_A8, 0x_B1, 0x_BF, 0x_D0, 0x_5E, 0x_77, 0x_6D, 0x_9E, 0x_E1, 0x_83,
	];

	helper(S, BASE, 555);
}
// endregion
// region: s_has_zeros_and_3_924_in_base_73
#[test]
fn s_has_zeros_and_3_924_in_base_73() {
	const S: &[u8] = &[
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_B1, 0x_6D,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_DD, 0x_07, 0x_A1, 0x_E7, 0x_B3, 0x_4A, 0x_81, 0x_D5, 0x_1A, 0x_67, 0x_AE, 0x_68, 0x_EB, 0x_51,
		0x_C9, 0x_FD, 0x_66, 0x_97, 0x_D9, 0x_61, 0x_EA, 0x_69, 0x_50, 0x_14, 0x_F8, 0x_53, 0x_FC, 0x_EF, 0x_5C,
		0x_DA, 0x_15, 0x_E6, 0x_1D, 0x_DE, 0x_D2, 0x_26, 0x_24, 0x_F1, 0x_33, 0x_74, 0x_C7, 0x_8C, 0x_D8, 0x_C6,
		0x_47, 0x_19, 0x_76, 0x_AA, 0x_D6, 0x_CB, 0x_5E, 0x_96, 0x_B1, 0x_BF, 0x_6D, 0x_94, 0x_59, 0x_95, 0x_8E,
		0x_EE, 0x_BB, 0x_A3, 0x_9E, 0x_C5, 0x_1F, 0x_A5, 0x_CC, 0x_56, 0x_34, 0x_60, 0x_B0, 0x_4D,
	];

	helper(S, BASE, 3_924);
}
// endregion
// region: s_has_zeros_and_76_995_in_base_73
#[test]
fn s_has_zeros_and_76_995_in_base_73() {
	const S: &[u8] = &[
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_7B, 0x_7A,
		0x_AD,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_29, 0x_2F, 0x_85, 0x_F9, 0x_60, 0x_8C, 0x_15, 0x_86, 0x_58, 0x_AE, 0x_4F, 0x_18, 0x_D0, 0x_7B,
		0x_EF, 0x_99, 0x_28, 0x_7D, 0x_E0, 0x_BC, 0x_89, 0x_C7, 0x_84, 0x_78, 0x_13, 0x_65, 0x_53, 0x_9E, 0x_8A,
		0x_6B, 0x_34, 0x_7A, 0x_95, 0x_F7, 0x_36, 0x_05, 0x_70, 0x_CE, 0x_8D, 0x_DB, 0x_57, 0x_C1, 0x_2E, 0x_D7,
		0x_C5, 0x_32, 0x_01, 0x_39, 0x_1F, 0x_96, 0x_E6, 0x_D3, 0x_AD, 0x_FA, 0x_9A, 0x_6D, 0x_F8, 0x_A2, 0x_FF,
		0x_B2, 0x_D2, 0x_37, 0x_1D, 0x_CB, 0x_DC, 0x_33, 0x_4B, 0x_35, 0x_FB, 0x_A4, 0x_6F, 0x_51,
	];

	helper(S, BASE, 76_995);
}
// endregion
// region: s_has_zeros_and_424_664_in_base_73
#[test]
fn s_has_zeros_and_424_664_in_base_73() {
	const S: &[u8] = &[
		0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1,
		0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_B0, 0x_62, 0x_9F, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_A1, 0x_B0, 0x_B6, 0x_78, 0x_C9, 0x_43, 0x_62, 0x_51, 0x_CC, 0x_AB, 0x_CE, 0x_24, 0x_6C, 0x_47, 0x_89,
		0x_46, 0x_26, 0x_61, 0x_C6, 0x_D6, 0x_8E, 0x_B1, 0x_F7, 0x_9A, 0x_40, 0x_16, 0x_03, 0x_60, 0x_6E, 0x_77,
		0x_E9, 0x_BF, 0x_59, 0x_95, 0x_7D, 0x_42, 0x_39, 0x_23, 0x_1F, 0x_BE, 0x_B4, 0x_9C, 0x_92, 0x_70, 0x_45,
		0x_14, 0x_17, 0x_F9, 0x_F4, 0x_71, 0x_9F, 0x_73, 0x_1A, 0x_56, 0x_66, 0x_8F, 0x_38, 0x_EE, 0x_E8, 0x_8D,
		0x_EA, 0x_5E, 0x_4A, 0x_5F, 0x_3F, 0x_B7, 0x_34, 0x_CD, 0x_C2, 0x_C0, 0x_52, 0x_BB, 0x_0E,
	];

	helper(S, BASE, 424_664);
}
// endregion
// region: s_has_zeros_and_5_641_912_in_base_73
#[test]
fn s_has_zeros_and_5_641_912_in_base_73() {
	const S: &[u8] = &[
		0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_5B, 0x_93, 0x_04, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_71, 0x_90, 0x_D6, 0x_68, 0x_9F, 0x_F6, 0x_DC, 0x_C4, 0x_C6, 0x_D4, 0x_27, 0x_E3, 0x_88, 0x_2E, 0x_5B,
		0x_97, 0x_16, 0x_C8, 0x_3A, 0x_E5, 0x_C9, 0x_38, 0x_CD, 0x_26, 0x_B7, 0x_4B, 0x_1C, 0x_17, 0x_6A, 0x_55,
		0x_A9, 0x_DE, 0x_83, 0x_35, 0x_42, 0x_73, 0x_93, 0x_E9, 0x_F0, 0x_E1, 0x_39, 0x_F5, 0x_CA, 0x_2F, 0x_59,
		0x_BD, 0x_A8, 0x_4F, 0x_80, 0x_7B, 0x_C5, 0x_8A, 0x_04, 0x_53, 0x_1E, 0x_8F, 0x_B9, 0x_5D, 0x_36, 0x_03,
		0x_B5, 0x_B2, 0x_62, 0x_FC, 0x_77, 0x_50, 0x_E0, 0x_81, 0x_B6, 0x_4E, 0x_D8, 0x_25, 0x_AC,
	];

	helper(S, BASE, 5_641_912);
}
// endregion
// region: s_has_zeros_and_16_259_249_in_base_73
#[test]
fn s_has_zeros_and_16_259_249_in_base_73() {
	const S: &[u8] = &[
		0x_78, 0x_BD, 0x_69, 0x_DD, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_7B, 0x_96, 0x_9A, 0x_4F, 0x_02, 0x_DD, 0x_AA, 0x_42, 0x_FB, 0x_81, 0x_EC, 0x_E4, 0x_D4, 0x_64,
		0x_3C, 0x_47, 0x_56, 0x_8E, 0x_43, 0x_E2, 0x_79, 0x_62, 0x_18, 0x_C1, 0x_B8, 0x_31, 0x_15, 0x_1E, 0x_FA,
		0x_55, 0x_7C, 0x_5C, 0x_E8, 0x_EB, 0x_C0, 0x_F1, 0x_BE, 0x_2C, 0x_67, 0x_C9, 0x_BD, 0x_9F, 0x_BF, 0x_5B,
		0x_F2, 0x_E0, 0x_E9, 0x_01, 0x_4D, 0x_5F, 0x_49, 0x_54, 0x_35, 0x_8A, 0x_CB, 0x_33, 0x_60, 0x_69, 0x_B3,
		0x_F7, 0x_24, 0x_77, 0x_38, 0x_6C, 0x_7F, 0x_DC, 0x_FD, 0x_FF, 0x_59, 0x_F9, 0x_27, 0x_10,
	];

	helper(S, BASE, 16_259_249);
}
// endregion
// region: s_has_zeros_and_271_281_584_in_base_73
#[test]
fn s_has_zeros_and_271_281_584_in_base_73() {
	const S: &[u8] = &[
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_94, 0x_4A, 0x_CD, 0x_5E, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_46, 0x_6D, 0x_EA, 0x_69, 0x_36, 0x_BE, 0x_91, 0x_7F, 0x_94, 0x_1E, 0x_BA, 0x_78, 0x_60, 0x_41,
		0x_25, 0x_18, 0x_79, 0x_12, 0x_F4, 0x_D5, 0x_F9, 0x_40, 0x_61, 0x_9E, 0x_CD, 0x_FD, 0x_EE, 0x_B2, 0x_39,
		0x_2C, 0x_95, 0x_B3, 0x_8C, 0x_04, 0x_88, 0x_47, 0x_42, 0x_31, 0x_1C, 0x_4A, 0x_DB, 0x_98, 0x_5F, 0x_F2,
		0x_3C, 0x_C0, 0x_BD, 0x_5E, 0x_2F, 0x_AC, 0x_9D, 0x_92, 0x_BF, 0x_C2, 0x_3B, 0x_A5, 0x_F7, 0x_7E, 0x_97,
		0x_7B, 0x_C7, 0x_43, 0x_53, 0x_85, 0x_77, 0x_99, 0x_F5, 0x_D2, 0x_FB, 0x_45, 0x_50, 0x_E3,
	];

	helper(S, BASE, 271_281_584);
}
// endregion
// region: s_has_zeros_and_3_in_base_113
#[test]
fn s_has_zeros_and_3_in_base_113() {
	const S: &[u8] = &[
		0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_AA, 0x_AB, 0x_62, 0x_78, 0x_19, 0x_17, 0x_4F, 0x_F2, 0x_6D, 0x_EC, 0x_14, 0x_CB, 0x_10, 0x_55,
		0x_EE, 0x_24, 0x_58, 0x_93, 0x_40, 0x_63, 0x_29, 0x_41, 0x_7F, 0x_8A, 0x_D6, 0x_9A, 0x_66, 0x_B9, 0x_B1,
		0x_34, 0x_87, 0x_1F, 0x_12, 0x_A0, 0x_6E, 0x_49, 0x_E7, 0x_48, 0x_BE, 0x_B4, 0x_4E, 0x_85, 0x_44, 0x_D3,
		0x_89, 0x_F9, 0x_CD, 0x_9F, 0x_3F, 0x_D4, 0x_84, 0x_59, 0x_53, 0x_72, 0x_F1, 0x_5C, 0x_E6, 0x_71, 0x_D8,
		0x_74, 0x_F6, 0x_07, 0x_7B, 0x_CE, 0x_DC, 0x_A4, 0x_75, 0x_9E, 0x_8E, 0x_B5, 0x_37, 0x_8D, 0x_0E, 0x_1B,
		0x_E8, 0x_25, 0x_C4, 0x_B8, 0x_F5, 0x_A2, 0x_94, 0x_6B, 0x_E4, 0x_F7, 0x_52, 0x_18, 0x_21, 0x_7C, 0x_1A,
		0x_EA, 0x_C3, 0x_1E, 0x_77, 0x_99, 0x_A1, 0x_67, 0x_7D, 0x_DB, 0x_F3, 0x_C7, 0x_45, 0x_BD, 0x_35, 0x_86,
		0x_FA, 0x_64, 0x_51, 0x_54, 0x_6A, 0x_FE, 0x_D7, 0x_E9,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_zeros_and_96_in_base_113
#[test]
fn s_has_zeros_and_96_in_base_113() {
	const S: &[u8] = &[
		0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A,
		0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A,
		0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_EF, 0x_04, 0x_96, 0x_99, 0x_75, 0x_1E, 0x_DF, 0x_C9, 0x_93, 0x_9C, 0x_7F, 0x_81, 0x_4B, 0x_F6,
		0x_43, 0x_6F, 0x_68, 0x_ED, 0x_26, 0x_D1, 0x_E0, 0x_62, 0x_2A, 0x_8B, 0x_9D, 0x_80, 0x_66, 0x_EC, 0x_E4,
		0x_F1, 0x_5D, 0x_D5, 0x_6A, 0x_A7, 0x_05, 0x_87, 0x_57, 0x_BD, 0x_97, 0x_0E, 0x_F3, 0x_B0, 0x_C6, 0x_70,
		0x_72, 0x_7B, 0x_A5, 0x_1B, 0x_45, 0x_C4, 0x_AB, 0x_E8, 0x_3D, 0x_27, 0x_15, 0x_29, 0x_92, 0x_4A, 0x_8C,
		0x_8A, 0x_C1, 0x_C0, 0x_37, 0x_46, 0x_A1, 0x_90, 0x_2E, 0x_FD, 0x_12, 0x_DB, 0x_CD, 0x_83, 0x_3C, 0x_D7,
		0x_8F, 0x_9F, 0x_A0, 0x_6D, 0x_D9, 0x_67, 0x_47, 0x_B7, 0x_E5, 0x_52, 0x_8D, 0x_B3, 0x_40, 0x_13, 0x_F4,
		0x_9E, 0x_84, 0x_22, 0x_82, 0x_A2, 0x_0F, 0x_DD, 0x_77, 0x_19, 0x_F2, 0x_5C, 0x_49, 0x_7D, 0x_36, 0x_14,
		0x_C3, 0x_F0, 0x_3F, 0x_CA, 0x_BE, 0x_33, 0x_FC, 0x_10,
	];

	helper(S, BASE, 96);
}
// endregion
// region: s_has_zeros_and_468_in_base_113
#[test]
fn s_has_zeros_and_468_in_base_113() {
	const S: &[u8] = &[
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_6E, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_6D, 0x_39, 0x_DC, 0x_6E, 0x_3F, 0x_31, 0x_4B, 0x_75, 0x_5E, 0x_B3, 0x_02, 0x_D2, 0x_A4, 0x_9B,
		0x_CB, 0x_D0, 0x_92, 0x_E2, 0x_F2, 0x_BF, 0x_E9, 0x_CC, 0x_5B, 0x_19, 0x_08, 0x_32, 0x_1A, 0x_AE, 0x_7F,
		0x_4C, 0x_9F, 0x_2F, 0x_44, 0x_45, 0x_7A, 0x_21, 0x_B8, 0x_35, 0x_41, 0x_60, 0x_8A, 0x_A1, 0x_A9, 0x_ED,
		0x_6A, 0x_8B, 0x_6B, 0x_2C, 0x_A8, 0x_12, 0x_1D, 0x_5C, 0x_53, 0x_98, 0x_C4, 0x_90, 0x_D9, 0x_49, 0x_11,
		0x_BA, 0x_C6, 0x_77, 0x_86, 0x_24, 0x_CD, 0x_27, 0x_A6, 0x_9D, 0x_5F, 0x_CE, 0x_1B, 0x_DD, 0x_DB, 0x_06,
		0x_96, 0x_73, 0x_8E, 0x_80, 0x_D7, 0x_E7, 0x_E8, 0x_E5, 0x_8D, 0x_2E, 0x_17, 0x_48, 0x_29, 0x_43, 0x_BC,
		0x_95, 0x_67, 0x_74, 0x_26, 0x_40, 0x_5D, 0x_D5, 0x_FE, 0x_A2, 0x_59, 0x_83, 0x_B5, 0x_E1, 0x_81, 0x_F5,
		0x_B9, 0x_64, 0x_C7, 0x_51, 0x_56, 0x_50, 0x_B0, 0x_EA,
	];

	helper(S, BASE, 468);
}
// endregion
// region: s_has_zeros_and_4_620_in_base_113
#[test]
fn s_has_zeros_and_4_620_in_base_113() {
	const S: &[u8] = &[
		0x_30, 0x_30, 0x_30, 0x_30, 0x_B7, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_E0, 0x_5F, 0x_3F, 0x_87, 0x_88, 0x_31, 0x_BC, 0x_6A, 0x_5D, 0x_82, 0x_69, 0x_EE, 0x_C4, 0x_EF,
		0x_B2, 0x_EC, 0x_D6, 0x_6F, 0x_7F, 0x_F3, 0x_2E, 0x_D0, 0x_E6, 0x_8C, 0x_1E, 0x_B9, 0x_E2, 0x_AE, 0x_2F,
		0x_6B, 0x_58, 0x_AA, 0x_C8, 0x_CB, 0x_DD, 0x_26, 0x_55, 0x_85, 0x_60, 0x_B7, 0x_47, 0x_45, 0x_E9, 0x_68,
		0x_A3, 0x_BD, 0x_E5, 0x_6C, 0x_14, 0x_F7, 0x_8D, 0x_A1, 0x_35, 0x_81, 0x_C0, 0x_21, 0x_5B, 0x_44, 0x_9B,
		0x_11, 0x_9F, 0x_D8, 0x_98, 0x_71, 0x_7C, 0x_F8, 0x_CE, 0x_34, 0x_6E, 0x_3B, 0x_08, 0x_29, 0x_0E, 0x_75,
		0x_BA, 0x_ED, 0x_70, 0x_94, 0x_1D, 0x_A5, 0x_FD, 0x_83, 0x_FB, 0x_25, 0x_C1, 0x_7B, 0x_A8, 0x_12, 0x_DA,
		0x_F1, 0x_78, 0x_C6, 0x_61, 0x_05, 0x_1A, 0x_93, 0x_D2, 0x_F0, 0x_5E, 0x_76, 0x_97, 0x_57, 0x_92, 0x_FE,
		0x_1C, 0x_DE, 0x_E3, 0x_18, 0x_67, 0x_38, 0x_C9, 0x_7E,
	];

	helper(S, BASE, 4_620);
}
// endregion
// region: s_has_zeros_and_70_271_in_base_113
#[test]
fn s_has_zeros_and_70_271_in_base_113() {
	const S: &[u8] = &[
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_12, 0x_3E,
		0x_39,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_54, 0x_F4, 0x_CD, 0x_B9, 0x_12, 0x_59, 0x_E6, 0x_56, 0x_7B, 0x_68, 0x_52, 0x_CA, 0x_A1, 0x_C6,
		0x_6E, 0x_E1, 0x_E7, 0x_FB, 0x_66, 0x_23, 0x_1F, 0x_B8, 0x_7E, 0x_74, 0x_F6, 0x_E2, 0x_2A, 0x_69, 0x_33,
		0x_AB, 0x_1E, 0x_E4, 0x_6C, 0x_EA, 0x_91, 0x_05, 0x_FC, 0x_BC, 0x_DD, 0x_8A, 0x_B0, 0x_F9, 0x_03, 0x_7A,
		0x_DA, 0x_5F, 0x_1D, 0x_95, 0x_80, 0x_16, 0x_9B, 0x_C1, 0x_BE, 0x_F3, 0x_77, 0x_3E, 0x_13, 0x_A6, 0x_51,
		0x_EC, 0x_01, 0x_81, 0x_F0, 0x_45, 0x_47, 0x_E0, 0x_9A, 0x_18, 0x_B4, 0x_7D, 0x_B5, 0x_6F, 0x_9C, 0x_25,
		0x_D3, 0x_D5, 0x_4C, 0x_50, 0x_CE, 0x_7F, 0x_A8, 0x_FD, 0x_AE, 0x_D6, 0x_6B, 0x_26, 0x_B7, 0x_29, 0x_78,
		0x_AF, 0x_DF, 0x_E9, 0x_A9, 0x_53, 0x_CC, 0x_21, 0x_BA, 0x_39, 0x_5C, 0x_28, 0x_2F, 0x_C9, 0x_9F, 0x_F5,
		0x_AC, 0x_71, 0x_10, 0x_4F, 0x_40, 0x_3F, 0x_43, 0x_D7,
	];

	helper(S, BASE, 70_271);
}
// endregion
// region: s_has_zeros_and_810_528_in_base_113
#[test]
fn s_has_zeros_and_810_528_in_base_113() {
	const S: &[u8] = &[
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_15, 0x_92, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_BD, 0x_7B, 0x_9F, 0x_E4, 0x_3F, 0x_6B, 0x_3A, 0x_55, 0x_9A, 0x_FC, 0x_F1, 0x_F3, 0x_89, 0x_9B,
		0x_08, 0x_4B, 0x_CF, 0x_4C, 0x_1F, 0x_46, 0x_8A, 0x_6F, 0x_02, 0x_6C, 0x_7E, 0x_1D, 0x_07, 0x_E6, 0x_1B,
		0x_87, 0x_64, 0x_41, 0x_79, 0x_39, 0x_B7, 0x_9D, 0x_A5, 0x_14, 0x_F9, 0x_18, 0x_CE, 0x_CB, 0x_B0, 0x_8D,
		0x_D8, 0x_2E, 0x_AF, 0x_CD, 0x_B1, 0x_97, 0x_62, 0x_B6, 0x_92, 0x_C6, 0x_12, 0x_E8, 0x_28, 0x_FB, 0x_19,
		0x_8F, 0x_3C, 0x_49, 0x_15, 0x_BB, 0x_A6, 0x_E0, 0x_A1, 0x_EF, 0x_51, 0x_BA, 0x_25, 0x_98, 0x_61, 0x_AB,
		0x_43, 0x_AE, 0x_88, 0x_4E, 0x_77, 0x_57, 0x_27, 0x_40, 0x_99, 0x_13, 0x_9E, 0x_11, 0x_BF, 0x_29, 0x_A7,
		0x_67, 0x_F5, 0x_A8, 0x_B8, 0x_F6, 0x_5C, 0x_96, 0x_74, 0x_52, 0x_22, 0x_5E, 0x_D5, 0x_83, 0x_6E, 0x_0E,
		0x_DC, 0x_63, 0x_70, 0x_BE, 0x_C9, 0x_2F, 0x_59, 0x_EB,
	];

	helper(S, BASE, 810_528);
}
// endregion
// region: s_has_zeros_and_3_922_970_in_base_113
#[test]
fn s_has_zeros_and_3_922_970_in_base_113() {
	const S: &[u8] = &[
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_F7, 0x_3B, 0x_B6, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_26, 0x_F7, 0x_9C, 0x_4A, 0x_F2, 0x_E2, 0x_29, 0x_76, 0x_8C, 0x_C3, 0x_88, 0x_85, 0x_FF, 0x_34,
		0x_5C, 0x_79, 0x_B9, 0x_CB, 0x_6D, 0x_86, 0x_BE, 0x_83, 0x_5D, 0x_E8, 0x_B6, 0x_2E, 0x_68, 0x_ED, 0x_AB,
		0x_40, 0x_52, 0x_62, 0x_3C, 0x_54, 0x_E3, 0x_9A, 0x_96, 0x_06, 0x_16, 0x_A2, 0x_77, 0x_BA, 0x_7F, 0x_21,
		0x_78, 0x_7A, 0x_22, 0x_1B, 0x_E4, 0x_24, 0x_E7, 0x_91, 0x_B5, 0x_D7, 0x_8E, 0x_1F, 0x_C0, 0x_C1, 0x_37,
		0x_A9, 0x_32, 0x_FE, 0x_F1, 0x_53, 0x_E9, 0x_FD, 0x_55, 0x_03, 0x_10, 0x_4B, 0x_45, 0x_31, 0x_63, 0x_3D,
		0x_B3, 0x_DA, 0x_EB, 0x_5E, 0x_BD, 0x_A7, 0x_3B, 0x_CC, 0x_11, 0x_5F, 0x_18, 0x_A4, 0x_72, 0x_E0, 0x_6C,
		0x_6E, 0x_C2, 0x_CD, 0x_8A, 0x_DB, 0x_A8, 0x_F9, 0x_67, 0x_9B, 0x_7E, 0x_97, 0x_33, 0x_56, 0x_EE, 0x_4C,
		0x_7C, 0x_5A, 0x_4E, 0x_74, 0x_DE, 0x_4F, 0x_39, 0x_50,
	];

	helper(S, BASE, 3_922_970);
}
// endregion
// region: s_has_zeros_and_24_890_389_in_base_113
#[test]
fn s_has_zeros_and_24_890_389_in_base_113() {
	const S: &[u8] = &[
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_F3, 0x_FF, 0x_7B, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_92, 0x_D5, 0x_CC, 0x_CD, 0x_BC, 0x_3F, 0x_35, 0x_EA, 0x_61, 0x_36, 0x_86, 0x_F0, 0x_53, 0x_C9,
		0x_AF, 0x_6E, 0x_F3, 0x_42, 0x_C5, 0x_A6, 0x_B8, 0x_23, 0x_A7, 0x_EF, 0x_5C, 0x_F2, 0x_1C, 0x_FF, 0x_58,
		0x_70, 0x_7B, 0x_C7, 0x_93, 0x_17, 0x_28, 0x_94, 0x_FE, 0x_5B, 0x_CA, 0x_1F, 0x_B7, 0x_27, 0x_F8, 0x_9C,
		0x_11, 0x_88, 0x_3D, 0x_BB, 0x_60, 0x_ED, 0x_57, 0x_E8, 0x_62, 0x_E2, 0x_B0, 0x_98, 0x_80, 0x_37, 0x_C4,
		0x_B3, 0x_A2, 0x_15, 0x_90, 0x_B1, 0x_81, 0x_05, 0x_F5, 0x_8B, 0x_79, 0x_A0, 0x_48, 0x_A1, 0x_89, 0x_F4,
		0x_78, 0x_8D, 0x_34, 0x_3A, 0x_83, 0x_2C, 0x_B2, 0x_6F, 0x_E0, 0x_31, 0x_E5, 0x_7D, 0x_1A, 0x_F7, 0x_BE,
		0x_2A, 0x_4A, 0x_85, 0x_FA, 0x_43, 0x_30, 0x_C2, 0x_E9, 0x_FD, 0x_FB, 0x_18, 0x_BA, 0x_59, 0x_13, 0x_9B,
		0x_32, 0x_C3, 0x_D2, 0x_7C, 0x_8C, 0x_4C, 0x_54, 0x_DD,
	];

	helper(S, BASE, 24_890_389);
}
// endregion
// region: s_has_zeros_and_336_212_828_in_base_113
#[test]
fn s_has_zeros_and_336_212_828_in_base_113() {
	const S: &[u8] = &[
		0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72,
		0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72,
		0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_96, 0x_8A, 0x_8F, 0x_EA, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_8F, 0x_96, 0x_B5, 0x_58, 0x_33, 0x_25, 0x_8A, 0x_D5, 0x_B0, 0x_61, 0x_5F, 0x_7E, 0x_DD, 0x_EB,
		0x_A0, 0x_C8, 0x_94, 0x_8E, 0x_B9, 0x_27, 0x_31, 0x_CF, 0x_D1, 0x_C0, 0x_EE, 0x_77, 0x_DA, 0x_1E, 0x_78,
		0x_62, 0x_F1, 0x_76, 0x_BC, 0x_6B, 0x_D2, 0x_39, 0x_9B, 0x_74, 0x_F8, 0x_AE, 0x_1D, 0x_30, 0x_E2, 0x_EA,
		0x_BF, 0x_56, 0x_5B, 0x_53, 0x_16, 0x_87, 0x_F5, 0x_38, 0x_CE, 0x_60, 0x_C5, 0x_5C, 0x_5D, 0x_50, 0x_C2,
		0x_28, 0x_F7, 0x_04, 0x_2E, 0x_54, 0x_88, 0x_D8, 0x_B3, 0x_26, 0x_41, 0x_A8, 0x_E4, 0x_B2, 0x_BA, 0x_15,
		0x_9F, 0x_42, 0x_73, 0x_FF, 0x_BB, 0x_D6, 0x_68, 0x_7B, 0x_FA, 0x_48, 0x_1F, 0x_ED, 0x_BE, 0x_F4, 0x_F3,
		0x_21, 0x_A5, 0x_17, 0x_37, 0x_A1, 0x_5E, 0x_06, 0x_0E, 0x_8C, 0x_19, 0x_E7, 0x_99, 0x_C9, 0x_A9, 0x_8D,
		0x_2C, 0x_EC, 0x_43, 0x_9E, 0x_E1, 0x_51, 0x_0F, 0x_11,
	];

	helper(S, BASE, 336_212_828);
}
// endregion
// region: s_has_zeros_and_1_in_base_193
#[test]
fn s_has_zeros_and_1_in_base_193() {
	const S: &[u8] = &[
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_A4, 0x_CE, 0x_FD, 0x_50, 0x_3F, 0x_1D, 0x_35, 0x_23, 0x_93, 0x_E4, 0x_DC, 0x_A9, 0x_E1, 0x_17,
		0x_19, 0x_02, 0x_6C, 0x_94, 0x_55, 0x_E0, 0x_80, 0x_D1, 0x_54, 0x_E9, 0x_44, 0x_CD, 0x_AD, 0x_47, 0x_F0,
		0x_E6, 0x_83, 0x_F9, 0x_58, 0x_48, 0x_5A, 0x_F8, 0x_45, 0x_81, 0x_D6, 0x_53, 0x_3C, 0x_0E, 0x_18, 0x_03,
		0x_B7, 0x_06, 0x_57, 0x_59, 0x_BF, 0x_C6, 0x_11, 0x_7B, 0x_6F, 0x_F2, 0x_66, 0x_65, 0x_CF, 0x_9C, 0x_86,
		0x_7C, 0x_1F, 0x_C1, 0x_A8, 0x_69, 0x_9E, 0x_BA, 0x_F4, 0x_1E, 0x_B3, 0x_8B, 0x_C5, 0x_2A, 0x_46, 0x_EE,
		0x_27, 0x_A7, 0x_FC, 0x_BB, 0x_30, 0x_D8, 0x_C8, 0x_1B, 0x_D9, 0x_AF, 0x_8F, 0x_97, 0x_F6, 0x_D4, 0x_D0,
		0x_3E, 0x_2F, 0x_ED, 0x_56, 0x_90, 0x_6D, 0x_8C, 0x_4C, 0x_82, 0x_AE, 0x_08, 0x_CA, 0x_B8, 0x_42, 0x_41,
		0x_13, 0x_A1, 0x_A2, 0x_3A, 0x_E5, 0x_E8, 0x_85, 0x_07, 0x_B5, 0x_5D, 0x_92, 0x_A0, 0x_7E, 0x_F7, 0x_9F,
		0x_BE, 0x_BC, 0x_B6, 0x_DD, 0x_D3, 0x_91, 0x_05, 0x_C7, 0x_7D, 0x_15, 0x_C0, 0x_4A, 0x_7A, 0x_DE, 0x_A6,
		0x_73, 0x_6A, 0x_DF, 0x_F3, 0x_52, 0x_01, 0x_78, 0x_1C, 0x_D5, 0x_14, 0x_77, 0x_40, 0x_8A, 0x_D2, 0x_25,
		0x_84, 0x_75, 0x_8E, 0x_10, 0x_33, 0x_DA, 0x_79, 0x_61, 0x_88, 0x_AA, 0x_32, 0x_31, 0x_26, 0x_FA, 0x_A3,
		0x_51, 0x_6B, 0x_C4, 0x_70, 0x_36, 0x_CC, 0x_8D, 0x_D7, 0x_9D, 0x_72, 0x_74, 0x_5E, 0x_AB, 0x_4B, 0x_28,
		0x_DB, 0x_E2, 0x_C2, 0x_E7, 0x_B2, 0x_38, 0x_04, 0x_12, 0x_B0, 0x_FB, 0x_1A, 0x_B9, 0x_76,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_zeros_and_16_in_base_193
#[test]
fn s_has_zeros_and_16_in_base_193() {
	const S: &[u8] = &[
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_CE, 0x_9E, 0x_8F, 0x_E3, 0x_45, 0x_0F, 0x_68, 0x_06, 0x_C9, 0x_22, 0x_11, 0x_94, 0x_BE, 0x_1F,
		0x_F8, 0x_21, 0x_58, 0x_D8, 0x_A0, 0x_81, 0x_BC, 0x_B1, 0x_2F, 0x_4A, 0x_5E, 0x_79, 0x_8A, 0x_73, 0x_FC,
		0x_7D, 0x_F7, 0x_A7, 0x_3E, 0x_AB, 0x_28, 0x_A2, 0x_6F, 0x_B2, 0x_AE, 0x_26, 0x_E2, 0x_39, 0x_B5, 0x_1B,
		0x_3A, 0x_E8, 0x_F5, 0x_6C, 0x_DB, 0x_EF, 0x_53, 0x_12, 0x_25, 0x_F3, 0x_1A, 0x_5F, 0x_93, 0x_04, 0x_C2,
		0x_CD, 0x_C4, 0x_E5, 0x_67, 0x_B8, 0x_BA, 0x_7B, 0x_7C, 0x_C3, 0x_CC, 0x_8C, 0x_13, 0x_6E, 0x_DD, 0x_F6,
		0x_E7, 0x_5A, 0x_37, 0x_D9, 0x_DE, 0x_BF, 0x_90, 0x_D5, 0x_C6, 0x_29, 0x_DC, 0x_E4, 0x_8E, 0x_03, 0x_1E,
		0x_71, 0x_5B, 0x_C5, 0x_4B, 0x_36, 0x_65, 0x_3D, 0x_63, 0x_FF, 0x_9B, 0x_30, 0x_07, 0x_48, 0x_AA, 0x_EB,
		0x_CA, 0x_31, 0x_EC, 0x_89, 0x_70, 0x_A6, 0x_14, 0x_FE, 0x_4D, 0x_D6, 0x_ED, 0x_3B, 0x_FB, 0x_A4, 0x_88,
		0x_40, 0x_16, 0x_C8, 0x_9C, 0x_08, 0x_0E, 0x_5C, 0x_C0, 0x_84, 0x_B4, 0x_87, 0x_83, 0x_7E, 0x_9A, 0x_EE,
		0x_74, 0x_33, 0x_54, 0x_A9, 0x_4E, 0x_F9, 0x_85, 0x_62, 0x_3F, 0x_6B, 0x_E0, 0x_E1, 0x_BB, 0x_47, 0x_F1,
		0x_69, 0x_8B, 0x_91, 0x_80, 0x_A1, 0x_18, 0x_F2, 0x_56, 0x_44, 0x_59, 0x_35, 0x_D7, 0x_76, 0x_A5, 0x_4C,
		0x_23, 0x_B6, 0x_27, 0x_A3, 0x_43, 0x_32, 0x_EA, 0x_CF, 0x_AC, 0x_10, 0x_9D, 0x_19, 0x_A8, 0x_49, 0x_2A,
		0x_4F, 0x_6A, 0x_7F, 0x_42, 0x_78, 0x_AD, 0x_F0, 0x_FA, 0x_B3, 0x_9F, 0x_15, 0x_DF, 0x_01,
	];

	helper(S, BASE, 16);
}
// endregion
// region: s_has_zeros_and_687_in_base_193
#[test]
fn s_has_zeros_and_687_in_base_193() {
	const S: &[u8] = &[
		0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5,
		0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_64, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_60, 0x_C4, 0x_64, 0x_A3, 0x_12, 0x_D2, 0x_13, 0x_E5, 0x_C7, 0x_4F, 0x_93, 0x_BB, 0x_A7, 0x_DE,
		0x_DD, 0x_E0, 0x_16, 0x_8C, 0x_AD, 0x_30, 0x_1E, 0x_04, 0x_E1, 0x_AF, 0x_66, 0x_1C, 0x_53, 0x_D0, 0x_ED,
		0x_A5, 0x_B9, 0x_C3, 0x_F9, 0x_98, 0x_B7, 0x_C1, 0x_43, 0x_21, 0x_AB, 0x_72, 0x_A4, 0x_52, 0x_AA, 0x_38,
		0x_34, 0x_58, 0x_27, 0x_65, 0x_82, 0x_F7, 0x_4D, 0x_4C, 0x_F3, 0x_C2, 0x_F1, 0x_44, 0x_14, 0x_32, 0x_94,
		0x_59, 0x_3F, 0x_FC, 0x_06, 0x_1D, 0x_6D, 0x_45, 0x_A9, 0x_FB, 0x_68, 0x_E9, 0x_5B, 0x_36, 0x_EA, 0x_9B,
		0x_F8, 0x_1F, 0x_71, 0x_FD, 0x_BE, 0x_4A, 0x_CD, 0x_02, 0x_A2, 0x_E7, 0x_DB, 0x_5E, 0x_50, 0x_CC, 0x_61,
		0x_D3, 0x_8F, 0x_18, 0x_56, 0x_FF, 0x_23, 0x_3D, 0x_46, 0x_3C, 0x_BC, 0x_83, 0x_B6, 0x_8D, 0x_4B, 0x_31,
		0x_11, 0x_4E, 0x_67, 0x_7B, 0x_97, 0x_8B, 0x_FE, 0x_C8, 0x_EB, 0x_89, 0x_87, 0x_3E, 0x_6B, 0x_E4, 0x_55,
		0x_3B, 0x_C6, 0x_91, 0x_CA, 0x_F2, 0x_49, 0x_D8, 0x_73, 0x_5F, 0x_24, 0x_8E, 0x_9C, 0x_EC, 0x_79, 0x_CB,
		0x_33, 0x_BF, 0x_0F, 0x_C0, 0x_B0, 0x_10, 0x_47, 0x_CE, 0x_6A, 0x_9A, 0x_77, 0x_37, 0x_41, 0x_96, 0x_6E,
		0x_86, 0x_08, 0x_39, 0x_85, 0x_88, 0x_22, 0x_0E, 0x_2C, 0x_C9, 0x_9F, 0x_5A, 0x_A8, 0x_BD, 0x_E3, 0x_2F,
		0x_DC, 0x_A0, 0x_D7, 0x_42, 0x_D4, 0x_03, 0x_1A, 0x_EF, 0x_70, 0x_5D, 0x_B5, 0x_E2, 0x_D9, 0x_DF, 0x_A6,
		0x_62, 0x_1B, 0x_B8, 0x_19, 0x_D1, 0x_8A, 0x_90, 0x_76, 0x_78, 0x_2E, 0x_F0, 0x_81, 0x_E8,
	];

	helper(S, BASE, 687);
}
// endregion
// region: s_has_zeros_and_1_172_in_base_193
#[test]
fn s_has_zeros_and_1_172_in_base_193() {
	const S: &[u8] = &[
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_A9, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_CB, 0x_FD, 0x_78, 0x_9F, 0x_86, 0x_A9, 0x_70, 0x_4A, 0x_BF, 0x_99, 0x_7B, 0x_1E, 0x_B8, 0x_91,
		0x_94, 0x_3A, 0x_F9, 0x_C6, 0x_84, 0x_71, 0x_FB, 0x_67, 0x_DE, 0x_42, 0x_2A, 0x_F5, 0x_54, 0x_51, 0x_1B,
		0x_1C, 0x_02, 0x_EF, 0x_EA, 0x_65, 0x_98, 0x_E9, 0x_13, 0x_08, 0x_10, 0x_6B, 0x_21, 0x_74, 0x_AD, 0x_07,
		0x_B7, 0x_B2, 0x_8C, 0x_FC, 0x_E5, 0x_37, 0x_5F, 0x_CF, 0x_41, 0x_30, 0x_3C, 0x_E8, 0x_3D, 0x_36, 0x_C8,
		0x_EB, 0x_D8, 0x_56, 0x_6E, 0x_0E, 0x_14, 0x_7F, 0x_B9, 0x_80, 0x_17, 0x_3E, 0x_CA, 0x_E1, 0x_F8, 0x_06,
		0x_4F, 0x_DB, 0x_2E, 0x_CE, 0x_7E, 0x_CD, 0x_95, 0x_33, 0x_27, 0x_2F, 0x_A6, 0x_34, 0x_40, 0x_A4, 0x_E3,
		0x_69, 0x_EC, 0x_18, 0x_5D, 0x_63, 0x_50, 0x_05, 0x_DF, 0x_DD, 0x_B1, 0x_C2, 0x_7A, 0x_43, 0x_B0, 0x_C0,
		0x_8E, 0x_B5, 0x_31, 0x_C4, 0x_D2, 0x_49, 0x_19, 0x_C3, 0x_16, 0x_FF, 0x_1F, 0x_F6, 0x_9D, 0x_5E, 0x_73,
		0x_BB, 0x_D3, 0x_5B, 0x_96, 0x_26, 0x_8F, 0x_8A, 0x_45, 0x_CC, 0x_1D, 0x_F0, 0x_6C, 0x_72, 0x_64, 0x_A2,
		0x_4D, 0x_B3, 0x_1A, 0x_39, 0x_11, 0x_6F, 0x_8B, 0x_29, 0x_4E, 0x_28, 0x_BE, 0x_9A, 0x_55, 0x_61, 0x_47,
		0x_5A, 0x_E4, 0x_88, 0x_BA, 0x_FA, 0x_C5, 0x_62, 0x_D5, 0x_81, 0x_82, 0x_35, 0x_87, 0x_25, 0x_83, 0x_D7,
		0x_AE, 0x_AC, 0x_C1, 0x_4B, 0x_E6, 0x_3F, 0x_44, 0x_89, 0x_A7, 0x_A3, 0x_90, 0x_52, 0x_3B, 0x_6D, 0x_48,
		0x_DC, 0x_A5, 0x_32, 0x_E2, 0x_D0, 0x_59, 0x_68, 0x_C7, 0x_B6, 0x_77, 0x_F1, 0x_F4, 0x_93,
	];

	helper(S, BASE, 1_172);
}
// endregion
// region: s_has_zeros_and_79_135_in_base_193
#[test]
fn s_has_zeros_and_79_135_in_base_193() {
	const S: &[u8] = &[
		0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_7E, 0x_23, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_AD, 0x_89, 0x_7E, 0x_B4, 0x_04, 0x_8B, 0x_A5, 0x_30, 0x_39, 0x_EC, 0x_5D, 0x_EF, 0x_51, 0x_80, 0x_35,
		0x_67, 0x_92, 0x_E0, 0x_75, 0x_32, 0x_7F, 0x_AF, 0x_69, 0x_17, 0x_23, 0x_BE, 0x_34, 0x_A3, 0x_5A, 0x_9E,
		0x_E7, 0x_64, 0x_72, 0x_85, 0x_D1, 0x_9B, 0x_D5, 0x_21, 0x_F7, 0x_EE, 0x_84, 0x_93, 0x_B7, 0x_AE, 0x_C7,
		0x_DB, 0x_FF, 0x_A9, 0x_9C, 0x_A8, 0x_2E, 0x_E5, 0x_DF, 0x_DA, 0x_25, 0x_95, 0x_FA, 0x_22, 0x_19, 0x_BC,
		0x_08, 0x_44, 0x_D6, 0x_B5, 0x_77, 0x_62, 0x_BD, 0x_AB, 0x_A0, 0x_6B, 0x_38, 0x_54, 0x_4D, 0x_E6, 0x_BF,
		0x_27, 0x_A6, 0x_18, 0x_79, 0x_C5, 0x_B9, 0x_F4, 0x_87, 0x_FB, 0x_99, 0x_A1, 0x_76, 0x_42, 0x_5F, 0x_ED,
		0x_C4, 0x_53, 0x_E8, 0x_4E, 0x_66, 0x_B3, 0x_E4, 0x_CF, 0x_1E, 0x_37, 0x_D7, 0x_F9, 0x_0F, 0x_8F, 0x_33,
		0x_CC, 0x_C2, 0x_A2, 0x_71, 0x_D8, 0x_CA, 0x_C9, 0x_1D, 0x_FE, 0x_F8, 0x_13, 0x_EB, 0x_59, 0x_49, 0x_C8,
		0x_31, 0x_F5, 0x_15, 0x_61, 0x_D0, 0x_0E, 0x_FD, 0x_2A, 0x_B1, 0x_D4, 0x_94, 0x_45, 0x_26, 0x_AA, 0x_90,
		0x_2C, 0x_C1, 0x_B0, 0x_11, 0x_7D, 0x_01, 0x_B6, 0x_6C, 0x_40, 0x_50, 0x_65, 0x_DD, 0x_82, 0x_12, 0x_81,
		0x_83, 0x_CD, 0x_91, 0x_8E, 0x_AC, 0x_88, 0x_6E, 0x_29, 0x_E9, 0x_28, 0x_3D, 0x_96, 0x_1F, 0x_A4, 0x_CB,
		0x_4F, 0x_BB, 0x_F1, 0x_F2, 0x_16, 0x_57, 0x_24, 0x_D3, 0x_A7, 0x_48, 0x_68, 0x_78, 0x_60, 0x_E1, 0x_B2,
		0x_7A, 0x_3A, 0x_73, 0x_56, 0x_07, 0x_1A, 0x_4A, 0x_9A, 0x_1C, 0x_C3, 0x_3C, 0x_DE, 0x_5C,
	];

	helper(S, BASE, 79_135);
}
// endregion
// region: s_has_zeros_and_770_597_in_base_193
#[test]
fn s_has_zeros_and_770_597_in_base_193() {
	const S: &[u8] = &[
		0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43,
		0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_43, 0x_04, 0x_70, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_43, 0x_A5, 0x_F9, 0x_AA, 0x_5C, 0x_E2, 0x_12, 0x_60, 0x_E6, 0x_D0, 0x_54, 0x_94, 0x_C6, 0x_3A, 0x_93,
		0x_A6, 0x_D4, 0x_57, 0x_10, 0x_16, 0x_04, 0x_CE, 0x_14, 0x_4A, 0x_F5, 0x_4E, 0x_1D, 0x_8B, 0x_23, 0x_08,
		0x_E7, 0x_F4, 0x_BB, 0x_C3, 0x_DA, 0x_BF, 0x_A4, 0x_42, 0x_1A, 0x_CF, 0x_69, 0x_7C, 0x_81, 0x_53, 0x_39,
		0x_E5, 0x_87, 0x_C2, 0x_F1, 0x_55, 0x_86, 0x_59, 0x_3C, 0x_22, 0x_E8, 0x_B9, 0x_5E, 0x_B1, 0x_1F, 0x_8A,
		0x_34, 0x_8F, 0x_02, 0x_6A, 0x_74, 0x_28, 0x_64, 0x_76, 0x_E0, 0x_D5, 0x_C7, 0x_EC, 0x_4F, 0x_35, 0x_46,
		0x_C4, 0x_95, 0x_73, 0x_BA, 0x_72, 0x_92, 0x_19, 0x_7D, 0x_DF, 0x_5F, 0x_D3, 0x_F2, 0x_2F, 0x_B2, 0x_21,
		0x_B7, 0x_90, 0x_18, 0x_E9, 0x_13, 0x_40, 0x_FD, 0x_5A, 0x_3D, 0x_97, 0x_58, 0x_01, 0x_DD, 0x_48, 0x_7E,
		0x_FE, 0x_07, 0x_38, 0x_D6, 0x_0E, 0x_DC, 0x_D8, 0x_96, 0x_62, 0x_6B, 0x_1B, 0x_29, 0x_E1, 0x_98, 0x_71,
		0x_44, 0x_9A, 0x_BC, 0x_11, 0x_EF, 0x_EE, 0x_A8, 0x_61, 0x_EB, 0x_7A, 0x_3B, 0x_CC, 0x_70, 0x_E4, 0x_C1,
		0x_6D, 0x_3E, 0x_B8, 0x_9C, 0x_84, 0x_CA, 0x_8C, 0x_C0, 0x_DE, 0x_AE, 0x_37, 0x_89, 0x_AF, 0x_FB, 0x_C9,
		0x_CB, 0x_7F, 0x_B3, 0x_26, 0x_AC, 0x_17, 0x_8D, 0x_ED, 0x_A9, 0x_9D, 0x_A2, 0x_BD, 0x_5D, 0x_51, 0x_7B,
		0x_4B, 0x_E3, 0x_F7, 0x_C5, 0x_EA, 0x_63, 0x_32, 0x_FC, 0x_33, 0x_56, 0x_5B, 0x_CD, 0x_3F, 0x_F0, 0x_6F,
		0x_27, 0x_D1, 0x_82, 0x_91, 0x_4C, 0x_41, 0x_0F, 0x_AB, 0x_B4, 0x_F3, 0x_9E, 0x_78, 0x_1C,
	];

	helper(S, BASE, 770_597);
}
// endregion
// region: s_has_zeros_and_7_661_301_in_base_193
#[test]
fn s_has_zeros_and_7_661_301_in_base_193() {
	const S: &[u8] = &[
		0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1,
		0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1,
		0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B4, 0x_05, 0x_9C, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_B4, 0x_A8, 0x_DF, 0x_C5, 0x_15, 0x_56, 0x_E5, 0x_5F, 0x_74, 0x_2E, 0x_2A, 0x_05, 0x_D1, 0x_A0,
		0x_85, 0x_6C, 0x_16, 0x_11, 0x_3E, 0x_80, 0x_63, 0x_47, 0x_44, 0x_99, 0x_BF, 0x_27, 0x_9E, 0x_0F, 0x_94,
		0x_81, 0x_7A, 0x_19, 0x_87, 0x_A2, 0x_30, 0x_67, 0x_9D, 0x_65, 0x_C2, 0x_31, 0x_72, 0x_50, 0x_A5, 0x_E4,
		0x_3F, 0x_83, 0x_D5, 0x_23, 0x_F8, 0x_29, 0x_EA, 0x_C9, 0x_E9, 0x_F6, 0x_7D, 0x_18, 0x_FE, 0x_04, 0x_A4,
		0x_79, 0x_21, 0x_42, 0x_01, 0x_7F, 0x_7C, 0x_D7, 0x_8E, 0x_E7, 0x_BA, 0x_55, 0x_A6, 0x_C4, 0x_73, 0x_6F,
		0x_B0, 0x_88, 0x_EE, 0x_8D, 0x_08, 0x_60, 0x_CA, 0x_06, 0x_C8, 0x_B9, 0x_DD, 0x_F5, 0x_DC, 0x_64, 0x_45,
		0x_62, 0x_F3, 0x_97, 0x_8F, 0x_10, 0x_F4, 0x_B7, 0x_B3, 0x_6A, 0x_FC, 0x_84, 0x_1E, 0x_C0, 0x_6B, 0x_D9,
		0x_AC, 0x_5A, 0x_A1, 0x_25, 0x_8C, 0x_F7, 0x_5D, 0x_36, 0x_41, 0x_AB, 0x_48, 0x_6D, 0x_D0, 0x_54, 0x_CE,
		0x_1D, 0x_CD, 0x_53, 0x_1F, 0x_02, 0x_C7, 0x_BC, 0x_28, 0x_66, 0x_52, 0x_9C, 0x_8B, 0x_61, 0x_D2, 0x_9B,
		0x_2F, 0x_35, 0x_1A, 0x_1C, 0x_76, 0x_CB, 0x_71, 0x_BB, 0x_9F, 0x_4E, 0x_5C, 0x_B8, 0x_F1, 0x_4A, 0x_37,
		0x_E1, 0x_CF, 0x_3C, 0x_34, 0x_39, 0x_89, 0x_49, 0x_BD, 0x_13, 0x_77, 0x_58, 0x_24, 0x_CC, 0x_17, 0x_3D,
		0x_57, 0x_DE, 0x_B6, 0x_AF, 0x_95, 0x_AD, 0x_F2, 0x_C6, 0x_43, 0x_AA, 0x_AE, 0x_59, 0x_D6, 0x_E6, 0x_51,
		0x_FB, 0x_E0, 0x_3B, 0x_D3, 0x_0E, 0x_4B, 0x_4C, 0x_5E, 0x_EC, 0x_6E, 0x_B2, 0x_C3, 0x_4F,
	];

	helper(S, BASE, 7_661_301);
}
// endregion
// region: s_has_zeros_and_37_249_384_in_base_193
#[test]
fn s_has_zeros_and_37_249_384_in_base_193() {
	const S: &[u8] = &[
		0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8,
		0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_9F, 0x_D4, 0x_65, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_E8, 0x_65, 0x_47, 0x_48, 0x_FA, 0x_9F, 0x_7A, 0x_A2, 0x_81, 0x_2F, 0x_38, 0x_44, 0x_83, 0x_1B, 0x_A4,
		0x_5A, 0x_90, 0x_8B, 0x_D2, 0x_FD, 0x_A8, 0x_99, 0x_5B, 0x_F8, 0x_9D, 0x_B7, 0x_CB, 0x_C8, 0x_08, 0x_77,
		0x_4C, 0x_28, 0x_7B, 0x_DB, 0x_59, 0x_D4, 0x_54, 0x_84, 0x_9C, 0x_C5, 0x_57, 0x_7E, 0x_16, 0x_96, 0x_A7,
		0x_10, 0x_D1, 0x_67, 0x_42, 0x_6D, 0x_C6, 0x_3E, 0x_C1, 0x_B3, 0x_05, 0x_04, 0x_25, 0x_B5, 0x_91, 0x_6F,
		0x_F5, 0x_D0, 0x_4A, 0x_BA, 0x_C0, 0x_EE, 0x_B6, 0x_9E, 0x_68, 0x_72, 0x_69, 0x_CD, 0x_FE, 0x_3D, 0x_55,
		0x_21, 0x_BB, 0x_40, 0x_95, 0x_BE, 0x_C2, 0x_32, 0x_CE, 0x_78, 0x_4E, 0x_B8, 0x_76, 0x_33, 0x_07, 0x_31,
		0x_19, 0x_93, 0x_5F, 0x_13, 0x_66, 0x_71, 0x_E9, 0x_52, 0x_1E, 0x_58, 0x_43, 0x_DF, 0x_73, 0x_60, 0x_A0,
		0x_01, 0x_8A, 0x_E4, 0x_9A, 0x_AE, 0x_C3, 0x_3C, 0x_51, 0x_18, 0x_FC, 0x_AD, 0x_98, 0x_7D, 0x_2C, 0x_C9,
		0x_30, 0x_6C, 0x_F6, 0x_B4, 0x_EA, 0x_46, 0x_D7, 0x_61, 0x_CC, 0x_E5, 0x_AC, 0x_39, 0x_E1, 0x_36, 0x_79,
		0x_DE, 0x_03, 0x_AF, 0x_4B, 0x_56, 0x_41, 0x_70, 0x_74, 0x_DD, 0x_2E, 0x_1C, 0x_97, 0x_23, 0x_64, 0x_D9,
		0x_50, 0x_B0, 0x_E6, 0x_26, 0x_88, 0x_87, 0x_06, 0x_DA, 0x_A6, 0x_F7, 0x_EF, 0x_8F, 0x_FF, 0x_EC, 0x_F0,
		0x_5C, 0x_02, 0x_D8, 0x_F1, 0x_63, 0x_8D, 0x_AA, 0x_1A, 0x_A3, 0x_89, 0x_14, 0x_D3, 0x_24, 0x_94, 0x_11,
		0x_CA, 0x_D6, 0x_DC, 0x_53, 0x_49, 0x_8C, 0x_BF, 0x_F3, 0x_82, 0x_37, 0x_8E, 0x_AB, 0x_17,
	];

	helper(S, BASE, 37_249_384);
}
// endregion
// region: s_has_zeros_and_881_774_539_in_base_193
#[test]
fn s_has_zeros_and_881_774_539_in_base_193() {
	const S: &[u8] = &[
		0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59,
		0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_13, 0x_8F, 0x_6E, 0x_E5,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_F0, 0x_5C, 0x_48, 0x_5A, 0x_68, 0x_B9, 0x_EC, 0x_17, 0x_E4, 0x_E7, 0x_41, 0x_60, 0x_1F, 0x_46,
		0x_34, 0x_18, 0x_FC, 0x_4A, 0x_87, 0x_85, 0x_B1, 0x_C0, 0x_BD, 0x_02, 0x_7A, 0x_DC, 0x_C6, 0x_D9, 0x_CF,
		0x_D3, 0x_AC, 0x_65, 0x_4E, 0x_86, 0x_52, 0x_01, 0x_F9, 0x_36, 0x_62, 0x_DF, 0x_45, 0x_0E, 0x_54, 0x_81,
		0x_71, 0x_1D, 0x_63, 0x_F8, 0x_B3, 0x_FB, 0x_CE, 0x_F4, 0x_1B, 0x_1A, 0x_32, 0x_5D, 0x_6C, 0x_89, 0x_95,
		0x_78, 0x_21, 0x_A3, 0x_D6, 0x_31, 0x_40, 0x_D0, 0x_A5, 0x_D1, 0x_D2, 0x_B7, 0x_9B, 0x_74, 0x_7D, 0x_6A,
		0x_64, 0x_08, 0x_55, 0x_14, 0x_38, 0x_33, 0x_EA, 0x_29, 0x_6E, 0x_25, 0x_93, 0x_CD, 0x_82, 0x_B0, 0x_49,
		0x_D4, 0x_4B, 0x_43, 0x_BA, 0x_22, 0x_3B, 0x_BB, 0x_9F, 0x_50, 0x_EB, 0x_42, 0x_10, 0x_58, 0x_A9, 0x_30,
		0x_E1, 0x_51, 0x_F5, 0x_6F, 0x_19, 0x_2A, 0x_CC, 0x_E6, 0x_57, 0x_A1, 0x_F3, 0x_7E, 0x_53, 0x_AE, 0x_9C,
		0x_06, 0x_73, 0x_13, 0x_92, 0x_B8, 0x_B5, 0x_8F, 0x_23, 0x_67, 0x_BE, 0x_D5, 0x_B4, 0x_16, 0x_3A, 0x_1C,
		0x_88, 0x_C2, 0x_5F, 0x_E3, 0x_E8, 0x_EE, 0x_3F, 0x_ED, 0x_A7, 0x_7C, 0x_72, 0x_FE, 0x_A2, 0x_F7, 0x_DB,
		0x_9A, 0x_76, 0x_A8, 0x_C7, 0x_6B, 0x_9D, 0x_0F, 0x_F6, 0x_AF, 0x_83, 0x_98, 0x_07, 0x_D8, 0x_5E, 0x_7F,
		0x_8C, 0x_96, 0x_11, 0x_35, 0x_2E, 0x_9E, 0x_44, 0x_80, 0x_26, 0x_27, 0x_C4, 0x_EF, 0x_B6, 0x_24, 0x_70,
		0x_37, 0x_04, 0x_8D, 0x_C9, 0x_66, 0x_8A, 0x_E2, 0x_90, 0x_AD, 0x_99, 0x_1E, 0x_AB, 0x_E5,
	];

	helper(S, BASE, 881_774_539);
}
// endregion
// region: s_has_zeros_and_8_in_base_247
#[test]
fn s_has_zeros_and_8_in_base_247() {
	const S: &[u8] = &[
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_C2, 0x_13, 0x_61, 0x_23, 0x_30, 0x_D8, 0x_0E, 0x_E3, 0x_78, 0x_99, 0x_1A, 0x_F0, 0x_9B, 0x_7D,
		0x_17, 0x_4D, 0x_89, 0x_D9, 0x_AF, 0x_91, 0x_AB, 0x_9A, 0x_67, 0x_9F, 0x_5B, 0x_9C, 0x_C4, 0x_F7, 0x_33,
		0x_32, 0x_06, 0x_94, 0x_57, 0x_0F, 0x_CC, 0x_2F, 0x_A4, 0x_08, 0x_2A, 0x_FE, 0x_86, 0x_5E, 0x_15, 0x_FF,
		0x_79, 0x_52, 0x_62, 0x_D7, 0x_28, 0x_3C, 0x_1E, 0x_7F, 0x_E1, 0x_AD, 0x_34, 0x_41, 0x_46, 0x_88, 0x_7A,
		0x_3E, 0x_8A, 0x_F3, 0x_76, 0x_44, 0x_70, 0x_58, 0x_D3, 0x_B0, 0x_A2, 0x_2E, 0x_AE, 0x_47, 0x_A1, 0x_4A,
		0x_C6, 0x_FC, 0x_10, 0x_05, 0x_77, 0x_DD, 0x_BD, 0x_02, 0x_64, 0x_80, 0x_84, 0x_C9, 0x_C5, 0x_51, 0x_DB,
		0x_4E, 0x_DA, 0x_AA, 0x_DF, 0x_7C, 0x_BC, 0x_CA, 0x_83, 0x_96, 0x_6D, 0x_53, 0x_55, 0x_6F, 0x_36, 0x_E7,
		0x_59, 0x_C8, 0x_90, 0x_EE, 0x_FA, 0x_2C, 0x_5F, 0x_3D, 0x_3B, 0x_35, 0x_EC, 0x_21, 0x_27, 0x_1C, 0x_73,
		0x_C3, 0x_87, 0x_F4, 0x_1D, 0x_98, 0x_71, 0x_39, 0x_69, 0x_26, 0x_B3, 0x_BA, 0x_45, 0x_B4, 0x_A9, 0x_5C,
		0x_16, 0x_AC, 0x_01, 0x_8B, 0x_4C, 0x_7B, 0x_E5, 0x_ED, 0x_B9, 0x_95, 0x_A6, 0x_C7, 0x_8F, 0x_43, 0x_12,
		0x_CE, 0x_50, 0x_E4, 0x_49, 0x_56, 0x_EA, 0x_B1, 0x_37, 0x_07, 0x_B8, 0x_42, 0x_4B, 0x_E8, 0x_D5, 0x_D1,
		0x_22, 0x_E9, 0x_E2, 0x_72, 0x_A5, 0x_9E, 0x_C0, 0x_93, 0x_1F, 0x_63, 0x_F1, 0x_3F, 0x_B2, 0x_74, 0x_25,
		0x_24, 0x_31, 0x_40, 0x_75, 0x_CF, 0x_FD, 0x_8E, 0x_F5, 0x_29, 0x_BF, 0x_85, 0x_BE, 0x_19, 0x_B6, 0x_6E,
		0x_3A, 0x_E6, 0x_97, 0x_82, 0x_60, 0x_38, 0x_66, 0x_04, 0x_C1, 0x_F9, 0x_8D, 0x_A8, 0x_DE, 0x_D2, 0x_65,
		0x_6B, 0x_6C, 0x_9D, 0x_68, 0x_14, 0x_18, 0x_A0, 0x_81, 0x_5D, 0x_EB, 0x_CB, 0x_03, 0x_11, 0x_5A, 0x_FB,
		0x_8C, 0x_B5, 0x_7E, 0x_54, 0x_A7, 0x_A3, 0x_DC, 0x_48, 0x_1B, 0x_F6, 0x_E0, 0x_B7, 0x_4F, 0x_BB, 0x_CD,
		0x_D6, 0x_D0, 0x_92, 0x_F8, 0x_EF, 0x_6A, 0x_F2,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_zeros_and_34_in_base_247
#[test]
fn s_has_zeros_and_34_in_base_247() {
	const S: &[u8] = &[
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16,
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16,
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_EE, 0x_A8, 0x_A7, 0x_AE, 0x_C0, 0x_71, 0x_40, 0x_48, 0x_7B, 0x_C1, 0x_B6, 0x_43, 0x_63, 0x_EA,
		0x_5D, 0x_17, 0x_68, 0x_D8, 0x_96, 0x_F3, 0x_B9, 0x_F0, 0x_A6, 0x_55, 0x_D5, 0x_77, 0x_7F, 0x_E1, 0x_85,
		0x_87, 0x_D4, 0x_ED, 0x_7D, 0x_4F, 0x_42, 0x_97, 0x_26, 0x_36, 0x_DF, 0x_66, 0x_F9, 0x_7A, 0x_EF, 0x_81,
		0x_9C, 0x_E4, 0x_F8, 0x_3F, 0x_25, 0x_0E, 0x_84, 0x_2A, 0x_E8, 0x_AB, 0x_FA, 0x_7C, 0x_51, 0x_E6, 0x_C7,
		0x_32, 0x_13, 0x_DE, 0x_F5, 0x_2E, 0x_C9, 0x_0F, 0x_69, 0x_9F, 0x_57, 0x_DA, 0x_11, 0x_6E, 0x_BF, 0x_10,
		0x_DB, 0x_CD, 0x_F7, 0x_1E, 0x_8B, 0x_4B, 0x_79, 0x_A3, 0x_D2, 0x_8D, 0x_14, 0x_6A, 0x_C3, 0x_18, 0x_74,
		0x_52, 0x_D6, 0x_34, 0x_E2, 0x_22, 0x_91, 0x_73, 0x_E0, 0x_30, 0x_B8, 0x_60, 0x_8C, 0x_EB, 0x_23, 0x_BC,
		0x_5F, 0x_06, 0x_A2, 0x_D9, 0x_3C, 0x_05, 0x_78, 0x_62, 0x_31, 0x_37, 0x_94, 0x_39, 0x_9E, 0x_E5, 0x_45,
		0x_1D, 0x_3B, 0x_56, 0x_70, 0x_A4, 0x_6C, 0x_AF, 0x_1F, 0x_04, 0x_1C, 0x_E3, 0x_FE, 0x_AD, 0x_F4, 0x_6D,
		0x_A5, 0x_83, 0x_E7, 0x_33, 0x_93, 0x_D1, 0x_92, 0x_CB, 0x_5B, 0x_4D, 0x_8E, 0x_EC, 0x_B7, 0x_21, 0x_CA,
		0x_C4, 0x_64, 0x_49, 0x_DD, 0x_98, 0x_CC, 0x_4A, 0x_29, 0x_BE, 0x_89, 0x_A0, 0x_A1, 0x_BB, 0x_12, 0x_1B,
		0x_B4, 0x_AC, 0x_D3, 0x_75, 0x_82, 0x_4C, 0x_58, 0x_61, 0x_50, 0x_88, 0x_27, 0x_C6, 0x_86, 0x_F1, 0x_9D,
		0x_BD, 0x_6F, 0x_28, 0x_C8, 0x_41, 0x_FC, 0x_53, 0x_2C, 0x_01, 0x_59, 0x_5C, 0x_38, 0x_8F, 0x_35, 0x_67,
		0x_AA, 0x_9B, 0x_65, 0x_80, 0x_4E, 0x_07, 0x_B3, 0x_99, 0x_02, 0x_DC, 0x_95, 0x_08, 0x_90, 0x_F6, 0x_B0,
		0x_FB, 0x_19, 0x_B1, 0x_FF, 0x_54, 0x_3A, 0x_D0, 0x_FD, 0x_CE, 0x_24, 0x_BA, 0x_15, 0x_46, 0x_5E, 0x_5A,
		0x_F2, 0x_C2, 0x_C5, 0x_47, 0x_B2, 0x_8A, 0x_44, 0x_3E, 0x_3D, 0x_A9, 0x_9A, 0x_72, 0x_76, 0x_1A, 0x_D7,
		0x_03, 0x_7E, 0x_6B, 0x_2F, 0x_B5, 0x_E9, 0x_CF,
	];

	helper(S, BASE, 34);
}
// endregion
// region: s_has_zeros_and_730_in_base_247
#[test]
fn s_has_zeros_and_730_in_base_247() {
	const S: &[u8] = &[
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_F1, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_68, 0x_F1, 0x_75, 0x_7C, 0x_9C, 0x_86, 0x_81, 0x_1A, 0x_C3, 0x_F0, 0x_71, 0x_27, 0x_9D, 0x_12,
		0x_DF, 0x_1E, 0x_67, 0x_55, 0x_3C, 0x_EC, 0x_C9, 0x_FC, 0x_8F, 0x_3F, 0x_94, 0x_C6, 0x_B8, 0x_B4, 0x_3D,
		0x_B9, 0x_87, 0x_C4, 0x_22, 0x_DD, 0x_F2, 0x_F8, 0x_AC, 0x_96, 0x_A5, 0x_D9, 0x_1B, 0x_D8, 0x_2C, 0x_6C,
		0x_2F, 0x_A1, 0x_78, 0x_CE, 0x_57, 0x_93, 0x_28, 0x_E5, 0x_AB, 0x_1F, 0x_AF, 0x_A6, 0x_EF, 0x_5D, 0x_B0,
		0x_8C, 0x_BB, 0x_48, 0x_AA, 0x_4C, 0x_C8, 0x_E7, 0x_B5, 0x_C1, 0x_01, 0x_35, 0x_74, 0x_A7, 0x_F7, 0x_77,
		0x_36, 0x_58, 0x_91, 0x_D3, 0x_5A, 0x_B6, 0x_3B, 0x_31, 0x_CA, 0x_5E, 0x_3E, 0x_9E, 0x_4F, 0x_82, 0x_8A,
		0x_9F, 0x_90, 0x_3A, 0x_FB, 0x_21, 0x_C7, 0x_51, 0x_60, 0x_32, 0x_C2, 0x_50, 0x_26, 0x_52, 0x_2A, 0x_04,
		0x_47, 0x_13, 0x_BE, 0x_06, 0x_8D, 0x_F3, 0x_9B, 0x_0E, 0x_4A, 0x_DC, 0x_64, 0x_08, 0x_4B, 0x_BA, 0x_CB,
		0x_72, 0x_D6, 0x_6B, 0x_99, 0x_42, 0x_DA, 0x_4E, 0x_B7, 0x_85, 0x_4D, 0x_62, 0x_10, 0x_E4, 0x_9A, 0x_D2,
		0x_11, 0x_E2, 0x_05, 0x_A4, 0x_E8, 0x_EA, 0x_15, 0x_70, 0x_7F, 0x_6F, 0x_33, 0x_D1, 0x_2E, 0x_02, 0x_C0,
		0x_30, 0x_89, 0x_AD, 0x_DE, 0x_FF, 0x_F5, 0x_84, 0x_6D, 0x_25, 0x_AE, 0x_EB, 0x_24, 0x_DB, 0x_23, 0x_97,
		0x_5F, 0x_E0, 0x_E1, 0x_65, 0x_73, 0x_07, 0x_95, 0x_61, 0x_29, 0x_03, 0x_E9, 0x_C5, 0x_F4, 0x_17, 0x_CF,
		0x_76, 0x_A9, 0x_FD, 0x_FA, 0x_19, 0x_E3, 0x_0F, 0x_D0, 0x_CC, 0x_88, 0x_A3, 0x_38, 0x_7B, 0x_92, 0x_43,
		0x_F6, 0x_98, 0x_80, 0x_BC, 0x_BD, 0x_63, 0x_A8, 0x_F9, 0x_B3, 0x_D5, 0x_D4, 0x_B1, 0x_16, 0x_A0, 0x_B2,
		0x_34, 0x_E6, 0x_14, 0x_53, 0x_7E, 0x_EE, 0x_CD, 0x_7D, 0x_18, 0x_6E, 0x_ED, 0x_8B, 0x_5B, 0x_37, 0x_49,
		0x_46, 0x_54, 0x_83, 0x_44, 0x_56, 0x_66, 0x_FE, 0x_A2, 0x_69, 0x_5C, 0x_BF, 0x_8E, 0x_1C, 0x_41, 0x_40,
		0x_39, 0x_79, 0x_7A, 0x_D7, 0x_6A, 0x_59, 0x_1D,
	];

	helper(S, BASE, 730);
}
// endregion
// region: s_has_zeros_and_6_470_in_base_247
#[test]
fn s_has_zeros_and_6_470_in_base_247() {
	const S: &[u8] = &[
		0x_82, 0x_82, 0x_82, 0x_D8, 0x_B9,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_6B, 0x_E0, 0x_D0, 0x_37, 0x_92, 0x_52, 0x_81, 0x_E1, 0x_F1, 0x_FB, 0x_32, 0x_78, 0x_4B, 0x_BA,
		0x_5F, 0x_47, 0x_53, 0x_D1, 0x_69, 0x_C3, 0x_CE, 0x_F8, 0x_FC, 0x_07, 0x_B3, 0x_D8, 0x_C1, 0x_56, 0x_A0,
		0x_21, 0x_01, 0x_36, 0x_8A, 0x_4D, 0x_E8, 0x_54, 0x_24, 0x_76, 0x_D9, 0x_11, 0x_FA, 0x_2C, 0x_86, 0x_43,
		0x_30, 0x_87, 0x_7C, 0x_B9, 0x_F9, 0x_E7, 0x_EF, 0x_75, 0x_35, 0x_C5, 0x_48, 0x_84, 0x_55, 0x_1E, 0x_D3,
		0x_9B, 0x_B8, 0x_44, 0x_BD, 0x_4E, 0x_9A, 0x_67, 0x_61, 0x_90, 0x_13, 0x_2F, 0x_CC, 0x_E6, 0x_A4, 0x_10,
		0x_1F, 0x_5A, 0x_41, 0x_8F, 0x_AE, 0x_9C, 0x_6C, 0x_5D, 0x_B1, 0x_A8, 0x_FF, 0x_31, 0x_8C, 0x_FE, 0x_5E,
		0x_05, 0x_6D, 0x_51, 0x_85, 0x_68, 0x_F3, 0x_39, 0x_94, 0x_ED, 0x_BE, 0x_7A, 0x_73, 0x_93, 0x_9D, 0x_C2,
		0x_E3, 0x_DF, 0x_25, 0x_1A, 0x_98, 0x_EE, 0x_71, 0x_38, 0x_D5, 0x_26, 0x_27, 0x_33, 0x_95, 0x_60, 0x_8D,
		0x_40, 0x_6F, 0x_96, 0x_8B, 0x_A6, 0x_B5, 0x_7E, 0x_CF, 0x_F7, 0x_0F, 0x_DC, 0x_C9, 0x_F2, 0x_E9, 0x_58,
		0x_BC, 0x_15, 0x_3B, 0x_DE, 0x_2E, 0x_D4, 0x_63, 0x_D2, 0x_50, 0x_97, 0x_72, 0x_80, 0x_66, 0x_E2, 0x_59,
		0x_F4, 0x_C0, 0x_91, 0x_77, 0x_42, 0x_DB, 0x_3D, 0x_7D, 0x_CD, 0x_AF, 0x_A9, 0x_A2, 0x_3C, 0x_EC, 0x_E5,
		0x_6E, 0x_3E, 0x_1D, 0x_23, 0x_70, 0x_F5, 0x_9F, 0x_45, 0x_16, 0x_D6, 0x_28, 0x_C7, 0x_DD, 0x_B6, 0x_03,
		0x_34, 0x_4C, 0x_19, 0x_1B, 0x_62, 0x_7B, 0x_4F, 0x_CB, 0x_C4, 0x_6A, 0x_C6, 0x_04, 0x_4A, 0x_A7, 0x_29,
		0x_A5, 0x_E4, 0x_A1, 0x_12, 0x_88, 0x_B4, 0x_22, 0x_14, 0x_83, 0x_65, 0x_AC, 0x_64, 0x_0E, 0x_D7, 0x_BF,
		0x_9E, 0x_18, 0x_2A, 0x_5C, 0x_FD, 0x_46, 0x_DA, 0x_74, 0x_1C, 0x_AA, 0x_8E, 0x_B0, 0x_3A, 0x_AB, 0x_5B,
		0x_99, 0x_CA, 0x_08, 0x_A3, 0x_02, 0x_57, 0x_AD, 0x_17, 0x_EA, 0x_EB, 0x_3F, 0x_F0, 0x_B7, 0x_B2, 0x_06,
		0x_7F, 0x_F6, 0x_C8, 0x_49, 0x_79, 0x_BB, 0x_89,
	];

	helper(S, BASE, 6_470);
}
// endregion
// region: s_has_zeros_and_29_005_in_base_247
#[test]
fn s_has_zeros_and_29_005_in_base_247() {
	const S: &[u8] = &[
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_C2, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_7E, 0x_33, 0x_BE, 0x_7C, 0x_F2, 0x_CA, 0x_25, 0x_C8, 0x_75, 0x_DC, 0x_81, 0x_34, 0x_AF, 0x_5D,
		0x_EE, 0x_A7, 0x_7F, 0x_44, 0x_B4, 0x_41, 0x_BC, 0x_96, 0x_D8, 0x_92, 0x_38, 0x_CC, 0x_4A, 0x_5C, 0x_A9,
		0x_17, 0x_ED, 0x_02, 0x_A0, 0x_68, 0x_1D, 0x_6A, 0x_63, 0x_EC, 0x_13, 0x_B6, 0x_85, 0x_B1, 0x_4C, 0x_AE,
		0x_16, 0x_7B, 0x_F8, 0x_BB, 0x_EA, 0x_AA, 0x_AC, 0x_9B, 0x_03, 0x_BF, 0x_64, 0x_B2, 0x_3A, 0x_C5, 0x_0E,
		0x_FB, 0x_5B, 0x_45, 0x_E3, 0x_0F, 0x_7A, 0x_71, 0x_27, 0x_9F, 0x_B7, 0x_3E, 0x_A3, 0x_79, 0x_52, 0x_06,
		0x_F4, 0x_C0, 0x_57, 0x_C1, 0x_21, 0x_5F, 0x_A2, 0x_B5, 0x_9C, 0x_19, 0x_23, 0x_62, 0x_29, 0x_87, 0x_8C,
		0x_3B, 0x_1F, 0x_6E, 0x_D5, 0x_DF, 0x_76, 0x_2E, 0x_A1, 0x_BD, 0x_F6, 0x_14, 0x_EB, 0x_58, 0x_32, 0x_D0,
		0x_B9, 0x_66, 0x_C7, 0x_DD, 0x_CF, 0x_D4, 0x_65, 0x_E9, 0x_1C, 0x_BA, 0x_A6, 0x_C4, 0x_C2, 0x_8D, 0x_89,
		0x_CB, 0x_E8, 0x_9E, 0x_8F, 0x_2F, 0x_3D, 0x_F1, 0x_93, 0x_8E, 0x_5A, 0x_42, 0x_04, 0x_AD, 0x_01, 0x_AB,
		0x_7D, 0x_6B, 0x_C6, 0x_43, 0x_30, 0x_99, 0x_72, 0x_F7, 0x_56, 0x_78, 0x_D3, 0x_6C, 0x_69, 0x_05, 0x_DA,
		0x_61, 0x_D7, 0x_C9, 0x_F5, 0x_12, 0x_6F, 0x_97, 0x_22, 0x_DB, 0x_39, 0x_53, 0x_67, 0x_F3, 0x_50, 0x_49,
		0x_18, 0x_82, 0x_D2, 0x_FA, 0x_D1, 0x_37, 0x_77, 0x_E6, 0x_08, 0x_59, 0x_10, 0x_26, 0x_B0, 0x_4F, 0x_3C,
		0x_31, 0x_4E, 0x_E5, 0x_A8, 0x_B3, 0x_F0, 0x_84, 0x_48, 0x_91, 0x_80, 0x_95, 0x_FD, 0x_E7, 0x_28, 0x_4D,
		0x_36, 0x_D9, 0x_47, 0x_D6, 0x_C3, 0x_35, 0x_E4, 0x_6D, 0x_54, 0x_2C, 0x_74, 0x_11, 0x_55, 0x_73, 0x_5E,
		0x_94, 0x_1B, 0x_8B, 0x_A4, 0x_EF, 0x_83, 0x_40, 0x_88, 0x_70, 0x_9D, 0x_3F, 0x_98, 0x_DE, 0x_9A, 0x_90,
		0x_CD, 0x_24, 0x_E0, 0x_E1, 0x_15, 0x_F9, 0x_2A, 0x_46, 0x_FC, 0x_E2, 0x_1E, 0x_B8, 0x_60, 0x_86, 0x_8A,
		0x_CE, 0x_FE, 0x_4B, 0x_07, 0x_51, 0x_A5, 0x_FF,
	];

	helper(S, BASE, 29_005);
}
// endregion
// region: s_has_zeros_and_977_705_in_base_247
#[test]
fn s_has_zeros_and_977_705_in_base_247() {
	const S: &[u8] = &[
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_83, 0x_78, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_2E, 0x_07, 0x_32, 0x_46, 0x_B2, 0x_78, 0x_DE, 0x_61, 0x_53, 0x_C4, 0x_F9, 0x_4F, 0x_21, 0x_B5,
		0x_60, 0x_83, 0x_4C, 0x_59, 0x_90, 0x_BB, 0x_7B, 0x_5C, 0x_E8, 0x_4D, 0x_58, 0x_88, 0x_A7, 0x_F7, 0x_86,
		0x_7F, 0x_A9, 0x_F5, 0x_40, 0x_D6, 0x_D5, 0x_EB, 0x_70, 0x_C7, 0x_E0, 0x_B6, 0x_5F, 0x_30, 0x_BE, 0x_E3,
		0x_6A, 0x_EE, 0x_62, 0x_6C, 0x_FF, 0x_EF, 0x_8B, 0x_D7, 0x_BF, 0x_43, 0x_1C, 0x_35, 0x_02, 0x_EC, 0x_E6,
		0x_A6, 0x_DC, 0x_36, 0x_CB, 0x_C9, 0x_DB, 0x_BC, 0x_CC, 0x_47, 0x_28, 0x_24, 0x_C2, 0x_55, 0x_44, 0x_E9,
		0x_3B, 0x_A0, 0x_1A, 0x_8F, 0x_91, 0x_23, 0x_D1, 0x_E5, 0x_76, 0x_D4, 0x_E2, 0x_BD, 0x_05, 0x_AC, 0x_85,
		0x_3D, 0x_D8, 0x_7C, 0x_50, 0x_34, 0x_1E, 0x_94, 0x_89, 0x_68, 0x_41, 0x_3C, 0x_9C, 0x_F2, 0x_4A, 0x_52,
		0x_95, 0x_A4, 0x_A2, 0x_31, 0x_2C, 0x_42, 0x_17, 0x_8E, 0x_A1, 0x_CA, 0x_6E, 0x_69, 0x_3F, 0x_93, 0x_DA,
		0x_64, 0x_AE, 0x_9B, 0x_39, 0x_D2, 0x_BA, 0x_ED, 0x_9E, 0x_0F, 0x_E1, 0x_B9, 0x_1D, 0x_5B, 0x_7E, 0x_B0,
		0x_84, 0x_C5, 0x_19, 0x_66, 0x_FA, 0x_56, 0x_38, 0x_97, 0x_10, 0x_C0, 0x_75, 0x_2F, 0x_B4, 0x_CF, 0x_12,
		0x_15, 0x_C3, 0x_29, 0x_FC, 0x_4B, 0x_9D, 0x_14, 0x_01, 0x_D3, 0x_49, 0x_E7, 0x_C6, 0x_4E, 0x_48, 0x_FE,
		0x_71, 0x_65, 0x_8D, 0x_C1, 0x_B1, 0x_6B, 0x_18, 0x_1B, 0x_92, 0x_33, 0x_F0, 0x_25, 0x_7D, 0x_6F, 0x_3E,
		0x_B3, 0x_A5, 0x_16, 0x_87, 0x_C8, 0x_57, 0x_99, 0x_72, 0x_F6, 0x_37, 0x_80, 0x_11, 0x_5A, 0x_7A, 0x_96,
		0x_77, 0x_1F, 0x_67, 0x_74, 0x_73, 0x_81, 0x_A3, 0x_51, 0x_9F, 0x_26, 0x_08, 0x_AB, 0x_F1, 0x_0E, 0x_54,
		0x_B8, 0x_FD, 0x_EA, 0x_82, 0x_E4, 0x_5D, 0x_03, 0x_AF, 0x_CD, 0x_8A, 0x_F8, 0x_06, 0x_5E, 0x_98, 0x_2A,
		0x_04, 0x_F3, 0x_8C, 0x_27, 0x_DD, 0x_F4, 0x_AD, 0x_B7, 0x_DF, 0x_D0, 0x_13, 0x_A8, 0x_CE, 0x_63, 0x_AA,
		0x_3A, 0x_9A, 0x_6D, 0x_FB, 0x_D9, 0x_22, 0x_79,
	];

	helper(S, BASE, 977_705);
}
// endregion
// region: s_has_zeros_and_4_670_088_in_base_247
#[test]
fn s_has_zeros_and_4_670_088_in_base_247() {
	const S: &[u8] = &[
		0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24,
		0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_1F, 0x_A2, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_24, 0x_E6, 0x_11, 0x_19, 0x_4C, 0x_26, 0x_CD, 0x_75, 0x_B8, 0x_89, 0x_85, 0x_BB, 0x_18, 0x_02, 0x_CA,
		0x_DA, 0x_D9, 0x_AB, 0x_7A, 0x_DC, 0x_B4, 0x_E5, 0x_69, 0x_6A, 0x_A0, 0x_84, 0x_FC, 0x_65, 0x_04, 0x_95,
		0x_22, 0x_C2, 0x_55, 0x_12, 0x_42, 0x_B3, 0x_51, 0x_41, 0x_D8, 0x_64, 0x_63, 0x_82, 0x_27, 0x_AF, 0x_A3,
		0x_38, 0x_7C, 0x_36, 0x_E7, 0x_6E, 0x_AC, 0x_AA, 0x_6B, 0x_F3, 0x_83, 0x_7D, 0x_40, 0x_5B, 0x_28, 0x_DD,
		0x_4F, 0x_0F, 0x_52, 0x_34, 0x_F8, 0x_9D, 0x_39, 0x_F1, 0x_31, 0x_F7, 0x_70, 0x_F5, 0x_50, 0x_99, 0x_71,
		0x_CC, 0x_1F, 0x_C1, 0x_21, 0x_48, 0x_62, 0x_F6, 0x_E9, 0x_74, 0x_C0, 0x_A5, 0x_FA, 0x_35, 0x_68, 0x_BF,
		0x_3F, 0x_13, 0x_60, 0x_97, 0x_98, 0x_1E, 0x_9A, 0x_79, 0x_D2, 0x_10, 0x_ED, 0x_9C, 0x_76, 0x_29, 0x_8E,
		0x_01, 0x_BD, 0x_C4, 0x_33, 0x_D0, 0x_FD, 0x_92, 0x_A9, 0x_D5, 0x_57, 0x_61, 0x_EE, 0x_96, 0x_5E, 0x_B0,
		0x_25, 0x_D1, 0x_C8, 0x_A1, 0x_A7, 0x_30, 0x_17, 0x_C9, 0x_44, 0x_4D, 0x_FE, 0x_8F, 0x_90, 0x_9E, 0x_3C,
		0x_A2, 0x_2C, 0x_6D, 0x_AE, 0x_DE, 0x_54, 0x_2F, 0x_FB, 0x_3E, 0x_87, 0x_BC, 0x_EF, 0x_73, 0x_59, 0x_45,
		0x_3A, 0x_03, 0x_A4, 0x_8B, 0x_C5, 0x_06, 0x_1A, 0x_1C, 0x_9B, 0x_0E, 0x_5D, 0x_B2, 0x_B7, 0x_2A, 0x_47,
		0x_58, 0x_72, 0x_EB, 0x_E2, 0x_CE, 0x_6C, 0x_7F, 0x_E3, 0x_05, 0x_DB, 0x_4A, 0x_1B, 0x_37, 0x_9F, 0x_08,
		0x_23, 0x_DF, 0x_D7, 0x_8C, 0x_B9, 0x_1D, 0x_15, 0x_78, 0x_3B, 0x_4B, 0x_F0, 0x_8A, 0x_C6, 0x_B5, 0x_77,
		0x_32, 0x_B6, 0x_91, 0x_8D, 0x_88, 0x_AD, 0x_A8, 0x_CF, 0x_A6, 0x_80, 0x_E0, 0x_6F, 0x_EC, 0x_D6, 0x_46,
		0x_D4, 0x_7B, 0x_D3, 0x_49, 0x_E4, 0x_F2, 0x_E8, 0x_C7, 0x_14, 0x_B1, 0x_4E, 0x_F9, 0x_2E, 0x_7E, 0x_5F,
		0x_EA, 0x_5C, 0x_C3, 0x_81, 0x_BA, 0x_94, 0x_CB, 0x_E1, 0x_43, 0x_66, 0x_BE, 0x_3D, 0x_53, 0x_F4, 0x_5A,
		0x_FF, 0x_93, 0x_67, 0x_16, 0x_07, 0x_86, 0x_56,
	];

	helper(S, BASE, 4_670_088);
}
// endregion
// region: s_has_zeros_and_14_635_008_in_base_247
#[test]
fn s_has_zeros_and_14_635_008_in_base_247() {
	const S: &[u8] = &[
		0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_99, 0x_61, 0x_6B,
	];
	const BASE: &[u8] = &[
		0x_E8, 0x_F7, 0x_C0, 0x_33, 0x_AD, 0x_6C, 0x_BA, 0x_4A, 0x_4C, 0x_5E, 0x_EC, 0x_6B, 0x_FB, 0x_44, 0x_3E,
		0x_8C, 0x_F0, 0x_8A, 0x_E6, 0x_B7, 0x_AB, 0x_08, 0x_A5, 0x_50, 0x_24, 0x_C6, 0x_B4, 0x_9D, 0x_35, 0x_63,
		0x_FD, 0x_DA, 0x_3A, 0x_68, 0x_CB, 0x_F9, 0x_6D, 0x_E4, 0x_0F, 0x_7A, 0x_AE, 0x_93, 0x_9F, 0x_D4, 0x_6A,
		0x_1F, 0x_83, 0x_2E, 0x_B0, 0x_4B, 0x_D8, 0x_31, 0x_11, 0x_70, 0x_A3, 0x_7F, 0x_DE, 0x_37, 0x_7D, 0x_DF,
		0x_CD, 0x_03, 0x_58, 0x_A0, 0x_A9, 0x_98, 0x_5B, 0x_97, 0x_47, 0x_75, 0x_89, 0x_5F, 0x_84, 0x_B3, 0x_F2,
		0x_8B, 0x_32, 0x_19, 0x_D6, 0x_95, 0x_D2, 0x_59, 0x_1B, 0x_AA, 0x_A6, 0x_52, 0x_9B, 0x_72, 0x_4F, 0x_45,
		0x_76, 0x_3C, 0x_7B, 0x_C5, 0x_E5, 0x_1E, 0x_54, 0x_1C, 0x_E2, 0x_D3, 0x_E3, 0x_9C, 0x_82, 0x_A4, 0x_17,
		0x_48, 0x_FA, 0x_96, 0x_62, 0x_D5, 0x_3F, 0x_88, 0x_B2, 0x_4E, 0x_5C, 0x_D1, 0x_74, 0x_ED, 0x_16, 0x_D9,
		0x_7E, 0x_DB, 0x_9E, 0x_8D, 0x_42, 0x_DD, 0x_C7, 0x_C1, 0x_05, 0x_34, 0x_3D, 0x_85, 0x_46, 0x_41, 0x_EE,
		0x_A8, 0x_CE, 0x_8F, 0x_91, 0x_BB, 0x_39, 0x_56, 0x_30, 0x_36, 0x_71, 0x_64, 0x_F5, 0x_CC, 0x_25, 0x_A7,
		0x_3B, 0x_FE, 0x_26, 0x_92, 0x_BC, 0x_F3, 0x_49, 0x_C3, 0x_E9, 0x_E0, 0x_27, 0x_C2, 0x_EB, 0x_1D, 0x_01,
		0x_53, 0x_E7, 0x_22, 0x_1A, 0x_6F, 0x_69, 0x_57, 0x_94, 0x_38, 0x_86, 0x_D7, 0x_87, 0x_13, 0x_78, 0x_B9,
		0x_21, 0x_B5, 0x_AF, 0x_81, 0x_55, 0x_66, 0x_F1, 0x_9A, 0x_02, 0x_2C, 0x_F8, 0x_FF, 0x_D0, 0x_40, 0x_F4,
		0x_B6, 0x_EA, 0x_CF, 0x_51, 0x_7C, 0x_B8, 0x_04, 0x_C9, 0x_6E, 0x_8E, 0x_23, 0x_73, 0x_12, 0x_BD, 0x_65,
		0x_DC, 0x_AC, 0x_CA, 0x_C4, 0x_28, 0x_A2, 0x_29, 0x_07, 0x_61, 0x_E1, 0x_79, 0x_FC, 0x_14, 0x_EF, 0x_B1,
		0x_F6, 0x_2A, 0x_C8, 0x_90, 0x_18, 0x_5A, 0x_67, 0x_15, 0x_06, 0x_77, 0x_5D, 0x_0E, 0x_A1, 0x_80, 0x_99,
		0x_60, 0x_2F, 0x_BF, 0x_10, 0x_BE, 0x_43, 0x_4D,
	];

	helper(S, BASE, 14_635_008);
}
// endregion
// region: s_has_zeros_and_384_274_816_in_base_247
#[test]
fn s_has_zeros_and_384_274_816_in_base_247() {
	const S: &[u8] = &[
		0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6,
		0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_F6, 0x_54, 0x_C4, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_C6, 0x_41, 0x_DB, 0x_C7, 0x_7E, 0x_73, 0x_C5, 0x_49, 0x_C8, 0x_87, 0x_FF, 0x_4E, 0x_02, 0x_7C, 0x_71,
		0x_91, 0x_30, 0x_6A, 0x_39, 0x_E8, 0x_47, 0x_6D, 0x_14, 0x_DF, 0x_24, 0x_F6, 0x_82, 0x_FA, 0x_32, 0x_2C,
		0x_89, 0x_1F, 0x_21, 0x_C2, 0x_A3, 0x_46, 0x_18, 0x_D4, 0x_A8, 0x_72, 0x_4F, 0x_53, 0x_6C, 0x_3A, 0x_F1,
		0x_06, 0x_AB, 0x_B6, 0x_DC, 0x_62, 0x_D2, 0x_42, 0x_FD, 0x_AD, 0x_B7, 0x_45, 0x_94, 0x_29, 0x_A7, 0x_2F,
		0x_ED, 0x_8B, 0x_F9, 0x_1D, 0x_68, 0x_5B, 0x_B5, 0x_C9, 0x_BC, 0x_28, 0x_8A, 0x_BD, 0x_E6, 0x_5F, 0x_78,
		0x_CA, 0x_D5, 0x_6E, 0x_35, 0x_56, 0x_07, 0x_77, 0x_52, 0x_4A, 0x_05, 0x_A2, 0x_2A, 0x_7D, 0x_F0, 0x_F4,
		0x_1C, 0x_FB, 0x_D9, 0x_EF, 0x_92, 0x_F3, 0x_40, 0x_80, 0x_B4, 0x_B2, 0x_B9, 0x_D1, 0x_83, 0x_B3, 0x_50,
		0x_31, 0x_C0, 0x_9A, 0x_E9, 0x_7A, 0x_C3, 0x_9D, 0x_03, 0x_E3, 0x_3E, 0x_81, 0x_27, 0x_CE, 0x_12, 0x_BF,
		0x_A1, 0x_AC, 0x_DA, 0x_54, 0x_08, 0x_0E, 0x_9C, 0x_FE, 0x_A6, 0x_F2, 0x_D6, 0x_97, 0x_22, 0x_8D, 0x_58,
		0x_E7, 0x_F8, 0x_DE, 0x_60, 0x_10, 0x_D8, 0x_38, 0x_26, 0x_88, 0x_EE, 0x_04, 0x_76, 0x_9B, 0x_86, 0x_5D,
		0x_AE, 0x_64, 0x_96, 0x_CC, 0x_8C, 0x_B0, 0x_51, 0x_E5, 0x_A5, 0x_16, 0x_1A, 0x_A9, 0x_C4, 0x_9F, 0x_25,
		0x_3F, 0x_33, 0x_59, 0x_BB, 0x_61, 0x_D7, 0x_6F, 0x_AF, 0x_EB, 0x_BE, 0x_43, 0x_4B, 0x_EC, 0x_DD, 0x_4D,
		0x_65, 0x_1E, 0x_95, 0x_8E, 0x_B8, 0x_CF, 0x_90, 0x_1B, 0x_5C, 0x_55, 0x_3B, 0x_7F, 0x_23, 0x_36, 0x_34,
		0x_70, 0x_57, 0x_F5, 0x_85, 0x_5A, 0x_13, 0x_E0, 0x_E2, 0x_D3, 0x_11, 0x_AA, 0x_5E, 0x_7B, 0x_CB, 0x_FC,
		0x_15, 0x_9E, 0x_D0, 0x_3C, 0x_19, 0x_EA, 0x_A0, 0x_CD, 0x_B1, 0x_93, 0x_3D, 0x_37, 0x_48, 0x_44, 0x_8F,
		0x_BA, 0x_4C, 0x_2E, 0x_84, 0x_99, 0x_6B, 0x_69, 0x_A4, 0x_63, 0x_F7, 0x_17, 0x_79, 0x_0F, 0x_E4, 0x_75,
		0x_C1, 0x_98, 0x_74, 0x_E1, 0x_67, 0x_01, 0x_66,
	];

	helper(S, BASE, 384_274_816);
}
// endregion
// region: s_has_1_in_base_2_and_insignificant_bytes
#[test]
fn s_has_1_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2A, 0x_C0, 0x_70, 0x_70, 0x_2A, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_70, 0x_2A,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_92_in_base_2_and_insignificant_bytes
#[test]
fn s_has_92_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_14, 0x_30, 0x_14, 0x_14, 0x_14, 0x_30, 0x_30, 0x_FA, 0x_14, 0x_14, 0x_30, 0x_30, 0x_14, 0x_14, 0x_30,
		0x_30, 0x_30, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_14,
	];

	helper(S, BASE, 92);
}
// endregion
// region: s_has_568_in_base_2_and_insignificant_bytes
#[test]
fn s_has_568_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_86, 0x_89, 0x_89, 0x_89, 0x_86, 0x_86, 0x_86, 0x_89, 0x_89, 0x_89, 0x_2F, 0x_89, 0x_89, 0x_86, 0x_89,
		0x_89, 0x_89, 0x_86, 0x_86, 0x_89, 0x_89, 0x_89, 0x_89, 0x_86, 0x_86, 0x_89, 0x_89,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_86,
	];

	helper(S, BASE, 568);
}
// endregion
// region: s_has_8_921_in_base_2_and_insignificant_bytes
#[test]
fn s_has_8_921_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_BA, 0x_6F, 0x_6F, 0x_6F, 0x_BA, 0x_6F, 0x_BA, 0x_BA, 0x_6F, 0x_BA, 0x_BA, 0x_6F, 0x_6F, 0x_BA, 0x_96,
		0x_BA, 0x_6F, 0x_BA, 0x_BA, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_BA,
	];

	helper(S, BASE, 8_921);
}
// endregion
// region: s_has_79_702_in_base_2_and_insignificant_bytes
#[test]
fn s_has_79_702_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_10, 0x_4E, 0x_4E, 0x_10, 0x_10, 0x_4E, 0x_10, 0x_10, 0x_10, 0x_4E, 0x_10, 0x_4E, 0x_10, 0x_4E, 0x_10,
		0x_10, 0x_4E, 0x_6F, 0x_4E, 0x_10, 0x_10, 0x_4E, 0x_4E, 0x_10, 0x_4E, 0x_4E, 0x_10, 0x_10, 0x_10, 0x_4E,
		0x_4E, 0x_10, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_10, 0x_4E, 0x_10, 0x_10, 0x_10, 0x_4E,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_10,
	];

	helper(S, BASE, 79_702);
}
// endregion
// region: s_has_240_456_in_base_2_and_insignificant_bytes
#[test]
fn s_has_240_456_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_1F, 0x_1F, 0x_1F, 0x_93, 0x_1F, 0x_93, 0x_1F, 0x_93, 0x_1F, 0x_1F, 0x_93, 0x_1F, 0x_93, 0x_93, 0x_1F,
		0x_93, 0x_93, 0x_93, 0x_7C, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_1F, 0x_93, 0x_1F, 0x_1F, 0x_1F, 0x_93,
		0x_93, 0x_93, 0x_1F, 0x_93, 0x_93, 0x_93, 0x_1F, 0x_1F, 0x_1F, 0x_93, 0x_93, 0x_1F, 0x_93, 0x_1F, 0x_1F,
		0x_1F, 0x_1F, 0x_93, 0x_93, 0x_1F, 0x_93, 0x_1F, 0x_1F, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_1F,
	];

	helper(S, BASE, 240_456);
}
// endregion
// region: s_has_1_278_585_in_base_2_and_insignificant_bytes
#[test]
fn s_has_1_278_585_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_E1, 0x_74, 0x_74, 0x_E1, 0x_E1, 0x_E1, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_E1, 0x_74, 0x_74, 0x_E1,
		0x_E1, 0x_E1, 0x_E1, 0x_74, 0x_74, 0x_E1, 0x_01, 0x_74, 0x_74, 0x_74, 0x_74, 0x_E1, 0x_74, 0x_E1, 0x_74,
		0x_74, 0x_E1, 0x_74, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_E1,
	];

	helper(S, BASE, 1_278_585);
}
// endregion
// region: s_has_43_773_081_in_base_2_and_insignificant_bytes
#[test]
fn s_has_43_773_081_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_A6, 0x_FC, 0x_A6, 0x_FC, 0x_FC, 0x_A6, 0x_A6, 0x_FC, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_FC, 0x_A6,
		0x_A6, 0x_FC, 0x_FC, 0x_A6, 0x_FC, 0x_FC, 0x_A6, 0x_A6, 0x_FC, 0x_FC, 0x_A6, 0x_EE, 0x_FC, 0x_A6, 0x_FC,
		0x_A6, 0x_A6, 0x_FC, 0x_FC, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_FC, 0x_A6, 0x_A6,
		0x_FC, 0x_A6, 0x_FC, 0x_A6, 0x_FC, 0x_A6, 0x_FC, 0x_A6, 0x_A6, 0x_FC, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6,
		0x_A6,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_A6,
	];

	helper(S, BASE, 43_773_081);
}
// endregion
// region: s_has_562_618_523_in_base_2_and_insignificant_bytes
#[test]
fn s_has_562_618_523_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_86, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_86, 0x_86, 0x_6B, 0x_6B, 0x_6B, 0x_86, 0x_6B, 0x_6B, 0x_6B, 0x_86,
		0x_86, 0x_86, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_86, 0x_6B, 0x_6B, 0x_86, 0x_86, 0x_6B, 0x_86, 0x_86,
		0x_C3, 0x_86, 0x_6B, 0x_6B, 0x_86, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_86, 0x_6B, 0x_86, 0x_86, 0x_6B,
		0x_6B, 0x_86, 0x_86, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_86,
	];

	helper(S, BASE, 562_618_523);
}
// endregion
// region: s_has_2_in_base_3_and_insignificant_bytes
#[test]
fn s_has_2_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_B4, 0x_2E, 0x_5E, 0x_43, 0x_B4, 0x_5E, 0x_43, 0x_5E, 0x_43, 0x_43, 0x_5E, 0x_B4, 0x_5E, 0x_43, 0x_5E,
		0x_B4, 0x_5E, 0x_43, 0x_5E, 0x_B4, 0x_5E, 0x_43, 0x_B4, 0x_5E, 0x_43, 0x_B4, 0x_5E, 0x_B4, 0x_5E, 0x_5E,
		0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_43, 0x_43, 0x_B4, 0x_B4, 0x_B4, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_43, 0x_B4,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_42_in_base_3_and_insignificant_bytes
#[test]
fn s_has_42_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_36, 0x_36, 0x_71, 0x_1E, 0x_8F, 0x_71, 0x_71, 0x_1E, 0x_36, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_36, 0x_71,
	];

	helper(S, BASE, 42);
}
// endregion
// region: s_has_722_in_base_3_and_insignificant_bytes
#[test]
fn s_has_722_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_18, 0x_C2, 0x_93, 0x_C2, 0x_C2, 0x_47, 0x_47, 0x_18, 0x_18, 0x_C2, 0x_47,
		0x_18, 0x_C2, 0x_47, 0x_47, 0x_18, 0x_47, 0x_47, 0x_C2, 0x_C2, 0x_C2, 0x_18, 0x_18, 0x_47,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_47, 0x_C2,
	];

	helper(S, BASE, 722);
}
// endregion
// region: s_has_7_904_in_base_3_and_insignificant_bytes
#[test]
fn s_has_7_904_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_6F, 0x_B3, 0x_6F, 0x_47, 0x_6F, 0x_6F, 0x_47, 0x_B3, 0x_47, 0x_D6, 0x_6F, 0x_47, 0x_47, 0x_6F, 0x_6F,
		0x_6F, 0x_47, 0x_6F, 0x_6F, 0x_47, 0x_B3, 0x_47, 0x_6F, 0x_6F, 0x_B3, 0x_6F, 0x_6F, 0x_6F, 0x_B3, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_6F, 0x_47,
	];

	helper(S, BASE, 7_904);
}
// endregion
// region: s_has_32_813_in_base_3_and_insignificant_bytes
#[test]
fn s_has_32_813_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_37, 0x_68, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_68, 0x_68, 0x_EC, 0x_EE, 0x_EE, 0x_EE, 0x_EE,
		0x_68, 0x_EE, 0x_37, 0x_37, 0x_37, 0x_EE, 0x_EE, 0x_68, 0x_68, 0x_68, 0x_37, 0x_68, 0x_68, 0x_68, 0x_37,
		0x_37,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_37, 0x_68,
	];

	helper(S, BASE, 32_813);
}
// endregion
// region: s_has_533_983_in_base_3_and_insignificant_bytes
#[test]
fn s_has_533_983_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_01, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_01, 0x_C3, 0x_01, 0x_01, 0x_01, 0x_C3, 0x_01, 0x_01, 0x_6C, 0x_C3,
		0x_01, 0x_C3, 0x_C3, 0x_01, 0x_01, 0x_01, 0x_C3, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_01, 0x_E6,
	];

	helper(S, BASE, 533_983);
}
// endregion
// region: s_has_5_912_099_in_base_3_and_insignificant_bytes
#[test]
fn s_has_5_912_099_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_C6, 0x_88, 0x_33, 0x_88, 0x_C6, 0x_88, 0x_C6, 0x_88, 0x_88, 0x_33, 0x_C6, 0x_33, 0x_C6, 0x_33, 0x_33,
		0x_CE, 0x_33, 0x_88, 0x_33, 0x_33, 0x_33, 0x_88, 0x_33, 0x_C6, 0x_C6, 0x_C6, 0x_33, 0x_C6, 0x_C6, 0x_88,
		0x_33, 0x_C6, 0x_33, 0x_33, 0x_33, 0x_33, 0x_88, 0x_88, 0x_88, 0x_C6, 0x_88, 0x_C6, 0x_C6, 0x_33, 0x_88,
		0x_33, 0x_C6, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_C6, 0x_33,
	];

	helper(S, BASE, 5_912_099);
}
// endregion
// region: s_has_56_757_045_in_base_3_and_insignificant_bytes
#[test]
fn s_has_56_757_045_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_78, 0x_73, 0x_47, 0x_47, 0x_78, 0x_47, 0x_78, 0x_73, 0x_78, 0x_47, 0x_73, 0x_73, 0x_73, 0x_73, 0x_47,
		0x_78, 0x_73, 0x_13, 0x_78, 0x_78, 0x_47, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_78, 0x_47,
	];

	helper(S, BASE, 56_757_045);
}
// endregion
// region: s_has_146_119_547_in_base_3_and_insignificant_bytes
#[test]
fn s_has_146_119_547_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_56, 0x_D3, 0x_56, 0x_D3, 0x_56, 0x_56, 0x_64, 0x_64, 0x_56, 0x_56, 0x_64, 0x_64, 0x_56, 0x_D3, 0x_D3,
		0x_D3, 0x_D3, 0x_64, 0x_C6, 0x_56, 0x_56, 0x_D3, 0x_D3, 0x_D3, 0x_56, 0x_64, 0x_D3, 0x_D3, 0x_64, 0x_64,
		0x_56, 0x_56, 0x_D3, 0x_56, 0x_64, 0x_D3, 0x_D3, 0x_D3, 0x_56, 0x_64, 0x_64, 0x_64, 0x_64, 0x_56, 0x_D3,
		0x_64, 0x_64, 0x_64, 0x_56, 0x_64, 0x_64, 0x_56, 0x_D3, 0x_D3, 0x_D3, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_56, 0x_64,
	];

	helper(S, BASE, 146_119_547);
}
// endregion
// region: s_has_1_in_base_5_and_insignificant_bytes
#[test]
fn s_has_1_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_04, 0x_0A, 0x_0E, 0x_04, 0x_04, 0x_2C, 0x_3E, 0x_CF, 0x_2C, 0x_2C, 0x_0E, 0x_0E, 0x_3E, 0x_CF, 0x_3E,
		0x_04, 0x_2C, 0x_04, 0x_CF, 0x_04, 0x_2C, 0x_3E, 0x_CF, 0x_2C, 0x_3E, 0x_0E, 0x_CF, 0x_CF, 0x_2C, 0x_2C,
		0x_0E,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_04, 0x_CF, 0x_3E, 0x_2C,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_70_in_base_5_and_insignificant_bytes
#[test]
fn s_has_70_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_DE, 0x_3C, 0x_C2, 0x_93, 0x_DE, 0x_DE, 0x_C6, 0x_DE, 0x_DE, 0x_C2, 0x_DE, 0x_C2, 0x_3C, 0x_3C, 0x_DE,
		0x_C6, 0x_13, 0x_3C, 0x_C2, 0x_3C, 0x_13, 0x_DE, 0x_3C, 0x_DE, 0x_C2, 0x_DE, 0x_DE, 0x_C6, 0x_13, 0x_3C,
		0x_3C, 0x_C6, 0x_DE, 0x_C6, 0x_C6, 0x_DE, 0x_DE, 0x_DE, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_13, 0x_DE, 0x_C6, 0x_3C,
	];

	helper(S, BASE, 70);
}
// endregion
// region: s_has_142_in_base_5_and_insignificant_bytes
#[test]
fn s_has_142_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_40, 0x_9C, 0x_2F, 0x_FB, 0x_B3, 0x_9C, 0x_40, 0x_FB, 0x_FB, 0x_9C, 0x_FB, 0x_A8, 0x_40, 0x_FB, 0x_40,
		0x_2F, 0x_2F, 0x_9C, 0x_2F, 0x_9C, 0x_A8, 0x_40, 0x_FB, 0x_40, 0x_9C, 0x_40, 0x_A8, 0x_A8, 0x_40, 0x_9C,
		0x_A8, 0x_9C, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_40, 0x_FB, 0x_2F, 0x_A8,
	];

	helper(S, BASE, 142);
}
// endregion
// region: s_has_3_238_in_base_5_and_insignificant_bytes
#[test]
fn s_has_3_238_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_1F, 0x_88, 0x_88, 0x_6B, 0x_EC, 0x_75, 0x_B9, 0x_88, 0x_88, 0x_1F, 0x_EC, 0x_88, 0x_75, 0x_6B, 0x_6B,
		0x_88, 0x_88, 0x_6B, 0x_6B, 0x_EC, 0x_EC, 0x_88, 0x_88, 0x_88, 0x_6B, 0x_EC, 0x_88, 0x_88, 0x_6B, 0x_75,
		0x_1F, 0x_88, 0x_6B, 0x_88,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_1F, 0x_EC, 0x_75, 0x_6B,
	];

	helper(S, BASE, 3_238);
}
// endregion
// region: s_has_85_151_in_base_5_and_insignificant_bytes
#[test]
fn s_has_85_151_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_33, 0x_59, 0x_FC, 0x_33, 0x_33, 0x_33, 0x_59, 0x_33, 0x_15, 0x_17, 0x_FC, 0x_FC, 0x_1A, 0x_33, 0x_17,
		0x_1A, 0x_59, 0x_FC, 0x_17, 0x_17, 0x_1A, 0x_1A, 0x_17, 0x_17, 0x_33, 0x_17, 0x_17, 0x_FC, 0x_33, 0x_17,
		0x_33, 0x_59, 0x_FC, 0x_FC, 0x_1A, 0x_33, 0x_33, 0x_59, 0x_17, 0x_17, 0x_1A, 0x_FC, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_33, 0x_FC, 0x_17, 0x_1A,
	];

	helper(S, BASE, 85_151);
}
// endregion
// region: s_has_337_914_in_base_5_and_insignificant_bytes
#[test]
fn s_has_337_914_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_9C, 0x_E5, 0x_B2, 0x_3F, 0x_B2, 0x_E5, 0x_A9, 0x_9C, 0x_61, 0x_B2, 0x_3F, 0x_A9, 0x_3F, 0x_A9, 0x_3F,
		0x_E5, 0x_A9, 0x_B2, 0x_9C, 0x_9C, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_E5, 0x_A9, 0x_B2, 0x_9C,
	];

	helper(S, BASE, 337_914);
}
// endregion
// region: s_has_9_127_492_in_base_5_and_insignificant_bytes
#[test]
fn s_has_9_127_492_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_1A, 0x_B1, 0x_D4, 0x_1A, 0x_8F, 0x_B1, 0x_1A, 0x_1A, 0x_B1, 0x_2E, 0x_70, 0x_B1, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_D4, 0x_2E, 0x_B1, 0x_1A,
	];

	helper(S, BASE, 9_127_492);
}
// endregion
// region: s_has_14_194_032_in_base_5_and_insignificant_bytes
#[test]
fn s_has_14_194_032_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_56, 0x_8D, 0x_56, 0x_56, 0x_71, 0x_8D, 0x_F0, 0x_8D, 0x_56, 0x_56, 0x_8D, 0x_A5, 0x_F0, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_F0, 0x_56, 0x_8D, 0x_71, 0x_EE,
	];

	helper(S, BASE, 14_194_032);
}
// endregion
// region: s_has_404_187_921_in_base_5_and_insignificant_bytes
#[test]
fn s_has_404_187_921_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_F7, 0x_50, 0x_F7, 0x_F7, 0x_E7, 0x_50, 0x_50, 0x_C8, 0x_C8, 0x_50, 0x_F7, 0x_E7, 0x_F7, 0x_79, 0x_E7,
		0x_E7, 0x_F7, 0x_50, 0x_50, 0x_50, 0x_C8, 0x_C8, 0x_C8, 0x_50, 0x_E7, 0x_F7, 0x_65, 0x_50, 0x_65, 0x_E7,
		0x_F7, 0x_F7, 0x_C8, 0x_E7, 0x_C8, 0x_65, 0x_E7, 0x_C8, 0x_F7, 0x_F7, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_F7, 0x_65, 0x_50, 0x_E7,
	];

	helper(S, BASE, 404_187_921);
}
// endregion
// region: s_has_1_in_base_7_and_insignificant_bytes
#[test]
fn s_has_1_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_11, 0x_F3, 0x_B1, 0x_11, 0x_D4, 0x_C0, 0x_C5, 0x_2E, 0x_C0, 0x_D4, 0x_B1, 0x_C5, 0x_C0, 0x_11, 0x_2E,
		0x_D4, 0x_2E, 0x_11, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_11, 0x_D4, 0x_C0, 0x_9E, 0x_B1, 0x_2E,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_96_in_base_7_and_insignificant_bytes
#[test]
fn s_has_96_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_D3, 0x_66, 0x_57, 0x_FB, 0x_57, 0x_95, 0x_29, 0x_57, 0x_66, 0x_D3, 0x_EC, 0x_95, 0x_57, 0x_D3, 0x_D3,
		0x_EC, 0x_66, 0x_57, 0x_57, 0x_57, 0x_57, 0x_29, 0x_EC, 0x_EC, 0x_95, 0x_95, 0x_95, 0x_95, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_D3, 0x_95, 0x_29, 0x_EC, 0x_57, 0x_66,
	];

	helper(S, BASE, 96);
}
// endregion
// region: s_has_980_in_base_7_and_insignificant_bytes
#[test]
fn s_has_980_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_D7, 0x_19, 0x_E1, 0x_E1, 0x_C7, 0x_D7, 0x_19, 0x_BB, 0x_D7, 0x_40, 0x_19, 0x_D7, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_BB, 0x_D7, 0x_51, 0x_D6, 0x_40, 0x_19,
	];

	helper(S, BASE, 980);
}
// endregion
// region: s_has_1_815_in_base_7_and_insignificant_bytes
#[test]
fn s_has_1_815_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_43, 0x_4A, 0x_D8, 0x_4A, 0x_70, 0x_D0, 0x_D8, 0x_88, 0x_4A, 0x_43, 0x_D8, 0x_6F, 0x_DB, 0x_D8, 0x_4A,
		0x_4A, 0x_DB, 0x_88, 0x_6F, 0x_D0, 0x_D8, 0x_D0, 0x_88, 0x_6F, 0x_88, 0x_88, 0x_D0, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_88, 0x_4A, 0x_6F, 0x_D0, 0x_43, 0x_DB,
	];

	helper(S, BASE, 1_815);
}
// endregion
// region: s_has_80_907_in_base_7_and_insignificant_bytes
#[test]
fn s_has_80_907_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_84, 0x_1B, 0x_84, 0x_89, 0x_53, 0x_53, 0x_E8, 0x_53, 0x_1B, 0x_1B, 0x_89, 0x_89, 0x_1B, 0x_BC, 0x_84,
		0x_1B, 0x_84, 0x_BC, 0x_84, 0x_BC, 0x_1B, 0x_BC, 0x_BC, 0x_BF, 0x_BF, 0x_84, 0x_89, 0x_84, 0x_84, 0x_BC,
		0x_BF, 0x_BF, 0x_BF, 0x_BC, 0x_89, 0x_67, 0x_67, 0x_BF, 0x_BC, 0x_89, 0x_89,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_53, 0x_67, 0x_BF, 0x_84, 0x_1B, 0x_89,
	];

	helper(S, BASE, 80_907);
}
// endregion
// region: s_has_445_750_in_base_7_and_insignificant_bytes
#[test]
fn s_has_445_750_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_AE, 0x_D6, 0x_AE, 0x_7B, 0x_AE, 0x_CE, 0x_7B, 0x_5C, 0x_AD, 0x_AE, 0x_AD, 0x_FA, 0x_FA, 0x_AD, 0x_CE,
		0x_D6, 0x_CE, 0x_7B, 0x_7B, 0x_AE, 0x_7B, 0x_AD, 0x_CE, 0x_FA, 0x_FA,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_FA, 0x_AD, 0x_AE, 0x_7B, 0x_D6, 0x_CE,
	];

	helper(S, BASE, 445_750);
}
// endregion
// region: s_has_4_704_960_in_base_7_and_insignificant_bytes
#[test]
fn s_has_4_704_960_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_F5, 0x_5D, 0x_B2, 0x_B2, 0x_5D, 0x_B0, 0x_5D, 0x_D0, 0x_6B, 0x_B2, 0x_5D, 0x_F5, 0x_6F, 0x_ED, 0x_F5,
		0x_6F, 0x_B2, 0x_B0, 0x_6F, 0x_D0, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_D0, 0x_6F, 0x_ED, 0x_5D, 0x_F5, 0x_B2,
	];

	helper(S, BASE, 4_704_960);
}
// endregion
// region: s_has_66_813_656_in_base_7_and_insignificant_bytes
#[test]
fn s_has_66_813_656_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_78, 0x_BC, 0x_BC, 0x_77, 0x_05, 0x_52, 0x_DB, 0x_77, 0x_77, 0x_77, 0x_6B, 0x_DB, 0x_77, 0x_DB, 0x_55,
		0x_DB, 0x_DB, 0x_BC, 0x_77, 0x_05, 0x_77, 0x_52, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_78, 0x_52, 0x_DB, 0x_BC, 0x_55, 0x_05,
	];

	helper(S, BASE, 66_813_656);
}
// endregion
// region: s_has_353_465_520_in_base_7_and_insignificant_bytes
#[test]
fn s_has_353_465_520_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_E6, 0x_E6, 0x_76, 0x_EB, 0x_E6, 0x_EB, 0x_76, 0x_85, 0x_76, 0x_B5, 0x_EB, 0x_95, 0x_C6, 0x_EB, 0x_6C,
		0x_6C, 0x_EB, 0x_E6, 0x_C6, 0x_85,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_E6, 0x_EB, 0x_C6, 0x_6C, 0x_76, 0x_85,
	];

	helper(S, BASE, 353_465_520);
}
// endregion
// region: s_has_2_in_base_11_and_insignificant_bytes
#[test]
fn s_has_2_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_39, 0x_54, 0x_49, 0x_17, 0x_96, 0x_1C, 0x_25, 0x_49, 0x_49, 0x_86, 0x_86, 0x_17, 0x_A2, 0x_AD, 0x_25,
		0x_25, 0x_86, 0x_8B, 0x_96, 0x_A2, 0x_8B, 0x_17, 0x_8B, 0x_1C, 0x_7F, 0x_17, 0x_7F, 0x_96, 0x_1C, 0x_96,
		0x_39, 0x_7F, 0x_17, 0x_96, 0x_86, 0x_8B, 0x_86, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_1C, 0x_39, 0x_A2, 0x_96, 0x_7F, 0x_8B, 0x_AD, 0x_86, 0x_17, 0x_25,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_47_in_base_11_and_insignificant_bytes
#[test]
fn s_has_47_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_EB, 0x_9F, 0x_AF, 0x_5C, 0x_75, 0x_17, 0x_EB, 0x_75, 0x_75, 0x_F5, 0x_17, 0x_78, 0x_FB, 0x_5C, 0x_B9,
		0x_17, 0x_F5, 0x_F5, 0x_9F, 0x_B9, 0x_8E, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_F5, 0x_4D, 0x_9F, 0x_EB, 0x_17, 0x_FB, 0x_8E, 0x_B9, 0x_75, 0x_5C,
	];

	helper(S, BASE, 47);
}
// endregion
// region: s_has_547_in_base_11_and_insignificant_bytes
#[test]
fn s_has_547_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_E8, 0x_91, 0x_1A, 0x_74, 0x_66, 0x_91, 0x_24, 0x_91, 0x_89, 0x_24, 0x_66, 0x_E8, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_89, 0x_66, 0x_D9, 0x_E8, 0x_91, 0x_24, 0x_58, 0x_1A, 0x_98, 0x_AC,
	];

	helper(S, BASE, 547);
}
// endregion
// region: s_has_7_231_in_base_11_and_insignificant_bytes
#[test]
fn s_has_7_231_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_C8, 0x_6F, 0x_B5, 0x_6F, 0x_27, 0x_CF, 0x_8C, 0x_FE, 0x_B7, 0x_C8, 0x_B7, 0x_B7, 0x_C8, 0x_FE, 0x_63,
		0x_8C, 0x_63, 0x_CF, 0x_C8, 0x_63, 0x_85, 0x_51, 0x_63, 0x_C8, 0x_8C, 0x_BE, 0x_FE, 0x_BE, 0x_6F, 0x_CF,
		0x_C8, 0x_6F, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_85, 0x_B7, 0x_FE, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_8C, 0x_51, 0x_BE, 0x_6F, 0x_C8, 0x_CF, 0x_B7, 0x_B5, 0x_FE, 0x_63,
	];

	helper(S, BASE, 7_231);
}
// endregion
// region: s_has_65_217_in_base_11_and_insignificant_bytes
#[test]
fn s_has_65_217_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_50, 0x_50, 0x_34, 0x_34, 0x_6A, 0x_94, 0x_4A, 0x_70, 0x_50, 0x_AB, 0x_B7, 0x_B7, 0x_50, 0x_AB, 0x_DD,
		0x_DD, 0x_AB, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_B7, 0x_F2, 0x_61, 0x_50, 0x_AB, 0x_4A, 0x_28, 0x_70, 0x_6A, 0x_34,
	];

	helper(S, BASE, 65_217);
}
// endregion
// region: s_has_420_513_in_base_11_and_insignificant_bytes
#[test]
fn s_has_420_513_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_25, 0x_C4, 0x_A4, 0x_CE, 0x_5E, 0x_9E, 0x_49, 0x_1C, 0x_5E, 0x_CE, 0x_4A, 0x_99, 0x_4A, 0x_AD, 0x_4A,
		0x_AD, 0x_9E, 0x_CE, 0x_1C, 0x_99, 0x_CE, 0x_9E, 0x_CE, 0x_4A, 0x_C4, 0x_C4, 0x_9E, 0x_1C, 0x_CE, 0x_99,
		0x_9E, 0x_5E, 0x_A4, 0x_25, 0x_1C, 0x_4A, 0x_9E, 0x_66, 0x_C4, 0x_A4, 0x_99, 0x_CE,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_1C, 0x_25, 0x_5E, 0x_AD, 0x_9E, 0x_C4, 0x_A4, 0x_66, 0x_99, 0x_CE,
	];

	helper(S, BASE, 420_513);
}
// endregion
// region: s_has_8_922_049_in_base_11_and_insignificant_bytes
#[test]
fn s_has_8_922_049_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_E4, 0x_BF, 0x_BA, 0x_BA, 0x_22, 0x_66, 0x_BA, 0x_E9, 0x_D2, 0x_C0, 0x_23, 0x_53, 0x_66, 0x_BF, 0x_22,
		0x_55, 0x_66, 0x_C0, 0x_53, 0x_E4, 0x_CE, 0x_53, 0x_CE, 0x_23, 0x_66, 0x_C0, 0x_C0, 0x_53, 0x_22, 0x_66,
		0x_53, 0x_BA, 0x_66, 0x_23, 0x_BA, 0x_CE, 0x_CE, 0x_CE, 0x_22, 0x_BA, 0x_CE, 0x_53, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_53, 0x_22, 0x_23, 0x_BA, 0x_E4, 0x_55, 0x_C0, 0x_D2, 0x_CE, 0x_66,
	];

	helper(S, BASE, 8_922_049);
}
// endregion
// region: s_has_73_478_798_in_base_11_and_insignificant_bytes
#[test]
fn s_has_73_478_798_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_98, 0x_43, 0x_8B, 0x_77, 0x_A1, 0x_A1, 0x_43, 0x_43, 0x_CB, 0x_77, 0x_CD, 0x_A3, 0x_A1, 0x_94, 0x_77,
		0x_A3, 0x_E6, 0x_77, 0x_43, 0x_CD, 0x_8B, 0x_A8, 0x_98, 0x_A3, 0x_77, 0x_43, 0x_A1, 0x_A8, 0x_94, 0x_E6,
		0x_77, 0x_98, 0x_A3, 0x_77, 0x_94, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_94, 0x_77, 0x_98, 0x_CD, 0x_8B, 0x_A3, 0x_A1, 0x_43, 0x_A8, 0x_E6,
	];

	helper(S, BASE, 73_478_798);
}
// endregion
// region: s_has_169_295_969_in_base_11_and_insignificant_bytes
#[test]
fn s_has_169_295_969_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_54, 0x_AC, 0x_2A, 0x_36, 0x_80, 0x_2A, 0x_36, 0x_AC, 0x_6F, 0x_3C, 0x_12, 0x_AC, 0x_54, 0x_7A, 0x_AC,
		0x_54, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_80, 0x_36, 0x_48, 0x_3C, 0x_91, 0x_2A, 0x_AC, 0x_54, 0x_12, 0x_92,
	];

	helper(S, BASE, 169_295_969);
}
// endregion
// region: s_has_3_in_base_13_and_insignificant_bytes
#[test]
fn s_has_3_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_59, 0x_2E, 0x_9C, 0x_59, 0x_EE, 0x_73, 0x_62, 0x_E7, 0x_4C, 0x_5A, 0x_40, 0x_76, 0x_75, 0x_5A, 0x_75,
		0x_9C, 0x_4C, 0x_62, 0x_9C, 0x_EE, 0x_EE, 0x_4C, 0x_73, 0x_17, 0x_EE, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_9C, 0x_4C, 0x_59, 0x_73, 0x_86, 0x_E7, 0x_76, 0x_5A, 0x_75, 0x_EE, 0x_17, 0x_40,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_61_in_base_13_and_insignificant_bytes
#[test]
fn s_has_61_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_91, 0x_CB, 0x_20, 0x_25, 0x_1D, 0x_84, 0x_BD, 0x_B1, 0x_01, 0x_F9, 0x_23, 0x_91, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_25, 0x_B1, 0x_BD, 0x_91, 0x_84, 0x_23, 0x_F9, 0x_1D, 0x_CB, 0x_CA, 0x_01, 0x_F8,
	];

	helper(S, BASE, 61);
}
// endregion
// region: s_has_456_in_base_13_and_insignificant_bytes
#[test]
fn s_has_456_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_A7, 0x_7B, 0x_A8, 0x_7C, 0x_A7, 0x_27, 0x_9D, 0x_85, 0x_35, 0x_35, 0x_85, 0x_27, 0x_A8, 0x_9D, 0x_12,
		0x_7B, 0x_D0, 0x_D2, 0x_D2, 0x_F8, 0x_A7, 0x_85, 0x_F8, 0x_78, 0x_A7, 0x_27, 0x_A8, 0x_D0, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_A8, 0x_A7, 0x_85, 0x_35, 0x_9D, 0x_D0, 0x_27, 0x_D2, 0x_7B, 0x_12, 0x_F8, 0x_78,
	];

	helper(S, BASE, 456);
}
// endregion
// region: s_has_8_953_in_base_13_and_insignificant_bytes
#[test]
fn s_has_8_953_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_D6, 0x_5B, 0x_83, 0x_CA, 0x_D2, 0x_42, 0x_3E, 0x_3E, 0x_42, 0x_83, 0x_42, 0x_5B, 0x_C5, 0x_D6, 0x_D6,
		0x_6D, 0x_D6, 0x_C5, 0x_83, 0x_3E, 0x_D6, 0x_3E, 0x_83, 0x_C5, 0x_5B, 0x_D6, 0x_AC, 0x_83, 0x_6D, 0x_3E,
		0x_56, 0x_95, 0x_1B, 0x_AC, 0x_42, 0x_CA, 0x_75, 0x_1B, 0x_1B, 0x_56, 0x_83, 0x_83, 0x_5B, 0x_56, 0x_95,
		0x_5B, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_1B, 0x_AC, 0x_6D, 0x_D6, 0x_C5, 0x_42, 0x_75, 0x_95, 0x_CA, 0x_56, 0x_3E, 0x_83,
	];

	helper(S, BASE, 8_953);
}
// endregion
// region: s_has_91_046_in_base_13_and_insignificant_bytes
#[test]
fn s_has_91_046_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_43, 0x_DB, 0x_D4, 0x_E7, 0x_44, 0x_07, 0x_A1, 0x_D4, 0x_44, 0x_A1, 0x_54, 0x_93, 0x_43, 0x_DB, 0x_44,
		0x_0E, 0x_95, 0x_37, 0x_54, 0x_E7, 0x_DB, 0x_44, 0x_E7, 0x_0E, 0x_37, 0x_0E, 0x_44, 0x_DB, 0x_93, 0x_E7,
		0x_43, 0x_54, 0x_44, 0x_0E,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_1F, 0x_DB, 0x_43, 0x_9B, 0x_D4, 0x_A1, 0x_44, 0x_95, 0x_E7, 0x_54, 0x_93, 0x_0E,
	];

	helper(S, BASE, 91_046);
}
// endregion
// region: s_has_899_735_in_base_13_and_insignificant_bytes
#[test]
fn s_has_899_735_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_24, 0x_AE, 0x_41, 0x_41, 0x_8E, 0x_AE, 0x_AF, 0x_41, 0x_41, 0x_1F, 0x_4A, 0x_D9, 0x_24, 0x_41, 0x_D9,
		0x_24, 0x_4A, 0x_8E, 0x_7E, 0x_4A, 0x_BA, 0x_BA, 0x_D9, 0x_F1, 0x_8E, 0x_4A, 0x_4A, 0x_A6, 0x_1F, 0x_A6,
		0x_D9, 0x_AE, 0x_7E, 0x_8E, 0x_A6, 0x_D9, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_95, 0x_24, 0x_1F, 0x_F1, 0x_AE, 0x_41, 0x_7E, 0x_A6, 0x_D9, 0x_BA, 0x_8E, 0x_5F,
	];

	helper(S, BASE, 899_735);
}
// endregion
// region: s_has_7_368_290_in_base_13_and_insignificant_bytes
#[test]
fn s_has_7_368_290_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_81, 0x_39, 0x_E7, 0x_EF, 0x_E7, 0x_1B, 0x_BD, 0x_9F, 0x_AE, 0x_D2, 0x_CB, 0x_BD, 0x_B4, 0x_AE, 0x_1B,
		0x_81, 0x_EF, 0x_BD, 0x_1C, 0x_1C, 0x_3B, 0x_E7, 0x_D2, 0x_63, 0x_EF, 0x_D2, 0x_1C, 0x_3B, 0x_EF, 0x_81,
		0x_EF, 0x_3B, 0x_AE, 0x_81, 0x_1C, 0x_3B, 0x_1C, 0x_EF, 0x_81, 0x_81, 0x_AE, 0x_EF, 0x_BD, 0x_EF, 0x_B4,
		0x_81, 0x_39, 0x_CB, 0x_81, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_81, 0x_3B, 0x_D2, 0x_1B, 0x_AE, 0x_39, 0x_BD, 0x_CB, 0x_1C, 0x_E7, 0x_63, 0x_EF,
	];

	helper(S, BASE, 7_368_290);
}
// endregion
// region: s_has_80_217_732_in_base_13_and_insignificant_bytes
#[test]
fn s_has_80_217_732_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_C3, 0x_8B, 0x_47, 0x_3F, 0x_47, 0x_96, 0x_C3, 0x_6A, 0x_10, 0x_07, 0x_D7, 0x_D3, 0x_D7, 0x_D3, 0x_D3,
		0x_3F,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_C3, 0x_07, 0x_8B, 0x_D7, 0x_96, 0x_67, 0x_D3, 0x_47, 0x_FC, 0x_6A, 0x_EC, 0x_8A,
	];

	helper(S, BASE, 80_217_732);
}
// endregion
// region: s_has_146_142_164_in_base_13_and_insignificant_bytes
#[test]
fn s_has_146_142_164_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_F3, 0x_81, 0x_E6, 0x_26, 0x_3A, 0x_3C, 0x_EA, 0x_3C, 0x_12, 0x_81, 0x_3A, 0x_26, 0x_AB, 0x_D5, 0x_81,
		0x_DB, 0x_F3, 0x_AB, 0x_ED, 0x_3C, 0x_EA, 0x_3C, 0x_DB, 0x_06, 0x_ED, 0x_81, 0x_AB, 0x_D5, 0x_06, 0x_06,
		0x_D5, 0x_26, 0x_D5, 0x_AB, 0x_06, 0x_EA, 0x_26, 0x_3C, 0x_F3, 0x_E6, 0x_EA, 0x_4A, 0x_4A, 0x_D5, 0x_D5,
		0x_F3, 0x_81, 0x_D5, 0x_06, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_ED, 0x_F3, 0x_E6, 0x_81, 0x_06, 0x_EA, 0x_26, 0x_4A, 0x_DB, 0x_3A, 0x_D5, 0x_3C,
	];

	helper(S, BASE, 146_142_164);
}
// endregion
// region: s_has_6_in_base_19_and_insignificant_bytes
#[test]
fn s_has_6_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0F, 0x_8E, 0x_3F, 0x_EE, 0x_BF, 0x_3D, 0x_9F, 0x_0F, 0x_48, 0x_B6, 0x_94, 0x_9F, 0x_0F, 0x_94, 0x_94,
		0x_C5, 0x_EA, 0x_0F, 0x_94, 0x_EA, 0x_58, 0x_9F, 0x_58, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_BF, 0x_C5, 0x_84, 0x_58, 0x_6E, 0x_0F, 0x_B6, 0x_D9, 0x_73, 0x_67, 0x_EE, 0x_9F, 0x_A4, 0x_E0,
		0x_EA, 0x_3D, 0x_94, 0x_3F,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_26_in_base_19_and_insignificant_bytes
#[test]
fn s_has_26_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_A9, 0x_B9, 0x_71, 0x_83, 0x_2C, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_A9, 0x_F0, 0x_83, 0x_27, 0x_BE, 0x_EF, 0x_B9, 0x_96, 0x_9C, 0x_D3, 0x_B0, 0x_2C, 0x_05, 0x_52,
		0x_F3, 0x_E0, 0x_CB, 0x_EA,
	];

	helper(S, BASE, 26);
}
// endregion
// region: s_has_533_in_base_19_and_insignificant_bytes
#[test]
fn s_has_533_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_22, 0x_CC, 0x_22, 0x_1F, 0x_A9, 0x_4B, 0x_6E, 0x_8B, 0x_34, 0x_8B, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_8B, 0x_22, 0x_A5, 0x_7B, 0x_72, 0x_A9, 0x_97, 0x_4B, 0x_5B, 0x_CC, 0x_32, 0x_6E, 0x_34, 0x_AE, 0x_F1,
		0x_D1, 0x_84, 0x_B4, 0x_AC,
	];

	helper(S, BASE, 533);
}
// endregion
// region: s_has_5_717_in_base_19_and_insignificant_bytes
#[test]
fn s_has_5_717_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_7C, 0x_7C, 0x_9A, 0x_D9, 0x_4A, 0x_36, 0x_AF, 0x_89, 0x_D0, 0x_51, 0x_76, 0x_AF, 0x_5B, 0x_3E, 0x_EC,
		0x_F2, 0x_47, 0x_76, 0x_D0, 0x_76, 0x_3E, 0x_39, 0x_AF, 0x_36, 0x_1D, 0x_AF, 0x_9A, 0x_89, 0x_36, 0x_C5,
		0x_36, 0x_76, 0x_39, 0x_5B, 0x_4A, 0x_4A, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_36, 0x_F2, 0x_76, 0x_AF, 0x_51, 0x_4A, 0x_39, 0x_89, 0x_EC, 0x_1D, 0x_47, 0x_06, 0x_D0, 0x_5B, 0x_3E,
		0x_7C, 0x_C5, 0x_9A, 0x_EE,
	];

	helper(S, BASE, 5_717);
}
// endregion
// region: s_has_76_206_in_base_19_and_insignificant_bytes
#[test]
fn s_has_76_206_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_40, 0x_9B, 0x_AD, 0x_06, 0x_31, 0x_4E, 0x_1B, 0x_1A, 0x_17, 0x_AD, 0x_1B, 0x_17, 0x_DC, 0x_1B, 0x_1B,
		0x_DC, 0x_9B, 0x_C0, 0x_12, 0x_DE, 0x_17, 0x_DC, 0x_AD, 0x_DE, 0x_C7, 0x_5D, 0x_12, 0x_DE, 0x_1B, 0x_DC,
		0x_06, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_AD, 0x_9B, 0x_1B, 0x_1A, 0x_38, 0x_DE, 0x_02, 0x_12, 0x_36, 0x_30, 0x_40, 0x_C7, 0x_FC, 0x_5D,
		0x_C0, 0x_06, 0x_DC, 0x_4E,
	];

	helper(S, BASE, 76_206);
}
// endregion
// region: s_has_170_701_in_base_19_and_insignificant_bytes
#[test]
fn s_has_170_701_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_38, 0x_D1, 0x_AA, 0x_AA, 0x_D1, 0x_6F, 0x_E3, 0x_28, 0x_AA, 0x_AA, 0x_E3, 0x_C7, 0x_9F, 0x_AA, 0x_EC,
		0x_38, 0x_E3, 0x_FC, 0x_B9, 0x_CF, 0x_B9, 0x_9F, 0x_6A, 0x_2E, 0x_C7, 0x_AA, 0x_6A, 0x_E3, 0x_9F, 0x_38,
		0x_FC, 0x_60, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_38, 0x_EC, 0x_E3, 0x_60, 0x_D1, 0x_2E, 0x_16, 0x_6A, 0x_C7, 0x_28, 0x_4A, 0x_9F, 0x_FC, 0x_7A,
		0x_CF, 0x_AA, 0x_B9, 0x_E0,
	];

	helper(S, BASE, 170_701);
}
// endregion
// region: s_has_8_844_657_in_base_19_and_insignificant_bytes
#[test]
fn s_has_8_844_657_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_95, 0x_6D, 0x_E2, 0x_28, 0x_FB, 0x_B7, 0x_04, 0x_28, 0x_E8, 0x_B7, 0x_90, 0x_34, 0x_6D, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_3C, 0x_A1, 0x_95, 0x_18, 0x_B7, 0x_36, 0x_90, 0x_FB, 0x_28, 0x_6D, 0x_C2, 0x_8B, 0x_C7, 0x_E8,
		0x_F7, 0x_E2, 0x_44, 0x_34,
	];

	helper(S, BASE, 8_844_657);
}
// endregion
// region: s_has_98_405_117_in_base_19_and_insignificant_bytes
#[test]
fn s_has_98_405_117_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_DD, 0x_F6, 0x_C1, 0x_F6, 0x_C5, 0x_A1, 0x_8F, 0x_FC, 0x_B1, 0x_F6, 0x_AF, 0x_C1, 0x_B1, 0x_77, 0x_75,
		0x_B1, 0x_B1, 0x_2C, 0x_78, 0x_C1, 0x_C5, 0x_3D, 0x_2C, 0x_F6, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_F6, 0x_DD, 0x_C0, 0x_2C, 0x_FA, 0x_A1, 0x_75, 0x_B1, 0x_6F, 0x_3D, 0x_74, 0x_26, 0x_8F, 0x_C1,
		0x_77, 0x_C5, 0x_78, 0x_FE,
	];

	helper(S, BASE, 98_405_117);
}
// endregion
// region: s_has_943_143_647_in_base_19_and_insignificant_bytes
#[test]
fn s_has_943_143_647_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_22, 0x_22, 0x_82, 0x_97, 0x_22, 0x_50, 0x_FA, 0x_05, 0x_AC, 0x_EA, 0x_3B, 0x_C9, 0x_4F, 0x_4F, 0x_EA,
		0x_FA, 0x_C0, 0x_C7, 0x_FA, 0x_C0, 0x_E5, 0x_C0, 0x_82, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_22, 0x_E5, 0x_6E, 0x_C7, 0x_FA, 0x_05, 0x_4F, 0x_C0, 0x_EF, 0x_50, 0x_55, 0x_3B, 0x_EA, 0x_BE,
		0x_C9, 0x_6F, 0x_97, 0x_80,
	];

	helper(S, BASE, 943_143_647);
}
// endregion
// region: s_has_2_in_base_42_and_insignificant_bytes
#[test]
fn s_has_2_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_99, 0x_F5, 0x_70, 0x_FC, 0x_58, 0x_8D, 0x_8B, 0x_08, 0x_41, 0x_7C, 0x_CF, 0x_D1, 0x_33, 0x_60, 0x_CF,
		0x_8F, 0x_53, 0x_8F, 0x_59, 0x_70, 0x_FC, 0x_39, 0x_02,
	];
	const BASE: &[u8] = &[
		0x_43, 0x_8F, 0x_99, 0x_54, 0x_33, 0x_02, 0x_59, 0x_FC, 0x_8B, 0x_C5, 0x_E2, 0x_D1, 0x_41, 0x_62, 0x_65,
		0x_7C, 0x_79, 0x_05, 0x_08, 0x_E0, 0x_C2, 0x_CF, 0x_31, 0x_8D, 0x_4C, 0x_7D, 0x_39, 0x_B2, 0x_FF, 0x_FD,
		0x_25, 0x_58, 0x_53, 0x_70, 0x_9D, 0x_F4, 0x_BC, 0x_60, 0x_A0, 0x_16, 0x_91, 0x_6B,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_68_in_base_42_and_insignificant_bytes
#[test]
fn s_has_68_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_25, 0x_D3, 0x_26, 0x_5B, 0x_38, 0x_BF, 0x_8B, 0x_CE, 0x_D3, 0x_51, 0x_9A, 0x_5F, 0x_B9, 0x_8F, 0x_7E,
		0x_CC, 0x_0E, 0x_CE, 0x_BD, 0x_BF, 0x_AD, 0x_EF, 0x_25, 0x_4D, 0x_35, 0x_5F, 0x_36, 0x_B9, 0x_5B, 0x_F3,
		0x_35, 0x_D1, 0x_CC, 0x_21, 0x_B6, 0x_3D, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_25, 0x_65, 0x_E3, 0x_B8, 0x_B6, 0x_CC, 0x_AC, 0x_38, 0x_DD, 0x_5B, 0x_6E, 0x_9A, 0x_EA, 0x_7E,
		0x_2A, 0x_8B, 0x_36, 0x_5F, 0x_35, 0x_4D, 0x_51, 0x_F5, 0x_3D, 0x_BF, 0x_D1, 0x_D3, 0x_9C, 0x_0E, 0x_EF,
		0x_F3, 0x_18, 0x_CE, 0x_A8, 0x_8F, 0x_DB, 0x_BD, 0x_B9, 0x_AD, 0x_21, 0x_F7, 0x_EE,
	];

	helper(S, BASE, 68);
}
// endregion
// region: s_has_589_in_base_42_and_insignificant_bytes
#[test]
fn s_has_589_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_FC, 0x_1B, 0x_2A, 0x_91, 0x_87, 0x_F2, 0x_97, 0x_F2, 0x_9C, 0x_9D, 0x_AD, 0x_C6, 0x_52, 0x_66, 0x_C4,
		0x_87, 0x_4D, 0x_C5, 0x_C7, 0x_E7, 0x_59, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_A2, 0x_1B, 0x_E5, 0x_F2, 0x_58, 0x_3E, 0x_44, 0x_13, 0x_BD, 0x_C7, 0x_35, 0x_AD, 0x_DE, 0x_4D, 0x_FC,
		0x_C5, 0x_52, 0x_B2, 0x_78, 0x_AA, 0x_E7, 0x_4E, 0x_93, 0x_B1, 0x_C6, 0x_29, 0x_59, 0x_97, 0x_9C, 0x_87,
		0x_66, 0x_10, 0x_91, 0x_C2, 0x_C4, 0x_2F, 0x_5F, 0x_B3, 0x_B0, 0x_D2, 0x_1F, 0x_9D,
	];

	helper(S, BASE, 589);
}
// endregion
// region: s_has_1_326_in_base_42_and_insignificant_bytes
#[test]
fn s_has_1_326_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_3F, 0x_80, 0x_2F, 0x_F2, 0x_CE, 0x_23, 0x_D5, 0x_AA, 0x_62, 0x_73, 0x_AA, 0x_CC, 0x_1B, 0x_03, 0x_3F,
		0x_EE, 0x_F2, 0x_19, 0x_8E, 0x_82, 0x_38, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_D7, 0x_7C, 0x_D5, 0x_03, 0x_CE, 0x_EE, 0x_8F, 0x_8E, 0x_CF, 0x_1E, 0x_73, 0x_24, 0x_45, 0x_AA,
		0x_C6, 0x_19, 0x_1B, 0x_40, 0x_9A, 0x_D6, 0x_BE, 0x_7E, 0x_FD, 0x_80, 0x_23, 0x_7D, 0x_38, 0x_6D, 0x_E1,
		0x_42, 0x_3F, 0x_CC, 0x_17, 0x_7F, 0x_84, 0x_2A, 0x_82, 0x_E4, 0x_62, 0x_5C, 0x_48,
	];

	helper(S, BASE, 1_326);
}
// endregion
// region: s_has_32_200_in_base_42_and_insignificant_bytes
#[test]
fn s_has_32_200_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_44, 0x_AC, 0x_CC, 0x_A6, 0x_03, 0x_AC, 0x_C5, 0x_87, 0x_76, 0x_E9, 0x_76, 0x_03, 0x_3A, 0x_10, 0x_E8,
		0x_D9, 0x_E2, 0x_BF, 0x_5F, 0x_2C, 0x_87, 0x_F5, 0x_48, 0x_D0, 0x_44, 0x_1A, 0x_F5, 0x_D7, 0x_BF, 0x_65,
		0x_AC, 0x_FB, 0x_2C, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_7A, 0x_E9, 0x_F1, 0x_2C, 0x_1A, 0x_A3, 0x_03, 0x_D5, 0x_12, 0x_AC, 0x_5E, 0x_76, 0x_3A, 0x_F5,
		0x_C5, 0x_D9, 0x_48, 0x_44, 0x_E8, 0x_71, 0x_5F, 0x_87, 0x_D7, 0x_BF, 0x_10, 0x_E2, 0x_9F, 0x_CC, 0x_FB,
		0x_5A, 0x_2A, 0x_B3, 0x_B0, 0x_88, 0x_75, 0x_D0, 0x_F2, 0x_65, 0x_D1, 0x_F3, 0x_95,
	];

	helper(S, BASE, 32_200);
}
// endregion
// region: s_has_704_371_in_base_42_and_insignificant_bytes
#[test]
fn s_has_704_371_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_C1, 0x_10, 0x_E0, 0x_BB, 0x_32, 0x_CF, 0x_9C, 0x_CC, 0x_A7, 0x_86, 0x_8D, 0x_92, 0x_61, 0x_10, 0x_AB,
		0x_2A, 0x_BB, 0x_FB, 0x_80, 0x_A3, 0x_7A, 0x_92, 0x_77, 0x_9C, 0x_93, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_2A, 0x_4C, 0x_CC, 0x_80, 0x_44, 0x_36, 0x_49, 0x_B5, 0x_C1, 0x_A7, 0x_7B, 0x_E0, 0x_CF, 0x_7A,
		0x_AB, 0x_A8, 0x_71, 0x_A3, 0x_45, 0x_E3, 0x_10, 0x_2F, 0x_92, 0x_EF, 0x_77, 0x_78, 0x_9C, 0x_41, 0x_9F,
		0x_93, 0x_BB, 0x_86, 0x_8F, 0x_A4, 0x_FB, 0x_4B, 0x_06, 0x_61, 0x_83, 0x_8D, 0x_A9,
	];

	helper(S, BASE, 704_371);
}
// endregion
// region: s_has_8_835_243_in_base_42_and_insignificant_bytes
#[test]
fn s_has_8_835_243_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_5A, 0x_40, 0x_CB, 0x_8A, 0x_BF, 0x_3F, 0x_2F, 0x_A4, 0x_3A, 0x_9D, 0x_1B, 0x_35, 0x_37, 0x_9D, 0x_9D,
		0x_F5, 0x_40, 0x_A4, 0x_2F, 0x_64, 0x_35, 0x_5A, 0x_C8, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_D6, 0x_5A, 0x_39, 0x_A4, 0x_AE, 0x_D2, 0x_F5, 0x_4A, 0x_1B, 0x_CB, 0x_EB, 0x_C7, 0x_AC, 0x_90,
		0x_6F, 0x_DE, 0x_82, 0x_DA, 0x_9D, 0x_EC, 0x_2A, 0x_07, 0x_F6, 0x_64, 0x_37, 0x_8A, 0x_54, 0x_F3, 0x_35,
		0x_2F, 0x_10, 0x_8D, 0x_34, 0x_A5, 0x_40, 0x_6A, 0x_7F, 0x_3A, 0x_BF, 0x_D4, 0x_C8,
	];

	helper(S, BASE, 8_835_243);
}
// endregion
// region: s_has_64_457_006_in_base_42_and_insignificant_bytes
#[test]
fn s_has_64_457_006_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_A0, 0x_B1, 0x_15, 0x_4B, 0x_DD, 0x_B3, 0x_67, 0x_98, 0x_85, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_C9, 0x_CD, 0x_BC, 0x_86, 0x_85, 0x_37, 0x_FC, 0x_C5, 0x_E1, 0x_4B, 0x_6B, 0x_7E, 0x_6F, 0x_99,
		0x_38, 0x_16, 0x_8A, 0x_9A, 0x_98, 0x_A0, 0x_7A, 0x_F1, 0x_68, 0x_D1, 0x_4E, 0x_DD, 0x_EB, 0x_FD, 0x_67,
		0x_B1, 0x_6D, 0x_41, 0x_05, 0x_CE, 0x_8B, 0x_E5, 0x_EF, 0x_1D, 0x_80, 0x_AC, 0x_59,
	];

	helper(S, BASE, 64_457_006);
}
// endregion
// region: s_has_356_478_949_in_base_42_and_insignificant_bytes
#[test]
fn s_has_356_478_949_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_60, 0x_68, 0x_D7, 0x_D7, 0x_DB, 0x_D1, 0x_02, 0x_8E, 0x_D0, 0x_55, 0x_16, 0x_60, 0x_A1, 0x_68, 0x_F8,
		0x_A3, 0x_11, 0x_68, 0x_11, 0x_55, 0x_A1, 0x_0F, 0x_16, 0x_A3, 0x_24, 0x_75, 0x_5D, 0x_3E, 0x_1C, 0x_61,
		0x_F4, 0x_5D, 0x_43, 0x_24, 0x_4D, 0x_73, 0x_22, 0x_11, 0x_DA, 0x_FB, 0x_DA,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_D1, 0x_60, 0x_D6, 0x_16, 0x_24, 0x_D3, 0x_43, 0x_A1, 0x_3E, 0x_73, 0x_0F, 0x_22, 0x_4D, 0x_75,
		0x_99, 0x_55, 0x_67, 0x_FB, 0x_29, 0x_5E, 0x_F4, 0x_11, 0x_D7, 0x_DB, 0x_64, 0x_61, 0x_D0, 0x_E6, 0x_76,
		0x_68, 0x_8E, 0x_BB, 0x_97, 0x_A3, 0x_17, 0x_28, 0x_1C, 0x_DA, 0x_27, 0x_5D, 0x_D2,
	];

	helper(S, BASE, 356_478_949);
}
// endregion
// region: s_has_4_in_base_73_and_insignificant_bytes
#[test]
fn s_has_4_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_A4, 0x_92, 0x_EA, 0x_DF, 0x_CA, 0x_34, 0x_59, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_88, 0x_91, 0x_EF, 0x_A4, 0x_D4, 0x_C1, 0x_C4, 0x_44, 0x_C5, 0x_A9, 0x_5A, 0x_42, 0x_58, 0x_FC,
		0x_53, 0x_34, 0x_C7, 0x_B0, 0x_DE, 0x_5F, 0x_93, 0x_23, 0x_FD, 0x_A7, 0x_0E, 0x_E9, 0x_EC, 0x_52, 0x_D2,
		0x_2E, 0x_36, 0x_AF, 0x_40, 0x_1B, 0x_EA, 0x_9C, 0x_C8, 0x_86, 0x_18, 0x_D7, 0x_0F, 0x_84, 0x_CA, 0x_46,
		0x_DF, 0x_3B, 0x_98, 0x_85, 0x_D1, 0x_BC, 0x_74, 0x_B8, 0x_3D, 0x_99, 0x_E0, 0x_14, 0x_59, 0x_7C, 0x_BF,
		0x_95, 0x_AC, 0x_06, 0x_28, 0x_47, 0x_82, 0x_54, 0x_6F, 0x_7D, 0x_15, 0x_76, 0x_6B, 0x_E3,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_10_in_base_73_and_insignificant_bytes
#[test]
fn s_has_10_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_46, 0x_82, 0x_F0, 0x_78, 0x_A2, 0x_B5, 0x_6A,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_CA, 0x_24, 0x_AD, 0x_7A, 0x_ED, 0x_40, 0x_C0, 0x_65, 0x_96, 0x_46, 0x_F0, 0x_3E, 0x_62, 0x_E7,
		0x_A3, 0x_6A, 0x_AC, 0x_78, 0x_2C, 0x_54, 0x_11, 0x_08, 0x_5E, 0x_13, 0x_FF, 0x_B8, 0x_56, 0x_A2, 0x_76,
		0x_66, 0x_55, 0x_C3, 0x_86, 0x_61, 0x_22, 0x_CB, 0x_02, 0x_CF, 0x_77, 0x_59, 0x_E1, 0x_57, 0x_1D, 0x_68,
		0x_D8, 0x_7B, 0x_8D, 0x_6D, 0x_26, 0x_D3, 0x_0F, 0x_92, 0x_03, 0x_B5, 0x_2A, 0x_C4, 0x_BC, 0x_9B, 0x_D7,
		0x_B2, 0x_87, 0x_63, 0x_27, 0x_9C, 0x_06, 0x_CD, 0x_DD, 0x_17, 0x_14, 0x_4B, 0x_1E, 0x_29,
	];

	helper(S, BASE, 10);
}
// endregion
// region: s_has_599_in_base_73_and_insignificant_bytes
#[test]
fn s_has_599_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_F5, 0x_36, 0x_CC, 0x_4D, 0x_54, 0x_A1, 0x_4D, 0x_FD, 0x_16, 0x_75, 0x_52, 0x_EC, 0x_0E, 0x_EB, 0x_0F,
		0x_BF, 0x_0E, 0x_B8, 0x_EC, 0x_ED, 0x_3A, 0x_D6, 0x_AA, 0x_C0, 0x_01, 0x_44, 0x_E3, 0x_A0, 0x_2A, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_E3, 0x_ED, 0x_C0, 0x_6C, 0x_D4, 0x_0E, 0x_7A, 0x_F5, 0x_AC, 0x_2A, 0x_29, 0x_DB, 0x_59, 0x_4B,
		0x_36, 0x_77, 0x_C6, 0x_8D, 0x_EC, 0x_EB, 0x_02, 0x_BF, 0x_A0, 0x_40, 0x_01, 0x_3D, 0x_B3, 0x_1F, 0x_D8,
		0x_52, 0x_F0, 0x_D2, 0x_4A, 0x_8B, 0x_34, 0x_8F, 0x_64, 0x_75, 0x_C4, 0x_E6, 0x_A1, 0x_65, 0x_BE, 0x_E2,
		0x_B2, 0x_54, 0x_66, 0x_4E, 0x_6F, 0x_B8, 0x_AD, 0x_FD, 0x_04, 0x_83, 0x_8A, 0x_D6, 0x_9A, 0x_1C, 0x_E7,
		0x_26, 0x_16, 0x_4D, 0x_0F, 0x_9E, 0x_37, 0x_E4, 0x_74, 0x_44, 0x_CB, 0x_3A, 0x_22, 0x_AA,
	];

	helper(S, BASE, 599);
}
// endregion
// region: s_has_2_947_in_base_73_and_insignificant_bytes
#[test]
fn s_has_2_947_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_EB, 0x_69, 0x_D9, 0x_9C, 0x_4E, 0x_86, 0x_23, 0x_AF, 0x_70, 0x_B4, 0x_45, 0x_F7, 0x_CE, 0x_67, 0x_81,
		0x_02, 0x_FA, 0x_81, 0x_07, 0x_6E, 0x_F4, 0x_9D, 0x_8A, 0x_7C, 0x_15, 0x_C9, 0x_FA, 0x_4C, 0x_45, 0x_6A,
		0x_FB,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_CA, 0x_FB, 0x_53, 0x_46, 0x_BD, 0x_AF, 0x_04, 0x_28, 0x_B0, 0x_CE, 0x_55, 0x_36, 0x_07, 0x_8C,
		0x_A2, 0x_9D, 0x_1C, 0x_B6, 0x_DC, 0x_81, 0x_2F, 0x_7C, 0x_6A, 0x_E4, 0x_DD, 0x_95, 0x_69, 0x_1F, 0x_15,
		0x_F4, 0x_3C, 0x_11, 0x_DB, 0x_8A, 0x_02, 0x_63, 0x_6E, 0x_30, 0x_68, 0x_EB, 0x_EC, 0x_67, 0x_76, 0x_42,
		0x_86, 0x_73, 0x_BB, 0x_12, 0x_26, 0x_5B, 0x_CF, 0x_B1, 0x_F2, 0x_61, 0x_78, 0x_B4, 0x_08, 0x_BC, 0x_7B,
		0x_83, 0x_FA, 0x_C9, 0x_F7, 0x_45, 0x_3A, 0x_62, 0x_24, 0x_4E, 0x_70, 0x_4C, 0x_23, 0x_71,
	];

	helper(S, BASE, 2_947);
}
// endregion
// region: s_has_10_074_in_base_73_and_insignificant_bytes
#[test]
fn s_has_10_074_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_83, 0x_9B, 0x_64, 0x_6A, 0x_04, 0x_85, 0x_8F, 0x_23, 0x_82, 0x_FA, 0x_E8, 0x_B7, 0x_64, 0x_46, 0x_34,
		0x_BB, 0x_11, 0x_39, 0x_AA, 0x_57, 0x_13, 0x_56, 0x_11, 0x_40, 0x_03,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_83, 0x_7A, 0x_02, 0x_A2, 0x_AA, 0x_BB, 0x_85, 0x_57, 0x_C5, 0x_39, 0x_A9, 0x_46, 0x_96, 0x_B7,
		0x_D9, 0x_3A, 0x_72, 0x_B0, 0x_CA, 0x_11, 0x_04, 0x_5E, 0x_69, 0x_6F, 0x_EF, 0x_14, 0x_FB, 0x_1E, 0x_F5,
		0x_F2, 0x_13, 0x_4B, 0x_CE, 0x_23, 0x_A8, 0x_40, 0x_07, 0x_56, 0x_98, 0x_34, 0x_FA, 0x_33, 0x_15, 0x_D6,
		0x_41, 0x_36, 0x_B5, 0x_E8, 0x_C7, 0x_E9, 0x_89, 0x_03, 0x_18, 0x_3B, 0x_60, 0x_76, 0x_17, 0x_D2, 0x_3D,
		0x_82, 0x_A6, 0x_8F, 0x_30, 0x_65, 0x_9B, 0x_31, 0x_C3, 0x_3F, 0x_A0, 0x_AD, 0x_73, 0x_F6,
	];

	helper(S, BASE, 10_074);
}
// endregion
// region: s_has_796_353_in_base_73_and_insignificant_bytes
#[test]
fn s_has_796_353_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_54, 0x_60, 0x_A4, 0x_03, 0x_69, 0x_64, 0x_8F, 0x_60, 0x_AD, 0x_1E, 0x_51, 0x_6C, 0x_B9, 0x_94, 0x_B0,
		0x_AD, 0x_51, 0x_A7,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_DB, 0x_54, 0x_60, 0x_94, 0x_30, 0x_E9, 0x_B4, 0x_CC, 0x_7B, 0x_5C, 0x_B0, 0x_8F, 0x_FB, 0x_04,
		0x_51, 0x_23, 0x_AA, 0x_D8, 0x_35, 0x_E6, 0x_B3, 0x_ED, 0x_14, 0x_DF, 0x_58, 0x_6D, 0x_41, 0x_0F, 0x_46,
		0x_64, 0x_A4, 0x_4E, 0x_3E, 0x_2A, 0x_15, 0x_A7, 0x_42, 0x_F6, 0x_57, 0x_01, 0x_33, 0x_37, 0x_79, 0x_F9,
		0x_F2, 0x_83, 0x_D1, 0x_6C, 0x_71, 0x_F4, 0x_1E, 0x_59, 0x_16, 0x_AD, 0x_9B, 0x_9D, 0x_0E, 0x_D9, 0x_DE,
		0x_7C, 0x_C8, 0x_92, 0x_5A, 0x_9E, 0x_88, 0x_F1, 0x_36, 0x_B9, 0x_03, 0x_84, 0x_61, 0x_6A,
	];

	helper(S, BASE, 796_353);
}
// endregion
// region: s_has_1_832_819_in_base_73_and_insignificant_bytes
#[test]
fn s_has_1_832_819_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_E7, 0x_53, 0x_94, 0x_1E, 0x_66, 0x_1E, 0x_0F, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_4E, 0x_22, 0x_F9, 0x_E7, 0x_2F, 0x_0E, 0x_40, 0x_1E, 0x_D2, 0x_46, 0x_8A, 0x_FE, 0x_8F, 0x_21,
		0x_19, 0x_9B, 0x_FA, 0x_1B, 0x_8B, 0x_96, 0x_FD, 0x_1D, 0x_DB, 0x_A4, 0x_02, 0x_CE, 0x_70, 0x_DC, 0x_ED,
		0x_F1, 0x_6C, 0x_9D, 0x_1F, 0x_95, 0x_64, 0x_AE, 0x_F6, 0x_2C, 0x_8D, 0x_48, 0x_FF, 0x_97, 0x_2E, 0x_77,
		0x_F4, 0x_59, 0x_F2, 0x_24, 0x_15, 0x_92, 0x_53, 0x_BB, 0x_BE, 0x_AF, 0x_29, 0x_BA, 0x_BF, 0x_5F, 0x_0F,
		0x_B7, 0x_31, 0x_E0, 0x_52, 0x_12, 0x_88, 0x_50, 0x_6D, 0x_94, 0x_F3, 0x_82, 0x_CA, 0x_72,
	];

	helper(S, BASE, 1_832_819);
}
// endregion
// region: s_has_44_942_540_in_base_73_and_insignificant_bytes
#[test]
fn s_has_44_942_540_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_F7, 0x_3D, 0x_14, 0x_3D, 0x_8D, 0x_F6, 0x_B5, 0x_B8, 0x_4D, 0x_8D, 0x_1A, 0x_55, 0x_16, 0x_21, 0x_3C,
		0x_31, 0x_B5, 0x_AE, 0x_42, 0x_CB, 0x_16, 0x_7A, 0x_7B, 0x_CA, 0x_7B, 0x_BF, 0x_8A, 0x_91, 0x_2A, 0x_10,
		0x_F7, 0x_BF, 0x_6E, 0x_1A, 0x_9C, 0x_12, 0x_8E, 0x_10, 0x_31, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_31, 0x_F7, 0x_C9, 0x_1A, 0x_8F, 0x_12, 0x_D9, 0x_CB, 0x_B8, 0x_17, 0x_D7, 0x_BF, 0x_DB, 0x_7A, 0x_D3,
		0x_41, 0x_CC, 0x_8D, 0x_13, 0x_BC, 0x_16, 0x_A1, 0x_9A, 0x_7B, 0x_AE, 0x_FB, 0x_3F, 0x_10, 0x_04, 0x_83,
		0x_9C, 0x_4D, 0x_38, 0x_8A, 0x_4B, 0x_CA, 0x_6F, 0x_B4, 0x_14, 0x_CE, 0x_33, 0x_91, 0x_3D, 0x_49, 0x_B9,
		0x_2A, 0x_11, 0x_A6, 0x_75, 0x_32, 0x_1B, 0x_B5, 0x_42, 0x_8E, 0x_3C, 0x_4F, 0x_B7, 0x_07, 0x_4E, 0x_50,
		0x_55, 0x_B6, 0x_65, 0x_E9, 0x_89, 0x_6E, 0x_D2, 0x_F5, 0x_79, 0x_21, 0x_02, 0x_DA, 0x_2F,
	];

	helper(S, BASE, 44_942_540);
}
// endregion
// region: s_has_134_657_466_in_base_73_and_insignificant_bytes
#[test]
fn s_has_134_657_466_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_A4, 0x_46, 0x_E7, 0x_25, 0x_3A, 0x_1C, 0x_55, 0x_5B, 0x_D2, 0x_E0, 0x_7A, 0x_38, 0x_91, 0x_72, 0x_2A,
		0x_E6, 0x_25, 0x_04,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_82, 0x_59, 0x_02, 0x_A4, 0x_91, 0x_97, 0x_38, 0x_9F, 0x_D2, 0x_E7, 0x_06, 0x_71, 0x_F5, 0x_A2,
		0x_EA, 0x_55, 0x_FA, 0x_3F, 0x_D6, 0x_17, 0x_3D, 0x_34, 0x_62, 0x_DB, 0x_B6, 0x_44, 0x_04, 0x_C5, 0x_72,
		0x_E0, 0x_9C, 0x_2A, 0x_8E, 0x_33, 0x_60, 0x_31, 0x_35, 0x_88, 0x_A6, 0x_83, 0x_4F, 0x_E8, 0x_CD, 0x_7B,
		0x_BF, 0x_F2, 0x_B5, 0x_B8, 0x_89, 0x_FF, 0x_0F, 0x_78, 0x_12, 0x_46, 0x_E1, 0x_7A, 0x_E6, 0x_25, 0x_86,
		0x_3A, 0x_CC, 0x_6E, 0x_94, 0x_EE, 0x_67, 0x_1E, 0x_C2, 0x_51, 0x_6F, 0x_48, 0x_EC, 0x_E5,
	];

	helper(S, BASE, 134_657_466);
}
// endregion
// region: s_has_1_in_base_113_and_insignificant_bytes
#[test]
fn s_has_1_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_06, 0x_49, 0x_E4, 0x_37, 0x_C8, 0x_50, 0x_5C, 0x_FA, 0x_21, 0x_9C, 0x_DF, 0x_C2, 0x_40, 0x_47, 0x_95,
		0x_4A, 0x_DA, 0x_EA, 0x_56, 0x_B3, 0x_A2, 0x_F8, 0x_1D, 0x_FF, 0x_32, 0x_54, 0x_EF, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_06, 0x_54, 0x_3F, 0x_3D, 0x_FA, 0x_52, 0x_05, 0x_76, 0x_3A, 0x_8D, 0x_5D, 0x_44, 0x_DF, 0x_E7,
		0x_74, 0x_2A, 0x_EA, 0x_19, 0x_47, 0x_A4, 0x_6F, 0x_EB, 0x_5C, 0x_AA, 0x_B9, 0x_07, 0x_91, 0x_0E, 0x_2E,
		0x_D6, 0x_50, 0x_34, 0x_EC, 0x_62, 0x_FD, 0x_75, 0x_79, 0x_21, 0x_98, 0x_8F, 0x_BD, 0x_DE, 0x_B2, 0x_40,
		0x_DA, 0x_CA, 0x_BE, 0x_1D, 0x_B3, 0x_25, 0x_FE, 0x_C3, 0x_72, 0x_42, 0x_E0, 0x_C2, 0x_B6, 0x_C6, 0x_71,
		0x_E4, 0x_88, 0x_9F, 0x_18, 0x_89, 0x_A2, 0x_F6, 0x_92, 0x_0F, 0x_D7, 0x_33, 0x_D0, 0x_24, 0x_84, 0x_B4,
		0x_56, 0x_9E, 0x_F8, 0x_8E, 0x_16, 0x_4D, 0x_C8, 0x_01, 0x_B0, 0x_46, 0x_6B, 0x_F1, 0x_29, 0x_AF, 0x_4E,
		0x_60, 0x_B1, 0x_A9, 0x_E1, 0x_DB, 0x_32, 0x_B8, 0x_68, 0x_55, 0x_EF, 0x_BC, 0x_64, 0x_37, 0x_FF, 0x_3B,
		0x_6E, 0x_D1, 0x_7D, 0x_43, 0x_95, 0x_4A, 0x_9C, 0x_11,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_36_in_base_113_and_insignificant_bytes
#[test]
fn s_has_36_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_3B, 0x_8E, 0x_97, 0x_FD, 0x_3B, 0x_87, 0x_A4, 0x_8F, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_A4, 0x_93, 0x_CA, 0x_AB, 0x_43, 0x_E7, 0x_DE, 0x_D4, 0x_CF, 0x_CD, 0x_62, 0x_64, 0x_52, 0x_91,
		0x_9D, 0x_23, 0x_E5, 0x_BF, 0x_61, 0x_EB, 0x_71, 0x_97, 0x_48, 0x_59, 0x_90, 0x_42, 0x_FB, 0x_F1, 0x_8D,
		0x_84, 0x_FD, 0x_81, 0x_80, 0x_7D, 0x_76, 0x_3B, 0x_15, 0x_11, 0x_C7, 0x_40, 0x_99, 0x_65, 0x_A8, 0x_B5,
		0x_87, 0x_08, 0x_60, 0x_6B, 0x_C1, 0x_B4, 0x_77, 0x_2A, 0x_E3, 0x_10, 0x_A9, 0x_02, 0x_89, 0x_12, 0x_33,
		0x_E6, 0x_AC, 0x_85, 0x_01, 0x_5E, 0x_ED, 0x_7A, 0x_83, 0x_94, 0x_32, 0x_06, 0x_E9, 0x_B8, 0x_49, 0x_95,
		0x_4B, 0x_69, 0x_45, 0x_88, 0x_46, 0x_8F, 0x_FE, 0x_6E, 0x_F3, 0x_68, 0x_EE, 0x_55, 0x_D6, 0x_4C, 0x_70,
		0x_AA, 0x_1D, 0x_6C, 0x_DA, 0x_FF, 0x_7E, 0x_22, 0x_B3, 0x_BB, 0x_4E, 0x_30, 0x_54, 0x_5A, 0x_63, 0x_F2,
		0x_BE, 0x_BC, 0x_D1, 0x_75, 0x_50, 0x_3F, 0x_34, 0x_35,
	];

	helper(S, BASE, 36);
}
// endregion
// region: s_has_987_in_base_113_and_insignificant_bytes
#[test]
fn s_has_987_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_F9, 0x_6D, 0x_75, 0x_06, 0x_FF, 0x_C8, 0x_54, 0x_EE, 0x_CA, 0x_DA, 0x_DC, 0x_03, 0x_B2, 0x_03, 0x_BB,
		0x_31, 0x_05, 0x_76, 0x_0F, 0x_A3, 0x_A1, 0x_33, 0x_AE, 0x_DD, 0x_5D, 0x_02, 0x_E1, 0x_8F, 0x_18, 0x_F8,
		0x_AA, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_03, 0x_5F, 0x_31, 0x_51, 0x_61, 0x_F4, 0x_7C, 0x_F9, 0x_E8, 0x_33, 0x_DC, 0x_2F, 0x_AA, 0x_D2,
		0x_CE, 0x_36, 0x_24, 0x_D9, 0x_E9, 0x_0E, 0x_AE, 0x_14, 0x_1E, 0x_EF, 0x_99, 0x_49, 0x_CB, 0x_27, 0x_0F,
		0x_E0, 0x_D4, 0x_A7, 0x_A4, 0x_4F, 0x_37, 0x_05, 0x_07, 0x_50, 0x_1B, 0x_DE, 0x_6A, 0x_66, 0x_E4, 0x_4C,
		0x_5A, 0x_CA, 0x_02, 0x_F7, 0x_EE, 0x_FD, 0x_16, 0x_68, 0x_97, 0x_5B, 0x_83, 0x_3B, 0x_86, 0x_BA, 0x_F1,
		0x_AC, 0x_DA, 0x_9A, 0x_06, 0x_F2, 0x_CD, 0x_8F, 0x_7B, 0x_7D, 0x_2C, 0x_D8, 0x_7A, 0x_E7, 0x_E5, 0x_E1,
		0x_BB, 0x_11, 0x_76, 0x_A3, 0x_93, 0x_C8, 0x_04, 0x_BC, 0x_6D, 0x_67, 0x_4D, 0x_65, 0x_35, 0x_21, 0x_81,
		0x_2E, 0x_B3, 0x_63, 0x_87, 0x_9B, 0x_F8, 0x_28, 0x_34, 0x_B4, 0x_54, 0x_60, 0x_58, 0x_5D, 0x_18, 0x_A1,
		0x_72, 0x_3C, 0x_DD, 0x_98, 0x_DF, 0x_10, 0x_1C, 0x_B2,
	];

	helper(S, BASE, 987);
}
// endregion
// region: s_has_4_171_in_base_113_and_insignificant_bytes
#[test]
fn s_has_4_171_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_31, 0x_05, 0x_77, 0x_91, 0x_67, 0x_1E, 0x_43, 0x_16, 0x_34, 0x_26, 0x_84, 0x_A3, 0x_E6, 0x_25, 0x_AE,
		0x_2F, 0x_56, 0x_88, 0x_A3, 0x_C9, 0x_70, 0x_93, 0x_AB, 0x_B9, 0x_7E, 0x_75, 0x_8E, 0x_18, 0x_F5, 0x_3E,
		0x_45, 0x_B3, 0x_84, 0x_F9, 0x_3C, 0x_45, 0x_D4, 0x_51, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_A5, 0x_65, 0x_06, 0x_BA, 0x_94, 0x_41, 0x_19, 0x_6D, 0x_34, 0x_29, 0x_87, 0x_07, 0x_A8, 0x_81,
		0x_6C, 0x_5E, 0x_F0, 0x_3E, 0x_F5, 0x_68, 0x_7C, 0x_CE, 0x_93, 0x_26, 0x_6B, 0x_FB, 0x_67, 0x_AB, 0x_BF,
		0x_B9, 0x_3B, 0x_A7, 0x_32, 0x_AF, 0x_FE, 0x_31, 0x_7F, 0x_C0, 0x_80, 0x_5A, 0x_40, 0x_F7, 0x_96, 0x_B2,
		0x_3C, 0x_9C, 0x_A2, 0x_16, 0x_8D, 0x_71, 0x_6A, 0x_28, 0x_69, 0x_9A, 0x_2F, 0x_A3, 0x_CC, 0x_17, 0x_72,
		0x_3D, 0x_5C, 0x_14, 0x_D1, 0x_E0, 0x_0F, 0x_92, 0x_B5, 0x_7E, 0x_88, 0x_85, 0x_A6, 0x_7B, 0x_FA, 0x_18,
		0x_95, 0x_D8, 0x_C8, 0x_8E, 0x_91, 0x_F9, 0x_D7, 0x_F3, 0x_D4, 0x_25, 0x_84, 0x_70, 0x_B3, 0x_75, 0x_B7,
		0x_90, 0x_45, 0x_E6, 0x_99, 0x_51, 0x_1B, 0x_6E, 0x_8F, 0x_AE, 0x_56, 0x_A4, 0x_58, 0x_83, 0x_05, 0x_C4,
		0x_15, 0x_1E, 0x_89, 0x_43, 0x_1D, 0x_D3, 0x_C9, 0x_E2,
	];

	helper(S, BASE, 4_171);
}
// endregion
// region: s_has_54_401_in_base_113_and_insignificant_bytes
#[test]
fn s_has_54_401_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_19, 0x_59, 0x_8E, 0x_89, 0x_0F, 0x_FC, 0x_2F, 0x_D1, 0x_C8, 0x_8D, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_F9, 0x_7C, 0x_EA, 0x_19, 0x_D8, 0x_47, 0x_12, 0x_9E, 0x_F8, 0x_AF, 0x_96, 0x_9D, 0x_8A, 0x_84,
		0x_D6, 0x_76, 0x_2F, 0x_C0, 0x_33, 0x_D5, 0x_1D, 0x_46, 0x_26, 0x_95, 0x_11, 0x_E9, 0x_A1, 0x_64, 0x_59,
		0x_E2, 0x_90, 0x_EC, 0x_F5, 0x_EE, 0x_E8, 0x_F4, 0x_C8, 0x_BB, 0x_BF, 0x_41, 0x_6A, 0x_B1, 0x_73, 0x_A2,
		0x_43, 0x_D9, 0x_29, 0x_8E, 0x_A0, 0x_6D, 0x_6C, 0x_C7, 0x_8D, 0x_56, 0x_30, 0x_77, 0x_E3, 0x_62, 0x_C1,
		0x_10, 0x_04, 0x_AC, 0x_87, 0x_4E, 0x_0E, 0x_1A, 0x_1E, 0x_4D, 0x_07, 0x_CB, 0x_A4, 0x_14, 0x_B6, 0x_44,
		0x_B4, 0x_3B, 0x_42, 0x_BA, 0x_5B, 0x_7B, 0x_58, 0x_4C, 0x_FF, 0x_32, 0x_0F, 0x_6E, 0x_39, 0x_63, 0x_8B,
		0x_7F, 0x_15, 0x_71, 0x_23, 0x_02, 0x_D2, 0x_B2, 0x_D1, 0x_67, 0x_B0, 0x_99, 0x_CC, 0x_D4, 0x_8C, 0x_5D,
		0x_24, 0x_03, 0x_A6, 0x_06, 0x_A5, 0x_FC, 0x_68, 0x_97,
	];

	helper(S, BASE, 54_401);
}
// endregion
// region: s_has_384_977_in_base_113_and_insignificant_bytes
#[test]
fn s_has_384_977_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_5D, 0x_BA, 0x_19, 0x_59, 0x_5D, 0x_D9, 0x_9F, 0x_B7, 0x_85, 0x_A8, 0x_61, 0x_50, 0x_88, 0x_29, 0x_7D,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_4D, 0x_4F, 0x_9B, 0x_35, 0x_3A, 0x_9F, 0x_E2, 0x_2F, 0x_9A, 0x_85, 0x_EA, 0x_8E, 0x_A9, 0x_CA,
		0x_13, 0x_BA, 0x_E1, 0x_AA, 0x_B2, 0x_EC, 0x_06, 0x_4A, 0x_71, 0x_7F, 0x_C0, 0x_2A, 0x_4B, 0x_DF, 0x_14,
		0x_5D, 0x_A2, 0x_3D, 0x_61, 0x_DA, 0x_87, 0x_C3, 0x_68, 0x_53, 0x_2C, 0x_25, 0x_97, 0x_1D, 0x_6E, 0x_47,
		0x_EB, 0x_84, 0x_D6, 0x_8C, 0x_21, 0x_BC, 0x_57, 0x_B5, 0x_F4, 0x_69, 0x_AD, 0x_F3, 0x_A7, 0x_7D, 0x_D9,
		0x_78, 0x_8D, 0x_C6, 0x_A8, 0x_50, 0x_24, 0x_3C, 0x_15, 0x_22, 0x_45, 0x_5E, 0x_7C, 0x_EE, 0x_90, 0x_FB,
		0x_94, 0x_C1, 0x_D3, 0x_93, 0x_A5, 0x_77, 0x_B6, 0x_28, 0x_B9, 0x_74, 0x_36, 0x_98, 0x_CE, 0x_26, 0x_8A,
		0x_D0, 0x_F1, 0x_3E, 0x_E8, 0x_A3, 0x_83, 0x_6C, 0x_92, 0x_54, 0x_19, 0x_7E, 0x_B7, 0x_64, 0x_0F, 0x_88,
		0x_C9, 0x_DB, 0x_E6, 0x_32, 0x_BE, 0x_AE, 0x_29, 0x_6A,
	];

	helper(S, BASE, 384_977);
}
// endregion
// region: s_has_9_965_800_in_base_113_and_insignificant_bytes
#[test]
fn s_has_9_965_800_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_D6, 0x_F1, 0x_91, 0x_E7, 0x_22, 0x_43, 0x_7A, 0x_6B, 0x_E2, 0x_01, 0x_D6, 0x_EB, 0x_52, 0x_BF, 0x_40,
		0x_FD, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_76, 0x_63, 0x_DA, 0x_94, 0x_33, 0x_D6, 0x_98, 0x_3A, 0x_3C, 0x_18, 0x_47, 0x_3E, 0x_F7, 0x_34,
		0x_8B, 0x_4C, 0x_EE, 0x_7E, 0x_BB, 0x_7C, 0x_AF, 0x_A9, 0x_E8, 0x_40, 0x_07, 0x_B8, 0x_D1, 0x_50, 0x_67,
		0x_8E, 0x_CB, 0x_28, 0x_BF, 0x_0E, 0x_B4, 0x_66, 0x_41, 0x_B2, 0x_31, 0x_A6, 0x_B9, 0x_B0, 0x_9C, 0x_BD,
		0x_CD, 0x_E2, 0x_DD, 0x_FD, 0x_64, 0x_45, 0x_01, 0x_91, 0x_AB, 0x_87, 0x_82, 0x_32, 0x_9B, 0x_1E, 0x_F5,
		0x_19, 0x_3D, 0x_08, 0x_29, 0x_B7, 0x_FF, 0x_46, 0x_85, 0x_96, 0x_6D, 0x_55, 0x_6B, 0x_15, 0x_8A, 0x_D3,
		0x_FA, 0x_C3, 0x_92, 0x_5F, 0x_CF, 0x_21, 0x_11, 0x_38, 0x_7A, 0x_1A, 0x_60, 0x_A8, 0x_52, 0x_C0, 0x_D4,
		0x_A3, 0x_EA, 0x_3B, 0x_E0, 0x_02, 0x_DE, 0x_1B, 0x_8F, 0x_80, 0x_BC, 0x_B3, 0x_16, 0x_F1, 0x_03, 0x_E7,
		0x_37, 0x_12, 0x_43, 0x_D7, 0x_DF, 0x_62, 0x_EB, 0x_61,
	];

	helper(S, BASE, 9_965_800);
}
// endregion
// region: s_has_82_817_049_in_base_113_and_insignificant_bytes
#[test]
fn s_has_82_817_049_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_62, 0x_92, 0x_F9, 0x_32, 0x_FB, 0x_88, 0x_6C, 0x_89, 0x_0F, 0x_5C, 0x_F4, 0x_FD, 0x_A8, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_57, 0x_C4, 0x_8D, 0x_79, 0x_23, 0x_D9, 0x_4C, 0x_CE, 0x_29, 0x_DA, 0x_A4, 0x_02, 0x_39, 0x_F5,
		0x_2A, 0x_72, 0x_2F, 0x_1E, 0x_DF, 0x_06, 0x_04, 0x_6B, 0x_EC, 0x_85, 0x_94, 0x_E0, 0x_32, 0x_9B, 0x_E7,
		0x_88, 0x_5F, 0x_BB, 0x_FD, 0x_D3, 0x_5C, 0x_D0, 0x_84, 0x_F1, 0x_0F, 0x_E8, 0x_B8, 0x_42, 0x_11, 0x_92,
		0x_95, 0x_0E, 0x_A8, 0x_BE, 0x_C6, 0x_ED, 0x_D6, 0x_2E, 0x_8A, 0x_AA, 0x_B0, 0x_6A, 0x_62, 0x_A3, 0x_A6,
		0x_D1, 0x_5D, 0x_1B, 0x_AC, 0x_A9, 0x_87, 0x_F7, 0x_16, 0x_3B, 0x_21, 0x_E2, 0x_4D, 0x_D7, 0x_C0, 0x_25,
		0x_4F, 0x_F4, 0x_13, 0x_24, 0x_45, 0x_B5, 0x_D8, 0x_FE, 0x_9D, 0x_6C, 0x_8B, 0x_B7, 0x_51, 0x_D5, 0x_F9,
		0x_48, 0x_AE, 0x_6E, 0x_C1, 0x_52, 0x_7B, 0x_26, 0x_46, 0x_80, 0x_AB, 0x_89, 0x_14, 0x_4E, 0x_96, 0x_27,
		0x_E6, 0x_7E, 0x_3F, 0x_22, 0x_1F, 0x_A5, 0x_C3, 0x_7D,
	];

	helper(S, BASE, 82_817_049);
}
// endregion
// region: s_has_170_535_025_in_base_113_and_insignificant_bytes
#[test]
fn s_has_170_535_025_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_C3, 0x_9A, 0x_F1, 0x_A1, 0x_7F, 0x_BB, 0x_C8, 0x_74, 0x_E0, 0x_21, 0x_5B, 0x_CA, 0x_BA, 0x_2A, 0x_3C,
		0x_DF, 0x_5D, 0x_A6, 0x_42, 0x_2C, 0x_13, 0x_A2, 0x_CB, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_C3, 0x_42, 0x_0E, 0x_84, 0x_9A, 0x_ED, 0x_9D, 0x_CA, 0x_D5, 0x_75, 0x_8B, 0x_8E, 0x_35, 0x_5B,
		0x_DF, 0x_93, 0x_41, 0x_F6, 0x_62, 0x_F5, 0x_F1, 0x_CC, 0x_5A, 0x_44, 0x_14, 0x_CB, 0x_56, 0x_43, 0x_83,
		0x_C6, 0x_63, 0x_F0, 0x_7A, 0x_8F, 0x_11, 0x_7D, 0x_E2, 0x_16, 0x_A4, 0x_70, 0x_EF, 0x_18, 0x_19, 0x_A1,
		0x_E0, 0x_A7, 0x_54, 0x_40, 0x_EB, 0x_BA, 0x_F8, 0x_E3, 0x_21, 0x_08, 0x_9E, 0x_57, 0x_A6, 0x_7F, 0x_C7,
		0x_B0, 0x_3C, 0x_E6, 0x_26, 0x_1E, 0x_8A, 0x_E5, 0x_52, 0x_D0, 0x_88, 0x_1D, 0x_6E, 0x_6A, 0x_E1, 0x_2C,
		0x_9B, 0x_2A, 0x_92, 0x_BF, 0x_89, 0x_64, 0x_5D, 0x_C9, 0x_AD, 0x_24, 0x_F3, 0x_15, 0x_48, 0x_E8, 0x_58,
		0x_4E, 0x_46, 0x_7E, 0x_29, 0x_4A, 0x_02, 0x_13, 0x_C0, 0x_4D, 0x_C8, 0x_AA, 0x_45, 0x_EE, 0x_34, 0x_97,
		0x_FE, 0x_F2, 0x_DE, 0x_90, 0x_30, 0x_A2, 0x_74, 0x_A0,
	];

	helper(S, BASE, 170_535_025);
}
// endregion
// region: s_has_2_in_base_193_and_insignificant_bytes
#[test]
fn s_has_2_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_7D, 0x_7C, 0x_1E, 0x_EF, 0x_B1, 0x_7B, 0x_45, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_7F, 0x_7D, 0x_A7, 0x_95, 0x_8A, 0x_28, 0x_6B, 0x_F9, 0x_42, 0x_1B, 0x_D7, 0x_9F, 0x_39, 0x_FA,
		0x_5C, 0x_3A, 0x_F2, 0x_BA, 0x_78, 0x_02, 0x_F5, 0x_96, 0x_D5, 0x_4D, 0x_43, 0x_AE, 0x_A8, 0x_3D, 0x_DC,
		0x_55, 0x_B1, 0x_EF, 0x_DE, 0x_08, 0x_B4, 0x_0E, 0x_07, 0x_72, 0x_79, 0x_89, 0x_FE, 0x_F1, 0x_A0, 0x_60,
		0x_23, 0x_F0, 0x_E4, 0x_F4, 0x_EB, 0x_2C, 0x_32, 0x_BC, 0x_A1, 0x_F8, 0x_B5, 0x_1F, 0x_CF, 0x_C0, 0x_6D,
		0x_7E, 0x_4A, 0x_C4, 0x_01, 0x_C2, 0x_1A, 0x_86, 0x_03, 0x_E0, 0x_61, 0x_6E, 0x_E6, 0x_88, 0x_5A, 0x_59,
		0x_BF, 0x_FB, 0x_FF, 0x_10, 0x_58, 0x_70, 0x_9C, 0x_84, 0x_CD, 0x_67, 0x_BE, 0x_D2, 0x_C5, 0x_45, 0x_2F,
		0x_87, 0x_3E, 0x_E7, 0x_14, 0x_CE, 0x_94, 0x_64, 0x_DB, 0x_FD, 0x_38, 0x_B8, 0x_25, 0x_D0, 0x_5E, 0x_53,
		0x_97, 0x_B2, 0x_B0, 0x_16, 0x_1E, 0x_54, 0x_3F, 0x_6A, 0x_37, 0x_7B, 0x_98, 0x_5B, 0x_57, 0x_AB, 0x_2A,
		0x_8E, 0x_F3, 0x_ED, 0x_B9, 0x_5D, 0x_69, 0x_85, 0x_C3, 0x_E8, 0x_3B, 0x_21, 0x_65, 0x_41, 0x_66, 0x_EC,
		0x_47, 0x_FC, 0x_C1, 0x_99, 0x_9B, 0x_22, 0x_50, 0x_80, 0x_D1, 0x_15, 0x_26, 0x_A3, 0x_D3, 0x_48, 0x_BD,
		0x_34, 0x_4F, 0x_77, 0x_52, 0x_B6, 0x_C9, 0x_40, 0x_92, 0x_CB, 0x_5F, 0x_AA, 0x_BB, 0x_24, 0x_83, 0x_B7,
		0x_36, 0x_90, 0x_33, 0x_F7, 0x_75, 0x_73, 0x_0F, 0x_06, 0x_1C, 0x_DA, 0x_D4, 0x_04, 0x_D8, 0x_AC, 0x_C7,
		0x_CC, 0x_11, 0x_E2, 0x_49, 0x_D6, 0x_1D, 0x_19, 0x_8F, 0x_81, 0x_F6, 0x_13, 0x_51, 0x_18,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_17_in_base_193_and_insignificant_bytes
#[test]
fn s_has_17_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_EE, 0x_65, 0x_C4, 0x_D3, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_B4, 0x_C7, 0x_68, 0x_AB, 0x_04, 0x_9C, 0x_6C, 0x_A4, 0x_9F, 0x_A9, 0x_49, 0x_07, 0x_35, 0x_DC,
		0x_1A, 0x_FB, 0x_EE, 0x_8A, 0x_F5, 0x_D8, 0x_94, 0x_2A, 0x_DA, 0x_22, 0x_3E, 0x_67, 0x_C3, 0x_24, 0x_DB,
		0x_1C, 0x_D7, 0x_50, 0x_C5, 0x_E1, 0x_3B, 0x_55, 0x_74, 0x_4C, 0x_90, 0x_9B, 0x_84, 0x_57, 0x_52, 0x_B7,
		0x_CF, 0x_FD, 0x_8D, 0x_80, 0x_F2, 0x_D0, 0x_D1, 0x_66, 0x_3C, 0x_E9, 0x_19, 0x_F6, 0x_70, 0x_28, 0x_7B,
		0x_4B, 0x_71, 0x_B2, 0x_B8, 0x_A8, 0x_30, 0x_C8, 0x_25, 0x_CA, 0x_1E, 0x_83, 0x_27, 0x_BD, 0x_53, 0x_CB,
		0x_ED, 0x_64, 0x_18, 0x_A1, 0x_0E, 0x_1B, 0x_44, 0x_5F, 0x_FA, 0x_E8, 0x_1D, 0x_72, 0x_3F, 0x_BB, 0x_EF,
		0x_C2, 0x_86, 0x_E0, 0x_C1, 0x_AD, 0x_01, 0x_F7, 0x_B0, 0x_6A, 0x_A5, 0x_51, 0x_9A, 0x_C0, 0x_87, 0x_02,
		0x_A7, 0x_CC, 0x_97, 0x_11, 0x_47, 0x_39, 0x_B1, 0x_EC, 0x_16, 0x_3A, 0x_4F, 0x_7C, 0x_82, 0x_D9, 0x_98,
		0x_05, 0x_DE, 0x_AA, 0x_14, 0x_10, 0x_85, 0x_B9, 0x_DF, 0x_38, 0x_79, 0x_96, 0x_9E, 0x_2E, 0x_6D, 0x_73,
		0x_33, 0x_D3, 0x_89, 0x_2F, 0x_A2, 0x_E3, 0x_32, 0x_91, 0x_BC, 0x_6B, 0x_77, 0x_EA, 0x_A0, 0x_BE, 0x_75,
		0x_2C, 0x_4E, 0x_8E, 0x_FC, 0x_60, 0x_7E, 0x_48, 0x_B3, 0x_F4, 0x_3D, 0x_34, 0x_C6, 0x_58, 0x_81, 0x_7D,
		0x_8B, 0x_0F, 0x_AE, 0x_5D, 0x_40, 0x_BA, 0x_6F, 0x_41, 0x_C4, 0x_B6, 0x_76, 0x_F8, 0x_92, 0x_26, 0x_FE,
		0x_6E, 0x_17, 0x_37, 0x_AF, 0x_62, 0x_23, 0x_BF, 0x_99, 0x_E2, 0x_E7, 0x_12, 0x_13, 0x_B5,
	];

	helper(S, BASE, 17);
}
// endregion
// region: s_has_478_in_base_193_and_insignificant_bytes
#[test]
fn s_has_478_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_E0, 0x_45, 0x_49, 0x_F1, 0x_EB, 0x_6D, 0x_C8, 0x_19, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_66, 0x_E0, 0x_46, 0x_F1, 0x_4F, 0x_C5, 0x_98, 0x_6B, 0x_74, 0x_0E, 0x_DE, 0x_73, 0x_2E, 0x_9B,
		0x_03, 0x_41, 0x_D7, 0x_71, 0x_62, 0x_BD, 0x_C3, 0x_99, 0x_30, 0x_64, 0x_65, 0x_79, 0x_AB, 0x_57, 0x_C4,
		0x_94, 0x_43, 0x_56, 0x_A1, 0x_B1, 0x_9F, 0x_84, 0x_F7, 0x_38, 0x_7F, 0x_7B, 0x_31, 0x_B0, 0x_69, 0x_33,
		0x_A3, 0x_D3, 0x_76, 0x_A9, 0x_C6, 0x_D0, 0x_F4, 0x_A6, 0x_BC, 0x_19, 0x_DC, 0x_E8, 0x_78, 0x_2F, 0x_61,
		0x_6F, 0x_F8, 0x_CF, 0x_54, 0x_4E, 0x_23, 0x_7D, 0x_24, 0x_EA, 0x_25, 0x_4A, 0x_86, 0x_95, 0x_B7, 0x_6C,
		0x_E3, 0x_B5, 0x_2C, 0x_3E, 0x_13, 0x_47, 0x_F9, 0x_70, 0x_C2, 0x_48, 0x_01, 0x_06, 0x_B6, 0x_DA, 0x_E9,
		0x_9D, 0x_D8, 0x_45, 0x_3A, 0x_5E, 0x_93, 0x_8B, 0x_DF, 0x_83, 0x_CD, 0x_68, 0x_F0, 0x_87, 0x_35, 0x_F6,
		0x_AE, 0x_B2, 0x_89, 0x_FC, 0x_02, 0x_6D, 0x_4D, 0x_60, 0x_B4, 0x_04, 0x_C9, 0x_FF, 0x_18, 0x_12, 0x_1F,
		0x_5D, 0x_FE, 0x_53, 0x_52, 0x_27, 0x_51, 0x_B8, 0x_3C, 0x_05, 0x_D6, 0x_22, 0x_32, 0x_8E, 0x_DD, 0x_FB,
		0x_42, 0x_50, 0x_E5, 0x_59, 0x_AC, 0x_E2, 0x_EB, 0x_1B, 0x_EF, 0x_37, 0x_3F, 0x_D1, 0x_BE, 0x_FD, 0x_81,
		0x_CB, 0x_F2, 0x_A5, 0x_75, 0x_1E, 0x_E1, 0x_3B, 0x_C8, 0x_97, 0x_EC, 0x_F3, 0x_ED, 0x_A4, 0x_08, 0x_82,
		0x_AD, 0x_5F, 0x_40, 0x_4C, 0x_BA, 0x_A7, 0x_9A, 0x_07, 0x_F5, 0x_5B, 0x_85, 0x_58, 0x_E4, 0x_C1, 0x_11,
		0x_FA, 0x_C7, 0x_80, 0x_14, 0x_10, 0x_C0, 0x_72, 0x_88, 0x_0F, 0x_E6, 0x_EE, 0x_21, 0x_AA,
	];

	helper(S, BASE, 478);
}
// endregion
// region: s_has_6_136_in_base_193_and_insignificant_bytes
#[test]
fn s_has_6_136_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_52, 0x_5A, 0x_99, 0x_1A, 0x_2E, 0x_15, 0x_8D, 0x_53, 0x_78, 0x_B0, 0x_94, 0x_A8, 0x_7A, 0x_56, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_F7, 0x_BB, 0x_AF, 0x_CF, 0x_F8, 0x_2A, 0x_32, 0x_BA, 0x_3D, 0x_33, 0x_A5, 0x_66, 0x_84, 0x_44,
		0x_2F, 0x_79, 0x_59, 0x_4D, 0x_50, 0x_48, 0x_4A, 0x_51, 0x_81, 0x_B6, 0x_7A, 0x_7F, 0x_1B, 0x_49, 0x_CC,
		0x_D1, 0x_52, 0x_F2, 0x_AB, 0x_21, 0x_28, 0x_E0, 0x_22, 0x_CD, 0x_E4, 0x_94, 0x_A0, 0x_FB, 0x_EE, 0x_FA,
		0x_DC, 0x_6B, 0x_92, 0x_80, 0x_90, 0x_97, 0x_06, 0x_CB, 0x_C9, 0x_78, 0x_A6, 0x_7C, 0x_70, 0x_D8, 0x_C5,
		0x_19, 0x_9B, 0x_8F, 0x_88, 0x_B8, 0x_6E, 0x_D2, 0x_C8, 0x_B3, 0x_E6, 0x_65, 0x_39, 0x_08, 0x_2E, 0x_61,
		0x_93, 0x_F6, 0x_6C, 0x_D4, 0x_EA, 0x_BE, 0x_56, 0x_9A, 0x_E2, 0x_5E, 0x_F0, 0x_11, 0x_10, 0x_5C, 0x_29,
		0x_B0, 0x_4E, 0x_A1, 0x_A4, 0x_23, 0x_6A, 0x_A3, 0x_B7, 0x_F4, 0x_7D, 0x_74, 0x_DE, 0x_91, 0x_B5, 0x_CA,
		0x_EC, 0x_40, 0x_63, 0x_12, 0x_FE, 0x_9D, 0x_87, 0x_76, 0x_73, 0x_3A, 0x_82, 0x_62, 0x_A8, 0x_E1, 0x_DB,
		0x_25, 0x_36, 0x_77, 0x_8C, 0x_53, 0x_8B, 0x_14, 0x_F9, 0x_30, 0x_E7, 0x_A9, 0x_45, 0x_D3, 0x_E8, 0x_3E,
		0x_BD, 0x_96, 0x_D0, 0x_C4, 0x_05, 0x_01, 0x_37, 0x_43, 0x_F1, 0x_1C, 0x_FF, 0x_46, 0x_C1, 0x_35, 0x_C7,
		0x_9C, 0x_8E, 0x_FC, 0x_5A, 0x_26, 0x_2C, 0x_ED, 0x_02, 0x_98, 0x_B9, 0x_07, 0x_F3, 0x_8A, 0x_57, 0x_15,
		0x_4C, 0x_1A, 0x_75, 0x_55, 0x_6F, 0x_41, 0x_B2, 0x_0E, 0x_31, 0x_13, 0x_42, 0x_EF, 0x_64, 0x_7B, 0x_47,
		0x_8D, 0x_34, 0x_DA, 0x_89, 0x_C3, 0x_FD, 0x_3C, 0x_D6, 0x_18, 0x_D9, 0x_9E, 0x_AE, 0x_DF,
	];

	helper(S, BASE, 6_136);
}
// endregion
// region: s_has_84_749_in_base_193_and_insignificant_bytes
#[test]
fn s_has_84_749_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_38, 0x_A9, 0x_07, 0x_0B, 0x_AE, 0x_51, 0x_29, 0x_1E, 0x_62, 0x_3A, 0x_D6, 0x_DD, 0x_80, 0x_A1, 0x_BA,
		0x_84, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_22, 0x_38, 0x_41, 0x_30, 0x_76, 0x_F7, 0x_86, 0x_84, 0x_A6, 0x_E5, 0x_D2, 0x_E3, 0x_79, 0x_B0,
		0x_66, 0x_7A, 0x_D3, 0x_E8, 0x_01, 0x_11, 0x_DE, 0x_07, 0x_85, 0x_92, 0x_46, 0x_AD, 0x_C5, 0x_7C, 0x_93,
		0x_40, 0x_F2, 0x_CC, 0x_F8, 0x_5E, 0x_37, 0x_58, 0x_3D, 0x_69, 0x_02, 0x_DA, 0x_04, 0x_4F, 0x_C2, 0x_18,
		0x_A0, 0x_E4, 0x_05, 0x_63, 0x_82, 0x_D7, 0x_36, 0x_72, 0x_A9, 0x_BB, 0x_0F, 0x_3C, 0x_50, 0x_5A, 0x_A8,
		0x_6A, 0x_D1, 0x_B8, 0x_99, 0x_97, 0x_BA, 0x_65, 0x_B7, 0x_D9, 0x_5B, 0x_80, 0x_A4, 0x_34, 0x_D4, 0x_91,
		0x_B1, 0x_15, 0x_62, 0x_1D, 0x_7D, 0x_DB, 0x_FE, 0x_54, 0x_F9, 0x_24, 0x_E0, 0x_4D, 0x_21, 0x_D8, 0x_F6,
		0x_2F, 0x_E6, 0x_CD, 0x_55, 0x_BD, 0x_5F, 0x_D5, 0x_73, 0x_6F, 0x_1E, 0x_EB, 0x_2A, 0x_96, 0x_1B, 0x_64,
		0x_4E, 0x_C1, 0x_CE, 0x_6C, 0x_27, 0x_E7, 0x_9A, 0x_B2, 0x_1C, 0x_9E, 0x_43, 0x_03, 0x_A5, 0x_E2, 0x_3B,
		0x_25, 0x_B4, 0x_6E, 0x_87, 0x_1F, 0x_A1, 0x_98, 0x_52, 0x_C0, 0x_A7, 0x_45, 0x_9C, 0x_CA, 0x_E9, 0x_23,
		0x_C8, 0x_D6, 0x_FF, 0x_75, 0x_06, 0x_3F, 0x_56, 0x_7B, 0x_AE, 0x_29, 0x_51, 0x_C4, 0x_EF, 0x_4C, 0x_2C,
		0x_2E, 0x_26, 0x_8A, 0x_AA, 0x_9B, 0x_8D, 0x_FC, 0x_7E, 0x_3A, 0x_B3, 0x_DD, 0x_13, 0x_10, 0x_F5, 0x_60,
		0x_F4, 0x_9F, 0x_78, 0x_EC, 0x_49, 0x_EE, 0x_8C, 0x_A2, 0x_F3, 0x_57, 0x_32, 0x_CB, 0x_48, 0x_FB, 0x_F0,
		0x_0E, 0x_5D, 0x_94, 0x_B9, 0x_ED, 0x_BE, 0x_D0, 0x_7F, 0x_08, 0x_47, 0x_6B, 0x_4B, 0x_CF,
	];

	helper(S, BASE, 84_749);
}
// endregion
// region: s_has_798_859_in_base_193_and_insignificant_bytes
#[test]
fn s_has_798_859_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_BD, 0x_C0, 0x_52, 0x_AF, 0x_67, 0x_6F, 0x_D4, 0x_6F, 0x_AA, 0x_25, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_BC, 0x_63, 0x_D5, 0x_CB, 0x_CF, 0x_B2, 0x_B7, 0x_E3, 0x_DA, 0x_1E, 0x_85, 0x_D9, 0x_E1, 0x_E9,
		0x_EA, 0x_71, 0x_C4, 0x_F2, 0x_33, 0x_A2, 0x_BD, 0x_FC, 0x_AA, 0x_86, 0x_B3, 0x_F5, 0x_BE, 0x_31, 0x_4F,
		0x_1A, 0x_84, 0x_52, 0x_FB, 0x_05, 0x_DB, 0x_8F, 0x_56, 0x_38, 0x_89, 0x_EF, 0x_01, 0x_1F, 0x_99, 0x_EC,
		0x_1C, 0x_10, 0x_24, 0x_AE, 0x_34, 0x_22, 0x_9C, 0x_4B, 0x_A4, 0x_80, 0x_35, 0x_87, 0x_9D, 0x_95, 0x_97,
		0x_93, 0x_6A, 0x_8B, 0x_82, 0x_D3, 0x_55, 0x_36, 0x_3A, 0x_A7, 0x_D6, 0x_CD, 0x_CA, 0x_72, 0x_DE, 0x_28,
		0x_9F, 0x_F3, 0x_F9, 0x_08, 0x_B9, 0x_83, 0x_44, 0x_1B, 0x_74, 0x_2F, 0x_E4, 0x_C0, 0x_C1, 0x_9B, 0x_D2,
		0x_04, 0x_98, 0x_3D, 0x_49, 0x_CC, 0x_07, 0x_D8, 0x_C9, 0x_3B, 0x_F7, 0x_E2, 0x_F1, 0x_59, 0x_9A, 0x_06,
		0x_F8, 0x_57, 0x_5D, 0x_27, 0x_79, 0x_8A, 0x_12, 0x_6F, 0x_3E, 0x_BB, 0x_70, 0x_13, 0x_2E, 0x_A8, 0x_7B,
		0x_AB, 0x_E7, 0x_C7, 0x_96, 0x_4C, 0x_C2, 0x_EE, 0x_B6, 0x_32, 0x_8D, 0x_3C, 0x_81, 0x_DD, 0x_E5, 0x_BA,
		0x_D0, 0x_21, 0x_A1, 0x_03, 0x_69, 0x_58, 0x_E6, 0x_A0, 0x_7D, 0x_25, 0x_F6, 0x_EB, 0x_7E, 0x_AD, 0x_76,
		0x_92, 0x_6D, 0x_FE, 0x_90, 0x_FD, 0x_FF, 0x_5B, 0x_9E, 0x_A6, 0x_47, 0x_6B, 0x_7A, 0x_2C, 0x_8E, 0x_67,
		0x_2A, 0x_64, 0x_DC, 0x_78, 0x_65, 0x_14, 0x_E0, 0x_23, 0x_15, 0x_D4, 0x_B8, 0x_8C, 0x_19, 0x_E8, 0x_F4,
		0x_73, 0x_18, 0x_26, 0x_51, 0x_17, 0x_C5, 0x_B5, 0x_DF, 0x_C8, 0x_A3, 0x_0F, 0x_A9, 0x_29,
	];

	helper(S, BASE, 798_859);
}
// endregion
// region: s_has_5_579_412_in_base_193_and_insignificant_bytes
#[test]
fn s_has_5_579_412_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_E1, 0x_E3, 0x_67, 0x_44, 0x_E3, 0x_D0, 0x_80, 0x_01, 0x_AF, 0x_89, 0x_E1, 0x_EC, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_6D, 0x_1D, 0x_84, 0x_9D, 0x_E8, 0x_88, 0x_4F, 0x_81, 0x_83, 0x_CC, 0x_69, 0x_15, 0x_9C, 0x_C7,
		0x_33, 0x_4A, 0x_34, 0x_13, 0x_41, 0x_B8, 0x_D9, 0x_11, 0x_50, 0x_3E, 0x_1E, 0x_4E, 0x_52, 0x_D8, 0x_F6,
		0x_FE, 0x_42, 0x_02, 0x_DC, 0x_AA, 0x_4B, 0x_E9, 0x_32, 0x_68, 0x_DD, 0x_B1, 0x_AB, 0x_9E, 0x_93, 0x_04,
		0x_1F, 0x_F9, 0x_8F, 0x_7F, 0x_72, 0x_B4, 0x_24, 0x_5A, 0x_BA, 0x_AF, 0x_3F, 0x_30, 0x_47, 0x_37, 0x_48,
		0x_99, 0x_54, 0x_FA, 0x_FF, 0x_D2, 0x_A9, 0x_58, 0x_C1, 0x_66, 0x_78, 0x_E7, 0x_C5, 0x_64, 0x_59, 0x_94,
		0x_6E, 0x_CB, 0x_E0, 0x_4D, 0x_CE, 0x_EC, 0x_F1, 0x_BB, 0x_A6, 0x_91, 0x_03, 0x_BE, 0x_86, 0x_80, 0x_57,
		0x_D1, 0x_8D, 0x_89, 0x_6A, 0x_70, 0x_7E, 0x_79, 0x_38, 0x_9B, 0x_AE, 0x_E6, 0x_2E, 0x_A1, 0x_F4, 0x_B6,
		0x_3B, 0x_2C, 0x_D7, 0x_D5, 0x_46, 0x_B7, 0x_01, 0x_23, 0x_B2, 0x_ED, 0x_DF, 0x_55, 0x_C9, 0x_56, 0x_B3,
		0x_5F, 0x_75, 0x_9A, 0x_31, 0x_43, 0x_53, 0x_63, 0x_22, 0x_EE, 0x_DB, 0x_B5, 0x_40, 0x_77, 0x_1B, 0x_F3,
		0x_95, 0x_C3, 0x_7D, 0x_DE, 0x_1A, 0x_B9, 0x_A4, 0x_0E, 0x_82, 0x_61, 0x_D6, 0x_18, 0x_5C, 0x_73, 0x_E1,
		0x_14, 0x_E3, 0x_6F, 0x_7B, 0x_F7, 0x_06, 0x_B0, 0x_A3, 0x_BF, 0x_25, 0x_36, 0x_10, 0x_12, 0x_EB, 0x_35,
		0x_F0, 0x_71, 0x_6B, 0x_67, 0x_87, 0x_65, 0x_FD, 0x_98, 0x_92, 0x_EA, 0x_F2, 0x_39, 0x_CA, 0x_5B, 0x_AD,
		0x_2A, 0x_AC, 0x_3D, 0x_D0, 0x_A7, 0x_16, 0x_8A, 0x_E4, 0x_27, 0x_CD, 0x_2F, 0x_3C, 0x_EF,
	];

	helper(S, BASE, 5_579_412);
}
// endregion
// region: s_has_75_921_342_in_base_193_and_insignificant_bytes
#[test]
fn s_has_75_921_342_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_AF, 0x_D1, 0x_26, 0x_5D, 0x_2D, 0x_A2, 0x_45, 0x_5B, 0x_D6, 0x_92, 0x_59, 0x_BE, 0x_C9, 0x_FE, 0x_29,
		0x_73, 0x_26, 0x_88, 0x_D6, 0x_B6, 0x_39, 0x_27, 0x_F3, 0x_CD, 0x_05, 0x_07, 0x_D5, 0x_94, 0x_2F, 0x_F2,
		0x_82, 0x_E6, 0x_BB, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_A1, 0x_BF, 0x_CD, 0x_5B, 0x_BE, 0x_8B, 0x_DD, 0x_3F, 0x_81, 0x_DB, 0x_AF, 0x_05, 0x_79, 0x_ED, 0x_72,
		0x_90, 0x_AE, 0x_F4, 0x_82, 0x_FA, 0x_EE, 0x_DE, 0x_5E, 0x_C6, 0x_66, 0x_D8, 0x_BC, 0x_A6, 0x_B3, 0x_F0,
		0x_D4, 0x_56, 0x_CA, 0x_75, 0x_F8, 0x_6D, 0x_06, 0x_8A, 0x_1D, 0x_0E, 0x_26, 0x_C4, 0x_A3, 0x_F3, 0x_50,
		0x_C7, 0x_5F, 0x_E7, 0x_C5, 0x_78, 0x_A8, 0x_60, 0x_15, 0x_8E, 0x_B2, 0x_8F, 0x_71, 0x_86, 0x_84, 0x_55,
		0x_68, 0x_24, 0x_16, 0x_93, 0x_7C, 0x_01, 0x_8C, 0x_E4, 0x_95, 0x_31, 0x_59, 0x_02, 0x_1A, 0x_7D, 0x_A0,
		0x_E3, 0x_E1, 0x_57, 0x_CC, 0x_AC, 0x_EA, 0x_3C, 0x_92, 0x_C9, 0x_49, 0x_B0, 0x_A9, 0x_23, 0x_14, 0x_C3,
		0x_2F, 0x_77, 0x_9E, 0x_41, 0x_17, 0x_CE, 0x_F6, 0x_33, 0x_37, 0x_64, 0x_E6, 0x_A7, 0x_EF, 0x_58, 0x_3A,
		0x_70, 0x_E2, 0x_7E, 0x_D1, 0x_44, 0x_E8, 0x_D9, 0x_54, 0x_1C, 0x_DF, 0x_10, 0x_9A, 0x_FE, 0x_29, 0x_B9,
		0x_18, 0x_D6, 0x_A2, 0x_B1, 0x_39, 0x_F9, 0x_34, 0x_F7, 0x_EB, 0x_FB, 0x_BB, 0x_08, 0x_07, 0x_46, 0x_13,
		0x_FC, 0x_99, 0x_BA, 0x_A5, 0x_40, 0x_D5, 0x_B5, 0x_2C, 0x_B6, 0x_0F, 0x_63, 0x_6A, 0x_C1, 0x_12, 0x_36,
		0x_88, 0x_2A, 0x_BD, 0x_D2, 0x_27, 0x_69, 0x_38, 0x_B7, 0x_97, 0x_6F, 0x_5D, 0x_B8, 0x_5A, 0x_1B, 0x_94,
		0x_D0, 0x_22, 0x_5C, 0x_4B, 0x_F5, 0x_4D, 0x_87, 0x_25, 0x_7B, 0x_F1, 0x_42, 0x_7A, 0x_85, 0x_9D, 0x_CB,
		0x_80, 0x_45, 0x_6B, 0x_73, 0x_DA, 0x_F2, 0x_FD, 0x_E5, 0x_3B, 0x_67, 0x_D3, 0x_E9, 0x_8D,
	];

	helper(S, BASE, 75_921_342);
}
// endregion
// region: s_has_261_617_386_in_base_193_and_insignificant_bytes
#[test]
fn s_has_261_617_386_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_96, 0x_19, 0x_CE, 0x_31, 0x_7B, 0x_55, 0x_10, 0x_34, 0x_CE, 0x_76, 0x_02, 0x_4A, 0x_B4, 0x_30, 0x_77,
		0x_36, 0x_6E, 0x_54, 0x_9D, 0x_A6, 0x_C6, 0x_82, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_C3, 0x_8F, 0x_B2, 0x_1A, 0x_40, 0x_1D, 0x_34, 0x_CB, 0x_5A, 0x_77, 0x_DF, 0x_FE, 0x_82, 0x_3B,
		0x_B6, 0x_D0, 0x_F7, 0x_C4, 0x_51, 0x_28, 0x_2F, 0x_1E, 0x_F9, 0x_D2, 0x_7A, 0x_69, 0x_83, 0x_13, 0x_05,
		0x_84, 0x_F1, 0x_E2, 0x_6F, 0x_42, 0x_D8, 0x_96, 0x_9B, 0x_F3, 0x_D5, 0x_04, 0x_45, 0x_62, 0x_FD, 0x_A4,
		0x_DC, 0x_8A, 0x_46, 0x_E3, 0x_94, 0x_92, 0x_88, 0x_9A, 0x_EE, 0x_B8, 0x_64, 0x_C5, 0x_E9, 0x_53, 0x_8E,
		0x_36, 0x_4B, 0x_25, 0x_DB, 0x_D1, 0x_97, 0x_D6, 0x_AC, 0x_11, 0x_CD, 0x_7D, 0x_5C, 0x_F4, 0x_0E, 0x_BA,
		0x_19, 0x_3A, 0x_85, 0x_A6, 0x_6E, 0x_9E, 0x_BF, 0x_BE, 0x_4C, 0x_DE, 0x_55, 0x_EA, 0x_AD, 0x_79, 0x_FB,
		0x_EF, 0x_CE, 0x_4D, 0x_98, 0x_A1, 0x_01, 0x_31, 0x_86, 0x_A9, 0x_32, 0x_4F, 0x_58, 0x_BC, 0x_90, 0x_03,
		0x_81, 0x_41, 0x_7C, 0x_35, 0x_9F, 0x_02, 0x_57, 0x_E7, 0x_A3, 0x_6B, 0x_E1, 0x_A8, 0x_6D, 0x_D7, 0x_06,
		0x_A5, 0x_F2, 0x_26, 0x_B0, 0x_8B, 0x_1C, 0x_C9, 0x_38, 0x_3C, 0x_3D, 0x_75, 0x_D9, 0x_65, 0x_2E, 0x_B1,
		0x_39, 0x_8C, 0x_54, 0x_C7, 0x_22, 0x_08, 0x_F5, 0x_C2, 0x_8D, 0x_1B, 0x_7F, 0x_EB, 0x_B4, 0x_BD, 0x_6A,
		0x_52, 0x_2A, 0x_CF, 0x_C8, 0x_F0, 0x_3F, 0x_B5, 0x_49, 0x_66, 0x_47, 0x_3E, 0x_FF, 0x_15, 0x_27, 0x_6C,
		0x_10, 0x_76, 0x_30, 0x_C6, 0x_5E, 0x_B7, 0x_A0, 0x_F8, 0x_4E, 0x_9C, 0x_E4, 0x_43, 0x_68, 0x_4A, 0x_E6,
		0x_AF, 0x_12, 0x_DA, 0x_CA, 0x_1F, 0x_A7, 0x_2C, 0x_93, 0x_87, 0x_9D, 0x_E8, 0x_73, 0x_99,
	];

	helper(S, BASE, 261_617_386);
}
// endregion
// region: s_has_5_in_base_247_and_insignificant_bytes
#[test]
fn s_has_5_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_7C, 0x_09, 0x_6A, 0x_E0, 0x_BD, 0x_ED, 0x_AA, 0x_F3, 0x_4D, 0x_CC, 0x_E8, 0x_6B, 0x_83, 0x_58, 0x_CE,
		0x_EA, 0x_BF, 0x_16, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_70, 0x_C8, 0x_58, 0x_22, 0x_01, 0x_7C, 0x_D2, 0x_BD, 0x_82, 0x_37, 0x_54, 0x_57, 0x_5B, 0x_7D, 0x_6A,
		0x_B8, 0x_CE, 0x_28, 0x_49, 0x_E5, 0x_1E, 0x_C9, 0x_95, 0x_C5, 0x_92, 0x_F3, 0x_E7, 0x_A6, 0x_DC, 0x_66,
		0x_1A, 0x_64, 0x_D9, 0x_61, 0x_83, 0x_F7, 0x_11, 0x_D5, 0x_18, 0x_74, 0x_DA, 0x_62, 0x_42, 0x_9A, 0x_C4,
		0x_91, 0x_CC, 0x_05, 0x_4B, 0x_50, 0x_EA, 0x_6D, 0x_3B, 0x_6B, 0x_B9, 0x_75, 0x_DB, 0x_36, 0x_7A, 0x_41,
		0x_97, 0x_6E, 0x_F5, 0x_3C, 0x_EE, 0x_99, 0x_E0, 0x_14, 0x_2C, 0x_4C, 0x_F4, 0x_FB, 0x_9D, 0x_B4, 0x_77,
		0x_EB, 0x_3D, 0x_A3, 0x_43, 0x_9E, 0x_F9, 0x_4D, 0x_81, 0x_7E, 0x_35, 0x_EC, 0x_A4, 0x_76, 0x_52, 0x_DD,
		0x_3F, 0x_26, 0x_FD, 0x_39, 0x_ED, 0x_17, 0x_0F, 0x_0E, 0x_73, 0x_BE, 0x_D3, 0x_D7, 0x_78, 0x_E8, 0x_04,
		0x_88, 0x_90, 0x_F6, 0x_BC, 0x_2F, 0x_30, 0x_8F, 0x_E1, 0x_FA, 0x_AA, 0x_A0, 0x_B6, 0x_BA, 0x_1F, 0x_C3,
		0x_5A, 0x_5D, 0x_32, 0x_1D, 0x_FC, 0x_F1, 0x_E2, 0x_19, 0x_C0, 0x_72, 0x_AD, 0x_1C, 0x_40, 0x_B3, 0x_3E,
		0x_08, 0x_AF, 0x_6C, 0x_68, 0x_25, 0x_FF, 0x_96, 0x_BF, 0x_D6, 0x_A8, 0x_B2, 0x_67, 0x_CD, 0x_93, 0x_1B,
		0x_8A, 0x_38, 0x_6F, 0x_A5, 0x_BB, 0x_45, 0x_21, 0x_59, 0x_23, 0x_15, 0x_87, 0x_7B, 0x_5E, 0x_4E, 0x_C2,
		0x_13, 0x_33, 0x_4F, 0x_69, 0x_46, 0x_31, 0x_29, 0x_A2, 0x_EF, 0x_E6, 0x_A9, 0x_48, 0x_98, 0x_D4, 0x_CB,
		0x_E3, 0x_89, 0x_E9, 0x_80, 0x_FE, 0x_7F, 0x_AC, 0x_B0, 0x_F2, 0x_65, 0x_79, 0x_2E, 0x_B5, 0x_02, 0x_27,
		0x_24, 0x_AB, 0x_8B, 0x_94, 0x_3A, 0x_34, 0x_CA, 0x_D0, 0x_71, 0x_B1, 0x_60, 0x_63, 0x_47, 0x_DE, 0x_CF,
		0x_8E, 0x_4A, 0x_9F, 0x_12, 0x_07, 0x_10, 0x_8C, 0x_5C, 0x_AE, 0x_56, 0x_C6, 0x_2A, 0x_E4, 0x_F8, 0x_8D,
		0x_9B, 0x_55, 0x_DF, 0x_44, 0x_9C, 0x_B7, 0x_A1, 0x_84, 0x_D1, 0x_A7, 0x_03, 0x_85, 0x_06, 0x_C1, 0x_53,
		0x_51, 0x_F0, 0x_16, 0x_5F, 0x_86, 0x_C7, 0x_D8,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_49_in_base_247_and_insignificant_bytes
#[test]
fn s_has_49_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_60, 0x_0D, 0x_A9, 0x_A2, 0x_35, 0x_A0, 0x_44, 0x_86, 0x_F6, 0x_46, 0x_A5, 0x_B4, 0x_DD, 0x_05, 0x_36,
		0x_CF, 0x_36, 0x_62, 0x_D9, 0x_43, 0x_C9, 0x_68, 0x_EB, 0x_16, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_D9, 0x_03, 0x_19, 0x_A9, 0x_58, 0x_96, 0x_70, 0x_72, 0x_79, 0x_E1, 0x_12, 0x_F6, 0x_7C, 0x_06,
		0x_5C, 0x_28, 0x_FD, 0x_93, 0x_8E, 0x_9B, 0x_C8, 0x_18, 0x_EA, 0x_DE, 0x_07, 0x_D6, 0x_48, 0x_4E, 0x_7F,
		0x_C7, 0x_63, 0x_D0, 0x_6E, 0x_2E, 0x_01, 0x_D1, 0x_1D, 0x_67, 0x_5D, 0x_AB, 0x_97, 0x_94, 0x_8D, 0x_6F,
		0x_41, 0x_FE, 0x_D7, 0x_AA, 0x_60, 0x_DD, 0x_EF, 0x_6C, 0x_F0, 0x_7D, 0x_E4, 0x_F4, 0x_76, 0x_27, 0x_57,
		0x_52, 0x_40, 0x_FF, 0x_AF, 0x_34, 0x_08, 0x_49, 0x_DC, 0x_1F, 0x_89, 0x_F3, 0x_A0, 0x_3E, 0x_64, 0x_10,
		0x_5E, 0x_6B, 0x_74, 0x_D3, 0x_99, 0x_84, 0x_43, 0x_A3, 0x_BD, 0x_E5, 0x_A8, 0x_86, 0x_C2, 0x_B8, 0x_1C,
		0x_39, 0x_8B, 0x_4F, 0x_B9, 0x_51, 0x_77, 0x_55, 0x_69, 0x_15, 0x_AD, 0x_04, 0x_61, 0x_17, 0x_05, 0x_F2,
		0x_F9, 0x_62, 0x_2A, 0x_29, 0x_A1, 0x_4B, 0x_FA, 0x_78, 0x_9C, 0x_44, 0x_CD, 0x_D2, 0x_BE, 0x_CE, 0x_1B,
		0x_0E, 0x_35, 0x_D4, 0x_DF, 0x_A7, 0x_0F, 0x_B6, 0x_22, 0x_DA, 0x_D8, 0x_4D, 0x_38, 0x_24, 0x_85, 0x_A6,
		0x_C4, 0x_7A, 0x_9D, 0x_92, 0x_B4, 0x_DB, 0x_4C, 0x_3C, 0x_9F, 0x_3D, 0x_65, 0x_36, 0x_4A, 0x_B7, 0x_8F,
		0x_CA, 0x_32, 0x_E0, 0x_B2, 0x_87, 0x_9A, 0x_71, 0x_91, 0x_5A, 0x_46, 0x_C0, 0x_1A, 0x_AC, 0x_C9, 0x_81,
		0x_EC, 0x_68, 0x_3B, 0x_B0, 0x_8A, 0x_BA, 0x_75, 0x_54, 0x_30, 0x_E6, 0x_EE, 0x_F8, 0x_90, 0x_45, 0x_80,
		0x_6A, 0x_59, 0x_2C, 0x_6D, 0x_31, 0x_37, 0x_11, 0x_C3, 0x_ED, 0x_5F, 0x_B3, 0x_2F, 0x_3A, 0x_16, 0x_E8,
		0x_23, 0x_33, 0x_95, 0x_C1, 0x_83, 0x_E2, 0x_FB, 0x_98, 0x_E9, 0x_14, 0x_AE, 0x_73, 0x_8C, 0x_25, 0x_FC,
		0x_56, 0x_A5, 0x_BB, 0x_A2, 0x_26, 0x_B5, 0x_E7, 0x_66, 0x_5B, 0x_D5, 0x_B1, 0x_CF, 0x_EB, 0x_9E, 0x_82,
		0x_7B, 0x_F7, 0x_A4, 0x_F5, 0x_F1, 0x_CC, 0x_53, 0x_3F, 0x_E3, 0x_CB, 0x_7E, 0x_02, 0x_47, 0x_C6, 0x_21,
		0x_88, 0x_13, 0x_C5, 0x_1E, 0x_50, 0x_BC, 0x_42,
	];

	helper(S, BASE, 49);
}
// endregion
// region: s_has_350_in_base_247_and_insignificant_bytes
#[test]
fn s_has_350_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_71, 0x_A3, 0x_20, 0x_C7, 0x_B4, 0x_27, 0x_ED, 0x_19, 0x_D3, 0x_7A, 0x_54, 0x_87, 0x_4F, 0x_C4, 0x_6C,
		0x_F1, 0x_9C, 0x_64, 0x_6E, 0x_AC, 0x_A1, 0x_C6, 0x_FE, 0x_F4, 0x_4E, 0x_88, 0x_06, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_71, 0x_58, 0x_DD, 0x_D9, 0x_4F, 0x_F7, 0x_69, 0x_B6, 0x_45, 0x_92, 0x_3F, 0x_14, 0x_B9, 0x_2C,
		0x_88, 0x_02, 0x_9C, 0x_FA, 0x_E9, 0x_D7, 0x_64, 0x_66, 0x_AF, 0x_60, 0x_06, 0x_E7, 0x_16, 0x_03, 0x_99,
		0x_24, 0x_29, 0x_49, 0x_AA, 0x_7B, 0x_33, 0x_01, 0x_F8, 0x_86, 0x_A0, 0x_30, 0x_B4, 0x_5A, 0x_19, 0x_47,
		0x_32, 0x_AC, 0x_57, 0x_BB, 0x_A1, 0x_28, 0x_CA, 0x_31, 0x_1C, 0x_A6, 0x_9A, 0x_9F, 0x_85, 0x_4A, 0x_4B,
		0x_9E, 0x_EE, 0x_4E, 0x_70, 0x_3E, 0x_BA, 0x_50, 0x_D0, 0x_94, 0x_E2, 0x_59, 0x_CE, 0x_B1, 0x_B0, 0x_FF,
		0x_7F, 0x_6E, 0x_BC, 0x_39, 0x_97, 0x_95, 0x_35, 0x_78, 0x_76, 0x_1E, 0x_11, 0x_62, 0x_7C, 0x_6D, 0x_83,
		0x_D6, 0x_87, 0x_F6, 0x_1B, 0x_8C, 0x_79, 0x_6B, 0x_48, 0x_0E, 0x_96, 0x_FD, 0x_9D, 0x_8A, 0x_A3, 0x_6C,
		0x_38, 0x_93, 0x_AE, 0x_25, 0x_80, 0x_8F, 0x_D8, 0x_74, 0x_E5, 0x_C8, 0x_3B, 0x_E1, 0x_B8, 0x_D1, 0x_FC,
		0x_EC, 0x_A2, 0x_FB, 0x_F0, 0x_63, 0x_C4, 0x_5F, 0x_04, 0x_F3, 0x_2F, 0x_C6, 0x_C7, 0x_DB, 0x_F9, 0x_E4,
		0x_D5, 0x_91, 0x_D4, 0x_6F, 0x_8E, 0x_23, 0x_56, 0x_F5, 0x_E8, 0x_75, 0x_C1, 0x_E3, 0x_1A, 0x_5C, 0x_D3,
		0x_7D, 0x_E6, 0x_D2, 0x_F4, 0x_3C, 0x_CD, 0x_72, 0x_44, 0x_BE, 0x_36, 0x_CC, 0x_5E, 0x_EB, 0x_EA, 0x_81,
		0x_DA, 0x_C2, 0x_EF, 0x_A7, 0x_10, 0x_82, 0x_4D, 0x_ED, 0x_27, 0x_51, 0x_73, 0x_AB, 0x_53, 0x_DC, 0x_9B,
		0x_26, 0x_B7, 0x_90, 0x_42, 0x_1D, 0x_65, 0x_DF, 0x_6A, 0x_8B, 0x_C9, 0x_2E, 0x_34, 0x_67, 0x_12, 0x_98,
		0x_A9, 0x_A4, 0x_7E, 0x_AD, 0x_46, 0x_55, 0x_0F, 0x_77, 0x_89, 0x_61, 0x_BF, 0x_13, 0x_08, 0x_C3, 0x_15,
		0x_5B, 0x_52, 0x_8D, 0x_40, 0x_41, 0x_7A, 0x_4C, 0x_84, 0x_A5, 0x_A8, 0x_18, 0x_FE, 0x_07, 0x_43, 0x_DE,
		0x_2A, 0x_BD, 0x_CB, 0x_37, 0x_17, 0x_B5, 0x_C5, 0x_3A, 0x_3D, 0x_E0, 0x_CF, 0x_C0, 0x_F1, 0x_1F, 0x_B3,
		0x_22, 0x_F2, 0x_21, 0x_B2, 0x_5D, 0x_54, 0x_68,
	];

	helper(S, BASE, 350);
}
// endregion
// region: s_has_5_610_in_base_247_and_insignificant_bytes
#[test]
fn s_has_5_610_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_28, 0x_B7, 0x_20, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_C1, 0x_A9, 0x_EC, 0x_6F, 0x_CD, 0x_5E, 0x_7D, 0x_3B, 0x_D1, 0x_BE, 0x_29, 0x_0E, 0x_9A, 0x_39,
		0x_55, 0x_56, 0x_CC, 0x_71, 0x_6C, 0x_A8, 0x_E4, 0x_28, 0x_95, 0x_99, 0x_1B, 0x_E6, 0x_41, 0x_68, 0x_7B,
		0x_76, 0x_FD, 0x_9F, 0x_36, 0x_E3, 0x_90, 0x_DC, 0x_A5, 0x_2F, 0x_3D, 0x_3C, 0x_03, 0x_1D, 0x_82, 0x_53,
		0x_91, 0x_C5, 0x_2C, 0x_6E, 0x_4E, 0x_0F, 0x_8C, 0x_32, 0x_38, 0x_35, 0x_97, 0x_A0, 0x_EB, 0x_D9, 0x_DF,
		0x_48, 0x_22, 0x_C4, 0x_15, 0x_EE, 0x_D4, 0x_8A, 0x_67, 0x_45, 0x_01, 0x_EA, 0x_B5, 0x_F4, 0x_50, 0x_13,
		0x_D3, 0x_86, 0x_BD, 0x_7E, 0x_E8, 0x_5F, 0x_26, 0x_4D, 0x_87, 0x_37, 0x_C2, 0x_7C, 0x_89, 0x_FC, 0x_57,
		0x_BA, 0x_E5, 0x_C3, 0x_25, 0x_08, 0x_A1, 0x_C7, 0x_F9, 0x_9B, 0x_07, 0x_FB, 0x_D2, 0x_61, 0x_9E, 0x_7F,
		0x_CB, 0x_FA, 0x_DD, 0x_D5, 0x_A7, 0x_77, 0x_1E, 0x_3A, 0x_64, 0x_2A, 0x_E1, 0x_A3, 0x_54, 0x_ED, 0x_88,
		0x_B1, 0x_B2, 0x_16, 0x_42, 0x_C8, 0x_D6, 0x_F8, 0x_7A, 0x_24, 0x_1F, 0x_14, 0x_46, 0x_62, 0x_66, 0x_70,
		0x_F5, 0x_27, 0x_40, 0x_6A, 0x_94, 0x_C6, 0x_33, 0x_B0, 0x_FE, 0x_02, 0x_4C, 0x_E9, 0x_8D, 0x_3F, 0x_CE,
		0x_4F, 0x_5B, 0x_12, 0x_8E, 0x_A4, 0x_F1, 0x_47, 0x_AD, 0x_4B, 0x_2E, 0x_BB, 0x_B4, 0x_E2, 0x_FF, 0x_85,
		0x_18, 0x_73, 0x_93, 0x_B3, 0x_D0, 0x_8B, 0x_D7, 0x_AC, 0x_1A, 0x_69, 0x_F2, 0x_B7, 0x_21, 0x_B8, 0x_C9,
		0x_63, 0x_4A, 0x_51, 0x_10, 0x_E7, 0x_1C, 0x_AF, 0x_34, 0x_78, 0x_CF, 0x_B6, 0x_AA, 0x_58, 0x_11, 0x_F7,
		0x_AE, 0x_5C, 0x_DE, 0x_49, 0x_98, 0x_04, 0x_D8, 0x_43, 0x_F3, 0x_65, 0x_6D, 0x_AB, 0x_5A, 0x_72, 0x_83,
		0x_F6, 0x_60, 0x_EF, 0x_05, 0x_F0, 0x_DB, 0x_31, 0x_A6, 0x_3E, 0x_9C, 0x_A2, 0x_17, 0x_75, 0x_6B, 0x_79,
		0x_BC, 0x_80, 0x_5D, 0x_84, 0x_59, 0x_BF, 0x_B9, 0x_30, 0x_8F, 0x_23, 0x_92, 0x_C0, 0x_52, 0x_9D, 0x_CA,
		0x_74, 0x_81, 0x_DA, 0x_E0, 0x_44, 0x_19, 0x_96,
	];

	helper(S, BASE, 5_610);
}
// endregion
// region: s_has_60_295_in_base_247_and_insignificant_bytes
#[test]
fn s_has_60_295_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_6B, 0x_EC, 0x_0B, 0x_E8, 0x_78, 0x_72, 0x_EE, 0x_94, 0x_5C, 0x_EF, 0x_E7, 0x_EE, 0x_F3, 0x_3F, 0x_40,
		0x_15, 0x_A7, 0x_F6, 0x_A1, 0x_23, 0x_0E, 0x_BF, 0x_B3, 0x_18, 0x_CA, 0x_85, 0x_F3, 0x_E7, 0x_60, 0x_14,
		0x_AE, 0x_CD, 0x_3B, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_17, 0x_B3, 0x_C7, 0x_5A, 0x_47, 0x_4F, 0x_1D, 0x_3A, 0x_F6, 0x_84, 0x_CB, 0x_15, 0x_2E, 0x_BD,
		0x_38, 0x_F2, 0x_EB, 0x_CD, 0x_91, 0x_B5, 0x_E9, 0x_CA, 0x_22, 0x_08, 0x_B2, 0x_F1, 0x_EC, 0x_2C, 0x_F8,
		0x_A4, 0x_6D, 0x_1B, 0x_9A, 0x_98, 0x_DE, 0x_21, 0x_D9, 0x_BB, 0x_DB, 0x_BC, 0x_74, 0x_65, 0x_FB, 0x_DC,
		0x_FD, 0x_02, 0x_1F, 0x_A5, 0x_85, 0x_7F, 0x_C6, 0x_44, 0x_45, 0x_9B, 0x_28, 0x_CC, 0x_83, 0x_36, 0x_F5,
		0x_56, 0x_1E, 0x_D0, 0x_7C, 0x_37, 0x_59, 0x_13, 0x_87, 0x_3E, 0x_30, 0x_34, 0x_B7, 0x_7D, 0x_4E, 0x_32,
		0x_A0, 0x_B0, 0x_DA, 0x_7A, 0x_04, 0x_93, 0x_41, 0x_40, 0x_54, 0x_D2, 0x_49, 0x_27, 0x_E4, 0x_76, 0x_0E,
		0x_71, 0x_77, 0x_50, 0x_25, 0x_E0, 0x_D6, 0x_7E, 0x_99, 0x_D8, 0x_B8, 0x_95, 0x_2F, 0x_A2, 0x_E2, 0x_8D,
		0x_C4, 0x_1C, 0x_64, 0x_5F, 0x_FA, 0x_73, 0x_10, 0x_AF, 0x_3F, 0x_B4, 0x_67, 0x_6A, 0x_A8, 0x_66, 0x_6F,
		0x_70, 0x_C9, 0x_E3, 0x_72, 0x_B1, 0x_8C, 0x_35, 0x_AA, 0x_29, 0x_D4, 0x_01, 0x_97, 0x_14, 0x_F4, 0x_5E,
		0x_43, 0x_8F, 0x_EF, 0x_3C, 0x_C5, 0x_9D, 0x_58, 0x_A9, 0x_5B, 0x_82, 0x_CF, 0x_69, 0x_79, 0x_A7, 0x_39,
		0x_3D, 0x_C3, 0x_12, 0x_42, 0x_C8, 0x_2A, 0x_06, 0x_5C, 0x_E5, 0x_E7, 0x_DF, 0x_6E, 0x_A3, 0x_AD, 0x_D3,
		0x_4A, 0x_BA, 0x_53, 0x_5D, 0x_03, 0x_9C, 0x_F7, 0x_EE, 0x_46, 0x_AE, 0x_C2, 0x_AB, 0x_3B, 0x_8E, 0x_51,
		0x_CE, 0x_18, 0x_A6, 0x_80, 0x_61, 0x_6C, 0x_D5, 0x_F3, 0x_31, 0x_57, 0x_FF, 0x_AC, 0x_B9, 0x_BF, 0x_9E,
		0x_86, 0x_BE, 0x_A1, 0x_68, 0x_F0, 0x_F9, 0x_23, 0x_4B, 0x_07, 0x_4C, 0x_DD, 0x_88, 0x_C1, 0x_26, 0x_33,
		0x_48, 0x_05, 0x_78, 0x_60, 0x_55, 0x_1A, 0x_E1, 0x_11, 0x_E6, 0x_E8, 0x_9F, 0x_7B, 0x_FC, 0x_16, 0x_92,
		0x_B6, 0x_C0, 0x_4D, 0x_D7, 0x_24, 0x_8A, 0x_89, 0x_52, 0x_19, 0x_D1, 0x_75, 0x_94, 0x_96, 0x_FE, 0x_62,
		0x_90, 0x_81, 0x_EA, 0x_8B, 0x_6B, 0x_ED, 0x_63,
	];

	helper(S, BASE, 60_295);
}
// endregion
// region: s_has_708_134_in_base_247_and_insignificant_bytes
#[test]
fn s_has_708_134_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_3C, 0x_4E, 0x_95, 0x_2D, 0x_5D, 0x_83, 0x_CA, 0x_5B, 0x_3C, 0x_44, 0x_3D, 0x_B3, 0x_6E, 0x_23, 0x_4B,
		0x_8A, 0x_F6, 0x_55, 0x_88, 0x_0F, 0x_1F, 0x_B6, 0x_C8, 0x_AB, 0x_D3, 0x_99, 0x_9D, 0x_64, 0x_BA, 0x_82,
		0x_C1, 0x_36, 0x_02, 0x_F6, 0x_FF, 0x_1D, 0x_03, 0x_AE, 0x_A4, 0x_C9, 0x_BC, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_D8, 0x_88, 0x_F7, 0x_81, 0x_6E, 0x_B5, 0x_80, 0x_E7, 0x_FE, 0x_65, 0x_3C, 0x_BF, 0x_14, 0x_3A,
		0x_03, 0x_3D, 0x_71, 0x_E6, 0x_9B, 0x_EA, 0x_7D, 0x_D1, 0x_8B, 0x_0F, 0x_7E, 0x_B1, 0x_39, 0x_BC, 0x_FC,
		0x_55, 0x_C9, 0x_1B, 0x_B8, 0x_CB, 0x_19, 0x_48, 0x_45, 0x_E3, 0x_87, 0x_4C, 0x_C8, 0x_7C, 0x_F5, 0x_AC,
		0x_B2, 0x_F3, 0x_83, 0x_64, 0x_EC, 0x_EE, 0x_51, 0x_2C, 0x_43, 0x_6D, 0x_E5, 0x_52, 0x_CE, 0x_B7, 0x_3E,
		0x_AA, 0x_D5, 0x_36, 0x_A3, 0x_86, 0x_B3, 0x_A5, 0x_12, 0x_F0, 0x_F9, 0x_9C, 0x_54, 0x_25, 0x_5B, 0x_44,
		0x_3B, 0x_78, 0x_13, 0x_4F, 0x_6A, 0x_24, 0x_28, 0x_BA, 0x_DE, 0x_21, 0x_38, 0x_B4, 0x_D6, 0x_C3, 0x_46,
		0x_AE, 0x_29, 0x_73, 0x_06, 0x_41, 0x_4D, 0x_DA, 0x_37, 0x_CC, 0x_42, 0x_D3, 0x_07, 0x_4B, 0x_C6, 0x_8A,
		0x_1A, 0x_1D, 0x_9F, 0x_67, 0x_35, 0x_76, 0x_2F, 0x_FB, 0x_99, 0x_A7, 0x_AB, 0x_A9, 0x_05, 0x_B6, 0x_1F,
		0x_C0, 0x_5D, 0x_AD, 0x_1E, 0x_5F, 0x_68, 0x_90, 0x_2E, 0x_34, 0x_A2, 0x_CA, 0x_E8, 0x_6C, 0x_9A, 0x_58,
		0x_BB, 0x_F4, 0x_EB, 0x_8C, 0x_E0, 0x_30, 0x_01, 0x_98, 0x_40, 0x_66, 0x_E4, 0x_47, 0x_5E, 0x_8F, 0x_4E,
		0x_FD, 0x_7B, 0x_DD, 0x_6B, 0x_E9, 0x_D7, 0x_A0, 0x_EF, 0x_91, 0x_D2, 0x_27, 0x_7A, 0x_ED, 0x_6F, 0x_74,
		0x_49, 0x_33, 0x_8E, 0x_F8, 0x_D0, 0x_84, 0x_E2, 0x_C2, 0x_A1, 0x_63, 0x_C4, 0x_04, 0x_17, 0x_18, 0x_97,
		0x_C1, 0x_5A, 0x_AF, 0x_B9, 0x_59, 0x_62, 0x_94, 0x_B0, 0x_8D, 0x_DC, 0x_A4, 0x_75, 0x_89, 0x_D9, 0x_F6,
		0x_C7, 0x_22, 0x_26, 0x_F2, 0x_69, 0x_7F, 0x_CF, 0x_E1, 0x_23, 0x_85, 0x_DB, 0x_50, 0x_15, 0x_93, 0x_CD,
		0x_96, 0x_11, 0x_79, 0x_57, 0x_DF, 0x_9E, 0x_02, 0x_61, 0x_92, 0x_5C, 0x_D4, 0x_FA, 0x_9D, 0x_16, 0x_82,
		0x_2A, 0x_C5, 0x_A8, 0x_56, 0x_A6, 0x_60, 0x_0E, 0x_95, 0x_70, 0x_4A, 0x_77, 0x_1C, 0x_31, 0x_3F, 0x_F1,
		0x_72, 0x_53, 0x_10, 0x_BD, 0x_BE, 0x_08, 0x_FF,
	];

	helper(S, BASE, 708_134);
}
// endregion
// region: s_has_7_053_430_in_base_247_and_insignificant_bytes
#[test]
fn s_has_7_053_430_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_6B, 0x_66, 0x_7D, 0x_0B, 0x_22, 0x_E3, 0x_6A, 0x_EB, 0x_41, 0x_74, 0x_BA, 0x_1A, 0x_23, 0x_95, 0x_06,
		0x_FF, 0x_F4, 0x_D6, 0x_C9, 0x_82, 0x_F2, 0x_1D, 0x_D8, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_A5, 0x_C8, 0x_9C, 0x_FB, 0x_25, 0x_B0, 0x_D3, 0x_E9, 0x_D2, 0x_E2, 0x_75, 0x_EF, 0x_C5, 0x_74,
		0x_CB, 0x_B2, 0x_70, 0x_E8, 0x_24, 0x_51, 0x_B9, 0x_E4, 0x_3A, 0x_64, 0x_CE, 0x_31, 0x_13, 0x_5B, 0x_59,
		0x_26, 0x_23, 0x_3B, 0x_9B, 0x_49, 0x_BC, 0x_37, 0x_71, 0x_F4, 0x_81, 0x_E7, 0x_62, 0x_90, 0x_F5, 0x_B4,
		0x_DA, 0x_22, 0x_B6, 0x_1C, 0x_4B, 0x_C6, 0x_95, 0x_6D, 0x_4C, 0x_AA, 0x_D7, 0x_EC, 0x_79, 0x_19, 0x_50,
		0x_97, 0x_F0, 0x_82, 0x_52, 0x_9A, 0x_F9, 0x_AD, 0x_C0, 0x_AC, 0x_93, 0x_AF, 0x_BE, 0x_42, 0x_67, 0x_88,
		0x_D0, 0x_43, 0x_DB, 0x_73, 0x_33, 0x_FF, 0x_17, 0x_6C, 0x_0E, 0x_2A, 0x_7A, 0x_D6, 0x_3E, 0x_C1, 0x_5A,
		0x_F6, 0x_41, 0x_EB, 0x_D9, 0x_72, 0x_91, 0x_63, 0x_F8, 0x_7D, 0x_A3, 0x_1B, 0x_FD, 0x_A9, 0x_8F, 0x_D5,
		0x_4D, 0x_ED, 0x_45, 0x_A7, 0x_E0, 0x_38, 0x_6E, 0x_94, 0x_E3, 0x_48, 0x_6B, 0x_58, 0x_83, 0x_9F, 0x_08,
		0x_DF, 0x_8B, 0x_3D, 0x_55, 0x_1E, 0x_B7, 0x_02, 0x_5F, 0x_C3, 0x_F7, 0x_21, 0x_B8, 0x_34, 0x_D8, 0x_D4,
		0x_1F, 0x_E6, 0x_A2, 0x_AE, 0x_7F, 0x_6F, 0x_61, 0x_C2, 0x_69, 0x_30, 0x_F1, 0x_2F, 0x_12, 0x_8D, 0x_C9,
		0x_DE, 0x_66, 0x_9E, 0x_4F, 0x_0F, 0x_FE, 0x_3F, 0x_C7, 0x_86, 0x_07, 0x_36, 0x_A8, 0x_47, 0x_5E, 0x_27,
		0x_CA, 0x_56, 0x_46, 0x_FA, 0x_CD, 0x_92, 0x_78, 0x_F2, 0x_39, 0x_1A, 0x_BB, 0x_84, 0x_D1, 0x_2E, 0x_E5,
		0x_7C, 0x_C4, 0x_06, 0x_FC, 0x_E1, 0x_8C, 0x_80, 0x_05, 0x_7B, 0x_4E, 0x_29, 0x_AB, 0x_A6, 0x_EE, 0x_04,
		0x_4A, 0x_10, 0x_28, 0x_DD, 0x_54, 0x_CF, 0x_32, 0x_96, 0x_BD, 0x_65, 0x_18, 0x_68, 0x_15, 0x_9D, 0x_03,
		0x_57, 0x_8A, 0x_B5, 0x_99, 0x_BA, 0x_01, 0x_11, 0x_DC, 0x_6A, 0x_76, 0x_F3, 0x_53, 0x_A4, 0x_A0, 0x_60,
		0x_44, 0x_5D, 0x_A1, 0x_5C, 0x_1D, 0x_8E, 0x_CC, 0x_BF, 0x_77, 0x_2C, 0x_16, 0x_B1, 0x_EA, 0x_3C, 0x_87,
		0x_35, 0x_14, 0x_7E, 0x_40, 0x_98, 0x_B3, 0x_85,
	];

	helper(S, BASE, 7_053_430);
}
// endregion
// region: s_has_40_842_403_in_base_247_and_insignificant_bytes
#[test]
fn s_has_40_842_403_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_F9, 0x_48, 0x_BA, 0x_1D, 0x_09, 0x_52, 0x_C3, 0x_9F, 0x_DB, 0x_99, 0x_26, 0x_CE, 0x_8A, 0x_A6, 0x_E4,
		0x_AB, 0x_A3, 0x_69, 0x_54, 0x_B7, 0x_D2, 0x_77, 0x_70, 0x_13, 0x_66, 0x_5C, 0x_1F, 0x_0E, 0x_3D, 0x_92,
		0x_70, 0x_92, 0x_4D, 0x_77, 0x_C4, 0x_A8, 0x_47, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_23, 0x_F9, 0x_77, 0x_27, 0x_99, 0x_96, 0x_AD, 0x_1A, 0x_5E, 0x_E9, 0x_1C, 0x_AB, 0x_50, 0x_92,
		0x_FF, 0x_E6, 0x_80, 0x_40, 0x_CF, 0x_1F, 0x_43, 0x_F4, 0x_55, 0x_71, 0x_75, 0x_8F, 0x_C6, 0x_D6, 0x_BB,
		0x_34, 0x_82, 0x_10, 0x_13, 0x_21, 0x_66, 0x_6D, 0x_D9, 0x_4C, 0x_35, 0x_5D, 0x_CE, 0x_25, 0x_5A, 0x_A2,
		0x_95, 0x_8A, 0x_3A, 0x_A1, 0x_16, 0x_9B, 0x_5F, 0x_FD, 0x_B8, 0x_0F, 0x_69, 0x_31, 0x_F6, 0x_67, 0x_49,
		0x_85, 0x_DE, 0x_A6, 0x_6F, 0x_B7, 0x_DB, 0x_E2, 0x_B2, 0x_5C, 0x_7F, 0x_38, 0x_29, 0x_F8, 0x_AE, 0x_91,
		0x_08, 0x_03, 0x_A4, 0x_65, 0x_0E, 0x_8E, 0x_1B, 0x_DA, 0x_8D, 0x_8C, 0x_E0, 0x_89, 0x_CB, 0x_97, 0x_B9,
		0x_33, 0x_83, 0x_86, 0x_3F, 0x_6B, 0x_F7, 0x_B6, 0x_E1, 0x_4D, 0x_C0, 0x_28, 0x_DF, 0x_9A, 0x_46, 0x_26,
		0x_FE, 0x_D8, 0x_C1, 0x_AC, 0x_EA, 0x_BA, 0x_64, 0x_81, 0x_90, 0x_6A, 0x_C8, 0x_9D, 0x_47, 0x_61, 0x_9F,
		0x_18, 0x_CA, 0x_74, 0x_D1, 0x_A0, 0x_57, 0x_02, 0x_41, 0x_F1, 0x_54, 0x_9E, 0x_3E, 0x_EE, 0x_84, 0x_79,
		0x_01, 0x_CC, 0x_87, 0x_BF, 0x_3D, 0x_E3, 0x_B1, 0x_14, 0x_F0, 0x_72, 0x_6C, 0x_2A, 0x_A3, 0x_C2, 0x_7B,
		0x_51, 0x_FB, 0x_59, 0x_2F, 0x_42, 0x_B0, 0x_88, 0x_3B, 0x_EF, 0x_A8, 0x_4B, 0x_7D, 0x_2C, 0x_39, 0x_53,
		0x_30, 0x_58, 0x_22, 0x_78, 0x_05, 0x_37, 0x_C4, 0x_DC, 0x_E7, 0x_D4, 0x_48, 0x_5B, 0x_63, 0x_2E, 0x_12,
		0x_F2, 0x_3C, 0x_F5, 0x_4E, 0x_36, 0x_11, 0x_1E, 0x_7E, 0x_4F, 0x_C9, 0x_D7, 0x_6E, 0x_BE, 0x_FA, 0x_32,
		0x_A5, 0x_E4, 0x_EC, 0x_AA, 0x_B3, 0x_4A, 0x_AF, 0x_C7, 0x_68, 0x_06, 0x_D5, 0x_EB, 0x_DD, 0x_D2, 0x_04,
		0x_D0, 0x_7C, 0x_1D, 0x_F3, 0x_B5, 0x_ED, 0x_FC, 0x_24, 0x_70, 0x_15, 0x_BD, 0x_60, 0x_56, 0x_C3, 0x_E8,
		0x_C5, 0x_73, 0x_45, 0x_CD, 0x_A7, 0x_A9, 0x_19, 0x_44, 0x_E5, 0x_D3, 0x_62, 0x_93, 0x_7A, 0x_98, 0x_52,
		0x_17, 0x_BC, 0x_07, 0x_94, 0x_8B, 0x_B4, 0x_9C,
	];

	helper(S, BASE, 40_842_403);
}
// endregion
// region: s_has_413_694_732_in_base_247_and_insignificant_bytes
#[test]
fn s_has_413_694_732_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_1F, 0x_5D, 0x_F8, 0x_B4, 0x_20, 0x_39, 0x_C3, 0x_60, 0x_F4, 0x_97, 0x_73, 0x_55, 0x_DC, 0x_90, 0x_68,
		0x_A2, 0x_E0, 0x_AC, 0x_3D, 0x_1F, 0x_B6, 0x_3B, 0x_44, 0x_E6, 0x_FD, 0x_5E, 0x_90, 0x_17, 0x_8F, 0x_CC,
		0x_25, 0x_4F, 0x_03, 0x_13, 0x_5D, 0x_41, 0x_A8, 0x_77, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_77, 0x_AD, 0x_6E, 0x_01, 0x_A4, 0x_C0, 0x_DC, 0x_5F, 0x_7A, 0x_06, 0x_F7, 0x_DB, 0x_4F, 0x_98,
		0x_15, 0x_D6, 0x_9F, 0x_E3, 0x_91, 0x_9D, 0x_D4, 0x_C2, 0x_19, 0x_44, 0x_FB, 0x_29, 0x_1F, 0x_13, 0x_B7,
		0x_EF, 0x_FD, 0x_E1, 0x_56, 0x_E7, 0x_37, 0x_BD, 0x_CC, 0x_99, 0x_1E, 0x_AC, 0x_92, 0x_C6, 0x_B3, 0x_08,
		0x_31, 0x_8E, 0x_1B, 0x_A2, 0x_26, 0x_90, 0x_EB, 0x_63, 0x_E8, 0x_18, 0x_E5, 0x_8D, 0x_24, 0x_D9, 0x_F5,
		0x_27, 0x_39, 0x_68, 0x_32, 0x_34, 0x_11, 0x_C3, 0x_D7, 0x_F6, 0x_7F, 0x_CA, 0x_89, 0x_95, 0x_BE, 0x_81,
		0x_53, 0x_A1, 0x_D5, 0x_43, 0x_4D, 0x_7D, 0x_2C, 0x_7C, 0x_E6, 0x_AA, 0x_9B, 0x_57, 0x_04, 0x_D2, 0x_A9,
		0x_EE, 0x_C9, 0x_79, 0x_02, 0x_71, 0x_1C, 0x_70, 0x_3A, 0x_6B, 0x_74, 0x_B8, 0x_66, 0x_50, 0x_8B, 0x_B5,
		0x_62, 0x_2F, 0x_72, 0x_9A, 0x_41, 0x_D8, 0x_5D, 0x_80, 0x_B4, 0x_4E, 0x_A0, 0x_46, 0x_38, 0x_E4, 0x_33,
		0x_BA, 0x_76, 0x_97, 0x_69, 0x_96, 0x_5A, 0x_52, 0x_8C, 0x_E9, 0x_1A, 0x_05, 0x_28, 0x_CB, 0x_83, 0x_47,
		0x_6A, 0x_F1, 0x_E2, 0x_CD, 0x_60, 0x_61, 0x_3C, 0x_07, 0x_AB, 0x_3E, 0x_4B, 0x_C4, 0x_E0, 0x_AF, 0x_36,
		0x_64, 0x_14, 0x_87, 0x_58, 0x_F0, 0x_73, 0x_94, 0x_21, 0x_6C, 0x_82, 0x_D1, 0x_EA, 0x_D0, 0x_0F, 0x_17,
		0x_1D, 0x_C7, 0x_51, 0x_5B, 0x_59, 0x_48, 0x_9C, 0x_8F, 0x_5E, 0x_45, 0x_4C, 0x_C8, 0x_22, 0x_5C, 0x_3D,
		0x_3B, 0x_25, 0x_B0, 0x_8A, 0x_55, 0x_BC, 0x_84, 0x_A8, 0x_AE, 0x_54, 0x_F4, 0x_7B, 0x_CE, 0x_FE, 0x_49,
		0x_78, 0x_A5, 0x_DA, 0x_DD, 0x_7E, 0x_DF, 0x_CF, 0x_ED, 0x_12, 0x_A7, 0x_F2, 0x_DE, 0x_3F, 0x_9E, 0x_85,
		0x_B6, 0x_67, 0x_75, 0x_C1, 0x_16, 0x_30, 0x_EC, 0x_F8, 0x_88, 0x_86, 0x_03, 0x_B2, 0x_F3, 0x_D3, 0x_FA,
		0x_23, 0x_BF, 0x_A6, 0x_35, 0x_65, 0x_4A, 0x_40, 0x_F9, 0x_FC, 0x_A3, 0x_0E, 0x_6F, 0x_2E, 0x_2A, 0x_FF,
		0x_B9, 0x_10, 0x_C5, 0x_93, 0x_B1, 0x_42, 0x_BB,
	];

	helper(S, BASE, 413_694_732);
}
// endregion
// region: s_has_whitespaces_and_signs_and_3_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_3_in_base_2() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_21, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_21,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_39_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_39_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_54, 0x_8B, 0x_8B, 0x_54, 0x_54, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_8B, 0x_54,
	];

	helper(S, BASE, 39);
}
// endregion
// region: s_has_whitespaces_and_signs_and_217_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_217_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_09,
		0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_0D,
		0x_09, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_EA, 0x_EA, 0x_DB, 0x_EA, 0x_EA, 0x_DB, 0x_DB, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_EA,
	];

	helper(S, BASE, 217);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_071_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_8_071_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0B,
		0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_31, 0x_31, 0x_31,
		0x_31, 0x_31, 0x_31, 0x_36, 0x_36, 0x_36, 0x_36, 0x_31, 0x_31, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_36, 0x_31,
	];

	helper(S, BASE, 8_071);
}
// endregion
// region: s_has_whitespaces_and_signs_and_87_712_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_87_712_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0A,
		0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_C8,
		0x_BB, 0x_C8, 0x_BB, 0x_C8, 0x_BB, 0x_C8, 0x_C8, 0x_BB, 0x_C8, 0x_BB, 0x_C8, 0x_BB, 0x_BB, 0x_BB, 0x_BB,
		0x_BB,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_C8,
	];

	helper(S, BASE, 87_712);
}
// endregion
// region: s_has_whitespaces_and_signs_and_840_841_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_840_841_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_F3, 0x_F3, 0x_1C, 0x_1C, 0x_F3, 0x_F3, 0x_1C, 0x_F3, 0x_1C, 0x_F3, 0x_1C, 0x_1C, 0x_F3, 0x_1C, 0x_1C,
		0x_1C, 0x_F3, 0x_1C, 0x_1C, 0x_F3,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_F3,
	];

	helper(S, BASE, 840_841);
}
// endregion
// region: s_has_whitespaces_and_signs_and_1_630_809_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_1_630_809_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0B,
		0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0C,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_01, 0x_01, 0x_C6, 0x_C6, 0x_C6, 0x_01, 0x_01, 0x_01, 0x_C6, 0x_C6, 0x_C6, 0x_01, 0x_C6,
		0x_C6, 0x_01, 0x_C6, 0x_01, 0x_01, 0x_C6, 0x_C6, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_C6, 0x_01,
	];

	helper(S, BASE, 1_630_809);
}
// endregion
// region: s_has_whitespaces_and_signs_and_72_650_343_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_72_650_343_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_23, 0x_8F, 0x_8F, 0x_8F,
		0x_23, 0x_8F, 0x_23, 0x_8F, 0x_23, 0x_8F, 0x_8F, 0x_23, 0x_8F, 0x_8F, 0x_8F, 0x_23, 0x_23, 0x_23, 0x_8F,
		0x_8F, 0x_23, 0x_23, 0x_8F, 0x_8F, 0x_23, 0x_23, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_23,
	];

	helper(S, BASE, 72_650_343);
}
// endregion
// region: s_has_whitespaces_and_signs_and_915_305_159_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_915_305_159_in_base_2() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_0A,
		0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_9E, 0x_9E, 0x_6A, 0x_9E, 0x_9E,
		0x_6A, 0x_9E, 0x_6A, 0x_6A, 0x_6A, 0x_9E, 0x_9E, 0x_9E, 0x_6A, 0x_6A, 0x_9E, 0x_9E, 0x_9E, 0x_6A, 0x_6A,
		0x_9E, 0x_6A, 0x_9E, 0x_9E, 0x_6A, 0x_6A, 0x_6A, 0x_9E, 0x_9E, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_6A, 0x_9E,
	];

	helper(S, BASE, 915_305_159);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_7_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_D3, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_58, 0x_D3,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_40_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_40_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_0B,
		0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_20,
		0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_AE, 0x_AE, 0x_AE, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_AE, 0x_6C,
	];

	helper(S, BASE, 40);
}
// endregion
// region: s_has_whitespaces_and_signs_and_353_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_353_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_A8, 0x_A8, 0x_A8, 0x_35, 0x_35, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_A8, 0x_BA,
	];

	helper(S, BASE, 353);
}
// endregion
// region: s_has_whitespaces_and_signs_and_1_914_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_1_914_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_DC, 0x_52, 0x_DC, 0x_52, 0x_DC, 0x_DC, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_7F, 0x_52, 0x_DC,
	];

	helper(S, BASE, 1_914);
}
// endregion
// region: s_has_whitespaces_and_signs_and_38_881_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_38_881_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0B,
		0x_09, 0x_0A, 0x_09, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_FF,
		0x_E7, 0x_E7, 0x_E7, 0x_FF, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_FF, 0x_E7,
	];

	helper(S, BASE, 38_881);
}
// endregion
// region: s_has_whitespaces_and_signs_and_623_421_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_623_421_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_20,
		0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_B7,
		0x_02, 0x_B7, 0x_B7, 0x_28, 0x_02, 0x_02, 0x_02, 0x_B7, 0x_B7, 0x_28, 0x_02, 0x_02,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_B7, 0x_28,
	];

	helper(S, BASE, 623_421);
}
// endregion
// region: s_has_whitespaces_and_signs_and_3_991_445_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_3_991_445_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_7B, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_7B, 0x_F4, 0x_B1, 0x_B1, 0x_7B, 0x_B1, 0x_B1, 0x_7B,
		0x_7B,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_F4, 0x_7B,
	];

	helper(S, BASE, 3_991_445);
}
// endregion
// region: s_has_whitespaces_and_signs_and_54_969_997_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_54_969_997_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0D,
		0x_20, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_D1, 0x_73, 0x_41, 0x_D1, 0x_D1, 0x_D1, 0x_73, 0x_41, 0x_41, 0x_73,
		0x_41, 0x_D1, 0x_41, 0x_41, 0x_41, 0x_D1, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_D1, 0x_41,
	];

	helper(S, BASE, 54_969_997);
}
// endregion
// region: s_has_whitespaces_and_signs_and_263_829_911_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_263_829_911_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_BC, 0x_96, 0x_96, 0x_35, 0x_96, 0x_35, 0x_35, 0x_96, 0x_BC, 0x_BC, 0x_BC, 0x_35, 0x_35, 0x_BC,
		0x_35, 0x_96, 0x_35, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_35, 0x_BC,
	];

	helper(S, BASE, 263_829_911);
}
// endregion
// region: s_has_whitespaces_and_signs_and_5_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_5_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_09,
		0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_7D, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_7D, 0x_5B, 0x_99, 0x_D1,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_signs_and_59_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_59_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_09,
		0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_09,
		0x_09, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_4A, 0x_11, 0x_E7,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_11, 0x_4A, 0x_BB, 0x_E7,
	];

	helper(S, BASE, 59);
}
// endregion
// region: s_has_whitespaces_and_signs_and_408_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_408_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_09,
		0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_79, 0x_30, 0x_30, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_57, 0x_30, 0x_59, 0x_79, 0x_F4,
	];

	helper(S, BASE, 408);
}
// endregion
// region: s_has_whitespaces_and_signs_and_5_063_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_5_063_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0C,
		0x_0B, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0A,
		0x_0B, 0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_1D, 0x_18, 0x_24, 0x_96, 0x_96, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_24, 0x_1D, 0x_96, 0x_18, 0x_5C,
	];

	helper(S, BASE, 5_063);
}
// endregion
// region: s_has_whitespaces_and_signs_and_25_524_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_25_524_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_20,
		0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_F2, 0x_33, 0x_E5, 0x_49, 0x_E5, 0x_49, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_F2, 0x_CA, 0x_33, 0x_49,
	];

	helper(S, BASE, 25_524);
}
// endregion
// region: s_has_whitespaces_and_signs_and_113_872_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_113_872_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_A9, 0x_D3, 0x_A9, 0x_D3, 0x_5A, 0x_5E, 0x_5E, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_A9, 0x_D3, 0x_61, 0x_5E,
	];

	helper(S, BASE, 113_872);
}
// endregion
// region: s_has_whitespaces_and_signs_and_1_306_989_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_1_306_989_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0C,
		0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0C,
		0x_20, 0x_20, 0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_01, 0x_66, 0x_01, 0x_01, 0x_66,
		0x_49, 0x_59, 0x_2C, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_66, 0x_2C, 0x_01, 0x_59,
	];

	helper(S, BASE, 1_306_989);
}
// endregion
// region: s_has_whitespaces_and_signs_and_39_630_793_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_39_630_793_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_20,
		0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_EA, 0x_A8, 0x_D7, 0x_FD, 0x_D7,
		0x_D7, 0x_EA, 0x_D7, 0x_D7, 0x_A4, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_D7, 0x_FD, 0x_A4, 0x_EA,
	];

	helper(S, BASE, 39_630_793);
}
// endregion
// region: s_has_whitespaces_and_signs_and_227_976_405_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_227_976_405_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_09, 0x_09, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_D2, 0x_6F, 0x_48, 0x_6F, 0x_6F, 0x_ED, 0x_6D, 0x_6D, 0x_48, 0x_48, 0x_48, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_ED, 0x_48, 0x_6D, 0x_6F, 0x_D2,
	];

	helper(S, BASE, 227_976_405);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_7_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_09, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_B2, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_B2, 0x_BF, 0x_D5, 0x_86, 0x_40, 0x_B4,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_25_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_25_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0C,
		0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0C,
		0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_5A, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_6C, 0x_62, 0x_5A, 0x_39, 0x_49, 0x_57,
	];

	helper(S, BASE, 25);
}
// endregion
// region: s_has_whitespaces_and_signs_and_970_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_970_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_0A,
		0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_F1, 0x_4D, 0x_4D, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_F9, 0x_F1, 0x_E0, 0x_78, 0x_4D, 0x_C0,
	];

	helper(S, BASE, 970);
}
// endregion
// region: s_has_whitespaces_and_signs_and_3_343_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_3_343_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0D,
		0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_55, 0x_B2, 0x_BE, 0x_55, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_55, 0x_B2, 0x_0F, 0x_D5, 0x_BE, 0x_F8,
	];

	helper(S, BASE, 3_343);
}
// endregion
// region: s_has_whitespaces_and_signs_and_47_206_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_47_206_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_E2, 0x_CF, 0x_F0, 0x_F0, 0x_E2, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_43, 0x_E2, 0x_D7, 0x_F0, 0x_CF, 0x_B5,
	];

	helper(S, BASE, 47_206);
}
// endregion
// region: s_has_whitespaces_and_signs_and_941_726_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_941_726_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_A1, 0x_A1, 0x_39, 0x_39, 0x_A1, 0x_43, 0x_F9, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_A1, 0x_F2, 0x_43, 0x_48, 0x_6A, 0x_F9,
	];

	helper(S, BASE, 941_726);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_174_177_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_8_174_177_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_ED, 0x_C4, 0x_38, 0x_56, 0x_C4, 0x_56,
		0x_C4, 0x_38, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_ED, 0x_C4, 0x_56, 0x_B6, 0x_CC, 0x_38,
	];

	helper(S, BASE, 8_174_177);
}
// endregion
// region: s_has_whitespaces_and_signs_and_14_452_421_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_14_452_421_in_base_7() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0B,
		0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_EC, 0x_7A, 0x_7A, 0x_CA, 0x_DD, 0x_EC, 0x_EC, 0x_EC, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_30, 0x_EC, 0x_7A, 0x_F7, 0x_CA, 0x_DD,
	];

	helper(S, BASE, 14_452_421);
}
// endregion
// region: s_has_whitespaces_and_signs_and_225_342_306_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_225_342_306_in_base_7() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0D,
		0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_20,
		0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_55, 0x_1F, 0x_C5, 0x_1F,
		0x_B7, 0x_1F, 0x_15, 0x_1F, 0x_1F, 0x_C5,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_1A, 0x_B7, 0x_15, 0x_1F, 0x_55, 0x_24,
	];

	helper(S, BASE, 225_342_306);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_7_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_7D, 0x_8B, 0x_F7, 0x_73, 0x_92, 0x_22, 0x_EC, 0x_54, 0x_DA, 0x_FD, 0x_84,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_39_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_39_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_F3, 0x_A2,
	];
	const BASE: &[u8] = &[
		0x_81, 0x_1C, 0x_AC, 0x_F3, 0x_D3, 0x_99, 0x_A2, 0x_4F, 0x_4E, 0x_E9, 0x_9F,
	];

	helper(S, BASE, 39);
}
// endregion
// region: s_has_whitespaces_and_signs_and_636_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_636_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_20,
		0x_0D, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_7C, 0x_D2, 0x_16,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_8C, 0x_D2, 0x_47, 0x_01, 0x_7C, 0x_CA, 0x_34, 0x_8E, 0x_16, 0x_99,
	];

	helper(S, BASE, 636);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_736_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_7_736_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_20,
		0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_0B,
		0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_A1, 0x_CB, 0x_76, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_1D, 0x_BA, 0x_65, 0x_99, 0x_A1, 0x_61, 0x_E1, 0x_CB, 0x_4E, 0x_76,
	];

	helper(S, BASE, 7_736);
}
// endregion
// region: s_has_whitespaces_and_signs_and_45_844_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_45_844_in_base_11() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_0C,
		0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_F7, 0x_72, 0x_35, 0x_32, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_72, 0x_96, 0x_F7, 0x_35, 0x_67, 0x_8B, 0x_BE, 0x_70, 0x_32, 0x_39,
	];

	helper(S, BASE, 45_844);
}
// endregion
// region: s_has_whitespaces_and_signs_and_416_985_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_416_985_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_E4, 0x_AF, 0x_28, 0x_44, 0x_17, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_17, 0x_E4, 0x_44, 0x_47, 0x_28, 0x_AF, 0x_41, 0x_1A, 0x_67, 0x_FB,
	];

	helper(S, BASE, 416_985);
}
// endregion
// region: s_has_whitespaces_and_signs_and_6_960_646_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_6_960_646_in_base_11() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_09,
		0x_09, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_9B, 0x_A1, 0x_DF, 0x_52, 0x_3A, 0x_73, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_99, 0x_DF, 0x_9B, 0x_52, 0x_F6, 0x_DC, 0x_3A, 0x_31, 0x_B9, 0x_A1,
	];

	helper(S, BASE, 6_960_646);
}
// endregion
// region: s_has_whitespaces_and_signs_and_99_625_979_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_99_625_979_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0C,
		0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_3B, 0x_94, 0x_CD, 0x_F8, 0x_F8, 0x_3B, 0x_CD, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_94, 0x_CD, 0x_50, 0x_7B, 0x_3B, 0x_F8, 0x_71, 0x_8F, 0x_A5, 0x_EF,
	];

	helper(S, BASE, 99_625_979);
}
// endregion
// region: s_has_whitespaces_and_signs_and_346_385_385_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_346_385_385_in_base_11() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_20,
		0x_09, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_0C,
		0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_A4, 0x_3E, 0x_F0, 0x_D1, 0x_F0, 0x_3E, 0x_D1, 0x_A4, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_A4, 0x_D6, 0x_36, 0x_2F, 0x_D1, 0x_3E, 0x_F3, 0x_F0, 0x_83, 0x_01,
	];

	helper(S, BASE, 346_385_385);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_7_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_09,
		0x_0C, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0A,
		0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_C6,
	];
	const BASE: &[u8] = &[
		0x_65, 0x_3F, 0x_28, 0x_35, 0x_53, 0x_0E, 0x_7E, 0x_C6, 0x_F6, 0x_42, 0x_AD, 0x_1C, 0x_F8,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_16_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_16_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0B,
		0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_55, 0x_9B,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_55, 0x_B3, 0x_9B, 0x_02, 0x_53, 0x_EC, 0x_A2, 0x_E2, 0x_C9, 0x_DD, 0x_D4, 0x_DB,
	];

	helper(S, BASE, 16);
}
// endregion
// region: s_has_whitespaces_and_signs_and_355_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_355_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_09,
		0x_0D, 0x_20, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_10, 0x_F0, 0x_7D,
	];
	const BASE: &[u8] = &[
		0x_D0, 0x_F0, 0x_10, 0x_F3, 0x_7D, 0x_E9, 0x_92, 0x_52, 0x_F4, 0x_1D, 0x_96, 0x_3B, 0x_63,
	];

	helper(S, BASE, 355);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_505_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_8_505_in_base_13() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_42, 0x_55, 0x_64, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_DD, 0x_63, 0x_42, 0x_64, 0x_AC, 0x_B3, 0x_6D, 0x_04, 0x_36, 0x_92, 0x_55, 0x_31,
	];

	helper(S, BASE, 8_505);
}
// endregion
// region: s_has_whitespaces_and_signs_and_69_581_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_69_581_in_base_13() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_0A,
		0x_0A, 0x_0C, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_78, 0x_A9, 0x_4E, 0x_4D, 0x_A9,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_AD, 0x_78, 0x_70, 0x_23, 0x_A9, 0x_D4, 0x_0E, 0x_4E, 0x_4D, 0x_46, 0x_89, 0x_76,
	];

	helper(S, BASE, 69_581);
}
// endregion
// region: s_has_whitespaces_and_signs_and_927_140_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_927_140_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0B,
		0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_0A,
		0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_53, 0x_E7, 0x_E7, 0x_65, 0x_65, 0x_E7,
	];
	const BASE: &[u8] = &[
		0x_65, 0x_5B, 0x_53, 0x_DE, 0x_D1, 0x_E4, 0x_E7, 0x_46, 0x_C7, 0x_2F, 0x_64, 0x_9A, 0x_EC,
	];

	helper(S, BASE, 927_140);
}
// endregion
// region: s_has_whitespaces_and_signs_and_5_593_314_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_5_593_314_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0B,
		0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_8F, 0x_34, 0x_F4, 0x_88, 0x_22, 0x_08, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_8F, 0x_34, 0x_17, 0x_04, 0x_2A, 0x_08, 0x_1F, 0x_18, 0x_89, 0x_88, 0x_22, 0x_1D,
	];

	helper(S, BASE, 5_593_314);
}
// endregion
// region: s_has_whitespaces_and_signs_and_17_445_683_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_17_445_683_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0C,
		0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_0C,
		0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_5B, 0x_A4,
		0x_31, 0x_1E, 0x_C5, 0x_32, 0x_C5,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_68, 0x_27, 0x_5B, 0x_35, 0x_F9, 0x_E8, 0x_A4, 0x_C5, 0x_2C, 0x_1E, 0x_32, 0x_31,
	];

	helper(S, BASE, 17_445_683);
}
// endregion
// region: s_has_whitespaces_and_signs_and_489_256_688_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_489_256_688_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_0C,
		0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_0B,
		0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_CA, 0x_18, 0x_A8, 0x_0F,
		0x_9C, 0x_E9, 0x_02, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_E9, 0x_CF, 0x_A2, 0x_9C, 0x_A8, 0x_81, 0x_57, 0x_CA, 0x_78, 0x_0F, 0x_18, 0x_68, 0x_02,
	];

	helper(S, BASE, 489_256_688);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_7_in_base_19() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_E9, 0x_77, 0x_FD, 0x_94, 0x_C7, 0x_66, 0x_24, 0x_A1, 0x_9B, 0x_3D, 0x_59, 0x_AD, 0x_05, 0x_F5,
		0x_CA, 0x_23, 0x_E5, 0x_A2,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_38_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_38_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_5B, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_89, 0x_5B, 0x_DF, 0x_9F, 0x_73, 0x_CB, 0x_22, 0x_A8, 0x_28, 0x_06, 0x_08, 0x_A5, 0x_EE, 0x_97,
		0x_80, 0x_3D, 0x_B5, 0x_58,
	];

	helper(S, BASE, 38);
}
// endregion
// region: s_has_whitespaces_and_signs_and_579_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_579_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_09,
		0x_20, 0x_09, 0x_0C, 0x_0C, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_BF, 0x_37, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_BF, 0x_96, 0x_DE, 0x_AD, 0x_DB, 0x_E7, 0x_60, 0x_D9, 0x_9F, 0x_BC, 0x_37, 0x_16, 0x_DD, 0x_75,
		0x_81, 0x_35, 0x_85, 0x_E6,
	];

	helper(S, BASE, 579);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_124_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_8_124_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_2B, 0x_11, 0x_78, 0x_F5, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_11, 0x_39, 0x_78, 0x_29, 0x_6C, 0x_79, 0x_15, 0x_B9, 0x_F5, 0x_66, 0x_C1, 0x_A5, 0x_FE, 0x_63,
		0x_D2, 0x_BE, 0x_43, 0x_25,
	];

	helper(S, BASE, 8_124);
}
// endregion
// region: s_has_whitespaces_and_signs_and_29_701_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_29_701_in_base_19() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0A,
		0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_EE, 0x_45, 0x_6B, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_77, 0x_EA, 0x_E8, 0x_EE, 0x_6B, 0x_45, 0x_75, 0x_A3, 0x_D0, 0x_DD, 0x_F8, 0x_F5, 0x_66, 0x_AB,
		0x_C9, 0x_67, 0x_DF, 0x_32,
	];

	helper(S, BASE, 29_701);
}
// endregion
// region: s_has_whitespaces_and_signs_and_507_005_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_507_005_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0A,
		0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0D,
		0x_09, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_D6, 0x_7C, 0x_71, 0x_99, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_1B, 0x_23, 0x_AE, 0x_D6, 0x_56, 0x_E7, 0x_8F, 0x_1C, 0x_99, 0x_D4, 0x_73, 0x_FA, 0x_30, 0x_7D, 0x_97,
		0x_BD, 0x_7C, 0x_71, 0x_AC,
	];

	helper(S, BASE, 507_005);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_118_447_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_7_118_447_in_base_19() {
	const S: &[u8] = &[
		0x_20, 0x_2D, 0x_2D, 0x_3A, 0x_EE, 0x_22, 0x_9E, 0x_C8, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_FB, 0x_3A, 0x_4E, 0x_2A, 0x_E1, 0x_7E, 0x_26, 0x_31, 0x_19, 0x_8C, 0x_22, 0x_16, 0x_C8, 0x_56,
		0x_9E, 0x_EE, 0x_AE, 0x_8D,
	];

	helper(S, BASE, 7_118_447);
}
// endregion
// region: s_has_whitespaces_and_signs_and_24_462_784_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_24_462_784_in_base_19() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_09,
		0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0D,
		0x_0C, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_A5, 0x_44, 0x_01, 0x_A5, 0x_6A, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_65, 0x_E2, 0x_0E, 0x_6E, 0x_21, 0x_C4, 0x_5B, 0x_67, 0x_A5, 0x_E4, 0x_BE, 0x_87, 0x_01, 0x_64,
		0x_8F, 0x_44, 0x_6A, 0x_76,
	];

	helper(S, BASE, 24_462_784);
}
// endregion
// region: s_has_whitespaces_and_signs_and_262_806_194_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_262_806_194_in_base_19() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_8D, 0x_17, 0x_91, 0x_17, 0x_5B, 0x_A9, 0x_A9,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_D8, 0x_91, 0x_A5, 0x_22, 0x_8D, 0x_63, 0x_B0, 0x_EA, 0x_5B, 0x_F0, 0x_17, 0x_2C, 0x_A2, 0x_14,
		0x_3C, 0x_90, 0x_9B, 0x_A9,
	];

	helper(S, BASE, 262_806_194);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_7_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0C,
		0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_C1, 0x_89, 0x_9A, 0x_91, 0x_F3, 0x_FD, 0x_D2, 0x_6F, 0x_B0, 0x_C8, 0x_0F, 0x_21, 0x_C9, 0x_77,
		0x_F5, 0x_9C, 0x_85, 0x_FE, 0x_9B, 0x_41, 0x_47, 0x_42, 0x_4E, 0x_8B, 0x_10, 0x_BF, 0x_31, 0x_13, 0x_AD,
		0x_26, 0x_53, 0x_0E, 0x_E3, 0x_11, 0x_A5, 0x_CD, 0x_4D, 0x_66, 0x_32, 0x_97, 0x_9D,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_88_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_88_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_65, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_A3, 0x_65, 0x_D4, 0x_01, 0x_2F, 0x_47, 0x_45, 0x_79, 0x_1E, 0x_EF, 0x_C3, 0x_87, 0x_FB, 0x_C0,
		0x_F4, 0x_95, 0x_2E, 0x_55, 0x_86, 0x_FC, 0x_32, 0x_94, 0x_ED, 0x_CC, 0x_EE, 0x_69, 0x_D1, 0x_72, 0x_16,
		0x_AF, 0x_D8, 0x_E4, 0x_F1, 0x_E2, 0x_13, 0x_5E, 0x_A1, 0x_33, 0x_3D, 0x_A7, 0x_8D,
	];

	helper(S, BASE, 88);
}
// endregion
// region: s_has_whitespaces_and_signs_and_721_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_721_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D,
		0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_D1, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_B3, 0x_38, 0x_43, 0x_FC, 0x_CA, 0x_1B, 0x_D6, 0x_AD, 0x_2F, 0x_DE, 0x_A6, 0x_15, 0x_29, 0x_A8,
		0x_16, 0x_61, 0x_D1, 0x_B2, 0x_90, 0x_A1, 0x_A7, 0x_60, 0x_BE, 0x_53, 0x_66, 0x_FB, 0x_8C, 0x_65, 0x_48,
		0x_D9, 0x_D4, 0x_F5, 0x_FA, 0x_F2, 0x_1F, 0x_54, 0x_6C, 0x_BB, 0x_4E, 0x_2C, 0x_13,
	];

	helper(S, BASE, 721);
}
// endregion
// region: s_has_whitespaces_and_signs_and_2_065_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_2_065_in_base_42() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_B3, 0x_8C, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_B3, 0x_04, 0x_E4, 0x_14, 0x_21, 0x_BD, 0x_8C, 0x_33, 0x_6C, 0x_29, 0x_FE, 0x_52, 0x_B7, 0x_B5,
		0x_1B, 0x_19, 0x_4F, 0x_43, 0x_DF, 0x_FF, 0x_58, 0x_AD, 0x_66, 0x_BF, 0x_50, 0x_80, 0x_44, 0x_7A, 0x_78,
		0x_F8, 0x_72, 0x_6B, 0x_A9, 0x_74, 0x_7F, 0x_E2, 0x_22, 0x_F0, 0x_D6, 0x_DA, 0x_F7,
	];

	helper(S, BASE, 2_065);
}
// endregion
// region: s_has_whitespaces_and_signs_and_98_295_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_98_295_in_base_42() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_09,
		0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_C3,
		0x_B1, 0x_C4, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_E7, 0x_C3, 0x_E2, 0x_AD, 0x_8B, 0x_C1, 0x_76, 0x_F8, 0x_1E, 0x_AF, 0x_C6, 0x_E9, 0x_F6, 0x_B1, 0x_1F,
		0x_D0, 0x_A3, 0x_43, 0x_5D, 0x_5F, 0x_68, 0x_50, 0x_39, 0x_13, 0x_08, 0x_4F, 0x_38, 0x_78, 0x_D3, 0x_73,
		0x_C4, 0x_F1, 0x_7C, 0x_6D, 0x_7F, 0x_44, 0x_93, 0x_8D, 0x_23, 0x_E3, 0x_EC, 0x_83,
	];

	helper(S, BASE, 98_295);
}
// endregion
// region: s_has_whitespaces_and_signs_and_729_072_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_729_072_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0A,
		0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_09,
		0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_EE, 0x_83, 0x_3B, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_CD, 0x_F4, 0x_3A, 0x_5B, 0x_D4, 0x_D9, 0x_ED, 0x_A7, 0x_14, 0x_EE, 0x_4B, 0x_79, 0x_3B, 0x_5C, 0x_05,
		0x_DF, 0x_CC, 0x_4A, 0x_A3, 0x_E2, 0x_6F, 0x_40, 0x_8E, 0x_3E, 0x_52, 0x_6C, 0x_FD, 0x_21, 0x_1E, 0x_1D,
		0x_E8, 0x_D7, 0x_42, 0x_15, 0x_66, 0x_83, 0x_19, 0x_51, 0x_58, 0x_B0, 0x_9E, 0x_98,
	];

	helper(S, BASE, 729_072);
}
// endregion
// region: s_has_whitespaces_and_signs_and_6_576_180_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_6_576_180_in_base_42() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_D4, 0x_B7, 0x_6F, 0x_AF, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_2F, 0x_D4, 0x_3F, 0x_B7, 0x_D3, 0x_E2, 0x_8C, 0x_94, 0x_F8, 0x_BA, 0x_F6, 0x_9D, 0x_A7, 0x_8E,
		0x_6D, 0x_47, 0x_5C, 0x_9B, 0x_9E, 0x_50, 0x_97, 0x_F5, 0x_F0, 0x_A6, 0x_EE, 0x_01, 0x_5D, 0x_49, 0x_93,
		0x_D6, 0x_6F, 0x_DB, 0x_42, 0x_B3, 0x_A2, 0x_91, 0x_B4, 0x_88, 0x_21, 0x_C5, 0x_AF,
	];

	helper(S, BASE, 6_576_180);
}
// endregion
// region: s_has_whitespaces_and_signs_and_25_548_407_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_25_548_407_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_4A, 0x_4A, 0x_37, 0x_CE, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_8A, 0x_2A, 0x_E2, 0x_33, 0x_02, 0x_6D, 0x_1F, 0x_4A, 0x_CE, 0x_BA, 0x_1D, 0x_8C, 0x_AD, 0x_AF,
		0x_65, 0x_AB, 0x_14, 0x_5A, 0x_4C, 0x_18, 0x_8D, 0x_E4, 0x_6E, 0x_BB, 0x_FC, 0x_41, 0x_C0, 0x_D9, 0x_F3,
		0x_98, 0x_8F, 0x_D3, 0x_3F, 0x_5E, 0x_37, 0x_2F, 0x_E0, 0x_25, 0x_AE, 0x_23, 0x_F5,
	];

	helper(S, BASE, 25_548_407);
}
// endregion
// region: s_has_whitespaces_and_signs_and_540_714_341_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_540_714_341_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_E0, 0x_8A, 0x_32, 0x_3B, 0x_CB, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_57, 0x_76, 0x_6F, 0x_E0, 0x_8A, 0x_B8, 0x_15, 0x_11, 0x_59, 0x_E5, 0x_3B, 0x_6E, 0x_54, 0x_26,
		0x_C2, 0x_CB, 0x_90, 0x_65, 0x_74, 0x_F7, 0x_88, 0x_19, 0x_87, 0x_1B, 0x_7E, 0x_9E, 0x_FC, 0x_07, 0x_D6,
		0x_FE, 0x_4C, 0x_32, 0x_AF, 0x_4D, 0x_F9, 0x_33, 0x_80, 0x_D2, 0x_AB, 0x_8C, 0x_64,
	];

	helper(S, BASE, 540_714_341);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_7_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_16,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_6F, 0x_70, 0x_0F, 0x_36, 0x_1E, 0x_50, 0x_16, 0x_26, 0x_4B, 0x_2F, 0x_CD, 0x_CB, 0x_7E, 0x_46,
		0x_9C, 0x_AE, 0x_E4, 0x_74, 0x_FB, 0x_D3, 0x_FC, 0x_2A, 0x_88, 0x_86, 0x_71, 0x_E0, 0x_29, 0x_9B, 0x_0E,
		0x_A7, 0x_75, 0x_C4, 0x_4C, 0x_32, 0x_AA, 0x_01, 0x_8A, 0x_7A, 0x_93, 0x_E8, 0x_BE, 0x_31, 0x_35, 0x_BB,
		0x_B4, 0x_22, 0x_48, 0x_55, 0x_4D, 0x_25, 0x_34, 0x_2C, 0x_06, 0x_79, 0x_87, 0x_C6, 0x_F1, 0x_5A, 0x_44,
		0x_7C, 0x_ED, 0x_3E, 0x_92, 0x_91, 0x_EE, 0x_9D, 0x_15, 0x_1F, 0x_69, 0x_BA, 0x_62, 0x_08,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_47_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_47_in_base_73() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0C,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_90, 0x_F3, 0x_63, 0x_12, 0x_5C, 0x_AC, 0x_FD, 0x_DD, 0x_BF, 0x_62, 0x_B8, 0x_E6, 0x_32, 0x_4E,
		0x_3A, 0x_57, 0x_9E, 0x_19, 0x_79, 0x_A2, 0x_94, 0x_24, 0x_5F, 0x_65, 0x_50, 0x_21, 0x_B9, 0x_02, 0x_3F,
		0x_FC, 0x_87, 0x_95, 0x_01, 0x_70, 0x_43, 0x_C3, 0x_37, 0x_85, 0x_25, 0x_71, 0x_9C, 0x_29, 0x_E5, 0x_A9,
		0x_DB, 0x_A8, 0x_9A, 0x_A3, 0x_D7, 0x_31, 0x_44, 0x_14, 0x_66, 0x_2C, 0x_BE, 0x_C7, 0x_B3, 0x_26, 0x_F0,
		0x_A7, 0x_CF, 0x_3E, 0x_97, 0x_AF, 0x_6B, 0x_DF, 0x_22, 0x_D8, 0x_91, 0x_9B, 0x_98, 0x_38,
	];

	helper(S, BASE, 47);
}
// endregion
// region: s_has_whitespaces_and_signs_and_820_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_820_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0A,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_5E, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_6B, 0x_60, 0x_68, 0x_3B, 0x_85, 0x_3C, 0x_91, 0x_01, 0x_B8, 0x_DC, 0x_5E, 0x_FB, 0x_DB, 0x_F1,
		0x_C3, 0x_ED, 0x_E1, 0x_1C, 0x_27, 0x_29, 0x_71, 0x_AA, 0x_72, 0x_AC, 0x_F6, 0x_77, 0x_AF, 0x_13, 0x_BA,
		0x_05, 0x_C0, 0x_87, 0x_45, 0x_7B, 0x_46, 0x_D8, 0x_2E, 0x_C8, 0x_E4, 0x_DD, 0x_18, 0x_43, 0x_58, 0x_4F,
		0x_B4, 0x_B5, 0x_92, 0x_E3, 0x_C5, 0x_76, 0x_49, 0x_9B, 0x_6E, 0x_D2, 0x_CB, 0x_9F, 0x_65, 0x_3F, 0x_8B,
		0x_37, 0x_98, 0x_6A, 0x_86, 0x_04, 0x_42, 0x_38, 0x_7F, 0x_26, 0x_A9, 0x_B0, 0x_95, 0x_FA,
	];

	helper(S, BASE, 820);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_954_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_8_954_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_46, 0x_DE, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_46, 0x_BF, 0x_04, 0x_60, 0x_F6, 0x_6C, 0x_A0, 0x_02, 0x_DC, 0x_47, 0x_4E, 0x_16, 0x_A3, 0x_C6,
		0x_D2, 0x_44, 0x_24, 0x_19, 0x_26, 0x_2F, 0x_59, 0x_CA, 0x_A2, 0x_B9, 0x_8C, 0x_1C, 0x_55, 0x_61, 0x_74,
		0x_A6, 0x_FD, 0x_4D, 0x_91, 0x_29, 0x_C3, 0x_3B, 0x_C1, 0x_EC, 0x_9D, 0x_DD, 0x_BD, 0x_51, 0x_39, 0x_8B,
		0x_FA, 0x_36, 0x_C7, 0x_F1, 0x_DE, 0x_E7, 0x_B0, 0x_B3, 0x_3A, 0x_DA, 0x_D6, 0x_5A, 0x_81, 0x_8E, 0x_32,
		0x_1F, 0x_DB, 0x_EB, 0x_B8, 0x_1A, 0x_BA, 0x_49, 0x_28, 0x_1B, 0x_62, 0x_66, 0x_E6, 0x_3E,
	];

	helper(S, BASE, 8_954);
}
// endregion
// region: s_has_whitespaces_and_signs_and_55_936_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_55_936_in_base_73() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_4A, 0x_07,
		0x_42,
	];
	const BASE: &[u8] = &[
		0x_CB, 0x_46, 0x_99, 0x_5C, 0x_A8, 0x_EF, 0x_D2, 0x_FD, 0x_AA, 0x_95, 0x_4A, 0x_57, 0x_18, 0x_10, 0x_E6,
		0x_85, 0x_67, 0x_7E, 0x_42, 0x_E2, 0x_5F, 0x_6B, 0x_7D, 0x_01, 0x_16, 0x_B4, 0x_43, 0x_73, 0x_A2, 0x_D5,
		0x_EB, 0x_E9, 0x_90, 0x_12, 0x_B9, 0x_70, 0x_07, 0x_DC, 0x_FA, 0x_F6, 0x_53, 0x_D7, 0x_8D, 0x_ED, 0x_8F,
		0x_03, 0x_24, 0x_CC, 0x_4F, 0x_B7, 0x_14, 0x_AE, 0x_CF, 0x_F4, 0x_54, 0x_72, 0x_69, 0x_DB, 0x_BD, 0x_7F,
		0x_C3, 0x_13, 0x_E1, 0x_48, 0x_66, 0x_4B, 0x_8B, 0x_A7, 0x_5D, 0x_E3, 0x_71, 0x_9E, 0x_EE,
	];

	helper(S, BASE, 55_936);
}
// endregion
// region: s_has_whitespaces_and_signs_and_730_583_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_730_583_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0D,
		0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0D,
		0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_94, 0x_9B, 0x_F5, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_E8, 0x_94, 0x_26, 0x_9C, 0x_ED, 0x_96, 0x_F5, 0x_A1, 0x_18, 0x_67, 0x_B8, 0x_04, 0x_CF, 0x_36, 0x_DD,
		0x_16, 0x_B3, 0x_BC, 0x_86, 0x_3F, 0x_27, 0x_42, 0x_77, 0x_7F, 0x_E4, 0x_70, 0x_90, 0x_19, 0x_CD, 0x_EE,
		0x_C0, 0x_5A, 0x_AD, 0x_55, 0x_6D, 0x_C8, 0x_9D, 0x_7C, 0x_F8, 0x_F4, 0x_92, 0x_9E, 0x_B1, 0x_25, 0x_61,
		0x_4F, 0x_35, 0x_2C, 0x_8D, 0x_D9, 0x_71, 0x_68, 0x_FF, 0x_FD, 0x_76, 0x_22, 0x_B7, 0x_4B, 0x_F7, 0x_2A,
		0x_6B, 0x_63, 0x_B6, 0x_32, 0x_9B, 0x_85, 0x_49, 0x_A8, 0x_E3, 0x_DA, 0x_E6, 0x_3B, 0x_CC,
	];

	helper(S, BASE, 730_583);
}
// endregion
// region: s_has_whitespaces_and_signs_and_6_915_557_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_6_915_557_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_09,
		0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_CB, 0x_4A, 0x_15, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_40, 0x_8C, 0x_A1, 0x_86, 0x_C7, 0x_7E, 0x_CA, 0x_98, 0x_D9, 0x_E2, 0x_9C, 0x_0F, 0x_34, 0x_E5,
		0x_81, 0x_42, 0x_CB, 0x_6E, 0x_24, 0x_AD, 0x_CE, 0x_5C, 0x_82, 0x_7A, 0x_90, 0x_49, 0x_39, 0x_3A, 0x_06,
		0x_F7, 0x_E4, 0x_BB, 0x_A8, 0x_FA, 0x_D3, 0x_1B, 0x_75, 0x_92, 0x_58, 0x_95, 0x_8E, 0x_E8, 0x_E3, 0x_D0,
		0x_66, 0x_AE, 0x_B0, 0x_67, 0x_DE, 0x_E6, 0x_01, 0x_15, 0x_2F, 0x_CD, 0x_07, 0x_4A, 0x_91, 0x_DA, 0x_21,
		0x_83, 0x_EE, 0x_70, 0x_A6, 0x_A2, 0x_2C, 0x_93, 0x_A3, 0x_F8, 0x_EC, 0x_26, 0x_68, 0x_74,
	];

	helper(S, BASE, 6_915_557);
}
// endregion
// region: s_has_whitespaces_and_signs_and_79_784_437_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_79_784_437_in_base_73() {
	const S: &[u8] = &[
		0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_FD, 0x_80, 0x_63, 0x_A8, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_7E, 0x_FD, 0x_ED, 0x_CD, 0x_06, 0x_63, 0x_14, 0x_3C, 0x_5C, 0x_94, 0x_39, 0x_3F, 0x_2A, 0x_2C,
		0x_8E, 0x_61, 0x_D0, 0x_3B, 0x_83, 0x_98, 0x_89, 0x_5F, 0x_8F, 0x_E0, 0x_50, 0x_AE, 0x_4D, 0x_F2, 0x_6B,
		0x_EF, 0x_A4, 0x_B8, 0x_CC, 0x_69, 0x_90, 0x_86, 0x_1F, 0x_DE, 0x_74, 0x_F1, 0x_9E, 0x_1C, 0x_97, 0x_60,
		0x_B1, 0x_29, 0x_67, 0x_85, 0x_FA, 0x_9B, 0x_9A, 0x_E3, 0x_F5, 0x_A8, 0x_35, 0x_F7, 0x_4F, 0x_A5, 0x_80,
		0x_81, 0x_04, 0x_88, 0x_34, 0x_E7, 0x_59, 0x_CB, 0x_28, 0x_A1, 0x_AC, 0x_DC, 0x_65, 0x_FB,
	];

	helper(S, BASE, 79_784_437);
}
// endregion
// region: s_has_whitespaces_and_signs_and_135_010_219_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_135_010_219_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_09,
		0x_20, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0D,
		0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_41, 0x_68, 0x_41, 0x_14, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_72, 0x_5E, 0x_E4, 0x_41, 0x_A8, 0x_7D, 0x_3B, 0x_9F, 0x_8B, 0x_83, 0x_65, 0x_5F, 0x_E9, 0x_E2,
		0x_95, 0x_DC, 0x_8A, 0x_B7, 0x_91, 0x_6E, 0x_5A, 0x_21, 0x_F5, 0x_BB, 0x_D5, 0x_56, 0x_29, 0x_8D, 0x_EE,
		0x_34, 0x_F1, 0x_2A, 0x_47, 0x_FF, 0x_E3, 0x_99, 0x_15, 0x_5D, 0x_10, 0x_D9, 0x_E6, 0x_3F, 0x_EA, 0x_4E,
		0x_84, 0x_CC, 0x_B2, 0x_76, 0x_81, 0x_12, 0x_2C, 0x_FA, 0x_AB, 0x_79, 0x_68, 0x_6A, 0x_A7, 0x_18, 0x_FC,
		0x_A6, 0x_67, 0x_A0, 0x_82, 0x_70, 0x_C2, 0x_A4, 0x_7A, 0x_32, 0x_97, 0x_75, 0x_66, 0x_07,
	];

	helper(S, BASE, 135_010_219);
}
// endregion
// region: s_has_whitespaces_and_signs_and_9_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_9_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_04,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_93, 0x_5A, 0x_23, 0x_3E, 0x_61, 0x_74, 0x_9E, 0x_7E, 0x_04, 0x_B1, 0x_63, 0x_D9, 0x_29, 0x_D0,
		0x_A1, 0x_CE, 0x_C0, 0x_AC, 0x_92, 0x_55, 0x_67, 0x_91, 0x_5B, 0x_05, 0x_73, 0x_9C, 0x_16, 0x_1A, 0x_ED,
		0x_0E, 0x_79, 0x_F7, 0x_C4, 0x_FB, 0x_DD, 0x_E5, 0x_C1, 0x_D5, 0x_08, 0x_01, 0x_57, 0x_48, 0x_EE, 0x_B2,
		0x_9A, 0x_94, 0x_EB, 0x_15, 0x_A5, 0x_56, 0x_D4, 0x_86, 0x_9D, 0x_D3, 0x_71, 0x_B6, 0x_D1, 0x_C7, 0x_EF,
		0x_CD, 0x_FE, 0x_C5, 0x_85, 0x_DE, 0x_DA, 0x_5D, 0x_E9, 0x_D8, 0x_59, 0x_4E, 0x_F0, 0x_66, 0x_49, 0x_78,
		0x_24, 0x_E1, 0x_8F, 0x_8A, 0x_90, 0x_CA, 0x_FF, 0x_89, 0x_95, 0x_C8, 0x_17, 0x_35, 0x_3C, 0x_18, 0x_75,
		0x_0F, 0x_53, 0x_6F, 0x_2F, 0x_BA, 0x_B9, 0x_5E, 0x_54, 0x_1E, 0x_AB, 0x_10, 0x_21, 0x_FC, 0x_1D, 0x_87,
		0x_BD, 0x_33, 0x_26, 0x_AD, 0x_E6, 0x_FD, 0x_B5, 0x_44,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_whitespaces_and_signs_and_29_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_29_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_0B,
		0x_0A, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_0B,
		0x_0B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_43, 0x_A8, 0x_50, 0x_1A, 0x_8F, 0x_A1, 0x_EB, 0x_06, 0x_1D, 0x_3F, 0x_9E, 0x_BE, 0x_4E, 0x_07, 0x_B7,
		0x_9A, 0x_57, 0x_67, 0x_63, 0x_53, 0x_54, 0x_E4, 0x_E1, 0x_28, 0x_B9, 0x_9D, 0x_E2, 0x_4B, 0x_31, 0x_41,
		0x_33, 0x_15, 0x_AC, 0x_99, 0x_AE, 0x_6B, 0x_81, 0x_FE, 0x_D1, 0x_38, 0x_40, 0x_3B, 0x_8A, 0x_18, 0x_6F,
		0x_FB, 0x_78, 0x_55, 0x_A9, 0x_24, 0x_E0, 0x_4C, 0x_D5, 0x_37, 0x_2E, 0x_62, 0x_C4, 0x_FC, 0x_12, 0x_B8,
		0x_6D, 0x_BB, 0x_1E, 0x_E5, 0x_C3, 0x_A7, 0x_86, 0x_FA, 0x_C9, 0x_93, 0x_DE, 0x_EE, 0x_46, 0x_44, 0x_D7,
		0x_7D, 0x_E8, 0x_5B, 0x_5F, 0x_7E, 0x_48, 0x_F5, 0x_4F, 0x_97, 0x_F0, 0x_CE, 0x_F6, 0x_EC, 0x_2A, 0x_10,
		0x_C7, 0x_C0, 0x_90, 0x_C2, 0x_85, 0x_8E, 0x_E3, 0x_C8, 0x_C5, 0x_A0, 0x_B4, 0x_6A, 0x_19, 0x_26, 0x_D3,
		0x_01, 0x_29, 0x_69, 0x_E9, 0x_CD, 0x_77, 0x_9C, 0x_FF,
	];

	helper(S, BASE, 29);
}
// endregion
// region: s_has_whitespaces_and_signs_and_292_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_292_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_43, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_AE, 0x_43, 0x_11, 0x_E7, 0x_9B, 0x_D4, 0x_D8, 0x_C7, 0x_8B, 0x_F5, 0x_87, 0x_3D, 0x_B5, 0x_DA,
		0x_23, 0x_DD, 0x_54, 0x_89, 0x_F4, 0x_1C, 0x_BC, 0x_22, 0x_C2, 0x_86, 0x_5B, 0x_21, 0x_13, 0x_9C, 0x_F8,
		0x_A5, 0x_69, 0x_AD, 0x_5D, 0x_7F, 0x_3F, 0x_34, 0x_DF, 0x_8C, 0x_FB, 0x_50, 0x_E3, 0x_81, 0x_0E, 0x_85,
		0x_A6, 0x_B7, 0x_AB, 0x_CD, 0x_EA, 0x_CC, 0x_8E, 0x_FA, 0x_A9, 0x_B6, 0x_C4, 0x_C9, 0x_BA, 0x_1E, 0x_EE,
		0x_55, 0x_B1, 0x_DE, 0x_EC, 0x_A4, 0x_01, 0x_79, 0x_CE, 0x_A8, 0x_68, 0x_C3, 0x_7D, 0x_F3, 0x_4D, 0x_ED,
		0x_3A, 0x_E8, 0x_10, 0x_E0, 0x_0F, 0x_AC, 0x_BB, 0x_D0, 0x_1A, 0x_5C, 0x_C8, 0x_70, 0x_4E, 0x_56, 0x_F0,
		0x_38, 0x_30, 0x_6C, 0x_27, 0x_9A, 0x_44, 0x_D6, 0x_B3, 0x_72, 0x_29, 0x_24, 0x_2E, 0x_51, 0x_83, 0x_99,
		0x_66, 0x_73, 0x_FF, 0x_32, 0x_31, 0x_12, 0x_2A, 0x_93,
	];

	helper(S, BASE, 292);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_501_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_8_501_in_base_113() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_A2, 0x_47,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_75, 0x_DA, 0x_D1, 0x_6D, 0x_FC, 0x_56, 0x_67, 0x_77, 0x_C1, 0x_4C, 0x_4F, 0x_13, 0x_1F, 0x_EF,
		0x_A1, 0x_85, 0x_61, 0x_EE, 0x_28, 0x_FA, 0x_A6, 0x_D9, 0x_31, 0x_DB, 0x_88, 0x_47, 0x_B5, 0x_12, 0x_73,
		0x_AA, 0x_2E, 0x_FD, 0x_82, 0x_E0, 0x_04, 0x_2F, 0x_74, 0x_17, 0x_DC, 0x_3E, 0x_1E, 0x_BA, 0x_7B, 0x_5B,
		0x_9A, 0x_58, 0x_1A, 0x_24, 0x_CD, 0x_38, 0x_84, 0x_5F, 0x_CA, 0x_90, 0x_16, 0x_80, 0x_44, 0x_2A, 0x_3C,
		0x_BE, 0x_1D, 0x_D5, 0x_D2, 0x_95, 0x_CC, 0x_C0, 0x_42, 0x_D7, 0x_27, 0x_3A, 0x_B4, 0x_BD, 0x_AE, 0x_A0,
		0x_A2, 0x_ED, 0x_53, 0x_41, 0x_A9, 0x_32, 0x_76, 0x_B9, 0x_EB, 0x_3F, 0x_78, 0x_EC, 0x_FB, 0x_55, 0x_A5,
		0x_39, 0x_C9, 0x_E7, 0x_02, 0x_93, 0x_B3, 0x_14, 0x_19, 0x_E2, 0x_26, 0x_E5, 0x_8D, 0x_BC, 0x_65, 0x_51,
		0x_6B, 0x_BB, 0x_23, 0x_A3, 0x_01, 0x_C3, 0x_AB, 0x_8F,
	];

	helper(S, BASE, 8_501);
}
// endregion
// region: s_has_whitespaces_and_signs_and_28_782_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_28_782_in_base_113() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0A,
		0x_20, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_16, 0x_8A, 0x_81,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_AF, 0x_16, 0x_45, 0x_05, 0x_51, 0x_BA, 0x_36, 0x_83, 0x_D5, 0x_B6, 0x_80, 0x_9C, 0x_12, 0x_B9,
		0x_A4, 0x_1D, 0x_18, 0x_A8, 0x_EB, 0x_A1, 0x_50, 0x_B8, 0x_23, 0x_8D, 0x_AE, 0x_75, 0x_B3, 0x_8A, 0x_53,
		0x_C3, 0x_D8, 0x_21, 0x_14, 0x_93, 0x_4B, 0x_D4, 0x_7F, 0x_70, 0x_EA, 0x_9B, 0x_44, 0x_4C, 0x_F0, 0x_CE,
		0x_F2, 0x_6F, 0x_FA, 0x_4A, 0x_A6, 0x_C4, 0x_5B, 0x_34, 0x_99, 0x_FC, 0x_ED, 0x_7A, 0x_FE, 0x_C5, 0x_B0,
		0x_3D, 0x_29, 0x_6D, 0x_A2, 0x_8F, 0x_AA, 0x_26, 0x_78, 0x_D7, 0x_F9, 0x_49, 0x_D2, 0x_FF, 0x_63, 0x_97,
		0x_10, 0x_A5, 0x_96, 0x_F5, 0x_13, 0x_81, 0x_DC, 0x_F1, 0x_15, 0x_F3, 0x_06, 0x_22, 0x_35, 0x_74, 0x_61,
		0x_28, 0x_1B, 0x_46, 0x_1F, 0x_CF, 0x_58, 0x_03, 0x_59, 0x_41, 0x_F8, 0x_5D, 0x_DA, 0x_37, 0x_8E, 0x_07,
		0x_B4, 0x_BB, 0x_B2, 0x_73, 0x_19, 0x_EC, 0x_62, 0x_25,
	];

	helper(S, BASE, 28_782);
}
// endregion
// region: s_has_whitespaces_and_signs_and_630_145_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_630_145_in_base_113() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0C,
		0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_20, 0x_0B,
		0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_86, 0x_F0, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_58, 0x_8D, 0x_23, 0x_14, 0x_9B, 0x_B2, 0x_A8, 0x_ED, 0x_EF, 0x_AB, 0x_31, 0x_8F, 0x_7A, 0x_EE,
		0x_11, 0x_F9, 0x_7C, 0x_04, 0x_B7, 0x_7E, 0x_D6, 0x_13, 0x_BC, 0x_3F, 0x_34, 0x_71, 0x_36, 0x_35, 0x_91,
		0x_C8, 0x_19, 0x_D9, 0x_A0, 0x_21, 0x_4C, 0x_52, 0x_72, 0x_56, 0x_F0, 0x_85, 0x_96, 0x_FE, 0x_DE, 0x_9F,
		0x_17, 0x_EA, 0x_1D, 0x_03, 0x_86, 0x_70, 0x_05, 0x_A6, 0x_A3, 0x_E0, 0x_BB, 0x_7B, 0x_BE, 0x_4F, 0x_27,
		0x_E4, 0x_CF, 0x_3D, 0x_A5, 0x_5B, 0x_24, 0x_4E, 0x_54, 0x_8A, 0x_44, 0x_25, 0x_57, 0x_B0, 0x_53, 0x_9E,
		0x_E6, 0x_92, 0x_F2, 0x_8C, 0x_84, 0x_A4, 0x_0E, 0x_CD, 0x_16, 0x_AA, 0x_07, 0x_CC, 0x_12, 0x_49, 0x_5E,
		0x_B5, 0x_66, 0x_5A, 0x_48, 0x_4D, 0x_6C, 0x_06, 0x_55, 0x_BF, 0x_28, 0x_B8, 0x_FD, 0x_30, 0x_63, 0x_29,
		0x_74, 0x_E5, 0x_B3, 0x_3A, 0x_AD, 0x_CA, 0x_47, 0x_D2,
	];

	helper(S, BASE, 630_145);
}
// endregion
// region: s_has_whitespaces_and_signs_and_9_670_315_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_9_670_315_in_base_113() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0C,
		0x_20, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0D,
		0x_0A, 0x_09, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_76, 0x_22, 0x_63, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_90, 0x_4B, 0x_77, 0x_95, 0x_7A, 0x_76, 0x_07, 0x_3C, 0x_AA, 0x_CC, 0x_7E, 0x_86, 0x_D2, 0x_43,
		0x_13, 0x_3A, 0x_21, 0x_98, 0x_4E, 0x_19, 0x_56, 0x_BE, 0x_51, 0x_06, 0x_33, 0x_27, 0x_3F, 0x_0E, 0x_CD,
		0x_10, 0x_48, 0x_03, 0x_65, 0x_11, 0x_9A, 0x_CB, 0x_63, 0x_BD, 0x_A3, 0x_B4, 0x_E6, 0x_FD, 0x_DC, 0x_9E,
		0x_B7, 0x_FC, 0x_B3, 0x_42, 0x_6D, 0x_15, 0x_5A, 0x_47, 0x_05, 0x_75, 0x_1B, 0x_57, 0x_7D, 0x_AD, 0x_8F,
		0x_8B, 0x_62, 0x_28, 0x_67, 0x_4A, 0x_6B, 0x_6E, 0x_D6, 0x_9B, 0x_ED, 0x_12, 0x_F7, 0x_DD, 0x_AB, 0x_7B,
		0x_96, 0x_A2, 0x_E1, 0x_4F, 0x_22, 0x_7C, 0x_F5, 0x_E9, 0x_71, 0x_EB, 0x_BC, 0x_BB, 0x_3D, 0x_24, 0x_91,
		0x_2A, 0x_AF, 0x_5C, 0x_4D, 0x_7F, 0x_E8, 0x_D5, 0x_A1, 0x_A7, 0x_6F, 0x_F3, 0x_FF, 0x_87, 0x_46, 0x_1C,
		0x_0F, 0x_16, 0x_01, 0x_34, 0x_C0, 0x_C8, 0x_B6, 0x_E0,
	];

	helper(S, BASE, 9_670_315);
}
// endregion
// region: s_has_whitespaces_and_signs_and_11_038_609_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_11_038_609_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_87,
		0x_C5, 0x_D5, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_B5, 0x_81, 0x_01, 0x_FD, 0x_BE, 0x_84, 0x_87, 0x_7B, 0x_4F, 0x_B9, 0x_3A, 0x_A6, 0x_44, 0x_88,
		0x_C4, 0x_4C, 0x_18, 0x_27, 0x_57, 0x_2A, 0x_77, 0x_AC, 0x_68, 0x_A2, 0x_5B, 0x_1C, 0x_08, 0x_6F, 0x_F5,
		0x_8B, 0x_0E, 0x_92, 0x_1B, 0x_47, 0x_85, 0x_8A, 0x_50, 0x_73, 0x_D3, 0x_8F, 0x_8D, 0x_6D, 0x_5E, 0x_DB,
		0x_B6, 0x_39, 0x_CE, 0x_EF, 0x_EA, 0x_9F, 0x_52, 0x_CD, 0x_B3, 0x_D5, 0x_75, 0x_F8, 0x_62, 0x_AD, 0x_23,
		0x_D1, 0x_13, 0x_BF, 0x_E3, 0x_31, 0x_11, 0x_04, 0x_4D, 0x_7F, 0x_B8, 0x_1E, 0x_06, 0x_2F, 0x_C5, 0x_AA,
		0x_90, 0x_F2, 0x_AF, 0x_E6, 0x_C0, 0x_33, 0x_5F, 0x_48, 0x_7E, 0x_EC, 0x_5C, 0x_5A, 0x_3C, 0x_35, 0x_1D,
		0x_53, 0x_B0, 0x_70, 0x_93, 0x_B2, 0x_64, 0x_E8, 0x_DD, 0x_65, 0x_94, 0x_F6, 0x_E0, 0x_FB, 0x_4B, 0x_36,
		0x_BA, 0x_49, 0x_D9, 0x_ED, 0x_96, 0x_CC, 0x_3E, 0x_9A,
	];

	helper(S, BASE, 11_038_609);
}
// endregion
// region: s_has_whitespaces_and_signs_and_551_644_138_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_551_644_138_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0B,
		0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_0F, 0x_B4, 0x_70, 0x_4B, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_DD, 0x_F5, 0x_0F, 0x_1A, 0x_2A, 0x_10, 0x_21, 0x_1D, 0x_17, 0x_5A, 0x_02, 0x_14, 0x_C0, 0x_C8,
		0x_42, 0x_3B, 0x_19, 0x_B5, 0x_93, 0x_7A, 0x_44, 0x_C4, 0x_E6, 0x_CE, 0x_5F, 0x_37, 0x_24, 0x_FD, 0x_E9,
		0x_E1, 0x_C6, 0x_7E, 0x_25, 0x_5D, 0x_70, 0x_92, 0x_BA, 0x_13, 0x_39, 0x_A2, 0x_28, 0x_4D, 0x_B4, 0x_E5,
		0x_8B, 0x_89, 0x_6E, 0x_C5, 0x_99, 0x_58, 0x_D4, 0x_DC, 0x_16, 0x_68, 0x_90, 0x_86, 0x_E3, 0x_FB, 0x_BE,
		0x_46, 0x_7F, 0x_B0, 0x_B3, 0x_3F, 0x_0E, 0x_78, 0x_A1, 0x_BB, 0x_4F, 0x_AF, 0x_F4, 0x_A6, 0x_66, 0x_59,
		0x_B7, 0x_F0, 0x_47, 0x_C9, 0x_60, 0x_56, 0x_9E, 0x_CB, 0x_8F, 0x_15, 0x_97, 0x_2E, 0x_65, 0x_04, 0x_A0,
		0x_F7, 0x_79, 0x_8A, 0x_4B, 0x_F6, 0x_01, 0x_A7, 0x_71, 0x_73, 0x_FC, 0x_8E, 0x_85, 0x_EE, 0x_36, 0x_FA,
		0x_3C, 0x_35, 0x_BD, 0x_80, 0x_6B, 0x_54, 0x_8D, 0x_76,
	];

	helper(S, BASE, 551_644_138);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_8_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0D,
		0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_3F, 0x_E0, 0x_07, 0x_6A, 0x_87, 0x_DE, 0x_1A, 0x_7C, 0x_5D, 0x_E9, 0x_ED, 0x_8F, 0x_E5, 0x_28,
		0x_92, 0x_47, 0x_86, 0x_D8, 0x_A5, 0x_94, 0x_A9, 0x_42, 0x_9E, 0x_3D, 0x_79, 0x_FC, 0x_E6, 0x_82, 0x_BB,
		0x_29, 0x_05, 0x_AC, 0x_51, 0x_F7, 0x_37, 0x_B1, 0x_F2, 0x_40, 0x_33, 0x_A1, 0x_41, 0x_CF, 0x_23, 0x_83,
		0x_53, 0x_63, 0x_BD, 0x_1D, 0x_32, 0x_5C, 0x_EB, 0x_1E, 0x_F1, 0x_AD, 0x_3C, 0x_4D, 0x_BC, 0x_73, 0x_99,
		0x_75, 0x_B7, 0x_F3, 0x_84, 0x_4A, 0x_AB, 0x_64, 0x_C9, 0x_0E, 0x_24, 0x_35, 0x_46, 0x_31, 0x_C0, 0x_F6,
		0x_91, 0x_0F, 0x_9D, 0x_8A, 0x_BF, 0x_58, 0x_43, 0x_6D, 0x_10, 0x_03, 0x_68, 0x_80, 0x_71, 0x_B3, 0x_2E,
		0x_D1, 0x_CE, 0x_21, 0x_88, 0x_12, 0x_AA, 0x_85, 0x_FE, 0x_D3, 0x_9F, 0x_81, 0x_E1, 0x_65, 0x_CC, 0x_C7,
		0x_4B, 0x_C3, 0x_72, 0x_4E, 0x_DD, 0x_61, 0x_EE, 0x_55, 0x_2C, 0x_4F, 0x_A8, 0x_B0, 0x_6E, 0x_9B, 0x_49,
		0x_EF, 0x_F4, 0x_5F, 0x_74, 0x_C6, 0x_02, 0x_78, 0x_B2, 0x_3E, 0x_C1, 0x_E2, 0x_3B, 0x_CA, 0x_1B, 0x_77,
		0x_A3, 0x_D7, 0x_89, 0x_B9, 0x_DF, 0x_AE, 0x_45, 0x_11, 0x_8D, 0x_76, 0x_D4, 0x_6C, 0x_39, 0x_C2, 0x_FB,
		0x_AF, 0x_A0, 0x_BE, 0x_6B, 0x_14, 0x_5E, 0x_30, 0x_70, 0x_26, 0x_22, 0x_B6, 0x_56, 0x_50, 0x_16, 0x_27,
		0x_E3, 0x_97, 0x_9A, 0x_FF, 0x_8E, 0x_25, 0x_7B, 0x_7D, 0x_8B, 0x_5A, 0x_C5, 0x_6F, 0x_7F, 0x_E7, 0x_B4,
		0x_98, 0x_D5, 0x_44, 0x_2F, 0x_C8, 0x_8C, 0x_18, 0x_A7, 0x_06, 0x_1F, 0x_E4, 0x_15, 0x_38,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_32_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_32_in_base_193() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_19, 0x_12, 0x_5C, 0x_76, 0x_C6, 0x_ED, 0x_64, 0x_E6, 0x_06, 0x_CA, 0x_57, 0x_DD, 0x_4A, 0x_BF,
		0x_04, 0x_2A, 0x_AE, 0x_16, 0x_B0, 0x_FD, 0x_90, 0x_4E, 0x_9B, 0x_6B, 0x_AC, 0x_A2, 0x_61, 0x_4F, 0x_F8,
		0x_94, 0x_F7, 0x_33, 0x_03, 0x_8C, 0x_A5, 0x_87, 0x_48, 0x_D4, 0x_27, 0x_E4, 0x_E2, 0x_EC, 0x_FC, 0x_6D,
		0x_CF, 0x_EF, 0x_D2, 0x_0F, 0x_53, 0x_9A, 0x_44, 0x_D5, 0x_A3, 0x_4B, 0x_C5, 0x_E1, 0x_AF, 0x_7E, 0x_72,
		0x_35, 0x_49, 0x_D1, 0x_A7, 0x_98, 0x_17, 0x_8B, 0x_5D, 0x_52, 0x_0E, 0x_A6, 0x_02, 0x_01, 0x_13, 0x_DB,
		0x_80, 0x_92, 0x_6F, 0x_56, 0x_24, 0x_DA, 0x_D0, 0x_81, 0x_9F, 0x_3B, 0x_C2, 0x_1F, 0x_2E, 0x_A9, 0x_F5,
		0x_4C, 0x_F1, 0x_DC, 0x_A8, 0x_43, 0x_2F, 0x_37, 0x_CD, 0x_D6, 0x_1C, 0x_F9, 0x_D3, 0x_3E, 0x_70, 0x_D9,
		0x_3F, 0x_14, 0x_D8, 0x_89, 0x_28, 0x_41, 0x_62, 0x_1E, 0x_2C, 0x_A0, 0x_29, 0x_8A, 0x_F0, 0x_45, 0x_7B,
		0x_59, 0x_95, 0x_A1, 0x_D7, 0x_BB, 0x_83, 0x_58, 0x_C1, 0x_15, 0x_B4, 0x_E3, 0x_68, 0x_C3, 0x_69, 0x_50,
		0x_FF, 0x_67, 0x_86, 0x_FB, 0x_47, 0x_FE, 0x_05, 0x_84, 0x_8D, 0x_7C, 0x_E7, 0x_F6, 0x_42, 0x_39, 0x_07,
		0x_DF, 0x_1A, 0x_66, 0x_40, 0x_65, 0x_36, 0x_E5, 0x_8F, 0x_AD, 0x_6A, 0x_26, 0x_46, 0x_74, 0x_3C, 0x_B9,
		0x_C4, 0x_B8, 0x_60, 0x_7F, 0x_E8, 0x_9C, 0x_B5, 0x_F3, 0x_C9, 0x_F4, 0x_10, 0x_5F, 0x_96, 0x_38, 0x_51,
		0x_B2, 0x_8E, 0x_9E, 0x_75, 0x_5B, 0x_91, 0x_4D, 0x_AB, 0x_08, 0x_B3, 0x_22, 0x_1B, 0x_34,
	];

	helper(S, BASE, 32);
}
// endregion
// region: s_has_whitespaces_and_signs_and_254_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_254_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0B,
		0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_53, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_53, 0x_1A, 0x_F3, 0x_BB, 0x_13, 0x_6A, 0x_FF, 0x_C4, 0x_8D, 0x_43, 0x_87, 0x_27, 0x_22, 0x_F5,
		0x_79, 0x_32, 0x_A9, 0x_B0, 0x_1E, 0x_95, 0x_D5, 0x_EE, 0x_7A, 0x_A2, 0x_CC, 0x_02, 0x_69, 0x_E5, 0x_82,
		0x_88, 0x_5C, 0x_5B, 0x_E7, 0x_14, 0x_C0, 0x_6E, 0x_70, 0x_E2, 0x_12, 0x_3E, 0x_5D, 0x_AC, 0x_54, 0x_2E,
		0x_8C, 0x_94, 0x_83, 0x_5A, 0x_1C, 0x_E3, 0x_08, 0x_C5, 0x_DA, 0x_84, 0x_49, 0x_62, 0x_73, 0x_6B, 0x_8F,
		0x_26, 0x_01, 0x_66, 0x_90, 0x_0E, 0x_0F, 0x_DD, 0x_24, 0x_FB, 0x_CD, 0x_58, 0x_A4, 0x_E6, 0x_C2, 0x_28,
		0x_9B, 0x_2C, 0x_8E, 0x_D7, 0x_D1, 0x_38, 0x_52, 0x_61, 0x_DC, 0x_BD, 0x_E8, 0x_BE, 0x_F9, 0x_4E, 0x_3F,
		0x_7C, 0x_9C, 0x_92, 0x_57, 0x_1B, 0x_C6, 0x_76, 0x_18, 0x_33, 0x_5E, 0x_C8, 0x_A0, 0x_EA, 0x_25, 0x_AE,
		0x_6D, 0x_F7, 0x_D0, 0x_A3, 0x_56, 0x_4D, 0x_48, 0x_CF, 0x_77, 0x_FC, 0x_4A, 0x_30, 0x_1D, 0x_99, 0x_8A,
		0x_A6, 0x_68, 0x_05, 0x_BC, 0x_23, 0x_8B, 0x_93, 0x_C7, 0x_B5, 0x_B9, 0x_45, 0x_2F, 0x_67, 0x_F6, 0x_3D,
		0x_07, 0x_15, 0x_C9, 0x_44, 0x_96, 0x_A8, 0x_5F, 0x_D6, 0x_31, 0x_17, 0x_59, 0x_7F, 0x_D3, 0x_F8, 0x_7B,
		0x_78, 0x_40, 0x_04, 0x_7E, 0x_06, 0x_81, 0x_97, 0x_AF, 0x_60, 0x_9A, 0x_E9, 0x_EC, 0x_11, 0x_98, 0x_65,
		0x_F1, 0x_C1, 0x_80, 0x_A5, 0x_7D, 0x_A7, 0x_2A, 0x_74, 0x_FE, 0x_19, 0x_EB, 0x_4C, 0x_36, 0x_DE, 0x_C3,
		0x_EF, 0x_10, 0x_CB, 0x_1F, 0x_D4, 0x_E1, 0x_AD, 0x_D9, 0x_46, 0x_AB, 0x_6C, 0x_89, 0x_F2,
	];

	helper(S, BASE, 254);
}
// endregion
// region: s_has_whitespaces_and_signs_and_6_976_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_6_976_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_35, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_CB, 0x_38, 0x_FE, 0x_4B, 0x_FA, 0x_9E, 0x_D4, 0x_5B, 0x_5A, 0x_EE, 0x_8E, 0x_C0, 0x_FD, 0x_63,
		0x_C8, 0x_59, 0x_ED, 0x_B3, 0x_F7, 0x_7A, 0x_E0, 0x_8B, 0x_B5, 0x_A2, 0x_6E, 0x_65, 0x_1F, 0x_1B, 0x_86,
		0x_7F, 0x_88, 0x_36, 0x_BD, 0x_AB, 0x_6F, 0x_35, 0x_A4, 0x_2C, 0x_B8, 0x_57, 0x_44, 0x_AE, 0x_E7, 0x_B7,
		0x_45, 0x_F5, 0x_25, 0x_A6, 0x_67, 0x_33, 0x_8F, 0x_8D, 0x_A1, 0x_80, 0x_0F, 0x_96, 0x_34, 0x_C9, 0x_8C,
		0x_F4, 0x_E8, 0x_D3, 0x_84, 0x_18, 0x_42, 0x_EF, 0x_23, 0x_91, 0x_19, 0x_48, 0x_3D, 0x_F6, 0x_BA, 0x_5E,
		0x_73, 0x_03, 0x_83, 0x_41, 0x_E9, 0x_37, 0x_29, 0x_AF, 0x_31, 0x_C1, 0x_F8, 0x_4E, 0x_24, 0x_E1, 0x_2F,
		0x_28, 0x_4F, 0x_D5, 0x_32, 0x_3B, 0x_64, 0x_79, 0x_70, 0x_82, 0x_AA, 0x_9C, 0x_43, 0x_01, 0x_F1, 0x_A0,
		0x_AC, 0x_FB, 0x_EB, 0x_F3, 0x_77, 0x_10, 0x_D9, 0x_6D, 0x_4A, 0x_08, 0x_22, 0x_47, 0x_93, 0x_BB, 0x_30,
		0x_CE, 0x_DD, 0x_58, 0x_6C, 0x_50, 0x_CA, 0x_EA, 0x_A9, 0x_02, 0x_D0, 0x_FF, 0x_2E, 0x_3E, 0x_97, 0x_1D,
		0x_D7, 0x_5D, 0x_DE, 0x_99, 0x_3C, 0x_68, 0x_D8, 0x_51, 0x_C4, 0x_60, 0x_27, 0x_B6, 0x_5F, 0x_39, 0x_40,
		0x_76, 0x_A8, 0x_4D, 0x_F9, 0x_9A, 0x_15, 0x_46, 0x_F2, 0x_BC, 0x_AD, 0x_71, 0x_62, 0x_C7, 0x_81, 0x_49,
		0x_52, 0x_EC, 0x_C3, 0x_11, 0x_0E, 0x_55, 0x_B4, 0x_78, 0x_53, 0x_98, 0x_DC, 0x_B9, 0x_7E, 0x_12, 0x_FC,
		0x_9B, 0x_3F, 0x_06, 0x_A5, 0x_89, 0x_92, 0x_6A, 0x_6B, 0x_B2, 0x_BF, 0x_95, 0x_04, 0x_54,
	];

	helper(S, BASE, 6_976);
}
// endregion
// region: s_has_whitespaces_and_signs_and_35_033_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_35_033_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0B,
		0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_09,
		0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_B1, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_A5, 0x_42, 0x_B3, 0x_AF, 0x_D8, 0x_AC, 0x_98, 0x_5E, 0x_A6, 0x_A1, 0x_80, 0x_B4, 0x_15, 0x_08, 0x_AD,
		0x_DF, 0x_C2, 0x_BE, 0x_FF, 0x_C8, 0x_87, 0x_8E, 0x_D9, 0x_21, 0x_04, 0x_4A, 0x_E1, 0x_95, 0x_19, 0x_9C,
		0x_3A, 0x_D3, 0x_57, 0x_35, 0x_67, 0x_3F, 0x_C3, 0x_27, 0x_6A, 0x_0F, 0x_8D, 0x_94, 0x_63, 0x_18, 0x_7C,
		0x_F2, 0x_73, 0x_46, 0x_AB, 0x_66, 0x_6B, 0x_BC, 0x_65, 0x_AE, 0x_5A, 0x_56, 0x_E2, 0x_5C, 0x_F9, 0x_A0,
		0x_31, 0x_F5, 0x_8C, 0x_81, 0x_1A, 0x_54, 0x_17, 0x_07, 0x_DD, 0x_C4, 0x_6C, 0x_7D, 0x_38, 0x_C1, 0x_EA,
		0x_25, 0x_FA, 0x_DC, 0x_7B, 0x_4F, 0x_D1, 0x_13, 0x_58, 0x_10, 0x_05, 0x_EC, 0x_41, 0x_F1, 0x_24, 0x_37,
		0x_97, 0x_3B, 0x_F4, 0x_8A, 0x_11, 0x_BF, 0x_B5, 0x_26, 0x_88, 0x_7F, 0x_1D, 0x_85, 0x_53, 0x_D0, 0x_5B,
		0x_B2, 0x_4C, 0x_82, 0x_1B, 0x_51, 0x_B8, 0x_E7, 0x_9A, 0x_CD, 0x_16, 0x_1C, 0x_2C, 0x_7E, 0x_62, 0x_A9,
		0x_A2, 0x_6D, 0x_EE, 0x_49, 0x_3C, 0x_B9, 0x_75, 0x_2E, 0x_B7, 0x_43, 0x_33, 0x_E9, 0x_A8, 0x_52, 0x_D2,
		0x_D6, 0x_AA, 0x_2A, 0x_22, 0x_BA, 0x_90, 0x_99, 0x_28, 0x_48, 0x_C7, 0x_3D, 0x_69, 0x_A7, 0x_79, 0x_96,
		0x_06, 0x_E4, 0x_86, 0x_9E, 0x_12, 0x_CC, 0x_C5, 0x_1F, 0x_FE, 0x_B0, 0x_E8, 0x_F0, 0x_50, 0x_E5, 0x_A3,
		0x_30, 0x_36, 0x_D5, 0x_F6, 0x_DE, 0x_34, 0x_B6, 0x_EB, 0x_60, 0x_68, 0x_5D, 0x_FD, 0x_84, 0x_14, 0x_29,
		0x_59, 0x_B1, 0x_3E, 0x_0E, 0x_8B, 0x_23, 0x_FB, 0x_5F, 0x_4B, 0x_9F, 0x_6E, 0x_39, 0x_7A,
	];

	helper(S, BASE, 35_033);
}
// endregion
// region: s_has_whitespaces_and_signs_and_331_029_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_331_029_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_09,
		0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_EE, 0x_A7, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_FE, 0x_B8, 0x_99, 0x_6F, 0x_BD, 0x_D3, 0x_6C, 0x_5A, 0x_EE, 0x_D8, 0x_D2, 0x_5D, 0x_E2, 0x_FF, 0x_CB,
		0x_22, 0x_1C, 0x_72, 0x_14, 0x_74, 0x_6E, 0x_5B, 0x_3E, 0x_DF, 0x_56, 0x_CD, 0x_47, 0x_98, 0x_A3, 0x_C3,
		0x_18, 0x_0F, 0x_51, 0x_92, 0x_62, 0x_3D, 0x_61, 0x_15, 0x_CA, 0x_36, 0x_77, 0x_3F, 0x_84, 0x_30, 0x_94,
		0x_40, 0x_8D, 0x_8B, 0x_65, 0x_F6, 0x_CC, 0x_B1, 0x_DD, 0x_AA, 0x_4B, 0x_D4, 0x_A2, 0x_DA, 0x_BC, 0x_F2,
		0x_A6, 0x_33, 0x_87, 0x_6A, 0x_5E, 0x_7C, 0x_E4, 0x_8A, 0x_1A, 0x_55, 0x_10, 0x_93, 0x_7E, 0x_D6, 0x_BE,
		0x_02, 0x_0E, 0x_9B, 0x_3A, 0x_BB, 0x_7D, 0x_2F, 0x_EB, 0x_B4, 0x_E5, 0x_F7, 0x_F9, 0x_88, 0x_F3, 0x_DB,
		0x_75, 0x_13, 0x_EC, 0x_4F, 0x_49, 0x_9C, 0x_AF, 0x_63, 0x_B3, 0x_26, 0x_AC, 0x_28, 0x_AB, 0x_E1, 0x_44,
		0x_86, 0x_DC, 0x_A5, 0x_07, 0x_4C, 0x_BF, 0x_80, 0x_4D, 0x_89, 0x_52, 0x_1B, 0x_3C, 0x_9E, 0x_48, 0x_8E,
		0x_D9, 0x_54, 0x_95, 0x_38, 0x_12, 0x_AD, 0x_E7, 0x_58, 0x_42, 0x_64, 0x_57, 0x_31, 0x_E0, 0x_03, 0x_B5,
		0x_6B, 0x_C0, 0x_39, 0x_25, 0x_B2, 0x_A9, 0x_7A, 0x_AE, 0x_DE, 0x_29, 0x_85, 0x_ED, 0x_9A, 0x_C2, 0x_45,
		0x_A1, 0x_53, 0x_50, 0x_46, 0x_73, 0x_82, 0x_01, 0x_70, 0x_76, 0x_CE, 0x_32, 0x_69, 0x_CF, 0x_59, 0x_81,
		0x_11, 0x_B9, 0x_A4, 0x_43, 0x_6D, 0x_A8, 0x_A7, 0x_68, 0x_E8, 0x_83, 0x_8F, 0x_37, 0x_C5, 0x_EF, 0x_23,
		0x_EA, 0x_F0, 0x_D1, 0x_9D, 0x_05, 0x_90, 0x_8C, 0x_C6, 0x_08, 0x_19, 0x_C1, 0x_78, 0x_06,
	];

	helper(S, BASE, 331_029);
}
// endregion
// region: s_has_whitespaces_and_signs_and_6_830_763_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_6_830_763_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_20,
		0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_0A,
		0x_0D, 0x_09, 0x_09, 0x_0B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_B7, 0x_13, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_DB, 0x_D4, 0x_21, 0x_A1, 0x_02, 0x_AF, 0x_91, 0x_9A, 0x_61, 0x_51, 0x_39, 0x_16, 0x_F7, 0x_B6,
		0x_0E, 0x_B3, 0x_C4, 0x_89, 0x_C5, 0x_28, 0x_EB, 0x_19, 0x_95, 0x_5D, 0x_48, 0x_44, 0x_76, 0x_35, 0x_1B,
		0x_78, 0x_8C, 0x_43, 0x_93, 0x_1C, 0x_F5, 0x_E4, 0x_AD, 0x_25, 0x_03, 0x_4E, 0x_E8, 0x_86, 0x_F8, 0x_54,
		0x_23, 0x_A7, 0x_57, 0x_CD, 0x_14, 0x_9F, 0x_8A, 0x_5F, 0x_2F, 0x_EA, 0x_01, 0x_A3, 0x_9D, 0x_C2, 0x_3D,
		0x_FD, 0x_90, 0x_E5, 0x_6C, 0x_A5, 0x_F0, 0x_E0, 0x_49, 0x_63, 0x_D8, 0x_CA, 0x_BD, 0x_BB, 0x_13, 0x_17,
		0x_B1, 0x_5B, 0x_D5, 0x_A4, 0x_46, 0x_DF, 0x_C8, 0x_56, 0x_59, 0x_ED, 0x_5A, 0x_08, 0x_27, 0x_85, 0x_99,
		0x_68, 0x_F3, 0x_7D, 0x_07, 0x_9E, 0x_29, 0x_97, 0x_22, 0x_3A, 0x_D7, 0x_47, 0x_42, 0x_C3, 0x_79, 0x_AA,
		0x_B0, 0x_7C, 0x_BA, 0x_B4, 0x_B2, 0x_31, 0x_05, 0x_50, 0x_8B, 0x_6A, 0x_60, 0x_4D, 0x_A2, 0x_77, 0x_F6,
		0x_3E, 0x_98, 0x_04, 0x_5E, 0x_E3, 0x_7A, 0x_84, 0x_8D, 0x_CB, 0x_40, 0x_83, 0x_B9, 0x_92, 0x_96, 0x_AE,
		0x_82, 0x_75, 0x_80, 0x_C1, 0x_D1, 0x_7F, 0x_EC, 0x_32, 0x_94, 0x_A6, 0x_1D, 0x_37, 0x_EF, 0x_AB, 0x_DC,
		0x_6D, 0x_FB, 0x_12, 0x_D9, 0x_11, 0x_AC, 0x_55, 0x_73, 0x_C9, 0x_FA, 0x_E9, 0x_38, 0x_CF, 0x_74, 0x_1E,
		0x_71, 0x_C6, 0x_BC, 0x_A0, 0x_DD, 0x_E2, 0x_67, 0x_2A, 0x_7E, 0x_66, 0x_EE, 0x_87, 0x_9C, 0x_BE, 0x_E1,
		0x_C0, 0x_A9, 0x_65, 0x_B7, 0x_18, 0x_DA, 0x_B5, 0x_10, 0x_5C, 0x_8E, 0x_0F, 0x_CC, 0x_30,
	];

	helper(S, BASE, 6_830_763);
}
// endregion
// region: s_has_whitespaces_and_signs_and_21_124_464_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_21_124_464_in_base_193() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0A,
		0x_09, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_7C, 0x_D4, 0x_E9, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_69, 0x_7C, 0x_DC, 0x_87, 0x_9D, 0x_A0, 0x_A4, 0x_5E, 0x_58, 0x_C9, 0x_45, 0x_1B, 0x_64, 0x_82,
		0x_9C, 0x_D7, 0x_78, 0x_7D, 0x_36, 0x_18, 0x_7E, 0x_E9, 0x_51, 0x_F4, 0x_38, 0x_95, 0x_C5, 0x_3C, 0x_90,
		0x_25, 0x_68, 0x_49, 0x_C2, 0x_C0, 0x_11, 0x_A6, 0x_27, 0x_14, 0x_3B, 0x_65, 0x_1F, 0x_9B, 0x_81, 0x_8C,
		0x_03, 0x_75, 0x_17, 0x_5F, 0x_6E, 0x_D9, 0x_EB, 0x_1A, 0x_D0, 0x_C8, 0x_3D, 0x_4A, 0x_FA, 0x_DB, 0x_86,
		0x_BA, 0x_4C, 0x_62, 0x_CA, 0x_02, 0x_70, 0x_30, 0x_72, 0x_CF, 0x_F9, 0x_2F, 0x_AB, 0x_EC, 0x_B2, 0x_B7,
		0x_43, 0x_A7, 0x_A2, 0x_19, 0x_E3, 0x_E6, 0x_C3, 0x_B6, 0x_DD, 0x_48, 0x_B1, 0x_E1, 0x_6D, 0x_BB, 0x_7A,
		0x_DA, 0x_53, 0x_55, 0x_99, 0x_42, 0x_AA, 0x_97, 0x_05, 0x_94, 0x_2A, 0x_AD, 0x_0F, 0x_1D, 0x_CE, 0x_66,
		0x_C6, 0x_47, 0x_1E, 0x_10, 0x_FB, 0x_D2, 0x_F7, 0x_13, 0x_7F, 0x_08, 0x_8B, 0x_9E, 0x_B8, 0x_A9, 0x_76,
		0x_77, 0x_0E, 0x_89, 0x_BF, 0x_83, 0x_B5, 0x_CC, 0x_16, 0x_29, 0x_06, 0x_01, 0x_4B, 0x_F8, 0x_3A, 0x_E2,
		0x_61, 0x_4E, 0x_AF, 0x_60, 0x_33, 0x_DF, 0x_96, 0x_67, 0x_56, 0x_E5, 0x_C7, 0x_50, 0x_39, 0x_BD, 0x_04,
		0x_C4, 0x_85, 0x_D8, 0x_AE, 0x_CD, 0x_41, 0x_80, 0x_F6, 0x_2C, 0x_5A, 0x_CB, 0x_37, 0x_F3, 0x_AC, 0x_F2,
		0x_21, 0x_D6, 0x_3E, 0x_DE, 0x_B9, 0x_9F, 0x_93, 0x_D5, 0x_FF, 0x_07, 0x_52, 0x_E7, 0x_4D, 0x_91, 0x_7B,
		0x_74, 0x_D4, 0x_E0, 0x_ED, 0x_E4, 0x_35, 0x_A5, 0x_59, 0x_3F, 0x_EE, 0x_1C, 0x_A3, 0x_8A,
	];

	helper(S, BASE, 21_124_464);
}
// endregion
// region: s_has_whitespaces_and_signs_and_384_486_191_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_384_486_191_in_base_193() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_C7,
		0x_42, 0x_1E, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_57, 0x_A4, 0x_7A, 0x_F1, 0x_FA, 0x_DC, 0x_A6, 0x_E4, 0x_21, 0x_1E, 0x_CE, 0x_AB, 0x_13, 0x_72,
		0x_C1, 0x_C0, 0x_5E, 0x_76, 0x_9D, 0x_05, 0x_80, 0x_59, 0x_33, 0x_16, 0x_DD, 0x_BE, 0x_8A, 0x_BB, 0x_A8,
		0x_37, 0x_C2, 0x_B2, 0x_98, 0x_FF, 0x_F9, 0x_3F, 0x_B3, 0x_C4, 0x_CD, 0x_4B, 0x_43, 0x_5A, 0x_7C, 0x_9F,
		0x_D8, 0x_5B, 0x_32, 0x_24, 0x_90, 0x_FB, 0x_6E, 0x_2C, 0x_C7, 0x_A0, 0x_DF, 0x_52, 0x_03, 0x_18, 0x_F6,
		0x_A7, 0x_AF, 0x_6A, 0x_61, 0x_C8, 0x_8F, 0x_89, 0x_A2, 0x_4C, 0x_B6, 0x_82, 0x_14, 0x_6D, 0x_CB, 0x_85,
		0x_1F, 0x_6F, 0x_47, 0x_C3, 0x_0F, 0x_6C, 0x_35, 0x_55, 0x_54, 0x_2A, 0x_BC, 0x_2E, 0x_7F, 0x_EB, 0x_11,
		0x_44, 0x_6B, 0x_50, 0x_42, 0x_86, 0x_AA, 0x_B5, 0x_01, 0x_22, 0x_84, 0x_D3, 0x_8B, 0x_0E, 0x_E5, 0x_EC,
		0x_63, 0x_3E, 0x_53, 0x_23, 0x_81, 0x_17, 0x_79, 0x_E1, 0x_3C, 0x_45, 0x_31, 0x_D4, 0x_A9, 0x_E9, 0x_4A,
		0x_36, 0x_A5, 0x_D0, 0x_60, 0x_40, 0x_B1, 0x_EF, 0x_FD, 0x_74, 0x_83, 0x_92, 0x_F8, 0x_34, 0x_58, 0x_9B,
		0x_65, 0x_DE, 0x_C6, 0x_3D, 0x_27, 0x_93, 0x_49, 0x_97, 0x_CC, 0x_26, 0x_91, 0x_8E, 0x_E3, 0x_EE, 0x_29,
		0x_04, 0x_1D, 0x_7E, 0x_B9, 0x_DA, 0x_67, 0x_8C, 0x_69, 0x_25, 0x_3A, 0x_41, 0x_4E, 0x_5F, 0x_D5, 0x_D6,
		0x_9E, 0x_DB, 0x_AE, 0x_39, 0x_AD, 0x_56, 0x_C5, 0x_FE, 0x_FC, 0x_48, 0x_70, 0x_8D, 0x_3B, 0x_62, 0x_D7,
		0x_BF, 0x_75, 0x_02, 0x_D1, 0x_E6, 0x_7D, 0x_10, 0x_51, 0x_07, 0x_4D, 0x_96, 0x_12, 0x_F0,
	];

	helper(S, BASE, 384_486_191);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_7_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_A8, 0x_DA, 0x_B3, 0x_91, 0x_90, 0x_FF, 0x_D9, 0x_6C, 0x_B6, 0x_54, 0x_DC, 0x_E0, 0x_1E, 0x_FD,
		0x_93, 0x_79, 0x_8D, 0x_70, 0x_95, 0x_31, 0x_E5, 0x_DD, 0x_E6, 0x_5A, 0x_4F, 0x_B8, 0x_89, 0x_F5, 0x_E2,
		0x_32, 0x_34, 0x_7E, 0x_1F, 0x_75, 0x_9E, 0x_97, 0x_53, 0x_F6, 0x_7B, 0x_47, 0x_D7, 0x_7C, 0x_49, 0x_04,
		0x_B2, 0x_98, 0x_85, 0x_55, 0x_63, 0x_AC, 0x_6E, 0x_3A, 0x_8C, 0x_B9, 0x_F7, 0x_E4, 0x_D8, 0x_F1, 0x_C1,
		0x_59, 0x_38, 0x_F2, 0x_DF, 0x_9F, 0x_A6, 0x_3F, 0x_CE, 0x_D2, 0x_10, 0x_88, 0x_29, 0x_19, 0x_36, 0x_6F,
		0x_B5, 0x_E8, 0x_F0, 0x_72, 0x_C2, 0x_2E, 0x_23, 0x_86, 0x_73, 0x_5D, 0x_BF, 0x_64, 0x_8A, 0x_8B, 0x_9A,
		0x_2A, 0x_8F, 0x_F8, 0x_65, 0x_1B, 0x_7D, 0x_C6, 0x_39, 0x_51, 0x_CC, 0x_9B, 0x_E9, 0x_A3, 0x_15, 0x_67,
		0x_CA, 0x_D3, 0x_4A, 0x_4D, 0x_A2, 0x_92, 0x_06, 0x_26, 0x_57, 0x_7A, 0x_82, 0x_D1, 0x_08, 0x_6D, 0x_4B,
		0x_CD, 0x_35, 0x_1C, 0x_76, 0x_C0, 0x_A5, 0x_5C, 0x_17, 0x_78, 0x_DB, 0x_C8, 0x_AB, 0x_C5, 0x_A1, 0x_D0,
		0x_A9, 0x_44, 0x_C3, 0x_B4, 0x_74, 0x_2F, 0x_56, 0x_28, 0x_6B, 0x_87, 0x_EA, 0x_37, 0x_1A, 0x_25, 0x_3E,
		0x_B7, 0x_FC, 0x_CF, 0x_07, 0x_12, 0x_BD, 0x_9C, 0x_69, 0x_77, 0x_66, 0x_A4, 0x_B1, 0x_27, 0x_52, 0x_13,
		0x_3D, 0x_AE, 0x_5E, 0x_DE, 0x_43, 0x_99, 0x_41, 0x_21, 0x_83, 0x_11, 0x_A7, 0x_2C, 0x_33, 0x_48, 0x_9D,
		0x_1D, 0x_60, 0x_EC, 0x_AA, 0x_7F, 0x_EB, 0x_BC, 0x_40, 0x_3B, 0x_4C, 0x_E3, 0x_F9, 0x_F4, 0x_16, 0x_BA,
		0x_0E, 0x_02, 0x_FA, 0x_3C, 0x_5F, 0x_61, 0x_C7, 0x_24, 0x_AF, 0x_FB, 0x_FE, 0x_42, 0x_AD, 0x_0F, 0x_D5,
		0x_BB, 0x_8E, 0x_CB, 0x_81, 0x_58, 0x_E7, 0x_B0, 0x_F3, 0x_71, 0x_ED, 0x_05, 0x_62, 0x_E1, 0x_96, 0x_6A,
		0x_45, 0x_84, 0x_01, 0x_46, 0x_D6, 0x_14, 0x_5B, 0x_EF, 0x_18, 0x_03, 0x_A0, 0x_94, 0x_BE, 0x_EE, 0x_D4,
		0x_22, 0x_4E, 0x_68, 0x_80, 0x_C4, 0x_50, 0x_C9,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_97_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_97_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_4E, 0x_46, 0x_7A, 0x_B5, 0x_94, 0x_1F, 0x_B7, 0x_CA, 0x_42, 0x_6F, 0x_F3, 0x_F7, 0x_6A, 0x_EB,
		0x_B3, 0x_02, 0x_BC, 0x_F9, 0x_01, 0x_CB, 0x_67, 0x_4D, 0x_D0, 0x_1E, 0x_DA, 0x_56, 0x_3A, 0x_E1, 0x_60,
		0x_C3, 0x_4A, 0x_7D, 0x_75, 0x_DD, 0x_5F, 0x_18, 0x_A7, 0x_82, 0x_86, 0x_A4, 0x_0F, 0x_95, 0x_05, 0x_3D,
		0x_D5, 0x_8F, 0x_CE, 0x_28, 0x_6E, 0x_89, 0x_1C, 0x_A1, 0x_D2, 0x_14, 0x_19, 0x_D7, 0x_DE, 0x_36, 0x_AE,
		0x_99, 0x_E7, 0x_23, 0x_C0, 0x_FD, 0x_79, 0x_7C, 0x_81, 0x_59, 0x_39, 0x_FA, 0x_6C, 0x_41, 0x_DF, 0x_B8,
		0x_53, 0x_C6, 0x_70, 0x_33, 0x_10, 0x_93, 0x_3C, 0x_B9, 0x_08, 0x_D8, 0x_64, 0x_61, 0x_C9, 0x_B2, 0x_B0,
		0x_87, 0x_EE, 0x_68, 0x_66, 0x_E0, 0x_F8, 0x_AC, 0x_B6, 0x_11, 0x_1D, 0x_83, 0x_31, 0x_3B, 0x_C5, 0x_BD,
		0x_5E, 0x_EF, 0x_97, 0x_54, 0x_8D, 0x_29, 0x_7B, 0x_C8, 0x_F2, 0x_74, 0x_D4, 0x_77, 0x_A2, 0x_EC, 0x_50,
		0x_F5, 0x_C1, 0x_78, 0x_49, 0x_40, 0x_9C, 0x_52, 0x_E8, 0x_A9, 0x_8C, 0x_48, 0x_DB, 0x_E9, 0x_0E, 0x_32,
		0x_D6, 0x_B1, 0x_65, 0x_55, 0x_24, 0x_69, 0x_76, 0x_E6, 0x_E2, 0x_13, 0x_3F, 0x_27, 0x_D9, 0x_25, 0x_AB,
		0x_BA, 0x_37, 0x_35, 0x_43, 0x_DC, 0x_A5, 0x_90, 0x_71, 0x_12, 0x_CF, 0x_1A, 0x_38, 0x_CD, 0x_FC, 0x_73,
		0x_E4, 0x_9D, 0x_4B, 0x_98, 0x_B4, 0x_E3, 0x_C7, 0x_47, 0x_CC, 0x_4C, 0x_06, 0x_16, 0x_9F, 0x_F6, 0x_FF,
		0x_A3, 0x_AD, 0x_34, 0x_2C, 0x_5B, 0x_BF, 0x_17, 0x_5C, 0x_C4, 0x_A0, 0x_4F, 0x_FE, 0x_A8, 0x_F4, 0x_04,
		0x_2E, 0x_ED, 0x_C2, 0x_92, 0x_22, 0x_8B, 0x_3E, 0x_45, 0x_7F, 0x_51, 0x_6D, 0x_F1, 0x_03, 0x_D1, 0x_84,
		0x_9B, 0x_88, 0x_96, 0x_BE, 0x_AF, 0x_7E, 0x_58, 0x_AA, 0x_EA, 0x_57, 0x_91, 0x_07, 0x_FB, 0x_8A, 0x_5D,
		0x_5A, 0x_30, 0x_15, 0x_6B, 0x_85, 0x_72, 0x_9A, 0x_80, 0x_9E, 0x_2F, 0x_63, 0x_21, 0x_F0, 0x_BB, 0x_A6,
		0x_E5, 0x_62, 0x_1B, 0x_44, 0x_26, 0x_8E, 0x_2A,
	];

	helper(S, BASE, 97);
}
// endregion
// region: s_has_whitespaces_and_signs_and_695_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_695_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0C,
		0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_4E, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_1D, 0x_4E, 0x_AA, 0x_BD, 0x_50, 0x_D3, 0x_01, 0x_E4, 0x_59, 0x_F1, 0x_1B, 0x_45, 0x_9C, 0x_1C,
		0x_24, 0x_8D, 0x_47, 0x_79, 0x_10, 0x_B8, 0x_3B, 0x_96, 0x_8A, 0x_56, 0x_FF, 0x_F9, 0x_B4, 0x_48, 0x_A1,
		0x_D8, 0x_3E, 0x_99, 0x_B5, 0x_3F, 0x_6C, 0x_1E, 0x_85, 0x_60, 0x_5A, 0x_2A, 0x_81, 0x_21, 0x_54, 0x_AF,
		0x_E5, 0x_E8, 0x_34, 0x_FE, 0x_C7, 0x_36, 0x_B0, 0x_E6, 0x_67, 0x_27, 0x_86, 0x_6E, 0x_6D, 0x_D0, 0x_5C,
		0x_D4, 0x_6F, 0x_33, 0x_D5, 0x_5D, 0x_F5, 0x_B9, 0x_02, 0x_7A, 0x_D7, 0x_BF, 0x_6A, 0x_DE, 0x_44, 0x_C6,
		0x_28, 0x_DC, 0x_39, 0x_1F, 0x_89, 0x_08, 0x_CE, 0x_93, 0x_22, 0x_25, 0x_C8, 0x_A5, 0x_B7, 0x_2F, 0x_9E,
		0x_04, 0x_AE, 0x_5F, 0x_C3, 0x_6B, 0x_A8, 0x_BC, 0x_42, 0x_7B, 0x_7F, 0x_80, 0x_9F, 0x_73, 0x_C2, 0x_8F,
		0x_51, 0x_84, 0x_B1, 0x_9D, 0x_83, 0x_4D, 0x_74, 0x_A7, 0x_A4, 0x_F7, 0x_F4, 0x_95, 0x_BA, 0x_52, 0x_3C,
		0x_9B, 0x_57, 0x_41, 0x_AD, 0x_D6, 0x_C4, 0x_E9, 0x_DD, 0x_7E, 0x_FB, 0x_70, 0x_31, 0x_8B, 0x_05, 0x_03,
		0x_F6, 0x_7D, 0x_55, 0x_17, 0x_72, 0x_35, 0x_63, 0x_46, 0x_11, 0x_62, 0x_92, 0x_9A, 0x_A9, 0x_BB, 0x_90,
		0x_5B, 0x_CB, 0x_E3, 0x_A0, 0x_ED, 0x_38, 0x_C1, 0x_0E, 0x_EA, 0x_88, 0x_87, 0x_82, 0x_3D, 0x_61, 0x_F8,
		0x_53, 0x_0F, 0x_E1, 0x_76, 0x_AB, 0x_75, 0x_71, 0x_4A, 0x_3A, 0x_FC, 0x_A2, 0x_DF, 0x_D1, 0x_91, 0x_8C,
		0x_5E, 0x_64, 0x_94, 0x_D2, 0x_E7, 0x_16, 0x_1A, 0x_AC, 0x_07, 0x_CC, 0x_B6, 0x_15, 0x_2E, 0x_E0, 0x_4B,
		0x_CA, 0x_B2, 0x_DA, 0x_EF, 0x_4C, 0x_CF, 0x_49, 0x_77, 0x_13, 0x_65, 0x_EE, 0x_18, 0x_C5, 0x_CD, 0x_B3,
		0x_4F, 0x_F3, 0x_C0, 0x_66, 0x_F0, 0x_40, 0x_D9, 0x_69, 0x_A6, 0x_26, 0x_7C, 0x_8E, 0x_E2, 0x_23, 0x_29,
		0x_98, 0x_19, 0x_14, 0x_FD, 0x_C9, 0x_EB, 0x_30, 0x_43, 0x_68, 0x_06, 0x_A3, 0x_58, 0x_78, 0x_32, 0x_12,
		0x_2C, 0x_DB, 0x_FA, 0x_97, 0x_BE, 0x_37, 0x_EC,
	];

	helper(S, BASE, 695);
}
// endregion
// region: s_has_whitespaces_and_signs_and_3_359_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_3_359_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_54, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_AE, 0x_28, 0x_67, 0x_41, 0x_AF, 0x_91, 0x_D6, 0x_B0, 0x_BF, 0x_21, 0x_EA, 0x_C4, 0x_54, 0x_0E,
		0x_29, 0x_75, 0x_D2, 0x_E0, 0x_E1, 0x_22, 0x_5D, 0x_19, 0x_46, 0x_02, 0x_0F, 0x_EB, 0x_FB, 0x_92, 0x_A6,
		0x_B8, 0x_EC, 0x_49, 0x_1E, 0x_4F, 0x_27, 0x_08, 0x_AB, 0x_17, 0x_33, 0x_38, 0x_A7, 0x_68, 0x_D9, 0x_66,
		0x_E5, 0x_53, 0x_BE, 0x_B2, 0x_52, 0x_45, 0x_47, 0x_4D, 0x_E6, 0x_2F, 0x_65, 0x_F7, 0x_B9, 0x_56, 0x_CB,
		0x_C0, 0x_C7, 0x_2E, 0x_F2, 0x_A5, 0x_36, 0x_6D, 0x_78, 0x_04, 0x_EF, 0x_03, 0x_9B, 0x_8F, 0x_1C, 0x_D0,
		0x_35, 0x_C3, 0x_4A, 0x_F5, 0x_ED, 0x_C2, 0x_3E, 0x_D7, 0x_CA, 0x_94, 0x_84, 0x_59, 0x_F3, 0x_7A, 0x_B5,
		0x_B7, 0x_F4, 0x_9E, 0x_DE, 0x_87, 0x_98, 0x_BB, 0x_31, 0x_8E, 0x_6F, 0x_26, 0x_15, 0x_2C, 0x_83, 0x_74,
		0x_6B, 0x_5E, 0x_14, 0x_C6, 0x_D8, 0x_99, 0x_7E, 0x_F9, 0x_5C, 0x_25, 0x_BD, 0x_8C, 0x_9A, 0x_6C, 0x_A9,
		0x_13, 0x_42, 0x_1B, 0x_DF, 0x_3D, 0x_43, 0x_06, 0x_77, 0x_D4, 0x_9F, 0x_05, 0x_30, 0x_5F, 0x_DD, 0x_FE,
		0x_44, 0x_A3, 0x_F6, 0x_4B, 0x_5A, 0x_F8, 0x_6E, 0x_C8, 0x_FC, 0x_8A, 0x_E4, 0x_D1, 0x_AA, 0x_A1, 0x_71,
		0x_79, 0x_12, 0x_B1, 0x_F0, 0x_81, 0x_93, 0x_BA, 0x_61, 0x_7C, 0x_DA, 0x_F1, 0x_9C, 0x_4E, 0x_85, 0x_97,
		0x_95, 0x_C5, 0x_CF, 0x_23, 0x_90, 0x_39, 0x_10, 0x_8D, 0x_E7, 0x_A0, 0x_70, 0x_88, 0x_A8, 0x_96, 0x_FD,
		0x_C1, 0x_4C, 0x_7D, 0x_55, 0x_3A, 0x_6A, 0x_E2, 0x_32, 0x_B6, 0x_76, 0x_3C, 0x_DC, 0x_07, 0x_89, 0x_AC,
		0x_DB, 0x_9D, 0x_E8, 0x_1F, 0x_1D, 0x_48, 0x_A4, 0x_60, 0x_CC, 0x_3B, 0x_01, 0x_51, 0x_86, 0x_AD, 0x_C9,
		0x_D3, 0x_72, 0x_5B, 0x_CD, 0x_62, 0x_50, 0x_FA, 0x_E3, 0x_7B, 0x_16, 0x_64, 0x_73, 0x_EE, 0x_3F, 0x_FF,
		0x_CE, 0x_1A, 0x_BC, 0x_8B, 0x_37, 0x_80, 0x_B3, 0x_63, 0x_82, 0x_18, 0x_24, 0x_B4, 0x_40, 0x_58, 0x_D5,
		0x_11, 0x_34, 0x_69, 0x_E9, 0x_7F, 0x_A2, 0x_57,
	];

	helper(S, BASE, 3_359);
}
// endregion
// region: s_has_whitespaces_and_signs_and_64_859_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_64_859_in_base_247() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_09,
		0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_09,
		0x_0A, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_08, 0x_A0, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_08, 0x_A4, 0x_71, 0x_16, 0x_3A, 0x_4D, 0x_88, 0x_5C, 0x_C8, 0x_BE, 0x_4F, 0x_F3, 0x_36, 0x_7B,
		0x_A0, 0x_AA, 0x_B9, 0x_5F, 0x_9C, 0x_C7, 0x_87, 0x_CC, 0x_A8, 0x_D9, 0x_ED, 0x_F5, 0x_DE, 0x_47, 0x_E9,
		0x_2C, 0x_82, 0x_F9, 0x_4A, 0x_29, 0x_D0, 0x_44, 0x_E1, 0x_A1, 0x_9D, 0x_8C, 0x_63, 0x_05, 0x_C1, 0x_FF,
		0x_E5, 0x_D8, 0x_FC, 0x_BD, 0x_49, 0x_FB, 0x_7F, 0x_4C, 0x_8B, 0x_10, 0x_AF, 0x_61, 0x_E2, 0x_5D, 0x_F1,
		0x_FA, 0x_B1, 0x_03, 0x_76, 0x_A6, 0x_06, 0x_B5, 0x_C9, 0x_5A, 0x_6E, 0x_89, 0x_A5, 0x_DD, 0x_66, 0x_74,
		0x_24, 0x_04, 0x_40, 0x_53, 0x_C4, 0x_92, 0x_3F, 0x_B3, 0x_18, 0x_12, 0x_96, 0x_35, 0x_56, 0x_FD, 0x_9F,
		0x_B2, 0x_59, 0x_21, 0x_F7, 0x_C3, 0x_28, 0x_9B, 0x_19, 0x_2A, 0x_22, 0x_EC, 0x_60, 0x_CF, 0x_14, 0x_50,
		0x_33, 0x_A9, 0x_D7, 0x_95, 0x_1A, 0x_DA, 0x_B8, 0x_2E, 0x_DC, 0x_83, 0x_6D, 0x_EA, 0x_3B, 0x_9A, 0x_D4,
		0x_A3, 0x_B6, 0x_E7, 0x_32, 0x_45, 0x_B0, 0x_46, 0x_13, 0x_67, 0x_F4, 0x_F8, 0x_07, 0x_15, 0x_BF, 0x_7C,
		0x_D5, 0x_BB, 0x_55, 0x_68, 0x_94, 0x_AC, 0x_C6, 0x_DF, 0x_2F, 0x_57, 0x_11, 0x_51, 0x_A7, 0x_02, 0x_97,
		0x_B4, 0x_26, 0x_D3, 0x_CD, 0x_6A, 0x_90, 0x_6B, 0x_70, 0x_65, 0x_25, 0x_1D, 0x_58, 0x_72, 0x_3D, 0x_79,
		0x_8E, 0x_F6, 0x_D1, 0x_CE, 0x_75, 0x_54, 0x_7A, 0x_8A, 0x_81, 0x_91, 0x_1E, 0x_D6, 0x_78, 0x_CA, 0x_7D,
		0x_80, 0x_DB, 0x_F0, 0x_86, 0x_39, 0x_5B, 0x_AE, 0x_0F, 0x_42, 0x_C2, 0x_A2, 0x_69, 0x_30, 0x_EF, 0x_E8,
		0x_E6, 0x_43, 0x_EE, 0x_D2, 0x_5E, 0x_3E, 0x_FE, 0x_27, 0x_38, 0x_62, 0x_01, 0x_85, 0x_6F, 0x_EB, 0x_1B,
		0x_31, 0x_AD, 0x_17, 0x_93, 0x_0E, 0x_CB, 0x_37, 0x_64, 0x_98, 0x_B7, 0x_41, 0x_6C, 0x_52, 0x_1F, 0x_23,
		0x_99, 0x_4B, 0x_9E, 0x_8F, 0x_C5, 0x_4E, 0x_AB, 0x_C0, 0x_E0, 0x_BA, 0x_8D, 0x_34, 0x_73, 0x_E3, 0x_1C,
		0x_48, 0x_84, 0x_E4, 0x_3C, 0x_77, 0x_BC, 0x_F2,
	];

	helper(S, BASE, 64_859);
}
// endregion
// region: s_has_whitespaces_and_signs_and_606_122_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_606_122_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_20,
		0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0D,
		0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_7A, 0x_CF, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_BC, 0x_10, 0x_2A, 0x_B4, 0x_24, 0x_3E, 0x_70, 0x_3C, 0x_7A, 0x_A6, 0x_36, 0x_9F, 0x_CD, 0x_C1,
		0x_88, 0x_12, 0x_D3, 0x_56, 0x_9E, 0x_3F, 0x_FF, 0x_D2, 0x_9C, 0x_0E, 0x_AA, 0x_98, 0x_07, 0x_C0, 0x_AD,
		0x_B5, 0x_B9, 0x_94, 0x_46, 0x_CC, 0x_DE, 0x_8F, 0x_30, 0x_EC, 0x_BF, 0x_BA, 0x_EB, 0x_F5, 0x_7B, 0x_64,
		0x_E1, 0x_40, 0x_DC, 0x_1E, 0x_8D, 0x_FE, 0x_5E, 0x_2C, 0x_50, 0x_63, 0x_38, 0x_32, 0x_F3, 0x_76, 0x_87,
		0x_6D, 0x_C4, 0x_96, 0x_85, 0x_90, 0x_D9, 0x_E6, 0x_54, 0x_97, 0x_4B, 0x_0F, 0x_3D, 0x_62, 0x_A4, 0x_F6,
		0x_91, 0x_A5, 0x_06, 0x_42, 0x_AB, 0x_01, 0x_41, 0x_82, 0x_BE, 0x_B8, 0x_93, 0x_D4, 0x_E2, 0x_27, 0x_53,
		0x_C3, 0x_48, 0x_81, 0x_C8, 0x_1A, 0x_DA, 0x_F9, 0x_5F, 0x_A3, 0x_78, 0x_37, 0x_A7, 0x_95, 0x_CB, 0x_E4,
		0x_60, 0x_C7, 0x_25, 0x_E9, 0x_52, 0x_EA, 0x_75, 0x_4A, 0x_69, 0x_71, 0x_FD, 0x_16, 0x_5D, 0x_23, 0x_7D,
		0x_31, 0x_EF, 0x_26, 0x_C2, 0x_68, 0x_F0, 0x_02, 0x_ED, 0x_6A, 0x_18, 0x_BD, 0x_E7, 0x_34, 0x_39, 0x_66,
		0x_A8, 0x_4C, 0x_57, 0x_CA, 0x_D7, 0x_73, 0x_E5, 0x_2F, 0x_E8, 0x_28, 0x_7F, 0x_58, 0x_1C, 0x_B3, 0x_21,
		0x_B7, 0x_47, 0x_19, 0x_AC, 0x_15, 0x_79, 0x_C6, 0x_22, 0x_61, 0x_92, 0x_6E, 0x_59, 0x_29, 0x_FC, 0x_3B,
		0x_F8, 0x_D8, 0x_DB, 0x_C9, 0x_DF, 0x_F4, 0x_FA, 0x_BB, 0x_74, 0x_51, 0x_A1, 0x_C5, 0x_9B, 0x_17, 0x_D0,
		0x_4F, 0x_03, 0x_EE, 0x_04, 0x_FB, 0x_45, 0x_8C, 0x_1F, 0x_6F, 0x_2E, 0x_6B, 0x_7E, 0x_44, 0x_B0, 0x_8A,
		0x_9A, 0x_65, 0x_AE, 0x_D1, 0x_55, 0x_05, 0x_D5, 0x_14, 0x_4D, 0x_5A, 0x_B1, 0x_83, 0x_99, 0x_7C, 0x_3A,
		0x_6C, 0x_E3, 0x_AF, 0x_1B, 0x_DD, 0x_E0, 0x_8B, 0x_67, 0x_CE, 0x_43, 0x_F7, 0x_35, 0x_49, 0x_77, 0x_80,
		0x_86, 0x_5C, 0x_8E, 0x_33, 0x_B6, 0x_CF, 0x_11, 0x_13, 0x_A2, 0x_D6, 0x_84, 0x_B2, 0x_72, 0x_1D, 0x_5B,
		0x_F2, 0x_08, 0x_A9, 0x_89, 0x_A0, 0x_9D, 0x_F1,
	];

	helper(S, BASE, 606_122);
}
// endregion
// region: s_has_whitespaces_and_signs_and_5_777_948_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_5_777_948_in_base_247() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0C,
		0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_0D,
		0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_F7, 0x_EC,
		0x_1A,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_A1, 0x_AA, 0x_91, 0x_6D, 0x_C0, 0x_76, 0x_FC, 0x_3C, 0x_9A, 0x_56, 0x_61, 0x_4F, 0x_25, 0x_28,
		0x_52, 0x_8D, 0x_F1, 0x_48, 0x_D0, 0x_6C, 0x_9C, 0x_86, 0x_6F, 0x_3F, 0x_5D, 0x_67, 0x_E6, 0x_29, 0x_EA,
		0x_9D, 0x_46, 0x_26, 0x_85, 0x_E4, 0x_14, 0x_77, 0x_0E, 0x_A6, 0x_B5, 0x_54, 0x_E3, 0x_07, 0x_81, 0x_33,
		0x_50, 0x_51, 0x_FB, 0x_B1, 0x_C9, 0x_05, 0x_C4, 0x_7A, 0x_12, 0x_A3, 0x_C7, 0x_CB, 0x_FE, 0x_16, 0x_3A,
		0x_3D, 0x_F6, 0x_22, 0x_83, 0x_3E, 0x_79, 0x_5B, 0x_13, 0x_53, 0x_3B, 0x_D1, 0x_32, 0x_74, 0x_92, 0x_01,
		0x_F4, 0x_D6, 0x_87, 0x_49, 0x_63, 0x_FF, 0x_6B, 0x_4D, 0x_FA, 0x_7F, 0x_7B, 0x_02, 0x_03, 0x_DB, 0x_8F,
		0x_8C, 0x_15, 0x_BB, 0x_A4, 0x_F7, 0x_2C, 0x_0F, 0x_ED, 0x_62, 0x_8E, 0x_C8, 0x_CC, 0x_82, 0x_EB, 0x_E2,
		0x_10, 0x_E5, 0x_B3, 0x_7C, 0x_E7, 0x_D7, 0x_65, 0x_DA, 0x_A9, 0x_B0, 0x_C2, 0x_31, 0x_08, 0x_F2, 0x_BD,
		0x_DD, 0x_D5, 0x_94, 0x_75, 0x_1A, 0x_A2, 0x_E8, 0x_A5, 0x_45, 0x_B6, 0x_5A, 0x_AE, 0x_BA, 0x_23, 0x_C6,
		0x_11, 0x_1B, 0x_35, 0x_BF, 0x_30, 0x_37, 0x_CF, 0x_AF, 0x_88, 0x_D4, 0x_44, 0x_A8, 0x_96, 0x_04, 0x_4A,
		0x_B2, 0x_2A, 0x_36, 0x_42, 0x_1C, 0x_E9, 0x_43, 0x_2E, 0x_DE, 0x_70, 0x_90, 0x_4B, 0x_34, 0x_B8, 0x_F3,
		0x_E1, 0x_64, 0x_60, 0x_99, 0x_A7, 0x_DC, 0x_80, 0x_72, 0x_21, 0x_EC, 0x_7E, 0x_73, 0x_55, 0x_19, 0x_8B,
		0x_D2, 0x_9B, 0x_F5, 0x_AD, 0x_F0, 0x_95, 0x_9E, 0x_47, 0x_71, 0x_FD, 0x_1E, 0x_89, 0x_C5, 0x_59, 0x_C1,
		0x_DF, 0x_66, 0x_CA, 0x_A0, 0x_C3, 0x_D8, 0x_5E, 0x_6A, 0x_BC, 0x_AC, 0x_69, 0x_6E, 0x_17, 0x_24, 0x_F9,
		0x_EE, 0x_D9, 0x_B9, 0x_5F, 0x_9F, 0x_2F, 0x_1F, 0x_58, 0x_78, 0x_4C, 0x_57, 0x_1D, 0x_41, 0x_8A, 0x_18,
		0x_BE, 0x_40, 0x_27, 0x_06, 0x_5C, 0x_EF, 0x_B7, 0x_84, 0x_68, 0x_CE, 0x_D3, 0x_4E, 0x_B4, 0x_97, 0x_E0,
		0x_39, 0x_7D, 0x_AB, 0x_F8, 0x_CD, 0x_98, 0x_38,
	];

	helper(S, BASE, 5_777_948);
}
// endregion
// region: s_has_whitespaces_and_signs_and_86_736_605_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_86_736_605_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_4E, 0x_10, 0x_3D, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_56, 0x_86, 0x_B9, 0x_42, 0x_4E, 0x_1F, 0x_A1, 0x_AA, 0x_D9, 0x_82, 0x_06, 0x_D4, 0x_E6, 0x_9C,
		0x_5E, 0x_91, 0x_37, 0x_F0, 0x_E3, 0x_3F, 0x_8C, 0x_C5, 0x_9A, 0x_CD, 0x_0E, 0x_29, 0x_8D, 0x_F7, 0x_C4,
		0x_03, 0x_76, 0x_01, 0x_92, 0x_C6, 0x_1B, 0x_DC, 0x_5C, 0x_5B, 0x_75, 0x_61, 0x_D5, 0x_94, 0x_EC, 0x_CA,
		0x_16, 0x_1C, 0x_6D, 0x_C2, 0x_93, 0x_AC, 0x_2F, 0x_6E, 0x_85, 0x_47, 0x_B8, 0x_E2, 0x_59, 0x_7B, 0x_67,
		0x_CB, 0x_8B, 0x_44, 0x_B1, 0x_80, 0x_C3, 0x_9F, 0x_68, 0x_3E, 0x_6C, 0x_07, 0x_5D, 0x_04, 0x_63, 0x_A8,
		0x_27, 0x_45, 0x_51, 0x_9E, 0x_88, 0x_FA, 0x_F8, 0x_CC, 0x_2E, 0x_87, 0x_D1, 0x_84, 0x_FF, 0x_A4, 0x_F5,
		0x_C7, 0x_35, 0x_30, 0x_E5, 0x_E8, 0x_78, 0x_7C, 0x_43, 0x_46, 0x_9B, 0x_ED, 0x_5F, 0x_23, 0x_60, 0x_FB,
		0x_6A, 0x_19, 0x_41, 0x_B7, 0x_14, 0x_7D, 0x_C0, 0x_CF, 0x_F9, 0x_D3, 0x_02, 0x_1E, 0x_EF, 0x_7F, 0x_83,
		0x_A9, 0x_AF, 0x_FD, 0x_F3, 0x_17, 0x_C1, 0x_FE, 0x_64, 0x_22, 0x_E4, 0x_AE, 0x_69, 0x_65, 0x_70, 0x_26,
		0x_15, 0x_39, 0x_E7, 0x_53, 0x_31, 0x_99, 0x_EB, 0x_BC, 0x_1D, 0x_D8, 0x_9D, 0x_2C, 0x_CE, 0x_38, 0x_A2,
		0x_A0, 0x_81, 0x_0F, 0x_3C, 0x_7A, 0x_DF, 0x_36, 0x_74, 0x_4F, 0x_F1, 0x_5A, 0x_8F, 0x_57, 0x_DA, 0x_BE,
		0x_3B, 0x_3A, 0x_55, 0x_62, 0x_E0, 0x_F2, 0x_6F, 0x_B2, 0x_3D, 0x_DB, 0x_96, 0x_08, 0x_B5, 0x_71, 0x_F6,
		0x_58, 0x_BA, 0x_73, 0x_98, 0x_77, 0x_89, 0x_10, 0x_4C, 0x_E9, 0x_28, 0x_8E, 0x_D7, 0x_BB, 0x_13, 0x_FC,
		0x_B4, 0x_50, 0x_AD, 0x_6B, 0x_12, 0x_1A, 0x_B6, 0x_C9, 0x_32, 0x_C8, 0x_54, 0x_72, 0x_52, 0x_95, 0x_F4,
		0x_97, 0x_E1, 0x_A6, 0x_EA, 0x_A5, 0x_DE, 0x_D2, 0x_48, 0x_4B, 0x_79, 0x_25, 0x_66, 0x_7E, 0x_4D, 0x_BD,
		0x_24, 0x_EE, 0x_B0, 0x_BF, 0x_18, 0x_AB, 0x_A7, 0x_90, 0x_2A, 0x_A3, 0x_21, 0x_DD, 0x_40, 0x_05, 0x_33,
		0x_8A, 0x_D0, 0x_11, 0x_4A, 0x_B3, 0x_49, 0x_34,
	];

	helper(S, BASE, 86_736_605);
}
// endregion
// region: s_has_whitespaces_and_signs_and_370_402_029_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_370_402_029_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_6D, 0x_9A,
		0x_23, 0x_83,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_A3, 0x_34, 0x_C8, 0x_AC, 0x_E1, 0x_AD, 0x_94, 0x_40, 0x_D0, 0x_AA, 0x_6A, 0x_89, 0x_11, 0x_43,
		0x_3B, 0x_13, 0x_45, 0x_80, 0x_FF, 0x_B4, 0x_AE, 0x_88, 0x_8A, 0x_6D, 0x_77, 0x_E2, 0x_57, 0x_31, 0x_17,
		0x_0F, 0x_62, 0x_5C, 0x_98, 0x_F2, 0x_CF, 0x_DB, 0x_BF, 0x_C5, 0x_7A, 0x_79, 0x_4A, 0x_87, 0x_F4, 0x_D1,
		0x_C1, 0x_F0, 0x_85, 0x_6C, 0x_BA, 0x_A6, 0x_D8, 0x_55, 0x_A7, 0x_C3, 0x_0E, 0x_CB, 0x_5D, 0x_8C, 0x_8B,
		0x_E4, 0x_7F, 0x_8E, 0x_9F, 0x_EF, 0x_EB, 0x_23, 0x_60, 0x_3E, 0x_48, 0x_65, 0x_B5, 0x_B0, 0x_E9, 0x_26,
		0x_91, 0x_5B, 0x_B6, 0x_D5, 0x_03, 0x_24, 0x_68, 0x_7E, 0x_1F, 0x_C6, 0x_7D, 0x_99, 0x_E7, 0x_83, 0x_63,
		0x_15, 0x_81, 0x_1D, 0x_96, 0x_E5, 0x_19, 0x_CE, 0x_BC, 0x_18, 0x_05, 0x_BD, 0x_47, 0x_FA, 0x_C2, 0x_46,
		0x_08, 0x_64, 0x_F5, 0x_58, 0x_1A, 0x_5A, 0x_ED, 0x_EC, 0x_93, 0x_38, 0x_22, 0x_36, 0x_BE, 0x_1E, 0x_9D,
		0x_56, 0x_37, 0x_C0, 0x_2F, 0x_5F, 0x_44, 0x_DE, 0x_C7, 0x_D4, 0x_66, 0x_CD, 0x_F3, 0x_AB, 0x_F6, 0x_1B,
		0x_32, 0x_DF, 0x_4F, 0x_3A, 0x_B2, 0x_6E, 0x_95, 0x_35, 0x_9A, 0x_25, 0x_D9, 0x_72, 0x_33, 0x_F8, 0x_9E,
		0x_82, 0x_10, 0x_B9, 0x_FB, 0x_9C, 0x_29, 0x_A1, 0x_2C, 0x_28, 0x_54, 0x_AF, 0x_59, 0x_14, 0x_41, 0x_50,
		0x_16, 0x_F7, 0x_BB, 0x_76, 0x_86, 0x_67, 0x_42, 0x_F9, 0x_F1, 0x_FC, 0x_A8, 0x_FE, 0x_B7, 0x_A9, 0x_A5,
		0x_8F, 0x_4C, 0x_49, 0x_01, 0x_D6, 0x_52, 0x_DA, 0x_61, 0x_21, 0x_90, 0x_4D, 0x_B8, 0x_6B, 0x_A4, 0x_C4,
		0x_E3, 0x_71, 0x_70, 0x_2E, 0x_5E, 0x_51, 0x_1C, 0x_D3, 0x_D7, 0x_78, 0x_69, 0x_39, 0x_4E, 0x_7B, 0x_2A,
		0x_30, 0x_FD, 0x_3C, 0x_12, 0x_DD, 0x_E8, 0x_73, 0x_4B, 0x_CA, 0x_EE, 0x_DC, 0x_53, 0x_C9, 0x_B3, 0x_27,
		0x_02, 0x_74, 0x_9B, 0x_E6, 0x_8D, 0x_92, 0x_7C, 0x_3F, 0x_97, 0x_A2, 0x_04, 0x_07, 0x_06, 0x_A0, 0x_84,
		0x_D2, 0x_75, 0x_E0, 0x_EA, 0x_B1, 0x_6F, 0x_CC,
	];

	helper(S, BASE, 370_402_029);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_3_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_3_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_09,
		0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0C,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_E3, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_87, 0x_E3,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_20_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_20_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0A,
		0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_09,
		0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_0F, 0x_E6, 0x_0F, 0x_E6, 0x_E6,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_0F,
	];

	helper(S, BASE, 20);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_755_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_755_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_0B,
		0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0D,
		0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_44, 0x_CA, 0x_44, 0x_44, 0x_44, 0x_44, 0x_CA, 0x_CA, 0x_44, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_44,
	];

	helper(S, BASE, 755);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_2_592_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_2_592_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0D,
		0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_AD, 0x_4E, 0x_AD, 0x_4E, 0x_4E, 0x_4E,
		0x_AD, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_AD,
	];

	helper(S, BASE, 2_592);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_49_366_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_49_366_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_0D,
		0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_09,
		0x_0D, 0x_0B, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_A1, 0x_A1, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_A1, 0x_A1, 0x_0E, 0x_A1, 0x_0E, 0x_A1, 0x_A1, 0x_0E,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_A1,
	];

	helper(S, BASE, 49_366);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_139_902_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_139_902_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_8E, 0x_44, 0x_44, 0x_44, 0x_8E, 0x_44, 0x_44, 0x_44, 0x_8E, 0x_44, 0x_44, 0x_8E,
		0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_8E,
	];

	helper(S, BASE, 139_902);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_1_371_425_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_1_371_425_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0C,
		0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_20,
		0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_6D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_8C, 0x_6D, 0x_8C, 0x_6D, 0x_6D, 0x_8C, 0x_8C, 0x_8C, 0x_6D,
		0x_8C, 0x_8C, 0x_6D, 0x_8C, 0x_6D, 0x_6D, 0x_8C, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_8C,
	];

	helper(S, BASE, 1_371_425);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_13_076_930_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_13_076_930_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73,
		0x_73, 0x_73, 0x_3B, 0x_3B, 0x_73, 0x_73, 0x_73, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_73, 0x_73, 0x_73, 0x_3B,
		0x_73, 0x_73, 0x_3B, 0x_3B, 0x_3B, 0x_73, 0x_73, 0x_73, 0x_73, 0x_3B, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_3B,
	];

	helper(S, BASE, 13_076_930);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_905_668_096_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_905_668_096_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_09,
		0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_6C, 0x_6C, 0x_38, 0x_6C, 0x_38, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C,
		0x_38, 0x_6C, 0x_6C, 0x_38, 0x_6C, 0x_6C, 0x_38, 0x_38, 0x_6C, 0x_6C, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_6C,
	];

	helper(S, BASE, 905_668_096);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_5_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_5_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_09,
		0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_A9, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_A9, 0x_E9,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_82_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_82_in_base_3() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_73, 0x_CA, 0x_CA, 0x_CA, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_73, 0x_DA,
	];

	helper(S, BASE, 82);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_424_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_424_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_55, 0x_7B, 0x_DE,
		0x_7B, 0x_DE, 0x_55,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_55, 0x_7B,
	];

	helper(S, BASE, 424);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_9_815_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_9_815_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0A,
		0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_60, 0x_62, 0x_62, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_62, 0x_EE,
	];

	helper(S, BASE, 9_815);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_62_039_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_62_039_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_09,
		0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0C,
		0x_0A, 0x_0A, 0x_0B, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_2A, 0x_66, 0x_66, 0x_2A,
		0x_2A, 0x_66, 0x_66, 0x_DE, 0x_DE, 0x_66, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_2A, 0x_DE,
	];

	helper(S, BASE, 62_039);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_978_341_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_978_341_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7,
		0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_FE, 0x_6F, 0x_FE, 0x_FE, 0x_6F, 0x_D7, 0x_FE, 0x_D7, 0x_D7,
		0x_D7, 0x_6F, 0x_FE, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_FE, 0x_6F,
	];

	helper(S, BASE, 978_341);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_5_873_132_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_5_873_132_in_base_3() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_20,
		0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_20,
		0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_1E, 0x_8F, 0x_59, 0x_8F,
		0x_8F, 0x_1E, 0x_1E, 0x_8F, 0x_1E, 0x_1E, 0x_8F, 0x_59, 0x_1E, 0x_8F, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_1E, 0x_59,
	];

	helper(S, BASE, 5_873_132);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_13_222_156_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_13_222_156_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_20,
		0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7,
		0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7,
		0x_14, 0x_14, 0x_F7, 0x_14, 0x_37, 0x_14, 0x_14, 0x_F7, 0x_14, 0x_37, 0x_F7, 0x_37, 0x_37, 0x_37, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_37, 0x_14,
	];

	helper(S, BASE, 13_222_156);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_992_380_162_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_992_380_162_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_0A,
		0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B,
		0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B,
		0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_FD, 0x_52, 0x_FD, 0x_3B, 0x_3B, 0x_52, 0x_52, 0x_52, 0x_3B,
		0x_3B, 0x_3B, 0x_52, 0x_3B, 0x_52, 0x_FD, 0x_FD, 0x_FD, 0x_52, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_3B, 0x_52, 0x_FD,
	];

	helper(S, BASE, 992_380_162);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_8_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_8_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_20,
		0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_04,
		0x_DF,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_04, 0x_FF, 0x_DF, 0x_4A,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_51_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_51_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_20,
		0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_09,
		0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_5D, 0x_06, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_C8, 0x_5D, 0x_5B, 0x_B7,
	];

	helper(S, BASE, 51);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_666_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_666_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_20, 0x_20, 0x_20, 0x_20, 0x_09, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A,
		0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_3F, 0x_5A, 0x_3F, 0x_72, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_3F, 0x_D0, 0x_72, 0x_99,
	];

	helper(S, BASE, 666);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_7_064_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_7_064_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0A,
		0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_1D, 0x_21, 0x_21, 0x_1D, 0x_1D, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_21, 0x_1D, 0x_78, 0x_E1,
	];

	helper(S, BASE, 7_064);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_23_294_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_23_294_in_base_5() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0A, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_59, 0x_FD,
		0x_FD, 0x_59, 0x_59, 0x_4D, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_59, 0x_FD, 0x_4D, 0x_C8,
	];

	helper(S, BASE, 23_294);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_403_219_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_403_219_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0A,
		0x_0D, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_9A, 0x_54, 0x_54, 0x_D6,
		0x_54, 0x_54, 0x_C0, 0x_C0, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_9A, 0x_D1, 0x_C0, 0x_D6,
	];

	helper(S, BASE, 403_219);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_4_634_301_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_4_634_301_in_base_5() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_A0, 0x_2C,
		0x_7C, 0x_2C, 0x_A0, 0x_7C, 0x_7C, 0x_A0, 0x_29, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_2C, 0x_A0, 0x_55, 0x_7C,
	];

	helper(S, BASE, 4_634_301);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_66_122_367_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_66_122_367_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_E0, 0x_E0,
		0x_5B, 0x_BA, 0x_E0, 0x_E0, 0x_BA, 0x_C9, 0x_5B, 0x_BA, 0x_5B, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_E0, 0x_40, 0x_5B, 0x_BA,
	];

	helper(S, BASE, 66_122_367);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_361_316_064_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_361_316_064_in_base_5() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B,
		0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B,
		0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B,
		0x_4B, 0x_43, 0x_BC, 0x_43, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_43, 0x_4B, 0x_AD, 0x_BC, 0x_BC, 0x_7A,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_43, 0x_BC, 0x_AD, 0x_7A,
	];

	helper(S, BASE, 361_316_064);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_2_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_2_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_0D,
		0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_09,
		0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_50, 0x_44, 0x_2E, 0x_25, 0x_D8, 0x_80,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_87_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_87_in_base_7() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0C,
		0x_0A, 0x_09, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_B4, 0x_23,
		0x_38,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_B4, 0x_46, 0x_38, 0x_22, 0x_23, 0x_05,
	];

	helper(S, BASE, 87);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_664_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_664_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_09,
		0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0C,
		0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_5D, 0x_E5, 0x_EC, 0x_E5,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_5D, 0x_3C, 0x_EC, 0x_75, 0x_BE, 0x_E5,
	];

	helper(S, BASE, 664);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_1_025_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_1_025_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0A,
		0x_20, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_D9, 0x_95, 0x_95, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_1D, 0x_D9, 0x_28, 0x_60, 0x_C9, 0x_95,
	];

	helper(S, BASE, 1_025);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_12_385_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_12_385_in_base_7() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_FA, 0x_FA, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_16, 0x_CB, 0x_FA, 0x_16, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_CB, 0x_86, 0x_05, 0x_A6, 0x_16, 0x_65,
	];

	helper(S, BASE, 12_385);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_535_287_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_535_287_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0C,
		0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0C,
		0x_0A, 0x_D7, 0x_E0, 0x_8B, 0x_60, 0x_CC, 0x_E0, 0x_83, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_83, 0x_DE, 0x_8B, 0x_E0, 0x_60, 0x_CC,
	];

	helper(S, BASE, 535_287);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_5_441_979_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_5_441_979_in_base_7() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_B0, 0x_17, 0x_1A, 0x_41, 0x_EC, 0x_80, 0x_EC,
		0x_EC, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_41, 0x_F3, 0x_80, 0x_1A, 0x_EC, 0x_17,
	];

	helper(S, BASE, 5_441_979);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_54_121_225_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_54_121_225_in_base_7() {
	const S: &[u8] = &[
		0x_0B, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_8C, 0x_69, 0x_69, 0x_D1, 0x_91, 0x_8C,
		0x_91, 0x_D1, 0x_D1, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_8C, 0x_69, 0x_76, 0x_78, 0x_D1, 0x_03,
	];

	helper(S, BASE, 54_121_225);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_469_100_219_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_469_100_219_in_base_7() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0C,
		0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_09,
		0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_98, 0x_ED, 0x_ED, 0x_75, 0x_ED, 0x_75, 0x_12, 0x_12, 0x_12, 0x_B3, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_98, 0x_75, 0x_6C, 0x_ED, 0x_A4, 0x_B3,
	];

	helper(S, BASE, 469_100_219);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_7_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_7_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0C,
		0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_20,
		0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37,
		0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37,
		0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37,
		0x_52,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_A6, 0x_D3, 0x_9C, 0x_5C, 0x_BE, 0x_1A, 0x_52, 0x_2E, 0x_A2, 0x_2F,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_13_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_13_in_base_11() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0A,
		0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0A,
		0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_B0, 0x_B0, 0x_AA, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_AA, 0x_05, 0x_29, 0x_43, 0x_69, 0x_53, 0x_98, 0x_48, 0x_25, 0x_AE,
	];

	helper(S, BASE, 13);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_555_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_555_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_0C,
		0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0,
		0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0,
		0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_05, 0x_95,
		0x_85,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_64, 0x_4E, 0x_45, 0x_05, 0x_85, 0x_95, 0x_7C, 0x_2A, 0x_8E, 0x_96,
	];

	helper(S, BASE, 555);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_8_187_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_8_187_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_B7, 0x_89, 0x_EA, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_89, 0x_42, 0x_1B, 0x_69, 0x_5D, 0x_B7, 0x_EA, 0x_33, 0x_82, 0x_67,
	];

	helper(S, BASE, 8_187);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_28_112_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_28_112_in_base_11() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_0D,
		0x_0A, 0x_0C, 0x_0A, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_74, 0x_DB, 0x_74, 0x_ED, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_74, 0x_99, 0x_ED, 0x_4C, 0x_07, 0x_C3, 0x_78, 0x_FF, 0x_EA, 0x_DB,
	];

	helper(S, BASE, 28_112);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_987_653_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_987_653_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_09,
		0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49,
		0x_49, 0x_49, 0x_49, 0x_49, 0x_1F, 0x_40, 0x_6A, 0x_49, 0x_3F, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_40, 0x_43, 0x_F9, 0x_3F, 0x_6A, 0x_1F, 0x_01, 0x_B6, 0x_8F, 0x_AC,
	];

	helper(S, BASE, 987_653);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_9_557_520_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_9_557_520_in_base_11() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0C,
		0x_20, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_A0, 0x_50, 0x_92, 0x_13, 0x_A9, 0x_13, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_DD, 0x_71, 0x_92, 0x_50, 0x_A0, 0x_11, 0x_A9, 0x_13, 0x_B5, 0x_D0,
	];

	helper(S, BASE, 9_557_520);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_64_645_717_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_64_645_717_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_09,
		0x_09, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0B,
		0x_20, 0x_0C, 0x_20, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80,
		0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80,
		0x_80, 0x_80, 0x_80, 0x_DA, 0x_DA, 0x_1B, 0x_DC, 0x_DC, 0x_DA, 0x_05, 0x_DC,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_05, 0x_CE, 0x_DA, 0x_DC, 0x_1B, 0x_88, 0x_5E, 0x_C0, 0x_87, 0x_A3,
	];

	helper(S, BASE, 64_645_717);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_559_388_041_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_559_388_041_in_base_11() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0A,
		0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_20,
		0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_49, 0x_FC, 0x_AB, 0x_81, 0x_BE, 0x_0F, 0x_42, 0x_AB, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_93, 0x_49, 0x_BE, 0x_71, 0x_42, 0x_FC, 0x_AB, 0x_81, 0x_D0, 0x_0F,
	];

	helper(S, BASE, 559_388_041);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_8_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_8_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0A,
		0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_15, 0x_E7, 0x_17, 0x_60, 0x_52, 0x_5A, 0x_CF, 0x_3E, 0x_AE, 0x_FF, 0x_3F, 0x_6B,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_93_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_93_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_09,
		0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0D,
		0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC,
		0x_FC, 0x_FC, 0x_FC, 0x_04, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_35, 0x_90, 0x_85, 0x_52, 0x_71, 0x_AD, 0x_04, 0x_D0, 0x_A7, 0x_3C, 0x_34, 0x_EB,
	];

	helper(S, BASE, 93);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_902_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_902_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_20, 0x_09, 0x_0D,
		0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_0A,
		0x_0A, 0x_0C, 0x_09, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40,
		0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_FF, 0x_AE, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_C9, 0x_4E, 0x_30, 0x_AE, 0x_FF, 0x_B9, 0x_7D, 0x_13, 0x_8A, 0x_1D, 0x_62, 0x_4D,
	];

	helper(S, BASE, 902);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_3_743_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_3_743_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_8C, 0x_16, 0x_8C, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_8C, 0x_52, 0x_EB, 0x_CC, 0x_1D, 0x_D7, 0x_3D, 0x_47, 0x_16, 0x_1F, 0x_56, 0x_2F,
	];

	helper(S, BASE, 3_743);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_42_148_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_42_148_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53,
		0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_57,
		0x_25, 0x_EE, 0x_CB, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_53, 0x_57, 0x_EE, 0x_04, 0x_DD, 0x_CB, 0x_25, 0x_61, 0x_C7, 0x_54, 0x_92, 0x_1A, 0x_9D,
	];

	helper(S, BASE, 42_148);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_242_039_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_242_039_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_0A,
		0x_20, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_20,
		0x_0A, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_8E, 0x_56, 0x_8F, 0x_8F, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_E5, 0x_8F, 0x_66, 0x_B9, 0x_27, 0x_56, 0x_FD, 0x_8E, 0x_74, 0x_A8, 0x_51, 0x_BC,
	];

	helper(S, BASE, 242_039);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_9_213_097_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_9_213_097_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40,
		0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_78,
		0x_56, 0x_77, 0x_8F, 0x_2E, 0x_DE, 0x_77,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_78, 0x_07, 0x_F6, 0x_DE, 0x_10, 0x_2E, 0x_8F, 0x_22, 0x_91, 0x_77, 0x_56, 0x_E8,
	];

	helper(S, BASE, 9_213_097);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_10_797_747_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_10_797_747_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_09,
		0x_0C, 0x_0A, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_D9, 0x_B1, 0x_4F, 0x_5D, 0x_3C, 0x_38,
		0x_38,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_4F, 0x_D9, 0x_B1, 0x_9C, 0x_C6, 0x_CC, 0x_C1, 0x_08, 0x_3C, 0x_55, 0x_E9, 0x_38,
	];

	helper(S, BASE, 10_797_747);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_561_156_733_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_561_156_733_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0,
		0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_34, 0x_44, 0x_F9, 0x_7B, 0x_34, 0x_EE, 0x_A0, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_1F, 0x_FA, 0x_F9, 0x_7B, 0x_3A, 0x_29, 0x_EE, 0x_34, 0x_E5, 0x_89, 0x_A9, 0x_44,
	];

	helper(S, BASE, 561_156_733);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_5_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_5_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0C,
		0x_0D, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_20,
		0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_85, 0x_2C, 0x_C1, 0x_90, 0x_93, 0x_CA, 0x_D6, 0x_F8, 0x_5F, 0x_CC, 0x_FC, 0x_97, 0x_B7, 0x_7C,
		0x_41, 0x_99, 0x_DC, 0x_3E,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_16_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_16_in_base_19() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_09,
		0x_0A, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0A,
		0x_0D, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_11, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_4E,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_74, 0x_67, 0x_AB, 0x_59, 0x_AF, 0x_E3, 0x_B0, 0x_E1, 0x_6E, 0x_3B, 0x_B1, 0x_99, 0x_43, 0x_B4,
		0x_CE, 0x_4E, 0x_6B, 0x_A2,
	];

	helper(S, BASE, 16);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_148_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_148_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_33, 0x_33, 0x_33, 0x_33, 0x_7A, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_35, 0x_BC, 0x_A7, 0x_43, 0x_19, 0x_C3, 0x_7A, 0x_E4, 0x_5C, 0x_47, 0x_F8, 0x_86, 0x_90, 0x_99,
		0x_91, 0x_23, 0x_8A, 0x_2A,
	];

	helper(S, BASE, 148);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_5_689_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_5_689_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0A,
		0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_59, 0x_A5, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_1B, 0x_29, 0x_64, 0x_B6, 0x_06, 0x_77, 0x_52, 0x_3E, 0x_91, 0x_62, 0x_67, 0x_D1, 0x_83, 0x_A5,
		0x_59, 0x_90, 0x_9A, 0x_E0,
	];

	helper(S, BASE, 5_689);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_84_797_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_84_797_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0C,
		0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_79,
		0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_30, 0x_10, 0x_EC, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_79, 0x_C7, 0x_9A, 0x_DA, 0x_61, 0x_F3, 0x_10, 0x_4B, 0x_F4, 0x_E9, 0x_A3, 0x_CB, 0x_30, 0x_33, 0x_49,
		0x_D9, 0x_C9, 0x_EC, 0x_AF,
	];

	helper(S, BASE, 84_797);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_762_771_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_762_771_in_base_19() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0B,
		0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_09,
		0x_09, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07,
		0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_39, 0x_A4, 0x_E5, 0x_BC, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_80, 0x_D5, 0x_E5, 0x_DB, 0x_39, 0x_8A, 0x_9D, 0x_B6, 0x_C3, 0x_3C, 0x_6D, 0x_CA, 0x_1E, 0x_40,
		0x_27, 0x_A4, 0x_BC, 0x_A2,
	];

	helper(S, BASE, 762_771);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_9_961_998_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_9_961_998_in_base_19() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_0B,
		0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_09,
		0x_20, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_28, 0x_41,
		0x_5B, 0x_54, 0x_EF, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_2F, 0x_A6, 0x_D2, 0x_28, 0x_D3, 0x_49, 0x_54, 0x_5B, 0x_EC, 0x_EF, 0x_04, 0x_CA, 0x_48, 0x_15,
		0x_24, 0x_C5, 0x_29, 0x_08,
	];

	helper(S, BASE, 9_961_998);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_50_898_183_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_50_898_183_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A,
		0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_6B, 0x_6B, 0x_97, 0x_97, 0x_6C, 0x_C1, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_3A, 0x_6B, 0x_2E, 0x_C1, 0x_E1, 0x_8E, 0x_6D, 0x_1C, 0x_05, 0x_8C, 0x_97, 0x_BD, 0x_6C, 0x_F2, 0x_25,
		0x_78, 0x_66, 0x_15, 0x_29,
	];

	helper(S, BASE, 50_898_183);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_159_280_319_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_159_280_319_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_25, 0x_80,
		0x_F1, 0x_E1, 0x_42, 0x_13, 0x_13,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_42, 0x_F2, 0x_25, 0x_E1, 0x_EC, 0x_F1, 0x_80, 0x_0F, 0x_BA, 0x_55, 0x_D4, 0x_87, 0x_13, 0x_17,
		0x_8A, 0x_A6, 0x_15, 0x_2C,
	];

	helper(S, BASE, 159_280_319);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_5_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_5_in_base_42() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0A,
		0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_0C,
		0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_06, 0x_BA, 0x_BB, 0x_53, 0x_ED, 0x_FD, 0x_BE, 0x_D9, 0x_F7, 0x_F3, 0x_CF, 0x_52, 0x_FE, 0x_10,
		0x_E0, 0x_EA, 0x_08, 0x_36, 0x_89, 0x_FC, 0x_EE, 0x_54, 0x_EC, 0x_82, 0x_4C, 0x_D5, 0x_59, 0x_4F, 0x_E5,
		0x_D6, 0x_D4, 0x_1C, 0x_3A, 0x_B8, 0x_D1, 0x_9C, 0x_E9, 0x_7C, 0x_F1, 0x_12, 0x_70,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_59_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_59_in_base_42() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_09,
		0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_0D,
		0x_0A, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_7C, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_1F, 0x_7C, 0x_57, 0x_7B, 0x_E9, 0x_D0, 0x_68, 0x_6F, 0x_9A, 0x_63, 0x_DF, 0x_36, 0x_F9, 0x_50, 0x_4C,
		0x_99, 0x_54, 0x_24, 0x_BD, 0x_F8, 0x_92, 0x_8E, 0x_2E, 0x_F7, 0x_E4, 0x_90, 0x_D7, 0x_86, 0x_D1, 0x_39,
		0x_62, 0x_3D, 0x_41, 0x_1C, 0x_85, 0x_6E, 0x_A7, 0x_AA, 0x_A0, 0x_96, 0x_EE, 0x_A9,
	];

	helper(S, BASE, 59);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_548_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_548_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_0A,
		0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_09,
		0x_0A, 0x_0D, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB,
		0x_55, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_3C, 0x_DB, 0x_FA, 0x_BA, 0x_5D, 0x_61, 0x_ED, 0x_B1, 0x_7D, 0x_85, 0x_8B, 0x_9B, 0x_55, 0x_40,
		0x_D4, 0x_82, 0x_56, 0x_73, 0x_EA, 0x_69, 0x_27, 0x_EF, 0x_78, 0x_93, 0x_2E, 0x_B7, 0x_DA, 0x_BB, 0x_89,
		0x_D3, 0x_07, 0x_AE, 0x_53, 0x_B8, 0x_C2, 0x_9E, 0x_31, 0x_4E, 0x_AD, 0x_83, 0x_33,
	];

	helper(S, BASE, 548);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_5_538_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_5_538_in_base_42() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0C,
		0x_0B, 0x_0C, 0x_09, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_84, 0x_E9, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_44, 0x_30, 0x_84, 0x_BF, 0x_E9, 0x_E3, 0x_DD, 0x_5A, 0x_1A, 0x_73, 0x_43, 0x_7A, 0x_2A, 0x_D5,
		0x_CE, 0x_E7, 0x_29, 0x_C9, 0x_1D, 0x_D7, 0x_5E, 0x_5F, 0x_57, 0x_47, 0x_DA, 0x_56, 0x_FA, 0x_36, 0x_3C,
		0x_CB, 0x_75, 0x_6D, 0x_62, 0x_A9, 0x_6E, 0x_DE, 0x_AC, 0x_C0, 0x_1F, 0x_34, 0x_78,
	];

	helper(S, BASE, 5_538);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_53_340_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_53_340_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_0D,
		0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_DD, 0x_DD,
		0x_DD, 0x_DD, 0x_80, 0x_D1, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_B3, 0x_8F, 0x_61, 0x_D7, 0x_96, 0x_C3, 0x_41, 0x_9F, 0x_6D, 0x_D1, 0x_9B, 0x_EE, 0x_6E, 0x_33,
		0x_9A, 0x_C5, 0x_92, 0x_FA, 0x_B9, 0x_1E, 0x_81, 0x_AF, 0x_CA, 0x_FF, 0x_BA, 0x_E0, 0x_39, 0x_05, 0x_67,
		0x_80, 0x_FB, 0x_07, 0x_9C, 0x_A8, 0x_73, 0x_17, 0x_B7, 0x_72, 0x_E6, 0x_3E, 0x_14,
	];

	helper(S, BASE, 53_340);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_576_666_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_576_666_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_09,
		0x_0C, 0x_09, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_7E,
		0x_92, 0x_E4, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_F0, 0x_97, 0x_61, 0x_84, 0x_9C, 0x_FE, 0x_7E, 0x_F7, 0x_78, 0x_AB, 0x_4D, 0x_25, 0x_BE, 0x_FF,
		0x_AA, 0x_36, 0x_81, 0x_A6, 0x_B2, 0x_2E, 0x_C0, 0x_24, 0x_D0, 0x_B0, 0x_5B, 0x_9D, 0x_9F, 0x_44, 0x_68,
		0x_AD, 0x_40, 0x_92, 0x_35, 0x_28, 0x_42, 0x_A2, 0x_E6, 0x_E4, 0x_95, 0x_DF, 0x_DD,
	];

	helper(S, BASE, 576_666);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_7_747_781_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_7_747_781_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76,
		0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76,
		0x_76, 0x_76, 0x_76, 0x_76, 0x_11, 0x_37, 0x_31, 0x_0E, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_93, 0x_11, 0x_D6, 0x_A2, 0x_48, 0x_0E, 0x_5D, 0x_A9, 0x_6F, 0x_43, 0x_5B, 0x_52, 0x_D5, 0x_81,
		0x_35, 0x_71, 0x_69, 0x_56, 0x_EE, 0x_37, 0x_89, 0x_72, 0x_B2, 0x_31, 0x_66, 0x_DF, 0x_E0, 0x_4F, 0x_BA,
		0x_86, 0x_14, 0x_2F, 0x_EC, 0x_49, 0x_F5, 0x_67, 0x_92, 0x_13, 0x_44, 0x_25, 0x_19,
	];

	helper(S, BASE, 7_747_781);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_97_240_726_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_97_240_726_in_base_42() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_09,
		0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0C,
		0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3A, 0x_C0, 0x_FF, 0x_91, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_49, 0x_D0, 0x_FC, 0x_43, 0x_91, 0x_4D, 0x_35, 0x_D8, 0x_1A, 0x_C0, 0x_2A, 0x_2F, 0x_A9, 0x_88,
		0x_6C, 0x_FD, 0x_E3, 0x_47, 0x_7F, 0x_50, 0x_FF, 0x_E4, 0x_18, 0x_C5, 0x_F3, 0x_77, 0x_39, 0x_17, 0x_41,
		0x_A0, 0x_3A, 0x_28, 0x_48, 0x_EA, 0x_E0, 0x_05, 0x_A2, 0x_9C, 0x_33, 0x_D7, 0x_DE,
	];

	helper(S, BASE, 97_240_726);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_962_992_436_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_962_992_436_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_0B,
		0x_0B, 0x_20, 0x_09, 0x_0D, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_1C, 0x_BC,
		0x_28, 0x_6E, 0x_C7, 0x_6A,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_3B, 0x_77, 0x_C7, 0x_51, 0x_CE, 0x_1A, 0x_1C, 0x_55, 0x_B0, 0x_08, 0x_2E, 0x_B5, 0x_FA, 0x_6A,
		0x_BC, 0x_75, 0x_80, 0x_BE, 0x_28, 0x_66, 0x_C5, 0x_9B, 0x_84, 0x_65, 0x_9F, 0x_81, 0x_5F, 0x_10, 0x_2F,
		0x_78, 0x_8E, 0x_EA, 0x_CA, 0x_05, 0x_E5, 0x_58, 0x_9A, 0x_D9, 0x_01, 0x_6E, 0x_5D,
	];

	helper(S, BASE, 962_992_436);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_8_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_8_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0C,
		0x_0B, 0x_09, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2,
		0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2,
		0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_CA, 0x_D9, 0x_5B, 0x_5D, 0x_46, 0x_27, 0x_9F, 0x_72, 0x_BC, 0x_A5, 0x_A9, 0x_E3, 0x_48, 0x_DF,
		0x_91, 0x_21, 0x_B0, 0x_6F, 0x_D4, 0x_1B, 0x_D2, 0x_CB, 0x_22, 0x_B8, 0x_E2, 0x_8D, 0x_AB, 0x_77, 0x_DA,
		0x_53, 0x_32, 0x_98, 0x_0E, 0x_19, 0x_AE, 0x_D6, 0x_03, 0x_F5, 0x_F3, 0x_CE, 0x_29, 0x_84, 0x_61, 0x_16,
		0x_1C, 0x_7F, 0x_2C, 0x_01, 0x_DD, 0x_7D, 0x_2E, 0x_70, 0x_FE, 0x_9D, 0x_40, 0x_1D, 0x_92, 0x_DE, 0x_04,
		0x_4A, 0x_CF, 0x_37, 0x_A1, 0x_4C, 0x_C0, 0x_EA, 0x_76, 0x_8E, 0x_A3, 0x_FC, 0x_60, 0x_96,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_92_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_92_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_09,
		0x_0D, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93,
		0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93,
		0x_93, 0x_93, 0x_93, 0x_93, 0x_3F, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_3F, 0x_1A, 0x_8E, 0x_86, 0x_24, 0x_FB, 0x_7B, 0x_D4, 0x_56, 0x_18, 0x_EB, 0x_87, 0x_07, 0x_45,
		0x_9C, 0x_70, 0x_2C, 0x_94, 0x_27, 0x_BC, 0x_83, 0x_EA, 0x_F6, 0x_1E, 0x_81, 0x_C6, 0x_06, 0x_6F, 0x_61,
		0x_10, 0x_FD, 0x_53, 0x_03, 0x_5C, 0x_7D, 0x_A0, 0x_59, 0x_80, 0x_99, 0x_BB, 0x_A7, 0x_51, 0x_C7, 0x_A6,
		0x_A5, 0x_A3, 0x_9B, 0x_4B, 0x_47, 0x_82, 0x_E7, 0x_5D, 0x_E8, 0x_90, 0x_F3, 0x_89, 0x_04, 0x_64, 0x_40,
		0x_26, 0x_DA, 0x_6D, 0x_7F, 0x_F4, 0x_EE, 0x_C0, 0x_02, 0x_52, 0x_CB, 0x_28, 0x_BD, 0x_C5,
	];

	helper(S, BASE, 92);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_632_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_632_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_0D,
		0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_19, 0x_CA,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_80, 0x_B4, 0x_04, 0x_D7, 0x_FF, 0x_E8, 0x_C2, 0x_19, 0x_9E, 0x_82, 0x_D3, 0x_7C, 0x_1F, 0x_13,
		0x_BE, 0x_1A, 0x_FB, 0x_DF, 0x_79, 0x_68, 0x_E0, 0x_D8, 0x_6F, 0x_17, 0x_B1, 0x_C7, 0x_4F, 0x_65, 0x_4A,
		0x_98, 0x_A6, 0x_87, 0x_6A, 0x_AB, 0x_45, 0x_91, 0x_40, 0x_9D, 0x_D5, 0x_6B, 0x_6D, 0x_43, 0x_69, 0x_57,
		0x_9F, 0x_76, 0x_77, 0x_CA, 0x_4B, 0x_CF, 0x_3B, 0x_B9, 0x_A0, 0x_A2, 0x_67, 0x_49, 0x_7B, 0x_F4, 0x_8F,
		0x_B5, 0x_05, 0x_B8, 0x_94, 0x_83, 0x_2E, 0x_95, 0x_FD, 0x_EE, 0x_24, 0x_02, 0x_D0, 0x_92,
	];

	helper(S, BASE, 632);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_9_482_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_9_482_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_09,
		0x_0A, 0x_0C, 0x_0A, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_12, 0x_3D, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_12, 0x_6D, 0x_23, 0x_DA, 0x_24, 0x_5C, 0x_EF, 0x_42, 0x_94, 0x_E4, 0x_11, 0x_C4, 0x_9B, 0x_7A,
		0x_BE, 0x_DE, 0x_CF, 0x_28, 0x_0E, 0x_4E, 0x_08, 0x_35, 0x_55, 0x_61, 0x_B8, 0x_6B, 0x_F3, 0x_C9, 0x_50,
		0x_67, 0x_69, 0x_31, 0x_7B, 0x_59, 0x_1C, 0x_81, 0x_32, 0x_6A, 0x_15, 0x_7E, 0x_A3, 0x_75, 0x_26, 0x_02,
		0x_19, 0x_99, 0x_49, 0x_D8, 0x_E0, 0x_86, 0x_63, 0x_41, 0x_E8, 0x_4F, 0x_7D, 0x_3D, 0x_CB, 0x_8F, 0x_EA,
		0x_06, 0x_8A, 0x_EE, 0x_2F, 0x_7C, 0x_30, 0x_F2, 0x_53, 0x_10, 0x_BF, 0x_97, 0x_52, 0x_7F,
	];

	helper(S, BASE, 9_482);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_68_709_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_68_709_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0B,
		0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C,
		0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C,
		0x_6C, 0x_6C, 0x_BF, 0x_08, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_6C, 0x_2A, 0x_47, 0x_54, 0x_8D, 0x_73, 0x_C4, 0x_02, 0x_CD, 0x_2C, 0x_C2, 0x_10, 0x_BF, 0x_8B, 0x_52,
		0x_A6, 0x_22, 0x_74, 0x_E6, 0x_AA, 0x_5F, 0x_35, 0x_85, 0x_B2, 0x_07, 0x_65, 0x_EF, 0x_62, 0x_0F, 0x_8C,
		0x_14, 0x_AE, 0x_B5, 0x_EC, 0x_1D, 0x_E4, 0x_7A, 0x_80, 0x_E1, 0x_E7, 0x_60, 0x_01, 0x_1B, 0x_70, 0x_5B,
		0x_90, 0x_41, 0x_DC, 0x_B7, 0x_C7, 0x_6D, 0x_5C, 0x_5A, 0x_F8, 0x_9C, 0x_CC, 0x_B4, 0x_D2, 0x_33, 0x_27,
		0x_BE, 0x_F2, 0x_4E, 0x_40, 0x_7D, 0x_08, 0x_EA, 0x_7C, 0x_6E, 0x_FD, 0x_FE, 0x_29, 0x_BA,
	];

	helper(S, BASE, 68_709);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_230_567_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_230_567_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33,
		0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_76, 0x_BE, 0x_BB,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_87, 0x_1A, 0x_82, 0x_A6, 0x_B1, 0x_6E, 0x_B8, 0x_83, 0x_1C, 0x_AB, 0x_CC, 0x_37, 0x_19, 0x_9B,
		0x_32, 0x_A8, 0x_77, 0x_07, 0x_BE, 0x_69, 0x_22, 0x_7E, 0x_16, 0x_25, 0x_EF, 0x_14, 0x_B0, 0x_B7, 0x_7D,
		0x_F0, 0x_72, 0x_D3, 0x_BB, 0x_39, 0x_CF, 0x_E8, 0x_2E, 0x_E0, 0x_10, 0x_1F, 0x_35, 0x_47, 0x_76, 0x_A5,
		0x_DB, 0x_78, 0x_9A, 0x_B5, 0x_A3, 0x_1D, 0x_DE, 0x_95, 0x_59, 0x_5D, 0x_D5, 0x_F7, 0x_B9, 0x_4B, 0x_57,
		0x_E7, 0x_AC, 0x_A0, 0x_91, 0x_D8, 0x_FE, 0x_8C, 0x_9D, 0x_17, 0x_28, 0x_86, 0x_71, 0x_F6,
	];

	helper(S, BASE, 230_567);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_6_690_898_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_6_690_898_in_base_73() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_20,
		0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0D,
		0x_09, 0x_0D, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B4, 0x_A2, 0x_6B, 0x_DF,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_5F, 0x_04, 0x_F5, 0x_FB, 0x_AE, 0x_7E, 0x_50, 0x_F1, 0x_A7, 0x_DF, 0x_E9, 0x_AA, 0x_8D, 0x_A2,
		0x_9F, 0x_63, 0x_B4, 0x_78, 0x_0F, 0x_79, 0x_23, 0x_08, 0x_B3, 0x_12, 0x_C0, 0x_98, 0x_AB, 0x_E7, 0x_8C,
		0x_52, 0x_FA, 0x_CA, 0x_F2, 0x_48, 0x_4C, 0x_93, 0x_2E, 0x_C2, 0x_33, 0x_B9, 0x_6B, 0x_1D, 0x_FF, 0x_D1,
		0x_C9, 0x_62, 0x_65, 0x_F9, 0x_BE, 0x_91, 0x_4F, 0x_88, 0x_E1, 0x_E5, 0x_D9, 0x_45, 0x_15, 0x_DC, 0x_E2,
		0x_94, 0x_54, 0x_B8, 0x_01, 0x_D5, 0x_C4, 0x_A8, 0x_CE, 0x_40, 0x_CC, 0x_DD, 0x_7C, 0x_D2,
	];

	helper(S, BASE, 6_690_898);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_91_805_256_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_91_805_256_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0B,
		0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_27, 0x_27, 0x_EF, 0x_3B, 0x_C8, 0x_56, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_D7, 0x_70, 0x_EF, 0x_7D, 0x_AE, 0x_A0, 0x_03, 0x_77, 0x_B5, 0x_FD, 0x_2C, 0x_7E, 0x_3C, 0x_3A,
		0x_B2, 0x_3B, 0x_B6, 0x_96, 0x_01, 0x_3E, 0x_02, 0x_44, 0x_87, 0x_6C, 0x_EE, 0x_DF, 0x_42, 0x_F7, 0x_A8,
		0x_CC, 0x_97, 0x_18, 0x_33, 0x_88, 0x_56, 0x_13, 0x_10, 0x_15, 0x_06, 0x_C9, 0x_ED, 0x_F6, 0x_58, 0x_DE,
		0x_3D, 0x_21, 0x_34, 0x_41, 0x_74, 0x_69, 0x_25, 0x_39, 0x_85, 0x_57, 0x_3F, 0x_90, 0x_9D, 0x_A1, 0x_C1,
		0x_83, 0x_CE, 0x_DA, 0x_32, 0x_7A, 0x_B7, 0x_FF, 0x_28, 0x_FE, 0x_7B, 0x_DC, 0x_AF, 0x_C8,
	];

	helper(S, BASE, 91_805_256);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_858_627_300_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_858_627_300_in_base_73() {
	const S: &[u8] = &[
		0x_0D, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0,
		0x_C0, 0x_6D, 0x_3B, 0x_7C, 0x_F8, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_6B, 0x_76, 0x_13, 0x_10, 0x_4D, 0x_BA, 0x_0E, 0x_58, 0x_AA, 0x_46, 0x_E1, 0x_7C, 0x_2E, 0x_FF,
		0x_9F, 0x_93, 0x_3B, 0x_2C, 0x_30, 0x_9B, 0x_05, 0x_D3, 0x_54, 0x_94, 0x_5D, 0x_F7, 0x_55, 0x_69, 0x_3D,
		0x_6D, 0x_D4, 0x_E4, 0x_97, 0x_9E, 0x_68, 0x_F5, 0x_E7, 0x_F8, 0x_79, 0x_6C, 0x_C5, 0x_92, 0x_BE, 0x_5E,
		0x_50, 0x_17, 0x_CD, 0x_E2, 0x_6A, 0x_D0, 0x_B1, 0x_5A, 0x_53, 0x_74, 0x_35, 0x_A2, 0x_7E, 0x_2F, 0x_EF,
		0x_FD, 0x_F4, 0x_E0, 0x_F2, 0x_28, 0x_95, 0x_7D, 0x_7B, 0x_67, 0x_87, 0x_8C, 0x_77, 0x_9D,
	];

	helper(S, BASE, 858_627_300);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_8_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_8_in_base_113() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_09, 0x_0D, 0x_0B,
		0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0C,
		0x_0C, 0x_0C, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_5F, 0x_37, 0x_5C, 0x_FE, 0x_DC, 0x_15, 0x_B6, 0x_1A, 0x_3B, 0x_A7, 0x_4F, 0x_56, 0x_F7, 0x_72,
		0x_1E, 0x_80, 0x_22, 0x_43, 0x_2F, 0x_58, 0x_44, 0x_3C, 0x_79, 0x_EC, 0x_C2, 0x_31, 0x_C8, 0x_42, 0x_DF,
		0x_F0, 0x_02, 0x_EA, 0x_A6, 0x_89, 0x_F4, 0x_B4, 0x_6F, 0x_C7, 0x_D9, 0x_B3, 0x_7F, 0x_D1, 0x_63, 0x_81,
		0x_54, 0x_94, 0x_D6, 0x_3A, 0x_52, 0x_9A, 0x_85, 0x_08, 0x_41, 0x_1F, 0x_CF, 0x_64, 0x_8D, 0x_4B, 0x_E0,
		0x_2E, 0x_A3, 0x_05, 0x_38, 0x_7D, 0x_B8, 0x_59, 0x_61, 0x_FA, 0x_84, 0x_73, 0x_71, 0x_27, 0x_8A, 0x_BB,
		0x_6A, 0x_03, 0x_86, 0x_8E, 0x_76, 0x_6C, 0x_D2, 0x_4A, 0x_EE, 0x_11, 0x_7C, 0x_DD, 0x_FB, 0x_39, 0x_F5,
		0x_74, 0x_49, 0x_18, 0x_04, 0x_48, 0x_F9, 0x_B1, 0x_78, 0x_A5, 0x_36, 0x_EF, 0x_FF, 0x_9C, 0x_67, 0x_68,
		0x_B9, 0x_D0, 0x_35, 0x_1B, 0x_C4, 0x_70, 0x_1D, 0x_B5,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_44_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_44_in_base_113() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0D,
		0x_20, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_0C,
		0x_0C, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_63,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_E1, 0x_05, 0x_21, 0x_DB, 0x_95, 0x_84, 0x_83, 0x_43, 0x_AD, 0x_AF, 0x_A4, 0x_DC, 0x_DD, 0x_42,
		0x_D8, 0x_A3, 0x_70, 0x_CC, 0x_C4, 0x_B4, 0x_CA, 0x_2F, 0x_67, 0x_75, 0x_3C, 0x_7B, 0x_8D, 0x_37, 0x_A9,
		0x_2C, 0x_97, 0x_BD, 0x_C9, 0x_3D, 0x_BC, 0x_A2, 0x_38, 0x_7A, 0x_06, 0x_04, 0x_BB, 0x_11, 0x_24, 0x_63,
		0x_FD, 0x_C7, 0x_44, 0x_1A, 0x_E0, 0x_82, 0x_E6, 0x_B9, 0x_D3, 0x_E7, 0x_D0, 0x_A6, 0x_62, 0x_34, 0x_7F,
		0x_EB, 0x_AC, 0x_E2, 0x_FE, 0x_9A, 0x_86, 0x_5C, 0x_88, 0x_10, 0x_DE, 0x_87, 0x_91, 0x_12, 0x_F7, 0x_3F,
		0x_CF, 0x_6A, 0x_50, 0x_F6, 0x_4A, 0x_71, 0x_81, 0x_7D, 0x_E8, 0x_EE, 0x_16, 0x_3A, 0x_73, 0x_1B, 0x_45,
		0x_27, 0x_60, 0x_58, 0x_5A, 0x_94, 0x_0E, 0x_B3, 0x_B6, 0x_6D, 0x_1E, 0x_4F, 0x_5E, 0x_E3, 0x_AB, 0x_78,
		0x_E4, 0x_55, 0x_F0, 0x_E9, 0x_C5, 0x_9E, 0x_33, 0x_49,
	];

	helper(S, BASE, 44);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_283_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_283_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0B,
		0x_0C, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_09,
		0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19,
		0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19,
		0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19,
		0x_D4, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_B9, 0x_D4, 0x_46, 0x_FE, 0x_AA, 0x_8A, 0x_43, 0x_40, 0x_2F, 0x_BD, 0x_3B, 0x_59, 0x_81, 0x_6D,
		0x_95, 0x_71, 0x_9C, 0x_D1, 0x_58, 0x_53, 0x_4E, 0x_66, 0x_69, 0x_C5, 0x_2E, 0x_D7, 0x_93, 0x_22, 0x_62,
		0x_10, 0x_41, 0x_FD, 0x_FC, 0x_79, 0x_04, 0x_EA, 0x_50, 0x_80, 0x_B1, 0x_29, 0x_63, 0x_ED, 0x_C6, 0x_A2,
		0x_FB, 0x_A8, 0x_75, 0x_FA, 0x_45, 0x_96, 0x_87, 0x_83, 0x_D0, 0x_16, 0x_A4, 0x_35, 0x_D3, 0x_94, 0x_9B,
		0x_5F, 0x_85, 0x_6C, 0x_8D, 0x_DD, 0x_99, 0x_73, 0x_CF, 0x_9D, 0x_82, 0x_BA, 0x_EE, 0x_9F, 0x_3A, 0x_57,
		0x_C9, 0x_24, 0x_48, 0x_9A, 0x_AC, 0x_F1, 0x_3D, 0x_86, 0x_8E, 0x_4A, 0x_01, 0x_C8, 0x_BE, 0x_17, 0x_60,
		0x_DE, 0x_B6, 0x_AB, 0x_A6, 0x_98, 0x_91, 0x_89, 0x_5D, 0x_97, 0x_42, 0x_A0, 0x_6F, 0x_BF, 0x_18, 0x_E0,
		0x_13, 0x_A7, 0x_03, 0x_0E, 0x_A3, 0x_4D, 0x_D8, 0x_25,
	];

	helper(S, BASE, 283);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_4_678_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_4_678_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_20, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_09,
		0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0A,
		0x_20, 0x_0A, 0x_0D, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3,
		0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3,
		0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_1D, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_10, 0x_AD, 0x_70, 0x_64, 0x_39, 0x_14, 0x_B1, 0x_73, 0x_4E, 0x_B3, 0x_7B, 0x_23, 0x_2E, 0x_38,
		0x_7E, 0x_6D, 0x_C6, 0x_37, 0x_16, 0x_DE, 0x_EC, 0x_1E, 0x_F6, 0x_91, 0x_1A, 0x_EA, 0x_C5, 0x_7F, 0x_C8,
		0x_F0, 0x_BF, 0x_DB, 0x_E4, 0x_D7, 0x_9F, 0x_F8, 0x_8F, 0x_40, 0x_5A, 0x_3B, 0x_1D, 0x_94, 0x_33, 0x_8B,
		0x_E1, 0x_A7, 0x_1F, 0x_B9, 0x_3A, 0x_34, 0x_1B, 0x_5D, 0x_BC, 0x_45, 0x_CD, 0x_A9, 0x_EB, 0x_E0, 0x_AC,
		0x_6A, 0x_98, 0x_81, 0x_93, 0x_E8, 0x_BA, 0x_A2, 0x_29, 0x_CC, 0x_E5, 0x_CA, 0x_B0, 0x_0F, 0x_79, 0x_AB,
		0x_0E, 0x_86, 0x_FC, 0x_FD, 0x_6F, 0x_C4, 0x_4A, 0x_DD, 0x_2A, 0x_88, 0x_46, 0x_82, 0x_AE, 0x_A3, 0x_87,
		0x_BB, 0x_D1, 0x_43, 0x_17, 0x_FA, 0x_E7, 0x_05, 0x_69, 0x_30, 0x_C7, 0x_EE, 0x_DA, 0x_66, 0x_03, 0x_11,
		0x_63, 0x_59, 0x_A0, 0x_02, 0x_7C, 0x_75, 0x_FF, 0x_B8,
	];

	helper(S, BASE, 4_678);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_28_978_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_28_978_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0A,
		0x_20, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_F1, 0x_3C, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_84, 0x_F1, 0x_F2, 0x_39, 0x_26, 0x_E2, 0x_E7, 0x_DD, 0x_C0, 0x_9F, 0x_DF, 0x_5B, 0x_5E, 0x_C9,
		0x_23, 0x_0E, 0x_5C, 0x_CF, 0x_D5, 0x_FB, 0x_F7, 0x_A0, 0x_96, 0x_9B, 0x_13, 0x_1A, 0x_AC, 0x_1E, 0x_07,
		0x_3C, 0x_3B, 0x_B3, 0x_94, 0x_A5, 0x_4E, 0x_02, 0x_03, 0x_73, 0x_70, 0x_17, 0x_A9, 0x_D6, 0x_63, 0x_6C,
		0x_9C, 0x_A4, 0x_11, 0x_72, 0x_B8, 0x_67, 0x_6E, 0x_48, 0x_F8, 0x_76, 0x_45, 0x_F0, 0x_89, 0x_E5, 0x_90,
		0x_38, 0x_51, 0x_F5, 0x_60, 0x_AD, 0x_34, 0x_B0, 0x_7D, 0x_D1, 0x_EB, 0x_50, 0x_41, 0x_82, 0x_E1, 0x_CC,
		0x_24, 0x_D3, 0x_1C, 0x_FD, 0x_3E, 0x_53, 0x_BF, 0x_87, 0x_52, 0x_8A, 0x_BB, 0x_FE, 0x_E3, 0x_CE, 0x_7A,
		0x_5F, 0x_7C, 0x_97, 0x_42, 0x_9D, 0x_3D, 0x_5D, 0x_B5, 0x_C3, 0x_92, 0x_66, 0x_4B, 0x_68, 0x_86, 0x_33,
		0x_29, 0x_40, 0x_E8, 0x_F9, 0x_BD, 0x_D8, 0x_A3, 0x_C5,
	];

	helper(S, BASE, 28_978);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_509_035_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_509_035_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0D,
		0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0B,
		0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18,
		0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18,
		0x_AA, 0x_43, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_0F, 0x_AE, 0x_CF, 0x_C1, 0x_1F, 0x_4F, 0x_C8, 0x_7E, 0x_05, 0x_83, 0x_49, 0x_F2, 0x_AD, 0x_30,
		0x_10, 0x_BA, 0x_9D, 0x_8E, 0x_CE, 0x_9A, 0x_44, 0x_73, 0x_CB, 0x_92, 0x_4B, 0x_3A, 0x_06, 0x_D9, 0x_E3,
		0x_89, 0x_EE, 0x_66, 0x_76, 0x_D7, 0x_94, 0x_04, 0x_35, 0x_55, 0x_AA, 0x_1C, 0x_BE, 0x_B6, 0x_C4, 0x_A3,
		0x_2C, 0x_64, 0x_4A, 0x_33, 0x_4C, 0x_DB, 0x_24, 0x_67, 0x_46, 0x_D2, 0x_36, 0x_EB, 0x_5D, 0x_BC, 0x_50,
		0x_38, 0x_B8, 0x_8F, 0x_81, 0x_1A, 0x_2E, 0x_B5, 0x_BD, 0x_B3, 0x_9B, 0x_31, 0x_70, 0x_C2, 0x_98, 0x_A0,
		0x_C7, 0x_19, 0x_DF, 0x_42, 0x_FF, 0x_4D, 0x_29, 0x_40, 0x_25, 0x_D1, 0x_C0, 0x_B0, 0x_1B, 0x_BF, 0x_8A,
		0x_71, 0x_3E, 0x_DD, 0x_86, 0x_5C, 0x_F6, 0x_63, 0x_43, 0x_9E, 0x_7D, 0x_3C, 0x_A5, 0x_96, 0x_72, 0x_A9,
		0x_C3, 0x_CC, 0x_FC, 0x_E9, 0x_14, 0x_5E, 0x_34, 0x_DA,
	];

	helper(S, BASE, 509_035);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_5_778_891_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_5_778_891_in_base_113() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_CE, 0x_CE, 0x_CE, 0x_CE,
		0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE,
		0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE,
		0x_CE, 0x_CE, 0x_2E, 0x_CE, 0x_72, 0x_89,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_1F, 0x_C2, 0x_78, 0x_2E, 0x_56, 0x_2C, 0x_BC, 0x_1B, 0x_BE, 0x_E6, 0x_05, 0x_76, 0x_67, 0x_1A,
		0x_9B, 0x_35, 0x_13, 0x_B3, 0x_B8, 0x_5E, 0x_F9, 0x_FB, 0x_64, 0x_EE, 0x_4D, 0x_8A, 0x_7E, 0x_7D, 0x_D1,
		0x_5F, 0x_E2, 0x_A4, 0x_CC, 0x_8E, 0x_D9, 0x_CF, 0x_82, 0x_AD, 0x_D5, 0x_52, 0x_DD, 0x_42, 0x_17, 0x_C5,
		0x_EB, 0x_8D, 0x_A0, 0x_25, 0x_8B, 0x_F4, 0x_84, 0x_94, 0x_34, 0x_F5, 0x_C0, 0x_B9, 0x_29, 0x_4B, 0x_91,
		0x_0F, 0x_2A, 0x_69, 0x_54, 0x_72, 0x_57, 0x_26, 0x_B1, 0x_96, 0x_99, 0x_02, 0x_89, 0x_58, 0x_AC, 0x_F1,
		0x_E8, 0x_36, 0x_3C, 0x_55, 0x_E4, 0x_6C, 0x_73, 0x_6E, 0x_16, 0x_F8, 0x_A7, 0x_47, 0x_77, 0x_97, 0x_A1,
		0x_A5, 0x_45, 0x_43, 0x_7A, 0x_3A, 0x_33, 0x_6A, 0x_DA, 0x_FA, 0x_EA, 0x_6B, 0x_5B, 0x_31, 0x_7B, 0x_32,
		0x_22, 0x_BD, 0x_C7, 0x_90, 0x_9E, 0x_7F, 0x_B5, 0x_12,
	];

	helper(S, BASE, 5_778_891);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_91_040_380_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_91_040_380_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0D,
		0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_09,
		0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_3B, 0x_92, 0x_7A, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_D4, 0x_77, 0x_EB, 0x_2A, 0x_89, 0x_37, 0x_C8, 0x_30, 0x_AF, 0x_92, 0x_46, 0x_4F, 0x_F1, 0x_D0,
		0x_B0, 0x_AA, 0x_0E, 0x_2C, 0x_97, 0x_FD, 0x_B4, 0x_59, 0x_58, 0x_22, 0x_A5, 0x_D6, 0x_80, 0x_82, 0x_4C,
		0x_A7, 0x_40, 0x_87, 0x_15, 0x_B5, 0x_F3, 0x_9D, 0x_7E, 0x_07, 0x_9C, 0x_50, 0x_16, 0x_64, 0x_1C, 0x_06,
		0x_90, 0x_1E, 0x_7B, 0x_F7, 0x_D8, 0x_33, 0x_A2, 0x_18, 0x_AC, 0x_84, 0x_F6, 0x_70, 0x_55, 0x_72, 0x_CC,
		0x_F0, 0x_24, 0x_4A, 0x_3B, 0x_A9, 0x_86, 0x_10, 0x_44, 0x_C3, 0x_04, 0x_4D, 0x_C7, 0x_A4, 0x_3A, 0x_7F,
		0x_BB, 0x_91, 0x_36, 0x_1D, 0x_CF, 0x_AE, 0x_BD, 0x_73, 0x_8F, 0x_03, 0x_D2, 0x_05, 0x_71, 0x_4B, 0x_E7,
		0x_7A, 0x_F4, 0x_76, 0x_17, 0x_B9, 0x_C6, 0x_6D, 0x_FB, 0x_FF, 0x_99, 0x_75, 0x_49, 0x_21, 0x_67, 0x_3C,
		0x_5F, 0x_27, 0x_31, 0x_A6, 0x_47, 0x_39, 0x_AB, 0x_C9,
	];

	helper(S, BASE, 91_040_380);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_391_383_664_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_391_383_664_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_0B,
		0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_0B,
		0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_AF, 0x_B4, 0x_95, 0x_B8, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_D6, 0x_AF, 0x_4D, 0x_56, 0x_AD, 0x_2F, 0x_6B, 0x_3C, 0x_B8, 0x_4E, 0x_12, 0x_44, 0x_A2, 0x_AB,
		0x_EC, 0x_1F, 0x_D8, 0x_D7, 0x_1E, 0x_6F, 0x_E6, 0x_9E, 0x_CA, 0x_C5, 0x_B2, 0x_CB, 0x_5C, 0x_95, 0x_06,
		0x_32, 0x_25, 0x_16, 0x_D1, 0x_76, 0x_48, 0x_CC, 0x_94, 0x_86, 0x_57, 0x_BE, 0x_04, 0x_4F, 0x_ED, 0x_2E,
		0x_B4, 0x_B5, 0x_51, 0x_6C, 0x_E7, 0x_9A, 0x_D9, 0x_10, 0x_9F, 0x_FD, 0x_58, 0x_60, 0x_68, 0x_91, 0x_F1,
		0x_63, 0x_9D, 0x_81, 0x_61, 0x_E4, 0x_35, 0x_85, 0x_1B, 0x_CE, 0x_CF, 0x_33, 0x_28, 0x_5A, 0x_AC, 0x_B3,
		0x_13, 0x_74, 0x_42, 0x_DC, 0x_A0, 0x_FE, 0x_A1, 0x_3A, 0x_4C, 0x_29, 0x_05, 0x_1D, 0x_52, 0x_F2, 0x_07,
		0x_72, 0x_2A, 0x_AA, 0x_8A, 0x_30, 0x_CD, 0x_C2, 0x_78, 0x_43, 0x_84, 0x_62, 0x_E1, 0x_77, 0x_FF, 0x_C7,
		0x_0F, 0x_24, 0x_4B, 0x_A9, 0x_17, 0x_6A, 0x_69, 0x_98,
	];

	helper(S, BASE, 391_383_664);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_3_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_3_in_base_193() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0B,
		0x_0C, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1,
		0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1,
		0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_5A, 0x_F2, 0x_7B, 0x_B3, 0x_AD, 0x_70, 0x_49, 0x_33, 0x_EA, 0x_B6, 0x_45, 0x_94, 0x_0F, 0x_9E,
		0x_47, 0x_F3, 0x_AA, 0x_46, 0x_D3, 0x_38, 0x_6F, 0x_06, 0x_23, 0x_FB, 0x_50, 0x_37, 0x_64, 0x_1B, 0x_8F,
		0x_FD, 0x_D8, 0x_5E, 0x_28, 0x_6B, 0x_D0, 0x_CA, 0x_C0, 0x_61, 0x_54, 0x_88, 0x_27, 0x_42, 0x_73, 0x_8C,
		0x_65, 0x_AC, 0x_DF, 0x_C4, 0x_A1, 0x_E7, 0x_4D, 0x_91, 0x_DC, 0x_AE, 0x_F9, 0x_DE, 0x_75, 0x_D5, 0x_92,
		0x_68, 0x_35, 0x_17, 0x_39, 0x_E1, 0x_2C, 0x_7F, 0x_FE, 0x_25, 0x_11, 0x_9C, 0x_B7, 0x_82, 0x_98, 0x_41,
		0x_76, 0x_B4, 0x_99, 0x_13, 0x_14, 0x_29, 0x_E9, 0x_87, 0x_5F, 0x_34, 0x_7D, 0x_57, 0x_56, 0x_C6, 0x_66,
		0x_FF, 0x_B2, 0x_24, 0x_53, 0x_7E, 0x_B5, 0x_07, 0x_E6, 0x_1D, 0x_F8, 0x_DB, 0x_A8, 0x_B9, 0x_B0, 0x_5D,
		0x_CD, 0x_A5, 0x_5C, 0x_03, 0x_8B, 0x_81, 0x_EE, 0x_97, 0x_08, 0x_EC, 0x_62, 0x_DD, 0x_AB, 0x_22, 0x_40,
		0x_48, 0x_4B, 0x_1F, 0x_8E, 0x_8A, 0x_79, 0x_D7, 0x_67, 0x_BB, 0x_55, 0x_74, 0x_2A, 0x_DA, 0x_6D, 0x_E2,
		0x_85, 0x_C2, 0x_B8, 0x_16, 0x_EF, 0x_9D, 0x_9F, 0x_01, 0x_C3, 0x_31, 0x_4A, 0x_60, 0x_3E, 0x_02, 0x_32,
		0x_58, 0x_3C, 0x_59, 0x_9B, 0x_A2, 0x_E3, 0x_A7, 0x_8D, 0x_CE, 0x_63, 0x_F5, 0x_12, 0x_43, 0x_6C, 0x_F6,
		0x_C9, 0x_6A, 0x_4C, 0x_86, 0x_AF, 0x_96, 0x_51, 0x_F7, 0x_C8, 0x_19, 0x_18, 0x_BE, 0x_1A, 0x_89, 0x_0E,
		0x_A9, 0x_84, 0x_7A, 0x_30, 0x_A6, 0x_2E, 0x_C7, 0x_1E, 0x_ED, 0x_E4, 0x_77, 0x_4E, 0x_BD,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_85_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_85_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79,
		0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_79, 0x_BA, 0x_5E, 0x_33, 0x_78, 0x_AC, 0x_50, 0x_A8, 0x_21, 0x_C7, 0x_B5, 0x_71, 0x_24, 0x_47, 0x_A0,
		0x_48, 0x_3F, 0x_32, 0x_8E, 0x_3D, 0x_A7, 0x_67, 0x_F3, 0x_98, 0x_15, 0x_7B, 0x_B1, 0x_27, 0x_2C, 0x_C2,
		0x_E6, 0x_04, 0x_E8, 0x_68, 0x_7F, 0x_69, 0x_ED, 0x_FC, 0x_5D, 0x_FA, 0x_85, 0x_BB, 0x_5A, 0x_43, 0x_46,
		0x_10, 0x_E2, 0x_3C, 0x_73, 0x_9F, 0x_9C, 0x_EB, 0x_A3, 0x_B0, 0x_B6, 0x_D2, 0x_8F, 0x_4F, 0x_EC, 0x_D3,
		0x_03, 0x_B9, 0x_FB, 0x_95, 0x_80, 0x_55, 0x_29, 0x_26, 0x_F2, 0x_8B, 0x_41, 0x_BC, 0x_CA, 0x_3E, 0x_92,
		0x_4D, 0x_4A, 0x_F1, 0x_6E, 0x_39, 0x_A5, 0x_B7, 0x_25, 0x_AD, 0x_F8, 0x_75, 0x_14, 0x_84, 0x_D1, 0x_D5,
		0x_49, 0x_D6, 0x_EF, 0x_B2, 0x_D8, 0x_2F, 0x_AB, 0x_89, 0x_DD, 0x_59, 0x_01, 0x_40, 0x_9A, 0x_96, 0x_9B,
		0x_42, 0x_6A, 0x_DB, 0x_52, 0x_23, 0x_18, 0x_1F, 0x_7D, 0x_1A, 0x_2E, 0x_B4, 0x_54, 0x_77, 0x_A4, 0x_99,
		0x_06, 0x_31, 0x_62, 0x_6D, 0x_C8, 0x_88, 0x_5C, 0x_05, 0x_72, 0x_D4, 0x_16, 0x_DC, 0x_86, 0x_8A, 0x_4B,
		0x_1B, 0x_7C, 0x_F7, 0x_81, 0x_19, 0x_36, 0x_F9, 0x_F6, 0x_CC, 0x_DE, 0x_B3, 0x_35, 0x_53, 0x_C3, 0x_37,
		0x_E7, 0x_D0, 0x_F0, 0x_CB, 0x_E1, 0x_3B, 0x_87, 0x_56, 0x_CF, 0x_AA, 0x_94, 0x_4E, 0x_30, 0x_A6, 0x_45,
		0x_B8, 0x_90, 0x_0F, 0x_6C, 0x_AE, 0x_11, 0x_17, 0x_83, 0x_66, 0x_0E, 0x_07, 0x_A1, 0x_6B, 0x_82, 0x_08,
		0x_E0, 0x_74, 0x_91, 0x_34, 0x_C1, 0x_38, 0x_4C, 0x_5B, 0x_93, 0x_C9, 0x_BE, 0x_22, 0x_1E,
	];

	helper(S, BASE, 85);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_588_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_588_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_20,
		0x_20, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A,
		0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A,
		0x_7A, 0x_7A, 0x_7A, 0x_CB, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_B2, 0x_28, 0x_CB, 0x_F3, 0x_A6, 0x_1D, 0x_D1, 0x_74, 0x_07, 0x_15, 0x_0E, 0x_DB, 0x_97, 0x_A9,
		0x_C0, 0x_6D, 0x_7B, 0x_DA, 0x_4E, 0x_E7, 0x_1A, 0x_1F, 0x_55, 0x_30, 0x_A3, 0x_9A, 0x_54, 0x_C5, 0x_E0,
		0x_90, 0x_B4, 0x_EC, 0x_6F, 0x_8B, 0x_70, 0x_C4, 0x_A7, 0x_1E, 0x_83, 0x_42, 0x_59, 0x_5D, 0x_C8, 0x_AC,
		0x_91, 0x_36, 0x_47, 0x_53, 0x_23, 0x_43, 0x_66, 0x_89, 0x_B1, 0x_E5, 0x_C1, 0x_4C, 0x_A2, 0x_D8, 0x_4A,
		0x_E3, 0x_AB, 0x_4D, 0x_6A, 0x_87, 0x_5B, 0x_81, 0x_69, 0x_A8, 0x_63, 0x_B0, 0x_40, 0x_51, 0x_1B, 0x_78,
		0x_EA, 0x_75, 0x_E9, 0x_8F, 0x_46, 0x_9F, 0x_3C, 0x_C6, 0x_26, 0x_FE, 0x_BC, 0x_3E, 0x_7F, 0x_EE, 0x_31,
		0x_16, 0x_D3, 0x_24, 0x_0F, 0x_6C, 0x_65, 0x_2F, 0x_25, 0x_29, 0x_9B, 0x_CD, 0x_C9, 0x_F1, 0x_71, 0x_E4,
		0x_35, 0x_DF, 0x_93, 0x_38, 0x_8E, 0x_57, 0x_02, 0x_D5, 0x_6B, 0x_80, 0x_08, 0x_48, 0x_CC, 0x_AA, 0x_11,
		0x_EB, 0x_7E, 0x_13, 0x_D6, 0x_C7, 0x_D2, 0x_3F, 0x_6E, 0x_EF, 0x_01, 0x_B5, 0x_A0, 0x_41, 0x_96, 0x_33,
		0x_92, 0x_21, 0x_9E, 0x_D7, 0x_B3, 0x_44, 0x_64, 0x_73, 0x_1C, 0x_2A, 0x_88, 0x_C2, 0x_F6, 0x_F0, 0x_AF,
		0x_D4, 0x_5E, 0x_94, 0x_50, 0x_19, 0x_A5, 0x_10, 0x_52, 0x_8A, 0x_3D, 0x_77, 0x_17, 0x_5F, 0x_F9, 0x_04,
		0x_3B, 0x_12, 0x_DE, 0x_18, 0x_82, 0x_56, 0x_DC, 0x_03, 0x_7D, 0x_99, 0x_8D, 0x_B8, 0x_61, 0x_27, 0x_CA,
		0x_86, 0x_F4, 0x_95, 0x_72, 0x_4F, 0x_32, 0x_39, 0x_BA, 0x_8C, 0x_E8, 0x_F5, 0x_D9, 0x_FF,
	];

	helper(S, BASE, 588);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_1_903_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_1_903_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0A,
		0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78,
		0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78,
		0x_78, 0x_78, 0x_78, 0x_78, 0x_EB, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_7B, 0x_5A, 0x_1E, 0x_83, 0x_69, 0x_22, 0x_FC, 0x_84, 0x_EB, 0x_D4, 0x_C2, 0x_F6, 0x_0F, 0x_5D,
		0x_58, 0x_17, 0x_47, 0x_BF, 0x_52, 0x_D3, 0x_4F, 0x_FE, 0x_18, 0x_87, 0x_6F, 0x_B5, 0x_A0, 0x_28, 0x_70,
		0x_23, 0x_3E, 0x_27, 0x_42, 0x_3F, 0x_6B, 0x_BA, 0x_33, 0x_ED, 0x_03, 0x_A1, 0x_1C, 0x_38, 0x_D8, 0x_53,
		0x_A5, 0x_B0, 0x_98, 0x_9C, 0x_D7, 0x_D6, 0x_76, 0x_2E, 0x_CC, 0x_7A, 0x_55, 0x_3D, 0x_6D, 0x_13, 0x_B1,
		0x_9F, 0x_82, 0x_68, 0x_E6, 0x_3A, 0x_C6, 0x_FA, 0x_1F, 0x_C9, 0x_97, 0x_AD, 0x_3C, 0x_19, 0x_F7, 0x_73,
		0x_E4, 0x_A7, 0x_E0, 0x_D9, 0x_62, 0x_8D, 0x_8B, 0x_7E, 0x_DE, 0x_C0, 0x_D2, 0x_A6, 0x_D5, 0x_CE, 0x_B2,
		0x_1A, 0x_06, 0x_8F, 0x_11, 0x_88, 0x_B7, 0x_86, 0x_07, 0x_43, 0x_1D, 0x_8A, 0x_F1, 0x_9E, 0x_4D, 0x_6A,
		0x_51, 0x_BE, 0x_37, 0x_AE, 0x_46, 0x_E7, 0x_E3, 0x_D1, 0x_26, 0x_E2, 0x_72, 0x_B8, 0x_21, 0x_DC, 0x_41,
		0x_40, 0x_4B, 0x_8E, 0x_F8, 0x_A4, 0x_CA, 0x_93, 0x_44, 0x_A3, 0x_25, 0x_10, 0x_BC, 0x_7C, 0x_FB, 0x_12,
		0x_9B, 0x_4C, 0x_C1, 0x_05, 0x_C5, 0x_80, 0x_C4, 0x_67, 0x_81, 0x_B9, 0x_59, 0x_D0, 0x_57, 0x_8C, 0x_E1,
		0x_0E, 0x_5F, 0x_EF, 0x_39, 0x_2A, 0x_9A, 0x_CF, 0x_66, 0x_08, 0x_85, 0x_31, 0x_E8, 0x_91, 0x_AB, 0x_FD,
		0x_2F, 0x_4A, 0x_4E, 0x_A9, 0x_C8, 0x_04, 0x_C7, 0x_CD, 0x_F3, 0x_FF, 0x_24, 0x_34, 0x_F4, 0x_89, 0x_36,
		0x_2C, 0x_AF, 0x_F0, 0x_CB, 0x_BB, 0x_90, 0x_E5, 0x_EE, 0x_C3, 0x_99, 0x_63, 0x_48, 0x_60,
	];

	helper(S, BASE, 1_903);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_71_234_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_71_234_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_33, 0x_33, 0x_33, 0x_03, 0x_D6, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_03, 0x_47, 0x_4A, 0x_AB, 0x_19, 0x_6C, 0x_A4, 0x_1A, 0x_4E, 0x_96, 0x_D4, 0x_FD, 0x_AF, 0x_52,
		0x_9F, 0x_FF, 0x_01, 0x_A3, 0x_7E, 0x_21, 0x_E7, 0x_C5, 0x_79, 0x_15, 0x_F4, 0x_6B, 0x_A5, 0x_E1, 0x_2A,
		0x_7B, 0x_C4, 0x_5E, 0x_62, 0x_1E, 0x_2C, 0x_8E, 0x_3B, 0x_55, 0x_8A, 0x_69, 0x_29, 0x_82, 0x_22, 0x_C9,
		0x_3A, 0x_F0, 0x_C0, 0x_0E, 0x_FE, 0x_7D, 0x_B9, 0x_93, 0x_EB, 0x_A1, 0x_BC, 0x_10, 0x_86, 0x_31, 0x_BB,
		0x_9D, 0x_50, 0x_4D, 0x_48, 0x_8C, 0x_E8, 0x_99, 0x_C6, 0x_DF, 0x_D9, 0x_08, 0x_F5, 0x_E4, 0x_A8, 0x_63,
		0x_80, 0x_5B, 0x_73, 0x_56, 0x_6F, 0x_BF, 0x_0F, 0x_39, 0x_8D, 0x_DC, 0x_4C, 0x_05, 0x_E9, 0x_3D, 0x_26,
		0x_BD, 0x_90, 0x_5A, 0x_B6, 0x_E6, 0x_CF, 0x_88, 0x_42, 0x_F2, 0x_9E, 0x_E3, 0x_61, 0x_C3, 0x_58, 0x_DE,
		0x_AD, 0x_18, 0x_14, 0x_B5, 0x_D7, 0x_E5, 0x_4F, 0x_43, 0x_B4, 0x_C2, 0x_1B, 0x_53, 0x_EE, 0x_6E, 0x_98,
		0x_B3, 0x_EA, 0x_D5, 0x_70, 0x_F8, 0x_A2, 0x_B7, 0x_34, 0x_CE, 0x_75, 0x_30, 0x_67, 0x_9B, 0x_57, 0x_97,
		0x_FC, 0x_CD, 0x_DA, 0x_ED, 0x_D2, 0x_A9, 0x_7C, 0x_41, 0x_9A, 0x_F9, 0x_77, 0x_32, 0x_DB, 0x_D8, 0x_64,
		0x_94, 0x_7F, 0x_02, 0x_06, 0x_2E, 0x_04, 0x_1D, 0x_6A, 0x_7A, 0x_AA, 0x_A6, 0x_FA, 0x_BE, 0x_40, 0x_AC,
		0x_44, 0x_17, 0x_AE, 0x_DD, 0x_A7, 0x_F1, 0x_76, 0x_37, 0x_D1, 0x_D3, 0x_3F, 0x_D6, 0x_2F, 0x_CC, 0x_07,
		0x_A0, 0x_B8, 0x_68, 0x_3E, 0x_5D, 0x_12, 0x_71, 0x_8B, 0x_4B, 0x_C1, 0x_87, 0x_28, 0x_B0,
	];

	helper(S, BASE, 71_234);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_629_312_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_629_312_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0C,
		0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE,
		0x_82, 0x_E4, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_25, 0x_35, 0x_EF, 0x_2F, 0x_AF, 0x_04, 0x_FF, 0x_E9, 0x_01, 0x_FD, 0x_9B, 0x_C9, 0x_D3, 0x_E6,
		0x_5B, 0x_82, 0x_9F, 0x_C0, 0x_C3, 0x_F2, 0x_DD, 0x_C6, 0x_8E, 0x_52, 0x_B4, 0x_2A, 0x_BD, 0x_CF, 0x_2E,
		0x_06, 0x_3D, 0x_21, 0x_34, 0x_EA, 0x_96, 0x_ED, 0x_A2, 0x_FA, 0x_07, 0x_6F, 0x_27, 0x_A1, 0x_F0, 0x_37,
		0x_55, 0x_CC, 0x_CA, 0x_59, 0x_9A, 0x_F5, 0x_16, 0x_60, 0x_97, 0x_9E, 0x_BB, 0x_14, 0x_B3, 0x_D2, 0x_3B,
		0x_63, 0x_F3, 0x_AC, 0x_95, 0x_23, 0x_47, 0x_33, 0x_84, 0x_6A, 0x_1A, 0x_C5, 0x_E1, 0x_7F, 0x_B9, 0x_EC,
		0x_8A, 0x_67, 0x_BE, 0x_D5, 0x_A8, 0x_65, 0x_BA, 0x_FC, 0x_EE, 0x_CD, 0x_AE, 0x_77, 0x_C4, 0x_45, 0x_74,
		0x_4F, 0x_9C, 0x_28, 0x_29, 0x_FE, 0x_BC, 0x_E7, 0x_8D, 0x_C1, 0x_BF, 0x_99, 0x_6B, 0x_76, 0x_89, 0x_71,
		0x_FB, 0x_3A, 0x_42, 0x_B5, 0x_50, 0x_AB, 0x_02, 0x_6E, 0x_26, 0x_83, 0x_4A, 0x_E8, 0x_E0, 0x_DB, 0x_B2,
		0x_1B, 0x_6C, 0x_88, 0x_4D, 0x_18, 0x_B7, 0x_6D, 0x_DC, 0x_91, 0x_31, 0x_79, 0x_53, 0x_F8, 0x_13, 0x_D0,
		0x_70, 0x_AD, 0x_A5, 0x_62, 0x_D9, 0x_57, 0x_68, 0x_61, 0x_C7, 0x_90, 0x_1F, 0x_03, 0x_2C, 0x_41, 0x_58,
		0x_69, 0x_7C, 0x_30, 0x_5C, 0x_E5, 0x_0E, 0x_81, 0x_E3, 0x_5D, 0x_86, 0x_75, 0x_8F, 0x_7B, 0x_B0, 0x_22,
		0x_4B, 0x_A9, 0x_A0, 0x_93, 0x_5A, 0x_36, 0x_CB, 0x_E4, 0x_B8, 0x_AA, 0x_15, 0x_38, 0x_0F, 0x_12, 0x_98,
		0x_D6, 0x_08, 0x_5F, 0x_4E, 0x_05, 0x_56, 0x_19, 0x_F9, 0x_24, 0x_D7, 0x_7A, 0x_7D, 0x_A3,
	];

	helper(S, BASE, 629_312);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_3_250_089_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_3_250_089_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0C,
		0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0C, 0x_0B,
		0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9,
		0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_C9,
		0x_E5, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_A7, 0x_6E, 0x_22, 0x_66, 0x_AE, 0x_D3, 0x_B6, 0x_F5, 0x_8B, 0x_72, 0x_CD, 0x_5B, 0x_A8, 0x_96,
		0x_4B, 0x_14, 0x_BC, 0x_89, 0x_6B, 0x_15, 0x_DF, 0x_BA, 0x_92, 0x_BE, 0x_81, 0x_93, 0x_83, 0x_2F, 0x_13,
		0x_41, 0x_B3, 0x_39, 0x_16, 0x_E9, 0x_BF, 0x_A3, 0x_EA, 0x_52, 0x_4E, 0x_3E, 0x_94, 0x_01, 0x_DE, 0x_E8,
		0x_4D, 0x_5C, 0x_42, 0x_E5, 0x_23, 0x_34, 0x_C8, 0x_61, 0x_A9, 0x_10, 0x_F4, 0x_F0, 0x_64, 0x_2C, 0x_74,
		0x_57, 0x_BD, 0x_F3, 0x_27, 0x_76, 0x_9F, 0x_12, 0x_D1, 0x_A6, 0x_C0, 0x_54, 0x_28, 0x_8D, 0x_C6, 0x_F2,
		0x_47, 0x_91, 0x_EB, 0x_0F, 0x_D4, 0x_77, 0x_86, 0x_1E, 0x_7E, 0x_A0, 0x_D6, 0x_F8, 0x_C9, 0x_8C, 0x_31,
		0x_65, 0x_75, 0x_51, 0x_DD, 0x_D8, 0x_8F, 0x_C2, 0x_56, 0x_80, 0x_B1, 0x_7C, 0x_84, 0x_44, 0x_98, 0x_9B,
		0x_85, 0x_48, 0x_40, 0x_26, 0x_5E, 0x_9C, 0x_82, 0x_B8, 0x_CE, 0x_07, 0x_3B, 0x_A2, 0x_18, 0x_7D, 0x_B7,
		0x_1F, 0x_AB, 0x_C5, 0x_69, 0x_08, 0x_90, 0x_CF, 0x_AC, 0x_ED, 0x_1D, 0x_87, 0x_35, 0x_11, 0x_99, 0x_36,
		0x_FF, 0x_C7, 0x_3C, 0x_FE, 0x_4C, 0x_D5, 0x_9D, 0x_4A, 0x_FD, 0x_D7, 0x_21, 0x_1C, 0x_53, 0x_63, 0x_71,
		0x_DA, 0x_62, 0x_E6, 0x_AA, 0x_A4, 0x_5F, 0x_59, 0x_60, 0x_50, 0x_FB, 0x_DB, 0x_E3, 0x_2A, 0x_49, 0x_B5,
		0x_F6, 0x_5A, 0x_CA, 0x_C1, 0x_B0, 0x_E1, 0x_EE, 0x_43, 0x_B9, 0x_8E, 0x_46, 0x_37, 0x_6A, 0x_70, 0x_17,
		0x_55, 0x_9A, 0x_E2, 0x_B4, 0x_CC, 0x_EC, 0x_68, 0x_1B, 0x_FC, 0x_2E, 0x_38, 0x_EF, 0x_58,
	];

	helper(S, BASE, 3_250_089);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_48_800_261_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_48_800_261_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_0B,
		0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_34,
		0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34,
		0x_34, 0x_BF, 0x_F4, 0x_58, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_F5, 0x_DF, 0x_A6, 0x_76, 0x_08, 0x_BF, 0x_FA, 0x_C0, 0x_49, 0x_C4, 0x_8B, 0x_CB, 0x_05, 0x_A9,
		0x_AF, 0x_14, 0x_F9, 0x_E3, 0x_9A, 0x_95, 0x_58, 0x_99, 0x_32, 0x_DC, 0x_5A, 0x_E9, 0x_52, 0x_B9, 0x_86,
		0x_01, 0x_42, 0x_BC, 0x_CF, 0x_27, 0x_03, 0x_02, 0x_E1, 0x_70, 0x_62, 0x_47, 0x_11, 0x_55, 0x_91, 0x_73,
		0x_4E, 0x_97, 0x_CC, 0x_A7, 0x_B5, 0x_D3, 0x_88, 0x_4B, 0x_9B, 0x_8A, 0x_E0, 0x_A3, 0x_B1, 0x_9F, 0x_48,
		0x_0E, 0x_E7, 0x_21, 0x_BB, 0x_84, 0x_07, 0x_5C, 0x_E2, 0x_1B, 0x_DE, 0x_15, 0x_5B, 0x_8C, 0x_F8, 0x_04,
		0x_36, 0x_72, 0x_9E, 0x_8D, 0x_89, 0x_FB, 0x_45, 0x_C2, 0x_E8, 0x_B2, 0x_31, 0x_77, 0x_60, 0x_D6, 0x_35,
		0x_D5, 0x_17, 0x_C5, 0x_B6, 0x_9D, 0x_33, 0x_9C, 0x_E4, 0x_81, 0x_7C, 0x_C3, 0x_B3, 0x_EF, 0x_F7, 0x_12,
		0x_AA, 0x_6B, 0x_6C, 0x_3C, 0x_DB, 0x_90, 0x_93, 0x_6D, 0x_2F, 0x_A8, 0x_7B, 0x_71, 0x_98, 0x_BE, 0x_B8,
		0x_D4, 0x_1E, 0x_D0, 0x_7A, 0x_28, 0x_30, 0x_8F, 0x_D8, 0x_6F, 0x_4A, 0x_82, 0x_B4, 0x_CE, 0x_25, 0x_D2,
		0x_EC, 0x_7E, 0x_A4, 0x_64, 0x_40, 0x_F3, 0x_38, 0x_16, 0x_E6, 0x_B7, 0x_24, 0x_3B, 0x_ED, 0x_87, 0x_1A,
		0x_F0, 0x_BD, 0x_F4, 0x_D7, 0x_26, 0x_EA, 0x_1D, 0x_2E, 0x_39, 0x_50, 0x_1F, 0x_10, 0x_FC, 0x_5E, 0x_44,
		0x_54, 0x_29, 0x_C8, 0x_22, 0x_FD, 0x_69, 0x_AE, 0x_79, 0x_61, 0x_67, 0x_A0, 0x_1C, 0x_3F, 0x_56, 0x_18,
		0x_68, 0x_FE, 0x_4C, 0x_4D, 0x_AB, 0x_2A, 0x_AC, 0x_96, 0x_74, 0x_3E, 0x_7D, 0x_6E, 0x_6A,
	];

	helper(S, BASE, 48_800_261);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_578_306_394_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_578_306_394_in_base_193() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0C,
		0x_20, 0x_09, 0x_20, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC,
		0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_2A, 0x_E4, 0x_38, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_23, 0x_94, 0x_E3, 0x_A2, 0x_A4, 0x_73, 0x_F3, 0x_10, 0x_F4, 0x_76, 0x_05, 0x_D9, 0x_BC, 0x_C4,
		0x_1A, 0x_30, 0x_33, 0x_84, 0x_40, 0x_6F, 0x_0E, 0x_6C, 0x_71, 0x_26, 0x_BD, 0x_4E, 0x_E0, 0x_9F, 0x_CE,
		0x_A0, 0x_5A, 0x_5C, 0x_DF, 0x_C8, 0x_53, 0x_7C, 0x_E1, 0x_FB, 0x_C7, 0x_4C, 0x_B4, 0x_F6, 0x_57, 0x_BA,
		0x_4F, 0x_E8, 0x_3C, 0x_5D, 0x_46, 0x_68, 0x_95, 0x_13, 0x_22, 0x_78, 0x_97, 0x_59, 0x_25, 0x_8F, 0x_AC,
		0x_F0, 0x_3D, 0x_8B, 0x_44, 0x_86, 0x_E6, 0x_47, 0x_18, 0x_7A, 0x_67, 0x_CF, 0x_EA, 0x_DD, 0x_F8, 0x_83,
		0x_6D, 0x_72, 0x_DB, 0x_B3, 0x_93, 0x_2A, 0x_38, 0x_36, 0x_2F, 0x_F2, 0x_E4, 0x_07, 0x_B6, 0x_A6, 0x_4B,
		0x_55, 0x_08, 0x_7B, 0x_70, 0x_E9, 0x_69, 0x_37, 0x_89, 0x_80, 0x_9D, 0x_5E, 0x_C5, 0x_1D, 0x_4D, 0x_77,
		0x_7E, 0x_49, 0x_AD, 0x_A7, 0x_99, 0x_54, 0x_AE, 0x_EF, 0x_D3, 0x_8D, 0x_AB, 0x_FC, 0x_56, 0x_63, 0x_A9,
		0x_E5, 0x_39, 0x_9C, 0x_EB, 0x_74, 0x_B7, 0x_6B, 0x_11, 0x_14, 0x_D8, 0x_7D, 0x_1B, 0x_EE, 0x_AF, 0x_D1,
		0x_CD, 0x_3F, 0x_D6, 0x_A3, 0x_17, 0x_FA, 0x_90, 0x_D4, 0x_29, 0x_C9, 0x_0F, 0x_96, 0x_62, 0x_DE, 0x_45,
		0x_28, 0x_48, 0x_02, 0x_88, 0x_C0, 0x_F1, 0x_5F, 0x_15, 0x_27, 0x_D2, 0x_B1, 0x_85, 0x_B9, 0x_FF, 0x_C2,
		0x_CA, 0x_9B, 0x_04, 0x_16, 0x_06, 0x_1E, 0x_01, 0x_75, 0x_BE, 0x_66, 0x_6E, 0x_64, 0x_C1, 0x_D0, 0x_AA,
		0x_8C, 0x_81, 0x_51, 0x_6A, 0x_ED, 0x_43, 0x_52, 0x_41, 0x_82, 0x_EC, 0x_BB, 0x_60, 0x_F9,
	];

	helper(S, BASE, 578_306_394);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_6_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_6_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_99, 0x_97, 0x_C3, 0x_80, 0x_D9, 0x_71, 0x_43, 0x_B8, 0x_F9, 0x_3D, 0x_95, 0x_E3, 0x_57, 0x_5D,
		0x_1F, 0x_E8, 0x_DA, 0x_C5, 0x_D5, 0x_B0, 0x_91, 0x_30, 0x_08, 0x_5A, 0x_FF, 0x_28, 0x_60, 0x_7B, 0x_5F,
		0x_35, 0x_01, 0x_AF, 0x_BF, 0x_3B, 0x_51, 0x_06, 0x_E6, 0x_A5, 0x_64, 0x_22, 0x_B5, 0x_86, 0x_FC, 0x_0E,
		0x_CF, 0x_C0, 0x_AC, 0x_32, 0x_45, 0x_56, 0x_37, 0x_EB, 0x_E5, 0x_11, 0x_66, 0x_AB, 0x_69, 0x_A3, 0x_83,
		0x_53, 0x_77, 0x_84, 0x_B7, 0x_1E, 0x_A8, 0x_DC, 0x_BA, 0x_E9, 0x_67, 0x_04, 0x_6E, 0x_E1, 0x_3A, 0x_A2,
		0x_1A, 0x_3F, 0x_2F, 0x_AA, 0x_74, 0x_92, 0x_BE, 0x_2A, 0x_47, 0x_63, 0x_F5, 0x_65, 0x_4F, 0x_81, 0x_C1,
		0x_C2, 0x_61, 0x_07, 0x_13, 0x_A0, 0x_F8, 0x_F3, 0x_F4, 0x_24, 0x_E4, 0x_C9, 0x_E0, 0x_3C, 0x_40, 0x_C4,
		0x_46, 0x_B6, 0x_42, 0x_4D, 0x_27, 0x_05, 0x_26, 0x_31, 0x_49, 0x_94, 0x_4C, 0x_12, 0x_CB, 0x_8F, 0x_BC,
		0x_0F, 0x_3E, 0x_DE, 0x_9C, 0x_96, 0x_8D, 0x_CC, 0x_7C, 0x_54, 0x_7A, 0x_B9, 0x_59, 0x_7F, 0x_76, 0x_D6,
		0x_85, 0x_25, 0x_D2, 0x_F0, 0x_FA, 0x_FE, 0x_48, 0x_F6, 0x_DF, 0x_90, 0x_4E, 0x_29, 0x_6A, 0x_68, 0x_36,
		0x_D1, 0x_62, 0x_39, 0x_14, 0x_82, 0x_C6, 0x_1C, 0x_A6, 0x_18, 0x_8E, 0x_CE, 0x_70, 0x_6D, 0x_FD, 0x_F1,
		0x_2E, 0x_6C, 0x_D4, 0x_44, 0x_D0, 0x_88, 0x_E7, 0x_B3, 0x_EE, 0x_9D, 0x_A1, 0x_6F, 0x_98, 0x_89, 0x_A7,
		0x_AD, 0x_16, 0x_23, 0x_87, 0x_CD, 0x_78, 0x_33, 0x_58, 0x_F7, 0x_2C, 0x_10, 0x_E2, 0x_93, 0x_4B, 0x_A4,
		0x_7E, 0x_D3, 0x_8B, 0x_FB, 0x_41, 0x_9A, 0x_C7, 0x_9E, 0x_D8, 0x_21, 0x_52, 0x_55, 0x_8A, 0x_34, 0x_5E,
		0x_B2, 0x_02, 0x_DD, 0x_D7, 0x_1B, 0x_8C, 0x_72, 0x_C8, 0x_19, 0x_4A, 0x_79, 0x_DB, 0x_F2, 0x_6B, 0x_73,
		0x_CA, 0x_9B, 0x_EC, 0x_1D, 0x_A9, 0x_BD, 0x_03, 0x_B4, 0x_AE, 0x_BB, 0x_50, 0x_5B, 0x_ED, 0x_EA, 0x_9F,
		0x_7D, 0x_75, 0x_17, 0x_5C, 0x_15, 0x_38, 0x_EF,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_27_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_27_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0D,
		0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0C,
		0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0,
		0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_D0, 0x_BC, 0x_28, 0x_4D, 0x_E4, 0x_01, 0x_2E, 0x_3C, 0x_DD, 0x_98, 0x_1F, 0x_E9, 0x_A0, 0x_C5, 0x_D7,
		0x_69, 0x_8A, 0x_21, 0x_F6, 0x_22, 0x_FB, 0x_73, 0x_A6, 0x_B2, 0x_2C, 0x_04, 0x_C2, 0x_EB, 0x_79, 0x_EF,
		0x_CA, 0x_D4, 0x_72, 0x_52, 0x_5C, 0x_E2, 0x_14, 0x_4E, 0x_D9, 0x_1C, 0x_3B, 0x_54, 0x_63, 0x_19, 0x_86,
		0x_91, 0x_50, 0x_3E, 0x_47, 0x_CB, 0x_74, 0x_59, 0x_42, 0x_7F, 0x_11, 0x_A3, 0x_4F, 0x_96, 0x_B8, 0x_53,
		0x_18, 0x_B1, 0x_9A, 0x_B9, 0x_A8, 0x_5B, 0x_05, 0x_9D, 0x_8C, 0x_7D, 0x_AA, 0x_C9, 0x_F7, 0x_45, 0x_F9,
		0x_4A, 0x_CF, 0x_07, 0x_BD, 0x_8F, 0x_A2, 0x_76, 0x_C7, 0x_D8, 0x_24, 0x_F8, 0x_E6, 0x_E0, 0x_8E, 0x_AD,
		0x_80, 0x_48, 0x_E5, 0x_1E, 0x_49, 0x_B4, 0x_82, 0x_75, 0x_26, 0x_89, 0x_87, 0x_A1, 0x_39, 0x_BB, 0x_61,
		0x_37, 0x_F0, 0x_38, 0x_B6, 0x_FE, 0x_84, 0x_70, 0x_4C, 0x_55, 0x_41, 0x_95, 0x_77, 0x_CE, 0x_1A, 0x_B7,
		0x_12, 0x_C3, 0x_33, 0x_C0, 0x_D6, 0x_46, 0x_99, 0x_EC, 0x_6A, 0x_03, 0x_94, 0x_F1, 0x_02, 0x_06, 0x_6E,
		0x_85, 0x_40, 0x_D1, 0x_D3, 0x_88, 0x_BF, 0x_CD, 0x_D2, 0x_BA, 0x_66, 0x_3F, 0x_9F, 0x_4B, 0x_36, 0x_6B,
		0x_B3, 0x_AF, 0x_1B, 0x_AE, 0x_7E, 0x_FC, 0x_68, 0x_2F, 0x_F2, 0x_56, 0x_9C, 0x_5E, 0x_F4, 0x_7A, 0x_81,
		0x_57, 0x_E1, 0x_62, 0x_60, 0x_6F, 0x_EE, 0x_29, 0x_9E, 0x_BE, 0x_6D, 0x_34, 0x_35, 0x_A9, 0x_31, 0x_92,
		0x_23, 0x_43, 0x_E7, 0x_D5, 0x_8D, 0x_FD, 0x_E8, 0x_0F, 0x_64, 0x_C6, 0x_C8, 0x_51, 0x_71, 0x_C1, 0x_ED,
		0x_F3, 0x_17, 0x_3D, 0x_83, 0x_DA, 0x_DF, 0x_DC, 0x_58, 0x_AB, 0x_1D, 0x_16, 0x_32, 0x_B0, 0x_A5, 0x_A7,
		0x_6C, 0x_25, 0x_9B, 0x_2A, 0x_B5, 0x_FA, 0x_3A, 0x_7B, 0x_78, 0x_DE, 0x_10, 0x_97, 0x_A4, 0x_44, 0x_15,
		0x_30, 0x_FF, 0x_65, 0x_5A, 0x_27, 0x_08, 0x_EA, 0x_90, 0x_5D, 0x_AC, 0x_C4, 0x_DB, 0x_7C, 0x_0E, 0x_CC,
		0x_E3, 0x_13, 0x_93, 0x_5F, 0x_67, 0x_F5, 0x_8B,
	];

	helper(S, BASE, 27);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_790_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_790_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56,
		0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56,
		0x_56, 0x_D8, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_82, 0x_83, 0x_D8, 0x_93, 0x_9D, 0x_CF, 0x_E6, 0x_B1, 0x_0F, 0x_40, 0x_8B, 0x_50, 0x_35, 0x_F5,
		0x_72, 0x_90, 0x_7E, 0x_34, 0x_5A, 0x_7B, 0x_75, 0x_8F, 0x_2F, 0x_1D, 0x_C5, 0x_53, 0x_A8, 0x_16, 0x_26,
		0x_96, 0x_F8, 0x_E3, 0x_BD, 0x_8E, 0x_CB, 0x_43, 0x_47, 0x_36, 0x_5F, 0x_BE, 0x_C8, 0x_1A, 0x_9C, 0x_4D,
		0x_B4, 0x_10, 0x_98, 0x_11, 0x_E9, 0x_E8, 0x_22, 0x_2C, 0x_9F, 0x_04, 0x_37, 0x_A2, 0x_3B, 0x_74, 0x_D7,
		0x_EE, 0x_EA, 0x_BC, 0x_E5, 0x_5D, 0x_68, 0x_27, 0x_BA, 0x_D2, 0x_1F, 0x_77, 0x_F3, 0x_AE, 0x_2A, 0x_DB,
		0x_E4, 0x_79, 0x_25, 0x_D4, 0x_52, 0x_2E, 0x_02, 0x_FC, 0x_21, 0x_85, 0x_59, 0x_DD, 0x_7F, 0x_78, 0x_08,
		0x_DC, 0x_7D, 0x_6F, 0x_5C, 0x_EF, 0x_0E, 0x_C1, 0x_C3, 0x_29, 0x_15, 0x_8C, 0x_CC, 0x_12, 0x_42, 0x_89,
		0x_B3, 0x_61, 0x_76, 0x_05, 0x_3D, 0x_14, 0x_60, 0x_6B, 0x_32, 0x_28, 0x_A6, 0x_EB, 0x_B7, 0x_C6, 0x_C4,
		0x_4E, 0x_38, 0x_E7, 0x_8D, 0x_ED, 0x_97, 0x_6A, 0x_19, 0x_45, 0x_6D, 0x_F6, 0x_F9, 0x_58, 0x_D6, 0x_92,
		0x_3C, 0x_5B, 0x_01, 0x_FB, 0x_65, 0x_51, 0x_44, 0x_99, 0x_E2, 0x_4A, 0x_07, 0x_F0, 0x_5E, 0x_24, 0x_D5,
		0x_A4, 0x_66, 0x_70, 0x_9B, 0x_3A, 0x_A0, 0x_64, 0x_B6, 0x_86, 0x_E0, 0x_06, 0x_F4, 0x_AF, 0x_62, 0x_A9,
		0x_CE, 0x_7A, 0x_BB, 0x_F1, 0x_B8, 0x_87, 0x_95, 0x_EC, 0x_FF, 0x_46, 0x_FD, 0x_57, 0x_03, 0x_B0, 0x_31,
		0x_9A, 0x_F2, 0x_8A, 0x_80, 0x_41, 0x_3E, 0x_FA, 0x_CA, 0x_39, 0x_A5, 0x_1B, 0x_13, 0x_AB, 0x_17, 0x_67,
		0x_B9, 0x_54, 0x_63, 0x_3F, 0x_C0, 0x_49, 0x_55, 0x_DE, 0x_CD, 0x_C9, 0x_D0, 0x_DF, 0x_6C, 0x_73, 0x_4B,
		0x_A7, 0x_D3, 0x_9E, 0x_B2, 0x_88, 0x_E1, 0x_D1, 0x_4C, 0x_A3, 0x_91, 0x_AD, 0x_B5, 0x_D9, 0x_30, 0x_FE,
		0x_1C, 0x_23, 0x_71, 0x_F7, 0x_84, 0x_48, 0x_C2, 0x_6E, 0x_C7, 0x_BF, 0x_4F, 0x_33, 0x_A1, 0x_1E, 0x_81,
		0x_DA, 0x_AA, 0x_AC, 0x_69, 0x_18, 0x_7C, 0x_94,
	];

	helper(S, BASE, 790);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_7_543_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_7_543_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_09, 0x_09,
		0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_4F, 0x_4F, 0x_4F, 0x_4F,
		0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_FB, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_52, 0x_33, 0x_E5, 0x_E9, 0x_EC, 0x_C9, 0x_6C, 0x_B1, 0x_90, 0x_40, 0x_7F, 0x_CD, 0x_AF, 0x_FA,
		0x_60, 0x_03, 0x_EE, 0x_68, 0x_C7, 0x_5A, 0x_06, 0x_5F, 0x_AA, 0x_D2, 0x_F6, 0x_87, 0x_18, 0x_7B, 0x_69,
		0x_FB, 0x_DE, 0x_61, 0x_DC, 0x_45, 0x_D4, 0x_29, 0x_A8, 0x_1F, 0x_4C, 0x_AB, 0x_86, 0x_04, 0x_F1, 0x_72,
		0x_8D, 0x_12, 0x_F2, 0x_C3, 0x_11, 0x_59, 0x_AD, 0x_E2, 0x_6A, 0x_64, 0x_A6, 0x_14, 0x_1C, 0x_02, 0x_B0,
		0x_82, 0x_A9, 0x_AC, 0x_77, 0x_67, 0x_5B, 0x_23, 0x_C5, 0x_15, 0x_96, 0x_39, 0x_F4, 0x_17, 0x_38, 0x_A5,
		0x_57, 0x_B2, 0x_FE, 0x_88, 0x_56, 0x_F9, 0x_49, 0x_63, 0x_CF, 0x_FF, 0x_BA, 0x_21, 0x_89, 0x_01, 0x_A3,
		0x_46, 0x_6F, 0x_D3, 0x_5D, 0x_92, 0x_E1, 0x_51, 0x_D1, 0x_9C, 0x_0F, 0x_1A, 0x_C2, 0x_22, 0x_D0, 0x_A0,
		0x_D9, 0x_C0, 0x_25, 0x_0E, 0x_A4, 0x_4E, 0x_C6, 0x_2E, 0x_24, 0x_2C, 0x_F7, 0x_74, 0x_62, 0x_CC, 0x_9F,
		0x_6D, 0x_7E, 0x_58, 0x_2F, 0x_97, 0x_C8, 0x_D5, 0x_43, 0x_42, 0x_54, 0x_ED, 0x_8F, 0x_50, 0x_9D, 0x_94,
		0x_A2, 0x_A1, 0x_05, 0x_D8, 0x_F5, 0x_91, 0x_A7, 0x_75, 0x_71, 0x_E0, 0x_9A, 0x_FC, 0x_98, 0x_1B, 0x_BC,
		0x_4B, 0x_5E, 0x_70, 0x_47, 0x_DB, 0x_B8, 0x_7D, 0x_B7, 0x_B4, 0x_85, 0x_C1, 0x_1E, 0x_37, 0x_E8, 0x_6E,
		0x_28, 0x_31, 0x_AE, 0x_F3, 0x_4D, 0x_BE, 0x_3E, 0x_53, 0x_41, 0x_C4, 0x_73, 0x_07, 0x_19, 0x_9E, 0x_5C,
		0x_DF, 0x_6B, 0x_27, 0x_F0, 0x_CB, 0x_EF, 0x_26, 0x_F8, 0x_9B, 0x_CA, 0x_84, 0x_78, 0x_CE, 0x_B3, 0x_80,
		0x_55, 0x_8E, 0x_48, 0x_DA, 0x_16, 0x_83, 0x_66, 0x_08, 0x_93, 0x_BD, 0x_3D, 0x_8A, 0x_E4, 0x_79, 0x_FD,
		0x_E6, 0x_65, 0x_BB, 0x_10, 0x_32, 0x_44, 0x_D7, 0x_1D, 0x_8B, 0x_81, 0x_D6, 0x_DD, 0x_EB, 0x_4A, 0x_2A,
		0x_8C, 0x_E3, 0x_36, 0x_E7, 0x_B5, 0x_76, 0x_BF, 0x_B6, 0x_7C, 0x_B9, 0x_99, 0x_EA, 0x_7A, 0x_3F, 0x_13,
		0x_35, 0x_95, 0x_3B, 0x_34, 0x_3A, 0x_3C, 0x_30,
	];

	helper(S, BASE, 7_543);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_98_066_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_98_066_in_base_247() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_0D, 0x_0D,
		0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A,
		0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_D9, 0x_77,
		0x_68,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_D9, 0x_46, 0x_C1, 0x_70, 0x_D5, 0x_ED, 0x_68, 0x_D2, 0x_0F, 0x_1E, 0x_85, 0x_DB, 0x_BC, 0x_FC,
		0x_D6, 0x_EF, 0x_98, 0x_49, 0x_58, 0x_C2, 0x_67, 0x_4B, 0x_A0, 0x_C8, 0x_1C, 0x_36, 0x_F3, 0x_D8, 0x_01,
		0x_06, 0x_73, 0x_62, 0x_E1, 0x_52, 0x_CA, 0x_F7, 0x_B8, 0x_1B, 0x_2F, 0x_3A, 0x_04, 0x_84, 0x_74, 0x_D1,
		0x_16, 0x_50, 0x_6C, 0x_96, 0x_59, 0x_B2, 0x_3B, 0x_EE, 0x_07, 0x_E3, 0x_5D, 0x_E0, 0x_34, 0x_61, 0x_51,
		0x_8A, 0x_47, 0x_F8, 0x_B3, 0x_EB, 0x_83, 0x_3C, 0x_89, 0x_38, 0x_44, 0x_DD, 0x_66, 0x_14, 0x_12, 0x_05,
		0x_64, 0x_D0, 0x_10, 0x_4C, 0x_25, 0x_97, 0x_69, 0x_B6, 0x_BE, 0x_7F, 0x_E2, 0x_41, 0x_D7, 0x_F5, 0x_8D,
		0x_6B, 0x_AE, 0x_02, 0x_B4, 0x_08, 0x_EA, 0x_B7, 0x_5C, 0x_23, 0x_AF, 0x_6A, 0x_5F, 0x_3F, 0x_C7, 0x_CB,
		0x_30, 0x_90, 0x_7E, 0x_F9, 0x_C6, 0x_31, 0x_43, 0x_15, 0x_0E, 0x_60, 0x_17, 0x_A2, 0x_A3, 0x_A4, 0x_F1,
		0x_C9, 0x_9D, 0x_C4, 0x_FA, 0x_24, 0x_75, 0x_93, 0x_55, 0x_9B, 0x_33, 0x_6E, 0x_95, 0x_76, 0x_AA, 0x_DC,
		0x_29, 0x_2A, 0x_CE, 0x_54, 0x_7A, 0x_9E, 0x_FD, 0x_79, 0x_53, 0x_AC, 0x_AD, 0x_65, 0x_C3, 0x_DE, 0x_BB,
		0x_77, 0x_E6, 0x_48, 0x_1D, 0x_FB, 0x_B5, 0x_4F, 0x_CD, 0x_6F, 0x_8F, 0x_D3, 0x_37, 0x_7C, 0x_63, 0x_42,
		0x_8C, 0x_F2, 0x_1F, 0x_A6, 0x_BF, 0x_BD, 0x_8E, 0x_A5, 0x_A1, 0x_9C, 0x_C5, 0x_F4, 0x_4E, 0x_EC, 0x_E7,
		0x_45, 0x_E5, 0x_40, 0x_A9, 0x_82, 0x_4A, 0x_C0, 0x_21, 0x_27, 0x_FE, 0x_99, 0x_DA, 0x_4D, 0x_6D, 0x_26,
		0x_80, 0x_5B, 0x_91, 0x_7B, 0x_3D, 0x_B0, 0x_AB, 0x_E9, 0x_A8, 0x_B9, 0x_5E, 0x_87, 0x_2E, 0x_81, 0x_71,
		0x_56, 0x_F6, 0x_E8, 0x_86, 0x_88, 0x_94, 0x_72, 0x_9F, 0x_9A, 0x_CC, 0x_03, 0x_57, 0x_32, 0x_13, 0x_22,
		0x_35, 0x_7D, 0x_11, 0x_1A, 0x_D4, 0x_39, 0x_BA, 0x_78, 0x_19, 0x_28, 0x_18, 0x_92, 0x_CF, 0x_8B, 0x_A7,
		0x_E4, 0x_DF, 0x_B1, 0x_2C, 0x_FF, 0x_F0, 0x_3E,
	];

	helper(S, BASE, 98_066);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_316_393_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_316_393_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_09,
		0x_0C, 0x_0D, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13,
		0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13,
		0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_11, 0x_DD, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_53, 0x_5F, 0x_FB, 0x_B1, 0x_11, 0x_74, 0x_2A, 0x_F8, 0x_D5, 0x_F7, 0x_78, 0x_68, 0x_B5, 0x_99,
		0x_23, 0x_C4, 0x_FD, 0x_E5, 0x_64, 0x_BC, 0x_39, 0x_72, 0x_DB, 0x_65, 0x_D1, 0x_D3, 0x_B3, 0x_BA, 0x_F9,
		0x_32, 0x_0F, 0x_14, 0x_88, 0x_8B, 0x_90, 0x_38, 0x_9F, 0x_AD, 0x_60, 0x_19, 0x_16, 0x_C9, 0x_02, 0x_76,
		0x_DD, 0x_E2, 0x_C2, 0x_3D, 0x_06, 0x_22, 0x_46, 0x_36, 0x_54, 0x_0E, 0x_87, 0x_8E, 0x_50, 0x_A8, 0x_26,
		0x_48, 0x_C1, 0x_9E, 0x_30, 0x_CE, 0x_F6, 0x_7B, 0x_B2, 0x_A4, 0x_57, 0x_37, 0x_E9, 0x_5D, 0x_6C, 0x_97,
		0x_E6, 0x_7D, 0x_03, 0x_DC, 0x_C5, 0x_89, 0x_47, 0x_D0, 0x_3C, 0x_18, 0x_F5, 0x_D6, 0x_A7, 0x_05, 0x_17,
		0x_4E, 0x_95, 0x_79, 0x_01, 0x_CB, 0x_25, 0x_A1, 0x_FF, 0x_98, 0x_F0, 0x_82, 0x_61, 0x_B4, 0x_83, 0x_E7,
		0x_BF, 0x_24, 0x_44, 0x_96, 0x_CC, 0x_91, 0x_E4, 0x_08, 0x_77, 0x_31, 0x_40, 0x_4D, 0x_27, 0x_AF, 0x_70,
		0x_C3, 0x_2F, 0x_C0, 0x_62, 0x_2E, 0x_ED, 0x_B7, 0x_15, 0x_A3, 0x_5B, 0x_7F, 0x_E0, 0x_33, 0x_81, 0x_AB,
		0x_FE, 0x_EB, 0x_29, 0x_C6, 0x_EC, 0x_1C, 0x_8D, 0x_5C, 0x_42, 0x_E8, 0x_3F, 0x_1A, 0x_1B, 0x_B9, 0x_84,
		0x_B8, 0x_93, 0x_D2, 0x_AA, 0x_5E, 0x_CA, 0x_DA, 0x_6B, 0x_85, 0x_6A, 0x_71, 0x_EE, 0x_58, 0x_B0, 0x_6D,
		0x_49, 0x_CF, 0x_4F, 0x_BB, 0x_A2, 0x_94, 0x_66, 0x_4C, 0x_B6, 0x_D9, 0x_07, 0x_12, 0x_C8, 0x_D8, 0x_F1,
		0x_8F, 0x_34, 0x_55, 0x_28, 0x_75, 0x_04, 0x_52, 0x_45, 0x_35, 0x_63, 0x_A5, 0x_41, 0x_73, 0x_AC, 0x_FA,
		0x_7C, 0x_9C, 0x_8C, 0x_59, 0x_BD, 0x_C7, 0x_10, 0x_9A, 0x_FC, 0x_EF, 0x_F4, 0x_A6, 0x_E3, 0x_DE, 0x_E1,
		0x_56, 0x_21, 0x_4A, 0x_3A, 0x_3B, 0x_3E, 0x_F2, 0x_A9, 0x_51, 0x_1D, 0x_9B, 0x_7E, 0x_9D, 0x_CD, 0x_2C,
		0x_DF, 0x_67, 0x_6F, 0x_92, 0x_86, 0x_D7, 0x_80, 0x_1E, 0x_1F, 0x_AE, 0x_A0, 0x_F3, 0x_6E, 0x_8A, 0x_43,
		0x_D4, 0x_BE, 0x_EA, 0x_69, 0x_5A, 0x_7A, 0x_4B,
	];

	helper(S, BASE, 316_393);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_7_152_896_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_7_152_896_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_20,
		0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55,
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55,
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_AD, 0x_A8, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_E9, 0x_C4, 0x_89, 0x_73, 0x_48, 0x_8B, 0x_40, 0x_46, 0x_32, 0x_DF, 0x_AE, 0x_A6, 0x_5A, 0x_F5,
		0x_FC, 0x_C5, 0x_76, 0x_59, 0x_7D, 0x_18, 0x_3D, 0x_2F, 0x_01, 0x_A3, 0x_8D, 0x_41, 0x_79, 0x_B8, 0x_24,
		0x_C6, 0x_75, 0x_5F, 0x_C9, 0x_BC, 0x_98, 0x_A9, 0x_81, 0x_6E, 0x_D3, 0x_E7, 0x_F6, 0x_29, 0x_C0, 0x_0F,
		0x_FA, 0x_58, 0x_B3, 0x_28, 0x_90, 0x_60, 0x_93, 0x_50, 0x_D5, 0x_22, 0x_87, 0x_B9, 0x_E4, 0x_6C, 0x_1E,
		0x_A8, 0x_D7, 0x_F7, 0x_FB, 0x_15, 0x_94, 0x_05, 0x_43, 0x_E3, 0x_F9, 0x_A0, 0x_7E, 0x_27, 0x_9B, 0x_DA,
		0x_5E, 0x_80, 0x_37, 0x_33, 0x_45, 0x_1F, 0x_74, 0x_4F, 0x_54, 0x_1B, 0x_B5, 0x_BF, 0x_C8, 0x_C3, 0x_FF,
		0x_CA, 0x_1D, 0x_D6, 0x_38, 0x_3F, 0x_13, 0x_49, 0x_92, 0x_16, 0x_4B, 0x_A7, 0x_11, 0x_D4, 0x_DB, 0x_8E,
		0x_51, 0x_30, 0x_EA, 0x_9D, 0x_C7, 0x_CE, 0x_91, 0x_7C, 0x_B0, 0x_9E, 0x_DD, 0x_14, 0x_AD, 0x_86, 0x_44,
		0x_9F, 0x_26, 0x_B6, 0x_F8, 0x_8A, 0x_77, 0x_CB, 0x_70, 0x_D1, 0x_4C, 0x_69, 0x_53, 0x_7A, 0x_B2, 0x_AA,
		0x_D9, 0x_61, 0x_CC, 0x_F2, 0x_2C, 0x_78, 0x_04, 0x_52, 0x_42, 0x_AF, 0x_84, 0x_17, 0x_1C, 0x_96, 0x_D2,
		0x_1A, 0x_EF, 0x_B4, 0x_88, 0x_08, 0x_63, 0x_BA, 0x_23, 0x_E5, 0x_25, 0x_6F, 0x_EC, 0x_97, 0x_5C, 0x_82,
		0x_B1, 0x_03, 0x_DE, 0x_99, 0x_34, 0x_3E, 0x_21, 0x_95, 0x_FD, 0x_F0, 0x_E8, 0x_7F, 0x_31, 0x_AC, 0x_39,
		0x_10, 0x_F3, 0x_4D, 0x_7B, 0x_ED, 0x_EE, 0x_4E, 0x_12, 0x_6A, 0x_E0, 0x_4A, 0x_CD, 0x_07, 0x_68, 0x_6B,
		0x_67, 0x_3C, 0x_56, 0x_6D, 0x_64, 0x_D8, 0x_E6, 0x_71, 0x_02, 0x_F1, 0x_E1, 0x_CF, 0x_FE, 0x_06, 0x_3A,
		0x_A4, 0x_A1, 0x_E2, 0x_8C, 0x_36, 0x_19, 0x_F4, 0x_65, 0x_35, 0x_83, 0x_D0, 0x_85, 0x_9C, 0x_BB, 0x_62,
		0x_EB, 0x_5D, 0x_C1, 0x_57, 0x_2A, 0x_66, 0x_AB, 0x_C2, 0x_47, 0x_3B, 0x_2E, 0x_0E, 0x_72, 0x_9A, 0x_A5,
		0x_A2, 0x_BD, 0x_8F, 0x_BE, 0x_B7, 0x_5B, 0x_DC,
	];

	helper(S, BASE, 7_152_896);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_52_002_531_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_52_002_531_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_09,
		0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_0B,
		0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65,
		0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65,
		0x_65, 0x_65, 0x_65, 0x_65, 0x_49, 0x_F7, 0x_B5, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_65, 0x_27, 0x_1F, 0x_49, 0x_04, 0x_9D, 0x_9E, 0x_9A, 0x_11, 0x_E6, 0x_EA, 0x_AA, 0x_BE, 0x_10, 0x_E4,
		0x_48, 0x_B3, 0x_40, 0x_C2, 0x_38, 0x_6E, 0x_E8, 0x_5E, 0x_26, 0x_58, 0x_51, 0x_E7, 0x_D9, 0x_E2, 0x_1E,
		0x_8D, 0x_DC, 0x_22, 0x_1B, 0x_35, 0x_75, 0x_54, 0x_31, 0x_C0, 0x_F5, 0x_53, 0x_1A, 0x_E1, 0x_F2, 0x_67,
		0x_70, 0x_50, 0x_19, 0x_D8, 0x_BC, 0x_90, 0x_01, 0x_5B, 0x_DB, 0x_AD, 0x_52, 0x_8E, 0x_A8, 0x_7D, 0x_A1,
		0x_3C, 0x_79, 0x_88, 0x_7B, 0x_A0, 0x_3E, 0x_E0, 0x_EB, 0x_CE, 0x_E9, 0x_45, 0x_36, 0x_0F, 0x_7C, 0x_F6,
		0x_BF, 0x_C1, 0x_D5, 0x_AB, 0x_46, 0x_47, 0x_12, 0x_9B, 0x_BA, 0x_14, 0x_5F, 0x_72, 0x_2E, 0x_33, 0x_76,
		0x_93, 0x_4A, 0x_B5, 0x_3F, 0x_13, 0x_F8, 0x_FF, 0x_E5, 0x_62, 0x_4F, 0x_B6, 0x_96, 0x_61, 0x_B7, 0x_2F,
		0x_7F, 0x_1C, 0x_8F, 0x_21, 0x_78, 0x_34, 0x_F7, 0x_FE, 0x_DA, 0x_43, 0x_69, 0x_68, 0x_94, 0x_66, 0x_A4,
		0x_2C, 0x_44, 0x_D3, 0x_30, 0x_C4, 0x_FC, 0x_55, 0x_A9, 0x_0E, 0x_63, 0x_B1, 0x_05, 0x_18, 0x_86, 0x_77,
		0x_F9, 0x_F4, 0x_15, 0x_F0, 0x_6F, 0x_32, 0x_87, 0x_29, 0x_59, 0x_24, 0x_98, 0x_83, 0x_AC, 0x_4D, 0x_B2,
		0x_B0, 0x_B9, 0x_C6, 0x_3D, 0x_02, 0x_DE, 0x_CB, 0x_A7, 0x_56, 0x_84, 0x_03, 0x_FA, 0x_17, 0x_37, 0x_CF,
		0x_EC, 0x_2A, 0x_A2, 0x_C5, 0x_3A, 0x_95, 0x_6A, 0x_9C, 0x_C3, 0x_92, 0x_80, 0x_81, 0x_CD, 0x_AF, 0x_5D,
		0x_6C, 0x_BB, 0x_D7, 0x_74, 0x_3B, 0x_82, 0x_07, 0x_F3, 0x_AE, 0x_DF, 0x_42, 0x_E3, 0x_D0, 0x_85, 0x_A6,
		0x_57, 0x_39, 0x_8A, 0x_FD, 0x_06, 0x_EE, 0x_F1, 0x_16, 0x_71, 0x_9F, 0x_4B, 0x_D1, 0x_C8, 0x_B4, 0x_CC,
		0x_89, 0x_97, 0x_FB, 0x_6B, 0x_25, 0x_CA, 0x_08, 0x_1D, 0x_B8, 0x_41, 0x_A3, 0x_D2, 0x_7E, 0x_6D, 0x_EF,
		0x_28, 0x_99, 0x_5C, 0x_60, 0x_D6, 0x_73, 0x_8B, 0x_C9, 0x_C7, 0x_5A, 0x_7A, 0x_4E, 0x_D4, 0x_ED, 0x_64,
		0x_DD, 0x_4C, 0x_91, 0x_A5, 0x_BD, 0x_23, 0x_8C,
	];

	helper(S, BASE, 52_002_531);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_321_943_892_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_321_943_892_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_57, 0x_CD, 0x_EB, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_28, 0x_EC, 0x_82, 0x_6D, 0x_36, 0x_02, 0x_37, 0x_45, 0x_A7, 0x_49, 0x_A0, 0x_E6, 0x_26, 0x_18,
		0x_6F, 0x_08, 0x_B5, 0x_3D, 0x_92, 0x_46, 0x_57, 0x_44, 0x_50, 0x_F1, 0x_63, 0x_43, 0x_AB, 0x_A6, 0x_59,
		0x_1E, 0x_4C, 0x_83, 0x_D7, 0x_16, 0x_F0, 0x_D0, 0x_38, 0x_91, 0x_22, 0x_7F, 0x_B8, 0x_23, 0x_D9, 0x_1F,
		0x_77, 0x_FD, 0x_40, 0x_67, 0x_24, 0x_51, 0x_70, 0x_7E, 0x_C8, 0x_71, 0x_4E, 0x_F5, 0x_2F, 0x_13, 0x_19,
		0x_06, 0x_DD, 0x_6A, 0x_9F, 0x_C4, 0x_54, 0x_9A, 0x_A4, 0x_AE, 0x_AF, 0x_60, 0x_CB, 0x_CE, 0x_17, 0x_05,
		0x_BF, 0x_3A, 0x_01, 0x_14, 0x_B4, 0x_5A, 0x_5B, 0x_87, 0x_31, 0x_5F, 0x_55, 0x_C1, 0x_66, 0x_FA, 0x_CD,
		0x_BE, 0x_E7, 0x_6C, 0x_CF, 0x_D5, 0x_1C, 0x_41, 0x_0F, 0x_AA, 0x_FE, 0x_E0, 0x_94, 0x_88, 0x_53, 0x_C5,
		0x_AD, 0x_75, 0x_96, 0x_25, 0x_3F, 0x_47, 0x_A3, 0x_BD, 0x_ED, 0x_C7, 0x_A8, 0x_86, 0x_EA, 0x_F9, 0x_62,
		0x_B0, 0x_4B, 0x_04, 0x_CC, 0x_A9, 0x_DE, 0x_D1, 0x_8E, 0x_C3, 0x_35, 0x_64, 0x_E4, 0x_F7, 0x_2A, 0x_2C,
		0x_80, 0x_E2, 0x_F2, 0x_6E, 0x_F8, 0x_2E, 0x_1A, 0x_56, 0x_D3, 0x_F3, 0x_9D, 0x_27, 0x_61, 0x_10, 0x_68,
		0x_9E, 0x_58, 0x_42, 0x_6B, 0x_3E, 0x_74, 0x_81, 0x_29, 0x_3B, 0x_84, 0x_99, 0x_EF, 0x_30, 0x_3C, 0x_34,
		0x_FB, 0x_B7, 0x_B1, 0x_90, 0x_12, 0x_8C, 0x_E9, 0x_8F, 0x_33, 0x_E1, 0x_C2, 0x_DA, 0x_A2, 0x_78, 0x_CA,
		0x_B9, 0x_1D, 0x_32, 0x_D2, 0x_DC, 0x_8B, 0x_C6, 0x_D8, 0x_5D, 0x_76, 0x_11, 0x_BB, 0x_A1, 0x_0E, 0x_03,
		0x_7A, 0x_39, 0x_7B, 0x_BC, 0x_5C, 0x_D4, 0x_98, 0x_EE, 0x_C0, 0x_7D, 0x_65, 0x_9C, 0x_C9, 0x_21, 0x_72,
		0x_7C, 0x_1B, 0x_95, 0x_48, 0x_69, 0x_79, 0x_A5, 0x_E3, 0x_FC, 0x_AC, 0x_73, 0x_8D, 0x_DB, 0x_B2, 0x_B6,
		0x_D6, 0x_F4, 0x_E8, 0x_5E, 0x_4A, 0x_97, 0x_4D, 0x_9B, 0x_E5, 0x_52, 0x_07, 0x_89, 0x_15, 0x_F6, 0x_BA,
		0x_93, 0x_FF, 0x_4F, 0x_B3, 0x_EB, 0x_DF, 0x_8A,
	];

	helper(S, BASE, 321_943_892);
}
// endregion
// region: s_has_whitespaces_and_5_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_5_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0D,
		0x_20, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0B,
		0x_09, 0x_20, 0x_0B, 0x_0B, 0x_29, 0x_02, 0x_29, 0x_E9, 0x_02, 0x_02, 0x_29, 0x_29, 0x_02, 0x_02, 0x_29,
		0x_29, 0x_02, 0x_29, 0x_29, 0x_02,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_29,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_70_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_70_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_0A,
		0x_BC, 0x_6F, 0x_6F, 0x_6F, 0x_BC, 0x_BC, 0x_6F, 0x_F7, 0x_6F, 0x_6F, 0x_6F, 0x_BC, 0x_6F, 0x_6F, 0x_BC,
		0x_BC, 0x_6F, 0x_6F, 0x_6F, 0x_BC, 0x_BC, 0x_BC, 0x_6F, 0x_6F, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_6F, 0x_BC, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_BC,
	];

	helper(S, BASE, 70);
}
// endregion
// region: s_has_whitespaces_and_158_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_158_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0A, 0x_87, 0x_91, 0x_91, 0x_87, 0x_87, 0x_87, 0x_87, 0x_91, 0x_08, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_87, 0x_91, 0x_87, 0x_87, 0x_87, 0x_87, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_87,
	];

	helper(S, BASE, 158);
}
// endregion
// region: s_has_whitespaces_and_3_770_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_3_770_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_20, 0x_3B, 0x_3B, 0x_3B, 0x_9C, 0x_3B, 0x_9C, 0x_3B, 0x_3B, 0x_3B, 0x_9C, 0x_3B, 0x_9C,
		0x_63, 0x_3B, 0x_9C, 0x_9C, 0x_3B, 0x_9C, 0x_3B, 0x_3B, 0x_9C, 0x_9C, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B,
		0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_9C, 0x_9C, 0x_9C, 0x_3B, 0x_9C, 0x_3B, 0x_9C, 0x_3B, 0x_9C, 0x_3B, 0x_3B,
		0x_3B, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_3B,
	];

	helper(S, BASE, 3_770);
}
// endregion
// region: s_has_whitespaces_and_32_941_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_32_941_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_20,
		0x_0A, 0x_20, 0x_0D, 0x_E9, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_E9, 0x_F6, 0x_E9, 0x_F6,
		0x_E9, 0x_E9, 0x_F6, 0x_E9, 0x_12, 0x_E9, 0x_E9, 0x_E9, 0x_F6, 0x_F6, 0x_F6, 0x_E9, 0x_F6, 0x_E9, 0x_F6,
		0x_E9, 0x_F6, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_E9, 0x_E9, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_E9,
	];

	helper(S, BASE, 32_941);
}
// endregion
// region: s_has_whitespaces_and_952_423_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_952_423_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_0D,
		0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_09,
		0x_0B, 0x_0A, 0x_0D, 0x_18, 0x_18, 0x_18, 0x_58, 0x_18, 0x_58, 0x_58, 0x_58, 0x_18, 0x_58, 0x_58, 0x_58,
		0x_58, 0x_18, 0x_18, 0x_58, 0x_58, 0x_18, 0x_18, 0x_18, 0x_7F, 0x_58, 0x_18, 0x_18, 0x_18, 0x_18, 0x_58,
		0x_58, 0x_18, 0x_18, 0x_58, 0x_18, 0x_18, 0x_18, 0x_58, 0x_18, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58,
		0x_18, 0x_18, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_58, 0x_18,
	];

	helper(S, BASE, 952_423);
}
// endregion
// region: s_has_whitespaces_and_5_514_522_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_5_514_522_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_21, 0x_90,
		0x_21, 0x_90, 0x_21, 0x_90, 0x_90, 0x_90, 0x_90, 0x_21, 0x_90, 0x_90, 0x_21, 0x_90, 0x_21, 0x_90, 0x_90,
		0x_90, 0x_21, 0x_21, 0x_90, 0x_21, 0x_90, 0x_24, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_21,
	];

	helper(S, BASE, 5_514_522);
}
// endregion
// region: s_has_whitespaces_and_62_607_852_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_62_607_852_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0A,
		0x_0C, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0C,
		0x_0D, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_E9, 0x_E9, 0x_E9, 0x_B7, 0x_E9, 0x_E9, 0x_E9, 0x_B7,
		0x_E9, 0x_E9, 0x_B7, 0x_E9, 0x_B7, 0x_E9, 0x_B7, 0x_B7, 0x_B7, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_B7, 0x_E9,
		0x_E9, 0x_B7, 0x_B7, 0x_F3, 0x_E9, 0x_E9, 0x_E9, 0x_B7, 0x_E9, 0x_B7, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_B7,
		0x_B7, 0x_B7, 0x_E9, 0x_B7, 0x_E9, 0x_E9, 0x_E9, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_E9, 0x_B7, 0x_E9, 0x_E9,
		0x_E9, 0x_E9, 0x_B7, 0x_E9, 0x_B7, 0x_E9, 0x_E9, 0x_E9, 0x_B7, 0x_B7, 0x_E9, 0x_B7, 0x_E9, 0x_B7, 0x_E9,
		0x_B7,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_E9,
	];

	helper(S, BASE, 62_607_852);
}
// endregion
// region: s_has_whitespaces_and_652_297_246_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_652_297_246_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_0D,
		0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_0B,
		0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_A2, 0x_B6, 0x_B6, 0x_A2, 0x_A2, 0x_B6, 0x_A2, 0x_A2, 0x_A2, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_A2, 0x_B6, 0x_A2, 0x_B6, 0x_B6, 0x_B6, 0x_A2, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_A2,
		0x_A2, 0x_A2, 0x_A2, 0x_B6, 0x_F0, 0x_A2, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_A2,
	];

	helper(S, BASE, 652_297_246);
}
// endregion
// region: s_has_whitespaces_and_6_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_6_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_09,
		0x_09, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_12, 0x_B1,
		0x_FA, 0x_12, 0x_12, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_B1, 0x_F2, 0x_F2, 0x_12, 0x_12, 0x_F2, 0x_B1,
		0x_12, 0x_B1, 0x_B1, 0x_12, 0x_B1, 0x_B1, 0x_12, 0x_B1, 0x_12, 0x_F2, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_F2, 0x_12,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_whitespaces_and_22_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_22_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_20,
		0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_20,
		0x_5E, 0x_30, 0x_30, 0x_46, 0x_30, 0x_DE, 0x_5E, 0x_30, 0x_DE, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_5E, 0x_30, 0x_30, 0x_30, 0x_DE, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_30, 0x_5E,
	];

	helper(S, BASE, 22);
}
// endregion
// region: s_has_whitespaces_and_664_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_664_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_20,
		0x_0B, 0x_0A, 0x_D7, 0x_D7, 0x_28, 0x_3F, 0x_D7, 0x_3F, 0x_50, 0x_3F, 0x_D7, 0x_28, 0x_3F, 0x_28, 0x_3F,
		0x_D7, 0x_D7, 0x_3F, 0x_3F, 0x_D7, 0x_D7, 0x_D7, 0x_28, 0x_28, 0x_3F, 0x_D7, 0x_3F, 0x_3F, 0x_28, 0x_3F,
		0x_28, 0x_28, 0x_28, 0x_3F, 0x_28, 0x_3F, 0x_D7, 0x_D7, 0x_3F, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_3F, 0x_D7,
	];

	helper(S, BASE, 664);
}
// endregion
// region: s_has_whitespaces_and_3_396_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_3_396_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_0C,
		0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0D,
		0x_09, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_C8, 0x_C8, 0x_C8, 0x_FF, 0x_FF, 0x_FF, 0x_C8, 0x_9E, 0x_0C,
		0x_9E, 0x_C8, 0x_C8, 0x_FF, 0x_C8, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_C8, 0x_C8, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_C8, 0x_FF,
	];

	helper(S, BASE, 3_396);
}
// endregion
// region: s_has_whitespaces_and_27_902_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_27_902_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_09,
		0x_20, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0C,
		0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_1A, 0x_1A, 0x_8B, 0x_49, 0x_8B, 0x_49, 0x_1A, 0x_1A, 0x_8B,
		0x_49, 0x_88, 0x_8B, 0x_8B, 0x_1A, 0x_8B, 0x_1A, 0x_49, 0x_8B, 0x_8B, 0x_1A, 0x_8B, 0x_8B, 0x_8B, 0x_8B,
		0x_8B, 0x_1A, 0x_8B, 0x_8B, 0x_49, 0x_8B, 0x_8B, 0x_49, 0x_49, 0x_49, 0x_1A, 0x_1A, 0x_49, 0x_8B, 0x_1A,
		0x_8B, 0x_1A, 0x_8B, 0x_49, 0x_49, 0x_8B, 0x_8B, 0x_8B, 0x_49, 0x_8B, 0x_1A, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_8B, 0x_1A, 0x_49,
	];

	helper(S, BASE, 27_902);
}
// endregion
// region: s_has_whitespaces_and_533_385_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_533_385_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0C,
		0x_0A, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0B,
		0x_20, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_60, 0x_3B, 0x_3B, 0x_3B, 0x_3B,
		0x_3B, 0x_8C, 0x_8C, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_DC, 0x_3B, 0x_60, 0x_3B, 0x_8C, 0x_3B, 0x_8C,
		0x_3B, 0x_3B, 0x_60, 0x_8C, 0x_60, 0x_60, 0x_8C, 0x_60, 0x_3B, 0x_3B, 0x_3B, 0x_8C, 0x_60, 0x_8C, 0x_3B,
		0x_3B, 0x_8C, 0x_8C, 0x_3B, 0x_3B, 0x_3B, 0x_60, 0x_3B, 0x_60, 0x_8C, 0x_8C, 0x_3B, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_3B, 0x_60, 0x_8C,
	];

	helper(S, BASE, 533_385);
}
// endregion
// region: s_has_whitespaces_and_5_571_212_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_5_571_212_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0A,
		0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0B,
		0x_0C, 0x_0D, 0x_F7, 0x_FC, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_FC, 0x_FC, 0x_F7, 0x_FC, 0x_05, 0x_F7, 0x_FC,
		0x_F7, 0x_05, 0x_4A, 0x_05, 0x_F7, 0x_F7, 0x_05, 0x_FC, 0x_05, 0x_F7, 0x_05, 0x_05, 0x_05, 0x_FC, 0x_05,
		0x_05, 0x_F7, 0x_FC, 0x_F7, 0x_FC, 0x_FC, 0x_05, 0x_05, 0x_F7, 0x_FC, 0x_F7, 0x_FC, 0x_FC, 0x_F7, 0x_FC,
		0x_FC, 0x_05, 0x_F7, 0x_F7, 0x_05, 0x_F7, 0x_05, 0x_F7, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_F7, 0x_05,
	];

	helper(S, BASE, 5_571_212);
}
// endregion
// region: s_has_whitespaces_and_88_060_656_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_88_060_656_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_D8, 0x_BA,
		0x_BA, 0x_C5, 0x_BA, 0x_D8, 0x_BA, 0x_BA, 0x_D8, 0x_D8, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_D8, 0x_C5, 0x_BA,
		0x_A5, 0x_D8, 0x_C5, 0x_D8, 0x_BA, 0x_D8, 0x_D8, 0x_C5, 0x_BA, 0x_D8, 0x_BA, 0x_D8, 0x_D8, 0x_BA, 0x_BA,
		0x_C5, 0x_C5, 0x_C5, 0x_D8, 0x_C5, 0x_C5,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_C5, 0x_D8,
	];

	helper(S, BASE, 88_060_656);
}
// endregion
// region: s_has_whitespaces_and_933_165_528_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_933_165_528_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_0A,
		0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_5F, 0x_5A, 0x_A6, 0x_5F, 0x_A6,
		0x_A6, 0x_A6, 0x_5F, 0x_5F, 0x_A6, 0x_5F, 0x_A6, 0x_5A, 0x_5A, 0x_5A, 0x_A6, 0x_A6, 0x_5F, 0x_A6, 0x_88,
		0x_5A, 0x_A6, 0x_5F, 0x_A6, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_5A, 0x_5F,
	];

	helper(S, BASE, 933_165_528);
}
// endregion
// region: s_has_whitespaces_and_1_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_1_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0B, 0x_39, 0x_F9, 0x_39, 0x_38, 0x_F3, 0x_5E, 0x_87, 0x_5E, 0x_38, 0x_F3, 0x_F3, 0x_F3,
		0x_39, 0x_87, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_F3, 0x_39, 0x_38, 0x_5E, 0x_87,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_whitespaces_and_38_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_38_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0B,
		0x_0D, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_C3, 0x_2E, 0x_74, 0x_E3, 0x_74,
		0x_2E, 0x_C3, 0x_4D, 0x_38, 0x_38, 0x_74, 0x_C3, 0x_4D, 0x_2E, 0x_38, 0x_74, 0x_4D, 0x_4D, 0x_74, 0x_4D,
		0x_2E, 0x_4D, 0x_38, 0x_4D, 0x_38, 0x_38, 0x_38, 0x_2E, 0x_74, 0x_4D, 0x_4D, 0x_38, 0x_2E, 0x_74, 0x_38,
		0x_4D, 0x_74, 0x_4D, 0x_4D, 0x_C3, 0x_2E, 0x_38, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_4D, 0x_C3, 0x_2E, 0x_74, 0x_38,
	];

	helper(S, BASE, 38);
}
// endregion
// region: s_has_whitespaces_and_817_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_817_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0D,
		0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0A,
		0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_B6, 0x_B6, 0x_07, 0x_2C, 0x_07, 0x_97, 0x_9C, 0x_01, 0x_01,
		0x_01, 0x_07, 0x_01, 0x_01, 0x_07, 0x_B6, 0x_07, 0x_B6, 0x_9C, 0x_9C, 0x_2C, 0x_01, 0x_01, 0x_9C, 0x_07,
		0x_9C, 0x_2C, 0x_01, 0x_B6, 0x_01, 0x_B6, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_B6, 0x_07, 0x_2C, 0x_01,
	];

	helper(S, BASE, 817);
}
// endregion
// region: s_has_whitespaces_and_1_496_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_1_496_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0B,
		0x_20, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_51, 0x_7D, 0x_2C, 0x_2C, 0x_7D, 0x_36, 0x_2C, 0x_2C, 0x_74, 0x_2C,
		0x_7D, 0x_2C, 0x_7D, 0x_2C, 0x_2C, 0x_51, 0x_7D, 0x_51, 0x_2C, 0x_51, 0x_51, 0x_74, 0x_2C, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_7D, 0x_51, 0x_7A, 0x_2C,
	];

	helper(S, BASE, 1_496);
}
// endregion
// region: s_has_whitespaces_and_28_795_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_28_795_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0C,
		0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_49, 0x_FF,
		0x_49, 0x_CE, 0x_49, 0x_FF, 0x_CE, 0x_F7, 0x_FF, 0x_49, 0x_CE, 0x_D4, 0x_FF, 0x_FF, 0x_CE, 0x_CE, 0x_5E,
		0x_CE, 0x_D4, 0x_49, 0x_5E, 0x_49, 0x_FF, 0x_CE, 0x_FF, 0x_CE, 0x_FF, 0x_D4, 0x_FF, 0x_49, 0x_5E, 0x_D4,
		0x_49, 0x_D4, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_49, 0x_5E, 0x_D4, 0x_FF,
	];

	helper(S, BASE, 28_795);
}
// endregion
// region: s_has_whitespaces_and_461_166_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_461_166_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_A4, 0x_6E, 0x_9B, 0x_06, 0x_06, 0x_9B, 0x_A4, 0x_50, 0x_A4, 0x_AA, 0x_50, 0x_6E, 0x_50,
		0x_6E, 0x_A4, 0x_9B, 0x_A4, 0x_6E, 0x_6E, 0x_9B, 0x_06, 0x_9B, 0x_06, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_A4, 0x_06, 0x_50, 0x_9B,
	];

	helper(S, BASE, 461_166);
}
// endregion
// region: s_has_whitespaces_and_3_121_097_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_3_121_097_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_2A, 0x_D3, 0x_9C, 0x_9C, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_9C, 0x_D3, 0x_E2, 0x_9C, 0x_93, 0x_17, 0x_D3, 0x_93, 0x_17, 0x_2A, 0x_2A, 0x_93,
		0x_93, 0x_9C, 0x_D3, 0x_17, 0x_D3, 0x_D3, 0x_D3, 0x_2A, 0x_9C, 0x_17, 0x_93, 0x_9C, 0x_9C, 0x_93, 0x_D3,
		0x_2A, 0x_17, 0x_D3, 0x_17, 0x_93, 0x_D3, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_2A, 0x_D3, 0x_17, 0x_9C,
	];

	helper(S, BASE, 3_121_097);
}
// endregion
// region: s_has_whitespaces_and_41_474_794_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_41_474_794_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_0D,
		0x_20, 0x_5E, 0x_2F, 0x_2F, 0x_A9, 0x_5E, 0x_2F, 0x_5E, 0x_EB, 0x_2F, 0x_EB, 0x_5E, 0x_54, 0x_2F, 0x_2F,
		0x_EB, 0x_A9, 0x_A9, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_2F, 0x_96, 0x_EB, 0x_5E,
	];

	helper(S, BASE, 41_474_794);
}
// endregion
// region: s_has_whitespaces_and_350_555_644_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_350_555_644_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_0B,
		0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0A,
		0x_0A, 0x_0D, 0x_0D, 0x_41, 0x_78, 0x_26, 0x_F2, 0x_78, 0x_78, 0x_26, 0x_78, 0x_F2, 0x_26, 0x_26, 0x_95,
		0x_F2, 0x_F7, 0x_95, 0x_95, 0x_78, 0x_F2, 0x_26, 0x_26, 0x_78, 0x_41, 0x_78, 0x_95, 0x_78, 0x_78, 0x_41,
		0x_78, 0x_41, 0x_F2, 0x_26, 0x_F2, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_41, 0x_78, 0x_95, 0x_F2,
	];

	helper(S, BASE, 350_555_644);
}
// endregion
// region: s_has_whitespaces_and_9_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_9_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0A,
		0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_0B,
		0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_DA, 0x_03, 0x_13, 0x_BD,
		0x_49, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_DA, 0x_03, 0x_49, 0x_BA, 0x_2A, 0x_FD,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_whitespaces_and_24_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_24_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_8A, 0x_8A, 0x_74,
		0x_01, 0x_56, 0x_8A, 0x_56, 0x_2C, 0x_56, 0x_56, 0x_56, 0x_42, 0x_2C, 0x_D8, 0x_8A, 0x_D8, 0x_01, 0x_D8,
		0x_01, 0x_46, 0x_2C, 0x_8A, 0x_56, 0x_56, 0x_42, 0x_46, 0x_46, 0x_56, 0x_D8, 0x_8A, 0x_8A, 0x_46, 0x_8A,
		0x_01, 0x_46, 0x_2C, 0x_2C, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_01, 0x_42, 0x_8A, 0x_46, 0x_2C, 0x_D8,
	];

	helper(S, BASE, 24);
}
// endregion
// region: s_has_whitespaces_and_681_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_681_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_20,
		0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_4A, 0x_A1, 0x_A1, 0x_B0,
		0x_07, 0x_B6, 0x_A1, 0x_B0, 0x_1B, 0x_39, 0x_39, 0x_4A, 0x_B6, 0x_4A, 0x_B6, 0x_A1, 0x_39, 0x_4A, 0x_B6,
		0x_A1, 0x_39, 0x_39, 0x_A1, 0x_A1, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_4A, 0x_B0, 0x_B6, 0x_1B, 0x_E1, 0x_A1,
	];

	helper(S, BASE, 681);
}
// endregion
// region: s_has_whitespaces_and_4_784_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_4_784_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_20,
		0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_20,
		0x_20, 0x_20, 0x_E7, 0x_91, 0x_91, 0x_9C, 0x_CB, 0x_1F, 0x_DF, 0x_88, 0x_91, 0x_9C, 0x_CB, 0x_E7, 0x_91,
		0x_9C, 0x_91, 0x_88, 0x_DF, 0x_91, 0x_DF, 0x_91, 0x_88, 0x_57, 0x_91, 0x_88,
	];
	const BASE: &[u8] = &[
		0x_57, 0x_E7, 0x_88, 0x_CB, 0x_9C, 0x_DF, 0x_91,
	];

	helper(S, BASE, 4_784);
}
// endregion
// region: s_has_whitespaces_and_35_164_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_35_164_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0A,
		0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0C,
		0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_25, 0x_76, 0x_DC,
		0x_33, 0x_DC, 0x_33, 0x_AC, 0x_5C, 0x_25, 0x_25, 0x_95, 0x_95, 0x_76, 0x_F5, 0x_25, 0x_5C, 0x_76, 0x_5C,
		0x_5C, 0x_DC, 0x_5C, 0x_33, 0x_25, 0x_25, 0x_95, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_5C, 0x_25, 0x_33, 0x_DC, 0x_F5, 0x_95,
	];

	helper(S, BASE, 35_164);
}
// endregion
// region: s_has_whitespaces_and_470_786_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_470_786_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0B,
		0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_0B,
		0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_60, 0x_40, 0x_40, 0x_40, 0x_6F, 0x_ED, 0x_B3, 0x_34, 0x_E2, 0x_ED, 0x_ED,
		0x_D4, 0x_E2, 0x_6F, 0x_6F, 0x_60, 0x_B3, 0x_40, 0x_40, 0x_40, 0x_E2, 0x_6F, 0x_B3, 0x_E2, 0x_D4, 0x_D4,
		0x_60, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_B3, 0x_E2, 0x_6F, 0x_60, 0x_D4, 0x_ED,
	];

	helper(S, BASE, 470_786);
}
// endregion
// region: s_has_whitespaces_and_2_149_119_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_2_149_119_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0C,
		0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_20,
		0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_4F, 0x_C8, 0x_04, 0x_23, 0x_E7, 0x_C8,
		0x_C8, 0x_E7, 0x_33, 0x_4F, 0x_4F, 0x_CA, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_E7, 0x_04, 0x_4F, 0x_E0, 0x_C8, 0x_CA, 0x_23,
	];

	helper(S, BASE, 2_149_119);
}
// endregion
// region: s_has_whitespaces_and_56_598_639_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_56_598_639_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0D,
		0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_ED, 0x_80, 0x_61, 0x_61,
		0x_F1, 0x_D1, 0x_27, 0x_AC, 0x_ED, 0x_27, 0x_A0, 0x_ED, 0x_D1, 0x_ED, 0x_D1, 0x_61, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_ED, 0x_80, 0x_D1, 0x_AC, 0x_61, 0x_27,
	];

	helper(S, BASE, 56_598_639);
}
// endregion
// region: s_has_whitespaces_and_259_261_317_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_259_261_317_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_0D,
		0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_BF, 0x_D2, 0x_BF, 0x_B2, 0x_3F, 0x_B2, 0x_83,
		0x_BF, 0x_D2, 0x_E3, 0x_AA, 0x_E3, 0x_D2, 0x_3F, 0x_83, 0x_BF, 0x_5B, 0x_D2, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_E3, 0x_5B, 0x_D2, 0x_83, 0x_3F, 0x_B2, 0x_BF,
	];

	helper(S, BASE, 259_261_317);
}
// endregion
// region: s_has_whitespaces_and_5_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_5_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_81, 0x_D6, 0x_F8, 0x_93, 0x_81,
		0x_81, 0x_49, 0x_9F, 0x_F8, 0x_F8, 0x_49, 0x_93, 0x_88, 0x_02, 0x_F8, 0x_81, 0x_81, 0x_81, 0x_93, 0x_81,
		0x_88, 0x_A9, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_63, 0x_50, 0x_02, 0x_A9, 0x_49, 0x_81, 0x_88, 0x_9F, 0x_F8, 0x_93, 0x_39,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_34_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_34_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0D,
		0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_0D,
		0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_E1, 0x_98, 0x_41, 0x_44, 0x_C3, 0x_E1, 0x_98, 0x_EF,
		0x_4E, 0x_D9, 0x_EF, 0x_E1, 0x_D9, 0x_D8, 0x_EF, 0x_E1, 0x_4E, 0x_98, 0x_EF, 0x_98, 0x_EF, 0x_E1, 0x_22,
		0x_98, 0x_98, 0x_A3,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_98, 0x_EF, 0x_E1, 0x_C3, 0x_FD, 0x_44, 0x_A3, 0x_D9, 0x_4E, 0x_22,
	];

	helper(S, BASE, 34);
}
// endregion
// region: s_has_whitespaces_and_124_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_124_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_0C,
		0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_63, 0x_74, 0x_97, 0x_12,
		0x_82, 0x_82, 0x_EA, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_63, 0x_59, 0x_97, 0x_3F, 0x_EA, 0x_0E, 0x_82, 0x_D2, 0x_A6, 0x_44,
	];

	helper(S, BASE, 124);
}
// endregion
// region: s_has_whitespaces_and_5_092_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_5_092_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_E1, 0x_F3, 0x_6B, 0x_C1, 0x_90,
		0x_E4, 0x_C1, 0x_DD, 0x_E4, 0x_69, 0x_48, 0x_F3, 0x_69, 0x_48, 0x_F3, 0x_E4, 0x_7C, 0x_C1, 0x_48, 0x_C1,
		0x_C1, 0x_69, 0x_7C, 0x_4D, 0x_6B, 0x_6F, 0x_48, 0x_6B, 0x_6F, 0x_F3, 0x_6B, 0x_6B, 0x_E4, 0x_DD, 0x_6F,
		0x_4D, 0x_DD, 0x_F3, 0x_E4, 0x_E4, 0x_E1, 0x_E1, 0x_69, 0x_6F, 0x_4D, 0x_6B,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_48, 0x_69, 0x_E1, 0x_E4, 0x_4D, 0x_6F, 0x_DD, 0x_7C, 0x_F3, 0x_C1,
	];

	helper(S, BASE, 5_092);
}
// endregion
// region: s_has_whitespaces_and_61_800_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_61_800_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_CF, 0x_E9, 0x_CF, 0x_50, 0x_E9, 0x_41, 0x_AA, 0x_9E, 0x_53, 0x_53, 0x_F7, 0x_9E, 0x_13,
		0x_13, 0x_53, 0x_CF, 0x_58, 0x_AA, 0x_E9, 0x_58, 0x_39, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_9C, 0x_E9, 0x_53, 0x_CF, 0x_9E, 0x_AA, 0x_58, 0x_50, 0x_13, 0x_39,
	];

	helper(S, BASE, 61_800);
}
// endregion
// region: s_has_whitespaces_and_705_204_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_705_204_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0B,
		0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_D7,
		0x_D7, 0x_D3, 0x_30, 0x_D3, 0x_C0, 0x_C5, 0x_C6, 0x_CB, 0x_D3, 0x_CB, 0x_E6, 0x_E6, 0x_A5, 0x_CB, 0x_CB,
		0x_A5, 0x_DE, 0x_30, 0x_D3, 0x_CB, 0x_E6, 0x_D7, 0x_30, 0x_0E, 0x_C6, 0x_03, 0x_DE, 0x_CB, 0x_03, 0x_CB,
		0x_C6, 0x_A5, 0x_03, 0x_D3, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_C6, 0x_D3, 0x_03, 0x_CB, 0x_D7, 0x_C0, 0x_A5, 0x_E6, 0x_DE, 0x_30, 0x_0E,
	];

	helper(S, BASE, 705_204);
}
// endregion
// region: s_has_whitespaces_and_5_793_121_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_5_793_121_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_09,
		0x_0A, 0x_A6, 0x_76, 0x_8C, 0x_74, 0x_DF, 0x_DD, 0x_1E, 0x_0F, 0x_A6, 0x_1E, 0x_8C, 0x_74, 0x_8C, 0x_BF,
		0x_95, 0x_4E, 0x_76, 0x_DD, 0x_1E, 0x_74, 0x_DF, 0x_DF, 0x_1E, 0x_95, 0x_4E, 0x_95, 0x_A6, 0x_A6, 0x_74,
		0x_8C, 0x_76, 0x_BF, 0x_76, 0x_76, 0x_E2, 0x_BF, 0x_DD, 0x_1E, 0x_8C, 0x_74, 0x_A6, 0x_BF, 0x_74, 0x_74,
		0x_8C, 0x_1E, 0x_76, 0x_DD, 0x_DF, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_E2, 0x_76, 0x_A6, 0x_1E, 0x_DF, 0x_BF, 0x_74, 0x_95, 0x_4E, 0x_8C,
	];

	helper(S, BASE, 5_793_121);
}
// endregion
// region: s_has_whitespaces_and_88_751_135_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_88_751_135_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_20,
		0x_09, 0x_0A, 0x_13, 0x_EF, 0x_FD, 0x_28, 0x_FE, 0x_28, 0x_9A, 0x_28, 0x_04, 0x_7A, 0x_13, 0x_FD, 0x_EF,
		0x_12, 0x_AA, 0x_D1, 0x_28, 0x_28, 0x_1C, 0x_D1, 0x_AA, 0x_AA, 0x_28, 0x_AA, 0x_28, 0x_9A, 0x_28, 0x_D1,
		0x_1C, 0x_AA, 0x_EF, 0x_1C, 0x_7A, 0x_1C, 0x_1C, 0x_9A, 0x_28, 0x_7A, 0x_28, 0x_13, 0x_9A, 0x_28, 0x_28,
		0x_7A, 0x_FE, 0x_FE, 0x_9A, 0x_EF, 0x_D1, 0x_D1, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_FD, 0x_AA, 0x_12, 0x_13, 0x_9A, 0x_EF, 0x_1C, 0x_7A, 0x_FE, 0x_D1,
	];

	helper(S, BASE, 88_751_135);
}
// endregion
// region: s_has_whitespaces_and_903_596_207_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_903_596_207_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_09,
		0x_DD, 0x_2C, 0x_DD, 0x_7C, 0x_67, 0x_84, 0x_2C, 0x_2C, 0x_34, 0x_D4, 0x_19, 0x_DD, 0x_84, 0x_34, 0x_34,
		0x_06, 0x_84, 0x_88, 0x_06, 0x_06, 0x_DD, 0x_7C, 0x_C0, 0x_84, 0x_84,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_06, 0x_2C, 0x_19, 0x_DD, 0x_BB, 0x_67, 0x_88, 0x_34, 0x_84, 0x_C0,
	];

	helper(S, BASE, 903_596_207);
}
// endregion
// region: s_has_whitespaces_and_4_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_4_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_09, 0x_C0, 0x_AC, 0x_CB, 0x_39, 0x_DB, 0x_8E, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_5C, 0x_7D, 0x_8E, 0x_C0, 0x_39, 0x_CB, 0x_4D, 0x_6A, 0x_80, 0x_58, 0x_DB, 0x_24,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_whitespaces_and_45_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_45_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_CC, 0x_7B, 0x_D1, 0x_44, 0x_CC, 0x_DD, 0x_C5, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_53, 0x_1F, 0x_CC, 0x_39, 0x_6B, 0x_7B, 0x_DD, 0x_67, 0x_30, 0x_1B, 0x_44, 0x_48,
	];

	helper(S, BASE, 45);
}
// endregion
// region: s_has_whitespaces_and_439_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_439_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_C0, 0x_81, 0x_5A, 0x_2B, 0x_95, 0x_E1, 0x_7E,
		0x_E1, 0x_A1, 0x_E1, 0x_7E, 0x_C0, 0x_41, 0x_5A, 0x_32, 0x_C0, 0x_32, 0x_95, 0x_41, 0x_5A, 0x_81, 0x_B4,
		0x_B4, 0x_E1, 0x_81, 0x_32, 0x_81, 0x_C0, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_E1, 0x_C0, 0x_B4, 0x_74, 0x_32, 0x_0E, 0x_81, 0x_A1, 0x_95, 0x_5A, 0x_41, 0x_7E,
	];

	helper(S, BASE, 439);
}
// endregion
// region: s_has_whitespaces_and_4_820_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_4_820_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_0A,
		0x_0B, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_5F, 0x_5F, 0x_71, 0x_D5, 0x_27,
		0x_5F, 0x_71, 0x_80, 0x_CC, 0x_CC, 0x_16, 0x_C1, 0x_41, 0x_4D, 0x_CC, 0x_B1, 0x_41, 0x_D5, 0x_50, 0x_5F,
		0x_80, 0x_80, 0x_CC, 0x_50, 0x_5F, 0x_4D, 0x_B1, 0x_D5, 0x_16,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_1E, 0x_5F, 0x_E9, 0x_4D, 0x_C1, 0x_71, 0x_16, 0x_50, 0x_CC, 0x_D5, 0x_B1, 0x_41,
	];

	helper(S, BASE, 4_820);
}
// endregion
// region: s_has_whitespaces_and_13_801_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_13_801_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_20,
		0x_0A, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_09,
		0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_77, 0x_BE, 0x_AD, 0x_AD, 0x_69, 0x_ED,
		0x_ED, 0x_B0, 0x_C1, 0x_DD, 0x_77, 0x_DD, 0x_EE, 0x_AD, 0x_C1, 0x_EE, 0x_77, 0x_CF, 0x_C1, 0x_CF, 0x_C1,
		0x_F5, 0x_CF, 0x_E3, 0x_77, 0x_E3, 0x_F5, 0x_B0, 0x_28, 0x_9F, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_F5, 0x_B0, 0x_BE, 0x_28, 0x_EE, 0x_77, 0x_9F, 0x_AD, 0x_C1, 0x_ED, 0x_E3, 0x_DD,
	];

	helper(S, BASE, 13_801);
}
// endregion
// region: s_has_whitespaces_and_853_935_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_853_935_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_16, 0x_CD,
		0x_6E, 0x_84, 0x_6E, 0x_61, 0x_FE, 0x_F7, 0x_61,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_BB, 0x_16, 0x_CD, 0x_61, 0x_06, 0x_1C, 0x_51, 0x_84, 0x_AB, 0x_D1, 0x_6E, 0x_F7,
	];

	helper(S, BASE, 853_935);
}
// endregion
// region: s_has_whitespaces_and_4_208_758_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_4_208_758_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_0C,
		0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_09,
		0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_03, 0x_23, 0x_23, 0x_E7, 0x_03, 0x_E7,
		0x_EC, 0x_56, 0x_56, 0x_8C, 0x_03, 0x_3F, 0x_EB, 0x_67, 0x_8C, 0x_D3, 0x_56, 0x_7E, 0x_8C, 0x_EB, 0x_7E,
		0x_03, 0x_3F, 0x_EB, 0x_56, 0x_7E,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_56, 0x_EE, 0x_EB, 0x_23, 0x_7E, 0x_67, 0x_3F, 0x_E7, 0x_CA, 0x_8C, 0x_03, 0x_A5,
	];

	helper(S, BASE, 4_208_758);
}
// endregion
// region: s_has_whitespaces_and_14_714_307_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_14_714_307_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0B,
		0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_20,
		0x_20, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_5B, 0x_F1, 0x_46, 0x_99, 0x_A1, 0x_ED, 0x_61,
		0x_16, 0x_F1, 0x_99, 0x_5B, 0x_D7, 0x_03, 0x_5B, 0x_D7, 0x_A1, 0x_46, 0x_0E, 0x_5B, 0x_A1, 0x_0E, 0x_13,
		0x_46, 0x_D7, 0x_ED, 0x_5B, 0x_46, 0x_03, 0x_61, 0x_F1, 0x_40, 0x_F1, 0x_F1, 0x_ED, 0x_03, 0x_61, 0x_A1,
		0x_0E, 0x_0E, 0x_A1, 0x_46, 0x_A1, 0x_13, 0x_F1, 0x_F1, 0x_46, 0x_5B,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_13, 0x_99, 0x_5B, 0x_03, 0x_A1, 0x_0E, 0x_D1, 0x_46, 0x_D7, 0x_61, 0x_ED, 0x_40,
	];

	helper(S, BASE, 14_714_307);
}
// endregion
// region: s_has_whitespaces_and_381_019_250_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_381_019_250_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0C,
		0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_08, 0x_D9,
		0x_56, 0x_95, 0x_73, 0x_D9, 0x_E8, 0x_FF, 0x_11, 0x_56, 0x_57, 0x_88, 0x_D9, 0x_D7, 0x_E8, 0x_08, 0x_88,
		0x_08, 0x_7E, 0x_08, 0x_67, 0x_95, 0x_57, 0x_67, 0x_D3, 0x_D7, 0x_D3, 0x_08, 0x_D7, 0x_73, 0x_08, 0x_08,
		0x_67, 0x_D9, 0x_FF, 0x_D3, 0x_D3, 0x_56, 0x_FF, 0x_7E, 0x_E8, 0x_7E, 0x_7E, 0x_D3, 0x_D9, 0x_57,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_FF, 0x_95, 0x_7E, 0x_67, 0x_57, 0x_08, 0x_73, 0x_D7, 0x_88, 0x_E8, 0x_D3, 0x_56,
	];

	helper(S, BASE, 381_019_250);
}
// endregion
// region: s_has_whitespaces_and_4_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_4_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0C,
		0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_20,
		0x_47, 0x_40, 0x_47, 0x_47,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_3D, 0x_6D, 0x_BA, 0x_47, 0x_26, 0x_C3, 0x_CC, 0x_C6, 0x_BC, 0x_4C, 0x_5A, 0x_2E, 0x_DD, 0x_68,
		0x_88, 0x_AC, 0x_FA, 0x_1C,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_whitespaces_and_63_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_63_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_20, 0x_A0, 0x_45, 0x_92, 0x_80, 0x_69, 0x_45, 0x_E6, 0x_F5, 0x_B1, 0x_3C, 0x_F3, 0x_91,
		0x_45, 0x_B1, 0x_69, 0x_45, 0x_E5, 0x_E5, 0x_C1, 0x_17, 0x_E6, 0x_B1, 0x_F3, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_AE, 0x_F3, 0x_A0, 0x_E6, 0x_01, 0x_45, 0x_80, 0x_FF, 0x_C1, 0x_17, 0x_83, 0x_E5, 0x_F1, 0x_16,
		0x_B1, 0x_91, 0x_3C, 0x_F5,
	];

	helper(S, BASE, 63);
}
// endregion
// region: s_has_whitespaces_and_749_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_749_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0C,
		0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_F2, 0x_8D, 0x_B6,
		0x_98, 0x_82, 0x_82, 0x_15, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_8D, 0x_F2, 0x_91, 0x_65, 0x_7F, 0x_AB, 0x_AC, 0x_B6, 0x_3B, 0x_13, 0x_92, 0x_15, 0x_D7, 0x_02,
		0x_82, 0x_DF, 0x_53, 0x_A1,
	];

	helper(S, BASE, 749);
}
// endregion
// region: s_has_whitespaces_and_8_670_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_8_670_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_B4, 0x_4F, 0x_FF, 0x_DB, 0x_54, 0x_3A, 0x_63, 0x_66, 0x_63, 0x_9A, 0x_B3, 0x_66, 0x_95,
		0x_D0, 0x_CF, 0x_8C, 0x_A8, 0x_D0, 0x_34, 0x_D0, 0x_95, 0x_B3, 0x_21, 0x_D0, 0x_21, 0x_66, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_B4, 0x_63, 0x_3A, 0x_E4, 0x_4F, 0x_DB, 0x_95, 0x_8C, 0x_B3, 0x_9A, 0x_8E, 0x_D0, 0x_65, 0x_CF,
		0x_34, 0x_66, 0x_21, 0x_A8,
	];

	helper(S, BASE, 8_670);
}
// endregion
// region: s_has_whitespaces_and_81_059_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_81_059_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_09,
		0x_09, 0x_0A, 0x_0D, 0x_03, 0x_C5, 0x_39, 0x_9D, 0x_D8, 0x_07, 0x_31, 0x_AB, 0x_42, 0x_D2, 0x_9D, 0x_AB,
		0x_42, 0x_DF, 0x_61, 0x_31, 0x_4A, 0x_4A, 0x_31, 0x_07, 0x_61, 0x_C5, 0x_42, 0x_68, 0x_C5, 0x_DF, 0x_31,
		0x_39, 0x_39, 0x_68, 0x_03, 0x_42, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_F0, 0x_0E, 0x_42, 0x_DF, 0x_9D, 0x_07, 0x_4A, 0x_CD, 0x_68, 0x_39, 0x_03, 0x_A0, 0x_31, 0x_1E,
		0x_C5, 0x_61, 0x_58, 0x_AB,
	];

	helper(S, BASE, 81_059);
}
// endregion
// region: s_has_whitespaces_and_837_771_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_837_771_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0C,
		0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_08, 0x_D9, 0x_42, 0x_53, 0x_71, 0x_DA, 0x_E9,
		0x_B2, 0x_2E, 0x_8D, 0x_D9, 0x_7C, 0x_7C, 0x_42, 0x_01, 0x_77, 0x_D1, 0x_7C, 0x_42, 0x_B2, 0x_B2, 0x_7A,
		0x_FD, 0x_08, 0x_FD, 0x_2E, 0x_2C, 0x_01, 0x_42, 0x_8D, 0x_08, 0x_7C, 0x_01, 0x_2C, 0x_7C, 0x_E9, 0x_4E,
		0x_D9, 0x_7C, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_B2, 0x_7A, 0x_42, 0x_79, 0x_71, 0x_7C, 0x_08, 0x_69, 0x_D9, 0x_D1, 0x_77, 0x_8D, 0x_2C, 0x_53, 0x_E9,
		0x_01, 0x_FD, 0x_4E, 0x_2E,
	];

	helper(S, BASE, 837_771);
}
// endregion
// region: s_has_whitespaces_and_4_663_083_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_4_663_083_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_05, 0x_65, 0x_85, 0x_65, 0x_14, 0x_A2, 0x_ED, 0x_42,
		0x_B2,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_05, 0x_14, 0x_16, 0x_74, 0x_F8, 0x_F4, 0x_DC, 0x_A2, 0x_8E, 0x_6F, 0x_39, 0x_42, 0x_79, 0x_85,
		0x_B9, 0x_65, 0x_B2, 0x_4E,
	];

	helper(S, BASE, 4_663_083);
}
// endregion
// region: s_has_whitespaces_and_63_889_636_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_63_889_636_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_0D,
		0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_09,
		0x_0A, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_20, 0x_35, 0x_58, 0x_F3, 0x_BB, 0x_9D, 0x_80, 0x_4D, 0x_DE, 0x_9D,
		0x_BB, 0x_8D, 0x_8D, 0x_BB, 0x_BB, 0x_8D, 0x_BB, 0x_3A, 0x_32, 0x_F3, 0x_58, 0x_66, 0x_58, 0x_32, 0x_52,
		0x_80, 0x_32, 0x_35, 0x_69, 0x_52, 0x_B5, 0x_80,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_35, 0x_D3, 0x_50, 0x_BB, 0x_8D, 0x_58, 0x_69, 0x_4D, 0x_B5, 0x_32, 0x_80, 0x_39, 0x_9D, 0x_66,
		0x_F3, 0x_52, 0x_3A, 0x_64,
	];

	helper(S, BASE, 63_889_636);
}
// endregion
// region: s_has_whitespaces_and_679_281_916_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_679_281_916_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0C, 0x_AD, 0x_9F, 0x_CB, 0x_C5, 0x_06, 0x_CB, 0x_C0, 0x_70, 0x_CB, 0x_9C, 0x_AD, 0x_E1,
		0x_D9, 0x_9C, 0x_88, 0x_06, 0x_9F, 0x_62, 0x_F2, 0x_43, 0x_C2, 0x_88, 0x_A7, 0x_24, 0x_46, 0x_A7, 0x_62,
		0x_06, 0x_9F, 0x_C5, 0x_CB, 0x_AD, 0x_06, 0x_89, 0x_AD, 0x_C2, 0x_A7, 0x_E1, 0x_C2, 0x_43, 0x_06, 0x_E1,
		0x_14, 0x_62, 0x_A7, 0x_E1, 0x_A7, 0x_9C, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_9C, 0x_06, 0x_62, 0x_C2, 0x_D9, 0x_CB, 0x_C5, 0x_9F, 0x_46, 0x_43, 0x_E1, 0x_89, 0x_A7, 0x_AD,
		0x_C0, 0x_24, 0x_14, 0x_F2,
	];

	helper(S, BASE, 679_281_916);
}
// endregion
// region: s_has_whitespaces_and_4_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_4_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0A,
		0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0C,
		0x_0D, 0x_20, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_85, 0x_EA, 0x_C9, 0x_B7, 0x_5A, 0x_79, 0x_85,
		0x_8F, 0x_32, 0x_CB, 0x_A8, 0x_42, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_2E, 0x_C9, 0x_E1, 0x_85, 0x_50, 0x_F7, 0x_45, 0x_4A, 0x_78, 0x_15, 0x_2F, 0x_B7, 0x_B9, 0x_58,
		0x_F4, 0x_65, 0x_1A, 0x_6C, 0x_59, 0x_9F, 0x_63, 0x_43, 0x_8F, 0x_CB, 0x_79, 0x_42, 0x_C1, 0x_A8, 0x_6A,
		0x_12, 0x_E3, 0x_32, 0x_E7, 0x_55, 0x_3B, 0x_89, 0x_76, 0x_67, 0x_7B, 0x_D9, 0x_5A,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_whitespaces_and_53_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_53_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_09,
		0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0D,
		0x_0B, 0x_09, 0x_F5, 0x_DC, 0x_AA, 0x_52, 0x_A9, 0x_A9, 0x_71, 0x_73, 0x_62, 0x_9B, 0x_5C, 0x_56, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_F5, 0x_25, 0x_C6, 0x_72, 0x_52, 0x_C3, 0x_5C, 0x_5B, 0x_83, 0x_7D, 0x_DC, 0x_94, 0x_A9, 0x_C7,
		0x_EB, 0x_1C, 0x_9B, 0x_C9, 0x_C1, 0x_CC, 0x_13, 0x_18, 0x_D5, 0x_62, 0x_93, 0x_FA, 0x_4D, 0x_30, 0x_D8,
		0x_71, 0x_F1, 0x_D0, 0x_AC, 0x_D2, 0x_F2, 0x_73, 0x_7E, 0x_82, 0x_F3, 0x_56, 0x_B4,
	];

	helper(S, BASE, 53);
}
// endregion
// region: s_has_whitespaces_and_749_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_749_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_0A,
		0x_09, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_0B,
		0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_53, 0x_87, 0x_15, 0x_91,
		0x_9A, 0x_9A, 0x_9A, 0x_AD, 0x_1F, 0x_5B, 0x_F0, 0x_70, 0x_7D, 0x_61, 0x_8D, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_F0, 0x_32, 0x_34, 0x_A3, 0x_1F, 0x_2F, 0x_BA, 0x_CF, 0x_06, 0x_5B, 0x_7D, 0x_30, 0x_70, 0x_8C,
		0x_AC, 0x_91, 0x_53, 0x_10, 0x_AD, 0x_57, 0x_73, 0x_C8, 0x_8B, 0x_9A, 0x_DF, 0x_60, 0x_AF, 0x_EF, 0x_11,
		0x_E2, 0x_8D, 0x_92, 0x_61, 0x_7E, 0x_87, 0x_3C, 0x_4B, 0x_C1, 0x_D4, 0x_28, 0x_F7,
	];

	helper(S, BASE, 749);
}
// endregion
// region: s_has_whitespaces_and_8_286_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_8_286_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0A,
		0x_0B, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_20,
		0x_05, 0x_35, 0x_71, 0x_4C, 0x_67, 0x_86, 0x_5C, 0x_2E, 0x_D6, 0x_4D, 0x_A3, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_70, 0x_45, 0x_78, 0x_05, 0x_66, 0x_4D, 0x_55, 0x_F3, 0x_D6, 0x_38, 0x_72, 0x_71, 0x_E1, 0x_2A,
		0x_39, 0x_86, 0x_7F, 0x_E0, 0x_2E, 0x_3E, 0x_67, 0x_12, 0x_92, 0x_F7, 0x_52, 0x_49, 0x_A0, 0x_AC, 0x_35,
		0x_53, 0x_CE, 0x_68, 0x_B6, 0x_5C, 0x_F0, 0x_44, 0x_FA, 0x_A3, 0x_3C, 0x_33, 0x_E3,
	];

	helper(S, BASE, 8_286);
}
// endregion
// region: s_has_whitespaces_and_39_547_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_39_547_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_0B, 0x_09,
		0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_20,
		0x_09, 0x_09, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_86, 0x_13, 0x_06, 0x_70, 0x_18, 0x_B6,
		0x_C0,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_C0, 0x_5A, 0x_A7, 0x_BC, 0x_E9, 0x_DF, 0x_54, 0x_05, 0x_69, 0x_62, 0x_1A, 0x_F6, 0x_DB, 0x_8D,
		0x_2A, 0x_EA, 0x_13, 0x_A2, 0x_B4, 0x_64, 0x_B6, 0x_86, 0x_C9, 0x_2E, 0x_06, 0x_88, 0x_D0, 0x_07, 0x_AA,
		0x_CF, 0x_97, 0x_C3, 0x_5E, 0x_34, 0x_27, 0x_C6, 0x_39, 0x_18, 0x_65, 0x_01, 0x_9D,
	];

	helper(S, BASE, 39_547);
}
// endregion
// region: s_has_whitespaces_and_188_513_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_188_513_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0C, 0x_F8, 0x_A2, 0x_CC, 0x_87, 0x_01, 0x_C9, 0x_C8, 0x_EA, 0x_CC, 0x_78, 0x_F8, 0x_24,
		0x_49, 0x_3E, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_49, 0x_F8, 0x_0E, 0x_70, 0x_C4, 0x_EA, 0x_A1, 0x_DF, 0x_E5, 0x_AE, 0x_DC, 0x_68, 0x_1C, 0x_78,
		0x_12, 0x_C9, 0x_87, 0x_24, 0x_F9, 0x_1B, 0x_91, 0x_A2, 0x_E0, 0x_DA, 0x_7B, 0x_3F, 0x_CF, 0x_E2, 0x_41,
		0x_B5, 0x_8D, 0x_F5, 0x_1E, 0x_FF, 0x_5D, 0x_CC, 0x_A3, 0x_31, 0x_74, 0x_BF, 0x_C8,
	];

	helper(S, BASE, 188_513);
}
// endregion
// region: s_has_whitespaces_and_2_467_953_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_2_467_953_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0C,
		0x_0B, 0x_0A, 0x_94, 0x_6C, 0x_B9, 0x_94, 0x_25, 0x_C3, 0x_62, 0x_0F, 0x_C0, 0x_62, 0x_1A, 0x_3B, 0x_C0,
		0x_5C, 0x_62, 0x_08, 0x_B2, 0x_9B, 0x_A0, 0x_D1, 0x_5B, 0x_56, 0x_56, 0x_44, 0x_A5, 0x_75, 0x_0F, 0x_44,
		0x_97, 0x_E2, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_4A, 0x_B9, 0x_E9, 0x_F7, 0x_7E, 0x_08, 0x_3B, 0x_55, 0x_56, 0x_9B, 0x_2A, 0x_5B, 0x_6C, 0x_D1,
		0x_A2, 0x_1A, 0x_B2, 0x_A5, 0x_0F, 0x_62, 0x_49, 0x_44, 0x_BE, 0x_CD, 0x_A0, 0x_1E, 0x_C3, 0x_E2, 0x_1C,
		0x_5E, 0x_22, 0x_02, 0x_94, 0x_93, 0x_65, 0x_60, 0x_75, 0x_FF, 0x_5C, 0x_97, 0x_F8,
	];

	helper(S, BASE, 2_467_953);
}
// endregion
// region: s_has_whitespaces_and_27_087_999_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_27_087_999_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_0A,
		0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0D,
		0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_C0, 0x_5E, 0x_89, 0x_FC, 0x_CF,
		0x_2F, 0x_01, 0x_80, 0x_B4, 0x_7C, 0x_7C, 0x_99, 0x_D9, 0x_80, 0x_22, 0x_6A, 0x_FA, 0x_4E, 0x_65, 0x_73,
		0x_F0, 0x_13, 0x_33, 0x_CF, 0x_73, 0x_C0, 0x_7C, 0x_4E, 0x_66, 0x_B4, 0x_41, 0x_89, 0x_B4,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_D9, 0x_93, 0x_88, 0x_DE, 0x_A2, 0x_CB, 0x_5C, 0x_C0, 0x_AC, 0x_FA, 0x_65, 0x_F0, 0x_F6, 0x_66,
		0x_CF, 0x_99, 0x_73, 0x_13, 0x_95, 0x_41, 0x_77, 0x_C5, 0x_B4, 0x_80, 0x_22, 0x_89, 0x_CE, 0x_27, 0x_5E,
		0x_83, 0x_6A, 0x_7C, 0x_01, 0x_50, 0x_33, 0x_97, 0x_E5, 0x_B8, 0x_F7, 0x_4E, 0x_F3,
	];

	helper(S, BASE, 27_087_999);
}
// endregion
// region: s_has_whitespaces_and_495_434_929_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_495_434_929_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0A,
		0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_FF, 0x_DD, 0x_30, 0x_1A, 0x_DD, 0x_E2, 0x_01, 0x_1A, 0x_37,
		0x_37, 0x_AA, 0x_F5, 0x_E4, 0x_37, 0x_C6, 0x_6F, 0x_81, 0x_89, 0x_F7, 0x_F3, 0x_37, 0x_27, 0x_CC, 0x_73,
		0x_B3, 0x_89, 0x_4E, 0x_DC, 0x_27, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_39, 0x_6F, 0x_FF, 0x_1A, 0x_4C, 0x_81, 0x_51, 0x_8B, 0x_30, 0x_C0, 0x_DC, 0x_A9, 0x_4D, 0x_45,
		0x_95, 0x_C6, 0x_89, 0x_E4, 0x_CC, 0x_52, 0x_F4, 0x_27, 0x_10, 0x_F3, 0x_1C, 0x_4E, 0x_F5, 0x_F7, 0x_C4,
		0x_73, 0x_E2, 0x_57, 0x_DD, 0x_44, 0x_AA, 0x_B3, 0x_D2, 0x_37, 0x_40, 0x_BF, 0x_05,
	];

	helper(S, BASE, 495_434_929);
}
// endregion
// region: s_has_whitespaces_and_5_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_5_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_20,
		0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_FB, 0x_9B, 0x_C1, 0x_D4,
		0x_E6, 0x_E8, 0x_05, 0x_84, 0x_EC, 0x_32, 0x_C3, 0x_54, 0x_C3, 0x_C1, 0x_39, 0x_D4, 0x_A9, 0x_6D, 0x_8C,
		0x_D5, 0x_AD, 0x_11, 0x_DB, 0x_52, 0x_98, 0x_C2, 0x_1B, 0x_C5, 0x_26, 0x_B1, 0x_05, 0x_11, 0x_11, 0x_50,
		0x_39, 0x_04, 0x_C5, 0x_FD, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_DA, 0x_1B, 0x_FD, 0x_D5, 0x_FB, 0x_C2, 0x_2C, 0x_47, 0x_27, 0x_C3, 0x_7B, 0x_C1, 0x_50, 0x_54,
		0x_BD, 0x_FE, 0x_A1, 0x_65, 0x_A4, 0x_CF, 0x_78, 0x_D3, 0x_6D, 0x_B6, 0x_A9, 0x_6F, 0x_39, 0x_84, 0x_FC,
		0x_5A, 0x_52, 0x_67, 0x_98, 0x_E8, 0x_B1, 0x_B7, 0x_EC, 0x_C6, 0x_31, 0x_32, 0x_AD, 0x_DE, 0x_D4, 0x_A6,
		0x_6A, 0x_08, 0x_DC, 0x_B2, 0x_A8, 0x_41, 0x_74, 0x_63, 0x_F6, 0x_05, 0x_B3, 0x_4B, 0x_A3, 0x_30, 0x_DD,
		0x_8C, 0x_8E, 0x_D1, 0x_DB, 0x_40, 0x_80, 0x_E6, 0x_04, 0x_BA, 0x_26, 0x_11, 0x_87, 0x_E9,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_46_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_46_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0C,
		0x_3E, 0x_A5, 0x_97, 0x_59, 0x_95, 0x_CF, 0x_82, 0x_CA, 0x_E5, 0x_76, 0x_6F, 0x_87, 0x_3B, 0x_8A, 0x_B5,
		0x_5A, 0x_32, 0x_23, 0x_A1, 0x_95, 0x_12, 0x_EB, 0x_44, 0x_36, 0x_71, 0x_BF, 0x_BA, 0x_F5, 0x_12, 0x_56,
		0x_FB, 0x_34, 0x_9E, 0x_4B, 0x_44, 0x_1D, 0x_54, 0x_95, 0x_06, 0x_4E, 0x_BA, 0x_FB, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_EF, 0x_6F, 0x_CF, 0x_48, 0x_87, 0x_60, 0x_1D, 0x_F0, 0x_9D, 0x_31, 0x_7A, 0x_F5, 0x_9C, 0x_D0,
		0x_4E, 0x_56, 0x_CA, 0x_44, 0x_B5, 0x_95, 0x_D8, 0x_36, 0x_32, 0x_71, 0x_99, 0x_FF, 0x_BB, 0x_90, 0x_AF,
		0x_E6, 0x_7D, 0x_AD, 0x_D5, 0x_F3, 0x_05, 0x_CC, 0x_ED, 0x_BF, 0x_8D, 0x_B0, 0x_BA, 0x_5D, 0x_6A, 0x_12,
		0x_F7, 0x_3E, 0x_83, 0x_E5, 0x_6D, 0x_4B, 0x_2E, 0x_5A, 0x_3B, 0x_EB, 0x_F4, 0x_54, 0x_3F, 0x_10, 0x_34,
		0x_06, 0x_76, 0x_84, 0x_9E, 0x_82, 0x_D3, 0x_59, 0x_A1, 0x_AE, 0x_8A, 0x_FB, 0x_13, 0x_23,
	];

	helper(S, BASE, 46);
}
// endregion
// region: s_has_whitespaces_and_870_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_870_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0B,
		0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_20,
		0x_0B, 0x_0C, 0x_E4, 0x_3B, 0x_61, 0x_3D, 0x_1A, 0x_51, 0x_07, 0x_F9, 0x_17, 0x_63, 0x_52, 0x_43, 0x_72,
		0x_6E,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_84, 0x_98, 0x_6F, 0x_E5, 0x_E1, 0x_9C, 0x_0E, 0x_D4, 0x_81, 0x_4E, 0x_E4, 0x_F3, 0x_DA, 0x_63,
		0x_BD, 0x_60, 0x_70, 0x_4D, 0x_51, 0x_57, 0x_72, 0x_CC, 0x_1D, 0x_8B, 0x_35, 0x_1F, 0x_04, 0x_8D, 0x_3E,
		0x_ED, 0x_C2, 0x_2F, 0x_1A, 0x_FE, 0x_1C, 0x_FD, 0x_D7, 0x_C8, 0x_B3, 0x_03, 0x_C5, 0x_90, 0x_07, 0x_36,
		0x_B6, 0x_99, 0x_45, 0x_75, 0x_4C, 0x_3D, 0x_86, 0x_11, 0x_9F, 0x_BC, 0x_47, 0x_F9, 0x_AD, 0x_26, 0x_7A,
		0x_52, 0x_40, 0x_BF, 0x_6E, 0x_87, 0x_62, 0x_80, 0x_3B, 0x_FF, 0x_17, 0x_43, 0x_7B, 0x_15,
	];

	helper(S, BASE, 870);
}
// endregion
// region: s_has_whitespaces_and_6_647_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_6_647_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_27,
		0x_E2, 0x_A3, 0x_41, 0x_68, 0x_02, 0x_F4, 0x_45, 0x_68, 0x_E2, 0x_3A, 0x_44, 0x_B8, 0x_4F, 0x_E6, 0x_98,
		0x_98, 0x_D2, 0x_2F, 0x_54, 0x_E6, 0x_F6, 0x_25, 0x_24, 0x_64, 0x_8E, 0x_0E, 0x_6A, 0x_DD, 0x_02, 0x_7A,
		0x_D2, 0x_4E, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_27, 0x_1F, 0x_91, 0x_A3, 0x_0E, 0x_BE, 0x_45, 0x_67, 0x_16, 0x_2C, 0x_DD, 0x_AD, 0x_D3, 0x_98,
		0x_A2, 0x_C4, 0x_4C, 0x_E2, 0x_64, 0x_82, 0x_18, 0x_54, 0x_99, 0x_12, 0x_25, 0x_02, 0x_96, 0x_06, 0x_95,
		0x_B4, 0x_13, 0x_B8, 0x_17, 0x_46, 0x_E6, 0x_E0, 0x_42, 0x_15, 0x_52, 0x_F9, 0x_7A, 0x_94, 0x_24, 0x_53,
		0x_3A, 0x_79, 0x_4E, 0x_4F, 0x_F4, 0x_97, 0x_29, 0x_73, 0x_56, 0x_FB, 0x_81, 0x_7E, 0x_EC, 0x_01, 0x_8E,
		0x_6E, 0x_D2, 0x_E1, 0x_2F, 0x_36, 0x_68, 0x_30, 0x_F8, 0x_6A, 0x_F6, 0x_44, 0x_22, 0x_D1,
	];

	helper(S, BASE, 6_647);
}
// endregion
// region: s_has_whitespaces_and_95_180_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_95_180_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_94,
		0x_A2, 0x_1E, 0x_48, 0x_1F, 0x_A2, 0x_11, 0x_1A, 0x_17, 0x_64, 0x_57,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_BE, 0x_08, 0x_D8, 0x_FD, 0x_6C, 0x_54, 0x_61, 0x_9D, 0x_93, 0x_5D, 0x_AE, 0x_06, 0x_B6, 0x_84,
		0x_03, 0x_46, 0x_94, 0x_21, 0x_28, 0x_AA, 0x_C0, 0x_17, 0x_7D, 0x_5B, 0x_1F, 0x_D2, 0x_74, 0x_71, 0x_FC,
		0x_BD, 0x_92, 0x_D3, 0x_11, 0x_10, 0x_FE, 0x_64, 0x_7E, 0x_ED, 0x_E2, 0x_7A, 0x_70, 0x_B4, 0x_6F, 0x_FA,
		0x_1A, 0x_EF, 0x_C7, 0x_0F, 0x_50, 0x_68, 0x_F9, 0x_4D, 0x_6A, 0x_A9, 0x_C9, 0x_80, 0x_2E, 0x_AF, 0x_7C,
		0x_3F, 0x_1E, 0x_A2, 0x_47, 0x_9F, 0x_5E, 0x_0E, 0x_57, 0x_26, 0x_65, 0x_F4, 0x_25, 0x_24,
	];

	helper(S, BASE, 95_180);
}
// endregion
// region: s_has_whitespaces_and_413_744_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_413_744_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0D, 0x_1E, 0x_BB, 0x_9C, 0x_DB, 0x_C9, 0x_28, 0x_3E, 0x_1E, 0x_42, 0x_6A, 0x_70, 0x_3F,
		0x_3A, 0x_51, 0x_AD, 0x_A5, 0x_36, 0x_36, 0x_72, 0x_3F, 0x_67, 0x_E9, 0x_AE, 0x_85, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_1E, 0x_D7, 0x_84, 0x_BB, 0x_86, 0x_5A, 0x_79, 0x_A6, 0x_8B, 0x_AE, 0x_6A, 0x_52, 0x_AD, 0x_67,
		0x_4E, 0x_EF, 0x_5C, 0x_DF, 0x_72, 0x_42, 0x_49, 0x_B9, 0x_F3, 0x_FC, 0x_29, 0x_27, 0x_AC, 0x_B6, 0x_8C,
		0x_51, 0x_FE, 0x_3E, 0x_94, 0x_69, 0x_07, 0x_C2, 0x_AB, 0x_23, 0x_35, 0x_D3, 0x_B0, 0x_78, 0x_D5, 0x_43,
		0x_3A, 0x_9C, 0x_E9, 0x_7C, 0x_F6, 0x_C5, 0x_28, 0x_B3, 0x_DB, 0x_FF, 0x_55, 0x_60, 0x_36, 0x_50, 0x_3F,
		0x_8E, 0x_A7, 0x_11, 0x_85, 0x_14, 0x_A5, 0x_9B, 0x_47, 0x_B8, 0x_70, 0x_06, 0x_3D, 0x_DC,
	];

	helper(S, BASE, 413_744);
}
// endregion
// region: s_has_whitespaces_and_8_765_180_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_8_765_180_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_09, 0x_2C, 0x_4D, 0x_53, 0x_D9, 0x_04, 0x_2C, 0x_8A, 0x_76, 0x_42, 0x_4D, 0x_96, 0x_67,
		0x_BB, 0x_83, 0x_DB, 0x_67, 0x_10, 0x_4D, 0x_EF, 0x_10, 0x_8A, 0x_53, 0x_2A, 0x_37, 0x_12, 0x_02, 0x_07,
		0x_52, 0x_2A, 0x_6C, 0x_A2, 0x_53, 0x_5C, 0x_8A, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_A4, 0x_A2, 0x_5C, 0x_CF, 0x_96, 0x_1D, 0x_98, 0x_3A, 0x_C0, 0x_83, 0x_25, 0x_57, 0x_37, 0x_76,
		0x_A3, 0x_BA, 0x_15, 0x_EF, 0x_5A, 0x_02, 0x_67, 0x_2C, 0x_10, 0x_65, 0x_89, 0x_52, 0x_44, 0x_31, 0x_E7,
		0x_4A, 0x_81, 0x_70, 0x_01, 0x_BB, 0x_FF, 0x_6B, 0x_DB, 0x_4D, 0x_E6, 0x_CA, 0x_7C, 0x_CE, 0x_F9, 0x_F6,
		0x_1A, 0x_58, 0x_46, 0x_77, 0x_C9, 0x_75, 0x_D4, 0x_6C, 0x_9E, 0x_78, 0x_38, 0x_1F, 0x_4F, 0x_53, 0x_93,
		0x_A5, 0x_EE, 0x_12, 0x_07, 0x_42, 0x_74, 0x_59, 0x_8A, 0x_FB, 0x_5E, 0x_D9, 0x_69, 0x_2A,
	];

	helper(S, BASE, 8_765_180);
}
// endregion
// region: s_has_whitespaces_and_81_638_136_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_81_638_136_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0D,
		0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0C,
		0x_0C, 0x_09, 0x_70, 0x_F6, 0x_1C, 0x_C0, 0x_F7, 0x_1F, 0x_C7, 0x_3A, 0x_66, 0x_DC, 0x_1B, 0x_43, 0x_B9,
		0x_78, 0x_3A, 0x_A4, 0x_DF, 0x_B9,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_17, 0x_70, 0x_D3, 0x_A8, 0x_85, 0x_3A, 0x_B6, 0x_9B, 0x_26, 0x_56, 0x_F2, 0x_57, 0x_FF, 0x_43,
		0x_E6, 0x_95, 0x_B8, 0x_3B, 0x_AC, 0x_27, 0x_EE, 0x_B9, 0x_F8, 0x_DA, 0x_2E, 0x_68, 0x_D0, 0x_52, 0x_89,
		0x_42, 0x_6F, 0x_FD, 0x_AD, 0x_E0, 0x_DF, 0x_DC, 0x_6D, 0x_35, 0x_7F, 0x_B5, 0x_D6, 0x_5D, 0x_C0, 0x_B0,
		0x_72, 0x_F7, 0x_F4, 0x_C7, 0x_36, 0x_16, 0x_92, 0x_02, 0x_D1, 0x_91, 0x_1B, 0x_4A, 0x_84, 0x_2F, 0x_CA,
		0x_3D, 0x_21, 0x_1C, 0x_F6, 0x_45, 0x_A4, 0x_66, 0x_44, 0x_78, 0x_65, 0x_87, 0x_F3, 0x_A6,
	];

	helper(S, BASE, 81_638_136);
}
// endregion
// region: s_has_whitespaces_and_509_195_968_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_509_195_968_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0C,
		0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_C8, 0x_BA, 0x_BA, 0x_36, 0x_C8, 0x_7B, 0x_51, 0x_31,
		0x_CC, 0x_A7, 0x_E4, 0x_C2, 0x_25, 0x_4A, 0x_3F, 0x_FE, 0x_2A, 0x_31, 0x_CC, 0x_3F, 0x_29, 0x_43, 0x_7C,
		0x_D6, 0x_43, 0x_D4, 0x_50, 0x_C2, 0x_EE, 0x_CC, 0x_6C, 0x_0F, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_31, 0x_41, 0x_4F, 0x_24, 0x_C1, 0x_D4, 0x_2A, 0x_3F, 0x_89, 0x_D5, 0x_CE, 0x_F5, 0x_1F, 0x_93, 0x_01,
		0x_C4, 0x_3E, 0x_C8, 0x_A0, 0x_48, 0x_C2, 0x_A9, 0x_BD, 0x_35, 0x_90, 0x_51, 0x_1A, 0x_ED, 0x_77, 0x_C3,
		0x_18, 0x_07, 0x_A8, 0x_8E, 0x_57, 0x_43, 0x_0F, 0x_33, 0x_66, 0x_E4, 0x_7C, 0x_68, 0x_DD, 0x_1C, 0x_AA,
		0x_16, 0x_EE, 0x_D9, 0x_29, 0x_75, 0x_4C, 0x_50, 0x_6C, 0x_DC, 0x_A4, 0x_CC, 0x_6D, 0x_94, 0x_E9, 0x_E8,
		0x_D6, 0x_FE, 0x_25, 0x_4A, 0x_36, 0x_5E, 0x_12, 0x_BA, 0x_B2, 0x_82, 0x_38, 0x_9D, 0x_A7,
	];

	helper(S, BASE, 509_195_968);
}
// endregion
// region: s_has_whitespaces_and_1_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_1_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0C,
		0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0B,
		0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_20, 0x_42, 0x_EC, 0x_D7, 0x_D7, 0x_8A,
		0x_99, 0x_C7, 0x_DA, 0x_15, 0x_42, 0x_DC, 0x_CD, 0x_99, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_1F, 0x_42, 0x_82, 0x_C7, 0x_D5, 0x_8A, 0x_A0, 0x_55, 0x_F6, 0x_DB, 0x_06, 0x_77, 0x_92, 0x_24, 0x_B7,
		0x_CF, 0x_D9, 0x_37, 0x_9D, 0x_85, 0x_05, 0x_15, 0x_32, 0x_63, 0x_4A, 0x_23, 0x_83, 0x_70, 0x_21, 0x_B3,
		0x_22, 0x_19, 0x_52, 0x_DC, 0x_A5, 0x_B4, 0x_E5, 0x_11, 0x_68, 0x_F7, 0x_04, 0x_D7, 0x_CE, 0x_60, 0x_FB,
		0x_08, 0x_F8, 0x_3F, 0x_FD, 0x_1A, 0x_9A, 0x_62, 0x_B6, 0x_A2, 0x_67, 0x_4E, 0x_6C, 0x_10, 0x_E7, 0x_98,
		0x_75, 0x_D0, 0x_36, 0x_76, 0x_91, 0x_39, 0x_61, 0x_86, 0x_5E, 0x_65, 0x_A6, 0x_51, 0x_41, 0x_EE, 0x_3E,
		0x_BF, 0x_D2, 0x_69, 0x_C8, 0x_E6, 0x_12, 0x_80, 0x_BA, 0x_5C, 0x_5F, 0x_66, 0x_F0, 0x_DA, 0x_CD, 0x_B2,
		0x_45, 0x_F9, 0x_88, 0x_C4, 0x_C0, 0x_7B, 0x_99, 0x_7F, 0x_AE, 0x_B5, 0x_F5, 0x_AD, 0x_E3, 0x_6F, 0x_94,
		0x_6D, 0x_DD, 0x_13, 0x_5A, 0x_71, 0x_25, 0x_B9, 0x_1C,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_whitespaces_and_14_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_14_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_20,
		0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_09,
		0x_C2, 0x_71, 0x_A4, 0x_4D, 0x_D9, 0x_88, 0x_C5, 0x_D4, 0x_17, 0x_E9, 0x_86, 0x_1A, 0x_3C, 0x_2E, 0x_6D,
		0x_44, 0x_D9, 0x_9F, 0x_C3, 0x_0F, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_E6, 0x_FF, 0x_FE, 0x_9F, 0x_C8, 0x_C7, 0x_7F, 0x_86, 0x_D2, 0x_49, 0x_DA, 0x_A8, 0x_90, 0x_C2,
		0x_3D, 0x_35, 0x_82, 0x_A0, 0x_CB, 0x_32, 0x_44, 0x_2E, 0x_D8, 0x_C0, 0x_26, 0x_62, 0x_94, 0x_5F, 0x_D9,
		0x_BC, 0x_C9, 0x_F3, 0x_70, 0x_3B, 0x_D1, 0x_11, 0x_E7, 0x_9A, 0x_57, 0x_50, 0x_16, 0x_8C, 0x_46, 0x_06,
		0x_C3, 0x_2F, 0x_A4, 0x_CE, 0x_78, 0x_0F, 0x_28, 0x_60, 0x_18, 0x_52, 0x_E3, 0x_CA, 0x_21, 0x_19, 0x_B8,
		0x_34, 0x_17, 0x_1B, 0x_9D, 0x_C5, 0x_AB, 0x_07, 0x_88, 0x_D4, 0x_D7, 0x_A9, 0x_7E, 0x_F5, 0x_3C, 0x_1A,
		0x_22, 0x_43, 0x_BA, 0x_3F, 0x_CF, 0x_33, 0x_9C, 0x_58, 0x_04, 0x_42, 0x_6D, 0x_4E, 0x_5C, 0x_64, 0x_85,
		0x_BB, 0x_0E, 0x_4D, 0x_61, 0x_C6, 0x_96, 0x_DF, 0x_08, 0x_13, 0x_EA, 0x_B0, 0x_4F, 0x_3E, 0x_E4, 0x_7B,
		0x_1E, 0x_84, 0x_51, 0x_AE, 0x_F2, 0x_98, 0x_E9, 0x_8B,
	];

	helper(S, BASE, 14);
}
// endregion
// region: s_has_whitespaces_and_818_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_818_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0A,
		0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0B,
		0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_9C, 0x_12, 0x_50, 0x_ED, 0x_DB,
		0x_9B, 0x_12, 0x_B5, 0x_C3, 0x_8B, 0x_5D, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_FC, 0x_6A, 0x_AB, 0x_CF, 0x_EC, 0x_34, 0x_9C, 0x_40, 0x_98, 0x_33, 0x_45, 0x_8E, 0x_61, 0x_1C,
		0x_8A, 0x_51, 0x_6C, 0x_05, 0x_8B, 0x_D4, 0x_80, 0x_36, 0x_4A, 0x_58, 0x_4E, 0x_9D, 0x_12, 0x_82, 0x_4F,
		0x_83, 0x_FF, 0x_5D, 0x_BE, 0x_73, 0x_87, 0x_F2, 0x_52, 0x_95, 0x_6B, 0x_FA, 0x_CB, 0x_B1, 0x_C9, 0x_1A,
		0x_4D, 0x_44, 0x_C6, 0x_89, 0x_F5, 0x_41, 0x_D7, 0x_B7, 0x_5E, 0x_9B, 0x_F7, 0x_81, 0x_D5, 0x_27, 0x_AF,
		0x_29, 0x_C3, 0x_A7, 0x_35, 0x_E7, 0x_EE, 0x_ED, 0x_A5, 0x_2F, 0x_BD, 0x_7E, 0x_0E, 0x_AE, 0x_B8, 0x_86,
		0x_E4, 0x_14, 0x_C0, 0x_62, 0x_02, 0x_C1, 0x_2C, 0x_E2, 0x_CE, 0x_91, 0x_93, 0x_26, 0x_F4, 0x_72, 0x_F1,
		0x_2E, 0x_F8, 0x_67, 0x_6E, 0x_C5, 0x_7D, 0x_53, 0x_A2, 0x_7B, 0x_DB, 0x_88, 0x_70, 0x_90, 0x_1F, 0x_C2,
		0x_A6, 0x_B5, 0x_94, 0x_65, 0x_60, 0x_B3, 0x_DD, 0x_CD,
	];

	helper(S, BASE, 818);
}
// endregion
// region: s_has_whitespaces_and_6_997_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_6_997_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_20,
		0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_55, 0x_DB, 0x_4A, 0x_19, 0x_75, 0x_43, 0x_7F, 0x_FE, 0x_3E,
		0x_36, 0x_A1, 0x_8E, 0x_3E, 0x_FE, 0x_DB, 0x_D8, 0x_55, 0x_A8, 0x_B5, 0x_54, 0x_FE, 0x_54, 0x_1F, 0x_AE,
		0x_EE, 0x_CE, 0x_03, 0x_74, 0x_8A, 0x_87, 0x_A8, 0x_8B, 0x_EC, 0x_EC, 0x_52, 0x_67, 0x_87, 0x_55, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_7D, 0x_C4, 0x_77, 0x_67, 0x_A1, 0x_A8, 0x_AB, 0x_1F, 0x_EC, 0x_8B, 0x_39, 0x_83, 0x_72, 0x_7C,
		0x_82, 0x_D1, 0x_DD, 0x_3F, 0x_CF, 0x_98, 0x_CB, 0x_F6, 0x_E8, 0x_5A, 0x_59, 0x_36, 0x_91, 0x_BB, 0x_30,
		0x_74, 0x_10, 0x_31, 0x_F7, 0x_7F, 0x_CE, 0x_1B, 0x_BE, 0x_B5, 0x_57, 0x_46, 0x_B9, 0x_5C, 0x_C6, 0x_A9,
		0x_4C, 0x_99, 0x_23, 0x_58, 0x_E5, 0x_0F, 0x_A2, 0x_32, 0x_47, 0x_33, 0x_A0, 0x_75, 0x_03, 0x_19, 0x_9A,
		0x_2E, 0x_55, 0x_45, 0x_AE, 0x_37, 0x_C8, 0x_8E, 0x_6B, 0x_49, 0x_C9, 0x_EE, 0x_54, 0x_8F, 0x_A4, 0x_C0,
		0x_24, 0x_DC, 0x_C5, 0x_FF, 0x_27, 0x_65, 0x_A3, 0x_F9, 0x_BC, 0x_87, 0x_60, 0x_8A, 0x_3E, 0x_A7, 0x_1C,
		0x_18, 0x_28, 0x_97, 0x_93, 0x_13, 0x_43, 0x_B8, 0x_26, 0x_E1, 0x_9E, 0x_61, 0x_38, 0x_FC, 0x_D8, 0x_DB,
		0x_FD, 0x_52, 0x_5E, 0x_6C, 0x_C7, 0x_FE, 0x_FB, 0x_F4,
	];

	helper(S, BASE, 6_997);
}
// endregion
// region: s_has_whitespaces_and_47_060_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_47_060_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0A,
		0x_0C, 0x_2C, 0x_52, 0x_32, 0x_07, 0x_A1, 0x_B2, 0x_A6, 0x_C5, 0x_5E, 0x_49, 0x_52, 0x_CE, 0x_C2, 0x_C0,
		0x_7E, 0x_56, 0x_6E, 0x_E0, 0x_CE, 0x_A3, 0x_D3, 0x_A8, 0x_FD, 0x_54, 0x_44, 0x_BA, 0x_B2, 0x_44, 0x_54,
		0x_CD, 0x_29, 0x_45, 0x_6C, 0x_3B, 0x_EE, 0x_4D, 0x_A8, 0x_EB, 0x_A5, 0x_DA, 0x_1D, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_83, 0x_C9, 0x_2C, 0x_44, 0x_CB, 0x_F3, 0x_82, 0x_A1, 0x_A6, 0x_7E, 0x_C5, 0x_AE, 0x_68, 0x_B9,
		0x_18, 0x_87, 0x_C1, 0x_75, 0x_D1, 0x_6C, 0x_11, 0x_EE, 0x_B4, 0x_4D, 0x_54, 0x_E7, 0x_1E, 0x_ED, 0x_C7,
		0x_DA, 0x_2F, 0x_26, 0x_8C, 0x_EB, 0x_70, 0x_B7, 0x_66, 0x_95, 0x_4C, 0x_6D, 0x_76, 0x_E9, 0x_B1, 0x_7B,
		0x_79, 0x_61, 0x_78, 0x_CD, 0x_1B, 0x_C6, 0x_86, 0x_32, 0x_B2, 0x_45, 0x_AF, 0x_A3, 0x_49, 0x_89, 0x_1D,
		0x_DD, 0x_AB, 0x_E8, 0x_3A, 0x_5E, 0x_9F, 0x_21, 0x_D6, 0x_E0, 0x_C2, 0x_E6, 0x_FA, 0x_53, 0x_FD, 0x_36,
		0x_3B, 0x_BA, 0x_52, 0x_55, 0x_9A, 0x_60, 0x_D4, 0x_CE, 0x_F6, 0x_64, 0x_CF, 0x_43, 0x_24, 0x_29, 0x_38,
		0x_77, 0x_56, 0x_F7, 0x_6E, 0x_BC, 0x_D3, 0x_94, 0x_9E, 0x_74, 0x_8A, 0x_08, 0x_A8, 0x_05, 0x_D7, 0x_A5,
		0x_50, 0x_8D, 0x_3E, 0x_E4, 0x_67, 0x_10, 0x_EC, 0x_C0,
	];

	helper(S, BASE, 47_060);
}
// endregion
// region: s_has_whitespaces_and_632_972_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_632_972_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0D,
		0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0D,
		0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_3B, 0x_6C, 0x_43, 0x_BF, 0x_81, 0x_B3, 0x_0E,
		0x_F2, 0x_02, 0x_C3, 0x_E5, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_CA, 0x_C7, 0x_A5, 0x_D4, 0x_67, 0x_CF, 0x_E5, 0x_4F, 0x_08, 0x_C3, 0x_D0, 0x_5F, 0x_9D, 0x_78,
		0x_FC, 0x_A7, 0x_F4, 0x_63, 0x_A0, 0x_30, 0x_32, 0x_B9, 0x_15, 0x_73, 0x_F1, 0x_A9, 0x_B3, 0x_38, 0x_27,
		0x_34, 0x_21, 0x_BA, 0x_B5, 0x_A1, 0x_B4, 0x_3A, 0x_54, 0x_5C, 0x_25, 0x_D8, 0x_EC, 0x_76, 0x_C9, 0x_AA,
		0x_48, 0x_03, 0x_CE, 0x_89, 0x_3B, 0x_77, 0x_02, 0x_82, 0x_1B, 0x_64, 0x_AF, 0x_04, 0x_D7, 0x_CD, 0x_43,
		0x_52, 0x_DD, 0x_AE, 0x_87, 0x_6C, 0x_5A, 0x_4D, 0x_AB, 0x_3D, 0x_F5, 0x_2C, 0x_6E, 0x_4C, 0x_7C, 0x_C4,
		0x_DE, 0x_D3, 0x_C0, 0x_71, 0x_7F, 0x_C5, 0x_FF, 0x_7A, 0x_9F, 0x_EE, 0x_E1, 0x_F2, 0x_DF, 0x_07, 0x_83,
		0x_39, 0x_E6, 0x_0E, 0x_81, 0x_3F, 0x_E9, 0x_8B, 0x_D1, 0x_EA, 0x_58, 0x_17, 0x_B7, 0x_95, 0x_85, 0x_A2,
		0x_1F, 0x_D2, 0x_96, 0x_72, 0x_14, 0x_28, 0x_66, 0x_3E,
	];

	helper(S, BASE, 632_972);
}
// endregion
// region: s_has_whitespaces_and_6_089_803_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_6_089_803_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_E7, 0x_F5,
		0x_E3, 0x_CE, 0x_8E, 0x_1F, 0x_C1, 0x_A9, 0x_66, 0x_7A, 0x_C5, 0x_1D, 0x_3E, 0x_F9, 0x_AD, 0x_81, 0x_AC,
		0x_73, 0x_A3, 0x_02, 0x_4B, 0x_80, 0x_C3, 0x_BB, 0x_02, 0x_64, 0x_10, 0x_C1, 0x_A9, 0x_1B, 0x_31, 0x_EC,
		0x_D2, 0x_C2, 0x_C7,
	];
	const BASE: &[u8] = &[
		0x_A1, 0x_AB, 0x_C8, 0x_9B, 0x_E7, 0x_10, 0x_B0, 0x_CE, 0x_89, 0x_6E, 0x_C1, 0x_22, 0x_42, 0x_61, 0x_59,
		0x_F8, 0x_01, 0x_4B, 0x_97, 0x_32, 0x_C5, 0x_17, 0x_81, 0x_AD, 0x_F5, 0x_99, 0x_73, 0x_50, 0x_FC, 0x_DD,
		0x_D9, 0x_F0, 0x_49, 0x_CD, 0x_02, 0x_68, 0x_29, 0x_C3, 0x_3D, 0x_7A, 0x_54, 0x_1D, 0x_2F, 0x_08, 0x_9D,
		0x_8C, 0x_5B, 0x_DE, 0x_5F, 0x_E9, 0x_ED, 0x_FD, 0x_BF, 0x_C2, 0x_EC, 0x_1B, 0x_CC, 0x_70, 0x_85, 0x_E0,
		0x_F1, 0x_A4, 0x_84, 0x_1F, 0x_64, 0x_3F, 0x_4E, 0x_C7, 0x_9E, 0x_5C, 0x_A0, 0x_56, 0x_C9, 0x_3E, 0x_F9,
		0x_23, 0x_55, 0x_7D, 0x_DB, 0x_94, 0x_4F, 0x_E5, 0x_79, 0x_A3, 0x_78, 0x_31, 0x_75, 0x_AC, 0x_66, 0x_A5,
		0x_D2, 0x_83, 0x_2A, 0x_74, 0x_BB, 0x_AF, 0x_12, 0x_14, 0x_3B, 0x_8D, 0x_35, 0x_71, 0x_93, 0x_80, 0x_E3,
		0x_A9, 0x_EF, 0x_BC, 0x_AA, 0x_B1, 0x_27, 0x_52, 0x_57,
	];

	helper(S, BASE, 6_089_803);
}
// endregion
// region: s_has_whitespaces_and_25_914_049_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_25_914_049_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_20,
		0x_09, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_55, 0x_15, 0x_65, 0x_EC,
		0x_62, 0x_5B, 0x_E7, 0x_AA, 0x_65, 0x_84, 0x_E4, 0x_E7, 0x_DD, 0x_CF, 0x_EB, 0x_C8, 0x_A6, 0x_9F, 0x_57,
		0x_33, 0x_C8, 0x_1A, 0x_18, 0x_BA, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_8C, 0x_57, 0x_9D, 0x_56, 0x_D1, 0x_CC, 0x_4C, 0x_A9, 0x_59, 0x_24, 0x_B3, 0x_C8, 0x_B0, 0x_81,
		0x_51, 0x_CE, 0x_55, 0x_BA, 0x_64, 0x_3B, 0x_B4, 0x_50, 0x_D0, 0x_BB, 0x_61, 0x_D2, 0x_43, 0x_A8, 0x_5A,
		0x_DC, 0x_5D, 0x_3D, 0x_38, 0x_16, 0x_8F, 0x_EB, 0x_6E, 0x_F1, 0x_60, 0x_D7, 0x_25, 0x_68, 0x_21, 0x_75,
		0x_54, 0x_F0, 0x_ED, 0x_5C, 0x_33, 0x_65, 0x_DD, 0x_C1, 0x_1A, 0x_CF, 0x_84, 0x_44, 0x_53, 0x_1E, 0x_E5,
		0x_29, 0x_E7, 0x_9C, 0x_39, 0x_AF, 0x_EA, 0x_18, 0x_91, 0x_13, 0x_3C, 0x_2A, 0x_F5, 0x_47, 0x_F8, 0x_AA,
		0x_9A, 0x_78, 0x_3E, 0x_A2, 0x_CA, 0x_93, 0x_52, 0x_82, 0x_C7, 0x_76, 0x_34, 0x_4D, 0x_D4, 0x_9F, 0x_90,
		0x_D8, 0x_32, 0x_4F, 0x_EF, 0x_70, 0x_B6, 0x_7B, 0x_E0, 0x_EC, 0x_A3, 0x_49, 0x_A6, 0x_5E, 0x_95, 0x_D3,
		0x_5B, 0x_DA, 0x_45, 0x_15, 0x_8A, 0x_98, 0x_E4, 0x_A7,
	];

	helper(S, BASE, 25_914_049);
}
// endregion
// region: s_has_whitespaces_and_577_248_044_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_577_248_044_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_0C, 0x_0D,
		0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0A,
		0x_0C, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_57, 0x_74, 0x_EA, 0x_8D, 0x_91, 0x_0B, 0x_A1,
		0x_30, 0x_A7, 0x_C9, 0x_9B, 0x_39, 0x_B6, 0x_65, 0x_69, 0x_04, 0x_9B, 0x_37, 0x_45, 0x_F2, 0x_3A, 0x_A1,
		0x_25, 0x_70, 0x_8D, 0x_D6, 0x_79, 0x_B7, 0x_2F, 0x_E2, 0x_51, 0x_23, 0x_B5, 0x_40, 0x_B0, 0x_03, 0x_2F,
		0x_54, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_D8, 0x_65, 0x_57, 0x_EB, 0x_1E, 0x_EA, 0x_92, 0x_2F, 0x_25, 0x_DC, 0x_B9, 0x_33, 0x_03, 0x_39,
		0x_C3, 0x_53, 0x_D9, 0x_B6, 0x_A8, 0x_CE, 0x_E3, 0x_DD, 0x_6B, 0x_75, 0x_E2, 0x_10, 0x_45, 0x_90, 0x_3A,
		0x_E6, 0x_1A, 0x_70, 0x_D2, 0x_38, 0x_79, 0x_E8, 0x_82, 0x_99, 0x_BE, 0x_81, 0x_55, 0x_16, 0x_4D, 0x_78,
		0x_CD, 0x_A1, 0x_4A, 0x_BA, 0x_DE, 0x_35, 0x_D6, 0x_B3, 0x_41, 0x_A0, 0x_AC, 0x_F4, 0x_69, 0x_6F, 0x_14,
		0x_7A, 0x_74, 0x_B7, 0x_FC, 0x_54, 0x_59, 0x_AB, 0x_FE, 0x_5C, 0x_C9, 0x_C4, 0x_51, 0x_B8, 0x_30, 0x_B4,
		0x_05, 0x_B1, 0x_9C, 0x_F6, 0x_B0, 0x_2E, 0x_04, 0x_13, 0x_12, 0x_1C, 0x_47, 0x_F2, 0x_91, 0x_80, 0x_23,
		0x_9F, 0x_6A, 0x_1F, 0x_C6, 0x_02, 0x_98, 0x_A2, 0x_6C, 0x_37, 0x_4F, 0x_34, 0x_40, 0x_A7, 0x_A3, 0x_AE,
		0x_07, 0x_7C, 0x_01, 0x_5A, 0x_60, 0x_EC, 0x_8D, 0x_B5,
	];

	helper(S, BASE, 577_248_044);
}
// endregion
// region: s_has_whitespaces_and_2_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_2_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_09,
		0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0A,
		0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_5B, 0x_2B, 0x_E6,
		0x_65, 0x_F1, 0x_83, 0x_79, 0x_E6, 0x_C1, 0x_DE, 0x_12, 0x_78, 0x_D9, 0x_1C, 0x_17, 0x_7D, 0x_1F, 0x_B5,
		0x_07, 0x_D3, 0x_3E, 0x_4D, 0x_FA, 0x_C2, 0x_E9, 0x_92, 0x_06, 0x_FB, 0x_6D, 0x_AD, 0x_AF, 0x_C5, 0x_E1,
		0x_AF, 0x_ED, 0x_44, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_26, 0x_5B, 0x_58, 0x_60, 0x_8B, 0x_BA, 0x_C1, 0x_A0, 0x_BC, 0x_8D, 0x_6C, 0x_CE, 0x_13, 0x_C6,
		0x_92, 0x_35, 0x_D7, 0x_C8, 0x_A2, 0x_B2, 0x_6A, 0x_55, 0x_27, 0x_E7, 0x_A1, 0x_97, 0x_98, 0x_88, 0x_B7,
		0x_15, 0x_2E, 0x_D9, 0x_FE, 0x_F5, 0x_B0, 0x_F2, 0x_C3, 0x_82, 0x_33, 0x_FB, 0x_4F, 0x_A6, 0x_96, 0x_7B,
		0x_90, 0x_31, 0x_9F, 0x_7F, 0x_9A, 0x_4C, 0x_25, 0x_D2, 0x_5C, 0x_56, 0x_85, 0x_08, 0x_F4, 0x_03, 0x_99,
		0x_76, 0x_37, 0x_66, 0x_34, 0x_E6, 0x_91, 0x_CF, 0x_14, 0x_4E, 0x_AA, 0x_61, 0x_E3, 0x_52, 0x_AB, 0x_D5,
		0x_C9, 0x_32, 0x_17, 0x_DC, 0x_94, 0x_C4, 0x_7A, 0x_1D, 0x_B6, 0x_E1, 0x_E9, 0x_63, 0x_73, 0x_51, 0x_E4,
		0x_F8, 0x_B5, 0x_DE, 0x_75, 0x_01, 0x_A3, 0x_A9, 0x_B8, 0x_4D, 0x_E2, 0x_5A, 0x_1E, 0x_BE, 0x_3C, 0x_86,
		0x_83, 0x_DF, 0x_CC, 0x_67, 0x_59, 0x_3F, 0x_BD, 0x_02, 0x_65, 0x_E8, 0x_FC, 0x_C2, 0x_11, 0x_19, 0x_9E,
		0x_40, 0x_3E, 0x_05, 0x_F1, 0x_D1, 0x_69, 0x_47, 0x_29, 0x_95, 0x_D0, 0x_D6, 0x_54, 0x_8C, 0x_68, 0x_62,
		0x_80, 0x_2A, 0x_50, 0x_22, 0x_B4, 0x_ED, 0x_6B, 0x_38, 0x_6E, 0x_28, 0x_BF, 0x_3B, 0x_9C, 0x_3A, 0x_48,
		0x_C5, 0x_1F, 0x_12, 0x_53, 0x_06, 0x_4A, 0x_D4, 0x_21, 0x_A7, 0x_D8, 0x_AD, 0x_AF, 0x_44, 0x_5E, 0x_A8,
		0x_1C, 0x_18, 0x_84, 0x_FA, 0x_7D, 0x_F7, 0x_B3, 0x_AE, 0x_1B, 0x_F0, 0x_1A, 0x_2C, 0x_42, 0x_FF, 0x_64,
		0x_9D, 0x_93, 0x_D3, 0x_FD, 0x_07, 0x_78, 0x_04, 0x_79, 0x_E5, 0x_E0, 0x_9B, 0x_EF, 0x_6D,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_whitespaces_and_94_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_94_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_A4, 0x_2F, 0x_99, 0x_02, 0x_A4, 0x_C1, 0x_62, 0x_74, 0x_29, 0x_8E, 0x_BC, 0x_6B, 0x_04, 0x_AB,
		0x_ED, 0x_CA, 0x_61, 0x_CA, 0x_11, 0x_04, 0x_44, 0x_89, 0x_BA, 0x_BA, 0x_A3, 0x_39, 0x_F4, 0x_43, 0x_EC,
		0x_21, 0x_5E, 0x_EA, 0x_12, 0x_50, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_71, 0x_B5, 0x_2A, 0x_51, 0x_4C, 0x_0F, 0x_98, 0x_4E, 0x_CE, 0x_03, 0x_C2, 0x_F7, 0x_73, 0x_3B,
		0x_9E, 0x_84, 0x_E7, 0x_EA, 0x_ED, 0x_21, 0x_C8, 0x_EC, 0x_64, 0x_A0, 0x_35, 0x_1C, 0x_5D, 0x_24, 0x_A2,
		0x_DC, 0x_79, 0x_F0, 0x_C1, 0x_4A, 0x_13, 0x_B0, 0x_E6, 0x_48, 0x_BE, 0x_7B, 0x_5C, 0x_8E, 0x_7F, 0x_9F,
		0x_50, 0x_52, 0x_D8, 0x_7C, 0x_45, 0x_40, 0x_AE, 0x_DE, 0x_C7, 0x_D5, 0x_DB, 0x_2C, 0x_D2, 0x_F8, 0x_94,
		0x_4B, 0x_89, 0x_41, 0x_8A, 0x_46, 0x_30, 0x_54, 0x_11, 0x_47, 0x_E5, 0x_42, 0x_1B, 0x_6F, 0x_69, 0x_F3,
		0x_8C, 0x_1D, 0x_85, 0x_07, 0x_31, 0x_BA, 0x_E4, 0x_61, 0x_72, 0x_3D, 0x_DA, 0x_92, 0x_37, 0x_26, 0x_59,
		0x_5F, 0x_12, 0x_F6, 0x_8B, 0x_A4, 0x_B3, 0x_AB, 0x_B4, 0x_99, 0x_D6, 0x_56, 0x_7D, 0x_D3, 0x_A5, 0x_65,
		0x_83, 0x_74, 0x_95, 0x_66, 0x_E8, 0x_1F, 0x_3F, 0x_1E, 0x_75, 0x_6E, 0x_19, 0x_34, 0x_A9, 0x_9C, 0x_E1,
		0x_FA, 0x_3A, 0x_E9, 0x_78, 0x_B9, 0x_16, 0x_DD, 0x_33, 0x_F4, 0x_6B, 0x_AA, 0x_1A, 0x_10, 0x_2E, 0x_B8,
		0x_6C, 0x_9B, 0x_70, 0x_EE, 0x_F1, 0x_80, 0x_3E, 0x_C9, 0x_62, 0x_E3, 0x_A3, 0x_04, 0x_BD, 0x_FC, 0x_86,
		0x_77, 0x_5E, 0x_AC, 0x_CD, 0x_22, 0x_0E, 0x_39, 0x_43, 0x_A8, 0x_A1, 0x_01, 0x_29, 0x_FF, 0x_BB, 0x_BF,
		0x_14, 0x_53, 0x_55, 0x_7E, 0x_EF, 0x_B2, 0x_44, 0x_B1, 0x_7A, 0x_FE, 0x_CB, 0x_CA, 0x_02, 0x_A6, 0x_88,
		0x_97, 0x_93, 0x_F9, 0x_C3, 0x_BC, 0x_4F, 0x_63, 0x_FB, 0x_60, 0x_AF, 0x_49, 0x_8D, 0x_57,
	];

	helper(S, BASE, 94);
}
// endregion
// region: s_has_whitespaces_and_582_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_582_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_0A,
		0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_98, 0x_98, 0x_6F, 0x_10, 0x_AD, 0x_BB, 0x_CE, 0x_17, 0x_32, 0x_5B, 0x_8F,
		0x_7A, 0x_40, 0x_35, 0x_B7, 0x_52, 0x_D3, 0x_24, 0x_97, 0x_39, 0x_CB, 0x_74, 0x_FF, 0x_56, 0x_DD, 0x_FF,
		0x_F5, 0x_E7, 0x_52, 0x_11, 0x_4A, 0x_06, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_F1, 0x_5C, 0x_98, 0x_F5, 0x_4A, 0x_AF, 0x_A6, 0x_D0, 0x_C7, 0x_D4, 0x_61, 0x_AA, 0x_69, 0x_03,
		0x_FE, 0x_4C, 0x_0E, 0x_8B, 0x_43, 0x_EE, 0x_FF, 0x_19, 0x_8C, 0x_D6, 0x_5B, 0x_B4, 0x_01, 0x_B7, 0x_5F,
		0x_E4, 0x_CB, 0x_66, 0x_3E, 0x_51, 0x_97, 0x_A0, 0x_B6, 0x_C4, 0x_C9, 0x_DD, 0x_2F, 0x_B1, 0x_37, 0x_57,
		0x_7A, 0x_E8, 0x_23, 0x_3F, 0x_1B, 0x_04, 0x_60, 0x_82, 0x_3A, 0x_6D, 0x_AD, 0x_05, 0x_65, 0x_E0, 0x_EB,
		0x_27, 0x_83, 0x_9A, 0x_D3, 0x_52, 0x_70, 0x_16, 0x_2C, 0x_1E, 0x_E5, 0x_41, 0x_8F, 0x_9F, 0x_9C, 0x_3D,
		0x_14, 0x_29, 0x_4F, 0x_C8, 0x_84, 0x_72, 0x_54, 0x_07, 0x_53, 0x_EC, 0x_D9, 0x_74, 0x_48, 0x_EF, 0x_ED,
		0x_24, 0x_44, 0x_CF, 0x_3B, 0x_7E, 0x_18, 0x_DE, 0x_FD, 0x_B2, 0x_59, 0x_E2, 0x_77, 0x_02, 0x_55, 0x_AC,
		0x_BB, 0x_79, 0x_6B, 0x_62, 0x_DF, 0x_10, 0x_FB, 0x_91, 0x_D2, 0x_DC, 0x_28, 0x_22, 0x_32, 0x_46, 0x_1A,
		0x_87, 0x_30, 0x_36, 0x_92, 0x_13, 0x_D1, 0x_F9, 0x_CA, 0x_45, 0x_76, 0x_9B, 0x_89, 0x_1D, 0x_5E, 0x_12,
		0x_BD, 0x_4E, 0x_8E, 0x_71, 0x_17, 0x_49, 0x_BC, 0x_08, 0x_F8, 0x_7F, 0x_E9, 0x_D8, 0x_EA, 0x_39, 0x_DB,
		0x_9E, 0x_B8, 0x_B3, 0x_C6, 0x_F4, 0x_A3, 0x_94, 0x_F3, 0x_0F, 0x_40, 0x_E1, 0x_FC, 0x_06, 0x_38, 0x_7C,
		0x_6E, 0x_31, 0x_5A, 0x_E7, 0x_80, 0x_11, 0x_C5, 0x_26, 0x_F6, 0x_88, 0x_A7, 0x_CE, 0x_93, 0x_47, 0x_F0,
		0x_1F, 0x_C0, 0x_9D, 0x_D7, 0x_C3, 0x_5D, 0x_A1, 0x_73, 0x_C2, 0x_B5, 0x_50, 0x_68, 0x_56,
	];

	helper(S, BASE, 582);
}
// endregion
// region: s_has_whitespaces_and_1_585_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_1_585_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_20,
		0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_09,
		0x_0A, 0x_0B, 0x_0A, 0x_78, 0x_73, 0x_4D, 0x_9D, 0x_7C, 0x_C0, 0x_44, 0x_FD, 0x_54, 0x_FE, 0x_43, 0x_EC,
		0x_CE, 0x_E9, 0x_17, 0x_83, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_DF, 0x_97, 0x_F1, 0x_E9, 0x_1D, 0x_15, 0x_B0, 0x_78, 0x_30, 0x_81, 0x_BF, 0x_8B, 0x_39, 0x_3F,
		0x_04, 0x_CE, 0x_6A, 0x_D2, 0x_DB, 0x_5C, 0x_90, 0x_F7, 0x_DD, 0x_A0, 0x_C8, 0x_49, 0x_40, 0x_27, 0x_D8,
		0x_6F, 0x_88, 0x_7F, 0x_7D, 0x_98, 0x_A9, 0x_5F, 0x_35, 0x_3C, 0x_AB, 0x_1A, 0x_73, 0x_76, 0x_28, 0x_2E,
		0x_3B, 0x_5D, 0x_18, 0x_05, 0x_54, 0x_9E, 0x_B8, 0x_86, 0x_70, 0x_B2, 0x_CD, 0x_C6, 0x_60, 0x_CB, 0x_B3,
		0x_47, 0x_E0, 0x_A1, 0x_63, 0x_EA, 0x_1B, 0x_D1, 0x_A4, 0x_D3, 0x_4F, 0x_82, 0x_F2, 0x_94, 0x_E8, 0x_10,
		0x_B5, 0x_FE, 0x_C3, 0x_37, 0x_D7, 0x_38, 0x_69, 0x_B7, 0x_25, 0x_01, 0x_87, 0x_6B, 0x_1C, 0x_14, 0x_2A,
		0x_EB, 0x_16, 0x_83, 0x_AE, 0x_BD, 0x_3A, 0x_02, 0x_F3, 0x_84, 0x_A7, 0x_2C, 0x_93, 0x_31, 0x_13, 0x_8C,
		0x_CC, 0x_B4, 0x_24, 0x_AA, 0x_55, 0x_7C, 0x_68, 0x_E5, 0x_E2, 0x_6D, 0x_08, 0x_71, 0x_3D, 0x_1F, 0x_17,
		0x_FD, 0x_AC, 0x_0F, 0x_65, 0x_B9, 0x_2F, 0x_80, 0x_7E, 0x_64, 0x_06, 0x_46, 0x_43, 0x_96, 0x_F5, 0x_EC,
		0x_BA, 0x_F0, 0x_5B, 0x_9C, 0x_DA, 0x_75, 0x_FA, 0x_8D, 0x_CF, 0x_1E, 0x_48, 0x_A5, 0x_62, 0x_56, 0x_57,
		0x_BC, 0x_11, 0x_9D, 0x_C2, 0x_23, 0x_C5, 0x_B1, 0x_22, 0x_0E, 0x_B6, 0x_26, 0x_29, 0x_4A, 0x_DC, 0x_A6,
		0x_67, 0x_C0, 0x_FC, 0x_C9, 0x_D5, 0x_99, 0x_D4, 0x_9B, 0x_9A, 0x_3E, 0x_79, 0x_72, 0x_52, 0x_DE, 0x_59,
		0x_D6, 0x_C4, 0x_7B, 0x_F6, 0x_21, 0x_7A, 0x_4B, 0x_4E, 0x_ED, 0x_34, 0x_53, 0x_44, 0x_8A,
	];

	helper(S, BASE, 1_585);
}
// endregion
// region: s_has_whitespaces_and_52_614_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_52_614_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_FC, 0x_39, 0x_57,
		0x_17, 0x_BD, 0x_48, 0x_C4, 0x_5F, 0x_AB, 0x_64, 0x_C4, 0x_13, 0x_59, 0x_FC, 0x_30, 0x_26, 0x_8A, 0x_BC,
		0x_C3, 0x_58, 0x_FC, 0x_B3, 0x_25, 0x_B3, 0x_88, 0x_62, 0x_95, 0x_07, 0x_24, 0x_FA, 0x_69, 0x_30, 0x_D5,
		0x_B6, 0x_0F, 0x_3C, 0x_36, 0x_B1, 0x_7F, 0x_2C, 0x_40, 0x_4E, 0x_77, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_FC, 0x_73, 0x_89, 0x_1F, 0x_C2, 0x_EB, 0x_E2, 0x_3F, 0x_BB, 0x_0F, 0x_AC, 0x_12, 0x_23, 0x_A9,
		0x_07, 0x_DD, 0x_43, 0x_DE, 0x_5A, 0x_28, 0x_C8, 0x_7F, 0x_4F, 0x_D6, 0x_74, 0x_7E, 0x_27, 0x_29, 0x_2C,
		0x_A1, 0x_25, 0x_76, 0x_8B, 0x_D4, 0x_92, 0x_A7, 0x_21, 0x_1A, 0x_BD, 0x_DC, 0x_69, 0x_77, 0x_8A, 0x_1B,
		0x_90, 0x_7C, 0x_EC, 0x_B4, 0x_40, 0x_56, 0x_AB, 0x_9F, 0x_24, 0x_4D, 0x_16, 0x_A3, 0x_CD, 0x_45, 0x_9C,
		0x_A4, 0x_BA, 0x_13, 0x_60, 0x_37, 0x_19, 0x_49, 0x_36, 0x_7D, 0x_CA, 0x_C7, 0x_EA, 0x_70, 0x_B1, 0x_35,
		0x_33, 0x_86, 0x_81, 0x_FF, 0x_39, 0x_BC, 0x_51, 0x_30, 0x_DB, 0x_53, 0x_BE, 0x_C3, 0x_3E, 0x_DA, 0x_CF,
		0x_3C, 0x_8F, 0x_5F, 0x_72, 0x_18, 0x_1D, 0x_8D, 0x_E7, 0x_11, 0x_B5, 0x_AF, 0x_48, 0x_80, 0x_88, 0x_E0,
		0x_4E, 0x_0E, 0x_32, 0x_D5, 0x_44, 0x_46, 0x_FD, 0x_AE, 0x_F5, 0x_54, 0x_82, 0x_94, 0x_50, 0x_57, 0x_75,
		0x_98, 0x_4B, 0x_01, 0x_C1, 0x_B3, 0x_9B, 0x_D2, 0x_D8, 0x_C9, 0x_3B, 0x_87, 0x_B8, 0x_CE, 0x_A0, 0x_59,
		0x_9E, 0x_EE, 0x_06, 0x_D7, 0x_65, 0x_9D, 0x_2A, 0x_05, 0x_7B, 0x_04, 0x_EF, 0x_5B, 0x_D1, 0x_F7, 0x_68,
		0x_7A, 0x_C4, 0x_BF, 0x_22, 0x_62, 0x_FB, 0x_D9, 0x_55, 0x_1C, 0x_34, 0x_61, 0x_E1, 0x_E3, 0x_26, 0x_47,
		0x_D0, 0x_83, 0x_95, 0x_A8, 0x_A6, 0x_FA, 0x_C6, 0x_03, 0x_31, 0x_B7, 0x_99, 0x_15, 0x_ED, 0x_41, 0x_6F,
		0x_9A, 0x_2F, 0x_84, 0x_85, 0x_67, 0x_64, 0x_3A, 0x_6A, 0x_97, 0x_58, 0x_B6, 0x_AA, 0x_10,
	];

	helper(S, BASE, 52_614);
}
// endregion
// region: s_has_whitespaces_and_941_904_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_941_904_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_0C,
		0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_70, 0x_04, 0x_84, 0x_A6, 0x_21, 0x_0E, 0x_8C,
		0x_62, 0x_87, 0x_62, 0x_F0, 0x_B9, 0x_7F, 0x_5B, 0x_A5, 0x_24, 0x_EE, 0x_A0, 0x_58, 0x_13, 0x_37, 0x_B8,
		0x_C4, 0x_82, 0x_DB, 0x_67, 0x_18, 0x_5E, 0x_18, 0x_17, 0x_7B, 0x_B1, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_8F, 0x_C4, 0x_1F, 0x_21, 0x_11, 0x_36, 0x_FF, 0x_AE, 0x_B9, 0x_DE, 0x_BA, 0x_F8, 0x_82, 0x_44,
		0x_E7, 0x_47, 0x_5E, 0x_6B, 0x_E5, 0x_76, 0x_B3, 0x_6A, 0x_DD, 0x_25, 0x_70, 0x_93, 0x_24, 0x_87, 0x_8C,
		0x_CC, 0x_2A, 0x_FB, 0x_12, 0x_02, 0x_46, 0x_67, 0x_E0, 0x_27, 0x_91, 0x_73, 0x_5F, 0x_65, 0x_28, 0x_62,
		0x_1E, 0x_C9, 0x_FE, 0x_51, 0x_A0, 0x_37, 0x_85, 0x_75, 0x_A5, 0x_58, 0x_04, 0x_5C, 0x_C6, 0x_9A, 0x_F4,
		0x_10, 0x_A8, 0x_41, 0x_03, 0x_84, 0x_CB, 0x_3F, 0x_42, 0x_18, 0x_C7, 0x_0E, 0x_E4, 0x_CE, 0x_15, 0x_69,
		0x_4A, 0x_4F, 0x_55, 0x_CD, 0x_B5, 0x_99, 0x_7D, 0x_6C, 0x_98, 0x_7B, 0x_66, 0x_33, 0x_B4, 0x_63, 0x_79,
		0x_D6, 0x_8E, 0x_6F, 0x_A3, 0x_BB, 0x_F6, 0x_4D, 0x_BD, 0x_88, 0x_81, 0x_9C, 0x_1D, 0x_C5, 0x_3A, 0x_FC,
		0x_30, 0x_C0, 0x_B7, 0x_CF, 0x_F1, 0x_64, 0x_39, 0x_3C, 0x_F5, 0x_EA, 0x_06, 0x_4C, 0x_35, 0x_AF, 0x_45,
		0x_29, 0x_60, 0x_7E, 0x_B1, 0x_57, 0x_68, 0x_53, 0x_8B, 0x_E8, 0x_FA, 0x_EE, 0x_3E, 0x_5B, 0x_14, 0x_17,
		0x_D0, 0x_9D, 0x_54, 0x_E9, 0x_22, 0x_D2, 0x_A4, 0x_2F, 0x_13, 0x_9E, 0x_C8, 0x_F2, 0x_92, 0x_49, 0x_BE,
		0x_52, 0x_6D, 0x_FD, 0x_0F, 0x_F3, 0x_F0, 0x_7F, 0x_DF, 0x_7C, 0x_80, 0x_C2, 0x_F7, 0x_DB, 0x_7A, 0x_6E,
		0x_72, 0x_96, 0x_07, 0x_9F, 0x_4E, 0x_DC, 0x_34, 0x_83, 0x_EF, 0x_74, 0x_89, 0x_3D, 0x_B8, 0x_78, 0x_C1,
		0x_AD, 0x_71, 0x_2E, 0x_D8, 0x_B6, 0x_32, 0x_BF, 0x_D1, 0x_08, 0x_31, 0x_90, 0x_9B, 0x_50,
	];

	helper(S, BASE, 941_904);
}
// endregion
// region: s_has_whitespaces_and_4_065_523_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_4_065_523_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_09,
		0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0C,
		0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_39, 0x_48, 0x_CA, 0x_0C, 0x_1A, 0x_5F, 0x_3B, 0x_BB,
		0x_CE,
	];
	const BASE: &[u8] = &[
		0x_BE, 0x_F4, 0x_19, 0x_6C, 0x_7A, 0x_63, 0x_F7, 0x_52, 0x_2F, 0x_4D, 0x_98, 0x_F5, 0x_47, 0x_B9, 0x_CF,
		0x_4B, 0x_9E, 0x_32, 0x_F0, 0x_F3, 0x_56, 0x_C2, 0x_85, 0x_1C, 0x_FF, 0x_79, 0x_12, 0x_48, 0x_44, 0x_EA,
		0x_68, 0x_13, 0x_CE, 0x_3C, 0x_15, 0x_E8, 0x_C4, 0x_95, 0x_EB, 0x_E6, 0x_78, 0x_1A, 0x_37, 0x_9C, 0x_D5,
		0x_5D, 0x_BB, 0x_86, 0x_B4, 0x_35, 0x_6E, 0x_F1, 0x_91, 0x_57, 0x_45, 0x_7E, 0x_34, 0x_E9, 0x_66, 0x_A5,
		0x_AF, 0x_08, 0x_64, 0x_C7, 0x_CB, 0x_BC, 0x_BD, 0x_11, 0x_8F, 0x_1B, 0x_90, 0x_55, 0x_04, 0x_AB, 0x_2A,
		0x_A4, 0x_D0, 0x_2C, 0x_8C, 0x_BF, 0x_31, 0x_AA, 0x_BA, 0x_83, 0x_25, 0x_F6, 0x_50, 0x_D9, 0x_4E, 0x_10,
		0x_E1, 0x_36, 0x_14, 0x_A1, 0x_D4, 0x_01, 0x_05, 0x_38, 0x_E5, 0x_61, 0x_96, 0x_18, 0x_30, 0x_5F, 0x_C1,
		0x_3B, 0x_D3, 0x_7B, 0x_42, 0x_39, 0x_59, 0x_3A, 0x_81, 0x_29, 0x_E7, 0x_ED, 0x_C0, 0x_58, 0x_72, 0x_87,
		0x_DF, 0x_B7, 0x_03, 0x_23, 0x_AE, 0x_8E, 0x_2E, 0x_B2, 0x_26, 0x_F9, 0x_73, 0x_EF, 0x_D8, 0x_70, 0x_17,
		0x_F2, 0x_C5, 0x_53, 0x_0F, 0x_7C, 0x_FE, 0x_B8, 0x_A9, 0x_67, 0x_62, 0x_FC, 0x_80, 0x_24, 0x_0E, 0x_99,
		0x_D2, 0x_3F, 0x_43, 0x_89, 0x_D1, 0x_AD, 0x_82, 0x_B0, 0x_F8, 0x_97, 0x_77, 0x_6D, 0x_EC, 0x_88, 0x_4F,
		0x_5C, 0x_6B, 0x_33, 0x_5E, 0x_E2, 0x_C9, 0x_CA, 0x_CC, 0x_9A, 0x_92, 0x_DC, 0x_75, 0x_1F, 0x_8A, 0x_A6,
		0x_5B, 0x_40, 0x_DB, 0x_DA, 0x_28, 0x_FA, 0x_3E, 0x_60, 0x_DD, 0x_3D, 0x_A0, 0x_27, 0x_93,
	];

	helper(S, BASE, 4_065_523);
}
// endregion
// region: s_has_whitespaces_and_82_952_728_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_82_952_728_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_20,
		0x_3F, 0x_6B, 0x_6E, 0x_49, 0x_FD, 0x_C7, 0x_DE, 0x_70, 0x_9E, 0x_01, 0x_D6, 0x_B3, 0x_1B, 0x_B9, 0x_D4,
		0x_56, 0x_17, 0x_A4, 0x_03, 0x_CB, 0x_58, 0x_C8, 0x_AD, 0x_12, 0x_B0, 0x_16, 0x_47, 0x_95, 0x_A8, 0x_48,
		0x_73, 0x_6A, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_23, 0x_65, 0x_3E, 0x_A1, 0x_B8, 0x_12, 0x_19, 0x_98, 0x_94, 0x_88, 0x_3F, 0x_61, 0x_04, 0x_AF,
		0x_2E, 0x_66, 0x_44, 0x_EE, 0x_DE, 0x_1B, 0x_8A, 0x_F2, 0x_90, 0x_89, 0x_BF, 0x_7E, 0x_E8, 0x_CF, 0x_73,
		0x_F1, 0x_75, 0x_4E, 0x_95, 0x_97, 0x_33, 0x_B0, 0x_D5, 0x_FF, 0x_C0, 0x_CB, 0x_8E, 0x_07, 0x_D4, 0x_B2,
		0x_7F, 0x_32, 0x_D1, 0x_46, 0x_DF, 0x_A3, 0x_0F, 0x_B6, 0x_EB, 0x_9D, 0x_1C, 0x_A7, 0x_5A, 0x_9B, 0x_69,
		0x_BC, 0x_56, 0x_72, 0x_DD, 0x_FC, 0x_67, 0x_C4, 0x_76, 0x_E1, 0x_AD, 0x_D7, 0x_02, 0x_BD, 0x_16, 0x_E7,
		0x_A2, 0x_AE, 0x_F4, 0x_9F, 0x_83, 0x_A9, 0x_84, 0x_FE, 0x_80, 0x_2C, 0x_27, 0x_EA, 0x_78, 0x_7D, 0x_9E,
		0x_C6, 0x_53, 0x_B7, 0x_3D, 0x_5C, 0x_59, 0x_C3, 0x_D8, 0x_29, 0x_6A, 0x_F9, 0x_81, 0x_3A, 0x_6B, 0x_ED,
		0x_51, 0x_B4, 0x_5B, 0x_03, 0x_3C, 0x_38, 0x_79, 0x_74, 0x_21, 0x_17, 0x_45, 0x_5F, 0x_13, 0x_DC, 0x_4D,
		0x_E2, 0x_3B, 0x_C1, 0x_1E, 0x_2F, 0x_E6, 0x_BE, 0x_C9, 0x_E9, 0x_E0, 0x_58, 0x_DA, 0x_D6, 0x_CA, 0x_AC,
		0x_E3, 0x_14, 0x_7B, 0x_B9, 0x_C2, 0x_36, 0x_39, 0x_F6, 0x_EC, 0x_4B, 0x_93, 0x_B5, 0x_87, 0x_99, 0x_A4,
		0x_01, 0x_E4, 0x_47, 0x_AB, 0x_C5, 0x_A5, 0x_10, 0x_24, 0x_31, 0x_A0, 0x_1F, 0x_A8, 0x_BA, 0x_F7, 0x_26,
		0x_C7, 0x_06, 0x_11, 0x_A6, 0x_22, 0x_49, 0x_DB, 0x_AA, 0x_F3, 0x_8B, 0x_40, 0x_62, 0x_77, 0x_48, 0x_82,
		0x_1A, 0x_B3, 0x_15, 0x_70, 0x_CE, 0x_C8, 0x_30, 0x_7C, 0x_6E, 0x_9C, 0x_9A, 0x_CC, 0x_5D,
	];

	helper(S, BASE, 82_952_728);
}
// endregion
// region: s_has_whitespaces_and_116_900_395_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_116_900_395_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_0B,
		0x_09, 0x_20, 0x_09, 0x_0D, 0x_61, 0x_4D, 0x_FE, 0x_4B, 0x_0A, 0x_94, 0x_6E, 0x_91, 0x_82, 0x_4F, 0x_A2,
		0x_9E, 0x_71, 0x_A5, 0x_AB, 0x_62, 0x_C2, 0x_11, 0x_19, 0x_F7, 0x_23, 0x_1B, 0x_F1, 0x_82, 0x_1E, 0x_32,
		0x_BB, 0x_2C, 0x_5B, 0x_7E, 0x_C3, 0x_44, 0x_A5, 0x_50, 0x_5B, 0x_35, 0x_97, 0x_E3, 0x_13, 0x_71, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_9A, 0x_80, 0x_71, 0x_82, 0x_BE, 0x_79, 0x_BC, 0x_05, 0x_8D, 0x_21, 0x_48, 0x_13, 0x_D3, 0x_17,
		0x_D0, 0x_61, 0x_CF, 0x_07, 0x_6E, 0x_3B, 0x_9C, 0x_C2, 0x_06, 0x_3A, 0x_E8, 0x_AE, 0x_BA, 0x_39, 0x_A5,
		0x_4A, 0x_56, 0x_B2, 0x_89, 0x_91, 0x_B7, 0x_DB, 0x_31, 0x_34, 0x_94, 0x_59, 0x_F2, 0x_93, 0x_62, 0x_EF,
		0x_04, 0x_7A, 0x_DF, 0x_47, 0x_A2, 0x_4D, 0x_70, 0x_6A, 0x_B4, 0x_11, 0x_78, 0x_7B, 0x_4C, 0x_25, 0x_77,
		0x_57, 0x_1F, 0x_12, 0x_C5, 0x_CD, 0x_F9, 0x_F4, 0x_FE, 0x_42, 0x_67, 0x_7D, 0x_F8, 0x_76, 0x_44, 0x_32,
		0x_D4, 0x_CC, 0x_F0, 0x_27, 0x_40, 0x_A7, 0x_A9, 0x_A0, 0x_D6, 0x_C7, 0x_2A, 0x_F3, 0x_B5, 0x_23, 0x_DE,
		0x_5B, 0x_73, 0x_F7, 0x_43, 0x_1B, 0x_10, 0x_B0, 0x_E2, 0x_14, 0x_85, 0x_54, 0x_A8, 0x_4B, 0x_88, 0x_28,
		0x_BD, 0x_C3, 0x_38, 0x_6C, 0x_81, 0x_DD, 0x_7E, 0x_E5, 0x_53, 0x_98, 0x_BF, 0x_99, 0x_8B, 0x_41, 0x_19,
		0x_5E, 0x_FA, 0x_64, 0x_EC, 0x_A1, 0x_E1, 0x_B9, 0x_49, 0x_86, 0x_EA, 0x_26, 0x_E3, 0x_3C, 0x_68, 0x_B1,
		0x_35, 0x_8C, 0x_2C, 0x_BB, 0x_D1, 0x_AC, 0x_0F, 0x_8E, 0x_F6, 0x_4F, 0x_2F, 0x_51, 0x_E0, 0x_96, 0x_3E,
		0x_37, 0x_C9, 0x_5A, 0x_65, 0x_FF, 0x_CB, 0x_75, 0x_B8, 0x_46, 0x_30, 0x_AA, 0x_C8, 0x_9E, 0x_55, 0x_90,
		0x_6B, 0x_7F, 0x_50, 0x_52, 0x_AD, 0x_63, 0x_AB, 0x_DC, 0x_16, 0x_C1, 0x_FB, 0x_97, 0x_0E, 0x_F1, 0x_5D,
		0x_72, 0x_33, 0x_1E, 0x_74, 0x_B6, 0x_7C, 0x_9F, 0x_E4, 0x_C4, 0x_95, 0x_A4, 0x_87, 0x_A6,
	];

	helper(S, BASE, 116_900_395);
}
// endregion
// region: s_has_whitespaces_and_9_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_9_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_20,
		0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_0B,
		0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_01, 0x_0D, 0x_30, 0x_86, 0x_FF, 0x_32,
		0x_8F, 0x_57, 0x_A5, 0x_94, 0x_8B, 0x_97, 0x_51, 0x_D9, 0x_FE, 0x_47, 0x_4D, 0x_8E, 0x_BA, 0x_AF, 0x_89,
		0x_CC, 0x_5E, 0x_8D, 0x_D1, 0x_86, 0x_9C, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_3D, 0x_EF, 0x_29, 0x_30, 0x_9A, 0x_67, 0x_C8, 0x_E3, 0x_01, 0x_EB, 0x_33, 0x_71, 0x_7F, 0x_70,
		0x_3C, 0x_5D, 0x_C4, 0x_87, 0x_D0, 0x_62, 0x_15, 0x_5A, 0x_DF, 0x_69, 0x_64, 0x_D9, 0x_57, 0x_2A, 0x_7C,
		0x_34, 0x_65, 0x_85, 0x_A1, 0x_32, 0x_E4, 0x_92, 0x_C7, 0x_FF, 0x_DD, 0x_BC, 0x_91, 0x_D7, 0x_D8, 0x_9B,
		0x_56, 0x_02, 0x_1A, 0x_0F, 0x_CB, 0x_F2, 0x_88, 0x_B6, 0x_14, 0x_A7, 0x_2F, 0x_73, 0x_11, 0x_6B, 0x_59,
		0x_75, 0x_28, 0x_86, 0x_9F, 0x_60, 0x_B8, 0x_C0, 0x_E5, 0x_1B, 0x_FA, 0x_D3, 0x_A2, 0x_36, 0x_B0, 0x_4B,
		0x_38, 0x_7B, 0x_19, 0x_C1, 0x_C9, 0x_2E, 0x_F1, 0x_3E, 0x_0E, 0x_1C, 0x_4C, 0x_5C, 0x_80, 0x_DE, 0x_9D,
		0x_76, 0x_78, 0x_79, 0x_82, 0x_F0, 0x_08, 0x_23, 0x_BD, 0x_66, 0x_A8, 0x_A6, 0x_39, 0x_03, 0x_AE, 0x_B9,
		0x_A5, 0x_4E, 0x_C5, 0x_B4, 0x_50, 0x_89, 0x_99, 0x_DB, 0x_16, 0x_48, 0x_7A, 0x_F3, 0x_E2, 0x_37, 0x_ED,
		0x_8E, 0x_5F, 0x_18, 0x_E8, 0x_04, 0x_22, 0x_F4, 0x_D5, 0x_3F, 0x_AC, 0x_E7, 0x_45, 0x_2C, 0x_6C, 0x_90,
		0x_B3, 0x_AF, 0x_AB, 0x_98, 0x_A4, 0x_72, 0x_B1, 0x_6A, 0x_F8, 0x_E0, 0x_44, 0x_52, 0x_FB, 0x_1E, 0x_A0,
		0x_DA, 0x_CA, 0x_24, 0x_84, 0x_8F, 0x_C3, 0x_CD, 0x_CF, 0x_3A, 0x_1F, 0x_49, 0x_D4, 0x_5B, 0x_97, 0x_E1,
		0x_74, 0x_40, 0x_06, 0x_1D, 0x_B2, 0x_7D, 0x_83, 0x_12, 0x_FE, 0x_BF, 0x_07, 0x_DC, 0x_21, 0x_E9, 0x_35,
		0x_8A, 0x_AD, 0x_EA, 0x_B7, 0x_7E, 0x_D1, 0x_FC, 0x_B5, 0x_9E, 0x_26, 0x_6D, 0x_BB, 0x_46, 0x_8C, 0x_8B,
		0x_42, 0x_6E, 0x_F6, 0x_5E, 0x_77, 0x_54, 0x_EC, 0x_61, 0x_93, 0x_C6, 0x_6F, 0x_25, 0x_E6, 0x_4F, 0x_43,
		0x_10, 0x_17, 0x_BA, 0x_41, 0x_FD, 0x_96, 0x_51, 0x_81, 0x_9C, 0x_05, 0x_F5, 0x_D6, 0x_31, 0x_D2, 0x_47,
		0x_EE, 0x_95, 0x_CC, 0x_F7, 0x_58, 0x_CE, 0x_27, 0x_94, 0x_68, 0x_13, 0x_53, 0x_4D, 0x_8D, 0x_63, 0x_3B,
		0x_55, 0x_4A, 0x_A3, 0x_A9, 0x_F9, 0x_C2, 0x_BE,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_whitespaces_and_95_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_95_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_09,
		0x_0B, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_3E, 0x_09, 0x_F5, 0x_03, 0x_88, 0x_50,
		0x_8A, 0x_EA, 0x_67, 0x_F4, 0x_58, 0x_47, 0x_06, 0x_F0, 0x_3A, 0x_4F, 0x_DE, 0x_F6, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_58, 0x_65, 0x_4D, 0x_BA, 0x_A8, 0x_73, 0x_40, 0x_D1, 0x_5A, 0x_DB, 0x_7B, 0x_7F, 0x_FB, 0x_DA,
		0x_02, 0x_27, 0x_A3, 0x_05, 0x_1F, 0x_62, 0x_F2, 0x_13, 0x_B3, 0x_4E, 0x_11, 0x_85, 0x_55, 0x_5B, 0x_FF,
		0x_71, 0x_72, 0x_83, 0x_90, 0x_D6, 0x_EA, 0x_8A, 0x_AD, 0x_E6, 0x_2A, 0x_5C, 0x_12, 0x_C4, 0x_F3, 0x_66,
		0x_47, 0x_E9, 0x_46, 0x_A1, 0x_51, 0x_61, 0x_E7, 0x_97, 0x_B1, 0x_A0, 0x_30, 0x_26, 0x_16, 0x_04, 0x_75,
		0x_57, 0x_7C, 0x_5E, 0x_17, 0x_56, 0x_9E, 0x_41, 0x_36, 0x_15, 0x_9A, 0x_D9, 0x_AB, 0x_79, 0x_33, 0x_C3,
		0x_4A, 0x_1D, 0x_D5, 0x_52, 0x_6C, 0x_42, 0x_76, 0x_86, 0x_6A, 0x_9D, 0x_AA, 0x_CC, 0x_2F, 0x_D3, 0x_A7,
		0x_C8, 0x_70, 0x_50, 0x_44, 0x_1E, 0x_3E, 0x_78, 0x_E1, 0x_8B, 0x_C7, 0x_6B, 0x_81, 0x_EF, 0x_18, 0x_3A,
		0x_59, 0x_67, 0x_FA, 0x_CD, 0x_A2, 0x_F5, 0x_24, 0x_03, 0x_F1, 0x_48, 0x_4F, 0x_68, 0x_C6, 0x_5F, 0x_06,
		0x_B5, 0x_9B, 0x_C0, 0x_B2, 0x_F6, 0x_BB, 0x_39, 0x_60, 0x_96, 0x_35, 0x_F9, 0x_91, 0x_92, 0x_DD, 0x_6E,
		0x_AC, 0x_88, 0x_EE, 0x_D2, 0x_DF, 0x_8D, 0x_43, 0x_1B, 0x_8C, 0x_7D, 0x_22, 0x_A4, 0x_6D, 0x_EB, 0x_FD,
		0x_BD, 0x_4C, 0x_F8, 0x_0F, 0x_45, 0x_BE, 0x_E0, 0x_E3, 0x_DC, 0x_84, 0x_C1, 0x_99, 0x_3D, 0x_10, 0x_3C,
		0x_93, 0x_D7, 0x_07, 0x_89, 0x_B8, 0x_2C, 0x_D0, 0x_3B, 0x_C5, 0x_ED, 0x_B6, 0x_23, 0x_1C, 0x_E2, 0x_87,
		0x_C2, 0x_A5, 0x_4B, 0x_98, 0x_5D, 0x_54, 0x_EC, 0x_77, 0x_A6, 0x_95, 0x_DE, 0x_B4, 0x_08, 0x_19, 0x_38,
		0x_F7, 0x_CE, 0x_E5, 0x_FE, 0x_6F, 0x_3F, 0x_CB, 0x_AE, 0x_9F, 0x_CA, 0x_FC, 0x_28, 0x_C9, 0x_7E, 0x_69,
		0x_E8, 0x_82, 0x_14, 0x_63, 0x_37, 0x_80, 0x_25, 0x_34, 0x_64, 0x_D8, 0x_7A, 0x_53, 0x_21, 0x_01, 0x_31,
		0x_8E, 0x_B9, 0x_AF, 0x_B0, 0x_74, 0x_8F, 0x_49, 0x_F4, 0x_32, 0x_94, 0x_9C, 0x_D4, 0x_BF, 0x_F0, 0x_1A,
		0x_A9, 0x_29, 0x_CF, 0x_BC, 0x_E4, 0x_2E, 0x_0E,
	];

	helper(S, BASE, 95);
}
// endregion
// region: s_has_whitespaces_and_424_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_424_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_0D,
		0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_EF, 0x_B0, 0x_0D,
		0x_4D, 0x_FA, 0x_AF, 0x_DC, 0x_5E, 0x_14, 0x_F0, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_EF, 0x_BE, 0x_90, 0x_D5, 0x_D6, 0x_99, 0x_6D, 0x_AD, 0x_D0, 0x_C9, 0x_6B, 0x_B5, 0x_DA, 0x_4F,
		0x_51, 0x_CC, 0x_8B, 0x_83, 0x_32, 0x_16, 0x_FC, 0x_35, 0x_60, 0x_F8, 0x_C0, 0x_37, 0x_B8, 0x_6E, 0x_9F,
		0x_EC, 0x_94, 0x_1E, 0x_68, 0x_DE, 0x_A9, 0x_AF, 0x_04, 0x_7A, 0x_3C, 0x_38, 0x_4B, 0x_BF, 0x_65, 0x_27,
		0x_08, 0x_D7, 0x_C4, 0x_11, 0x_A8, 0x_88, 0x_F5, 0x_D1, 0x_7E, 0x_45, 0x_79, 0x_97, 0x_B1, 0x_2A, 0x_3A,
		0x_2C, 0x_E7, 0x_62, 0x_DB, 0x_82, 0x_8D, 0x_6A, 0x_BC, 0x_D4, 0x_13, 0x_78, 0x_A1, 0x_75, 0x_BA, 0x_2F,
		0x_F3, 0x_CA, 0x_93, 0x_47, 0x_5D, 0x_77, 0x_28, 0x_15, 0x_E2, 0x_B9, 0x_9B, 0x_EB, 0x_39, 0x_31, 0x_42,
		0x_22, 0x_1B, 0x_36, 0x_FA, 0x_2E, 0x_B2, 0x_21, 0x_E4, 0x_B7, 0x_06, 0x_DC, 0x_CD, 0x_8C, 0x_0E, 0x_34,
		0x_4C, 0x_61, 0x_64, 0x_07, 0x_9D, 0x_CE, 0x_24, 0x_9E, 0x_8E, 0x_AE, 0x_33, 0x_AC, 0x_C3, 0x_81, 0x_5B,
		0x_85, 0x_55, 0x_9C, 0x_29, 0x_4D, 0x_FF, 0x_98, 0x_7F, 0x_E6, 0x_DD, 0x_1F, 0x_3F, 0x_80, 0x_5A, 0x_70,
		0x_FE, 0x_86, 0x_8F, 0x_C1, 0x_54, 0x_3B, 0x_C8, 0x_84, 0x_43, 0x_44, 0x_52, 0x_C5, 0x_49, 0x_30, 0x_40,
		0x_EA, 0x_71, 0x_CF, 0x_66, 0x_BD, 0x_A6, 0x_C7, 0x_DF, 0x_17, 0x_7C, 0x_3E, 0x_89, 0x_B4, 0x_5E, 0x_D9,
		0x_95, 0x_F0, 0x_19, 0x_E0, 0x_25, 0x_A7, 0x_53, 0x_FD, 0x_BB, 0x_1D, 0x_4E, 0x_57, 0x_B0, 0x_4A, 0x_41,
		0x_F2, 0x_A5, 0x_3D, 0x_E5, 0x_6F, 0x_A2, 0x_56, 0x_F7, 0x_50, 0x_14, 0x_AA, 0x_F1, 0x_F9, 0x_59, 0x_1A,
		0x_A4, 0x_26, 0x_AB, 0x_FB, 0x_D3, 0x_05, 0x_67, 0x_CB, 0x_92, 0x_63, 0x_01, 0x_1C, 0x_23, 0x_E1, 0x_5C,
		0x_7D, 0x_A0, 0x_73, 0x_48, 0x_76, 0x_D2, 0x_EE, 0x_F4, 0x_7B, 0x_E8, 0x_03, 0x_5F, 0x_18, 0x_12, 0x_ED,
		0x_46, 0x_02, 0x_6C, 0x_C2, 0x_D8, 0x_B6, 0x_E9, 0x_B3, 0x_10, 0x_58, 0x_E3, 0x_72, 0x_9A, 0x_74, 0x_69,
		0x_91, 0x_F6, 0x_0F, 0x_96, 0x_C6, 0x_87, 0x_8A,
	];

	helper(S, BASE, 424);
}
// endregion
// region: s_has_whitespaces_and_7_918_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_7_918_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_20,
		0x_20, 0x_0C, 0x_7C, 0x_7B, 0x_0A, 0x_1E, 0x_21, 0x_F9, 0x_24, 0x_4D, 0x_FD, 0x_43, 0x_C0, 0x_75, 0x_A2,
		0x_0F, 0x_11, 0x_50, 0x_16, 0x_EB, 0x_49, 0x_69, 0x_86, 0x_50, 0x_D1, 0x_2A, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_1D, 0x_94, 0x_C5, 0x_25, 0x_C1, 0x_90, 0x_F6, 0x_A6, 0x_E0, 0x_FF, 0x_0F, 0x_B1, 0x_F2, 0x_7B,
		0x_C2, 0x_E1, 0x_A8, 0x_7E, 0x_6E, 0x_39, 0x_61, 0x_D0, 0x_6B, 0x_AE, 0x_D8, 0x_7D, 0x_9F, 0x_17, 0x_A7,
		0x_31, 0x_49, 0x_7C, 0x_4C, 0x_E3, 0x_CD, 0x_9C, 0x_D7, 0x_B5, 0x_4D, 0x_E2, 0x_B8, 0x_EF, 0x_68, 0x_92,
		0x_81, 0x_B0, 0x_71, 0x_D9, 0x_74, 0x_52, 0x_B4, 0x_03, 0x_9D, 0x_89, 0x_EE, 0x_5A, 0x_57, 0x_80, 0x_CA,
		0x_54, 0x_91, 0x_F7, 0x_C6, 0x_AB, 0x_59, 0x_4A, 0x_F0, 0x_7A, 0x_8F, 0x_CB, 0x_55, 0x_8E, 0x_04, 0x_24,
		0x_32, 0x_99, 0x_DA, 0x_44, 0x_BF, 0x_5B, 0x_3D, 0x_66, 0x_C8, 0x_21, 0x_53, 0x_9A, 0x_82, 0x_08, 0x_CF,
		0x_B9, 0x_6D, 0x_DE, 0x_12, 0x_98, 0x_60, 0x_78, 0x_46, 0x_E8, 0x_45, 0x_1A, 0x_75, 0x_EA, 0x_DD, 0x_48,
		0x_F1, 0x_AF, 0x_DC, 0x_26, 0x_BC, 0x_C9, 0x_1B, 0x_01, 0x_18, 0x_E5, 0x_8C, 0x_83, 0x_E4, 0x_23, 0x_07,
		0x_4E, 0x_4F, 0x_79, 0x_3E, 0x_FA, 0x_A3, 0x_40, 0x_E6, 0x_19, 0x_51, 0x_88, 0x_47, 0x_29, 0x_3B, 0x_D4,
		0x_FE, 0x_F4, 0x_1C, 0x_06, 0x_9E, 0x_27, 0x_E9, 0x_1F, 0x_2C, 0x_84, 0x_C7, 0x_5D, 0x_A2, 0x_34, 0x_30,
		0x_F3, 0x_F9, 0x_62, 0x_6A, 0x_C0, 0x_6F, 0x_50, 0x_A0, 0x_BD, 0x_95, 0x_A4, 0x_A9, 0x_EC, 0x_B2, 0x_69,
		0x_BA, 0x_85, 0x_05, 0x_15, 0x_43, 0x_FD, 0x_2E, 0x_67, 0x_96, 0x_3C, 0x_2A, 0x_33, 0x_42, 0x_10, 0x_1E,
		0x_9B, 0x_58, 0x_41, 0x_EB, 0x_AC, 0x_5C, 0x_A1, 0x_B6, 0x_72, 0x_CC, 0x_3A, 0x_35, 0x_76, 0x_D2, 0x_8D,
		0x_CE, 0x_BB, 0x_A5, 0x_F8, 0x_C4, 0x_87, 0x_37, 0x_73, 0x_BE, 0x_5F, 0x_D5, 0x_DB, 0x_86, 0x_7F, 0x_AD,
		0x_65, 0x_56, 0x_0E, 0x_D6, 0x_FB, 0x_22, 0x_8B, 0x_C3, 0x_AA, 0x_B3, 0x_13, 0x_2F, 0x_DF, 0x_38, 0x_5E,
		0x_64, 0x_4B, 0x_63, 0x_11, 0x_ED, 0x_97, 0x_B7, 0x_D3, 0x_70, 0x_28, 0x_6C, 0x_14, 0x_D1, 0x_36, 0x_8A,
		0x_F5, 0x_77, 0x_E7, 0x_93, 0x_FC, 0x_16, 0x_02,
	];

	helper(S, BASE, 7_918);
}
// endregion
// region: s_has_whitespaces_and_24_945_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_24_945_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_50, 0x_67, 0x_2D, 0x_38,
		0x_5D, 0x_B5, 0x_70, 0x_C4, 0x_3D, 0x_B0, 0x_99, 0x_06, 0x_80, 0x_C8, 0x_4E, 0x_96, 0x_8D, 0x_27, 0x_AD,
		0x_18, 0x_F5, 0x_58, 0x_EF, 0x_98, 0x_A9, 0x_B6, 0x_B9, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_F0, 0x_32, 0x_91, 0x_72, 0x_8A, 0x_1C, 0x_BD, 0x_E2, 0x_AD, 0x_EC, 0x_E5, 0x_CA, 0x_7C, 0x_C2,
		0x_4C, 0x_8D, 0x_DA, 0x_F4, 0x_53, 0x_B8, 0x_12, 0x_C5, 0x_F3, 0x_76, 0x_AF, 0x_39, 0x_63, 0x_96, 0x_6B,
		0x_9B, 0x_C4, 0x_C8, 0x_3D, 0x_B7, 0x_2E, 0x_79, 0x_FF, 0x_0E, 0x_43, 0x_10, 0x_6C, 0x_FD, 0x_71, 0x_15,
		0x_D5, 0x_1A, 0x_97, 0x_7F, 0x_E9, 0x_AE, 0x_84, 0x_1E, 0x_5C, 0x_4B, 0x_82, 0x_8B, 0x_46, 0x_56, 0x_E3,
		0x_40, 0x_B0, 0x_D9, 0x_49, 0x_FA, 0x_61, 0x_38, 0x_DE, 0x_C0, 0x_85, 0x_31, 0x_37, 0x_7D, 0x_2C, 0x_9C,
		0x_93, 0x_66, 0x_98, 0x_5B, 0x_B2, 0x_3C, 0x_06, 0x_47, 0x_02, 0x_57, 0x_23, 0x_77, 0x_48, 0x_5D, 0x_13,
		0x_B5, 0x_36, 0x_16, 0x_41, 0x_BF, 0x_62, 0x_CF, 0x_8C, 0x_01, 0x_64, 0x_50, 0x_FB, 0x_B4, 0x_A2, 0x_B1,
		0x_D7, 0x_17, 0x_69, 0x_24, 0x_E0, 0x_8E, 0x_59, 0x_4D, 0x_9E, 0x_E1, 0x_55, 0x_A1, 0x_FC, 0x_A6, 0x_DF,
		0x_52, 0x_68, 0x_F6, 0x_99, 0x_FE, 0x_B3, 0x_35, 0x_EF, 0x_6E, 0x_A4, 0x_8F, 0x_33, 0x_A3, 0x_4E, 0x_F1,
		0x_22, 0x_11, 0x_C1, 0x_0F, 0x_AA, 0x_AC, 0x_BE, 0x_78, 0x_25, 0x_34, 0x_C6, 0x_2A, 0x_74, 0x_D8, 0x_87,
		0x_3F, 0x_60, 0x_4A, 0x_9A, 0x_75, 0x_DD, 0x_70, 0x_EB, 0x_03, 0x_1F, 0x_CC, 0x_6D, 0x_D1, 0x_D6, 0x_D3,
		0x_6F, 0x_DB, 0x_C3, 0x_C9, 0x_73, 0x_18, 0x_6A, 0x_AB, 0x_EE, 0x_BB, 0x_A9, 0x_1B, 0x_4F, 0x_89, 0x_95,
		0x_F7, 0x_EA, 0x_CD, 0x_F9, 0x_BC, 0x_CE, 0x_21, 0x_A5, 0x_E7, 0x_3E, 0x_90, 0x_BA, 0x_19, 0x_3B, 0x_88,
		0x_7A, 0x_86, 0x_D0, 0x_29, 0x_65, 0x_CB, 0x_92, 0x_1D, 0x_28, 0x_45, 0x_83, 0x_B9, 0x_54, 0x_F8, 0x_C7,
		0x_5A, 0x_04, 0x_F2, 0x_27, 0x_42, 0x_51, 0x_2F, 0x_3A, 0x_E4, 0x_A8, 0x_26, 0x_E6, 0x_ED, 0x_A0, 0x_D2,
		0x_D4, 0x_A7, 0x_7B, 0x_07, 0x_58, 0x_80, 0x_9F, 0x_5F, 0x_B6, 0x_9D, 0x_08, 0x_E8, 0x_14, 0x_44, 0x_5E,
		0x_05, 0x_DC, 0x_94, 0x_30, 0x_81, 0x_67, 0x_F5,
	];

	helper(S, BASE, 24_945);
}
// endregion
// region: s_has_whitespaces_and_468_620_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_468_620_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_20,
		0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0C,
		0x_A6, 0x_F7, 0x_4A, 0x_0A, 0x_44, 0x_67, 0x_37, 0x_9A, 0x_93, 0x_5A, 0x_FF, 0x_2F, 0x_26, 0x_4C, 0x_ED,
		0x_6A, 0x_7A, 0x_A5, 0x_5E, 0x_74, 0x_2F, 0x_8E, 0x_C2, 0x_A1, 0x_D8, 0x_5A, 0x_70, 0x_A2,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_44, 0x_49, 0x_C4, 0x_01, 0x_28, 0x_B3, 0x_A6, 0x_9E, 0x_F1, 0x_BD, 0x_A2, 0x_82, 0x_E0, 0x_98,
		0x_13, 0x_D8, 0x_04, 0x_81, 0x_F0, 0x_B4, 0x_6A, 0x_8D, 0x_71, 0x_96, 0x_48, 0x_DA, 0x_C6, 0x_EF, 0x_7A,
		0x_C5, 0x_42, 0x_0E, 0x_63, 0x_56, 0x_F2, 0x_CF, 0x_35, 0x_8A, 0x_3E, 0x_BA, 0x_A4, 0x_62, 0x_AF, 0x_24,
		0x_A7, 0x_6C, 0x_AE, 0x_D0, 0x_34, 0x_58, 0x_B5, 0x_5D, 0x_B8, 0x_AA, 0x_C1, 0x_93, 0x_36, 0x_69, 0x_59,
		0x_26, 0x_4A, 0x_AC, 0x_2F, 0x_BF, 0x_FB, 0x_D5, 0x_D4, 0x_22, 0x_B7, 0x_91, 0x_A0, 0x_1D, 0x_30, 0x_1E,
		0x_8F, 0x_BC, 0x_A5, 0x_ED, 0x_02, 0x_21, 0x_5F, 0x_53, 0x_55, 0x_8C, 0x_C7, 0x_14, 0x_47, 0x_B6, 0x_C9,
		0x_76, 0x_23, 0x_7F, 0x_5E, 0x_BB, 0x_A8, 0x_F9, 0x_06, 0x_07, 0x_A3, 0x_45, 0x_37, 0x_1B, 0x_FF, 0x_52,
		0x_85, 0x_94, 0x_97, 0x_05, 0x_40, 0x_18, 0x_EA, 0x_54, 0x_CA, 0x_57, 0x_A9, 0x_25, 0x_8B, 0x_5A, 0x_4D,
		0x_79, 0x_C8, 0x_38, 0x_10, 0x_A1, 0x_4E, 0x_E8, 0x_FD, 0x_6B, 0x_B2, 0x_CD, 0x_5C, 0x_15, 0x_84, 0x_27,
		0x_75, 0x_3B, 0x_7B, 0x_9F, 0x_32, 0x_D3, 0x_1F, 0x_73, 0x_FE, 0x_C3, 0x_9B, 0x_4B, 0x_67, 0x_FC, 0x_B9,
		0x_AD, 0x_9C, 0x_87, 0x_1C, 0x_86, 0x_D2, 0x_DB, 0x_16, 0x_4F, 0x_50, 0x_6E, 0x_08, 0x_29, 0x_FA, 0x_E4,
		0x_D6, 0x_74, 0x_F6, 0x_F7, 0x_C0, 0x_E7, 0x_CB, 0x_78, 0x_0F, 0x_7C, 0x_B0, 0x_DD, 0x_E5, 0x_31, 0x_2C,
		0x_60, 0x_43, 0x_7E, 0x_41, 0x_3D, 0x_83, 0x_03, 0x_2A, 0x_19, 0x_8E, 0x_9D, 0x_11, 0x_3F, 0x_F4, 0x_95,
		0x_DC, 0x_E3, 0x_89, 0x_DE, 0x_70, 0x_5B, 0x_B1, 0x_AB, 0x_CE, 0x_65, 0x_EE, 0x_90, 0x_46, 0x_51, 0x_3C,
		0x_F3, 0x_EC, 0x_6D, 0x_D7, 0x_80, 0x_7D, 0x_1A, 0x_DF, 0x_BE, 0x_39, 0x_6F, 0x_2E, 0x_E6, 0x_72, 0x_17,
		0x_92, 0x_D9, 0x_F5, 0x_CC, 0x_66, 0x_E1, 0x_4C, 0x_12, 0x_88, 0x_D1, 0x_C2, 0x_E9, 0x_77, 0x_E2, 0x_68,
		0x_9A, 0x_61, 0x_3A, 0x_33, 0x_EB, 0x_F8, 0x_99,
	];

	helper(S, BASE, 468_620);
}
// endregion
// region: s_has_whitespaces_and_9_738_666_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_9_738_666_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_C6, 0x_42, 0x_7B, 0x_20, 0x_8B,
		0x_EB, 0x_B8, 0x_47, 0x_2F, 0x_01, 0x_02, 0x_33, 0x_1D, 0x_F1, 0x_6A, 0x_EE, 0x_7A, 0x_BB, 0x_B9, 0x_CD,
		0x_D7, 0x_77, 0x_EB, 0x_38, 0x_45, 0x_88, 0x_92, 0x_92, 0x_50, 0x_10, 0x_DE, 0x_A2, 0x_56, 0x_CD, 0x_EE,
		0x_1F, 0x_F3, 0x_C7, 0x_2E, 0x_98, 0x_F3, 0x_87, 0x_D9, 0x_8A, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_40, 0x_79, 0x_4E, 0x_88, 0x_93, 0x_82, 0x_D4, 0x_32, 0x_C2, 0x_C7, 0x_98, 0x_1F, 0x_80, 0x_8F,
		0x_56, 0x_47, 0x_18, 0x_49, 0x_14, 0x_60, 0x_08, 0x_BC, 0x_D1, 0x_55, 0x_35, 0x_2A, 0x_5E, 0x_6A, 0x_21,
		0x_8D, 0x_D6, 0x_BF, 0x_5D, 0x_26, 0x_30, 0x_3B, 0x_89, 0x_70, 0x_DC, 0x_41, 0x_94, 0x_D8, 0x_FE, 0x_34,
		0x_9A, 0x_51, 0x_83, 0x_9E, 0x_E3, 0x_5F, 0x_B7, 0x_6C, 0x_B1, 0x_38, 0x_D3, 0x_31, 0x_33, 0x_5B, 0x_B8,
		0x_A7, 0x_CD, 0x_CA, 0x_54, 0x_D2, 0x_68, 0x_F2, 0x_FD, 0x_AC, 0x_CC, 0x_D0, 0x_9B, 0x_90, 0x_9F, 0x_A9,
		0x_3E, 0x_1A, 0x_06, 0x_CE, 0x_6D, 0x_A2, 0x_87, 0x_DE, 0x_7A, 0x_7D, 0x_27, 0x_0E, 0x_58, 0x_4C, 0x_24,
		0x_50, 0x_3C, 0x_C4, 0x_B3, 0x_69, 0x_5A, 0x_E5, 0x_9C, 0x_12, 0x_6B, 0x_CB, 0x_99, 0x_7C, 0x_D9, 0x_F7,
		0x_C5, 0x_77, 0x_43, 0x_F0, 0x_A6, 0x_C0, 0x_29, 0x_03, 0x_4F, 0x_B2, 0x_01, 0x_65, 0x_96, 0x_CF, 0x_F5,
		0x_4B, 0x_E0, 0x_45, 0x_4D, 0x_AD, 0x_EE, 0x_17, 0x_F6, 0x_15, 0x_F9, 0x_48, 0x_3D, 0x_E7, 0x_64, 0x_A0,
		0x_53, 0x_91, 0x_62, 0x_6F, 0x_37, 0x_A3, 0x_9D, 0x_EC, 0x_02, 0x_D5, 0x_81, 0x_75, 0x_FF, 0x_A4, 0x_1C,
		0x_3A, 0x_67, 0x_E1, 0x_A1, 0x_42, 0x_2F, 0x_B4, 0x_76, 0x_1B, 0x_C6, 0x_B9, 0x_DA, 0x_ED, 0x_BE, 0x_6E,
		0x_8A, 0x_25, 0x_FB, 0x_04, 0x_E4, 0x_84, 0x_D7, 0x_E6, 0x_C9, 0x_1D, 0x_C8, 0x_36, 0x_5C, 0x_97, 0x_78,
		0x_92, 0x_F4, 0x_23, 0x_C3, 0x_52, 0x_B6, 0x_2E, 0x_8B, 0x_11, 0x_AB, 0x_FA, 0x_AA, 0x_73, 0x_E9, 0x_72,
		0x_BB, 0x_BA, 0x_7B, 0x_39, 0x_BD, 0x_44, 0x_A8, 0x_59, 0x_07, 0x_AE, 0x_1E, 0x_DF, 0x_A5, 0x_DB, 0x_EB,
		0x_13, 0x_E8, 0x_71, 0x_8E, 0x_22, 0x_B5, 0x_0F, 0x_74, 0x_2C, 0x_95, 0x_3F, 0x_57, 0x_DD, 0x_E2, 0x_28,
		0x_FC, 0x_AF, 0x_EA, 0x_7F, 0x_85, 0x_63, 0x_7E, 0x_B0, 0x_86, 0x_F1, 0x_10, 0x_F3, 0x_46, 0x_66, 0x_19,
		0x_F8, 0x_4A, 0x_16, 0x_05, 0x_EF, 0x_8C, 0x_61,
	];

	helper(S, BASE, 9_738_666);
}
// endregion
// region: s_has_whitespaces_and_72_758_956_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_72_758_956_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_20,
		0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_6C,
		0x_03, 0x_B1, 0x_13, 0x_2B, 0x_C8, 0x_73, 0x_E6, 0x_88, 0x_E9, 0x_E8, 0x_33, 0x_98, 0x_97, 0x_E1, 0x_B7,
		0x_59, 0x_C1, 0x_69, 0x_59, 0x_32, 0x_15, 0x_94, 0x_F9, 0x_10, 0x_9E, 0x_4C, 0x_95, 0x_AF, 0x_F7, 0x_38,
		0x_5B, 0x_5B, 0x_A6, 0x_14, 0x_68, 0x_39, 0x_39, 0x_70, 0x_16, 0x_BE, 0x_B9, 0x_67, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_10, 0x_3E, 0x_D8, 0x_6C, 0x_EF, 0x_9B, 0x_9F, 0x_18, 0x_AE, 0x_E3, 0x_63, 0x_AD, 0x_81, 0x_12,
		0x_26, 0x_CF, 0x_A9, 0x_31, 0x_85, 0x_7B, 0x_75, 0x_90, 0x_C2, 0x_FE, 0x_29, 0x_6D, 0x_66, 0x_16, 0x_95,
		0x_B4, 0x_DE, 0x_17, 0x_8E, 0x_5C, 0x_AF, 0x_D4, 0x_D5, 0x_82, 0x_CA, 0x_4F, 0x_91, 0x_B0, 0x_56, 0x_8C,
		0x_08, 0x_B8, 0x_7A, 0x_11, 0x_86, 0x_DA, 0x_AA, 0x_48, 0x_88, 0x_1E, 0x_71, 0x_54, 0x_68, 0x_9D, 0x_70,
		0x_6B, 0x_45, 0x_8A, 0x_41, 0x_51, 0x_F8, 0x_4D, 0x_E7, 0x_6E, 0x_37, 0x_34, 0x_9A, 0x_76, 0x_60, 0x_49,
		0x_25, 0x_E2, 0x_DC, 0x_A7, 0x_E4, 0x_D6, 0x_C4, 0x_BF, 0x_A8, 0x_96, 0x_A4, 0x_C3, 0x_8D, 0x_DF, 0x_43,
		0x_4B, 0x_30, 0x_3C, 0x_2A, 0x_89, 0x_DB, 0x_52, 0x_E9, 0x_28, 0x_61, 0x_F4, 0x_99, 0x_F2, 0x_98, 0x_5B,
		0x_01, 0x_FA, 0x_BC, 0x_78, 0x_BD, 0x_5E, 0x_50, 0x_5F, 0x_3F, 0x_B5, 0x_36, 0x_55, 0x_C5, 0x_A1, 0x_53,
		0x_07, 0x_33, 0x_E6, 0x_6F, 0x_E0, 0x_ED, 0x_D0, 0x_D1, 0x_97, 0x_46, 0x_73, 0x_C6, 0x_E1, 0x_AB, 0x_3D,
		0x_CD, 0x_FD, 0x_39, 0x_5D, 0x_0F, 0x_7C, 0x_F7, 0x_1D, 0x_04, 0x_79, 0x_19, 0x_B1, 0x_F5, 0x_9E, 0x_C9,
		0x_C7, 0x_B6, 0x_05, 0x_24, 0x_B7, 0x_94, 0x_87, 0x_7D, 0x_06, 0x_F9, 0x_3B, 0x_67, 0x_35, 0x_77, 0x_4E,
		0x_EC, 0x_13, 0x_A2, 0x_23, 0x_65, 0x_A5, 0x_CB, 0x_3A, 0x_0E, 0x_2C, 0x_47, 0x_FB, 0x_14, 0x_D9, 0x_1C,
		0x_A0, 0x_42, 0x_2F, 0x_B9, 0x_D2, 0x_EB, 0x_D7, 0x_7E, 0x_EE, 0x_E8, 0x_B3, 0x_7F, 0x_93, 0x_1B, 0x_EA,
		0x_1F, 0x_22, 0x_D3, 0x_9C, 0x_8B, 0x_92, 0x_57, 0x_E5, 0x_44, 0x_03, 0x_AC, 0x_62, 0x_FC, 0x_2E, 0x_F3,
		0x_4A, 0x_C8, 0x_74, 0x_F6, 0x_FF, 0x_59, 0x_CE, 0x_58, 0x_64, 0x_BB, 0x_A6, 0x_4C, 0x_A3, 0x_02, 0x_72,
		0x_80, 0x_84, 0x_B2, 0x_6A, 0x_15, 0x_C1, 0x_69, 0x_8F, 0x_27, 0x_C0, 0x_5A, 0x_F0, 0x_38, 0x_CC, 0x_BA,
		0x_F1, 0x_DD, 0x_32, 0x_BE, 0x_40, 0x_21, 0x_1A,
	];

	helper(S, BASE, 72_758_956);
}
// endregion
// region: s_has_whitespaces_and_530_214_164_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_530_214_164_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_35, 0x_C0, 0x_3C,
		0x_AA, 0x_20, 0x_85, 0x_3D, 0x_04, 0x_6E, 0x_86, 0x_BE, 0x_D5, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_57, 0x_76, 0x_F6, 0x_7F, 0x_AF, 0x_DF, 0x_A4, 0x_D4, 0x_8B, 0x_19, 0x_81, 0x_AA, 0x_25, 0x_1A,
		0x_85, 0x_FC, 0x_42, 0x_39, 0x_03, 0x_6F, 0x_6D, 0x_54, 0x_4C, 0x_17, 0x_6C, 0x_E1, 0x_A9, 0x_DB, 0x_DE,
		0x_12, 0x_DA, 0x_FA, 0x_3F, 0x_E9, 0x_35, 0x_1F, 0x_6B, 0x_B4, 0x_D9, 0x_C1, 0x_BE, 0x_87, 0x_5C, 0x_DC,
		0x_C0, 0x_07, 0x_18, 0x_D6, 0x_EE, 0x_8E, 0x_50, 0x_58, 0x_33, 0x_AC, 0x_48, 0x_74, 0x_70, 0x_C8, 0x_44,
		0x_B9, 0x_3E, 0x_83, 0x_04, 0x_4B, 0x_D7, 0x_F5, 0x_4F, 0x_FB, 0x_29, 0x_BC, 0x_5D, 0x_4D, 0x_C5, 0x_71,
		0x_F0, 0x_51, 0x_24, 0x_A2, 0x_53, 0x_CF, 0x_5E, 0x_7E, 0x_77, 0x_34, 0x_B5, 0x_93, 0x_E5, 0x_7C, 0x_A8,
		0x_7D, 0x_60, 0x_CB, 0x_98, 0x_A7, 0x_B1, 0x_E3, 0x_49, 0x_0E, 0x_43, 0x_6E, 0x_65, 0x_14, 0x_B8, 0x_E6,
		0x_2A, 0x_96, 0x_64, 0x_9A, 0x_2C, 0x_45, 0x_B6, 0x_A6, 0x_B2, 0x_63, 0x_7A, 0x_DD, 0x_72, 0x_62, 0x_EB,
		0x_C7, 0x_55, 0x_4E, 0x_D3, 0x_ED, 0x_67, 0x_56, 0x_5F, 0x_0F, 0x_F7, 0x_F2, 0x_3D, 0x_8F, 0x_82, 0x_27,
		0x_8A, 0x_02, 0x_22, 0x_28, 0x_E2, 0x_E0, 0x_79, 0x_32, 0x_B0, 0x_9B, 0x_01, 0x_EC, 0x_78, 0x_EA, 0x_AB,
		0x_9D, 0x_75, 0x_F4, 0x_C4, 0x_BF, 0x_CD, 0x_21, 0x_CA, 0x_D8, 0x_AE, 0x_F3, 0x_97, 0x_A5, 0x_6A, 0x_08,
		0x_05, 0x_E4, 0x_90, 0x_36, 0x_86, 0x_CE, 0x_A0, 0x_3A, 0x_1B, 0x_A1, 0x_68, 0x_37, 0x_9E, 0x_C6, 0x_38,
		0x_BB, 0x_5B, 0x_95, 0x_61, 0x_1C, 0x_41, 0x_3C, 0x_3B, 0x_9F, 0x_F8, 0x_D5, 0x_84, 0x_7B, 0x_88, 0x_47,
		0x_E8, 0x_1D, 0x_B7, 0x_4A, 0x_A3, 0x_E7, 0x_69, 0x_F9, 0x_91, 0x_D0, 0x_99, 0x_F1, 0x_40, 0x_73, 0x_8D,
		0x_C3, 0x_89, 0x_06, 0x_D1, 0x_FD, 0x_D2, 0x_94, 0x_66, 0x_BD, 0x_9C, 0x_2F, 0x_CC, 0x_23, 0x_52, 0x_46,
		0x_16, 0x_BA, 0x_C9, 0x_C2, 0x_5A, 0x_FE, 0x_10, 0x_13, 0x_80, 0x_8C, 0x_1E, 0x_59, 0x_11, 0x_92, 0x_2E,
		0x_AD, 0x_EF, 0x_FF, 0x_31, 0x_26, 0x_15, 0x_30,
	];

	helper(S, BASE, 530_214_164);
}
// endregion
// region: s_has_signs_and_zeros_and_7_in_base_2
#[test]
fn s_has_signs_and_zeros_and_7_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_1F, 0x_1F, 0x_1F,
		0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F,
		0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F,
		0x_1F, 0x_24, 0x_24, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_1F, 0x_24,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_signs_and_zeros_and_30_in_base_2
#[test]
fn s_has_signs_and_zeros_and_30_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_30, 0x_30, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_E4,
	];

	helper(S, BASE, 30);
}
// endregion
// region: s_has_signs_and_zeros_and_829_in_base_2
#[test]
fn s_has_signs_and_zeros_and_829_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_72,
		0x_72, 0x_F4, 0x_F4, 0x_72, 0x_72, 0x_72, 0x_72, 0x_F4, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_72,
	];

	helper(S, BASE, 829);
}
// endregion
// region: s_has_signs_and_zeros_and_8_255_in_base_2
#[test]
fn s_has_signs_and_zeros_and_8_255_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_68, 0x_68, 0x_68, 0x_93, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_93,
	];

	helper(S, BASE, 8_255);
}
// endregion
// region: s_has_signs_and_zeros_and_10_972_in_base_2
#[test]
fn s_has_signs_and_zeros_and_10_972_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_7D, 0x_CF, 0x_7D, 0x_CF,
		0x_7D, 0x_CF, 0x_7D, 0x_7D, 0x_CF, 0x_7D, 0x_7D, 0x_7D, 0x_CF, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_7D,
	];

	helper(S, BASE, 10_972);
}
// endregion
// region: s_has_signs_and_zeros_and_717_474_in_base_2
#[test]
fn s_has_signs_and_zeros_and_717_474_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF,
		0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF,
		0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF,
		0x_9A, 0x_DF, 0x_9A, 0x_DF, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_DF, 0x_DF, 0x_9A, 0x_DF, 0x_9A, 0x_DF, 0x_9A,
		0x_DF, 0x_DF, 0x_DF, 0x_9A, 0x_DF,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_9A,
	];

	helper(S, BASE, 717_474);
}
// endregion
// region: s_has_signs_and_zeros_and_6_557_074_in_base_2
#[test]
fn s_has_signs_and_zeros_and_6_557_074_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB,
		0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB,
		0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_83, 0x_83, 0x_CB, 0x_CB,
		0x_83, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_83, 0x_83, 0x_CB, 0x_83, 0x_83, 0x_CB, 0x_CB, 0x_83,
		0x_CB, 0x_CB, 0x_83, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_CB, 0x_83,
	];

	helper(S, BASE, 6_557_074);
}
// endregion
// region: s_has_signs_and_zeros_and_99_111_843_in_base_2
#[test]
fn s_has_signs_and_zeros_and_99_111_843_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_65, 0x_65,
		0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_67, 0x_65, 0x_67, 0x_67, 0x_67, 0x_67,
		0x_65, 0x_67, 0x_65, 0x_65, 0x_65, 0x_65, 0x_67, 0x_65, 0x_67, 0x_65, 0x_65, 0x_67, 0x_67, 0x_67, 0x_65,
		0x_67, 0x_65, 0x_65, 0x_65, 0x_67, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_65, 0x_67,
	];

	helper(S, BASE, 99_111_843);
}
// endregion
// region: s_has_signs_and_zeros_and_268_634_335_in_base_2
#[test]
fn s_has_signs_and_zeros_and_268_634_335_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_B4, 0x_8B, 0x_8B, 0x_8B,
		0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_B4, 0x_B4, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_B4, 0x_8B,
		0x_8B, 0x_8B, 0x_B4, 0x_B4, 0x_8B, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4,
	];
	const BASE: &[u8] = &[
		0x_8B, 0x_B4,
	];

	helper(S, BASE, 268_634_335);
}
// endregion
// region: s_has_signs_and_zeros_and_2_in_base_3
#[test]
fn s_has_signs_and_zeros_and_2_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_1B, 0x_3A,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_signs_and_zeros_and_18_in_base_3
#[test]
fn s_has_signs_and_zeros_and_18_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_29, 0x_AF, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_55, 0x_29,
	];

	helper(S, BASE, 18);
}
// endregion
// region: s_has_signs_and_zeros_and_343_in_base_3
#[test]
fn s_has_signs_and_zeros_and_343_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_E6, 0x_E6, 0x_68, 0x_68, 0x_E6, 0x_76, 0x_E6, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_68, 0x_76,
	];

	helper(S, BASE, 343);
}
// endregion
// region: s_has_signs_and_zeros_and_6_567_in_base_3
#[test]
fn s_has_signs_and_zeros_and_6_567_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_F2, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_B7, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_F2, 0x_B7,
	];

	helper(S, BASE, 6_567);
}
// endregion
// region: s_has_signs_and_zeros_and_61_822_in_base_3
#[test]
fn s_has_signs_and_zeros_and_61_822_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_ED, 0x_ED,
		0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_4E, 0x_ED, 0x_ED, 0x_4E,
		0x_ED, 0x_14, 0x_4E, 0x_ED, 0x_14, 0x_ED, 0x_4E,
	];
	const BASE: &[u8] = &[
		0x_ED, 0x_4E, 0x_14,
	];

	helper(S, BASE, 61_822);
}
// endregion
// region: s_has_signs_and_zeros_and_526_831_in_base_3
#[test]
fn s_has_signs_and_zeros_and_526_831_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90,
		0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_90, 0x_A3,
		0x_A3, 0x_90, 0x_90, 0x_90, 0x_A3, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_1B, 0x_A3,
	];

	helper(S, BASE, 526_831);
}
// endregion
// region: s_has_signs_and_zeros_and_9_737_077_in_base_3
#[test]
fn s_has_signs_and_zeros_and_9_737_077_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59,
		0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_08, 0x_59, 0x_59, 0x_59, 0x_08, 0x_08,
		0x_08, 0x_59, 0x_59, 0x_08, 0x_59, 0x_08, 0x_32, 0x_32, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_32, 0x_08,
	];

	helper(S, BASE, 9_737_077);
}
// endregion
// region: s_has_signs_and_zeros_and_25_912_083_in_base_3
#[test]
fn s_has_signs_and_zeros_and_25_912_083_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73,
		0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73,
		0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_F5, 0x_DE, 0x_F5, 0x_73, 0x_DE, 0x_73, 0x_DE, 0x_F5,
		0x_F5, 0x_73, 0x_DE, 0x_73, 0x_73, 0x_DE, 0x_F5, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_F5, 0x_DE,
	];

	helper(S, BASE, 25_912_083);
}
// endregion
// region: s_has_signs_and_zeros_and_559_944_590_in_base_3
#[test]
fn s_has_signs_and_zeros_and_559_944_590_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D,
		0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_91, 0x_91,
		0x_91, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_91, 0x_3D, 0x_3D, 0x_5D, 0x_91, 0x_5D, 0x_91, 0x_3D, 0x_5D, 0x_91,
		0x_91, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_91, 0x_3D,
	];

	helper(S, BASE, 559_944_590);
}
// endregion
// region: s_has_signs_and_zeros_and_4_in_base_5
#[test]
fn s_has_signs_and_zeros_and_4_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_89, 0x_99, 0x_BC, 0x_F6,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_signs_and_zeros_and_84_in_base_5
#[test]
fn s_has_signs_and_zeros_and_84_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_85,
		0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_F7, 0x_80, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_80, 0x_FC, 0x_F7, 0x_7C,
	];

	helper(S, BASE, 84);
}
// endregion
// region: s_has_signs_and_zeros_and_574_in_base_5
#[test]
fn s_has_signs_and_zeros_and_574_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92,
		0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92,
		0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_82, 0x_83, 0x_82,
		0x_82,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_B2, 0x_83, 0x_28, 0x_82,
	];

	helper(S, BASE, 574);
}
// endregion
// region: s_has_signs_and_zeros_and_6_899_in_base_5
#[test]
fn s_has_signs_and_zeros_and_6_899_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08,
		0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08,
		0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08,
		0x_08, 0x_59, 0x_3A, 0x_08, 0x_08, 0x_49, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_3A, 0x_59, 0x_90, 0x_49,
	];

	helper(S, BASE, 6_899);
}
// endregion
// region: s_has_signs_and_zeros_and_39_672_in_base_5
#[test]
fn s_has_signs_and_zeros_and_39_672_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_72, 0x_72, 0x_B4, 0x_72, 0x_E7, 0x_58, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_E7, 0x_72, 0x_B4, 0x_58,
	];

	helper(S, BASE, 39_672);
}
// endregion
// region: s_has_signs_and_zeros_and_254_431_in_base_5
#[test]
fn s_has_signs_and_zeros_and_254_431_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_AD, 0x_AD,
		0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_FC, 0x_7C, 0x_7C, 0x_9A, 0x_AD, 0x_9A, 0x_7C, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_AD, 0x_7C, 0x_9A, 0x_FC, 0x_94,
	];

	helper(S, BASE, 254_431);
}
// endregion
// region: s_has_signs_and_zeros_and_5_553_055_in_base_5
#[test]
fn s_has_signs_and_zeros_and_5_553_055_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08,
		0x_08, 0x_08, 0x_C6, 0x_67, 0x_24, 0x_08, 0x_24, 0x_67, 0x_67, 0x_C6, 0x_24, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_24, 0x_C6, 0x_2C, 0x_67,
	];

	helper(S, BASE, 5_553_055);
}
// endregion
// region: s_has_signs_and_zeros_and_75_528_728_in_base_5
#[test]
fn s_has_signs_and_zeros_and_75_528_728_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_EE, 0x_46,
		0x_17, 0x_17, 0x_EE, 0x_17, 0x_70, 0x_BF, 0x_70, 0x_70, 0x_BF, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_EE, 0x_46, 0x_17, 0x_70,
	];

	helper(S, BASE, 75_528_728);
}
// endregion
// region: s_has_signs_and_zeros_and_369_078_339_in_base_5
#[test]
fn s_has_signs_and_zeros_and_369_078_339_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07,
		0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07,
		0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_BF, 0x_65, 0x_65, 0x_67, 0x_9F, 0x_9F,
		0x_BF, 0x_07, 0x_07, 0x_BF, 0x_67, 0x_65, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_BF, 0x_65, 0x_67, 0x_9F,
	];

	helper(S, BASE, 369_078_339);
}
// endregion
// region: s_has_signs_and_zeros_and_3_in_base_7
#[test]
fn s_has_signs_and_zeros_and_3_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0,
		0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0,
		0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_F0, 0x_EE, 0x_63, 0x_C2, 0x_64, 0x_B3, 0x_80,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_signs_and_zeros_and_54_in_base_7
#[test]
fn s_has_signs_and_zeros_and_54_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32,
		0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_45, 0x_32,
		0x_23,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_45, 0x_70, 0x_82, 0x_41, 0x_23, 0x_6A,
	];

	helper(S, BASE, 54);
}
// endregion
// region: s_has_signs_and_zeros_and_539_in_base_7
#[test]
fn s_has_signs_and_zeros_and_539_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32,
		0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_F8, 0x_99, 0x_32, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_F8, 0x_C7, 0x_A1, 0x_99, 0x_1F, 0x_3F,
	];

	helper(S, BASE, 539);
}
// endregion
// region: s_has_signs_and_zeros_and_3_961_in_base_7
#[test]
fn s_has_signs_and_zeros_and_3_961_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_41, 0x_41, 0x_41, 0x_D8, 0x_CE, 0x_B5, 0x_92, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_D8, 0x_DA, 0x_B5, 0x_CE, 0x_92, 0x_AE,
	];

	helper(S, BASE, 3_961);
}
// endregion
// region: s_has_signs_and_zeros_and_64_353_in_base_7
#[test]
fn s_has_signs_and_zeros_and_64_353_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_7A, 0x_65, 0x_65, 0x_24, 0x_05, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_55, 0x_05, 0x_7A, 0x_24, 0x_65, 0x_C6,
	];

	helper(S, BASE, 64_353);
}
// endregion
// region: s_has_signs_and_zeros_and_981_409_in_base_7
#[test]
fn s_has_signs_and_zeros_and_981_409_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_D9, 0x_D9, 0x_A1, 0x_A1, 0x_59, 0x_D9, 0x_59, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_D9, 0x_A1, 0x_5C, 0x_A9, 0x_59, 0x_CD,
	];

	helper(S, BASE, 981_409);
}
// endregion
// region: s_has_signs_and_zeros_and_1_427_004_in_base_7
#[test]
fn s_has_signs_and_zeros_and_1_427_004_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_A0, 0x_85, 0x_38, 0x_EE, 0x_3E, 0x_3E, 0x_58, 0x_85,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_A0, 0x_3E, 0x_58, 0x_70, 0x_85, 0x_EE,
	];

	helper(S, BASE, 1_427_004);
}
// endregion
// region: s_has_signs_and_zeros_and_44_279_067_in_base_7
#[test]
fn s_has_signs_and_zeros_and_44_279_067_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B,
		0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_8A, 0x_1B, 0x_A0, 0x_A7, 0x_07, 0x_F6, 0x_DF, 0x_F6, 0x_F6,
		0x_1B,
	];
	const BASE: &[u8] = &[
		0x_1B, 0x_8A, 0x_07, 0x_F6, 0x_A0, 0x_A7, 0x_DF,
	];

	helper(S, BASE, 44_279_067);
}
// endregion
// region: s_has_signs_and_zeros_and_123_510_541_in_base_7
#[test]
fn s_has_signs_and_zeros_and_123_510_541_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_EC,
		0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC,
		0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC,
		0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_74, 0x_EC, 0x_7C, 0x_F3, 0x_91, 0x_91, 0x_7C, 0x_EC, 0x_7C,
		0x_EC,
	];
	const BASE: &[u8] = &[
		0x_EC, 0x_82, 0x_7C, 0x_74, 0x_40, 0x_91, 0x_F3,
	];

	helper(S, BASE, 123_510_541);
}
// endregion
// region: s_has_signs_and_zeros_and_8_in_base_11
#[test]
fn s_has_signs_and_zeros_and_8_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_F4, 0x_FF, 0x_8A, 0x_DE, 0x_A0, 0x_2F, 0x_A3, 0x_53, 0x_F6, 0x_7C,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_signs_and_zeros_and_27_in_base_11
#[test]
fn s_has_signs_and_zeros_and_27_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_63, 0x_63,
		0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_57,
		0x_D4,
	];
	const BASE: &[u8] = &[
		0x_63, 0x_9D, 0x_57, 0x_2A, 0x_21, 0x_D4, 0x_5C, 0x_DA, 0x_66, 0x_5B, 0x_1E,
	];

	helper(S, BASE, 27);
}
// endregion
// region: s_has_signs_and_zeros_and_495_in_base_11
#[test]
fn s_has_signs_and_zeros_and_495_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24,
		0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24,
		0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24,
		0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_80, 0x_54, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_24, 0x_54, 0x_EB, 0x_F7, 0x_80, 0x_98, 0x_4E, 0x_1B, 0x_BC, 0x_81, 0x_10,
	];

	helper(S, BASE, 495);
}
// endregion
// region: s_has_signs_and_zeros_and_1_520_in_base_11
#[test]
fn s_has_signs_and_zeros_and_1_520_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8,
		0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8,
		0x_A8, 0x_1D, 0x_1D, 0x_06, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_1D, 0x_36, 0x_30, 0x_61, 0x_73, 0x_06, 0x_3A, 0x_CF, 0x_6A, 0x_7B,
	];

	helper(S, BASE, 1_520);
}
// endregion
// region: s_has_signs_and_zeros_and_25_157_in_base_11
#[test]
fn s_has_signs_and_zeros_and_25_157_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2,
		0x_D2, 0x_D2, 0x_8E, 0x_FE, 0x_EF, 0x_D8, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_8E, 0x_6E, 0x_82, 0x_9F, 0x_A3, 0x_C3, 0x_FE, 0x_CA, 0x_EF, 0x_D8,
	];

	helper(S, BASE, 25_157);
}
// endregion
// region: s_has_signs_and_zeros_and_617_620_in_base_11
#[test]
fn s_has_signs_and_zeros_and_617_620_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5,
		0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5,
		0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5,
		0x_66, 0x_A8, 0x_95, 0x_C5, 0x_66, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_24, 0x_95, 0x_66, 0x_6D, 0x_D9, 0x_49, 0x_BC, 0x_3F, 0x_A8, 0x_A5,
	];

	helper(S, BASE, 617_620);
}
// endregion
// region: s_has_signs_and_zeros_and_2_830_284_in_base_11
#[test]
fn s_has_signs_and_zeros_and_2_830_284_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_08, 0x_BF, 0x_BF, 0x_D0,
		0x_69, 0x_04, 0x_BF,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_08, 0x_C2, 0x_D0, 0x_69, 0x_3A, 0x_BF, 0x_3B, 0x_04, 0x_19, 0x_B9,
	];

	helper(S, BASE, 2_830_284);
}
// endregion
// region: s_has_signs_and_zeros_and_62_410_904_in_base_11
#[test]
fn s_has_signs_and_zeros_and_62_410_904_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9,
		0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_3D, 0x_57, 0x_57, 0x_04, 0x_E9,
		0x_57, 0x_D3, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_B9, 0x_BE, 0x_57, 0x_3D, 0x_CC, 0x_04, 0x_D3, 0x_9F, 0x_E9, 0x_79, 0x_BD,
	];

	helper(S, BASE, 62_410_904);
}
// endregion
// region: s_has_signs_and_zeros_and_149_164_895_in_base_11
#[test]
fn s_has_signs_and_zeros_and_149_164_895_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_EF, 0x_EF, 0x_EF,
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF,
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF,
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_FC, 0x_FC, 0x_16, 0x_16, 0x_56, 0x_E7, 0x_E7, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_56, 0x_16, 0x_96, 0x_89, 0x_DF, 0x_68, 0x_FC, 0x_E7, 0x_F9, 0x_58,
	];

	helper(S, BASE, 149_164_895);
}
// endregion
// region: s_has_signs_and_zeros_and_3_in_base_13
#[test]
fn s_has_signs_and_zeros_and_3_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF,
		0x_AF, 0x_AF, 0x_AF, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_7F, 0x_CE, 0x_96, 0x_72, 0x_FF, 0x_71, 0x_30, 0x_B7, 0x_48, 0x_4D, 0x_A8, 0x_33,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_signs_and_zeros_and_39_in_base_13
#[test]
fn s_has_signs_and_zeros_and_39_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_A9, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_FB, 0x_47, 0x_A9, 0x_FF, 0x_F1, 0x_D6, 0x_B8, 0x_81, 0x_C7, 0x_5E, 0x_E8, 0x_E6,
	];

	helper(S, BASE, 39);
}
// endregion
// region: s_has_signs_and_zeros_and_989_in_base_13
#[test]
fn s_has_signs_and_zeros_and_989_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_73, 0x_74,
		0x_69,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_69, 0x_A1, 0x_C7, 0x_D7, 0x_73, 0x_7E, 0x_E9, 0x_ED, 0x_94, 0x_5B, 0x_74, 0x_6A,
	];

	helper(S, BASE, 989);
}
// endregion
// region: s_has_signs_and_zeros_and_2_993_in_base_13
#[test]
fn s_has_signs_and_zeros_and_2_993_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1,
		0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1,
		0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_9E, 0x_49, 0x_FA, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_9E, 0x_3A, 0x_E8, 0x_49, 0x_33, 0x_EB, 0x_3B, 0x_65, 0x_FA, 0x_83, 0x_AF, 0x_C4,
	];

	helper(S, BASE, 2_993);
}
// endregion
// region: s_has_signs_and_zeros_and_64_121_in_base_13
#[test]
fn s_has_signs_and_zeros_and_64_121_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5,
		0x_C5, 0x_5F, 0x_75, 0x_5F, 0x_72, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_B4, 0x_5F, 0x_75, 0x_AE, 0x_72, 0x_F8, 0x_62, 0x_D0, 0x_89, 0x_37, 0x_3D, 0x_A8,
	];

	helper(S, BASE, 64_121);
}
// endregion
// region: s_has_signs_and_zeros_and_861_009_in_base_13
#[test]
fn s_has_signs_and_zeros_and_861_009_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_90, 0x_E0, 0x_86, 0x_7E, 0x_23, 0x_BC, 0x_A5,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_7E, 0x_E0, 0x_34, 0x_86, 0x_5E, 0x_A5, 0x_CB, 0x_AC, 0x_BC, 0x_92, 0x_23, 0x_E5,
	];

	helper(S, BASE, 861_009);
}
// endregion
// region: s_has_signs_and_zeros_and_7_567_306_in_base_13
#[test]
fn s_has_signs_and_zeros_and_7_567_306_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_BB, 0x_BB, 0x_BB, 0x_BB,
		0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_B0, 0x_02, 0x_18, 0x_FE,
		0x_18, 0x_FE, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_B0, 0x_1B, 0x_E3, 0x_18, 0x_7C, 0x_FD, 0x_02, 0x_E0, 0x_D7, 0x_46, 0x_57, 0x_FE,
	];

	helper(S, BASE, 7_567_306);
}
// endregion
// region: s_has_signs_and_zeros_and_51_282_432_in_base_13
#[test]
fn s_has_signs_and_zeros_and_51_282_432_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4,
		0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4,
		0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_F3, 0x_EA, 0x_C5, 0x_FC, 0x_B4, 0x_F0, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_C5, 0x_BC, 0x_02, 0x_F0, 0x_8E, 0x_E2, 0x_FC, 0x_EA, 0x_93, 0x_F3, 0x_ED, 0x_13,
	];

	helper(S, BASE, 51_282_432);
}
// endregion
// region: s_has_signs_and_zeros_and_861_673_036_in_base_13
#[test]
fn s_has_signs_and_zeros_and_861_673_036_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_FC, 0x_FC, 0x_FC, 0x_40, 0x_FC, 0x_68, 0x_98, 0x_68, 0x_3D,
		0x_CF, 0x_FC, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_40, 0x_E0, 0x_18, 0x_F4, 0x_CF, 0x_98, 0x_3D, 0x_13, 0x_68, 0x_B8, 0x_C1, 0x_93,
	];

	helper(S, BASE, 861_673_036);
}
// endregion
// region: s_has_signs_and_zeros_and_2_in_base_19
#[test]
fn s_has_signs_and_zeros_and_2_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_96, 0x_B0, 0x_10, 0x_72, 0x_DC, 0x_E7, 0x_E5, 0x_27, 0x_7A, 0x_83, 0x_CB, 0x_7F, 0x_D6, 0x_92,
		0x_48, 0x_F9, 0x_2C, 0x_07,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_signs_and_zeros_and_33_in_base_19
#[test]
fn s_has_signs_and_zeros_and_33_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_66,
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_CD, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_CD, 0x_28, 0x_AD, 0x_84, 0x_CF, 0x_AB, 0x_18, 0x_DB, 0x_C8, 0x_56, 0x_10, 0x_13, 0x_4E, 0x_8F,
		0x_D0, 0x_BD, 0x_8C, 0x_3D,
	];

	helper(S, BASE, 33);
}
// endregion
// region: s_has_signs_and_zeros_and_771_in_base_19
#[test]
fn s_has_signs_and_zeros_and_771_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_89, 0x_89, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_FB, 0x_89, 0x_6C, 0x_C0, 0x_EE, 0x_02, 0x_59, 0x_49, 0x_CA, 0x_86, 0x_60, 0x_8C, 0x_1D, 0x_A5,
		0x_EC, 0x_74, 0x_CE, 0x_C9,
	];

	helper(S, BASE, 771);
}
// endregion
// region: s_has_signs_and_zeros_and_8_027_in_base_19
#[test]
fn s_has_signs_and_zeros_and_8_027_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7,
		0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_1F, 0x_A4, 0x_1E, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_1F, 0x_F0, 0x_A4, 0x_1E, 0x_37, 0x_E4, 0x_DA, 0x_97, 0x_26, 0x_7A, 0x_A2, 0x_D0, 0x_FF, 0x_81,
		0x_F2, 0x_1A, 0x_32, 0x_57,
	];

	helper(S, BASE, 8_027);
}
// endregion
// region: s_has_signs_and_zeros_and_51_764_in_base_19
#[test]
fn s_has_signs_and_zeros_and_51_764_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_56, 0x_56,
		0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_A8,
		0x_B5, 0x_A8, 0x_04,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_25, 0x_39, 0x_F2, 0x_1F, 0x_01, 0x_26, 0x_A8, 0x_04, 0x_8F, 0x_B5, 0x_F3, 0x_AA, 0x_5B, 0x_99,
		0x_DD, 0x_FE, 0x_2C, 0x_8C,
	];

	helper(S, BASE, 51_764);
}
// endregion
// region: s_has_signs_and_zeros_and_596_826_in_base_19
#[test]
fn s_has_signs_and_zeros_and_596_826_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_C9, 0x_AE, 0x_B3, 0x_C9, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_6C, 0x_15, 0x_EA, 0x_C9, 0x_9F, 0x_44, 0x_91, 0x_CD, 0x_1D, 0x_62, 0x_AE, 0x_A7, 0x_2C, 0x_32,
		0x_DA, 0x_4D, 0x_5E, 0x_11,
	];

	helper(S, BASE, 596_826);
}
// endregion
// region: s_has_signs_and_zeros_and_9_872_898_in_base_19
#[test]
fn s_has_signs_and_zeros_and_9_872_898_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_75, 0x_32, 0x_80, 0x_0E, 0x_80, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_66, 0x_34, 0x_75, 0x_98, 0x_D6, 0x_DB, 0x_0E, 0x_2E, 0x_6B, 0x_E3, 0x_1C, 0x_05, 0x_33, 0x_80,
		0x_9F, 0x_40, 0x_54, 0x_32,
	];

	helper(S, BASE, 9_872_898);
}
// endregion
// region: s_has_signs_and_zeros_and_82_428_775_in_base_19
#[test]
fn s_has_signs_and_zeros_and_82_428_775_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_46, 0x_53, 0x_2F, 0x_61, 0x_88, 0x_1B, 0x_88,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_46, 0x_77, 0x_94, 0x_E1, 0x_2F, 0x_BB, 0x_7E, 0x_B4, 0x_61, 0x_1B, 0x_88, 0x_08, 0x_3C, 0x_53,
		0x_A8, 0x_75, 0x_89, 0x_74,
	];

	helper(S, BASE, 82_428_775);
}
// endregion
// region: s_has_signs_and_zeros_and_245_617_007_in_base_19
#[test]
fn s_has_signs_and_zeros_and_245_617_007_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2A, 0x_2A, 0x_2A, 0x_2A,
		0x_2A, 0x_2A, 0x_2A, 0x_82, 0x_14, 0x_DA, 0x_A7, 0x_A8, 0x_D9, 0x_4D,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_69, 0x_6B, 0x_DA, 0x_14, 0x_82, 0x_02, 0x_A6, 0x_A8, 0x_D9, 0x_DD, 0x_05, 0x_32, 0x_A7, 0x_B2,
		0x_BE, 0x_4F, 0x_4D, 0x_A9,
	];

	helper(S, BASE, 245_617_007);
}
// endregion
// region: s_has_signs_and_zeros_and_1_in_base_42
#[test]
fn s_has_signs_and_zeros_and_1_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_19, 0x_07, 0x_28, 0x_6B, 0x_98, 0x_01, 0x_A7, 0x_9B, 0x_02, 0x_91, 0x_97, 0x_77, 0x_39, 0x_52,
		0x_E0, 0x_96, 0x_94, 0x_40, 0x_B9, 0x_68, 0x_2A, 0x_1A, 0x_CD, 0x_08, 0x_70, 0x_59, 0x_B5, 0x_3F, 0x_F5,
		0x_7B, 0x_16, 0x_FC, 0x_1D, 0x_83, 0x_D7, 0x_E1, 0x_F1, 0x_43, 0x_FA, 0x_9D, 0x_49,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_signs_and_zeros_and_72_in_base_42
#[test]
fn s_has_signs_and_zeros_and_72_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9,
		0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9,
		0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_E0, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_B9, 0x_E0, 0x_6F, 0x_FB, 0x_D4, 0x_BC, 0x_61, 0x_C5, 0x_CC, 0x_B4, 0x_75, 0x_89, 0x_FE, 0x_66, 0x_1C,
		0x_AE, 0x_23, 0x_DE, 0x_DB, 0x_97, 0x_3D, 0x_41, 0x_49, 0x_E5, 0x_67, 0x_64, 0x_7D, 0x_D2, 0x_15, 0x_1B,
		0x_70, 0x_53, 0x_F2, 0x_B1, 0x_A9, 0x_31, 0x_94, 0x_05, 0x_69, 0x_EB, 0x_4B, 0x_7B,
	];

	helper(S, BASE, 72);
}
// endregion
// region: s_has_signs_and_zeros_and_180_in_base_42
#[test]
fn s_has_signs_and_zeros_and_180_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1,
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_76, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_DA, 0x_55, 0x_FA, 0x_76, 0x_BF, 0x_5E, 0x_69, 0x_C4, 0x_1C, 0x_94, 0x_C7, 0x_5A, 0x_04, 0x_84,
		0x_05, 0x_44, 0x_65, 0x_DE, 0x_CA, 0x_62, 0x_DC, 0x_89, 0x_16, 0x_22, 0x_66, 0x_3D, 0x_75, 0x_61, 0x_C8,
		0x_3B, 0x_13, 0x_91, 0x_CB, 0x_07, 0x_30, 0x_5B, 0x_7B, 0x_FC, 0x_E9, 0x_C6, 0x_B6,
	];

	helper(S, BASE, 180);
}
// endregion
// region: s_has_signs_and_zeros_and_2_258_in_base_42
#[test]
fn s_has_signs_and_zeros_and_2_258_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_53, 0x_99, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_53, 0x_9C, 0x_BC, 0x_7A, 0x_78, 0x_28, 0x_8B, 0x_7E, 0x_34, 0x_5C, 0x_99, 0x_FF, 0x_82, 0x_07,
		0x_48, 0x_C6, 0x_03, 0x_1F, 0x_CB, 0x_8C, 0x_61, 0x_C8, 0x_4A, 0x_71, 0x_92, 0x_4C, 0x_FA, 0x_63, 0x_AD,
		0x_B5, 0x_A4, 0x_95, 0x_D0, 0x_7F, 0x_44, 0x_A3, 0x_49, 0x_7B, 0x_AF, 0x_30, 0x_1E,
	];

	helper(S, BASE, 2_258);
}
// endregion
// region: s_has_signs_and_zeros_and_55_060_in_base_42
#[test]
fn s_has_signs_and_zeros_and_55_060_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_57, 0x_57, 0x_57, 0x_57,
		0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57,
		0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57,
		0x_57, 0x_57, 0x_57, 0x_F1, 0x_D0, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_57, 0x_B4, 0x_EA, 0x_B6, 0x_95, 0x_AB, 0x_48, 0x_1B, 0x_D0, 0x_86, 0x_87, 0x_DB, 0x_D3, 0x_22, 0x_70,
		0x_39, 0x_AC, 0x_4D, 0x_56, 0x_77, 0x_36, 0x_CD, 0x_DA, 0x_38, 0x_EF, 0x_A6, 0x_4C, 0x_EC, 0x_E9, 0x_66,
		0x_71, 0x_F1, 0x_AA, 0x_5D, 0x_33, 0x_FE, 0x_E8, 0x_C8, 0x_84, 0x_67, 0x_50, 0x_96,
	];

	helper(S, BASE, 55_060);
}
// endregion
// region: s_has_signs_and_zeros_and_847_438_in_base_42
#[test]
fn s_has_signs_and_zeros_and_847_438_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A,
		0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A,
		0x_94, 0x_56, 0x_C0, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_6A, 0x_DA, 0x_91, 0x_5E, 0x_11, 0x_3E, 0x_85, 0x_EF, 0x_D2, 0x_FE, 0x_15, 0x_94, 0x_D4, 0x_F0, 0x_C5,
		0x_75, 0x_EC, 0x_C0, 0x_56, 0x_6D, 0x_73, 0x_E4, 0x_7B, 0x_59, 0x_68, 0x_BB, 0x_D1, 0x_97, 0x_9D, 0x_8A,
		0x_32, 0x_05, 0x_21, 0x_34, 0x_E1, 0x_AE, 0x_37, 0x_7E, 0x_BF, 0x_72, 0x_DB, 0x_E9,
	];

	helper(S, BASE, 847_438);
}
// endregion
// region: s_has_signs_and_zeros_and_9_176_122_in_base_42
#[test]
fn s_has_signs_and_zeros_and_9_176_122_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_D9, 0x_ED, 0x_47, 0x_62, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_99, 0x_D9, 0x_27, 0x_68, 0x_72, 0x_11, 0x_32, 0x_9E, 0x_6D, 0x_B2, 0x_E4, 0x_C1, 0x_67, 0x_B3,
		0x_8B, 0x_B9, 0x_34, 0x_96, 0x_89, 0x_B7, 0x_A4, 0x_EB, 0x_A9, 0x_52, 0x_94, 0x_C2, 0x_AC, 0x_D0, 0x_7C,
		0x_E7, 0x_BC, 0x_BB, 0x_38, 0x_63, 0x_47, 0x_B6, 0x_62, 0x_AE, 0x_ED, 0x_08, 0x_7F,
	];

	helper(S, BASE, 9_176_122);
}
// endregion
// region: s_has_signs_and_zeros_and_29_037_767_in_base_42
#[test]
fn s_has_signs_and_zeros_and_29_037_767_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A,
		0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_AF, 0x_58, 0x_5A, 0x_58, 0x_AA,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_3A, 0x_8E, 0x_C0, 0x_22, 0x_6C, 0x_04, 0x_D3, 0x_B0, 0x_AF, 0x_D4, 0x_EA, 0x_66, 0x_58, 0x_13,
		0x_54, 0x_7B, 0x_AA, 0x_3B, 0x_49, 0x_28, 0x_52, 0x_27, 0x_CC, 0x_15, 0x_50, 0x_FE, 0x_19, 0x_6B, 0x_EF,
		0x_CE, 0x_59, 0x_E9, 0x_46, 0x_95, 0x_25, 0x_1C, 0x_8C, 0x_D9, 0x_5A, 0x_BA, 0x_AB,
	];

	helper(S, BASE, 29_037_767);
}
// endregion
// region: s_has_signs_and_zeros_and_512_040_678_in_base_42
#[test]
fn s_has_signs_and_zeros_and_512_040_678_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_78, 0x_78, 0x_4C, 0x_7C, 0x_71, 0x_A2, 0x_1B, 0x_C0,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_C3, 0x_AA, 0x_4C, 0x_A9, 0x_1A, 0x_23, 0x_65, 0x_F6, 0x_DB, 0x_A2, 0x_4E, 0x_92, 0x_F3, 0x_40,
		0x_57, 0x_17, 0x_41, 0x_AF, 0x_B2, 0x_1B, 0x_6A, 0x_EF, 0x_71, 0x_14, 0x_56, 0x_AD, 0x_79, 0x_3A, 0x_4D,
		0x_C0, 0x_4A, 0x_7B, 0x_B9, 0x_87, 0x_D7, 0x_B3, 0x_36, 0x_7C, 0x_05, 0x_FB, 0x_67,
	];

	helper(S, BASE, 512_040_678);
}
// endregion
// region: s_has_signs_and_zeros_and_3_in_base_73
#[test]
fn s_has_signs_and_zeros_and_3_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_B6, 0x_03, 0x_8F, 0x_F3, 0x_89, 0x_FC, 0x_CF, 0x_D4, 0x_22, 0x_8B, 0x_62, 0x_60, 0x_07, 0x_7D,
		0x_35, 0x_44, 0x_8A, 0x_93, 0x_9C, 0x_A4, 0x_E2, 0x_3C, 0x_C6, 0x_72, 0x_12, 0x_51, 0x_5B, 0x_FD, 0x_18,
		0x_15, 0x_D9, 0x_FE, 0x_C0, 0x_16, 0x_21, 0x_05, 0x_CC, 0x_66, 0x_A0, 0x_8D, 0x_77, 0x_AA, 0x_5C, 0x_6E,
		0x_B1, 0x_1E, 0x_FA, 0x_4A, 0x_DD, 0x_4F, 0x_81, 0x_83, 0x_CB, 0x_64, 0x_31, 0x_52, 0x_3A, 0x_A8, 0x_42,
		0x_06, 0x_A9, 0x_EE, 0x_14, 0x_6A, 0x_82, 0x_68, 0x_AB, 0x_D8, 0x_D3, 0x_BF, 0x_29, 0x_4C,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_signs_and_zeros_and_19_in_base_73
#[test]
fn s_has_signs_and_zeros_and_19_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_FD, 0x_BF, 0x_FA, 0x_85, 0x_89, 0x_83, 0x_30, 0x_8E, 0x_E8, 0x_1B, 0x_A4, 0x_AB, 0x_A0, 0x_B6, 0x_02,
		0x_BC, 0x_93, 0x_C5, 0x_54, 0x_FF, 0x_A3, 0x_E9, 0x_E6, 0x_3D, 0x_84, 0x_4E, 0x_B2, 0x_06, 0x_C0, 0x_45,
		0x_EB, 0x_AA, 0x_BA, 0x_96, 0x_97, 0x_1D, 0x_E0, 0x_6E, 0x_77, 0x_4A, 0x_6C, 0x_6D, 0x_E2, 0x_F4, 0x_B5,
		0x_7A, 0x_58, 0x_5B, 0x_CF, 0x_98, 0x_DE, 0x_4F, 0x_52, 0x_2C, 0x_28, 0x_D8, 0x_53, 0x_DF, 0x_3E, 0x_5D,
		0x_4B, 0x_D7, 0x_C9, 0x_75, 0x_38, 0x_65, 0x_86, 0x_D9, 0x_78, 0x_7B, 0x_A8, 0x_E7, 0x_9E,
	];

	helper(S, BASE, 19);
}
// endregion
// region: s_has_signs_and_zeros_and_532_in_base_73
#[test]
fn s_has_signs_and_zeros_and_532_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_B2, 0x_B2, 0x_B2,
		0x_B2, 0x_9D, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_B2, 0x_ED, 0x_13, 0x_46, 0x_1B, 0x_A8, 0x_C3, 0x_9D, 0x_1D, 0x_F5, 0x_44, 0x_54, 0x_85, 0x_B5, 0x_94,
		0x_C0, 0x_2C, 0x_FF, 0x_EE, 0x_3E, 0x_CC, 0x_22, 0x_39, 0x_88, 0x_31, 0x_93, 0x_D4, 0x_B6, 0x_01, 0x_32,
		0x_F4, 0x_BC, 0x_7E, 0x_E3, 0x_EA, 0x_FB, 0x_34, 0x_D6, 0x_BE, 0x_9C, 0x_15, 0x_87, 0x_86, 0x_EC, 0x_96,
		0x_A2, 0x_2E, 0x_14, 0x_0F, 0x_FA, 0x_1C, 0x_E6, 0x_2A, 0x_55, 0x_9B, 0x_E2, 0x_21, 0x_11, 0x_D7, 0x_77,
		0x_60, 0x_90, 0x_23, 0x_97, 0x_40, 0x_AD, 0x_02, 0x_B4, 0x_B3, 0x_BA, 0x_8A, 0x_DE, 0x_3D,
	];

	helper(S, BASE, 532);
}
// endregion
// region: s_has_signs_and_zeros_and_2_753_in_base_73
#[test]
fn s_has_signs_and_zeros_and_2_753_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8,
		0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8,
		0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_47, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_DA, 0x_5F, 0x_1E, 0x_F6, 0x_06, 0x_65, 0x_49, 0x_61, 0x_12, 0x_B1, 0x_AC, 0x_92, 0x_E1, 0x_CB,
		0x_FB, 0x_76, 0x_1C, 0x_3D, 0x_69, 0x_05, 0x_1B, 0x_ED, 0x_3E, 0x_5A, 0x_CC, 0x_54, 0x_D0, 0x_9F, 0x_A5,
		0x_85, 0x_CA, 0x_F1, 0x_94, 0x_E9, 0x_21, 0x_74, 0x_47, 0x_C9, 0x_11, 0x_04, 0x_97, 0x_01, 0x_7F, 0x_0F,
		0x_B8, 0x_D4, 0x_D7, 0x_4B, 0x_A9, 0x_3F, 0x_F5, 0x_EF, 0x_FA, 0x_10, 0x_17, 0x_58, 0x_44, 0x_A7, 0x_C2,
		0x_D8, 0x_EB, 0x_BD, 0x_4D, 0x_3A, 0x_23, 0x_41, 0x_D5, 0x_77, 0x_8E, 0x_2A, 0x_84, 0x_DF,
	];

	helper(S, BASE, 2_753);
}
// endregion
// region: s_has_signs_and_zeros_and_16_799_in_base_73
#[test]
fn s_has_signs_and_zeros_and_16_799_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98,
		0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98,
		0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98,
		0x_74, 0x_72, 0x_C5,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_C4, 0x_D8, 0x_74, 0x_F0, 0x_13, 0x_7D, 0x_9D, 0x_EF, 0x_C5, 0x_25, 0x_72, 0x_D3, 0x_ED, 0x_DD,
		0x_A4, 0x_3C, 0x_F7, 0x_F3, 0x_78, 0x_58, 0x_89, 0x_A8, 0x_06, 0x_15, 0x_C7, 0x_69, 0x_52, 0x_3F, 0x_38,
		0x_A9, 0x_A0, 0x_4E, 0x_C1, 0x_49, 0x_6D, 0x_D2, 0x_66, 0x_5B, 0x_61, 0x_AF, 0x_96, 0x_F8, 0x_E3, 0x_03,
		0x_59, 0x_40, 0x_73, 0x_CC, 0x_6B, 0x_8F, 0x_56, 0x_46, 0x_3A, 0x_50, 0x_7A, 0x_24, 0x_D1, 0x_29, 0x_5D,
		0x_C6, 0x_27, 0x_0F, 0x_1E, 0x_5C, 0x_75, 0x_71, 0x_EA, 0x_F2, 0x_6F, 0x_02, 0x_3E, 0x_EE,
	];

	helper(S, BASE, 16_799);
}
// endregion
// region: s_has_signs_and_zeros_and_636_772_in_base_73
#[test]
fn s_has_signs_and_zeros_and_636_772_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_37, 0x_7E, 0x_A3, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_37, 0x_1A, 0x_30, 0x_8E, 0x_04, 0x_EC, 0x_42, 0x_23, 0x_1D, 0x_63, 0x_8C, 0x_DC, 0x_25, 0x_70,
		0x_54, 0x_13, 0x_E5, 0x_A7, 0x_AF, 0x_22, 0x_D9, 0x_9F, 0x_36, 0x_60, 0x_17, 0x_E3, 0x_AE, 0x_98, 0x_C5,
		0x_B7, 0x_9B, 0x_DE, 0x_53, 0x_AA, 0x_A3, 0x_2E, 0x_39, 0x_27, 0x_91, 0x_9C, 0x_A1, 0x_BC, 0x_EE, 0x_87,
		0x_A8, 0x_7E, 0x_BD, 0x_85, 0x_33, 0x_F1, 0x_28, 0x_E1, 0x_D0, 0x_6D, 0x_0E, 0x_FE, 0x_94, 0x_C8, 0x_BE,
		0x_59, 0x_56, 0x_3E, 0x_EB, 0x_46, 0x_89, 0x_21, 0x_EF, 0x_E0, 0x_47, 0x_CE, 0x_51, 0x_9E,
	];

	helper(S, BASE, 636_772);
}
// endregion
// region: s_has_signs_and_zeros_and_4_345_280_in_base_73
#[test]
fn s_has_signs_and_zeros_and_4_345_280_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_3F, 0x_2E, 0x_9F, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_87, 0x_35, 0x_90, 0x_E8, 0x_74, 0x_B6, 0x_7D, 0x_D3, 0x_71, 0x_A1, 0x_3F, 0x_2E, 0x_63, 0x_AE,
		0x_AC, 0x_55, 0x_2C, 0x_A6, 0x_C4, 0x_22, 0x_84, 0x_B5, 0x_04, 0x_56, 0x_EC, 0x_81, 0x_8E, 0x_26, 0x_9F,
		0x_62, 0x_53, 0x_8C, 0x_97, 0x_7A, 0x_7E, 0x_B9, 0x_43, 0x_17, 0x_6D, 0x_59, 0x_DE, 0x_3C, 0x_B8, 0x_3A,
		0x_AA, 0x_1D, 0x_40, 0x_10, 0x_ED, 0x_31, 0x_4F, 0x_D8, 0x_CC, 0x_C8, 0x_9D, 0x_EA, 0x_EB, 0x_98, 0x_D4,
		0x_7F, 0x_EE, 0x_85, 0x_9C, 0x_FD, 0x_AD, 0x_9E, 0x_15, 0x_8B, 0x_8A, 0x_23, 0x_4D, 0x_A8,
	];

	helper(S, BASE, 4_345_280);
}
// endregion
// region: s_has_signs_and_zeros_and_48_345_756_in_base_73
#[test]
fn s_has_signs_and_zeros_and_48_345_756_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1,
		0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1,
		0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_29, 0x_B9, 0x_EE, 0x_5F, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_D1, 0x_29, 0x_7B, 0x_64, 0x_AC, 0x_0E, 0x_61, 0x_F4, 0x_B0, 0x_CE, 0x_C9, 0x_B5, 0x_A7, 0x_AA, 0x_5F,
		0x_7A, 0x_1E, 0x_36, 0x_CF, 0x_75, 0x_EE, 0x_A9, 0x_76, 0x_98, 0x_06, 0x_33, 0x_DE, 0x_C7, 0x_19, 0x_8B,
		0x_EB, 0x_A8, 0x_C1, 0x_1F, 0x_9A, 0x_C2, 0x_17, 0x_40, 0x_1A, 0x_6D, 0x_E9, 0x_9D, 0x_6E, 0x_6B, 0x_F1,
		0x_C5, 0x_78, 0x_58, 0x_ED, 0x_8D, 0x_F2, 0x_B9, 0x_3D, 0x_27, 0x_D3, 0x_3E, 0x_9C, 0x_84, 0x_4A, 0x_5E,
		0x_85, 0x_B1, 0x_C6, 0x_F3, 0x_63, 0x_24, 0x_59, 0x_82, 0x_B6, 0x_B3, 0x_CD, 0x_67, 0x_38,
	];

	helper(S, BASE, 48_345_756);
}
// endregion
// region: s_has_signs_and_zeros_and_604_168_729_in_base_73
#[test]
fn s_has_signs_and_zeros_and_604_168_729_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29,
		0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_D2, 0x_79, 0x_28, 0x_2E,
		0x_EE,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_03, 0x_74, 0x_69, 0x_28, 0x_CC, 0x_07, 0x_B7, 0x_AD, 0x_7E, 0x_23, 0x_B4, 0x_89, 0x_AC, 0x_02,
		0x_1A, 0x_F1, 0x_44, 0x_EA, 0x_5B, 0x_79, 0x_D2, 0x_11, 0x_C2, 0x_7A, 0x_D8, 0x_39, 0x_5C, 0x_3E, 0x_1B,
		0x_84, 0x_33, 0x_CD, 0x_98, 0x_C0, 0x_AE, 0x_15, 0x_F8, 0x_94, 0x_8B, 0x_C3, 0x_97, 0x_71, 0x_34, 0x_59,
		0x_F4, 0x_2C, 0x_3D, 0x_82, 0x_17, 0x_A3, 0x_22, 0x_D7, 0x_65, 0x_2E, 0x_A2, 0x_F3, 0x_19, 0x_E7, 0x_E0,
		0x_57, 0x_DE, 0x_4A, 0x_91, 0x_51, 0x_E9, 0x_EB, 0x_80, 0x_5A, 0x_77, 0x_EE, 0x_95, 0x_38,
	];

	helper(S, BASE, 604_168_729);
}
// endregion
// region: s_has_signs_and_zeros_and_8_in_base_113
#[test]
fn s_has_signs_and_zeros_and_8_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_38, 0x_EA, 0x_59, 0x_B6, 0x_23, 0x_F1, 0x_0F, 0x_69, 0x_70, 0x_4D, 0x_A4, 0x_BB, 0x_F2, 0x_93,
		0x_55, 0x_66, 0x_22, 0x_64, 0x_36, 0x_62, 0x_17, 0x_67, 0x_EF, 0x_5A, 0x_DD, 0x_7E, 0x_D5, 0x_16, 0x_AD,
		0x_1A, 0x_B0, 0x_C6, 0x_86, 0x_15, 0x_D1, 0x_89, 0x_C5, 0x_8F, 0x_B8, 0x_C8, 0x_04, 0x_74, 0x_90, 0x_13,
		0x_AC, 0x_B7, 0x_01, 0x_A9, 0x_96, 0x_AA, 0x_6C, 0x_41, 0x_31, 0x_7A, 0x_40, 0x_CD, 0x_F8, 0x_ED, 0x_B5,
		0x_FE, 0x_9C, 0x_95, 0x_27, 0x_CE, 0x_47, 0x_11, 0x_91, 0x_D6, 0x_DE, 0x_6A, 0x_6E, 0x_78, 0x_07, 0x_4F,
		0x_54, 0x_4E, 0x_AF, 0x_E9, 0x_6B, 0x_5E, 0x_24, 0x_56, 0x_9D, 0x_E5, 0x_D0, 0x_AE, 0x_E0, 0x_21, 0x_C1,
		0x_7B, 0x_C7, 0x_3C, 0x_E2, 0x_C0, 0x_AB, 0x_D9, 0x_3D, 0x_0E, 0x_6D, 0x_08, 0x_E6, 0x_F4, 0x_E8, 0x_10,
		0x_79, 0x_FF, 0x_60, 0x_A7, 0x_FA, 0x_65, 0x_84, 0x_7C,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_signs_and_zeros_and_37_in_base_113
#[test]
fn s_has_signs_and_zeros_and_37_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_80, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_17, 0x_A8, 0x_5C, 0x_FA, 0x_68, 0x_6B, 0x_28, 0x_A1, 0x_4B, 0x_AA, 0x_D1, 0x_81, 0x_5E, 0x_E5,
		0x_88, 0x_F2, 0x_F4, 0x_29, 0x_C9, 0x_99, 0x_4A, 0x_58, 0x_35, 0x_AD, 0x_DD, 0x_8D, 0x_EF, 0x_87, 0x_22,
		0x_F8, 0x_73, 0x_E2, 0x_16, 0x_B4, 0x_11, 0x_AB, 0x_D5, 0x_47, 0x_6D, 0x_23, 0x_78, 0x_DA, 0x_0F, 0x_56,
		0x_53, 0x_E6, 0x_B2, 0x_DF, 0x_12, 0x_36, 0x_BB, 0x_89, 0x_A9, 0x_55, 0x_BF, 0x_8E, 0x_EB, 0x_10, 0x_A6,
		0x_06, 0x_AE, 0x_DC, 0x_C7, 0x_33, 0x_D7, 0x_BD, 0x_7E, 0x_AF, 0x_49, 0x_C8, 0x_19, 0x_74, 0x_67, 0x_26,
		0x_BC, 0x_C6, 0x_E3, 0x_45, 0x_EC, 0x_FE, 0x_1C, 0x_1D, 0x_D8, 0x_FF, 0x_52, 0x_CB, 0x_92, 0x_A4, 0x_64,
		0x_EE, 0x_3D, 0x_7D, 0x_42, 0x_13, 0x_C0, 0x_A5, 0x_D3, 0x_2C, 0x_24, 0x_41, 0x_07, 0x_62, 0x_50, 0x_D4,
		0x_B3, 0x_B6, 0x_60, 0x_97, 0x_9E, 0x_D9, 0x_A7, 0x_C3,
	];

	helper(S, BASE, 37);
}
// endregion
// region: s_has_signs_and_zeros_and_825_in_base_113
#[test]
fn s_has_signs_and_zeros_and_825_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66,
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66,
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66,
		0x_66, 0x_66, 0x_66, 0x_95, 0x_80,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_25, 0x_8E, 0x_30, 0x_3A, 0x_BF, 0x_D6, 0x_95, 0x_E8, 0x_5F, 0x_CB, 0x_36, 0x_82, 0x_60, 0x_76,
		0x_9A, 0x_FE, 0x_72, 0x_D0, 0x_B0, 0x_01, 0x_D9, 0x_55, 0x_46, 0x_D8, 0x_F7, 0x_B1, 0x_FF, 0x_0F, 0x_DB,
		0x_58, 0x_EF, 0x_9F, 0x_1E, 0x_80, 0x_4C, 0x_56, 0x_68, 0x_53, 0x_E6, 0x_FD, 0x_8B, 0x_F0, 0x_D3, 0x_EB,
		0x_6C, 0x_F1, 0x_A9, 0x_3D, 0x_62, 0x_3C, 0x_38, 0x_47, 0x_AA, 0x_03, 0x_C6, 0x_FC, 0x_14, 0x_04, 0x_EA,
		0x_41, 0x_1B, 0x_6B, 0x_5C, 0x_EC, 0x_C1, 0x_83, 0x_74, 0x_17, 0x_70, 0x_08, 0x_7D, 0x_43, 0x_19, 0x_D7,
		0x_D2, 0x_90, 0x_2C, 0x_22, 0x_32, 0x_C7, 0x_A1, 0x_3F, 0x_6E, 0x_CF, 0x_02, 0x_DD, 0x_18, 0x_84, 0x_87,
		0x_BE, 0x_F3, 0x_C5, 0x_34, 0x_57, 0x_75, 0x_E9, 0x_2A, 0x_16, 0x_A7, 0x_F4, 0x_BB, 0x_40, 0x_9C, 0x_B7,
		0x_1C, 0x_26, 0x_D1, 0x_6F, 0x_23, 0x_B6, 0x_92, 0x_AF,
	];

	helper(S, BASE, 825);
}
// endregion
// region: s_has_signs_and_zeros_and_6_668_in_base_113
#[test]
fn s_has_signs_and_zeros_and_6_668_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_7A,
		0x_07,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_07, 0x_1F, 0x_5A, 0x_13, 0x_03, 0x_9A, 0x_F5, 0x_DE, 0x_79, 0x_BC, 0x_FF, 0x_7B, 0x_9F, 0x_CA,
		0x_23, 0x_06, 0x_4A, 0x_6B, 0x_81, 0x_38, 0x_5B, 0x_EE, 0x_2F, 0x_51, 0x_24, 0x_4C, 0x_A4, 0x_7E, 0x_9E,
		0x_5C, 0x_4F, 0x_88, 0x_8F, 0x_D2, 0x_6A, 0x_1E, 0x_AF, 0x_3E, 0x_BF, 0x_CF, 0x_B9, 0x_73, 0x_82, 0x_40,
		0x_64, 0x_C8, 0x_58, 0x_14, 0x_C5, 0x_42, 0x_EC, 0x_62, 0x_6F, 0x_CC, 0x_E1, 0x_3F, 0x_BE, 0x_C6, 0x_7A,
		0x_C2, 0x_78, 0x_9B, 0x_D5, 0x_D3, 0x_77, 0x_3A, 0x_E0, 0x_D6, 0x_57, 0x_29, 0x_E8, 0x_E9, 0x_47, 0x_DB,
		0x_68, 0x_44, 0x_31, 0x_2C, 0x_37, 0x_E2, 0x_69, 0x_CE, 0x_28, 0x_AA, 0x_71, 0x_75, 0x_1B, 0x_D7, 0x_2A,
		0x_10, 0x_8D, 0x_6D, 0x_46, 0x_08, 0x_DD, 0x_C4, 0x_33, 0x_B2, 0x_A9, 0x_4E, 0x_17, 0x_8E, 0x_AB, 0x_39,
		0x_A3, 0x_25, 0x_FD, 0x_66, 0x_BB, 0x_84, 0x_27, 0x_50,
	];

	helper(S, BASE, 6_668);
}
// endregion
// region: s_has_signs_and_zeros_and_29_606_in_base_113
#[test]
fn s_has_signs_and_zeros_and_29_606_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_94, 0x_FC, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_86, 0x_94, 0x_F1, 0x_5A, 0x_22, 0x_6A, 0x_5E, 0x_0E, 0x_B7, 0x_A2, 0x_F9, 0x_46, 0x_A5, 0x_7E,
		0x_E3, 0x_7F, 0x_E1, 0x_30, 0x_BF, 0x_A3, 0x_79, 0x_D6, 0x_49, 0x_BE, 0x_92, 0x_10, 0x_A9, 0x_AA, 0x_31,
		0x_37, 0x_3A, 0x_76, 0x_CD, 0x_B4, 0x_ED, 0x_FC, 0x_7A, 0x_A1, 0x_68, 0x_6C, 0x_4D, 0x_77, 0x_59, 0x_C8,
		0x_39, 0x_CF, 0x_75, 0x_02, 0x_FE, 0x_4E, 0x_C2, 0x_E4, 0x_38, 0x_E5, 0x_DD, 0x_1E, 0x_29, 0x_45, 0x_67,
		0x_93, 0x_25, 0x_33, 0x_9D, 0x_A4, 0x_88, 0x_13, 0x_C0, 0x_85, 0x_FD, 0x_63, 0x_96, 0x_48, 0x_8B, 0x_21,
		0x_A6, 0x_05, 0x_5C, 0x_C3, 0x_D3, 0x_78, 0x_8D, 0x_35, 0x_60, 0x_99, 0x_42, 0x_C4, 0x_12, 0x_6E, 0x_A7,
		0x_1B, 0x_B6, 0x_C6, 0x_FF, 0x_47, 0x_07, 0x_8F, 0x_F8, 0x_9F, 0x_9B, 0x_53, 0x_04, 0x_3C, 0x_B1, 0x_73,
		0x_EB, 0x_81, 0x_BD, 0x_6B, 0x_AE, 0x_43, 0x_C9, 0x_D7,
	];

	helper(S, BASE, 29_606);
}
// endregion
// region: s_has_signs_and_zeros_and_452_272_in_base_113
#[test]
fn s_has_signs_and_zeros_and_452_272_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_8A, 0x_8A, 0x_8A, 0x_2A, 0x_CF, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_78, 0x_ED, 0x_CD, 0x_1B, 0x_F3, 0x_D2, 0x_63, 0x_FD, 0x_47, 0x_6B, 0x_14, 0x_35, 0x_81, 0x_97,
		0x_11, 0x_1D, 0x_C7, 0x_75, 0x_E8, 0x_9B, 0x_B9, 0x_EB, 0x_8D, 0x_79, 0x_B8, 0x_02, 0x_04, 0x_07, 0x_AA,
		0x_86, 0x_84, 0x_7E, 0x_BA, 0x_5F, 0x_2A, 0x_74, 0x_16, 0x_93, 0x_A4, 0x_50, 0x_5C, 0x_9E, 0x_3B, 0x_40,
		0x_3F, 0x_87, 0x_CF, 0x_90, 0x_03, 0x_5E, 0x_DA, 0x_B4, 0x_D8, 0x_EF, 0x_59, 0x_BF, 0x_56, 0x_30, 0x_3A,
		0x_06, 0x_D4, 0x_FF, 0x_A6, 0x_44, 0x_15, 0x_CC, 0x_72, 0x_C2, 0x_B2, 0x_54, 0x_53, 0x_EC, 0x_66, 0x_99,
		0x_26, 0x_80, 0x_92, 0x_94, 0x_E3, 0x_A7, 0x_D6, 0x_62, 0x_FA, 0x_D9, 0x_34, 0x_E9, 0x_70, 0x_61, 0x_2F,
		0x_96, 0x_4D, 0x_27, 0x_3C, 0x_22, 0x_41, 0x_5B, 0x_6A, 0x_E4, 0x_0E, 0x_B6, 0x_31, 0x_C3, 0x_9C, 0x_82,
		0x_17, 0x_1F, 0x_60, 0x_37, 0x_3D, 0x_42, 0x_E7, 0x_5A,
	];

	helper(S, BASE, 452_272);
}
// endregion
// region: s_has_signs_and_zeros_and_3_000_538_in_base_113
#[test]
fn s_has_signs_and_zeros_and_3_000_538_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_34, 0x_C6, 0x_F5, 0x_F6, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_B3, 0x_C6, 0x_4D, 0x_DC, 0x_5B, 0x_75, 0x_B6, 0x_F5, 0x_82, 0x_03, 0x_38, 0x_F0, 0x_83, 0x_95,
		0x_F2, 0x_35, 0x_DD, 0x_E1, 0x_78, 0x_E0, 0x_77, 0x_43, 0x_B0, 0x_A2, 0x_B2, 0x_8E, 0x_73, 0x_E5, 0x_93,
		0x_19, 0x_24, 0x_D8, 0x_27, 0x_BC, 0x_EF, 0x_D0, 0x_88, 0x_9C, 0x_7F, 0x_80, 0x_9B, 0x_4F, 0x_CC, 0x_55,
		0x_14, 0x_60, 0x_4C, 0x_A4, 0x_42, 0x_ED, 0x_F3, 0x_08, 0x_28, 0x_74, 0x_B4, 0x_3A, 0x_AB, 0x_9A, 0x_7A,
		0x_49, 0x_69, 0x_50, 0x_44, 0x_5C, 0x_99, 0x_E3, 0x_6F, 0x_5D, 0x_D9, 0x_64, 0x_5E, 0x_6A, 0x_46, 0x_9D,
		0x_2E, 0x_AE, 0x_D3, 0x_BA, 0x_3D, 0x_F4, 0x_02, 0x_A5, 0x_A1, 0x_86, 0x_1D, 0x_E7, 0x_E9, 0x_36, 0x_76,
		0x_6B, 0x_C2, 0x_72, 0x_15, 0x_61, 0x_FF, 0x_30, 0x_21, 0x_2F, 0x_3B, 0x_01, 0x_1E, 0x_84, 0x_AD, 0x_A6,
		0x_D6, 0x_31, 0x_58, 0x_A0, 0x_10, 0x_57, 0x_F6, 0x_FA,
	];

	helper(S, BASE, 3_000_538);
}
// endregion
// region: s_has_signs_and_zeros_and_45_547_224_in_base_113
#[test]
fn s_has_signs_and_zeros_and_45_547_224_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_BC, 0x_BC, 0x_07, 0x_6E, 0x_37, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_37, 0x_1B, 0x_C4, 0x_C0, 0x_16, 0x_F0, 0x_FA, 0x_6C, 0x_3D, 0x_EE, 0x_BA, 0x_4C, 0x_83, 0x_BD,
		0x_22, 0x_31, 0x_5F, 0x_12, 0x_EC, 0x_7C, 0x_8C, 0x_96, 0x_21, 0x_B9, 0x_C9, 0x_6F, 0x_A2, 0x_C2, 0x_48,
		0x_3C, 0x_07, 0x_E0, 0x_08, 0x_4B, 0x_A9, 0x_5D, 0x_9A, 0x_06, 0x_38, 0x_DF, 0x_A5, 0x_54, 0x_B7, 0x_39,
		0x_63, 0x_5C, 0x_D5, 0x_AD, 0x_ED, 0x_04, 0x_B5, 0x_50, 0x_CA, 0x_B1, 0x_E8, 0x_36, 0x_F4, 0x_E7, 0x_2F,
		0x_B2, 0x_FE, 0x_4A, 0x_03, 0x_6E, 0x_40, 0x_60, 0x_A0, 0x_02, 0x_7D, 0x_18, 0x_8D, 0x_D1, 0x_DE, 0x_10,
		0x_74, 0x_FF, 0x_E6, 0x_64, 0x_2A, 0x_8A, 0x_23, 0x_7A, 0x_B8, 0x_BB, 0x_66, 0x_11, 0x_C6, 0x_A6, 0x_E5,
		0x_6B, 0x_49, 0x_9F, 0x_45, 0x_F7, 0x_57, 0x_19, 0x_33, 0x_56, 0x_6D, 0x_FD, 0x_5B, 0x_59, 0x_A7, 0x_A8,
		0x_CE, 0x_D2, 0x_D7, 0x_EA, 0x_1D, 0x_25, 0x_E9, 0x_BF,
	];

	helper(S, BASE, 45_547_224);
}
// endregion
// region: s_has_signs_and_zeros_and_797_346_626_in_base_113
#[test]
fn s_has_signs_and_zeros_and_797_346_626_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_F7, 0x_F7, 0x_F7, 0x_F7,
		0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7,
		0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7,
		0x_F7, 0x_F7, 0x_F7, 0x_5B, 0x_DE, 0x_B6, 0x_E4, 0x_AC,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_59, 0x_1A, 0x_42, 0x_5B, 0x_40, 0x_01, 0x_B2, 0x_5D, 0x_26, 0x_21, 0x_DF, 0x_22, 0x_1D, 0x_6D,
		0x_F0, 0x_E0, 0x_F3, 0x_FF, 0x_86, 0x_51, 0x_58, 0x_A7, 0x_34, 0x_77, 0x_32, 0x_31, 0x_55, 0x_6A, 0x_36,
		0x_66, 0x_9C, 0x_63, 0x_F1, 0x_F5, 0x_CE, 0x_E9, 0x_0F, 0x_5A, 0x_D1, 0x_AF, 0x_9B, 0x_39, 0x_3B, 0x_3D,
		0x_3C, 0x_74, 0x_BC, 0x_02, 0x_AB, 0x_10, 0x_9A, 0x_EC, 0x_B4, 0x_E3, 0x_8F, 0x_79, 0x_E6, 0x_D0, 0x_AD,
		0x_D8, 0x_A1, 0x_A3, 0x_07, 0x_F6, 0x_CA, 0x_B5, 0x_B6, 0x_98, 0x_5E, 0x_19, 0x_75, 0x_EE, 0x_97, 0x_6C,
		0x_9D, 0x_80, 0x_CB, 0x_CC, 0x_B8, 0x_54, 0x_2A, 0x_D4, 0x_6B, 0x_64, 0x_28, 0x_E2, 0x_1C, 0x_CF, 0x_7A,
		0x_82, 0x_1B, 0x_45, 0x_61, 0x_AC, 0x_2E, 0x_87, 0x_A2, 0x_A8, 0x_F8, 0x_DE, 0x_89, 0x_60, 0x_AE, 0x_D6,
		0x_E4, 0x_7D, 0x_6E, 0x_B3, 0x_73, 0x_7F, 0x_6F, 0x_A9,
	];

	helper(S, BASE, 797_346_626);
}
// endregion
// region: s_has_signs_and_zeros_and_4_in_base_193
#[test]
fn s_has_signs_and_zeros_and_4_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_AF, 0x_91, 0x_94, 0x_E8, 0x_C5, 0x_4B, 0x_FB, 0x_C9, 0x_75, 0x_31, 0x_F6, 0x_C8, 0x_8D, 0x_1F,
		0x_EB, 0x_63, 0x_FC, 0x_4D, 0x_D9, 0x_4F, 0x_A6, 0x_41, 0x_F3, 0x_2C, 0x_BA, 0x_B4, 0x_7B, 0x_F5, 0x_E6,
		0x_88, 0x_A5, 0x_54, 0x_CC, 0x_42, 0x_6A, 0x_59, 0x_33, 0x_13, 0x_7F, 0x_16, 0x_BF, 0x_32, 0x_35, 0x_71,
		0x_61, 0x_DB, 0x_C6, 0x_A4, 0x_39, 0x_FE, 0x_25, 0x_BC, 0x_3B, 0x_A0, 0x_3A, 0x_6D, 0x_40, 0x_ED, 0x_77,
		0x_01, 0x_FA, 0x_64, 0x_5E, 0x_F8, 0x_70, 0x_E4, 0x_E5, 0x_9B, 0x_67, 0x_1E, 0x_D2, 0x_FD, 0x_A2, 0x_28,
		0x_90, 0x_B0, 0x_57, 0x_C7, 0x_C0, 0x_53, 0x_11, 0x_52, 0x_F0, 0x_86, 0x_1B, 0x_F1, 0x_97, 0x_6E, 0x_CA,
		0x_66, 0x_78, 0x_D5, 0x_65, 0x_D0, 0x_A1, 0x_AB, 0x_51, 0x_7C, 0x_C3, 0x_44, 0x_D4, 0x_23, 0x_8C, 0x_B9,
		0x_BB, 0x_F2, 0x_3F, 0x_AA, 0x_27, 0x_8B, 0x_DE, 0x_89, 0x_D1, 0x_84, 0x_98, 0x_E1, 0x_7A, 0x_A9, 0x_8F,
		0x_80, 0x_D3, 0x_24, 0x_9F, 0x_72, 0x_45, 0x_B5, 0x_CF, 0x_BE, 0x_2E, 0x_5B, 0x_8A, 0x_96, 0x_60, 0x_AC,
		0x_4C, 0x_0F, 0x_26, 0x_47, 0x_05, 0x_A7, 0x_15, 0x_AD, 0x_E2, 0x_5D, 0x_B8, 0x_9D, 0x_B2, 0x_FF, 0x_8E,
		0x_A8, 0x_58, 0x_43, 0x_B6, 0x_A3, 0x_EF, 0x_14, 0x_AE, 0x_7D, 0x_EA, 0x_55, 0x_99, 0x_E7, 0x_4A, 0x_E0,
		0x_87, 0x_D6, 0x_3E, 0x_17, 0x_B7, 0x_DF, 0x_9C, 0x_83, 0x_02, 0x_C4, 0x_0E, 0x_1C, 0x_E9, 0x_49, 0x_4E,
		0x_6B, 0x_76, 0x_5F, 0x_2A, 0x_34, 0x_29, 0x_79, 0x_1A, 0x_6C, 0x_EE, 0x_1D, 0x_30, 0x_2F,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_signs_and_zeros_and_15_in_base_193
#[test]
fn s_has_signs_and_zeros_and_15_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_8D, 0x_A4, 0x_38, 0x_33, 0x_3B, 0x_B9, 0x_30, 0x_60, 0x_A1, 0x_98, 0x_69, 0x_37, 0x_E5, 0x_B8,
		0x_AE, 0x_B5, 0x_DC, 0x_41, 0x_67, 0x_A2, 0x_05, 0x_58, 0x_84, 0x_EA, 0x_9A, 0x_70, 0x_7B, 0x_7E, 0x_73,
		0x_35, 0x_52, 0x_7A, 0x_85, 0x_C1, 0x_A7, 0x_FB, 0x_49, 0x_55, 0x_40, 0x_9C, 0x_32, 0x_62, 0x_54, 0x_24,
		0x_D2, 0x_9F, 0x_6F, 0x_D6, 0x_02, 0x_06, 0x_90, 0x_CA, 0x_27, 0x_5B, 0x_A8, 0x_F1, 0x_23, 0x_C8, 0x_1A,
		0x_88, 0x_BD, 0x_5A, 0x_63, 0x_A9, 0x_7D, 0x_B2, 0x_E6, 0x_18, 0x_E9, 0x_1F, 0x_A3, 0x_AC, 0x_BC, 0x_BB,
		0x_22, 0x_C7, 0x_8A, 0x_6E, 0x_3C, 0x_D7, 0x_11, 0x_08, 0x_BF, 0x_2E, 0x_AA, 0x_C3, 0x_F7, 0x_0E, 0x_03,
		0x_DF, 0x_34, 0x_E7, 0x_59, 0x_3D, 0x_12, 0x_EE, 0x_D5, 0x_D3, 0x_D1, 0x_ED, 0x_8C, 0x_1D, 0x_72, 0x_91,
		0x_50, 0x_F9, 0x_F0, 0x_9D, 0x_42, 0x_D8, 0x_5F, 0x_AB, 0x_FF, 0x_A5, 0x_76, 0x_5E, 0x_7C, 0x_25, 0x_15,
		0x_61, 0x_74, 0x_07, 0x_79, 0x_75, 0x_57, 0x_56, 0x_EB, 0x_D0, 0x_9B, 0x_68, 0x_A0, 0x_2A, 0x_B4, 0x_DA,
		0x_F6, 0x_99, 0x_13, 0x_E4, 0x_4D, 0x_94, 0x_D4, 0x_4B, 0x_71, 0x_3A, 0x_B0, 0x_87, 0x_C4, 0x_8B, 0x_10,
		0x_C9, 0x_65, 0x_0F, 0x_FD, 0x_8E, 0x_C6, 0x_DE, 0x_96, 0x_82, 0x_B7, 0x_CB, 0x_3F, 0x_F2, 0x_01, 0x_48,
		0x_7F, 0x_2F, 0x_29, 0x_3E, 0x_31, 0x_4E, 0x_04, 0x_C5, 0x_6D, 0x_26, 0x_BA, 0x_C0, 0x_78, 0x_53, 0x_CC,
		0x_86, 0x_CF, 0x_5D, 0x_BE, 0x_F5, 0x_DD, 0x_EC, 0x_AD, 0x_6C, 0x_B6, 0x_39, 0x_2C, 0x_E1,
	];

	helper(S, BASE, 15);
}
// endregion
// region: s_has_signs_and_zeros_and_932_in_base_193
#[test]
fn s_has_signs_and_zeros_and_932_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_92, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_71, 0x_B1, 0x_1C, 0x_92, 0x_5D, 0x_7D, 0x_37, 0x_9A, 0x_7A, 0x_C4, 0x_F9, 0x_AF, 0x_59, 0x_FF,
		0x_51, 0x_39, 0x_67, 0x_58, 0x_A2, 0x_5C, 0x_4E, 0x_AC, 0x_E2, 0x_72, 0x_ED, 0x_6A, 0x_9C, 0x_BF, 0x_A6,
		0x_C9, 0x_4B, 0x_A0, 0x_D4, 0x_C1, 0x_8F, 0x_E6, 0x_9E, 0x_FB, 0x_47, 0x_3C, 0x_36, 0x_F2, 0x_E3, 0x_76,
		0x_62, 0x_57, 0x_69, 0x_E5, 0x_D6, 0x_70, 0x_99, 0x_E8, 0x_A7, 0x_B5, 0x_81, 0x_65, 0x_4A, 0x_91, 0x_DC,
		0x_5E, 0x_85, 0x_11, 0x_FA, 0x_A1, 0x_31, 0x_33, 0x_14, 0x_80, 0x_43, 0x_B2, 0x_F3, 0x_CE, 0x_66, 0x_05,
		0x_BC, 0x_26, 0x_97, 0x_8C, 0x_54, 0x_C7, 0x_64, 0x_CF, 0x_6B, 0x_0E, 0x_F4, 0x_68, 0x_61, 0x_7E, 0x_32,
		0x_BA, 0x_D9, 0x_34, 0x_E7, 0x_F0, 0x_B6, 0x_AD, 0x_8E, 0x_86, 0x_E0, 0x_44, 0x_4C, 0x_C8, 0x_B3, 0x_50,
		0x_7C, 0x_04, 0x_D2, 0x_4F, 0x_08, 0x_F7, 0x_82, 0x_78, 0x_46, 0x_27, 0x_96, 0x_94, 0x_3A, 0x_4D, 0x_98,
		0x_F6, 0x_DD, 0x_16, 0x_5A, 0x_87, 0x_8B, 0x_C5, 0x_75, 0x_30, 0x_1E, 0x_74, 0x_AA, 0x_5F, 0x_89, 0x_17,
		0x_3E, 0x_77, 0x_7B, 0x_10, 0x_88, 0x_3D, 0x_CD, 0x_6E, 0x_EE, 0x_83, 0x_F1, 0x_E4, 0x_3B, 0x_13, 0x_CC,
		0x_EB, 0x_55, 0x_FE, 0x_60, 0x_02, 0x_03, 0x_95, 0x_3F, 0x_9F, 0x_63, 0x_C3, 0x_E9, 0x_2C, 0x_25, 0x_BD,
		0x_EA, 0x_B7, 0x_C2, 0x_FC, 0x_35, 0x_F5, 0x_D1, 0x_B8, 0x_D8, 0x_38, 0x_6F, 0x_56, 0x_90, 0x_D0, 0x_1A,
		0x_A9, 0x_48, 0x_53, 0x_45, 0x_6C, 0x_B4, 0x_52, 0x_1D, 0x_D3, 0x_DF, 0x_28, 0x_9D, 0x_C0,
	];

	helper(S, BASE, 932);
}
// endregion
// region: s_has_signs_and_zeros_and_6_312_in_base_193
#[test]
fn s_has_signs_and_zeros_and_6_312_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99,
		0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99,
		0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99,
		0x_99, 0x_99, 0x_99, 0x_03, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_9E, 0x_C1, 0x_21, 0x_4E, 0x_FC, 0x_66, 0x_F8, 0x_4A, 0x_B5, 0x_93, 0x_71, 0x_F9, 0x_CE, 0x_E6,
		0x_C3, 0x_96, 0x_AB, 0x_63, 0x_D6, 0x_CB, 0x_74, 0x_C5, 0x_D5, 0x_4F, 0x_7A, 0x_1F, 0x_69, 0x_A3, 0x_76,
		0x_13, 0x_7F, 0x_03, 0x_53, 0x_AC, 0x_6C, 0x_06, 0x_26, 0x_E8, 0x_8C, 0x_E1, 0x_86, 0x_24, 0x_8E, 0x_28,
		0x_BD, 0x_3E, 0x_F2, 0x_C7, 0x_58, 0x_52, 0x_44, 0x_BE, 0x_79, 0x_FD, 0x_F0, 0x_1C, 0x_04, 0x_2E, 0x_9F,
		0x_16, 0x_A5, 0x_E2, 0x_60, 0x_ED, 0x_40, 0x_C8, 0x_8A, 0x_EB, 0x_92, 0x_95, 0x_DB, 0x_91, 0x_1D, 0x_87,
		0x_AA, 0x_F6, 0x_32, 0x_DD, 0x_5A, 0x_4B, 0x_A2, 0x_82, 0x_78, 0x_B1, 0x_49, 0x_AE, 0x_12, 0x_A1, 0x_3B,
		0x_A4, 0x_7B, 0x_D1, 0x_5C, 0x_C2, 0x_36, 0x_17, 0x_BA, 0x_62, 0x_41, 0x_14, 0x_B2, 0x_E0, 0x_BC, 0x_0E,
		0x_70, 0x_45, 0x_3D, 0x_55, 0x_25, 0x_F1, 0x_D8, 0x_67, 0x_2F, 0x_EF, 0x_42, 0x_6F, 0x_3A, 0x_CF, 0x_68,
		0x_D3, 0x_33, 0x_E7, 0x_6D, 0x_5F, 0x_88, 0x_57, 0x_0F, 0x_CD, 0x_15, 0x_A0, 0x_EE, 0x_85, 0x_23, 0x_B4,
		0x_9C, 0x_B6, 0x_90, 0x_9B, 0x_35, 0x_D9, 0x_73, 0x_7D, 0x_7C, 0x_DA, 0x_B8, 0x_EA, 0x_F5, 0x_81, 0x_DE,
		0x_56, 0x_C4, 0x_31, 0x_8D, 0x_72, 0x_29, 0x_FF, 0x_4C, 0x_9D, 0x_CC, 0x_3C, 0x_84, 0x_DF, 0x_B7, 0x_2A,
		0x_75, 0x_6A, 0x_10, 0x_AD, 0x_1B, 0x_CA, 0x_22, 0x_65, 0x_A6, 0x_F4, 0x_61, 0x_18, 0x_19, 0x_D0, 0x_47,
		0x_FB, 0x_B9, 0x_E5, 0x_B0, 0x_FE, 0x_6B, 0x_8B, 0x_B3, 0x_A9, 0x_E3, 0x_80, 0x_7E, 0x_5D,
	];

	helper(S, BASE, 6_312);
}
// endregion
// region: s_has_signs_and_zeros_and_86_302_in_base_193
#[test]
fn s_has_signs_and_zeros_and_86_302_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_DE, 0x_B6, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_4E, 0x_DE, 0x_89, 0x_6F, 0x_EE, 0x_B4, 0x_D7, 0x_BF, 0x_C3, 0x_88, 0x_63, 0x_F8, 0x_6A, 0x_30,
		0x_56, 0x_4B, 0x_3A, 0x_6C, 0x_A7, 0x_AD, 0x_57, 0x_1D, 0x_A5, 0x_B9, 0x_9A, 0x_54, 0x_B7, 0x_AF, 0x_73,
		0x_2E, 0x_3C, 0x_36, 0x_FB, 0x_82, 0x_B1, 0x_7B, 0x_9C, 0x_8C, 0x_90, 0x_AE, 0x_06, 0x_BA, 0x_7E, 0x_8B,
		0x_76, 0x_B8, 0x_58, 0x_70, 0x_80, 0x_F5, 0x_34, 0x_F9, 0x_C2, 0x_01, 0x_33, 0x_78, 0x_1A, 0x_94, 0x_50,
		0x_FD, 0x_B6, 0x_66, 0x_DD, 0x_05, 0x_F4, 0x_81, 0x_6D, 0x_31, 0x_53, 0x_16, 0x_C5, 0x_A8, 0x_5D, 0x_52,
		0x_FE, 0x_DF, 0x_4F, 0x_C1, 0x_1C, 0x_2A, 0x_25, 0x_C9, 0x_EA, 0x_E0, 0x_6E, 0x_84, 0x_CC, 0x_E2, 0x_55,
		0x_71, 0x_B2, 0x_1F, 0x_9B, 0x_EC, 0x_AB, 0x_BD, 0x_C7, 0x_8D, 0x_37, 0x_7F, 0x_45, 0x_47, 0x_61, 0x_CB,
		0x_14, 0x_79, 0x_60, 0x_D5, 0x_43, 0x_92, 0x_93, 0x_69, 0x_17, 0x_85, 0x_E6, 0x_3D, 0x_7D, 0x_96, 0x_1E,
		0x_E4, 0x_A2, 0x_E7, 0x_24, 0x_8E, 0x_48, 0x_2C, 0x_E3, 0x_BE, 0x_B3, 0x_99, 0x_19, 0x_DC, 0x_AC, 0x_1B,
		0x_5E, 0x_9E, 0x_64, 0x_7C, 0x_9D, 0x_D0, 0x_49, 0x_5F, 0x_21, 0x_35, 0x_12, 0x_0F, 0x_DB, 0x_E5, 0x_CF,
		0x_5B, 0x_E1, 0x_D3, 0x_08, 0x_51, 0x_4D, 0x_8F, 0x_65, 0x_44, 0x_7A, 0x_A4, 0x_13, 0x_CA, 0x_59, 0x_BB,
		0x_C0, 0x_15, 0x_E8, 0x_F1, 0x_68, 0x_FC, 0x_A9, 0x_D2, 0x_FA, 0x_87, 0x_67, 0x_62, 0x_8A, 0x_27, 0x_3E,
		0x_D9, 0x_5C, 0x_3B, 0x_42, 0x_4C, 0x_74, 0x_B5, 0x_03, 0x_FF, 0x_CE, 0x_22, 0x_46, 0x_10,
	];

	helper(S, BASE, 86_302);
}
// endregion
// region: s_has_signs_and_zeros_and_681_406_in_base_193
#[test]
fn s_has_signs_and_zeros_and_681_406_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_F5, 0x_F5, 0x_8B, 0x_08, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_30, 0x_D9, 0x_87, 0x_75, 0x_7C, 0x_71, 0x_89, 0x_66, 0x_73, 0x_4C, 0x_7E, 0x_0F, 0x_18, 0x_C9,
		0x_FF, 0x_1F, 0x_B7, 0x_8B, 0x_67, 0x_F2, 0x_81, 0x_37, 0x_06, 0x_39, 0x_69, 0x_1A, 0x_4B, 0x_13, 0x_D0,
		0x_78, 0x_DF, 0x_46, 0x_42, 0x_AA, 0x_5C, 0x_23, 0x_51, 0x_3D, 0x_C2, 0x_9D, 0x_C8, 0x_04, 0x_70, 0x_A5,
		0x_0E, 0x_35, 0x_55, 0x_5B, 0x_5F, 0x_28, 0x_FB, 0x_B5, 0x_A7, 0x_CC, 0x_B2, 0x_08, 0x_A9, 0x_34, 0x_8A,
		0x_65, 0x_D4, 0x_F0, 0x_4D, 0x_19, 0x_50, 0x_03, 0x_6C, 0x_BE, 0x_40, 0x_8F, 0x_58, 0x_27, 0x_F7, 0x_2E,
		0x_CB, 0x_68, 0x_D5, 0x_A4, 0x_BD, 0x_F6, 0x_EA, 0x_59, 0x_9F, 0x_33, 0x_57, 0x_9B, 0x_94, 0x_6B, 0x_9E,
		0x_7A, 0x_63, 0x_24, 0x_91, 0x_1E, 0x_16, 0x_53, 0x_4E, 0x_ED, 0x_C4, 0x_2A, 0x_AF, 0x_7F, 0x_D6, 0x_98,
		0x_4F, 0x_36, 0x_9C, 0x_54, 0x_25, 0x_CF, 0x_85, 0x_64, 0x_74, 0x_EF, 0x_F3, 0x_93, 0x_C3, 0x_CD, 0x_14,
		0x_99, 0x_80, 0x_C6, 0x_48, 0x_44, 0x_7B, 0x_A8, 0x_95, 0x_B3, 0x_E5, 0x_5A, 0x_32, 0x_F9, 0x_47, 0x_6F,
		0x_1D, 0x_EC, 0x_E3, 0x_90, 0x_AD, 0x_A1, 0x_EE, 0x_72, 0x_E6, 0x_B8, 0x_3F, 0x_B6, 0x_82, 0x_43, 0x_77,
		0x_49, 0x_D7, 0x_56, 0x_8E, 0x_3B, 0x_DB, 0x_DD, 0x_01, 0x_AB, 0x_12, 0x_21, 0x_41, 0x_A2, 0x_D3, 0x_D8,
		0x_6A, 0x_8C, 0x_62, 0x_1C, 0x_B0, 0x_D1, 0x_F8, 0x_3A, 0x_AE, 0x_E1, 0x_2F, 0x_52, 0x_17, 0x_A0, 0x_10,
		0x_DA, 0x_15, 0x_84, 0x_60, 0x_07, 0x_3E, 0x_6E, 0x_FC, 0x_05, 0x_83, 0x_CA, 0x_88, 0x_D2,
	];

	helper(S, BASE, 681_406);
}
// endregion
// region: s_has_signs_and_zeros_and_2_648_986_in_base_193
#[test]
fn s_has_signs_and_zeros_and_2_648_986_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3,
		0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3,
		0x_C3, 0x_96, 0x_B8, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_BA, 0x_73, 0x_A9, 0x_49, 0x_1E, 0x_AA, 0x_67, 0x_A7, 0x_AC, 0x_AD, 0x_A0, 0x_16, 0x_E3, 0x_D1,
		0x_32, 0x_2A, 0x_83, 0x_62, 0x_7C, 0x_F1, 0x_E4, 0x_B8, 0x_F5, 0x_97, 0x_F6, 0x_B1, 0x_23, 0x_61, 0x_9C,
		0x_F7, 0x_36, 0x_8D, 0x_2C, 0x_EC, 0x_40, 0x_8B, 0x_57, 0x_72, 0x_6C, 0x_C9, 0x_28, 0x_C6, 0x_56, 0x_76,
		0x_E1, 0x_CF, 0x_51, 0x_7B, 0x_DC, 0x_8C, 0x_60, 0x_1F, 0x_A3, 0x_DA, 0x_FF, 0x_4C, 0x_E2, 0x_3C, 0x_69,
		0x_FD, 0x_EA, 0x_45, 0x_24, 0x_F0, 0x_42, 0x_8A, 0x_95, 0x_B5, 0x_81, 0x_30, 0x_96, 0x_50, 0x_5D, 0x_EB,
		0x_ED, 0x_7A, 0x_4E, 0x_12, 0x_11, 0x_14, 0x_A5, 0x_CD, 0x_86, 0x_D0, 0x_9E, 0x_F3, 0x_C1, 0x_48, 0x_0E,
		0x_84, 0x_26, 0x_B9, 0x_22, 0x_E9, 0x_25, 0x_F8, 0x_FC, 0x_78, 0x_8F, 0x_93, 0x_59, 0x_D4, 0x_9A, 0x_17,
		0x_71, 0x_3A, 0x_AF, 0x_5F, 0x_89, 0x_E8, 0x_77, 0x_87, 0x_39, 0x_E0, 0x_E5, 0x_66, 0x_15, 0x_21, 0x_75,
		0x_AE, 0x_EE, 0x_37, 0x_70, 0x_47, 0x_D8, 0x_4F, 0x_EF, 0x_DE, 0x_03, 0x_3E, 0x_9B, 0x_85, 0x_07, 0x_01,
		0x_02, 0x_CA, 0x_E7, 0x_04, 0x_41, 0x_94, 0x_4A, 0x_4D, 0x_BF, 0x_C8, 0x_90, 0x_DF, 0x_1A, 0x_E6, 0x_88,
		0x_F4, 0x_D2, 0x_52, 0x_05, 0x_46, 0x_BB, 0x_98, 0x_A1, 0x_92, 0x_5C, 0x_9D, 0x_CE, 0x_CC, 0x_3B, 0x_1B,
		0x_54, 0x_63, 0x_DB, 0x_D3, 0x_55, 0x_5E, 0x_D9, 0x_19, 0x_35, 0x_3F, 0x_53, 0x_B2, 0x_74, 0x_80, 0x_2E,
		0x_F2, 0x_82, 0x_2F, 0x_A6, 0x_58, 0x_FE, 0x_29, 0x_9F, 0x_C5, 0x_1C, 0x_5B, 0x_7E, 0x_44,
	];

	helper(S, BASE, 2_648_986);
}
// endregion
// region: s_has_signs_and_zeros_and_71_826_482_in_base_193
#[test]
fn s_has_signs_and_zeros_and_71_826_482_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_D4, 0x_92, 0x_66, 0x_9A, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_DE, 0x_D9, 0x_D0, 0x_8E, 0x_91, 0x_86, 0x_B1, 0x_D7, 0x_92, 0x_F1, 0x_36, 0x_6E, 0x_02, 0x_19,
		0x_13, 0x_E4, 0x_D5, 0x_7B, 0x_57, 0x_EE, 0x_A7, 0x_85, 0x_8F, 0x_61, 0x_D2, 0x_A9, 0x_CE, 0x_37, 0x_41,
		0x_43, 0x_6A, 0x_C0, 0x_80, 0x_D6, 0x_06, 0x_1D, 0x_C3, 0x_7C, 0x_42, 0x_B5, 0x_45, 0x_C1, 0x_51, 0x_E5,
		0x_30, 0x_04, 0x_48, 0x_71, 0x_0E, 0x_73, 0x_1A, 0x_88, 0x_9A, 0x_5A, 0x_70, 0x_6C, 0x_A8, 0x_A3, 0x_DC,
		0x_3E, 0x_2E, 0x_AB, 0x_7E, 0x_B0, 0x_39, 0x_E6, 0x_AC, 0x_F0, 0x_E9, 0x_76, 0x_3A, 0x_BA, 0x_29, 0x_DB,
		0x_90, 0x_3D, 0x_5D, 0x_6F, 0x_82, 0x_A6, 0x_32, 0x_5E, 0x_97, 0x_47, 0x_F5, 0x_52, 0x_40, 0x_26, 0x_38,
		0x_AF, 0x_E2, 0x_60, 0x_22, 0x_F9, 0x_BB, 0x_64, 0x_28, 0x_93, 0x_0F, 0x_59, 0x_12, 0x_78, 0x_F7, 0x_72,
		0x_1B, 0x_6D, 0x_54, 0x_7F, 0x_CC, 0x_4F, 0x_31, 0x_35, 0x_5F, 0x_FA, 0x_C8, 0x_05, 0x_2A, 0x_62, 0x_DD,
		0x_03, 0x_B6, 0x_FD, 0x_2C, 0x_F4, 0x_FF, 0x_2F, 0x_4B, 0x_9D, 0x_3C, 0x_A5, 0x_21, 0x_75, 0x_34, 0x_11,
		0x_74, 0x_FB, 0x_8A, 0x_B9, 0x_53, 0x_E8, 0x_ED, 0x_BF, 0x_BE, 0x_14, 0x_C2, 0x_68, 0x_9E, 0x_BC, 0x_08,
		0x_D3, 0x_07, 0x_C5, 0x_9B, 0x_1E, 0x_EA, 0x_67, 0x_79, 0x_56, 0x_D1, 0x_E7, 0x_C4, 0x_49, 0x_3F, 0x_25,
		0x_A2, 0x_FC, 0x_98, 0x_C7, 0x_5C, 0x_44, 0x_DF, 0x_84, 0x_7D, 0x_69, 0x_B2, 0x_4C, 0x_94, 0x_CB, 0x_87,
		0x_EB, 0x_B7, 0x_65, 0x_F2, 0x_A0, 0x_4E, 0x_16, 0x_C9, 0x_15, 0x_89, 0x_95, 0x_66, 0x_10,
	];

	helper(S, BASE, 71_826_482);
}
// endregion
// region: s_has_signs_and_zeros_and_990_752_654_in_base_193
#[test]
fn s_has_signs_and_zeros_and_990_752_654_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C,
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C,
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_34,
		0x_80, 0x_FC, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_1E, 0x_D1, 0x_49, 0x_D6, 0x_33, 0x_42, 0x_3A, 0x_4E, 0x_7B, 0x_F9, 0x_A2, 0x_9C, 0x_AF, 0x_77,
		0x_D2, 0x_8F, 0x_18, 0x_79, 0x_FC, 0x_EC, 0x_6C, 0x_35, 0x_4F, 0x_B4, 0x_F1, 0x_A9, 0x_95, 0x_CF, 0x_31,
		0x_3D, 0x_FD, 0x_C8, 0x_9B, 0x_27, 0x_90, 0x_05, 0x_C2, 0x_E5, 0x_CA, 0x_93, 0x_E2, 0x_C0, 0x_1C, 0x_E9,
		0x_99, 0x_75, 0x_54, 0x_43, 0x_BD, 0x_55, 0x_8D, 0x_66, 0x_03, 0x_C5, 0x_DF, 0x_CC, 0x_9A, 0x_E8, 0x_9F,
		0x_F5, 0x_9D, 0x_02, 0x_28, 0x_BC, 0x_C4, 0x_1B, 0x_04, 0x_10, 0x_88, 0x_46, 0x_97, 0x_3C, 0x_C6, 0x_DA,
		0x_92, 0x_14, 0x_63, 0x_AB, 0x_30, 0x_4D, 0x_5C, 0x_68, 0x_C3, 0x_FF, 0x_D0, 0x_65, 0x_41, 0x_74, 0x_13,
		0x_B2, 0x_A1, 0x_AE, 0x_E7, 0x_70, 0x_8A, 0x_BA, 0x_89, 0x_7F, 0x_EA, 0x_98, 0x_94, 0x_A6, 0x_23, 0x_E0,
		0x_1A, 0x_11, 0x_F0, 0x_B5, 0x_4C, 0x_6F, 0x_6D, 0x_1D, 0x_7A, 0x_17, 0x_E4, 0x_4B, 0x_58, 0x_A8, 0x_57,
		0x_60, 0x_12, 0x_51, 0x_5A, 0x_DB, 0x_71, 0x_A5, 0x_08, 0x_C7, 0x_6A, 0x_06, 0x_A4, 0x_82, 0x_52, 0x_3E,
		0x_F3, 0x_85, 0x_34, 0x_5D, 0x_67, 0x_DD, 0x_21, 0x_8C, 0x_B0, 0x_01, 0x_5F, 0x_F7, 0x_AC, 0x_59, 0x_B6,
		0x_2F, 0x_B9, 0x_61, 0x_24, 0x_83, 0x_36, 0x_EB, 0x_80, 0x_B8, 0x_CE, 0x_37, 0x_C1, 0x_F2, 0x_47, 0x_A7,
		0x_B1, 0x_32, 0x_EE, 0x_D4, 0x_D5, 0x_73, 0x_F8, 0x_40, 0x_DC, 0x_81, 0x_64, 0x_AA, 0x_0F, 0x_5E, 0x_3F,
		0x_87, 0x_F4, 0x_CB, 0x_C9, 0x_A3, 0x_FE, 0x_2C, 0x_8B, 0x_29, 0x_07, 0x_2A, 0x_1F, 0x_BB,
	];

	helper(S, BASE, 990_752_654);
}
// endregion
// region: s_has_signs_and_zeros_and_4_in_base_247
#[test]
fn s_has_signs_and_zeros_and_4_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_FB, 0x_FB, 0x_FB, 0x_FB,
		0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB,
		0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_CF, 0x_17, 0x_43, 0x_D4, 0x_37, 0x_C0, 0x_89, 0x_7F, 0x_B0, 0x_7D, 0x_42, 0x_03, 0x_62, 0x_A5,
		0x_E1, 0x_87, 0x_2C, 0x_3C, 0x_4E, 0x_D2, 0x_90, 0x_CC, 0x_E0, 0x_C1, 0x_B5, 0x_32, 0x_FC, 0x_3E, 0x_22,
		0x_7C, 0x_EC, 0x_0F, 0x_FE, 0x_B1, 0x_73, 0x_A3, 0x_BA, 0x_BE, 0x_94, 0x_6A, 0x_63, 0x_3D, 0x_3B, 0x_F7,
		0x_AE, 0x_70, 0x_9C, 0x_B7, 0x_78, 0x_1A, 0x_E5, 0x_F0, 0x_13, 0x_76, 0x_06, 0x_44, 0x_80, 0x_D0, 0x_F6,
		0x_27, 0x_BD, 0x_1D, 0x_DA, 0x_91, 0x_9F, 0x_B9, 0x_B2, 0x_A2, 0x_96, 0x_1B, 0x_53, 0x_C2, 0x_D8, 0x_8B,
		0x_85, 0x_12, 0x_47, 0x_C4, 0x_5C, 0x_79, 0x_8A, 0x_DB, 0x_D6, 0x_7E, 0x_8E, 0x_4B, 0x_4A, 0x_81, 0x_54,
		0x_64, 0x_83, 0x_84, 0x_2E, 0x_61, 0x_E3, 0x_F5, 0x_98, 0x_19, 0x_28, 0x_9E, 0x_F9, 0x_FA, 0x_D3, 0x_46,
		0x_57, 0x_C7, 0x_CA, 0x_4F, 0x_A8, 0x_E7, 0x_25, 0x_7B, 0x_16, 0x_AB, 0x_14, 0x_58, 0x_26, 0x_65, 0x_E4,
		0x_4D, 0x_FD, 0x_A7, 0x_67, 0x_D7, 0x_ED, 0x_49, 0x_29, 0x_72, 0x_CD, 0x_36, 0x_FF, 0x_DE, 0x_1E, 0x_F8,
		0x_99, 0x_DC, 0x_0E, 0x_E6, 0x_3A, 0x_04, 0x_82, 0x_1C, 0x_5B, 0x_6F, 0x_CB, 0x_88, 0x_50, 0x_F2, 0x_C8,
		0x_4C, 0x_01, 0x_8F, 0x_EB, 0x_93, 0x_39, 0x_6C, 0x_D5, 0x_1F, 0x_EE, 0x_95, 0x_A6, 0x_60, 0x_69, 0x_40,
		0x_AC, 0x_55, 0x_52, 0x_C9, 0x_34, 0x_66, 0x_CE, 0x_F4, 0x_51, 0x_AD, 0x_5D, 0x_B6, 0x_21, 0x_9A, 0x_A0,
		0x_5F, 0x_6B, 0x_15, 0x_35, 0x_74, 0x_B3, 0x_10, 0x_EF, 0x_C6, 0x_11, 0x_75, 0x_7A, 0x_23, 0x_24, 0x_59,
		0x_A9, 0x_92, 0x_E8, 0x_33, 0x_77, 0x_BB, 0x_A1, 0x_5E, 0x_8C, 0x_2F, 0x_68, 0x_45, 0x_AF, 0x_6D, 0x_05,
		0x_E9, 0x_97, 0x_9B, 0x_71, 0x_E2, 0x_9D, 0x_EA, 0x_B4, 0x_02, 0x_D9, 0x_30, 0x_F1, 0x_08, 0x_38, 0x_F3,
		0x_3F, 0x_18, 0x_5A, 0x_DD, 0x_56, 0x_8D, 0x_41, 0x_48, 0x_B8, 0x_C5, 0x_07, 0x_BF, 0x_BC, 0x_AA, 0x_A4,
		0x_D1, 0x_DF, 0x_6E, 0x_31, 0x_86, 0x_C3, 0x_2A,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_signs_and_zeros_and_77_in_base_247
#[test]
fn s_has_signs_and_zeros_and_77_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_61, 0x_1B, 0x_6F, 0x_57, 0x_18, 0x_40, 0x_CC, 0x_F8, 0x_12, 0x_CD, 0x_80, 0x_5E, 0x_71, 0x_EE,
		0x_C9, 0x_9A, 0x_17, 0x_26, 0x_25, 0x_F3, 0x_EC, 0x_C6, 0x_8D, 0x_41, 0x_CA, 0x_94, 0x_B9, 0x_F9, 0x_DC,
		0x_EB, 0x_24, 0x_4D, 0x_30, 0x_98, 0x_F2, 0x_BC, 0x_16, 0x_A2, 0x_48, 0x_88, 0x_EF, 0x_64, 0x_39, 0x_99,
		0x_2F, 0x_03, 0x_FC, 0x_5C, 0x_4C, 0x_49, 0x_46, 0x_E3, 0x_27, 0x_2C, 0x_0F, 0x_6A, 0x_92, 0x_8B, 0x_7E,
		0x_8A, 0x_E0, 0x_43, 0x_E5, 0x_CB, 0x_AA, 0x_47, 0x_54, 0x_3D, 0x_E4, 0x_B4, 0x_5B, 0x_9E, 0x_ED, 0x_35,
		0x_1D, 0x_74, 0x_C1, 0x_77, 0x_C2, 0x_97, 0x_4F, 0x_08, 0x_C7, 0x_53, 0x_AE, 0x_10, 0x_C4, 0x_67, 0x_D2,
		0x_06, 0x_E8, 0x_D5, 0x_A5, 0x_2A, 0x_8F, 0x_A7, 0x_3B, 0x_7A, 0x_22, 0x_3F, 0x_1A, 0x_96, 0x_62, 0x_F1,
		0x_66, 0x_73, 0x_4A, 0x_15, 0x_BA, 0x_8E, 0x_E6, 0x_7B, 0x_34, 0x_C0, 0x_81, 0x_59, 0x_93, 0x_3A, 0x_58,
		0x_D1, 0x_B1, 0x_45, 0x_C8, 0x_D6, 0x_28, 0x_83, 0x_FD, 0x_44, 0x_D7, 0x_9D, 0x_70, 0x_B7, 0x_D4, 0x_79,
		0x_A3, 0x_01, 0x_AB, 0x_60, 0x_89, 0x_BE, 0x_BF, 0x_36, 0x_05, 0x_91, 0x_3E, 0x_B6, 0x_B2, 0x_5F, 0x_DB,
		0x_B0, 0x_EA, 0x_6C, 0x_7F, 0x_42, 0x_65, 0x_7D, 0x_13, 0x_7C, 0x_38, 0x_19, 0x_86, 0x_2E, 0x_1E, 0x_E9,
		0x_6D, 0x_69, 0x_B5, 0x_F4, 0x_DA, 0x_29, 0x_AF, 0x_A0, 0x_9B, 0x_D3, 0x_DE, 0x_14, 0x_55, 0x_90, 0x_9F,
		0x_FA, 0x_A4, 0x_E7, 0x_AC, 0x_F6, 0x_32, 0x_75, 0x_3C, 0x_63, 0x_D8, 0x_4E, 0x_8C, 0x_78, 0x_5A, 0x_6E,
		0x_51, 0x_FE, 0x_A1, 0x_C5, 0x_E2, 0x_6B, 0x_F5, 0x_84, 0x_CE, 0x_A8, 0x_33, 0x_FF, 0x_82, 0x_52, 0x_50,
		0x_CF, 0x_E1, 0x_11, 0x_DD, 0x_D0, 0x_AD, 0x_F7, 0x_9C, 0x_A6, 0x_A9, 0x_C3, 0x_95, 0x_23, 0x_FB, 0x_DF,
		0x_76, 0x_04, 0x_87, 0x_5D, 0x_BD, 0x_07, 0x_31, 0x_85, 0x_1C, 0x_56, 0x_0E, 0x_1F, 0x_D9, 0x_68, 0x_B3,
		0x_4B, 0x_B8, 0x_BB, 0x_37, 0x_72, 0x_02, 0x_F0,
	];

	helper(S, BASE, 77);
}
// endregion
// region: s_has_signs_and_zeros_and_829_in_base_247
#[test]
fn s_has_signs_and_zeros_and_829_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_4A, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_70, 0x_EA, 0x_4A, 0x_9D, 0x_59, 0x_32, 0x_96, 0x_98, 0x_ED, 0x_CD, 0x_73, 0x_CF, 0x_45, 0x_8D,
		0x_E8, 0x_30, 0x_AB, 0x_B5, 0x_B2, 0x_49, 0x_21, 0x_12, 0x_85, 0x_F5, 0x_A8, 0x_C2, 0x_EB, 0x_E9, 0x_84,
		0x_37, 0x_1B, 0x_EF, 0x_E0, 0x_48, 0x_AC, 0x_17, 0x_A2, 0x_D4, 0x_77, 0x_04, 0x_75, 0x_E7, 0x_6C, 0x_2F,
		0x_71, 0x_2E, 0x_CA, 0x_E6, 0x_C9, 0x_6E, 0x_25, 0x_C4, 0x_28, 0x_65, 0x_BE, 0x_18, 0x_1C, 0x_FD, 0x_E4,
		0x_78, 0x_8C, 0x_95, 0x_46, 0x_CE, 0x_8E, 0x_F6, 0x_A0, 0x_83, 0x_DF, 0x_FC, 0x_D2, 0x_08, 0x_F3, 0x_87,
		0x_DC, 0x_A6, 0x_76, 0x_E1, 0x_1A, 0x_B1, 0x_C7, 0x_1D, 0x_4D, 0x_F8, 0x_EE, 0x_24, 0x_16, 0x_44, 0x_9F,
		0x_A1, 0x_6D, 0x_AE, 0x_86, 0x_14, 0x_1F, 0x_F4, 0x_43, 0x_89, 0x_64, 0x_35, 0x_93, 0x_5F, 0x_6B, 0x_9A,
		0x_27, 0x_BD, 0x_7A, 0x_03, 0x_36, 0x_D0, 0x_10, 0x_4C, 0x_B6, 0x_9B, 0x_C1, 0x_CB, 0x_72, 0x_FB, 0x_5B,
		0x_19, 0x_D8, 0x_68, 0x_79, 0x_5D, 0x_A7, 0x_51, 0x_F7, 0x_F1, 0x_B9, 0x_6A, 0x_15, 0x_D5, 0x_62, 0x_7D,
		0x_63, 0x_E5, 0x_26, 0x_97, 0x_A3, 0x_55, 0x_67, 0x_F2, 0x_A4, 0x_74, 0x_92, 0x_3D, 0x_29, 0x_F0, 0x_8B,
		0x_0F, 0x_41, 0x_11, 0x_3A, 0x_8F, 0x_82, 0x_2A, 0x_01, 0x_3B, 0x_B7, 0x_BC, 0x_BA, 0x_4F, 0x_BF, 0x_D7,
		0x_7C, 0x_54, 0x_39, 0x_34, 0x_81, 0x_6F, 0x_33, 0x_B0, 0x_90, 0x_60, 0x_2C, 0x_52, 0x_0E, 0x_AA, 0x_57,
		0x_53, 0x_AF, 0x_DD, 0x_C8, 0x_FA, 0x_FE, 0x_7B, 0x_50, 0x_B3, 0x_BB, 0x_A9, 0x_D1, 0x_B4, 0x_E2, 0x_31,
		0x_94, 0x_61, 0x_D6, 0x_5C, 0x_5E, 0x_E3, 0x_9E, 0x_F9, 0x_4E, 0x_23, 0x_47, 0x_EC, 0x_58, 0x_91, 0x_3E,
		0x_B8, 0x_C6, 0x_A5, 0x_D9, 0x_22, 0x_56, 0x_69, 0x_3F, 0x_CC, 0x_7E, 0x_3C, 0x_06, 0x_13, 0x_FF, 0x_07,
		0x_66, 0x_9C, 0x_C5, 0x_99, 0x_DE, 0x_38, 0x_02, 0x_88, 0x_1E, 0x_DA, 0x_40, 0x_8A, 0x_5A, 0x_7F, 0x_C0,
		0x_05, 0x_DB, 0x_AD, 0x_42, 0x_4B, 0x_C3, 0x_D3,
	];

	helper(S, BASE, 829);
}
// endregion
// region: s_has_signs_and_zeros_and_8_365_in_base_247
#[test]
fn s_has_signs_and_zeros_and_8_365_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8,
		0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_6F, 0x_7D,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_03, 0x_8D, 0x_F3, 0x_84, 0x_B5, 0x_C7, 0x_8A, 0x_A9, 0x_82, 0x_78, 0x_9A, 0x_61, 0x_87, 0x_55,
		0x_FD, 0x_F2, 0x_B9, 0x_FA, 0x_E2, 0x_35, 0x_BC, 0x_C3, 0x_D6, 0x_C6, 0x_32, 0x_B6, 0x_CA, 0x_8B, 0x_DF,
		0x_89, 0x_44, 0x_52, 0x_6F, 0x_05, 0x_D8, 0x_69, 0x_93, 0x_CF, 0x_23, 0x_07, 0x_72, 0x_E0, 0x_FC, 0x_76,
		0x_5D, 0x_88, 0x_E9, 0x_4E, 0x_48, 0x_12, 0x_B1, 0x_13, 0x_86, 0x_33, 0x_17, 0x_D3, 0x_D9, 0x_CD, 0x_A3,
		0x_DA, 0x_96, 0x_3B, 0x_62, 0x_7B, 0x_1D, 0x_31, 0x_C8, 0x_43, 0x_5C, 0x_A8, 0x_64, 0x_E1, 0x_DE, 0x_77,
		0x_2A, 0x_BE, 0x_D5, 0x_A6, 0x_53, 0x_FF, 0x_73, 0x_3C, 0x_0E, 0x_C0, 0x_9F, 0x_68, 0x_46, 0x_7C, 0x_54,
		0x_01, 0x_F5, 0x_8F, 0x_1F, 0x_90, 0x_FB, 0x_99, 0x_BA, 0x_38, 0x_6D, 0x_1C, 0x_39, 0x_5A, 0x_3A, 0x_FE,
		0x_DC, 0x_EB, 0x_51, 0x_E3, 0x_85, 0x_1B, 0x_04, 0x_98, 0x_27, 0x_56, 0x_22, 0x_57, 0x_AE, 0x_CC, 0x_29,
		0x_D2, 0x_DB, 0x_B2, 0x_AD, 0x_3F, 0x_58, 0x_B0, 0x_70, 0x_37, 0x_08, 0x_BF, 0x_C9, 0x_5F, 0x_5B, 0x_E7,
		0x_C5, 0x_7F, 0x_14, 0x_F9, 0x_EA, 0x_63, 0x_9E, 0x_A7, 0x_2C, 0x_AF, 0x_7E, 0x_B4, 0x_EE, 0x_11, 0x_81,
		0x_A0, 0x_1E, 0x_B3, 0x_9D, 0x_B7, 0x_30, 0x_6C, 0x_3D, 0x_6B, 0x_D1, 0x_74, 0x_BD, 0x_7A, 0x_18, 0x_AC,
		0x_A5, 0x_60, 0x_66, 0x_AA, 0x_95, 0x_C2, 0x_42, 0x_CE, 0x_ED, 0x_EC, 0x_F7, 0x_C1, 0x_67, 0x_F6, 0x_28,
		0x_92, 0x_47, 0x_6E, 0x_71, 0x_0F, 0x_E4, 0x_40, 0x_2E, 0x_06, 0x_24, 0x_50, 0x_AB, 0x_19, 0x_4A, 0x_5E,
		0x_DD, 0x_10, 0x_1A, 0x_F0, 0x_4B, 0x_97, 0x_02, 0x_36, 0x_A4, 0x_75, 0x_9B, 0x_EF, 0x_79, 0x_83, 0x_3E,
		0x_E8, 0x_16, 0x_9C, 0x_15, 0x_7D, 0x_59, 0x_21, 0x_4F, 0x_26, 0x_D7, 0x_4C, 0x_91, 0x_25, 0x_CB, 0x_C4,
		0x_6A, 0x_A1, 0x_E6, 0x_A2, 0x_D4, 0x_BB, 0x_2F, 0x_F1, 0x_4D, 0x_65, 0x_49, 0x_45, 0x_8E, 0x_34, 0x_94,
		0x_E5, 0x_F8, 0x_80, 0x_F4, 0x_8C, 0x_41, 0x_D0,
	];

	helper(S, BASE, 8_365);
}
// endregion
// region: s_has_signs_and_zeros_and_82_739_in_base_247
#[test]
fn s_has_signs_and_zeros_and_82_739_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_A4, 0x_9A, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_A4, 0x_3F, 0x_E6, 0x_78, 0x_3C, 0x_26, 0x_05, 0x_97, 0x_40, 0x_F6, 0x_4C, 0x_E1, 0x_C9, 0x_18,
		0x_CA, 0x_2A, 0x_43, 0x_9F, 0x_B5, 0x_87, 0x_BE, 0x_28, 0x_35, 0x_D3, 0x_17, 0x_79, 0x_EE, 0x_B8, 0x_60,
		0x_B6, 0x_7E, 0x_07, 0x_11, 0x_44, 0x_8C, 0x_BD, 0x_CD, 0x_F2, 0x_6C, 0x_5E, 0x_94, 0x_F9, 0x_6A, 0x_29,
		0x_D8, 0x_37, 0x_FF, 0x_30, 0x_50, 0x_BC, 0x_75, 0x_84, 0x_76, 0x_9D, 0x_58, 0x_A6, 0x_74, 0x_EB, 0x_FE,
		0x_5D, 0x_36, 0x_08, 0x_AE, 0x_D9, 0x_8B, 0x_FD, 0x_B3, 0x_C8, 0x_16, 0x_E2, 0x_DF, 0x_65, 0x_73, 0x_82,
		0x_2C, 0x_6D, 0x_FB, 0x_96, 0x_06, 0x_83, 0x_DB, 0x_AA, 0x_42, 0x_AF, 0x_67, 0x_14, 0x_9A, 0x_E0, 0x_5A,
		0x_D0, 0x_BB, 0x_B7, 0x_45, 0x_F8, 0x_5F, 0x_91, 0x_FA, 0x_A9, 0x_80, 0x_15, 0x_95, 0x_5B, 0x_99, 0x_62,
		0x_61, 0x_A1, 0x_70, 0x_7C, 0x_63, 0x_AD, 0x_93, 0x_59, 0x_F7, 0x_E9, 0x_64, 0x_F1, 0x_54, 0x_69, 0x_CE,
		0x_9B, 0x_92, 0x_52, 0x_1C, 0x_81, 0x_6F, 0x_68, 0x_9E, 0x_71, 0x_55, 0x_32, 0x_DA, 0x_01, 0x_9C, 0x_31,
		0x_0F, 0x_D2, 0x_AC, 0x_7F, 0x_1B, 0x_77, 0x_CC, 0x_A5, 0x_23, 0x_B9, 0x_EC, 0x_51, 0x_BA, 0x_88, 0x_1A,
		0x_02, 0x_E7, 0x_C7, 0x_B1, 0x_19, 0x_8F, 0x_38, 0x_85, 0x_B4, 0x_E8, 0x_90, 0x_C0, 0x_7D, 0x_EA, 0x_B2,
		0x_12, 0x_53, 0x_D7, 0x_D6, 0x_25, 0x_03, 0x_F0, 0x_56, 0x_D5, 0x_3D, 0x_C1, 0x_4A, 0x_48, 0x_EF, 0x_C5,
		0x_10, 0x_41, 0x_1D, 0x_E4, 0x_98, 0x_A7, 0x_86, 0x_66, 0x_34, 0x_E3, 0x_57, 0x_B0, 0x_7A, 0x_E5, 0x_2F,
		0x_0E, 0x_33, 0x_8D, 0x_27, 0x_04, 0x_A3, 0x_CF, 0x_89, 0x_4D, 0x_FC, 0x_AB, 0x_21, 0x_DC, 0x_4E, 0x_4F,
		0x_F5, 0x_24, 0x_6B, 0x_2E, 0x_4B, 0x_39, 0x_7B, 0x_13, 0x_72, 0x_46, 0x_C6, 0x_47, 0x_22, 0x_C2, 0x_1F,
		0x_C3, 0x_3A, 0x_A2, 0x_C4, 0x_ED, 0x_A8, 0x_D4, 0x_A0, 0x_DE, 0x_D1, 0x_49, 0x_F4, 0x_8A, 0x_3B, 0x_F3,
		0x_6E, 0x_3E, 0x_8E, 0x_1E, 0x_BF, 0x_CB, 0x_DD,
	];

	helper(S, BASE, 82_739);
}
// endregion
// region: s_has_signs_and_zeros_and_788_722_in_base_247
#[test]
fn s_has_signs_and_zeros_and_788_722_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E,
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E,
		0x_1E, 0x_1E, 0x_1E, 0x_04, 0x_23, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_DE, 0x_30, 0x_10, 0x_DC, 0x_2E, 0x_B8, 0x_5F, 0x_11, 0x_E3, 0x_DF, 0x_7B, 0x_04, 0x_CF, 0x_EA,
		0x_02, 0x_91, 0x_4B, 0x_3E, 0x_96, 0x_29, 0x_FD, 0x_9A, 0x_B7, 0x_D9, 0x_01, 0x_BD, 0x_CB, 0x_90, 0x_B6,
		0x_7A, 0x_BF, 0x_86, 0x_A9, 0x_3D, 0x_A5, 0x_19, 0x_FC, 0x_CC, 0x_7E, 0x_B3, 0x_54, 0x_95, 0x_97, 0x_8C,
		0x_3F, 0x_3A, 0x_0F, 0x_A6, 0x_BC, 0x_7D, 0x_37, 0x_52, 0x_36, 0x_D0, 0x_D6, 0x_35, 0x_1A, 0x_51, 0x_2A,
		0x_A3, 0x_5C, 0x_6A, 0x_63, 0x_C1, 0x_05, 0x_5D, 0x_DB, 0x_C0, 0x_03, 0x_AA, 0x_26, 0x_E1, 0x_EB, 0x_AB,
		0x_6F, 0x_3C, 0x_94, 0x_85, 0x_FA, 0x_80, 0x_ED, 0x_BB, 0x_D2, 0x_AF, 0x_74, 0x_EF, 0x_58, 0x_E7, 0x_16,
		0x_48, 0x_31, 0x_1C, 0x_D3, 0x_A1, 0x_21, 0x_73, 0x_59, 0x_39, 0x_17, 0x_66, 0x_67, 0x_C8, 0x_8B, 0x_88,
		0x_F5, 0x_1B, 0x_C2, 0x_A2, 0x_5B, 0x_F9, 0x_8D, 0x_D4, 0x_F7, 0x_FB, 0x_F0, 0x_6E, 0x_53, 0x_F2, 0x_5E,
		0x_8E, 0x_4F, 0x_13, 0x_79, 0x_75, 0x_A7, 0x_C5, 0x_34, 0x_EC, 0x_4E, 0x_71, 0x_4A, 0x_83, 0x_7C, 0x_1F,
		0x_F6, 0x_FE, 0x_AE, 0x_33, 0x_68, 0x_08, 0x_46, 0x_9E, 0x_28, 0x_7F, 0x_87, 0x_EE, 0x_E4, 0x_A4, 0x_6B,
		0x_3B, 0x_82, 0x_B0, 0x_24, 0x_BE, 0x_9D, 0x_56, 0x_43, 0x_DD, 0x_49, 0x_78, 0x_B2, 0x_40, 0x_76, 0x_F8,
		0x_C6, 0x_99, 0x_1D, 0x_F4, 0x_D1, 0x_9F, 0x_45, 0x_CD, 0x_E9, 0x_15, 0x_07, 0x_FF, 0x_BA, 0x_E6, 0x_44,
		0x_98, 0x_06, 0x_57, 0x_27, 0x_CE, 0x_64, 0x_CA, 0x_A8, 0x_8A, 0x_32, 0x_50, 0x_2F, 0x_0E, 0x_4C, 0x_72,
		0x_77, 0x_12, 0x_AC, 0x_C3, 0x_E0, 0x_55, 0x_89, 0x_B9, 0x_9C, 0x_18, 0x_E2, 0x_69, 0x_81, 0x_AD, 0x_14,
		0x_C7, 0x_61, 0x_6C, 0x_25, 0x_84, 0x_62, 0x_C4, 0x_60, 0x_47, 0x_E5, 0x_D8, 0x_70, 0x_C9, 0x_B5, 0x_B1,
		0x_A0, 0x_42, 0x_F3, 0x_4D, 0x_23, 0x_E8, 0x_D7, 0x_8F, 0x_9B, 0x_DA, 0x_B4, 0x_F1, 0x_92, 0x_38, 0x_65,
		0x_D5, 0x_6D, 0x_93, 0x_2C, 0x_22, 0x_5A, 0x_41,
	];

	helper(S, BASE, 788_722);
}
// endregion
// region: s_has_signs_and_zeros_and_8_269_872_in_base_247
#[test]
fn s_has_signs_and_zeros_and_8_269_872_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D,
		0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_ED,
		0x_59, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_4D, 0x_5D, 0x_96, 0x_DE, 0x_94, 0x_C6, 0x_13, 0x_98, 0x_40, 0x_DC, 0x_74, 0x_5C, 0x_73, 0x_60, 0x_C7,
		0x_A9, 0x_3B, 0x_E8, 0x_D9, 0x_91, 0x_E1, 0x_81, 0x_B0, 0x_70, 0x_35, 0x_BE, 0x_43, 0x_F3, 0x_AA, 0x_07,
		0x_16, 0x_8E, 0x_19, 0x_E6, 0x_EA, 0x_EB, 0x_FE, 0x_15, 0x_E0, 0x_D5, 0x_D4, 0x_C1, 0x_49, 0x_B4, 0x_F7,
		0x_64, 0x_5F, 0x_CF, 0x_80, 0x_F0, 0x_30, 0x_9B, 0x_C0, 0x_4C, 0x_03, 0x_B1, 0x_95, 0x_4E, 0x_E7, 0x_18,
		0x_0F, 0x_22, 0x_50, 0x_FB, 0x_9D, 0x_87, 0x_FC, 0x_2A, 0x_05, 0x_69, 0x_D1, 0x_9E, 0x_25, 0x_A7, 0x_55,
		0x_26, 0x_FD, 0x_90, 0x_CD, 0x_63, 0x_6F, 0x_C3, 0x_4A, 0x_B6, 0x_A4, 0x_02, 0x_2C, 0x_CB, 0x_AE, 0x_DF,
		0x_86, 0x_EC, 0x_5E, 0x_68, 0x_D2, 0x_A0, 0x_11, 0x_3C, 0x_04, 0x_A8, 0x_E9, 0x_3A, 0x_27, 0x_4F, 0x_53,
		0x_E3, 0x_1B, 0x_71, 0x_44, 0x_39, 0x_9C, 0x_CC, 0x_9F, 0x_82, 0x_21, 0x_97, 0x_45, 0x_F4, 0x_AF, 0x_65,
		0x_6C, 0x_29, 0x_47, 0x_77, 0x_46, 0x_EE, 0x_6A, 0x_1A, 0x_5A, 0x_83, 0x_78, 0x_10, 0x_6E, 0x_D3, 0x_51,
		0x_ED, 0x_59, 0x_36, 0x_56, 0x_1F, 0x_D6, 0x_E5, 0x_28, 0x_C9, 0x_2F, 0x_B8, 0x_06, 0x_B5, 0x_5B, 0x_E4,
		0x_66, 0x_92, 0x_D0, 0x_58, 0x_1D, 0x_34, 0x_14, 0x_AC, 0x_33, 0x_8B, 0x_2E, 0x_7B, 0x_42, 0x_3D, 0x_CE,
		0x_F2, 0x_0E, 0x_FF, 0x_BC, 0x_7A, 0x_89, 0x_08, 0x_93, 0x_DA, 0x_23, 0x_8C, 0x_8D, 0x_A6, 0x_B3, 0x_84,
		0x_6D, 0x_41, 0x_32, 0x_BB, 0x_57, 0x_7F, 0x_BA, 0x_9A, 0x_C2, 0x_75, 0x_AB, 0x_BF, 0x_C4, 0x_3F, 0x_6B,
		0x_12, 0x_B2, 0x_76, 0x_7C, 0x_37, 0x_7E, 0x_F6, 0x_F8, 0x_BD, 0x_99, 0x_C8, 0x_1E, 0x_EF, 0x_54, 0x_A1,
		0x_D8, 0x_4B, 0x_F9, 0x_3E, 0x_62, 0x_01, 0x_85, 0x_E2, 0x_52, 0x_A5, 0x_17, 0x_A2, 0x_1C, 0x_7D, 0x_67,
		0x_B7, 0x_F1, 0x_C5, 0x_DD, 0x_D7, 0x_B9, 0x_38, 0x_79, 0x_DB, 0x_72, 0x_8F, 0x_48, 0x_CA, 0x_31, 0x_F5,
		0x_8A, 0x_FA, 0x_AD, 0x_A3, 0x_24, 0x_61, 0x_88,
	];

	helper(S, BASE, 8_269_872);
}
// endregion
// region: s_has_signs_and_zeros_and_74_689_785_in_base_247
#[test]
fn s_has_signs_and_zeros_and_74_689_785_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_08, 0x_1B, 0x_38, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_29, 0x_1C, 0x_A3, 0x_08, 0x_B8, 0x_B7, 0x_C9, 0x_89, 0x_A9, 0x_D6, 0x_76, 0x_CD, 0x_A2, 0x_25,
		0x_F1, 0x_DC, 0x_6A, 0x_FE, 0x_E9, 0x_B3, 0x_B9, 0x_5F, 0x_03, 0x_8E, 0x_4D, 0x_70, 0x_2E, 0x_2F, 0x_E6,
		0x_1D, 0x_A6, 0x_AB, 0x_56, 0x_42, 0x_71, 0x_12, 0x_16, 0x_6D, 0x_BA, 0x_45, 0x_46, 0x_DD, 0x_F2, 0x_8C,
		0x_7B, 0x_D0, 0x_7C, 0x_F0, 0x_CE, 0x_6E, 0x_D1, 0x_9B, 0x_54, 0x_7A, 0x_69, 0x_30, 0x_E1, 0x_61, 0x_38,
		0x_3E, 0x_90, 0x_92, 0x_F4, 0x_F5, 0x_A7, 0x_35, 0x_7F, 0x_43, 0x_D9, 0x_55, 0x_3A, 0x_07, 0x_24, 0x_15,
		0x_27, 0x_5C, 0x_72, 0x_C3, 0x_44, 0x_6C, 0x_62, 0x_6F, 0x_E4, 0x_99, 0x_ED, 0x_FB, 0x_86, 0x_BE, 0x_DE,
		0x_C4, 0x_01, 0x_18, 0x_FF, 0x_87, 0x_8B, 0x_E7, 0x_C8, 0x_A8, 0x_1E, 0x_11, 0x_DB, 0x_23, 0x_4A, 0x_E0,
		0x_C0, 0x_3F, 0x_60, 0x_5D, 0x_5E, 0x_F6, 0x_F9, 0x_C5, 0x_67, 0x_93, 0x_9C, 0x_19, 0x_34, 0x_88, 0x_74,
		0x_32, 0x_EE, 0x_14, 0x_17, 0x_13, 0x_68, 0x_31, 0x_7E, 0x_DA, 0x_B2, 0x_E8, 0x_CB, 0x_C6, 0x_65, 0x_10,
		0x_FD, 0x_D8, 0x_B6, 0x_26, 0x_EA, 0x_5B, 0x_D2, 0x_B4, 0x_F8, 0x_51, 0x_9F, 0x_59, 0x_3D, 0x_84, 0x_A0,
		0x_91, 0x_48, 0x_D5, 0x_EB, 0x_06, 0x_BB, 0x_D4, 0x_83, 0x_94, 0x_DF, 0x_66, 0x_C7, 0x_7D, 0x_A4, 0x_81,
		0x_AA, 0x_D3, 0x_CF, 0x_9A, 0x_C2, 0x_04, 0x_A5, 0x_95, 0x_CA, 0x_78, 0x_85, 0x_05, 0x_CC, 0x_77, 0x_40,
		0x_52, 0x_36, 0x_4F, 0x_80, 0x_FC, 0x_B5, 0x_3C, 0x_E3, 0x_2C, 0x_FA, 0x_EC, 0x_8D, 0x_0F, 0x_AC, 0x_E5,
		0x_75, 0x_9D, 0x_5A, 0x_97, 0x_28, 0x_1A, 0x_22, 0x_1F, 0x_2A, 0x_F7, 0x_EF, 0x_A1, 0x_82, 0x_0E, 0x_53,
		0x_4C, 0x_63, 0x_50, 0x_D7, 0x_64, 0x_F3, 0x_73, 0x_79, 0x_4B, 0x_8A, 0x_9E, 0x_BF, 0x_BC, 0x_02, 0x_BD,
		0x_8F, 0x_57, 0x_6B, 0x_41, 0x_AD, 0x_3B, 0x_58, 0x_37, 0x_B0, 0x_47, 0x_AF, 0x_1B, 0x_96, 0x_C1, 0x_33,
		0x_98, 0x_AE, 0x_E2, 0x_39, 0x_49, 0x_21, 0x_B1,
	];

	helper(S, BASE, 74_689_785);
}
// endregion
// region: s_has_signs_and_zeros_and_245_875_986_in_base_247
#[test]
fn s_has_signs_and_zeros_and_245_875_986_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_D9, 0x_E6, 0x_86, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_22, 0x_FA, 0x_DD, 0x_1B, 0x_C9, 0x_8F, 0x_CC, 0x_50, 0x_8C, 0x_4C, 0x_7D, 0x_36, 0x_B4, 0x_9C,
		0x_5E, 0x_D9, 0x_03, 0x_96, 0x_EA, 0x_95, 0x_F4, 0x_F6, 0x_DE, 0x_6B, 0x_41, 0x_C4, 0x_30, 0x_77, 0x_AF,
		0x_B1, 0x_5A, 0x_65, 0x_43, 0x_C5, 0x_CB, 0x_E2, 0x_91, 0x_2C, 0x_86, 0x_E9, 0x_5F, 0x_9D, 0x_90, 0x_7C,
		0x_3B, 0x_CA, 0x_B0, 0x_84, 0x_6A, 0x_25, 0x_68, 0x_4B, 0x_4E, 0x_AD, 0x_15, 0x_5D, 0x_3A, 0x_F5, 0x_3E,
		0x_49, 0x_EE, 0x_62, 0x_AE, 0x_99, 0x_42, 0x_FE, 0x_F7, 0x_53, 0x_E7, 0x_37, 0x_D4, 0x_B8, 0x_80, 0x_38,
		0x_C7, 0x_E8, 0x_9A, 0x_E6, 0x_AB, 0x_BE, 0x_72, 0x_B2, 0x_B3, 0x_1F, 0x_CF, 0x_DF, 0x_2A, 0x_FF, 0x_92,
		0x_4A, 0x_A1, 0x_0F, 0x_28, 0x_16, 0x_63, 0x_A6, 0x_E5, 0x_14, 0x_83, 0x_BA, 0x_B9, 0x_A9, 0x_C6, 0x_D3,
		0x_6F, 0x_04, 0x_A2, 0x_3D, 0x_81, 0x_BF, 0x_4D, 0x_52, 0x_EC, 0x_AA, 0x_7F, 0x_2F, 0x_A8, 0x_EF, 0x_11,
		0x_23, 0x_59, 0x_44, 0x_A7, 0x_C1, 0x_CE, 0x_A5, 0x_05, 0x_56, 0x_F2, 0x_5C, 0x_E3, 0x_26, 0x_AC, 0x_76,
		0x_46, 0x_FB, 0x_93, 0x_55, 0x_87, 0x_32, 0x_A4, 0x_01, 0x_88, 0x_3C, 0x_69, 0x_B6, 0x_DA, 0x_73, 0x_07,
		0x_EB, 0x_FD, 0x_06, 0x_61, 0x_34, 0x_3F, 0x_64, 0x_71, 0x_6E, 0x_5B, 0x_89, 0x_1E, 0x_BB, 0x_D2, 0x_24,
		0x_21, 0x_7A, 0x_7B, 0x_6D, 0x_1D, 0x_C2, 0x_12, 0x_8E, 0x_33, 0x_35, 0x_8A, 0x_82, 0x_13, 0x_F3, 0x_B7,
		0x_C8, 0x_66, 0x_48, 0x_C3, 0x_D6, 0x_FC, 0x_74, 0x_F9, 0x_18, 0x_F1, 0x_1A, 0x_9E, 0x_57, 0x_D1, 0x_67,
		0x_CD, 0x_45, 0x_02, 0x_E0, 0x_97, 0x_BD, 0x_D0, 0x_D7, 0x_0E, 0x_29, 0x_75, 0x_08, 0x_A0, 0x_C0, 0x_6C,
		0x_94, 0x_51, 0x_17, 0x_4F, 0x_D5, 0x_60, 0x_40, 0x_B5, 0x_1C, 0x_A3, 0x_10, 0x_19, 0x_BC, 0x_39, 0x_F8,
		0x_2E, 0x_DB, 0x_98, 0x_9F, 0x_78, 0x_58, 0x_ED, 0x_F0, 0x_E1, 0x_47, 0x_DC, 0x_D8, 0x_54, 0x_27, 0x_70,
		0x_9B, 0x_85, 0x_E4, 0x_8D, 0x_8B, 0x_31, 0x_79,
	];

	helper(S, BASE, 245_875_986);
}
// endregion
// region: s_has_signs_and_6_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_6_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_1E, 0x_1E, 0x_4A,
		0x_8D, 0x_1E, 0x_1E, 0x_4A, 0x_4A, 0x_4A, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_4A, 0x_1E, 0x_1E, 0x_1E,
		0x_4A, 0x_1E, 0x_1E, 0x_4A, 0x_4A, 0x_4A, 0x_1E, 0x_4A, 0x_1E, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_1E, 0x_1E,
		0x_4A, 0x_1E, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_1E,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_signs_and_56_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_56_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_E4, 0x_E4, 0x_E4, 0x_3C, 0x_3C, 0x_3C, 0x_94, 0x_3C, 0x_E4, 0x_3C,
		0x_E4, 0x_E4, 0x_3C, 0x_E4, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_E4, 0x_E4, 0x_3C, 0x_3C,
		0x_3C, 0x_E4, 0x_3C, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_E4, 0x_E4, 0x_3C, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_3C, 0x_E4, 0x_E4, 0x_3C, 0x_E4, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_E4,
	];

	helper(S, BASE, 56);
}
// endregion
// region: s_has_signs_and_260_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_260_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_7E, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_7E,
		0x_61, 0x_61, 0x_E7, 0x_61, 0x_7E, 0x_7E, 0x_7E, 0x_61, 0x_61, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_61,
		0x_7E, 0x_7E, 0x_7E, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_7E, 0x_61, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_7E,
	];

	helper(S, BASE, 260);
}
// endregion
// region: s_has_signs_and_4_874_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_4_874_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_D4, 0x_0F, 0x_0F, 0x_D4, 0x_D4, 0x_0F,
		0x_0F, 0x_0F, 0x_0F, 0x_D4, 0x_0F, 0x_D4, 0x_0F, 0x_E7, 0x_D4, 0x_D4, 0x_D4, 0x_0F, 0x_0F, 0x_0F, 0x_0F,
		0x_0F, 0x_0F, 0x_D4, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_D4,
	];

	helper(S, BASE, 4_874);
}
// endregion
// region: s_has_signs_and_27_555_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_27_555_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_F7, 0x_F7, 0x_9A, 0x_F7, 0x_9A, 0x_F7, 0x_F7, 0x_F7, 0x_9A,
		0x_F7, 0x_9A, 0x_9A, 0x_9A, 0x_F7, 0x_F7, 0x_63, 0x_F7, 0x_F7, 0x_9A, 0x_F7, 0x_9A, 0x_9A, 0x_F7, 0x_9A,
		0x_9A, 0x_F7, 0x_F7, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_F7,
	];

	helper(S, BASE, 27_555);
}
// endregion
// region: s_has_signs_and_496_749_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_496_749_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_48, 0x_48, 0x_48, 0x_48, 0x_C7, 0x_C7, 0x_48, 0x_C7, 0x_48, 0x_C7, 0x_C7, 0x_C7,
		0x_48, 0x_48, 0x_C7, 0x_48, 0x_48, 0x_C7, 0x_48, 0x_6E, 0x_48, 0x_C7, 0x_48, 0x_C7, 0x_48, 0x_48, 0x_C7,
		0x_48, 0x_48, 0x_C7, 0x_48, 0x_48, 0x_48, 0x_C7, 0x_48, 0x_48, 0x_48, 0x_C7, 0x_48, 0x_C7, 0x_C7, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_C7, 0x_48, 0x_C7, 0x_C7, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_48,
	];

	helper(S, BASE, 496_749);
}
// endregion
// region: s_has_signs_and_6_578_892_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_6_578_892_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_F7, 0x_F7, 0x_48, 0x_48, 0x_F7, 0x_48, 0x_48, 0x_48,
		0x_F7, 0x_F7, 0x_48, 0x_48, 0x_48, 0x_F7, 0x_48, 0x_F7, 0x_F7, 0x_48, 0x_48, 0x_F7, 0x_F7, 0x_48, 0x_48,
		0x_DA, 0x_F7, 0x_48, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_48, 0x_48, 0x_48, 0x_48, 0x_F7, 0x_F7, 0x_48,
		0x_48, 0x_48, 0x_F7, 0x_48, 0x_48, 0x_F7, 0x_48, 0x_F7, 0x_F7, 0x_48, 0x_48, 0x_F7, 0x_48, 0x_F7, 0x_48,
		0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_48, 0x_F7, 0x_48, 0x_F7, 0x_F7, 0x_48, 0x_F7, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_F7,
	];

	helper(S, BASE, 6_578_892);
}
// endregion
// region: s_has_signs_and_72_902_288_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_72_902_288_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_9D, 0x_C2, 0x_C2, 0x_C2, 0x_9D, 0x_C2, 0x_9D,
		0x_9D, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_9D, 0x_9D, 0x_C2, 0x_C2, 0x_9D, 0x_9D, 0x_C2, 0x_9D, 0x_C2, 0x_C2,
		0x_9D, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_1E, 0x_C2, 0x_C2, 0x_9D, 0x_C2, 0x_9D, 0x_C2, 0x_9D, 0x_9D, 0x_C2,
		0x_C2, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_C2, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_9D,
	];

	helper(S, BASE, 72_902_288);
}
// endregion
// region: s_has_signs_and_113_952_873_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_113_952_873_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_42, 0x_42, 0x_6F,
		0x_42, 0x_42, 0x_6F, 0x_6F, 0x_42, 0x_6F, 0x_42, 0x_6F, 0x_42, 0x_42, 0x_6F, 0x_6F, 0x_42, 0x_6F, 0x_6F,
		0x_6F, 0x_6F, 0x_42, 0x_42, 0x_6F, 0x_42, 0x_6F, 0x_6F, 0x_42, 0x_A2, 0x_6F, 0x_42, 0x_6F, 0x_6F, 0x_6F,
		0x_42, 0x_42, 0x_6F, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_42,
	];

	helper(S, BASE, 113_952_873);
}
// endregion
// region: s_has_signs_and_8_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_8_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_11,
		0x_11, 0x_67, 0x_39, 0x_9B, 0x_11, 0x_39, 0x_39, 0x_9B, 0x_11, 0x_11, 0x_9B, 0x_39, 0x_39, 0x_39, 0x_9B,
		0x_39, 0x_11, 0x_11, 0x_11, 0x_9B, 0x_39, 0x_11, 0x_39, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_9B, 0x_11,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_signs_and_91_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_91_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_BF, 0x_9D, 0x_BF, 0x_9D, 0x_BF, 0x_0D, 0x_F4, 0x_9D, 0x_F4,
		0x_BF, 0x_F4, 0x_BF, 0x_BF, 0x_BF, 0x_9D, 0x_F4, 0x_BF, 0x_F4, 0x_9D, 0x_F4, 0x_BF, 0x_F4, 0x_9D, 0x_BF,
		0x_F4, 0x_F4, 0x_F4, 0x_9D, 0x_9D, 0x_F4, 0x_BF, 0x_9D, 0x_F4, 0x_F4, 0x_9D, 0x_9D, 0x_9D, 0x_F4, 0x_9D,
		0x_BF,
	];
	const BASE: &[u8] = &[
		0x_9D, 0x_BF, 0x_F4,
	];

	helper(S, BASE, 91);
}
// endregion
// region: s_has_signs_and_520_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_520_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_A9, 0x_9A, 0x_1E, 0x_9A, 0x_A9, 0x_1E, 0x_1C, 0x_9A, 0x_A9, 0x_A9, 0x_1E,
		0x_A9, 0x_9A, 0x_1E, 0x_1E, 0x_A9,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_1E, 0x_A9,
	];

	helper(S, BASE, 520);
}
// endregion
// region: s_has_signs_and_7_369_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_7_369_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_FE, 0x_F6, 0x_FE, 0x_F6, 0x_F6, 0x_B0, 0x_B0, 0x_B0, 0x_FE, 0x_CA, 0x_F6, 0x_F6, 0x_FE, 0x_FE,
		0x_FE, 0x_F6, 0x_FE, 0x_B0, 0x_FE, 0x_FE, 0x_B0, 0x_FE, 0x_FE, 0x_B0, 0x_F6, 0x_F6, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_FE, 0x_B0,
	];

	helper(S, BASE, 7_369);
}
// endregion
// region: s_has_signs_and_10_219_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_10_219_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_D7, 0x_D7, 0x_82, 0x_D9,
		0x_D9, 0x_D9, 0x_D7, 0x_D7, 0x_D7, 0x_22, 0x_D7, 0x_82, 0x_D7, 0x_82, 0x_D9, 0x_82, 0x_D7, 0x_82, 0x_D7,
		0x_D7, 0x_82, 0x_D9, 0x_D9, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_D7, 0x_82,
	];

	helper(S, BASE, 10_219);
}
// endregion
// region: s_has_signs_and_875_851_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_875_851_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_8C, 0x_8C, 0x_DC, 0x_DC, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_F1, 0x_DC, 0x_DC, 0x_DC,
		0x_8C, 0x_6C, 0x_F1, 0x_8C, 0x_F1, 0x_DC,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_8C, 0x_DC,
	];

	helper(S, BASE, 875_851);
}
// endregion
// region: s_has_signs_and_7_637_269_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_7_637_269_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_A0, 0x_A0, 0x_A1, 0x_A0, 0x_66, 0x_A0, 0x_66, 0x_66, 0x_66, 0x_A0, 0x_66,
		0x_66, 0x_A1, 0x_A0, 0x_A0, 0x_25, 0x_A1, 0x_A0, 0x_A0, 0x_66, 0x_66, 0x_66, 0x_A1, 0x_66, 0x_66, 0x_A1,
		0x_A1, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_A0, 0x_A1,
	];

	helper(S, BASE, 7_637_269);
}
// endregion
// region: s_has_signs_and_77_576_831_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_77_576_831_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_29, 0x_69, 0x_29, 0x_BA, 0x_29, 0x_69, 0x_69, 0x_69, 0x_BA,
		0x_69, 0x_69, 0x_29, 0x_BA, 0x_29, 0x_69, 0x_69, 0x_69, 0x_59, 0x_29, 0x_29, 0x_BA, 0x_29, 0x_69, 0x_69,
		0x_29, 0x_69, 0x_69, 0x_BA, 0x_BA, 0x_29, 0x_BA, 0x_69, 0x_29, 0x_BA, 0x_29, 0x_69, 0x_BA, 0x_69, 0x_69,
		0x_69, 0x_69, 0x_BA, 0x_69, 0x_BA, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_29, 0x_69,
	];

	helper(S, BASE, 77_576_831);
}
// endregion
// region: s_has_signs_and_870_115_131_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_870_115_131_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_E8, 0x_81,
		0x_E8, 0x_81, 0x_B0, 0x_E8, 0x_E8, 0x_81, 0x_E8, 0x_B0, 0x_B0, 0x_81, 0x_E8, 0x_B0, 0x_E8, 0x_81, 0x_B0,
		0x_81, 0x_81, 0x_B3, 0x_E8, 0x_81, 0x_81, 0x_E8, 0x_E8, 0x_81, 0x_B0, 0x_81, 0x_B0, 0x_E8, 0x_B0, 0x_81,
		0x_E8, 0x_81,
	];
	const BASE: &[u8] = &[
		0x_81, 0x_B0, 0x_E8,
	];

	helper(S, BASE, 870_115_131);
}
// endregion
// region: s_has_signs_and_5_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_5_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_A3, 0x_FA, 0x_BA,
		0x_45, 0x_45, 0x_45, 0x_1D, 0x_A3, 0x_A3, 0x_FA, 0x_1D, 0x_98, 0x_FA, 0x_45, 0x_FA, 0x_45, 0x_98, 0x_1D,
		0x_A3, 0x_1D, 0x_1D, 0x_A3, 0x_1D, 0x_FA, 0x_98, 0x_45, 0x_98, 0x_1D, 0x_45, 0x_1D, 0x_45, 0x_A3, 0x_FA,
		0x_98, 0x_1D, 0x_FA,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_A3, 0x_98, 0x_45, 0x_1D,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_signs_and_91_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_91_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_80, 0x_80,
		0x_B5, 0x_2D, 0x_B5, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_A2, 0x_B5, 0x_F7, 0x_80, 0x_3B,
	];

	helper(S, BASE, 91);
}
// endregion
// region: s_has_signs_and_265_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_265_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_CF, 0x_16, 0x_4F, 0x_16, 0x_4D, 0x_CF, 0x_5D, 0x_CF, 0x_DE, 0x_16,
		0x_DE, 0x_4F, 0x_4F, 0x_16, 0x_DE, 0x_5D, 0x_CF, 0x_DE, 0x_5D, 0x_4F, 0x_16, 0x_CF, 0x_16, 0x_CF, 0x_16,
		0x_CF, 0x_CF, 0x_16, 0x_5D, 0x_CF, 0x_16, 0x_16, 0x_5D, 0x_CF, 0x_DE, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_DE, 0x_CF, 0x_4F, 0x_5D,
	];

	helper(S, BASE, 265);
}
// endregion
// region: s_has_signs_and_5_552_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_5_552_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_B4, 0x_38, 0x_6B, 0x_DB, 0x_EB, 0x_DB, 0x_C2, 0x_38, 0x_38, 0x_B4,
		0x_B4, 0x_EB, 0x_B4, 0x_DB, 0x_B4, 0x_38, 0x_DB, 0x_B4, 0x_EB, 0x_6B, 0x_EB, 0x_38, 0x_38, 0x_DB, 0x_EB,
		0x_B4, 0x_38, 0x_EB, 0x_38, 0x_38, 0x_B4,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_B4, 0x_DB, 0x_38, 0x_6B,
	];

	helper(S, BASE, 5_552);
}
// endregion
// region: s_has_signs_and_20_539_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_20_539_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_C0, 0x_C0, 0x_A9, 0x_98, 0x_C0, 0x_A9, 0x_98, 0x_86, 0x_98, 0x_C0,
		0x_BC, 0x_C0, 0x_CA, 0x_A9, 0x_CA, 0x_BC, 0x_BC, 0x_C0, 0x_98, 0x_C0, 0x_C0, 0x_C0, 0x_BC, 0x_A9, 0x_A9,
		0x_CA, 0x_C0, 0x_98, 0x_C0, 0x_BC, 0x_98, 0x_CA, 0x_BC, 0x_A9, 0x_CA, 0x_C0, 0x_CA, 0x_98, 0x_A9, 0x_CA,
		0x_98,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_C0, 0x_A9, 0x_CA, 0x_98,
	];

	helper(S, BASE, 20_539);
}
// endregion
// region: s_has_signs_and_634_157_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_634_157_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_16, 0x_4B, 0x_3B, 0x_DF, 0x_50, 0x_4B, 0x_16, 0x_16, 0x_DF, 0x_A1, 0x_DF,
		0x_3B, 0x_4B, 0x_50, 0x_4B, 0x_DF, 0x_DF, 0x_DF, 0x_3B, 0x_16, 0x_DF, 0x_50, 0x_16, 0x_50, 0x_3B, 0x_DF,
		0x_16, 0x_4B, 0x_16, 0x_4B, 0x_50, 0x_50, 0x_16, 0x_DF, 0x_50, 0x_4B, 0x_3B, 0x_16, 0x_4B, 0x_50, 0x_16,
		0x_DF, 0x_DF, 0x_3B, 0x_16, 0x_16, 0x_4B, 0x_16, 0x_3B, 0x_4B, 0x_50, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_3B, 0x_16, 0x_DF, 0x_4B, 0x_50,
	];

	helper(S, BASE, 634_157);
}
// endregion
// region: s_has_signs_and_2_152_369_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_2_152_369_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_5A, 0x_41, 0x_CF, 0x_CF, 0x_EB, 0x_EB, 0x_EB, 0x_DB, 0x_EB,
		0x_DB, 0x_F1, 0x_CF, 0x_5A, 0x_CF, 0x_41, 0x_5A, 0x_CF, 0x_41, 0x_5A, 0x_CF, 0x_EB, 0x_41, 0x_CF, 0x_EB,
		0x_41, 0x_DB, 0x_41, 0x_EB, 0x_DB, 0x_EB, 0x_CF, 0x_EB, 0x_5A, 0x_5A, 0x_CF, 0x_DB, 0x_CF, 0x_5A, 0x_CF,
		0x_5A, 0x_CF, 0x_CF, 0x_CF, 0x_EB, 0x_EB, 0x_CF, 0x_CF, 0x_EB, 0x_CF, 0x_CF, 0x_5A, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_5A, 0x_CF, 0x_EB, 0x_DB,
	];

	helper(S, BASE, 2_152_369);
}
// endregion
// region: s_has_signs_and_92_713_328_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_92_713_328_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_E2,
		0x_EF, 0x_41, 0x_41, 0x_E2, 0x_C9, 0x_C9, 0x_E2, 0x_E2, 0x_C9, 0x_9D, 0x_C9, 0x_1D, 0x_C9, 0x_41, 0x_C9,
		0x_C9, 0x_EF, 0x_E2, 0x_E2, 0x_EF, 0x_41, 0x_EF, 0x_41, 0x_C9, 0x_E2, 0x_9D, 0x_41, 0x_41, 0x_EF, 0x_9D,
		0x_41, 0x_E2, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_9D, 0x_E2, 0x_41, 0x_C9, 0x_EF,
	];

	helper(S, BASE, 92_713_328);
}
// endregion
// region: s_has_signs_and_285_648_237_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_285_648_237_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_E0, 0x_CA, 0x_99, 0x_E0, 0x_E0, 0x_E0, 0x_E0,
		0x_58, 0x_58, 0x_CA, 0x_99, 0x_58, 0x_58, 0x_1C, 0x_99, 0x_E0, 0x_58, 0x_58, 0x_CA, 0x_CA, 0x_58, 0x_58,
		0x_E0, 0x_E0, 0x_E0, 0x_CA, 0x_CA, 0x_CA, 0x_99, 0x_CA,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_E0, 0x_58, 0x_B0, 0x_99,
	];

	helper(S, BASE, 285_648_237);
}
// endregion
// region: s_has_signs_and_7_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_7_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_A6, 0x_D9, 0x_E0, 0x_A6, 0x_78, 0x_A6,
		0x_D9, 0x_A4, 0x_90, 0x_A4, 0x_3E, 0x_C2, 0x_A6, 0x_90, 0x_A6, 0x_A6, 0x_A6, 0x_3E, 0x_90, 0x_3E, 0x_3E,
		0x_A6, 0x_C2, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_A6, 0x_A4, 0x_78, 0x_90, 0x_C2, 0x_3E,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_signs_and_92_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_92_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2A, 0x_D2, 0x_2A, 0x_1C, 0x_BA, 0x_2A, 0x_2F, 0x_4D, 0x_4D, 0x_BA, 0x_3F, 0x_BA, 0x_BA, 0x_3F,
		0x_3F, 0x_3F, 0x_2F, 0x_BA, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_2A, 0x_4D, 0x_8F, 0x_2F, 0x_BA, 0x_D2,
	];

	helper(S, BASE, 92);
}
// endregion
// region: s_has_signs_and_622_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_622_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_6C, 0x_A9, 0x_E5, 0x_9B, 0x_8C, 0x_B7, 0x_1E, 0x_B7, 0x_B7, 0x_1E, 0x_E5, 0x_E5, 0x_9B, 0x_E5, 0x_A9,
		0x_9B, 0x_6C, 0x_9B, 0x_6C, 0x_9B, 0x_3B, 0x_A9, 0x_E5, 0x_1E, 0x_E5, 0x_1E, 0x_6C,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_6C, 0x_B7, 0x_3B, 0x_E5, 0x_A9, 0x_9B,
	];

	helper(S, BASE, 622);
}
// endregion
// region: s_has_signs_and_6_932_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_6_932_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_79, 0x_DF, 0x_4C, 0x_11, 0x_79, 0x_85, 0x_11, 0x_B1, 0x_79, 0x_4C,
		0x_B1, 0x_4C, 0x_B1, 0x_B1, 0x_55, 0x_DF, 0x_62, 0x_79, 0x_55, 0x_DF, 0x_11, 0x_79, 0x_B1, 0x_62, 0x_62,
		0x_B1, 0x_55, 0x_11, 0x_62, 0x_B1, 0x_DF, 0x_11, 0x_62, 0x_4C, 0x_55, 0x_DF, 0x_4C,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_4C, 0x_79, 0x_11, 0x_B1, 0x_62, 0x_DF,
	];

	helper(S, BASE, 6_932);
}
// endregion
// region: s_has_signs_and_81_284_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_81_284_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_F9, 0x_C0, 0x_C0, 0x_73, 0x_73, 0x_7B, 0x_3A, 0x_F9, 0x_F3,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_F3, 0x_D5, 0x_84, 0x_F9, 0x_C0, 0x_73,
	];

	helper(S, BASE, 81_284);
}
// endregion
// region: s_has_signs_and_731_082_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_731_082_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_C9, 0x_B9, 0x_70, 0x_70, 0x_70,
		0x_D1, 0x_1C, 0x_89, 0x_D1, 0x_BC, 0x_C9, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_D1, 0x_B9, 0x_1C, 0x_70, 0x_BC, 0x_F8, 0x_C9,
	];

	helper(S, BASE, 731_082);
}
// endregion
// region: s_has_signs_and_5_199_523_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_5_199_523_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_E5, 0x_47, 0x_3C, 0x_47, 0x_84, 0x_E5, 0x_11, 0x_EE, 0x_ED, 0x_84, 0x_84, 0x_3C, 0x_E5,
		0x_84, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_3C, 0x_47, 0x_84, 0x_63, 0x_11, 0x_E5,
	];

	helper(S, BASE, 5_199_523);
}
// endregion
// region: s_has_signs_and_46_885_461_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_46_885_461_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2F, 0x_2F, 0x_CE, 0x_6E, 0x_40,
		0x_4A, 0x_40, 0x_9C, 0x_2F, 0x_CE, 0x_67, 0x_4A, 0x_4A, 0x_2F, 0x_4A, 0x_9C, 0x_40, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_2F, 0x_9C, 0x_40, 0x_4A, 0x_C5, 0x_6E,
	];

	helper(S, BASE, 46_885_461);
}
// endregion
// region: s_has_signs_and_645_420_239_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_645_420_239_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_56, 0x_CA, 0x_B4, 0x_B4, 0x_7E, 0x_B4, 0x_B4, 0x_7C, 0x_7E, 0x_7E, 0x_56, 0x_95, 0x_B4,
		0x_A9, 0x_7E, 0x_A9, 0x_7C, 0x_B4, 0x_A9, 0x_7E, 0x_CA, 0x_7E, 0x_56, 0x_CA, 0x_A9, 0x_8F, 0x_A9, 0x_7E,
		0x_CA, 0x_B4, 0x_7C, 0x_7C, 0x_7C, 0x_56, 0x_56, 0x_56, 0x_7C, 0x_CA, 0x_7C, 0x_7C, 0x_7C, 0x_56, 0x_8F,
		0x_B4, 0x_A9, 0x_B4, 0x_CA, 0x_8F, 0x_CA, 0x_A9, 0x_CA, 0x_7C, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_CA, 0x_56, 0x_A9, 0x_7E, 0x_8F, 0x_B4,
	];

	helper(S, BASE, 645_420_239);
}
// endregion
// region: s_has_signs_and_7_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_7_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_C8, 0x_0C, 0x_C8, 0x_74, 0x_56, 0x_6C, 0x_E3, 0x_24, 0x_6C, 0x_E3, 0x_24, 0x_56, 0x_E7,
		0x_2A, 0x_74, 0x_E7, 0x_6C, 0x_7A, 0x_74, 0x_C8, 0x_E7, 0x_6C, 0x_74, 0x_7A, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_24, 0x_7C, 0x_56, 0x_7A, 0x_E7, 0x_74, 0x_C8, 0x_E3, 0x_2C, 0x_6C,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_signs_and_28_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_28_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_0F, 0x_BA, 0x_23, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_60, 0x_0F, 0x_99, 0x_1A, 0x_AF, 0x_BA, 0x_EE, 0x_C2, 0x_D0, 0x_5C,
	];

	helper(S, BASE, 28);
}
// endregion
// region: s_has_signs_and_982_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_982_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2E, 0x_96, 0x_43, 0x_2C, 0x_2E,
		0x_96, 0x_94, 0x_E3, 0x_94, 0x_54, 0x_54, 0x_96, 0x_7C, 0x_2E, 0x_D2, 0x_96, 0x_43, 0x_60, 0x_43, 0x_E3,
		0x_94, 0x_94, 0x_D2, 0x_D2, 0x_7C, 0x_60, 0x_93, 0x_43, 0x_94, 0x_96, 0x_41, 0x_54, 0x_96, 0x_94, 0x_94,
		0x_94, 0x_60, 0x_E3, 0x_41, 0x_7C, 0x_93, 0x_E3, 0x_60, 0x_7C, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_96, 0x_D2, 0x_43, 0x_41, 0x_54, 0x_60, 0x_E3, 0x_2E, 0x_93, 0x_7C,
	];

	helper(S, BASE, 982);
}
// endregion
// region: s_has_signs_and_8_332_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_8_332_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_58, 0x_C0,
		0x_EA, 0x_9A, 0x_DB, 0x_F1, 0x_EA, 0x_D8, 0x_8E, 0x_58, 0x_D8, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_65, 0x_C0, 0x_C7, 0x_8E, 0x_9A, 0x_58, 0x_F1, 0x_79, 0x_EA, 0x_BB,
	];

	helper(S, BASE, 8_332);
}
// endregion
// region: s_has_signs_and_38_308_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_38_308_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_41, 0x_0F, 0x_B7, 0x_0F, 0x_0F, 0x_2E, 0x_78, 0x_B7, 0x_94, 0x_46, 0x_94, 0x_41, 0x_B7, 0x_B8,
		0x_B8, 0x_5E, 0x_78, 0x_B7, 0x_46, 0x_46, 0x_B7, 0x_5E, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_78, 0x_41, 0x_46, 0x_9F, 0x_AB, 0x_0F, 0x_94, 0x_B7, 0x_DA, 0x_B8,
	];

	helper(S, BASE, 38_308);
}
// endregion
// region: s_has_signs_and_669_378_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_669_378_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_DB, 0x_46, 0x_9E, 0x_ED, 0x_86, 0x_23, 0x_97, 0x_1D, 0x_22, 0x_92,
		0x_DB, 0x_C0, 0x_79, 0x_86, 0x_86, 0x_22, 0x_92, 0x_79, 0x_C0, 0x_79, 0x_ED, 0x_C0, 0x_23, 0x_C0, 0x_79,
		0x_86, 0x_23, 0x_86, 0x_C0, 0x_23, 0x_46, 0x_23, 0x_9E, 0x_C0, 0x_79, 0x_ED, 0x_9E, 0x_46, 0x_86, 0x_86,
		0x_46, 0x_9E, 0x_46, 0x_86, 0x_23, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_46, 0x_79, 0x_22, 0x_DB, 0x_1D, 0x_23, 0x_9E, 0x_C0, 0x_92, 0x_ED,
	];

	helper(S, BASE, 669_378);
}
// endregion
// region: s_has_signs_and_1_993_558_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_1_993_558_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_42, 0x_42,
		0x_89, 0x_42, 0x_3D, 0x_C6, 0x_AA, 0x_5C, 0x_69, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_42, 0x_BC, 0x_69, 0x_89, 0x_E7, 0x_AA, 0x_C6, 0x_3D, 0x_F0, 0x_25,
	];

	helper(S, BASE, 1_993_558);
}
// endregion
// region: s_has_signs_and_37_119_370_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_37_119_370_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_D2, 0x_62, 0x_0E, 0x_DF, 0x_AC, 0x_AC,
		0x_E6, 0x_72, 0x_65, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_6C, 0x_D2, 0x_72, 0x_AC, 0x_ED, 0x_DF, 0x_93, 0x_E6, 0x_BD, 0x_62, 0x_0E,
	];

	helper(S, BASE, 37_119_370);
}
// endregion
// region: s_has_signs_and_649_897_980_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_649_897_980_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_E2, 0x_83, 0x_E2, 0x_11, 0x_E2, 0x_11, 0x_CF, 0x_72,
		0x_AE, 0x_B9, 0x_47, 0x_83, 0x_4B, 0x_AE, 0x_CF, 0x_72, 0x_72, 0x_47, 0x_68, 0x_CF, 0x_4B, 0x_83, 0x_68,
		0x_E2, 0x_83, 0x_E2, 0x_AE, 0x_06, 0x_AE, 0x_47, 0x_47, 0x_E3, 0x_4B, 0x_4B, 0x_06, 0x_68, 0x_AE, 0x_72,
		0x_47, 0x_AE, 0x_11, 0x_47, 0x_83, 0x_06, 0x_E2, 0x_E3, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_68, 0x_47, 0x_E2, 0x_E3, 0x_4B, 0x_AE, 0x_72, 0x_06, 0x_11, 0x_CF,
	];

	helper(S, BASE, 649_897_980);
}
// endregion
// region: s_has_signs_and_1_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_1_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_67, 0x_24, 0x_C2, 0x_85, 0x_CF, 0x_02, 0x_81, 0x_AE, 0x_64, 0x_4B, 0x_E9, 0x_85,
		0x_67, 0x_4B, 0x_CF, 0x_EB, 0x_EB, 0x_C2, 0x_67, 0x_EB, 0x_85, 0x_EB, 0x_F0, 0x_AE, 0x_81, 0x_C2, 0x_4B,
		0x_AE, 0x_E9, 0x_64, 0x_64, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_67, 0x_02, 0x_CF, 0x_E9, 0x_C2, 0x_CC, 0x_EB, 0x_64, 0x_4B, 0x_85, 0x_81, 0x_F0,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_signs_and_49_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_49_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_10, 0x_97, 0x_69, 0x_97, 0x_C9,
		0x_9B, 0x_9B, 0x_4D, 0x_C5, 0x_89, 0x_10, 0x_7B, 0x_89, 0x_C5, 0x_89, 0x_97, 0x_9B, 0x_C9, 0x_89, 0x_9B,
		0x_4D, 0x_C5, 0x_0E, 0x_0E, 0x_9B, 0x_C9, 0x_9B, 0x_10, 0x_BE, 0x_36, 0x_BE, 0x_36, 0x_C5, 0x_C5, 0x_0E,
		0x_97, 0x_88, 0x_C9, 0x_0E, 0x_88, 0x_7B, 0x_BE, 0x_88, 0x_BE, 0x_9B,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_89, 0x_9B, 0x_10, 0x_36, 0x_C5, 0x_BE, 0x_88, 0x_C9, 0x_0E, 0x_97, 0x_76, 0x_4D,
	];

	helper(S, BASE, 49);
}
// endregion
// region: s_has_signs_and_136_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_136_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_30, 0x_EE, 0x_E9, 0x_75, 0x_AF, 0x_65, 0x_75, 0x_A7, 0x_30, 0x_95, 0x_68, 0x_6E, 0x_95,
		0x_6E, 0x_EE, 0x_62, 0x_36, 0x_62, 0x_95, 0x_68, 0x_A7, 0x_02, 0x_62, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_A0, 0x_62, 0x_6E, 0x_95, 0x_A7, 0x_EE, 0x_AF, 0x_02, 0x_68, 0x_30, 0x_65, 0x_36,
	];

	helper(S, BASE, 136);
}
// endregion
// region: s_has_signs_and_8_971_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_8_971_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_EC, 0x_6E, 0x_6E, 0x_6E, 0x_C3, 0x_BD, 0x_A4, 0x_DF, 0x_A4, 0x_4F, 0x_BD,
		0x_67, 0x_4F, 0x_DF, 0x_9D, 0x_DF, 0x_BD, 0x_FB, 0x_DF, 0x_BD, 0x_FB, 0x_EC, 0x_EC, 0x_9D, 0x_FB, 0x_BD,
		0x_BD, 0x_4F, 0x_EC, 0x_F3, 0x_A4, 0x_67, 0x_DF, 0x_DF, 0x_F3, 0x_46, 0x_DF, 0x_6E, 0x_BD, 0x_BD, 0x_EA,
		0x_BD, 0x_6E, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_6E, 0x_F3, 0x_36, 0x_EC, 0x_4F, 0x_EA, 0x_FB, 0x_A4, 0x_BD, 0x_DF, 0x_9D, 0x_67,
	];

	helper(S, BASE, 8_971);
}
// endregion
// region: s_has_signs_and_33_325_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_33_325_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_EF, 0x_D6, 0x_D6, 0x_D6, 0x_D8, 0x_41, 0x_97, 0x_C6, 0x_C6, 0x_67, 0x_7D, 0x_B8,
		0x_67, 0x_7C, 0x_EF, 0x_EF, 0x_95, 0x_EA, 0x_E5, 0x_6D, 0x_E5, 0x_D8, 0x_7D, 0x_97, 0x_6D, 0x_6D, 0x_C6,
		0x_97, 0x_6D, 0x_6D, 0x_E5, 0x_E5, 0x_D6, 0x_7D, 0x_E5, 0x_C6, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_EF, 0x_D6, 0x_B8, 0x_E5, 0x_EA, 0x_D8, 0x_67, 0x_95, 0x_6D, 0x_97, 0x_C6, 0x_7D,
	];

	helper(S, BASE, 33_325);
}
// endregion
// region: s_has_signs_and_942_014_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_942_014_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_F9, 0x_48, 0x_12, 0x_2F, 0x_62, 0x_3C, 0x_27, 0x_F9, 0x_62, 0x_3C, 0x_BA, 0x_12,
		0x_61, 0x_48, 0x_F9, 0x_D6, 0x_49, 0x_61, 0x_8B, 0x_34, 0x_8B, 0x_49, 0x_F9, 0x_2F, 0x_3C, 0x_49, 0x_F9,
		0x_BA, 0x_BA, 0x_12, 0x_61, 0x_48, 0x_62, 0x_2F, 0x_3C, 0x_F9, 0x_E8, 0x_49, 0x_12, 0x_61, 0x_12, 0x_49,
		0x_8B, 0x_62, 0x_E8, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_34, 0x_F9, 0x_E8, 0x_49, 0x_D6, 0x_48, 0x_BA, 0x_3C, 0x_8B, 0x_2F, 0x_61, 0x_12,
	];

	helper(S, BASE, 942_014);
}
// endregion
// region: s_has_signs_and_3_212_379_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_3_212_379_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_12,
		0x_12, 0x_42, 0x_76, 0x_76, 0x_E9, 0x_CE, 0x_49, 0x_E9, 0x_94, 0x_12, 0x_76, 0x_49, 0x_AB, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_E9, 0x_76, 0x_49, 0x_AD, 0x_94, 0x_42, 0x_9F, 0x_12, 0x_F3, 0x_6B, 0x_BD, 0x_AB,
	];

	helper(S, BASE, 3_212_379);
}
// endregion
// region: s_has_signs_and_73_158_697_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_73_158_697_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_71, 0x_16, 0x_16, 0x_82, 0x_C6, 0x_BD, 0x_B2, 0x_71, 0x_1A, 0x_16,
		0x_82, 0x_4A, 0x_14, 0x_16, 0x_14, 0x_44, 0x_44, 0x_35, 0x_BD, 0x_BD, 0x_B2, 0x_35, 0x_44, 0x_16, 0x_B2,
		0x_B2, 0x_44, 0x_BD, 0x_35, 0x_35, 0x_4A, 0x_71, 0x_E6, 0x_4A, 0x_4A, 0x_14, 0x_BD, 0x_44, 0x_44, 0x_C6,
		0x_16, 0x_4A, 0x_BD, 0x_37, 0x_44, 0x_BD, 0x_82, 0x_82, 0x_35, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_71, 0x_16, 0x_44, 0x_BD, 0x_4A, 0x_C6, 0x_D5, 0x_35, 0x_B2, 0x_14, 0x_37, 0x_E6,
	];

	helper(S, BASE, 73_158_697);
}
// endregion
// region: s_has_signs_and_717_309_123_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_717_309_123_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_7C, 0x_D4, 0x_C6, 0x_7C, 0x_F8, 0x_10, 0x_13, 0x_7C, 0x_3B, 0x_13, 0x_16, 0x_9C, 0x_B6, 0x_19,
		0x_B6, 0x_16, 0x_D4, 0x_D4, 0x_C6, 0x_5E, 0x_F8, 0x_16, 0x_9C, 0x_16, 0x_16, 0x_AB, 0x_10, 0x_9C, 0x_B6,
		0x_F8, 0x_7C, 0x_7C, 0x_AB, 0x_5E, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_5E, 0x_9C, 0x_B6, 0x_3A, 0x_D4, 0x_AB, 0x_C6, 0x_13, 0x_16, 0x_10, 0x_7C, 0x_F8,
	];

	helper(S, BASE, 717_309_123);
}
// endregion
// region: s_has_signs_and_6_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_6_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_59, 0x_74, 0x_59, 0x_37, 0x_54, 0x_50, 0x_50, 0x_FC, 0x_67,
		0x_E8, 0x_59, 0x_41, 0x_59, 0x_50, 0x_51, 0x_E7, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_54, 0x_1D, 0x_E8, 0x_51, 0x_26, 0x_59, 0x_E4, 0x_85, 0x_FC, 0x_A0, 0x_E7, 0x_50, 0x_B5, 0x_02,
		0x_67, 0x_2A, 0x_41, 0x_6D,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_signs_and_95_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_95_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_17,
		0x_49, 0x_3D, 0x_42, 0x_36, 0x_EC, 0x_11, 0x_42, 0x_42, 0x_49, 0x_BF, 0x_49, 0x_9C, 0x_BF, 0x_9C, 0x_ED,
		0x_13, 0x_17, 0x_52, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_37, 0x_11, 0x_ED, 0x_43, 0x_17, 0x_13, 0x_6E, 0x_52, 0x_8C, 0x_08, 0x_36, 0x_BF, 0x_42, 0x_EC,
		0x_9C, 0x_D2, 0x_BE, 0x_02,
	];

	helper(S, BASE, 95);
}
// endregion
// region: s_has_signs_and_110_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_110_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_CF, 0x_94, 0x_E7, 0x_73, 0x_94, 0x_80, 0x_7C, 0x_94, 0x_CF, 0x_26, 0x_7C,
		0x_95, 0x_94, 0x_5C, 0x_43, 0x_38, 0x_73, 0x_04, 0x_16, 0x_38, 0x_80, 0x_94, 0x_95, 0x_43, 0x_D5, 0x_67,
		0x_45, 0x_26, 0x_90, 0x_94, 0x_8C, 0x_94,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_95, 0x_D5, 0x_5C, 0x_7C, 0x_CF, 0x_04, 0x_43, 0x_16, 0x_BA, 0x_73, 0x_26, 0x_90, 0x_45, 0x_38,
		0x_94, 0x_67, 0x_A5, 0x_8C,
	];

	helper(S, BASE, 110);
}
// endregion
// region: s_has_signs_and_7_775_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_7_775_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_C1, 0x_CA, 0x_86, 0x_01, 0x_88, 0x_CD, 0x_9D,
		0x_E9, 0x_33, 0x_9C, 0x_CA, 0x_9C, 0x_CA, 0x_33, 0x_F5, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_B2, 0x_C1, 0x_CA, 0x_49, 0x_01, 0x_9D, 0x_60, 0x_2F, 0x_33, 0x_9C, 0x_86, 0x_E9, 0x_F5, 0x_DF, 0x_CD,
		0x_E6, 0x_4B, 0x_68, 0x_8B,
	];

	helper(S, BASE, 7_775);
}
// endregion
// region: s_has_signs_and_22_493_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_22_493_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_05, 0x_C6, 0x_C6, 0x_62, 0x_0C,
		0x_3D, 0x_85, 0x_CE, 0x_CE, 0x_47, 0x_F6, 0x_C9, 0x_62, 0x_FD, 0x_DD, 0x_8D, 0x_05, 0x_47, 0x_62, 0x_8D,
		0x_85, 0x_8D, 0x_42, 0x_3D, 0x_C9, 0x_47, 0x_BB, 0x_DD, 0x_05, 0x_C9, 0x_CE, 0x_8D, 0x_B3, 0x_06, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_42, 0x_3D, 0x_05, 0x_BB, 0x_C6, 0x_85, 0x_FD, 0x_CE, 0x_F6, 0x_E9, 0x_DD, 0x_B3, 0x_47, 0x_8D,
		0x_06, 0x_62, 0x_C3, 0x_77,
	];

	helper(S, BASE, 22_493);
}
// endregion
// region: s_has_signs_and_423_294_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_423_294_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_24, 0x_56, 0x_22, 0x_C5, 0x_1C, 0x_1F, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_8F, 0x_25, 0x_24, 0x_56, 0x_F1, 0x_CF, 0x_0E, 0x_FE, 0x_E2, 0x_C5, 0x_F4, 0x_1C, 0x_22, 0x_55,
		0x_BE, 0x_3D, 0x_23, 0x_98,
	];

	helper(S, BASE, 423_294);
}
// endregion
// region: s_has_signs_and_1_514_973_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_1_514_973_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_6C, 0x_6C, 0x_DC, 0x_6C, 0x_CF, 0x_C0, 0x_46, 0x_25, 0x_44, 0x_8B, 0x_CD,
		0x_87, 0x_80, 0x_80, 0x_76, 0x_41, 0x_13, 0x_46, 0x_E0, 0x_55, 0x_25, 0x_87, 0x_87, 0x_44, 0x_97, 0x_13,
		0x_44, 0x_CD, 0x_1D, 0x_13, 0x_41, 0x_1D, 0x_CF, 0x_E2, 0x_25, 0x_DC, 0x_87, 0x_CF, 0x_55, 0x_41, 0x_76,
		0x_8B, 0x_E2, 0x_25, 0x_1D, 0x_8B, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_55, 0x_44, 0x_76, 0x_8B, 0x_13, 0x_E2, 0x_E0, 0x_CF, 0x_CD, 0x_25, 0x_6C, 0x_D6, 0x_80, 0x_46,
		0x_87, 0x_DC, 0x_97, 0x_41,
	];

	helper(S, BASE, 1_514_973);
}
// endregion
// region: s_has_signs_and_56_876_327_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_56_876_327_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_97, 0x_B3, 0x_7F, 0x_3C, 0x_9B, 0x_8F, 0x_D8,
		0x_15, 0x_A1, 0x_08, 0x_3F, 0x_B3, 0x_7F, 0x_17, 0x_B3, 0x_53, 0x_56, 0x_97, 0x_3C, 0x_24, 0x_24, 0x_53,
		0x_1C, 0x_8F, 0x_53, 0x_97, 0x_A1, 0x_D8, 0x_EA, 0x_53, 0x_D8, 0x_EA, 0x_8F, 0x_08, 0x_9A, 0x_24, 0x_EA,
		0x_56,
	];
	const BASE: &[u8] = &[
		0x_A1, 0x_97, 0x_8F, 0x_B3, 0x_9B, 0x_3F, 0x_24, 0x_18, 0x_3C, 0x_56, 0x_1C, 0x_4A, 0x_EA, 0x_08, 0x_9A,
		0x_17, 0x_53, 0x_D8, 0x_7F,
	];

	helper(S, BASE, 56_876_327);
}
// endregion
// region: s_has_signs_and_863_419_480_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_863_419_480_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_3E, 0x_8D, 0x_B7, 0x_8D, 0x_FC, 0x_B7, 0x_44, 0x_C3, 0x_E6, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_6D, 0x_0E, 0x_42, 0x_FC, 0x_50, 0x_8D, 0x_14, 0x_7E, 0x_39, 0x_44, 0x_AB, 0x_B1, 0x_B7, 0x_C1,
		0x_AF, 0x_03, 0x_E6, 0x_3E,
	];

	helper(S, BASE, 863_419_480);
}
// endregion
// region: s_has_signs_and_4_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_4_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_71, 0x_FE, 0x_3A, 0x_50, 0x_AD, 0x_05, 0x_89,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_CD, 0x_A9, 0x_67, 0x_71, 0x_CA, 0x_53, 0x_DA, 0x_C5, 0x_9E, 0x_02, 0x_58, 0x_E7, 0x_DE, 0x_E6,
		0x_87, 0x_9D, 0x_B2, 0x_73, 0x_EE, 0x_EC, 0x_1D, 0x_50, 0x_89, 0x_1B, 0x_45, 0x_B4, 0x_BD, 0x_8C, 0x_C3,
		0x_23, 0x_22, 0x_92, 0x_5C, 0x_84, 0x_AD, 0x_FC, 0x_08, 0x_05, 0x_BE, 0x_F9, 0x_3A,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_signs_and_10_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_10_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2A, 0x_7C, 0x_D5, 0x_85, 0x_FD, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_4D, 0x_16, 0x_D5, 0x_D3, 0x_C3, 0x_FD, 0x_4E, 0x_73, 0x_12, 0x_2A, 0x_1F, 0x_EB, 0x_54, 0x_14,
		0x_1A, 0x_71, 0x_CF, 0x_6C, 0x_8C, 0x_8D, 0x_42, 0x_6E, 0x_EE, 0x_89, 0x_85, 0x_EA, 0x_AE, 0x_F1, 0x_D9,
		0x_65, 0x_98, 0x_95, 0x_23, 0x_83, 0x_37, 0x_D1, 0x_BF, 0x_C2, 0x_68, 0x_C7, 0x_D0,
	];

	helper(S, BASE, 10);
}
// endregion
// region: s_has_signs_and_675_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_675_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_17, 0x_AB, 0x_E3, 0x_0F, 0x_B4, 0x_EA, 0x_7E,
		0x_6B, 0x_7E, 0x_46, 0x_DD, 0x_E7, 0x_B4, 0x_A4, 0x_CA, 0x_87, 0x_64, 0x_A8, 0x_C7, 0x_99, 0x_EA, 0x_C7,
		0x_7E, 0x_1D, 0x_5B, 0x_B4, 0x_A8, 0x_6B, 0x_C4, 0x_17, 0x_6B, 0x_7E, 0x_0F, 0x_B9,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_46, 0x_56, 0x_AB, 0x_11, 0x_A1, 0x_C7, 0x_5E, 0x_27, 0x_2F, 0x_7E, 0x_7F, 0x_6B, 0x_34, 0x_0F,
		0x_B9, 0x_17, 0x_B4, 0x_EA, 0x_5B, 0x_A4, 0x_C4, 0x_5C, 0x_A2, 0x_64, 0x_DD, 0x_31, 0x_10, 0x_E7, 0x_E9,
		0x_A8, 0x_1D, 0x_87, 0x_99, 0x_E0, 0x_40, 0x_F2, 0x_38, 0x_CA, 0x_16, 0x_61, 0x_32,
	];

	helper(S, BASE, 675);
}
// endregion
// region: s_has_signs_and_5_834_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_5_834_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_0F, 0x_EF, 0x_07, 0x_44, 0x_5C, 0x_AE, 0x_83, 0x_D6, 0x_3C, 0x_CD, 0x_B4, 0x_7E, 0x_AE, 0x_5B,
		0x_DF, 0x_CD, 0x_9D, 0x_7E, 0x_5B, 0x_D4, 0x_5C, 0x_26, 0x_0F, 0x_88, 0x_C3, 0x_AE, 0x_0F, 0x_53, 0x_3B,
		0x_1A, 0x_5C, 0x_F1, 0x_3C, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_D6, 0x_5C, 0x_0F, 0x_1A, 0x_F2, 0x_7D, 0x_59, 0x_D4, 0x_3B, 0x_1B, 0x_39, 0x_EF, 0x_FD, 0x_B4,
		0x_83, 0x_86, 0x_FA, 0x_FF, 0x_9D, 0x_AE, 0x_CC, 0x_A1, 0x_CD, 0x_5B, 0x_5D, 0x_D0, 0x_DF, 0x_F7, 0x_7B,
		0x_2C, 0x_F1, 0x_C3, 0x_D2, 0x_7E, 0x_F4, 0x_88, 0x_3C, 0x_07, 0x_53, 0x_DB, 0x_42,
	];

	helper(S, BASE, 5_834);
}
// endregion
// region: s_has_signs_and_91_285_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_91_285_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_1C, 0x_B0, 0x_7D, 0x_97, 0x_4A, 0x_97, 0x_E7, 0x_CA, 0x_B0, 0x_40, 0x_1B,
		0x_78, 0x_F4, 0x_7D, 0x_92, 0x_06, 0x_40, 0x_A1, 0x_E5, 0x_C9, 0x_92, 0x_CB, 0x_40, 0x_1C, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_1C, 0x_23, 0x_B3, 0x_CB, 0x_C8, 0x_B8, 0x_5F, 0x_39, 0x_B0, 0x_58, 0x_52, 0x_76, 0x_E5, 0x_F4,
		0x_7A, 0x_A7, 0x_90, 0x_4E, 0x_97, 0x_B5, 0x_78, 0x_65, 0x_4B, 0x_99, 0x_54, 0x_08, 0x_92, 0x_85, 0x_40,
		0x_CA, 0x_7D, 0x_1B, 0x_81, 0x_E7, 0x_87, 0x_C9, 0x_A1, 0x_89, 0x_06, 0x_9A, 0x_6E,
	];

	helper(S, BASE, 91_285);
}
// endregion
// region: s_has_signs_and_635_234_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_635_234_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_E7, 0x_DE, 0x_E9, 0x_A1,
		0x_58, 0x_F7, 0x_E3, 0x_77, 0x_76, 0x_E8, 0x_A9, 0x_6B, 0x_D4, 0x_76, 0x_E7, 0x_F7, 0x_92, 0x_6B, 0x_CF,
		0x_E7, 0x_77, 0x_E2, 0x_C9, 0x_9F, 0x_BD, 0x_7B, 0x_67, 0x_95, 0x_96, 0x_76, 0x_C9, 0x_67, 0x_05, 0x_E7,
		0x_F7, 0x_06, 0x_BD, 0x_E3, 0x_10, 0x_E8, 0x_05, 0x_A4, 0x_92, 0x_E8, 0x_6B,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_86, 0x_08, 0x_B0, 0x_E9, 0x_D4, 0x_67, 0x_39, 0x_E7, 0x_17, 0x_C9, 0x_43, 0x_F7, 0x_63, 0x_5C,
		0x_95, 0x_2C, 0x_7B, 0x_DA, 0x_9F, 0x_06, 0x_70, 0x_E8, 0x_10, 0x_DE, 0x_A9, 0x_A1, 0x_A4, 0x_F3, 0x_B7,
		0x_E3, 0x_83, 0x_6B, 0x_BD, 0x_9A, 0x_05, 0x_76, 0x_6D, 0x_96, 0x_E2, 0x_CF, 0x_77,
	];

	helper(S, BASE, 635_234);
}
// endregion
// region: s_has_signs_and_9_128_945_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_9_128_945_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2E, 0x_EF, 0x_B0, 0x_3D, 0x_85, 0x_22, 0x_7B,
		0x_E8, 0x_E1, 0x_CE, 0x_D8, 0x_FA, 0x_F6, 0x_7A, 0x_2E, 0x_CF, 0x_62, 0x_B1, 0x_3D, 0x_0E, 0x_82, 0x_42,
		0x_92, 0x_0E, 0x_29, 0x_F6, 0x_7B, 0x_D5, 0x_29, 0x_E4, 0x_FA, 0x_DC, 0x_CE, 0x_3D, 0x_82, 0x_E4, 0x_8B,
		0x_E1, 0x_E8, 0x_3E, 0x_E8, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_0E, 0x_2E, 0x_FA, 0x_74, 0x_3D, 0x_D8, 0x_57, 0x_EB, 0x_B0, 0x_A3, 0x_26, 0x_7A, 0x_D5, 0x_86,
		0x_3E, 0x_E4, 0x_BC, 0x_8B, 0x_82, 0x_92, 0x_CE, 0x_F7, 0x_42, 0x_E8, 0x_62, 0x_9A, 0x_4C, 0x_CB, 0x_DC,
		0x_29, 0x_CF, 0x_AF, 0x_F6, 0x_DB, 0x_85, 0x_B9, 0x_E1, 0x_7B, 0x_EF, 0x_1B, 0x_B1,
	];

	helper(S, BASE, 9_128_945);
}
// endregion
// region: s_has_signs_and_86_305_674_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_86_305_674_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_31,
		0x_FD, 0x_5B, 0x_7D, 0x_69, 0x_E5, 0x_16, 0x_D9, 0x_D9, 0x_31, 0x_28, 0x_67, 0x_4F, 0x_BE, 0x_46, 0x_A5,
		0x_CB, 0x_BE, 0x_32, 0x_7A, 0x_E2, 0x_16, 0x_56, 0x_03, 0x_67, 0x_17, 0x_FD, 0x_11, 0x_17, 0x_DF, 0x_FD,
		0x_17, 0x_67, 0x_4F, 0x_8F, 0x_31, 0x_28, 0x_C0, 0x_96, 0x_A0, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_46, 0x_BD, 0x_67, 0x_56, 0x_7D, 0x_F8, 0x_16, 0x_96, 0x_53, 0x_D0, 0x_18, 0x_45, 0x_7E, 0x_7A,
		0x_8B, 0x_E2, 0x_BE, 0x_64, 0x_DF, 0x_03, 0x_D9, 0x_4F, 0x_28, 0x_8F, 0x_A0, 0x_42, 0x_31, 0x_32, 0x_A5,
		0x_FD, 0x_24, 0x_D6, 0x_17, 0x_11, 0x_F6, 0x_5A, 0x_CB, 0x_5B, 0x_5D, 0x_C0, 0x_6B,
	];

	helper(S, BASE, 86_305_674);
}
// endregion
// region: s_has_signs_and_597_606_446_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_597_606_446_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_E9, 0x_C0, 0x_4A, 0x_3F, 0x_2F, 0x_A2, 0x_86, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_F4, 0x_4A, 0x_10, 0x_E9, 0x_9C, 0x_2F, 0x_3F, 0x_BC, 0x_39, 0x_DA, 0x_54, 0x_80, 0x_D8, 0x_16,
		0x_F0, 0x_CD, 0x_29, 0x_02, 0x_64, 0x_3A, 0x_B1, 0x_BB, 0x_6B, 0x_C0, 0x_D7, 0x_5C, 0x_9D, 0x_78, 0x_C7,
		0x_F6, 0x_1C, 0x_7C, 0x_B4, 0x_BD, 0x_F9, 0x_A9, 0x_84, 0x_A2, 0x_A0, 0x_E8, 0x_26,
	];

	helper(S, BASE, 597_606_446);
}
// endregion
// region: s_has_signs_and_5_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_5_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_71, 0x_5A, 0x_83, 0x_73, 0x_C5, 0x_F1, 0x_EC, 0x_41, 0x_F4,
		0x_BF, 0x_9D, 0x_A0, 0x_73, 0x_3F, 0x_D5, 0x_A1, 0x_A0, 0x_35, 0x_D6, 0x_F4, 0x_6E, 0x_1A, 0x_4B, 0x_33,
		0x_73, 0x_BF, 0x_DA, 0x_AC, 0x_10, 0x_FB, 0x_2C, 0x_F8, 0x_A0, 0x_56, 0x_9E, 0x_66, 0x_3F, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_F5, 0x_95, 0x_FB, 0x_C3, 0x_71, 0x_E6, 0x_EE, 0x_E4, 0x_F2, 0x_7A, 0x_16, 0x_D6, 0x_85, 0x_F1,
		0x_3B, 0x_B4, 0x_D0, 0x_41, 0x_74, 0x_13, 0x_AB, 0x_AE, 0x_2C, 0x_9D, 0x_E9, 0x_FA, 0x_3D, 0x_94, 0x_9E,
		0x_56, 0x_73, 0x_4B, 0x_1A, 0x_C4, 0x_28, 0x_F4, 0x_48, 0x_DA, 0x_D8, 0x_BF, 0x_FE, 0x_40, 0x_8E, 0x_90,
		0x_6E, 0x_C5, 0x_10, 0x_50, 0x_97, 0x_AC, 0x_58, 0x_8B, 0x_86, 0x_EC, 0x_3F, 0x_33, 0x_F8, 0x_C1, 0x_35,
		0x_B2, 0x_30, 0x_45, 0x_2E, 0x_05, 0x_66, 0x_D5, 0x_A1, 0x_A0, 0x_FC, 0x_01, 0x_8D, 0x_83,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_signs_and_29_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_29_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_17, 0x_9E, 0x_19, 0x_51,
		0x_6F, 0x_53, 0x_DB, 0x_38, 0x_8E, 0x_AF, 0x_54, 0x_8B, 0x_F3, 0x_8E, 0x_5A, 0x_D9, 0x_56, 0x_5A, 0x_CA,
		0x_07, 0x_C0, 0x_5A, 0x_B1, 0x_2F, 0x_54, 0x_17, 0x_07, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_78, 0x_AC, 0x_8E, 0x_F3, 0x_6A, 0x_38, 0x_0E, 0x_E7, 0x_A8, 0x_19, 0x_63, 0x_3E, 0x_07, 0x_86,
		0x_70, 0x_30, 0x_D9, 0x_15, 0x_53, 0x_DB, 0x_E6, 0x_54, 0x_05, 0x_E4, 0x_6F, 0x_B3, 0x_C3, 0x_93, 0x_17,
		0x_4B, 0x_2F, 0x_0F, 0x_C7, 0x_F5, 0x_B1, 0x_56, 0x_F1, 0x_7C, 0x_B9, 0x_AF, 0x_D3, 0x_CA, 0x_4C, 0x_C0,
		0x_6E, 0x_27, 0x_72, 0x_49, 0x_75, 0x_E9, 0x_5A, 0x_84, 0x_04, 0x_97, 0x_BC, 0x_50, 0x_67, 0x_B0, 0x_3D,
		0x_2E, 0x_8B, 0x_62, 0x_6C, 0x_31, 0x_6B, 0x_4A, 0x_51, 0x_76, 0x_5B, 0x_02, 0x_A0, 0x_1D,
	];

	helper(S, BASE, 29);
}
// endregion
// region: s_has_signs_and_563_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_563_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_91, 0x_E6, 0x_3C, 0x_74, 0x_36, 0x_9A, 0x_F5, 0x_1A, 0x_9A, 0x_01, 0x_39, 0x_4C, 0x_AC, 0x_E6,
		0x_06, 0x_9F, 0x_DE, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_B8, 0x_74, 0x_C8, 0x_5C, 0x_30, 0x_34, 0x_91, 0x_F7, 0x_C3, 0x_03, 0x_E1, 0x_F5, 0x_AC, 0x_01,
		0x_1A, 0x_7B, 0x_89, 0x_75, 0x_8F, 0x_C7, 0x_DE, 0x_EC, 0x_51, 0x_26, 0x_24, 0x_2E, 0x_79, 0x_5E, 0x_FA,
		0x_C1, 0x_62, 0x_8A, 0x_B9, 0x_5F, 0x_99, 0x_18, 0x_FB, 0x_AA, 0x_06, 0x_96, 0x_A7, 0x_93, 0x_9A, 0x_22,
		0x_9F, 0x_4C, 0x_4A, 0x_83, 0x_A4, 0x_F2, 0x_A8, 0x_E6, 0x_E7, 0x_6C, 0x_B6, 0x_BF, 0x_71, 0x_39, 0x_43,
		0x_41, 0x_8B, 0x_FC, 0x_F6, 0x_9D, 0x_81, 0x_36, 0x_DF, 0x_56, 0x_92, 0x_CA, 0x_D2, 0x_D5,
	];

	helper(S, BASE, 563);
}
// endregion
// region: s_has_signs_and_4_571_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_4_571_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_F2, 0x_08, 0x_C6, 0x_90, 0x_03, 0x_30, 0x_13, 0x_2A, 0x_87, 0x_1C,
		0x_1C, 0x_96, 0x_DD, 0x_17, 0x_7B, 0x_17, 0x_7A, 0x_F2, 0x_9A, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_7B, 0x_B1, 0x_17, 0x_9A, 0x_52, 0x_3A, 0x_A5, 0x_4B, 0x_DC, 0x_A2, 0x_55, 0x_EB, 0x_ED, 0x_74,
		0x_50, 0x_C8, 0x_BB, 0x_87, 0x_90, 0x_33, 0x_03, 0x_98, 0x_F5, 0x_E8, 0x_7A, 0x_B3, 0x_30, 0x_93, 0x_D0,
		0x_B6, 0x_46, 0x_C3, 0x_63, 0x_15, 0x_A0, 0x_61, 0x_13, 0x_E2, 0x_C9, 0x_9F, 0x_1F, 0x_B2, 0x_C5, 0x_F3,
		0x_08, 0x_1E, 0x_72, 0x_F6, 0x_DD, 0x_97, 0x_BC, 0x_10, 0x_34, 0x_41, 0x_43, 0x_8A, 0x_FF, 0x_26, 0x_D9,
		0x_38, 0x_5D, 0x_F2, 0x_2A, 0x_1C, 0x_C1, 0x_96, 0x_F7, 0x_02, 0x_88, 0x_31, 0x_B0, 0x_45,
	];

	helper(S, BASE, 4_571);
}
// endregion
// region: s_has_signs_and_95_749_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_95_749_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_9E, 0x_D2, 0x_40, 0x_CC, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_3A, 0x_B7, 0x_F6, 0x_FC, 0x_8F, 0x_A0, 0x_93, 0x_3C, 0x_65, 0x_34, 0x_CA, 0x_6B, 0x_32, 0x_1E,
		0x_D0, 0x_49, 0x_9E, 0x_6D, 0x_52, 0x_D4, 0x_D9, 0x_C9, 0x_E2, 0x_73, 0x_B3, 0x_8D, 0x_46, 0x_4A, 0x_15,
		0x_F0, 0x_FF, 0x_3B, 0x_35, 0x_50, 0x_BF, 0x_08, 0x_AF, 0x_8E, 0x_A6, 0x_99, 0x_AC, 0x_48, 0x_3E, 0x_EE,
		0x_B4, 0x_40, 0x_DB, 0x_E6, 0x_10, 0x_69, 0x_8B, 0x_C4, 0x_11, 0x_7C, 0x_DA, 0x_41, 0x_14, 0x_B1, 0x_F9,
		0x_C6, 0x_7D, 0x_58, 0x_91, 0x_F3, 0x_B9, 0x_21, 0x_2F, 0x_51, 0x_C1, 0x_D2, 0x_62, 0x_4E,
	];

	helper(S, BASE, 95_749);
}
// endregion
// region: s_has_signs_and_593_547_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_593_547_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_5B, 0x_1F, 0x_8F, 0x_88, 0x_CD,
		0x_6D, 0x_6D, 0x_03, 0x_BB, 0x_BB, 0x_80, 0x_3F, 0x_4A, 0x_63, 0x_FF, 0x_5F, 0x_03, 0x_42, 0x_83, 0x_5D,
		0x_FC, 0x_E4, 0x_7D, 0x_73, 0x_43, 0x_4C, 0x_5E, 0x_41, 0x_FC, 0x_43, 0x_73, 0x_61, 0x_72, 0x_29, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_5B, 0x_42, 0x_DF, 0x_72, 0x_16, 0x_95, 0x_A4, 0x_41, 0x_79, 0x_2F, 0x_F9, 0x_80, 0x_37, 0x_36,
		0x_21, 0x_4C, 0x_FC, 0x_29, 0x_5E, 0x_93, 0x_3F, 0x_EB, 0x_E4, 0x_F3, 0x_FF, 0x_7D, 0x_8F, 0x_03, 0x_2A,
		0x_FB, 0x_CF, 0x_35, 0x_AC, 0x_0E, 0x_A8, 0x_FD, 0x_E1, 0x_1F, 0x_C4, 0x_63, 0x_3B, 0x_DB, 0x_3E, 0x_9A,
		0x_B9, 0x_6D, 0x_54, 0x_52, 0x_83, 0x_49, 0x_7A, 0x_6A, 0x_50, 0x_9B, 0x_74, 0x_D8, 0x_88, 0x_7C, 0x_BB,
		0x_61, 0x_73, 0x_A3, 0x_D0, 0x_55, 0x_DA, 0x_8E, 0x_CA, 0x_43, 0x_4A, 0x_5F, 0x_5D, 0x_AD,
	];

	helper(S, BASE, 593_547);
}
// endregion
// region: s_has_signs_and_2_009_861_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_2_009_861_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_3D, 0x_BA, 0x_5C, 0x_D1, 0x_C0, 0x_EE, 0x_31, 0x_E2, 0x_97, 0x_C4, 0x_02, 0x_A9, 0x_FA, 0x_29,
		0x_D1, 0x_D8, 0x_89, 0x_38, 0x_5C, 0x_18, 0x_D1, 0x_6A, 0x_C5, 0x_E2, 0x_3D, 0x_35, 0x_CC, 0x_6E, 0x_6E,
		0x_F5, 0x_38, 0x_39, 0x_C6, 0x_49, 0x_6E, 0x_DF, 0x_D5, 0x_39, 0x_C4, 0x_39, 0x_25, 0x_97, 0x_39, 0x_74,
		0x_31,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_FB, 0x_97, 0x_D5, 0x_68, 0x_3D, 0x_B3, 0x_47, 0x_53, 0x_DB, 0x_67, 0x_5C, 0x_BA, 0x_22, 0x_17,
		0x_4E, 0x_48, 0x_E1, 0x_C5, 0x_33, 0x_A1, 0x_B6, 0x_A5, 0x_CC, 0x_BD, 0x_D1, 0x_89, 0x_6A, 0x_E2, 0x_31,
		0x_FA, 0x_F5, 0x_18, 0x_A9, 0x_25, 0x_29, 0x_36, 0x_DF, 0x_1F, 0x_A6, 0x_D4, 0x_F0, 0x_02, 0x_52, 0x_64,
		0x_74, 0x_69, 0x_85, 0x_C6, 0x_8D, 0x_C4, 0x_66, 0x_49, 0x_FE, 0x_F6, 0x_77, 0x_FD, 0x_35, 0x_EF, 0x_F3,
		0x_39, 0x_EE, 0x_D8, 0x_41, 0x_4A, 0x_5D, 0x_EA, 0x_78, 0x_40, 0x_03, 0x_6E, 0x_38, 0x_BB,
	];

	helper(S, BASE, 2_009_861);
}
// endregion
// region: s_has_signs_and_56_941_697_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_56_941_697_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_94, 0x_D9, 0x_8F, 0x_9C, 0x_9C, 0x_30, 0x_3F, 0x_5A, 0x_DF,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_5C, 0x_94, 0x_E9, 0x_C5, 0x_91, 0x_1C, 0x_38, 0x_CA, 0x_86, 0x_C8, 0x_CD, 0x_42, 0x_87, 0x_81,
		0x_A0, 0x_ED, 0x_68, 0x_9C, 0x_92, 0x_BE, 0x_E6, 0x_6B, 0x_71, 0x_AF, 0x_0F, 0x_34, 0x_8F, 0x_60, 0x_47,
		0x_12, 0x_A7, 0x_4D, 0x_4A, 0x_82, 0x_BA, 0x_95, 0x_F3, 0x_5A, 0x_E0, 0x_75, 0x_EA, 0x_3A, 0x_B4, 0x_55,
		0x_E7, 0x_37, 0x_A1, 0x_D2, 0x_73, 0x_DE, 0x_1D, 0x_50, 0x_E4, 0x_DF, 0x_7F, 0x_A6, 0x_E2, 0x_F2, 0x_36,
		0x_3F, 0x_C7, 0x_43, 0x_F6, 0x_44, 0x_76, 0x_26, 0x_8E, 0x_FC, 0x_9D, 0x_D6, 0x_08, 0x_E5,
	];

	helper(S, BASE, 56_941_697);
}
// endregion
// region: s_has_signs_and_644_163_086_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_644_163_086_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_A5, 0x_EA, 0x_3D, 0x_50, 0x_3D, 0x_5E, 0x_80, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_61, 0x_5A, 0x_FB, 0x_E5, 0x_F7, 0x_E8, 0x_95, 0x_69, 0x_1F, 0x_CA, 0x_83, 0x_A0, 0x_13, 0x_38,
		0x_A6, 0x_51, 0x_29, 0x_35, 0x_93, 0x_AE, 0x_04, 0x_A5, 0x_8B, 0x_80, 0x_17, 0x_32, 0x_92, 0x_1A, 0x_C7,
		0x_7C, 0x_E9, 0x_05, 0x_57, 0x_D6, 0x_C0, 0x_AC, 0x_EC, 0x_89, 0x_A7, 0x_D0, 0x_10, 0x_4C, 0x_81, 0x_F5,
		0x_E4, 0x_16, 0x_E1, 0x_6E, 0x_EA, 0x_59, 0x_1D, 0x_70, 0x_AB, 0x_FF, 0x_66, 0x_A1, 0x_50, 0x_48, 0x_5C,
		0x_84, 0x_72, 0x_C4, 0x_3D, 0x_D4, 0x_BD, 0x_4E, 0x_B7, 0x_01, 0x_9E, 0x_7F, 0x_47, 0x_F8,
	];

	helper(S, BASE, 644_163_086);
}
// endregion
// region: s_has_signs_and_8_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_8_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_9E, 0x_20, 0x_ED, 0x_03,
		0x_45, 0x_B9, 0x_C2, 0x_23, 0x_2A, 0x_EC, 0x_CF, 0x_D9, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_67, 0x_F1, 0x_14, 0x_D3, 0x_87, 0x_44, 0x_74, 0x_9E, 0x_B7, 0x_9B, 0x_10, 0x_99, 0x_22, 0x_11,
		0x_58, 0x_BF, 0x_1C, 0x_68, 0x_04, 0x_F5, 0x_55, 0x_5F, 0x_96, 0x_46, 0x_57, 0x_70, 0x_36, 0x_E9, 0x_A9,
		0x_EC, 0x_8F, 0x_FA, 0x_4C, 0x_53, 0x_34, 0x_4E, 0x_64, 0x_CF, 0x_66, 0x_FC, 0x_05, 0x_93, 0x_3F, 0x_B9,
		0x_7B, 0x_FD, 0x_4B, 0x_45, 0x_A6, 0x_80, 0x_F3, 0x_3A, 0x_9A, 0x_C4, 0x_77, 0x_8C, 0x_56, 0x_B5, 0x_BE,
		0x_4A, 0x_85, 0x_E8, 0x_CE, 0x_D0, 0x_08, 0x_65, 0x_FF, 0x_CC, 0x_B4, 0x_6E, 0x_AA, 0x_3D, 0x_59, 0x_43,
		0x_6D, 0x_7E, 0x_8B, 0x_5C, 0x_F7, 0x_03, 0x_CD, 0x_B3, 0x_F2, 0x_C6, 0x_76, 0x_92, 0x_D9, 0x_A5, 0x_A2,
		0x_C2, 0x_31, 0x_CB, 0x_7A, 0x_C7, 0x_12, 0x_38, 0x_AD, 0x_9F, 0x_D8, 0x_D5, 0x_91, 0x_6F, 0x_DD, 0x_23,
		0x_2A, 0x_78, 0x_EF, 0x_95, 0x_2F, 0x_ED, 0x_75, 0x_73,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_signs_and_26_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_26_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_8A, 0x_8E,
		0x_24, 0x_C7, 0x_7D, 0x_4A, 0x_AB, 0x_13, 0x_02, 0x_2C, 0x_9A, 0x_FD, 0x_24, 0x_FB, 0x_D4, 0x_FD, 0x_CB,
		0x_07, 0x_75, 0x_30, 0x_7E, 0x_1C, 0x_FF, 0x_2F, 0x_D4, 0x_C4, 0x_F1, 0x_AE, 0x_AA, 0x_4A, 0x_A7, 0x_27,
		0x_24,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_2C, 0x_95, 0x_18, 0x_B2, 0x_75, 0x_AA, 0x_38, 0x_53, 0x_9D, 0x_3D, 0x_80, 0x_5F, 0x_29, 0x_24,
		0x_C2, 0x_05, 0x_79, 0x_6A, 0x_B6, 0x_10, 0x_28, 0x_86, 0x_27, 0x_5B, 0x_DD, 0x_8A, 0x_07, 0x_2F, 0x_52,
		0x_4C, 0x_3F, 0x_55, 0x_02, 0x_97, 0x_9E, 0x_B4, 0x_CB, 0x_1C, 0x_4D, 0x_A0, 0x_85, 0x_77, 0x_D5, 0x_34,
		0x_D3, 0x_88, 0x_7E, 0x_A7, 0x_E2, 0x_D0, 0x_4A, 0x_C4, 0x_7A, 0x_82, 0x_26, 0x_49, 0x_F1, 0x_72, 0x_F5,
		0x_3A, 0x_96, 0x_67, 0x_C7, 0x_D6, 0x_8F, 0x_30, 0x_7D, 0x_FD, 0x_7C, 0x_AF, 0x_E5, 0x_5C, 0x_EB, 0x_C9,
		0x_2E, 0x_06, 0x_16, 0x_B5, 0x_F2, 0x_DB, 0x_FB, 0x_B7, 0x_F6, 0x_13, 0x_C6, 0x_25, 0x_1A, 0x_14, 0x_9A,
		0x_35, 0x_D4, 0x_CD, 0x_21, 0x_90, 0x_BB, 0x_66, 0x_D2, 0x_AB, 0x_81, 0x_37, 0x_65, 0x_CA, 0x_91, 0x_B0,
		0x_A9, 0x_84, 0x_93, 0x_5A, 0x_68, 0x_FF, 0x_94, 0x_6E,
	];

	helper(S, BASE, 26);
}
// endregion
// region: s_has_signs_and_678_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_678_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_E6, 0x_E0, 0x_D3, 0x_12, 0x_92, 0x_A3, 0x_AE, 0x_DA, 0x_1F,
		0x_D7, 0x_A1, 0x_4C, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_E9, 0x_7D, 0x_13, 0x_4C, 0x_1A, 0x_E6, 0x_E8, 0x_F2, 0x_2F, 0x_B5, 0x_0E, 0x_94, 0x_03, 0x_06,
		0x_AC, 0x_33, 0x_86, 0x_F8, 0x_B9, 0x_5A, 0x_07, 0x_31, 0x_FA, 0x_1F, 0x_0F, 0x_6B, 0x_73, 0x_3E, 0x_5C,
		0x_29, 0x_9A, 0x_1E, 0x_AF, 0x_22, 0x_17, 0x_E1, 0x_08, 0x_D4, 0x_A1, 0x_CC, 0x_3D, 0x_92, 0x_57, 0x_97,
		0x_12, 0x_64, 0x_16, 0x_69, 0x_B8, 0x_B7, 0x_A5, 0x_79, 0x_D6, 0x_5E, 0x_BA, 0x_7A, 0x_A9, 0x_8A, 0x_75,
		0x_72, 0x_CA, 0x_10, 0x_62, 0x_36, 0x_66, 0x_FE, 0x_2A, 0x_48, 0x_8B, 0x_95, 0x_35, 0x_45, 0x_D1, 0x_41,
		0x_38, 0x_AE, 0x_A3, 0x_B2, 0x_99, 0x_E7, 0x_E4, 0x_11, 0x_EF, 0x_6A, 0x_5D, 0x_CE, 0x_C9, 0x_FB, 0x_52,
		0x_18, 0x_D0, 0x_05, 0x_27, 0x_AB, 0x_AA, 0x_5F, 0x_24, 0x_77, 0x_BE, 0x_DA, 0x_23, 0x_B4, 0x_C5, 0x_9B,
		0x_1C, 0x_D7, 0x_67, 0x_59, 0x_A8, 0x_FD, 0x_4A, 0x_7E,
	];

	helper(S, BASE, 678);
}
// endregion
// region: s_has_signs_and_1_315_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_1_315_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_21, 0x_FB, 0x_F8, 0x_D2, 0x_9A, 0x_12, 0x_97, 0x_D0, 0x_B3, 0x_9B, 0x_E3,
		0x_81, 0x_45, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_81, 0x_E7, 0x_43, 0x_D2, 0x_9B, 0x_C4, 0x_F9, 0x_A4, 0x_B3, 0x_1E, 0x_8E, 0x_21, 0x_5E, 0x_B0, 0x_C3,
		0x_CB, 0x_F7, 0x_BF, 0x_8D, 0x_8A, 0x_7A, 0x_60, 0x_FC, 0x_C8, 0x_A1, 0x_6A, 0x_C9, 0x_27, 0x_74, 0x_E9,
		0x_F0, 0x_CD, 0x_FF, 0x_A7, 0x_C1, 0x_DA, 0x_9F, 0x_69, 0x_FA, 0x_8F, 0x_7C, 0x_D7, 0x_79, 0x_51, 0x_D9,
		0x_5C, 0x_4E, 0x_9A, 0x_BB, 0x_8B, 0x_72, 0x_89, 0x_EF, 0x_B6, 0x_12, 0x_9D, 0x_DC, 0x_F5, 0x_98, 0x_CC,
		0x_7D, 0x_DD, 0x_13, 0x_45, 0x_FD, 0x_6D, 0x_90, 0x_A8, 0x_ED, 0x_E5, 0x_96, 0x_97, 0x_FB, 0x_EE, 0x_83,
		0x_54, 0x_07, 0x_B5, 0x_E2, 0x_31, 0x_E8, 0x_BC, 0x_15, 0x_06, 0x_7F, 0x_38, 0x_A3, 0x_9C, 0x_1A, 0x_63,
		0x_86, 0x_B2, 0x_41, 0x_D0, 0x_84, 0x_11, 0x_E3, 0x_A0, 0x_9E, 0x_CF, 0x_DB, 0x_61, 0x_4B, 0x_AB, 0x_A5,
		0x_DF, 0x_10, 0x_C6, 0x_39, 0x_28, 0x_3C, 0x_B8, 0x_92,
	];

	helper(S, BASE, 1_315);
}
// endregion
// region: s_has_signs_and_15_735_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_15_735_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_C6, 0x_DF, 0x_86, 0x_C8, 0x_72, 0x_42,
		0x_35, 0x_69, 0x_BB, 0x_10, 0x_48, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_C6, 0x_C2, 0x_90, 0x_48, 0x_AF, 0x_6A, 0x_87, 0x_E2, 0x_50, 0x_9A, 0x_EB, 0x_51, 0x_5B, 0x_55,
		0x_AD, 0x_41, 0x_BE, 0x_17, 0x_EA, 0x_9D, 0x_1D, 0x_1A, 0x_83, 0x_42, 0x_67, 0x_DF, 0x_9F, 0x_86, 0x_CE,
		0x_91, 0x_A9, 0x_E6, 0x_1F, 0x_D3, 0x_66, 0x_28, 0x_A2, 0x_4B, 0x_74, 0x_88, 0x_3F, 0x_FF, 0x_22, 0x_36,
		0x_ED, 0x_80, 0x_E1, 0x_C3, 0x_DB, 0x_8A, 0x_FA, 0x_29, 0x_94, 0x_FB, 0x_23, 0x_32, 0x_D5, 0x_35, 0x_69,
		0x_F4, 0x_AB, 0x_06, 0x_11, 0x_A0, 0x_19, 0x_10, 0x_56, 0x_F1, 0x_34, 0x_B2, 0x_4D, 0x_F3, 0x_A8, 0x_AE,
		0x_DD, 0x_FC, 0x_8E, 0x_BB, 0x_70, 0x_02, 0x_95, 0x_8C, 0x_C7, 0x_1C, 0x_B0, 0x_DA, 0x_B3, 0x_CA, 0x_72,
		0x_99, 0x_B8, 0x_75, 0x_F0, 0x_7E, 0x_4A, 0x_D9, 0x_BA, 0x_EC, 0x_8F, 0x_FD, 0x_B7, 0x_57, 0x_8D, 0x_F8,
		0x_E3, 0x_F7, 0x_7F, 0x_3C, 0x_F2, 0x_6B, 0x_7A, 0x_98,
	];

	helper(S, BASE, 15_735);
}
// endregion
// region: s_has_signs_and_159_062_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_159_062_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_A1, 0x_F8, 0x_92, 0x_0A, 0x_C6, 0x_99, 0x_C6, 0x_C4, 0x_CB, 0x_62, 0x_26, 0x_6A, 0x_61, 0x_0F,
		0x_B9, 0x_D6, 0x_5A, 0x_E2, 0x_61, 0x_7B, 0x_5A, 0x_BB, 0x_9D, 0x_84, 0x_97, 0x_83, 0x_02, 0x_17, 0x_07,
		0x_88, 0x_19, 0x_14, 0x_E6, 0x_50, 0x_D9, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_D6, 0x_B0, 0x_19, 0x_05, 0x_FE, 0x_FA, 0x_83, 0x_B6, 0x_5A, 0x_81, 0x_BD, 0x_A1, 0x_1E, 0x_FD,
		0x_CD, 0x_AF, 0x_46, 0x_26, 0x_45, 0x_B9, 0x_48, 0x_A4, 0x_02, 0x_47, 0x_FB, 0x_78, 0x_F5, 0x_18, 0x_C5,
		0x_3B, 0x_EB, 0x_65, 0x_7F, 0x_07, 0x_85, 0x_D9, 0x_9D, 0x_97, 0x_A0, 0x_D8, 0x_79, 0x_71, 0x_C1, 0x_6A,
		0x_A2, 0x_E2, 0x_68, 0x_28, 0x_F4, 0x_ED, 0x_F8, 0x_27, 0x_D7, 0x_10, 0x_D1, 0x_86, 0x_7A, 0x_F7, 0x_04,
		0x_15, 0x_50, 0x_8E, 0x_9E, 0x_41, 0x_EA, 0x_BB, 0x_1D, 0x_A5, 0x_DD, 0x_88, 0x_92, 0x_B5, 0x_8A, 0x_C9,
		0x_AA, 0x_34, 0x_95, 0x_96, 0x_8B, 0x_23, 0x_55, 0x_14, 0x_16, 0x_8F, 0x_9C, 0x_DE, 0x_90, 0x_8D, 0x_C4,
		0x_7B, 0x_E6, 0x_84, 0x_0F, 0x_80, 0x_2A, 0x_CA, 0x_17, 0x_62, 0x_5D, 0x_74, 0x_08, 0x_61, 0x_FF, 0x_99,
		0x_D2, 0x_C6, 0x_CB, 0x_38, 0x_49, 0x_06, 0x_12, 0x_87,
	];

	helper(S, BASE, 159_062);
}
// endregion
// region: s_has_signs_and_6_843_832_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_6_843_832_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_33, 0x_78, 0x_3B, 0x_E1, 0x_62, 0x_BD, 0x_9B, 0x_80, 0x_10, 0x_33, 0x_45, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_45, 0x_C0, 0x_BD, 0x_33, 0x_39, 0x_D3, 0x_E5, 0x_93, 0x_5D, 0x_E4, 0x_B9, 0x_E9, 0x_2F, 0x_B2,
		0x_53, 0x_77, 0x_43, 0x_1B, 0x_07, 0x_7E, 0x_58, 0x_1C, 0x_D7, 0x_67, 0x_2E, 0x_E7, 0x_B3, 0x_3C, 0x_DD,
		0x_F8, 0x_32, 0x_1F, 0x_F6, 0x_15, 0x_47, 0x_80, 0x_73, 0x_C2, 0x_19, 0x_1A, 0x_E6, 0x_74, 0x_F5, 0x_B0,
		0x_46, 0x_0F, 0x_A8, 0x_EC, 0x_AA, 0x_52, 0x_99, 0x_C3, 0x_36, 0x_10, 0x_C5, 0x_85, 0x_DE, 0x_31, 0x_F3,
		0x_11, 0x_BF, 0x_92, 0x_08, 0x_50, 0x_6C, 0x_6D, 0x_71, 0x_EA, 0x_79, 0x_06, 0x_13, 0x_CF, 0x_DC, 0x_A4,
		0x_ED, 0x_A0, 0x_AF, 0x_66, 0x_A2, 0x_A1, 0x_CA, 0x_5C, 0x_78, 0x_91, 0x_9B, 0x_AC, 0x_D5, 0x_3A, 0x_16,
		0x_1D, 0x_94, 0x_E8, 0x_4C, 0x_C4, 0x_88, 0x_9D, 0x_8F, 0x_5E, 0x_41, 0x_E1, 0x_FC, 0x_F4, 0x_9F, 0x_FF,
		0x_8B, 0x_F1, 0x_2C, 0x_7C, 0x_3B, 0x_B7, 0x_E2, 0x_86,
	];

	helper(S, BASE, 6_843_832);
}
// endregion
// region: s_has_signs_and_13_311_007_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_13_311_007_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_26, 0x_4F, 0x_3F, 0x_F2, 0x_70, 0x_5C,
		0x_41, 0x_1F, 0x_A0, 0x_C2, 0x_1A, 0x_41, 0x_B9, 0x_40, 0x_FE, 0x_B1, 0x_10, 0x_B0, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_37, 0x_CD, 0x_7F, 0x_C7, 0x_40, 0x_F9, 0x_FB, 0x_0E, 0x_26, 0x_EA, 0x_BF, 0x_D4, 0x_E6, 0x_28,
		0x_72, 0x_9E, 0x_56, 0x_C0, 0x_9F, 0x_27, 0x_DD, 0x_C2, 0x_01, 0x_4D, 0x_4F, 0x_F8, 0x_75, 0x_F6, 0x_BE,
		0x_E7, 0x_E4, 0x_45, 0x_24, 0x_BD, 0x_FD, 0x_CF, 0x_C9, 0x_42, 0x_1F, 0x_77, 0x_B3, 0x_B6, 0x_32, 0x_12,
		0x_6A, 0x_A0, 0x_43, 0x_90, 0x_DC, 0x_3F, 0x_D1, 0x_FE, 0x_EB, 0x_6C, 0x_EC, 0x_A8, 0x_6D, 0x_C1, 0x_F2,
		0x_5E, 0x_6F, 0x_A6, 0x_04, 0x_59, 0x_D0, 0x_EF, 0x_87, 0x_C6, 0x_D3, 0x_14, 0x_97, 0x_03, 0x_88, 0x_68,
		0x_B0, 0x_06, 0x_41, 0x_1E, 0x_9C, 0x_95, 0x_F4, 0x_B1, 0x_8A, 0x_D5, 0x_5A, 0x_ED, 0x_30, 0x_8D, 0x_5C,
		0x_80, 0x_E0, 0x_6B, 0x_4A, 0x_1A, 0x_8C, 0x_B9, 0x_07, 0x_10, 0x_66, 0x_96, 0x_B8, 0x_22, 0x_1C, 0x_60,
		0x_53, 0x_55, 0x_D6, 0x_D2, 0x_F3, 0x_FA, 0x_74, 0x_76,
	];

	helper(S, BASE, 13_311_007);
}
// endregion
// region: s_has_signs_and_922_622_797_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_922_622_797_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_49, 0x_C0, 0x_C5, 0x_92, 0x_7C, 0x_B9, 0x_D7, 0x_ED, 0x_F5, 0x_95, 0x_F9,
		0x_27, 0x_C5, 0x_9D, 0x_37, 0x_EC, 0x_8E, 0x_05, 0x_27, 0x_DF, 0x_E0, 0x_95, 0x_78, 0x_6B, 0x_4E, 0x_2F,
		0x_9D, 0x_88, 0x_26, 0x_4E, 0x_BC, 0x_06, 0x_AB, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_15, 0x_5A, 0x_4E, 0x_54, 0x_49, 0x_CF, 0x_A7, 0x_78, 0x_C4, 0x_37, 0x_BA, 0x_18, 0x_69, 0x_FD,
		0x_5B, 0x_3F, 0x_9C, 0x_4A, 0x_2F, 0x_62, 0x_47, 0x_88, 0x_E5, 0x_24, 0x_8E, 0x_D0, 0x_08, 0x_80, 0x_86,
		0x_C2, 0x_26, 0x_4F, 0x_01, 0x_3E, 0x_53, 0x_E7, 0x_9A, 0x_8C, 0x_46, 0x_05, 0x_40, 0x_A9, 0x_AB, 0x_97,
		0x_BB, 0x_41, 0x_C5, 0x_E0, 0x_95, 0x_FB, 0x_57, 0x_B2, 0x_EC, 0x_9D, 0x_81, 0x_D5, 0x_E9, 0x_7C, 0x_B3,
		0x_34, 0x_F0, 0x_D7, 0x_E1, 0x_FA, 0x_07, 0x_3C, 0x_BF, 0x_36, 0x_BC, 0x_6B, 0x_3B, 0x_A6, 0x_B4, 0x_C0,
		0x_38, 0x_7B, 0x_CE, 0x_2E, 0x_27, 0x_DF, 0x_6F, 0x_11, 0x_50, 0x_C3, 0x_2C, 0x_06, 0x_9F, 0x_1E, 0x_ED,
		0x_23, 0x_65, 0x_DC, 0x_74, 0x_3D, 0x_7A, 0x_A2, 0x_39, 0x_5E, 0x_F9, 0x_96, 0x_92, 0x_71, 0x_66, 0x_8D,
		0x_02, 0x_A0, 0x_D8, 0x_1D, 0x_AC, 0x_45, 0x_F5, 0x_31,
	];

	helper(S, BASE, 922_622_797);
}
// endregion
// region: s_has_signs_and_6_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_6_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_F0, 0x_FA, 0x_49, 0x_81, 0x_EB, 0x_A5, 0x_9B, 0x_88, 0x_1B, 0x_A1, 0x_8F,
		0x_CF, 0x_49, 0x_E3, 0x_7A,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_69, 0x_F2, 0x_74, 0x_DD, 0x_49, 0x_F0, 0x_FE, 0x_F5, 0x_A6, 0x_BF, 0x_41, 0x_08, 0x_9B, 0x_AA,
		0x_43, 0x_7E, 0x_CA, 0x_37, 0x_0E, 0x_23, 0x_95, 0x_11, 0x_85, 0x_EA, 0x_D5, 0x_0F, 0x_AE, 0x_ED, 0x_A9,
		0x_45, 0x_04, 0x_C6, 0x_16, 0x_73, 0x_24, 0x_FC, 0x_1A, 0x_EB, 0x_FB, 0x_4C, 0x_DB, 0x_C8, 0x_60, 0x_3F,
		0x_47, 0x_D9, 0x_8D, 0x_68, 0x_CD, 0x_4F, 0x_53, 0x_C0, 0x_84, 0x_38, 0x_9D, 0x_61, 0x_B2, 0x_10, 0x_64,
		0x_5B, 0x_59, 0x_71, 0x_BC, 0x_2C, 0x_9A, 0x_79, 0x_4E, 0x_3D, 0x_EC, 0x_88, 0x_6C, 0x_3E, 0x_06, 0x_78,
		0x_56, 0x_6F, 0x_32, 0x_D8, 0x_15, 0x_9C, 0x_81, 0x_93, 0x_CF, 0x_62, 0x_E3, 0x_07, 0x_F9, 0x_29, 0x_1B,
		0x_25, 0x_03, 0x_FD, 0x_F4, 0x_4A, 0x_F7, 0x_2F, 0x_C9, 0x_36, 0x_98, 0x_05, 0x_B1, 0x_65, 0x_40, 0x_E4,
		0x_B3, 0x_AB, 0x_8E, 0x_17, 0x_77, 0x_4D, 0x_D0, 0x_C7, 0x_90, 0x_14, 0x_5E, 0x_7D, 0x_E6, 0x_A5, 0x_94,
		0x_1F, 0x_F8, 0x_3A, 0x_5A, 0x_BE, 0x_70, 0x_6A, 0x_51, 0x_B7, 0x_66, 0x_E2, 0x_8F, 0x_7C, 0x_B8, 0x_91,
		0x_DA, 0x_D4, 0x_C3, 0x_86, 0x_CB, 0x_72, 0x_DF, 0x_3B, 0x_4B, 0x_EF, 0x_27, 0x_52, 0x_8A, 0x_A3, 0x_82,
		0x_C4, 0x_D2, 0x_E0, 0x_A0, 0x_01, 0x_28, 0x_67, 0x_22, 0x_AD, 0x_1D, 0x_75, 0x_31, 0x_96, 0x_3C, 0x_D1,
		0x_B6, 0x_7F, 0x_35, 0x_A4, 0x_5F, 0x_E9, 0x_55, 0x_D6, 0x_E1, 0x_5D, 0x_A1, 0x_7A, 0x_7B, 0x_8C, 0x_C1,
		0x_39, 0x_57, 0x_DC, 0x_E8, 0x_D3, 0x_FF, 0x_BD, 0x_CE, 0x_2A, 0x_33, 0x_26, 0x_2E, 0x_AC,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_signs_and_99_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_99_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_3F, 0x_2D, 0x_9E, 0x_62, 0x_D9, 0x_63, 0x_40, 0x_70, 0x_A9, 0x_FA, 0x_F4, 0x_30, 0x_5B,
		0x_84, 0x_AE, 0x_5F, 0x_77,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_01, 0x_68, 0x_A1, 0x_B8, 0x_9D, 0x_59, 0x_76, 0x_64, 0x_06, 0x_73, 0x_6C, 0x_BA, 0x_5A, 0x_AC,
		0x_54, 0x_AA, 0x_F9, 0x_34, 0x_ED, 0x_10, 0x_9A, 0x_C7, 0x_E4, 0x_B5, 0x_30, 0x_2C, 0x_4C, 0x_14, 0x_B3,
		0x_45, 0x_82, 0x_B2, 0x_DB, 0x_70, 0x_D8, 0x_1C, 0x_C2, 0x_CF, 0x_D9, 0x_CA, 0x_A0, 0x_2E, 0x_FD, 0x_9E,
		0x_B7, 0x_71, 0x_51, 0x_B0, 0x_17, 0x_BF, 0x_18, 0x_07, 0x_A2, 0x_90, 0x_62, 0x_41, 0x_D7, 0x_FC, 0x_04,
		0x_92, 0x_25, 0x_F7, 0x_E8, 0x_08, 0x_D2, 0x_E3, 0x_55, 0x_63, 0x_CE, 0x_AE, 0x_4A, 0x_BC, 0x_5D, 0x_05,
		0x_CB, 0x_88, 0x_24, 0x_5C, 0x_DF, 0x_8B, 0x_6A, 0x_C5, 0x_7A, 0x_61, 0x_3A, 0x_03, 0x_28, 0x_F8, 0x_23,
		0x_F2, 0x_26, 0x_6D, 0x_E9, 0x_77, 0x_69, 0x_58, 0x_D4, 0x_BB, 0x_3F, 0x_7C, 0x_2F, 0x_F1, 0x_3E, 0x_86,
		0x_7B, 0x_C3, 0x_29, 0x_8D, 0x_F5, 0x_84, 0x_EB, 0x_3B, 0x_B6, 0x_7F, 0x_C1, 0x_D1, 0x_F0, 0x_37, 0x_1E,
		0x_A7, 0x_02, 0x_FB, 0x_81, 0x_F6, 0x_AB, 0x_0E, 0x_43, 0x_1B, 0x_9B, 0x_C4, 0x_7E, 0x_DC, 0x_22, 0x_EF,
		0x_42, 0x_8F, 0x_4B, 0x_1F, 0x_93, 0x_7D, 0x_8C, 0x_65, 0x_36, 0x_5F, 0x_6F, 0x_EE, 0x_5B, 0x_97, 0x_EC,
		0x_E0, 0x_A3, 0x_E5, 0x_A4, 0x_1D, 0x_E7, 0x_DD, 0x_E2, 0x_48, 0x_1A, 0x_D5, 0x_4D, 0x_8A, 0x_83, 0x_D6,
		0x_6B, 0x_B4, 0x_D3, 0x_44, 0x_87, 0x_F4, 0x_6E, 0x_91, 0x_9C, 0x_FA, 0x_19, 0x_A8, 0x_F3, 0x_79, 0x_12,
		0x_52, 0x_85, 0x_A9, 0x_40, 0x_AD, 0x_D0, 0x_AF, 0x_21, 0x_75, 0x_94, 0x_A6, 0x_4F, 0x_56,
	];

	helper(S, BASE, 99);
}
// endregion
// region: s_has_signs_and_759_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_759_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_FA, 0x_64, 0x_39, 0x_1C, 0x_98, 0x_1D,
		0x_C1, 0x_2F, 0x_63, 0x_64, 0x_76, 0x_CA, 0x_ED, 0x_12, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_A9, 0x_9E, 0x_FA, 0x_B1, 0x_80, 0x_F5, 0x_C3, 0x_94, 0x_88, 0x_81, 0x_DB, 0x_B4, 0x_CD, 0x_56,
		0x_ED, 0x_48, 0x_30, 0x_B3, 0x_55, 0x_B7, 0x_22, 0x_6C, 0x_E9, 0x_62, 0x_12, 0x_4D, 0x_B5, 0x_BD, 0x_D7,
		0x_83, 0x_A1, 0x_75, 0x_1A, 0x_9B, 0x_A4, 0x_54, 0x_E4, 0x_1D, 0x_7F, 0x_A8, 0x_BB, 0x_A7, 0x_50, 0x_6E,
		0x_19, 0x_51, 0x_EB, 0x_B8, 0x_86, 0x_41, 0x_73, 0x_74, 0x_BE, 0x_89, 0x_79, 0x_C4, 0x_95, 0x_CE, 0x_40,
		0x_8D, 0x_2C, 0x_F3, 0x_07, 0x_EF, 0x_87, 0x_B2, 0x_97, 0x_72, 0x_6A, 0x_04, 0x_EC, 0x_13, 0x_5A, 0x_B9,
		0x_21, 0x_AB, 0x_DC, 0x_42, 0x_02, 0x_D2, 0x_D5, 0x_43, 0x_C8, 0x_96, 0x_37, 0x_E5, 0x_44, 0x_84, 0x_9F,
		0x_5E, 0x_D9, 0x_8C, 0x_33, 0x_38, 0x_F6, 0x_01, 0x_69, 0x_1B, 0x_F1, 0x_F9, 0x_4F, 0x_63, 0x_D1, 0x_29,
		0x_82, 0x_AF, 0x_1C, 0x_CF, 0x_25, 0x_35, 0x_AA, 0x_52, 0x_16, 0x_A0, 0x_7B, 0x_45, 0x_14, 0x_AC, 0x_D6,
		0x_D0, 0x_6F, 0x_FF, 0x_A2, 0x_F8, 0x_06, 0x_32, 0x_66, 0x_2E, 0x_5D, 0x_F4, 0x_85, 0x_67, 0x_7A, 0x_28,
		0x_E0, 0x_27, 0x_FD, 0x_49, 0x_77, 0x_E2, 0x_6B, 0x_CA, 0x_6D, 0x_3B, 0x_57, 0x_4A, 0x_E3, 0x_91, 0x_23,
		0x_71, 0x_10, 0x_A5, 0x_C5, 0x_DA, 0x_76, 0x_8F, 0x_D3, 0x_46, 0x_53, 0x_58, 0x_CB, 0x_2F, 0x_93, 0x_68,
		0x_A6, 0x_34, 0x_F2, 0x_61, 0x_DF, 0x_B6, 0x_E6, 0x_31, 0x_5F, 0x_59, 0x_60, 0x_7C, 0x_98, 0x_C6, 0x_9C,
		0x_64, 0x_FE, 0x_26, 0x_4C, 0x_C9, 0x_3C, 0x_1F, 0x_90, 0x_CC, 0x_A3, 0x_C1, 0x_18, 0x_3F,
	];

	helper(S, BASE, 759);
}
// endregion
// region: s_has_signs_and_1_376_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_1_376_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_71, 0x_F3, 0x_7F, 0x_32, 0x_9D, 0x_AE, 0x_87, 0x_EF, 0x_EB, 0x_BA, 0x_AA, 0x_C4,
		0x_E2, 0x_12, 0x_92, 0x_E2, 0x_E6, 0x_B9, 0x_8F, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_81, 0x_40, 0x_B3, 0x_A2, 0x_D9, 0x_16, 0x_75, 0x_71, 0x_32, 0x_FE, 0x_39, 0x_A6, 0x_8D, 0x_BD, 0x_DF,
		0x_05, 0x_E3, 0x_DC, 0x_01, 0x_F7, 0x_49, 0x_FC, 0x_D6, 0x_AD, 0x_04, 0x_F3, 0x_E2, 0x_CC, 0x_C0, 0x_F1,
		0x_B5, 0x_45, 0x_AB, 0x_88, 0x_03, 0x_B0, 0x_74, 0x_A7, 0x_E0, 0x_8E, 0x_13, 0x_7D, 0x_23, 0x_6B, 0x_1D,
		0x_26, 0x_4C, 0x_C7, 0x_5C, 0x_C6, 0x_AE, 0x_37, 0x_44, 0x_12, 0x_BB, 0x_6D, 0x_64, 0x_AF, 0x_DD, 0x_4A,
		0x_E7, 0x_7E, 0x_DB, 0x_84, 0x_30, 0x_96, 0x_D3, 0x_59, 0x_CE, 0x_61, 0x_F4, 0x_BF, 0x_A3, 0x_2C, 0x_73,
		0x_4E, 0x_E8, 0x_24, 0x_85, 0x_BC, 0x_D7, 0x_A4, 0x_51, 0x_C4, 0x_33, 0x_4F, 0x_D2, 0x_83, 0x_66, 0x_DA,
		0x_9B, 0x_B9, 0x_14, 0x_78, 0x_69, 0x_8C, 0x_C5, 0x_82, 0x_7B, 0x_38, 0x_7A, 0x_BA, 0x_B7, 0x_CF, 0x_50,
		0x_87, 0x_42, 0x_EE, 0x_EB, 0x_15, 0x_28, 0x_1C, 0x_C1, 0x_92, 0x_E1, 0x_F9, 0x_34, 0x_E4, 0x_99, 0x_72,
		0x_02, 0x_8F, 0x_A8, 0x_2A, 0x_CA, 0x_FD, 0x_79, 0x_C9, 0x_11, 0x_77, 0x_C3, 0x_0E, 0x_D5, 0x_BE, 0x_65,
		0x_68, 0x_07, 0x_F0, 0x_29, 0x_EA, 0x_41, 0x_6A, 0x_AA, 0x_06, 0x_43, 0x_94, 0x_9C, 0x_FB, 0x_3F, 0x_E9,
		0x_91, 0x_1B, 0x_25, 0x_08, 0x_B1, 0x_D8, 0x_6E, 0x_93, 0x_3C, 0x_27, 0x_90, 0x_D4, 0x_9F, 0x_B2, 0x_EF,
		0x_5D, 0x_95, 0x_53, 0x_9D, 0x_89, 0x_7C, 0x_CD, 0x_B6, 0x_22, 0x_B4, 0x_AC, 0x_67, 0x_19, 0x_A5, 0x_F6,
		0x_CB, 0x_4D, 0x_3B, 0x_C8, 0x_ED, 0x_E6, 0x_97, 0x_D0, 0x_6F, 0x_56, 0x_3D, 0x_52, 0x_63,
	];

	helper(S, BASE, 1_376);
}
// endregion
// region: s_has_signs_and_25_451_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_25_451_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_BE, 0x_CA, 0x_0B, 0x_62, 0x_A1, 0x_F2, 0x_C2, 0x_B1, 0x_C3, 0x_DE, 0x_0E, 0x_F1, 0x_C9,
		0x_5E, 0x_F6, 0x_EE, 0x_71, 0x_DB, 0x_6E, 0x_29, 0x_52, 0x_37, 0x_59, 0x_5E, 0x_27, 0x_E8, 0x_E2, 0x_DD,
		0x_F5, 0x_8B, 0x_DC,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_81, 0x_2A, 0x_66, 0x_8F, 0x_4A, 0x_94, 0x_B6, 0x_4E, 0x_FB, 0x_73, 0x_C5, 0x_25, 0x_B3, 0x_6F,
		0x_FD, 0x_D5, 0x_C2, 0x_CF, 0x_54, 0x_C1, 0x_6B, 0x_DF, 0x_D2, 0x_8A, 0x_13, 0x_76, 0x_B1, 0x_38, 0x_34,
		0x_C9, 0x_98, 0x_96, 0x_75, 0x_9D, 0x_B4, 0x_53, 0x_B2, 0x_3D, 0x_E4, 0x_87, 0x_D9, 0x_67, 0x_5C, 0x_91,
		0x_F5, 0x_5F, 0x_37, 0x_61, 0x_3B, 0x_DC, 0x_A8, 0x_DD, 0x_69, 0x_55, 0x_F4, 0x_D7, 0x_EC, 0x_A4, 0x_3A,
		0x_51, 0x_05, 0x_03, 0x_84, 0x_A6, 0x_32, 0x_AD, 0x_6A, 0x_F8, 0x_B0, 0x_9A, 0x_C8, 0x_D4, 0x_F9, 0x_36,
		0x_4D, 0x_63, 0x_CD, 0x_58, 0x_EA, 0x_42, 0x_1F, 0x_4C, 0x_82, 0x_16, 0x_F1, 0x_EE, 0x_1C, 0x_95, 0x_45,
		0x_07, 0x_DB, 0x_3E, 0x_E5, 0x_68, 0x_5E, 0x_33, 0x_01, 0x_77, 0x_27, 0x_ED, 0x_F6, 0x_EB, 0x_19, 0x_C7,
		0x_9B, 0x_08, 0x_43, 0x_AA, 0x_35, 0x_59, 0x_50, 0x_BF, 0x_24, 0x_7D, 0x_06, 0x_29, 0x_DE, 0x_57, 0x_9E,
		0x_C4, 0x_8C, 0x_A2, 0x_52, 0x_49, 0x_B7, 0x_89, 0x_92, 0x_28, 0x_2E, 0x_C6, 0x_BE, 0x_8B, 0x_E6, 0x_A1,
		0x_B5, 0x_41, 0x_C0, 0x_D0, 0x_E0, 0x_EF, 0x_D3, 0x_11, 0x_A0, 0x_B9, 0x_47, 0x_E1, 0x_39, 0x_4B, 0x_8E,
		0x_86, 0x_1D, 0x_AF, 0x_E2, 0x_F0, 0x_97, 0x_C3, 0x_70, 0x_02, 0x_7E, 0x_23, 0x_7F, 0x_6E, 0x_A5, 0x_48,
		0x_26, 0x_BC, 0x_62, 0x_CA, 0x_7A, 0x_A7, 0x_0E, 0x_A9, 0x_F2, 0x_88, 0x_D8, 0x_E8, 0x_A3, 0x_60, 0x_44,
		0x_0F, 0x_30, 0x_AE, 0x_12, 0x_99, 0x_64, 0x_1A, 0x_AC, 0x_E9, 0x_AB, 0x_71, 0x_65, 0x_D1,
	];

	helper(S, BASE, 25_451);
}
// endregion
// region: s_has_signs_and_228_698_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_228_698_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_E9, 0x_51, 0x_AF, 0x_2D, 0x_E3, 0x_79, 0x_9F, 0x_27, 0x_96, 0x_8F,
		0x_60, 0x_D9, 0x_3B, 0x_14, 0x_78, 0x_D0, 0x_B1, 0x_14, 0x_BD, 0x_80, 0x_5B, 0x_88, 0x_EC, 0x_48, 0x_24,
		0x_B8, 0x_7B, 0x_30, 0x_85, 0x_CE, 0x_91, 0x_E6, 0x_89, 0x_D5, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_C3, 0x_8A, 0x_75, 0x_2A, 0x_27, 0x_E9, 0x_3A, 0x_F1, 0x_A8, 0x_5C, 0x_F4, 0x_3E, 0x_A7, 0x_58,
		0x_53, 0x_92, 0x_43, 0x_AD, 0x_5A, 0x_67, 0x_D8, 0x_F3, 0x_E2, 0x_30, 0x_C9, 0x_51, 0x_EF, 0x_42, 0x_F2,
		0x_08, 0x_4E, 0x_76, 0x_22, 0x_B6, 0x_73, 0x_C5, 0x_96, 0x_60, 0x_88, 0x_3C, 0x_AE, 0x_02, 0x_7B, 0x_24,
		0x_77, 0x_49, 0x_F7, 0x_CF, 0x_1B, 0x_CB, 0x_62, 0x_E6, 0x_66, 0x_D4, 0x_1A, 0x_7C, 0x_E0, 0x_5D, 0x_63,
		0x_BD, 0x_80, 0x_B3, 0x_07, 0x_C4, 0x_79, 0x_91, 0x_AA, 0x_E4, 0x_47, 0x_CA, 0x_2E, 0x_6E, 0x_50, 0x_FD,
		0x_8F, 0x_DC, 0x_D5, 0x_CC, 0x_DA, 0x_B7, 0x_CE, 0x_EE, 0x_2C, 0x_D6, 0x_64, 0x_06, 0x_16, 0x_1D, 0x_AC,
		0x_B2, 0x_A1, 0x_15, 0x_C1, 0x_F6, 0x_A6, 0x_FC, 0x_7A, 0x_89, 0x_ED, 0x_65, 0x_4C, 0x_36, 0x_C0, 0x_9B,
		0x_25, 0x_61, 0x_D0, 0x_EC, 0x_32, 0x_BB, 0x_A2, 0x_87, 0x_F0, 0x_78, 0x_44, 0x_EB, 0x_7D, 0x_FE, 0x_F8,
		0x_90, 0x_EA, 0x_72, 0x_BA, 0x_14, 0x_19, 0x_B5, 0x_21, 0x_39, 0x_05, 0x_D7, 0x_5E, 0x_97, 0x_A0, 0x_56,
		0x_8D, 0x_94, 0x_D3, 0x_B1, 0x_D9, 0x_41, 0x_4D, 0x_0F, 0x_B8, 0x_A4, 0x_C2, 0x_E1, 0x_3B, 0x_85, 0x_4B,
		0x_48, 0x_0E, 0x_6A, 0x_D1, 0x_A3, 0x_F9, 0x_23, 0x_68, 0x_6D, 0x_E8, 0x_5F, 0x_AB, 0x_C8, 0x_71, 0x_9A,
		0x_55, 0x_8E, 0x_8C, 0x_8B, 0x_DB, 0x_74, 0x_17, 0x_04, 0x_E7, 0x_03, 0x_B9, 0x_95, 0x_1F, 0x_FA, 0x_CD,
		0x_5B, 0x_11, 0x_26, 0x_C6, 0x_33, 0x_01, 0x_AF, 0x_84, 0x_3D, 0x_A9, 0x_6B, 0x_E3, 0x_9F,
	];

	helper(S, BASE, 228_698);
}
// endregion
// region: s_has_signs_and_4_634_521_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_4_634_521_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_BD, 0x_F8, 0x_6F, 0x_89, 0x_2A, 0x_7F, 0x_F4, 0x_96, 0x_78, 0x_C6,
		0x_E9, 0x_4A, 0x_06, 0x_08, 0x_EB, 0x_E1, 0x_E1, 0x_38, 0x_9F, 0x_EE, 0x_A4, 0x_9E, 0x_E3, 0x_12, 0x_C4,
		0x_3C, 0x_BE, 0x_37, 0x_21, 0x_D8,
	];
	const BASE: &[u8] = &[
		0x_7D, 0x_42, 0x_85, 0x_8C, 0x_5C, 0x_AC, 0x_79, 0x_A3, 0x_F0, 0x_62, 0x_16, 0x_AF, 0x_6F, 0x_68, 0x_5F,
		0x_E6, 0x_6C, 0x_69, 0x_64, 0x_08, 0x_2A, 0x_18, 0x_3A, 0x_4C, 0x_CE, 0x_60, 0x_C1, 0x_D6, 0x_B6, 0x_83,
		0x_48, 0x_DF, 0x_A2, 0x_25, 0x_C3, 0x_F4, 0x_9B, 0x_FD, 0x_07, 0x_ED, 0x_E9, 0x_D4, 0x_B8, 0x_81, 0x_7E,
		0x_B4, 0x_37, 0x_4B, 0x_34, 0x_70, 0x_6E, 0x_2E, 0x_90, 0x_5B, 0x_4D, 0x_6A, 0x_A4, 0x_65, 0x_D1, 0x_EE,
		0x_98, 0x_FC, 0x_D7, 0x_BF, 0x_5D, 0x_9E, 0x_3C, 0x_9C, 0x_33, 0x_55, 0x_D5, 0x_15, 0x_40, 0x_E2, 0x_F1,
		0x_2C, 0x_7C, 0x_F2, 0x_EC, 0x_E0, 0x_B9, 0x_F8, 0x_38, 0x_50, 0x_8F, 0x_78, 0x_61, 0x_CF, 0x_D8, 0x_3E,
		0x_27, 0x_24, 0x_F7, 0x_29, 0x_6D, 0x_72, 0x_76, 0x_D2, 0x_8B, 0x_63, 0x_80, 0x_7B, 0x_F9, 0x_8D, 0x_CA,
		0x_4F, 0x_46, 0x_21, 0x_E4, 0x_56, 0x_95, 0x_66, 0x_C2, 0x_67, 0x_7F, 0x_BB, 0x_B2, 0x_28, 0x_14, 0x_C9,
		0x_03, 0x_22, 0x_71, 0x_DC, 0x_BD, 0x_B5, 0x_04, 0x_AE, 0x_C4, 0x_A8, 0x_1D, 0x_EA, 0x_49, 0x_43, 0x_B0,
		0x_9F, 0x_E7, 0x_17, 0x_06, 0x_96, 0x_AA, 0x_A5, 0x_5E, 0x_BC, 0x_EB, 0x_C7, 0x_F6, 0x_41, 0x_C0, 0x_74,
		0x_BA, 0x_B1, 0x_30, 0x_51, 0x_A0, 0x_12, 0x_35, 0x_B7, 0x_13, 0x_C6, 0x_E3, 0x_1B, 0x_E1, 0x_97, 0x_02,
		0x_DD, 0x_1C, 0x_54, 0x_1A, 0x_CD, 0x_8A, 0x_4E, 0x_1E, 0x_E5, 0x_A7, 0x_3B, 0x_EF, 0x_F5, 0x_FB, 0x_39,
		0x_10, 0x_31, 0x_E8, 0x_26, 0x_92, 0x_C8, 0x_FF, 0x_FA, 0x_F3, 0x_BE, 0x_4A, 0x_7A, 0x_1F,
	];

	helper(S, BASE, 4_634_521);
}
// endregion
// region: s_has_signs_and_82_563_742_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_82_563_742_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_96, 0x_9B, 0x_36, 0x_CA, 0x_33, 0x_18, 0x_54, 0x_B1, 0x_0F, 0x_0F, 0x_F6, 0x_C4, 0x_DB, 0x_C1,
		0x_69, 0x_18, 0x_98, 0x_FA, 0x_62, 0x_6E, 0x_5D, 0x_19, 0x_22, 0x_F6, 0x_A8, 0x_3E, 0x_D1, 0x_22, 0x_4F,
		0x_C0, 0x_72, 0x_AA, 0x_27, 0x_5A, 0x_70, 0x_3C, 0x_11, 0x_68, 0x_7F, 0x_F5, 0x_77, 0x_43, 0x_3D, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_17, 0x_DC, 0x_77, 0x_D9, 0x_3D, 0x_E5, 0x_26, 0x_93, 0x_91, 0x_3C, 0x_96, 0x_8A, 0x_A1, 0x_46,
		0x_24, 0x_E4, 0x_BD, 0x_0E, 0x_16, 0x_2A, 0x_01, 0x_88, 0x_6A, 0x_43, 0x_29, 0x_DF, 0x_48, 0x_F3, 0x_D0,
		0x_AB, 0x_C7, 0x_F7, 0x_44, 0x_8F, 0x_7E, 0x_1D, 0x_AA, 0x_15, 0x_95, 0x_7B, 0x_F5, 0x_65, 0x_06, 0x_E9,
		0x_F6, 0x_3B, 0x_31, 0x_7F, 0x_5D, 0x_23, 0x_49, 0x_DB, 0x_8B, 0x_C4, 0x_41, 0x_22, 0x_A7, 0x_87, 0x_4F,
		0x_84, 0x_7A, 0x_D4, 0x_FE, 0x_05, 0x_4D, 0x_EA, 0x_A4, 0x_8C, 0x_58, 0x_97, 0x_02, 0x_9D, 0x_59, 0x_B9,
		0x_5A, 0x_27, 0x_2F, 0x_AE, 0x_CA, 0x_52, 0x_90, 0x_56, 0x_83, 0x_5E, 0x_A0, 0x_ED, 0x_D5, 0x_68, 0x_BA,
		0x_92, 0x_60, 0x_B1, 0x_9B, 0x_C2, 0x_82, 0x_34, 0x_2E, 0x_5C, 0x_E3, 0x_3E, 0x_A5, 0x_EB, 0x_36, 0x_79,
		0x_F4, 0x_E0, 0x_38, 0x_BC, 0x_1B, 0x_D1, 0x_5B, 0x_85, 0x_70, 0x_72, 0x_62, 0x_B3, 0x_DA, 0x_FF, 0x_EC,
		0x_C3, 0x_67, 0x_63, 0x_FC, 0x_1C, 0x_98, 0x_64, 0x_69, 0x_A8, 0x_73, 0x_3A, 0x_F0, 0x_57, 0x_4A, 0x_B5,
		0x_E2, 0x_B8, 0x_F2, 0x_F8, 0x_D8, 0x_EF, 0x_40, 0x_10, 0x_28, 0x_BB, 0x_19, 0x_0F, 0x_B7, 0x_5F, 0x_89,
		0x_B0, 0x_32, 0x_80, 0x_07, 0x_DE, 0x_BF, 0x_FA, 0x_6D, 0x_A3, 0x_D3, 0x_74, 0x_1F, 0x_04, 0x_C1, 0x_1E,
		0x_E8, 0x_55, 0x_94, 0x_35, 0x_CD, 0x_6C, 0x_2C, 0x_12, 0x_6E, 0x_54, 0x_53, 0x_18, 0x_9F, 0x_A2, 0x_C9,
		0x_30, 0x_4E, 0x_4B, 0x_11, 0x_3F, 0x_CB, 0x_C0, 0x_AF, 0x_6B, 0x_75, 0x_CE, 0x_A6, 0x_B6,
	];

	helper(S, BASE, 82_563_742);
}
// endregion
// region: s_has_signs_and_330_194_106_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_330_194_106_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_43, 0x_E7, 0x_5F, 0x_BE, 0x_0D, 0x_BC, 0x_30, 0x_CB, 0x_AF,
		0x_7E, 0x_29, 0x_5D, 0x_BF, 0x_AD, 0x_FF, 0x_9E, 0x_3A, 0x_42, 0x_67, 0x_36, 0x_2C, 0x_21, 0x_C3, 0x_02,
		0x_DA, 0x_21, 0x_AD, 0x_7E, 0x_A3, 0x_CC, 0x_B9, 0x_71, 0x_AC, 0x_15, 0x_A4, 0x_7F, 0x_F4, 0x_5E, 0x_8B,
		0x_56, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_7F, 0x_39, 0x_5A, 0x_F1, 0x_35, 0x_D2, 0x_AA, 0x_1F, 0x_49, 0x_89, 0x_03, 0x_70, 0x_3F, 0x_D7, 0x_9B,
		0x_B8, 0x_A3, 0x_73, 0x_97, 0x_68, 0x_24, 0x_BB, 0x_17, 0x_5B, 0x_C3, 0x_D1, 0x_31, 0x_BD, 0x_47, 0x_B7,
		0x_66, 0x_42, 0x_7E, 0x_4F, 0x_85, 0x_88, 0x_E5, 0x_A9, 0x_EF, 0x_B5, 0x_7B, 0x_5D, 0x_4E, 0x_58, 0x_4B,
		0x_43, 0x_A0, 0x_8B, 0x_37, 0x_98, 0x_BC, 0x_21, 0x_51, 0x_DB, 0x_EC, 0x_F6, 0x_BE, 0x_2C, 0x_D9, 0x_8D,
		0x_C6, 0x_C2, 0x_D4, 0x_B0, 0x_AF, 0x_9C, 0x_95, 0x_75, 0x_45, 0x_FD, 0x_15, 0x_A4, 0x_64, 0x_72, 0x_2A,
		0x_AE, 0x_13, 0x_D0, 0x_DE, 0x_54, 0x_02, 0x_DA, 0x_65, 0x_1B, 0x_91, 0x_AC, 0x_99, 0x_B4, 0x_94, 0x_B6,
		0x_33, 0x_CA, 0x_ED, 0x_E2, 0x_E3, 0x_62, 0x_5E, 0x_55, 0x_5F, 0x_EE, 0x_71, 0x_60, 0x_9E, 0x_5C, 0x_0E,
		0x_56, 0x_B9, 0x_07, 0x_F0, 0x_C4, 0x_DD, 0x_6A, 0x_25, 0x_FE, 0x_6E, 0x_44, 0x_C1, 0x_22, 0x_74, 0x_E9,
		0x_01, 0x_67, 0x_52, 0x_F8, 0x_18, 0x_FB, 0x_32, 0x_F3, 0x_1A, 0x_82, 0x_05, 0x_DC, 0x_06, 0x_30, 0x_A5,
		0x_CC, 0x_FA, 0x_4D, 0x_48, 0x_F4, 0x_36, 0x_8C, 0x_9F, 0x_92, 0x_40, 0x_3B, 0x_C8, 0x_FF, 0x_BA, 0x_26,
		0x_BF, 0x_16, 0x_F2, 0x_C5, 0x_AB, 0x_28, 0x_D3, 0x_1E, 0x_4C, 0x_A7, 0x_61, 0x_D5, 0x_E6, 0x_6D, 0x_11,
		0x_A8, 0x_19, 0x_29, 0x_AD, 0x_93, 0x_86, 0x_F9, 0x_12, 0x_B2, 0x_E0, 0x_CB, 0x_80, 0x_84, 0x_79, 0x_E7,
		0x_6C, 0x_DF, 0x_8F, 0x_04, 0x_A2, 0x_90, 0x_8E, 0x_EB, 0x_96, 0x_1D, 0x_83, 0x_3A, 0x_7D,
	];

	helper(S, BASE, 330_194_106);
}
// endregion
// region: s_has_signs_and_9_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_9_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_6F, 0x_20, 0x_4D, 0x_83, 0x_73, 0x_CA, 0x_28, 0x_45, 0x_61, 0x_97, 0x_F1, 0x_42, 0x_81, 0x_DA,
		0x_9C, 0x_99, 0x_60, 0x_37, 0x_DB, 0x_AB, 0x_55,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_36, 0x_BF, 0x_C2, 0x_1E, 0x_07, 0x_94, 0x_27, 0x_D3, 0x_6F, 0x_E4, 0x_87, 0x_62, 0x_44, 0x_6A,
		0x_5D, 0x_C6, 0x_03, 0x_A2, 0x_93, 0x_42, 0x_46, 0x_90, 0x_F4, 0x_DE, 0x_30, 0x_B5, 0x_5F, 0x_BD, 0x_2A,
		0x_43, 0x_8E, 0x_3F, 0x_DF, 0x_B6, 0x_19, 0x_D6, 0x_91, 0x_EB, 0x_F0, 0x_A8, 0x_E8, 0x_13, 0x_3E, 0x_26,
		0x_AD, 0x_99, 0x_B8, 0x_C0, 0x_A7, 0x_7D, 0x_D8, 0x_C7, 0x_FB, 0x_9E, 0x_18, 0x_C8, 0x_56, 0x_0E, 0x_A1,
		0x_8F, 0x_E6, 0x_FD, 0x_05, 0x_68, 0x_3C, 0x_3B, 0x_F6, 0x_A3, 0x_C1, 0x_06, 0x_9C, 0x_11, 0x_54, 0x_B3,
		0x_97, 0x_CC, 0x_AC, 0x_66, 0x_17, 0x_8C, 0x_31, 0x_1A, 0x_64, 0x_C4, 0x_49, 0x_B4, 0x_29, 0x_D9, 0x_E0,
		0x_C5, 0x_82, 0x_57, 0x_4F, 0x_D1, 0x_F9, 0x_23, 0x_34, 0x_58, 0x_9A, 0x_79, 0x_E2, 0x_88, 0x_A4, 0x_BE,
		0x_D2, 0x_53, 0x_4B, 0x_14, 0x_5A, 0x_E7, 0x_10, 0x_F3, 0x_81, 0x_6B, 0x_5C, 0x_98, 0x_02, 0x_7F, 0x_5B,
		0x_12, 0x_48, 0x_63, 0x_E3, 0x_35, 0x_EA, 0x_A9, 0x_DA, 0x_ED, 0x_80, 0x_8A, 0x_B0, 0x_4D, 0x_77, 0x_7A,
		0x_1F, 0x_55, 0x_AF, 0x_0F, 0x_F5, 0x_B7, 0x_9F, 0x_B2, 0x_AB, 0x_73, 0x_74, 0x_FC, 0x_2E, 0x_D5, 0x_A5,
		0x_52, 0x_22, 0x_E5, 0x_9B, 0x_24, 0x_CE, 0x_B1, 0x_6D, 0x_A6, 0x_45, 0x_41, 0x_C3, 0x_65, 0x_92, 0x_04,
		0x_CD, 0x_4E, 0x_28, 0x_60, 0x_50, 0x_A0, 0x_75, 0x_DD, 0x_AE, 0x_C9, 0x_95, 0x_72, 0x_47, 0x_15, 0x_D4,
		0x_F1, 0x_51, 0x_67, 0x_61, 0x_BA, 0x_E9, 0x_CA, 0x_7B, 0x_96, 0x_78, 0x_84, 0x_F8, 0x_AA, 0x_32, 0x_69,
		0x_3D, 0x_2F, 0x_CF, 0x_2C, 0x_D7, 0x_E1, 0x_4A, 0x_7C, 0x_5E, 0x_8D, 0x_3A, 0x_40, 0x_FF, 0x_83, 0x_BB,
		0x_86, 0x_21, 0x_89, 0x_39, 0x_CB, 0x_37, 0x_70, 0x_1D, 0x_9D, 0x_7E, 0x_16, 0x_FE, 0x_DC, 0x_F2, 0x_1B,
		0x_4C, 0x_D0, 0x_BC, 0x_71, 0x_85, 0x_76, 0x_EC, 0x_8B, 0x_F7, 0x_6C, 0x_33, 0x_EE, 0x_B9, 0x_EF, 0x_6E,
		0x_38, 0x_08, 0x_DB, 0x_01, 0x_25, 0x_FA, 0x_1C,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_signs_and_23_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_23_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_13, 0x_2D, 0x_47, 0x_17, 0x_FC, 0x_40, 0x_F4, 0x_F9, 0x_66, 0x_C8, 0x_03, 0x_F8,
		0x_8D, 0x_C6, 0x_93, 0x_A9, 0x_26, 0x_AA, 0x_82, 0x_F6, 0x_42, 0x_6E, 0x_E3, 0x_08, 0x_4D, 0x_E4, 0x_38,
		0x_87,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_C5, 0x_E8, 0x_AA, 0x_C4, 0x_E4, 0x_A2, 0x_37, 0x_07, 0x_12, 0x_A4, 0x_AE, 0x_53, 0x_1E, 0x_6B,
		0x_2A, 0x_64, 0x_7A, 0x_21, 0x_F7, 0x_A7, 0x_2E, 0x_94, 0x_13, 0x_B8, 0x_C0, 0x_47, 0x_4B, 0x_CB, 0x_83,
		0x_4A, 0x_19, 0x_3B, 0x_25, 0x_0F, 0x_87, 0x_D9, 0x_CC, 0x_D3, 0x_16, 0x_EE, 0x_4F, 0x_41, 0x_CF, 0x_08,
		0x_DD, 0x_DC, 0x_9B, 0x_39, 0x_6F, 0x_8E, 0x_A1, 0x_93, 0x_C2, 0x_C1, 0x_A6, 0x_58, 0x_D0, 0x_40, 0x_2F,
		0x_22, 0x_E2, 0x_24, 0x_DE, 0x_D2, 0x_C8, 0x_72, 0x_3C, 0x_AD, 0x_3E, 0x_44, 0x_3D, 0x_9A, 0x_71, 0x_50,
		0x_4C, 0x_59, 0x_18, 0x_BE, 0x_FF, 0x_DB, 0x_34, 0x_F3, 0x_8C, 0x_82, 0x_A0, 0x_CD, 0x_1C, 0x_A5, 0x_5B,
		0x_70, 0x_79, 0x_1D, 0x_7B, 0x_BA, 0x_B4, 0x_55, 0x_91, 0x_D7, 0x_96, 0x_97, 0x_06, 0x_4D, 0x_DA, 0x_2C,
		0x_A9, 0x_75, 0x_77, 0x_9C, 0x_FC, 0x_ED, 0x_36, 0x_E0, 0x_46, 0x_AB, 0x_5A, 0x_15, 0x_35, 0x_EA, 0x_BF,
		0x_EB, 0x_28, 0x_65, 0x_73, 0x_42, 0x_32, 0x_AC, 0x_1A, 0x_7D, 0x_5F, 0x_8B, 0x_EF, 0x_D1, 0x_B7, 0x_48,
		0x_52, 0x_B9, 0x_E7, 0x_1B, 0x_85, 0x_E3, 0x_76, 0x_63, 0x_60, 0x_DF, 0x_B1, 0x_49, 0x_92, 0x_17, 0x_95,
		0x_7E, 0x_F2, 0x_81, 0x_02, 0x_9E, 0x_6C, 0x_E6, 0x_BD, 0x_26, 0x_F1, 0x_98, 0x_89, 0x_6E, 0x_7F, 0x_C7,
		0x_88, 0x_31, 0x_F4, 0x_B5, 0x_7C, 0x_FB, 0x_F9, 0x_C6, 0x_01, 0x_CA, 0x_C9, 0x_74, 0x_CE, 0x_5D, 0x_B0,
		0x_E9, 0x_BC, 0x_4E, 0x_04, 0x_99, 0x_61, 0x_D5, 0x_AF, 0x_B6, 0x_78, 0x_D4, 0x_C3, 0x_29, 0x_56, 0x_67,
		0x_F8, 0x_68, 0x_03, 0x_6A, 0x_9D, 0x_1F, 0x_8A, 0x_66, 0x_B3, 0x_33, 0x_84, 0x_51, 0x_FD, 0x_3A, 0x_F5,
		0x_30, 0x_23, 0x_D6, 0x_3F, 0x_38, 0x_05, 0x_90, 0x_FA, 0x_F6, 0x_EC, 0x_B2, 0x_A8, 0x_FE, 0x_F0, 0x_8D,
		0x_D8, 0x_10, 0x_14, 0x_0E, 0x_62, 0x_9F, 0x_69, 0x_A3, 0x_5C, 0x_BB, 0x_6D, 0x_57, 0x_5E, 0x_86, 0x_80,
		0x_8F, 0x_27, 0x_E1, 0x_E5, 0x_54, 0x_43, 0x_45,
	];

	helper(S, BASE, 23);
}
// endregion
// region: s_has_signs_and_767_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_767_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_A0, 0x_9A, 0x_20, 0x_11, 0x_96, 0x_3A, 0x_66, 0x_FC, 0x_BF, 0x_33, 0x_74, 0x_C5, 0x_70, 0x_E2, 0x_1E,
		0x_EB, 0x_57, 0x_AD, 0x_1D, 0x_41, 0x_C3, 0x_4D, 0x_7E, 0x_89, 0x_A3, 0x_E9, 0x_9B,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_BF, 0x_AB, 0x_A0, 0x_19, 0x_34, 0x_F9, 0x_59, 0x_A8, 0x_29, 0x_E6, 0x_17, 0x_FB, 0x_A3, 0x_C4,
		0x_F6, 0x_DD, 0x_B5, 0x_E7, 0x_F3, 0x_93, 0x_12, 0x_6E, 0x_74, 0x_AE, 0x_EF, 0x_9A, 0x_1A, 0x_A1, 0x_9F,
		0x_91, 0x_84, 0x_BE, 0x_10, 0x_C0, 0x_50, 0x_57, 0x_D3, 0x_53, 0x_8C, 0x_39, 0x_3C, 0x_25, 0x_D5, 0x_70,
		0x_96, 0x_5A, 0x_61, 0x_CC, 0x_42, 0x_05, 0x_F8, 0x_9E, 0x_BD, 0x_14, 0x_45, 0x_C5, 0x_7B, 0x_AC, 0x_63,
		0x_3F, 0x_5F, 0x_9B, 0x_87, 0x_AD, 0x_4B, 0x_40, 0x_6B, 0x_22, 0x_8D, 0x_4F, 0x_94, 0x_47, 0x_33, 0x_28,
		0x_F1, 0x_C9, 0x_36, 0x_A5, 0x_01, 0x_64, 0x_E4, 0x_27, 0x_7A, 0x_FC, 0x_9C, 0x_CF, 0x_88, 0x_2F, 0x_ED,
		0x_D0, 0x_CD, 0x_7D, 0x_69, 0x_52, 0x_EC, 0x_7C, 0x_E3, 0x_26, 0x_76, 0x_77, 0x_23, 0x_D2, 0x_D8, 0x_4A,
		0x_B1, 0x_80, 0x_EE, 0x_E9, 0x_11, 0x_FA, 0x_DA, 0x_6C, 0x_1C, 0x_8F, 0x_13, 0x_73, 0x_9D, 0x_A7, 0x_46,
		0x_B6, 0x_F7, 0x_75, 0x_86, 0x_56, 0x_5B, 0x_72, 0x_24, 0x_7F, 0x_95, 0x_62, 0x_BA, 0x_06, 0x_78, 0x_99,
		0x_30, 0x_0F, 0x_2E, 0x_0E, 0x_6D, 0x_FF, 0x_A6, 0x_C1, 0x_B4, 0x_92, 0x_D4, 0x_44, 0x_C6, 0x_18, 0x_C8,
		0x_02, 0x_4C, 0x_90, 0x_41, 0x_2C, 0x_66, 0x_16, 0x_82, 0x_1D, 0x_5E, 0x_B0, 0x_89, 0x_7E, 0x_AF, 0x_1B,
		0x_1E, 0x_DF, 0x_54, 0x_3D, 0x_79, 0x_37, 0x_1F, 0x_21, 0x_85, 0x_81, 0x_C3, 0x_F5, 0x_3B, 0x_D1, 0x_CB,
		0x_EB, 0x_2A, 0x_E2, 0x_B2, 0x_31, 0x_60, 0x_CA, 0x_65, 0x_49, 0x_E8, 0x_55, 0x_BC, 0x_8A, 0x_D7, 0x_71,
		0x_04, 0x_3E, 0x_4D, 0x_BB, 0x_35, 0x_3A, 0x_51, 0x_F2, 0x_32, 0x_B3, 0x_DC, 0x_EA, 0x_67, 0x_5D, 0x_A9,
		0x_FD, 0x_F4, 0x_FE, 0x_15, 0x_CE, 0x_08, 0x_5C, 0x_4E, 0x_07, 0x_68, 0x_C7, 0x_C2, 0x_E1, 0x_B7, 0x_A2,
		0x_E0, 0x_6F, 0x_DB, 0x_43, 0x_03, 0x_E5, 0x_6A, 0x_98, 0x_48, 0x_83, 0x_B9, 0x_D9, 0x_58, 0x_D6, 0x_F0,
		0x_38, 0x_A4, 0x_B8, 0x_AA, 0x_8E, 0x_8B, 0x_97,
	];

	helper(S, BASE, 767);
}
// endregion
// region: s_has_signs_and_6_522_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_6_522_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_B4, 0x_BC,
		0x_0C, 0x_48, 0x_17, 0x_A9, 0x_05, 0x_7C, 0x_E9, 0x_35, 0x_65, 0x_F6, 0x_21, 0x_7A, 0x_EA, 0x_C8, 0x_F0,
		0x_82, 0x_46, 0x_5E, 0x_5C, 0x_FD, 0x_12, 0x_22, 0x_7F, 0x_55, 0x_45, 0x_BB, 0x_E5, 0x_B8, 0x_15, 0x_77,
		0x_B3, 0x_46, 0x_82, 0x_85, 0x_84, 0x_19, 0x_0F,
	];
	const BASE: &[u8] = &[
		0x_E9, 0x_44, 0x_6B, 0x_08, 0x_79, 0x_21, 0x_E1, 0x_47, 0x_0E, 0x_52, 0x_B3, 0x_63, 0x_26, 0x_BA, 0x_24,
		0x_07, 0x_AB, 0x_6C, 0x_43, 0x_6D, 0x_19, 0x_DB, 0x_ED, 0x_89, 0x_91, 0x_7B, 0x_B4, 0x_2A, 0x_A6, 0x_BE,
		0x_8D, 0x_1C, 0x_18, 0x_01, 0x_CA, 0x_BF, 0x_72, 0x_F8, 0x_C5, 0x_67, 0x_E8, 0x_90, 0x_38, 0x_68, 0x_5B,
		0x_81, 0x_D4, 0x_22, 0x_C2, 0x_7C, 0x_EF, 0x_1E, 0x_5E, 0x_F3, 0x_DE, 0x_8C, 0x_30, 0x_86, 0x_02, 0x_DD,
		0x_D3, 0x_95, 0x_C6, 0x_A3, 0x_55, 0x_A1, 0x_1D, 0x_4A, 0x_4C, 0x_0F, 0x_9B, 0x_E5, 0x_96, 0x_17, 0x_32,
		0x_56, 0x_45, 0x_C0, 0x_84, 0x_58, 0x_B2, 0x_85, 0x_9C, 0x_10, 0x_28, 0x_F6, 0x_F4, 0x_62, 0x_39, 0x_60,
		0x_E7, 0x_70, 0x_9F, 0x_4D, 0x_49, 0x_1F, 0x_61, 0x_6E, 0x_EA, 0x_88, 0x_BC, 0x_CD, 0x_59, 0x_B8, 0x_D0,
		0x_7F, 0x_73, 0x_06, 0x_66, 0x_65, 0x_5C, 0x_82, 0x_69, 0x_9D, 0x_94, 0x_4B, 0x_FE, 0x_71, 0x_B1, 0x_99,
		0x_A4, 0x_14, 0x_2C, 0x_75, 0x_5F, 0x_A0, 0x_2E, 0x_A2, 0x_5D, 0x_54, 0x_A8, 0x_03, 0x_DA, 0x_74, 0x_AE,
		0x_7A, 0x_D2, 0x_E2, 0x_C3, 0x_93, 0x_78, 0x_C4, 0x_F7, 0x_AA, 0x_CE, 0x_83, 0x_A7, 0x_1A, 0x_3D, 0x_D8,
		0x_77, 0x_2F, 0x_4F, 0x_48, 0x_57, 0x_AD, 0x_12, 0x_36, 0x_92, 0x_8A, 0x_E3, 0x_51, 0x_11, 0x_EE, 0x_40,
		0x_D6, 0x_76, 0x_F5, 0x_C7, 0x_4E, 0x_9A, 0x_A5, 0x_C8, 0x_8B, 0x_B7, 0x_04, 0x_D5, 0x_53, 0x_FD, 0x_46,
		0x_87, 0x_E4, 0x_37, 0x_6F, 0x_C1, 0x_FC, 0x_BB, 0x_3B, 0x_5A, 0x_BD, 0x_29, 0x_D7, 0x_33, 0x_E0, 0x_6A,
		0x_FA, 0x_CC, 0x_B0, 0x_42, 0x_3A, 0x_9E, 0x_35, 0x_8F, 0x_16, 0x_E6, 0x_C9, 0x_98, 0x_41, 0x_13, 0x_EC,
		0x_DF, 0x_3E, 0x_EB, 0x_1B, 0x_FB, 0x_25, 0x_CF, 0x_CB, 0x_23, 0x_7E, 0x_AC, 0x_97, 0x_AF, 0x_DC, 0x_27,
		0x_3C, 0x_05, 0x_50, 0x_31, 0x_B9, 0x_D9, 0x_F2, 0x_F0, 0x_15, 0x_80, 0x_FF, 0x_F9, 0x_A9, 0x_B6, 0x_3F,
		0x_64, 0x_D1, 0x_B5, 0x_34, 0x_7D, 0x_F1, 0x_8E,
	];

	helper(S, BASE, 6_522);
}
// endregion
// region: s_has_signs_and_15_892_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_15_892_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_74, 0x_5E, 0x_0C, 0x_4D,
		0x_33, 0x_48, 0x_36, 0x_34, 0x_8E, 0x_A4, 0x_84, 0x_03, 0x_82, 0x_D3, 0x_29, 0x_3F, 0x_F8, 0x_60, 0x_6D,
		0x_6A, 0x_D5, 0x_67, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_BB, 0x_83, 0x_D3, 0x_4E, 0x_32, 0x_8C, 0x_92, 0x_A3, 0x_11, 0x_17, 0x_8A, 0x_B7, 0x_42, 0x_29,
		0x_A1, 0x_6E, 0x_B1, 0x_AA, 0x_DB, 0x_DA, 0x_E7, 0x_40, 0x_16, 0x_51, 0x_26, 0x_58, 0x_77, 0x_FE, 0x_B4,
		0x_BF, 0x_3D, 0x_84, 0x_3F, 0x_6B, 0x_DF, 0x_91, 0x_71, 0x_7C, 0x_B5, 0x_27, 0x_B8, 0x_E2, 0x_8B, 0x_70,
		0x_C3, 0x_0F, 0x_28, 0x_BD, 0x_62, 0x_AF, 0x_A4, 0x_14, 0x_95, 0x_7D, 0x_2E, 0x_C1, 0x_73, 0x_B3, 0x_0E,
		0x_23, 0x_82, 0x_46, 0x_24, 0x_74, 0x_1F, 0x_E1, 0x_38, 0x_2A, 0x_43, 0x_FB, 0x_01, 0x_DE, 0x_D4, 0x_A0,
		0x_E3, 0x_93, 0x_03, 0x_A9, 0x_E6, 0x_9A, 0x_3E, 0x_2F, 0x_90, 0x_5E, 0x_4D, 0x_10, 0x_F8, 0x_C8, 0x_41,
		0x_4B, 0x_5A, 0x_F4, 0x_80, 0x_72, 0x_54, 0x_5C, 0x_B0, 0x_BC, 0x_81, 0x_1A, 0x_FC, 0x_5B, 0x_13, 0x_7B,
		0x_96, 0x_CA, 0x_E4, 0x_9B, 0x_31, 0x_D1, 0x_7E, 0x_18, 0x_94, 0x_CE, 0x_3A, 0x_86, 0x_78, 0x_7F, 0x_BE,
		0x_88, 0x_22, 0x_36, 0x_68, 0x_CD, 0x_25, 0x_69, 0x_6C, 0x_9C, 0x_9E, 0x_60, 0x_CB, 0x_E0, 0x_B2, 0x_63,
		0x_EF, 0x_F9, 0x_55, 0x_F1, 0x_EC, 0x_EB, 0x_ED, 0x_2C, 0x_C6, 0x_1D, 0x_44, 0x_87, 0x_5F, 0x_3C, 0x_07,
		0x_47, 0x_61, 0x_6A, 0x_4F, 0x_FD, 0x_F7, 0x_19, 0x_8E, 0x_37, 0x_04, 0x_9D, 0x_D8, 0x_35, 0x_1E, 0x_DD,
		0x_A7, 0x_76, 0x_F0, 0x_F5, 0x_65, 0x_75, 0x_97, 0x_D0, 0x_AB, 0x_B9, 0x_6F, 0x_CF, 0x_48, 0x_D5, 0x_C2,
		0x_CC, 0x_57, 0x_1C, 0x_06, 0x_98, 0x_C4, 0x_9F, 0x_8D, 0x_AC, 0x_D9, 0x_C9, 0x_08, 0x_67, 0x_64, 0x_E5,
		0x_12, 0x_F2, 0x_53, 0x_45, 0x_C7, 0x_E8, 0x_A5, 0x_59, 0x_FA, 0x_3B, 0x_99, 0x_21, 0x_AD, 0x_34, 0x_79,
		0x_56, 0x_15, 0x_89, 0x_50, 0x_C0, 0x_BA, 0x_7A, 0x_C5, 0x_85, 0x_A8, 0x_EE, 0x_02, 0x_05, 0x_5D, 0x_EA,
		0x_D6, 0x_AE, 0x_39, 0x_8F, 0x_4A, 0x_66, 0x_D7, 0x_FF, 0x_6D, 0x_52, 0x_A2, 0x_DC, 0x_E9, 0x_F6, 0x_F3,
		0x_33, 0x_49, 0x_30, 0x_D2, 0x_B6, 0x_1B, 0x_4C,
	];

	helper(S, BASE, 15_892);
}
// endregion
// region: s_has_signs_and_261_290_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_261_290_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_B8, 0x_18, 0x_05, 0x_09, 0x_DB, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_92, 0x_D3, 0x_54, 0x_B8, 0x_6C, 0x_5C, 0x_EC, 0x_8F, 0x_61, 0x_3F, 0x_53, 0x_CC, 0x_96, 0x_06,
		0x_6A, 0x_E4, 0x_72, 0x_4A, 0x_1A, 0x_27, 0x_26, 0x_58, 0x_3A, 0x_70, 0x_55, 0x_F7, 0x_2F, 0x_A6, 0x_01,
		0x_97, 0x_11, 0x_5B, 0x_6B, 0x_5A, 0x_BB, 0x_41, 0x_62, 0x_6E, 0x_E7, 0x_9F, 0x_75, 0x_86, 0x_82, 0x_DB,
		0x_D9, 0x_A1, 0x_C8, 0x_3D, 0x_3B, 0x_AB, 0x_FC, 0x_0E, 0x_D0, 0x_78, 0x_74, 0x_F5, 0x_A0, 0x_D5, 0x_F3,
		0x_E6, 0x_76, 0x_C7, 0x_22, 0x_7D, 0x_B2, 0x_F1, 0x_98, 0x_87, 0x_18, 0x_CB, 0x_7B, 0x_13, 0x_3E, 0x_65,
		0x_4F, 0x_14, 0x_7C, 0x_02, 0x_D8, 0x_81, 0x_C2, 0x_BA, 0x_30, 0x_1F, 0x_C3, 0x_F4, 0x_37, 0x_69, 0x_AD,
		0x_B9, 0x_2A, 0x_9A, 0x_5D, 0x_93, 0x_0F, 0x_3C, 0x_A4, 0x_9D, 0x_A7, 0x_A2, 0x_2E, 0x_90, 0x_88, 0x_FF,
		0x_D1, 0x_16, 0x_21, 0x_03, 0x_94, 0x_43, 0x_71, 0x_38, 0x_EB, 0x_56, 0x_B3, 0x_8C, 0x_B4, 0x_2C, 0x_B1,
		0x_24, 0x_4E, 0x_D7, 0x_A8, 0x_EE, 0x_BC, 0x_E9, 0x_57, 0x_51, 0x_E5, 0x_66, 0x_31, 0x_1C, 0x_CE, 0x_25,
		0x_C4, 0x_C6, 0x_8D, 0x_EA, 0x_B5, 0x_7E, 0x_A5, 0x_89, 0x_9B, 0x_F0, 0x_5F, 0x_E0, 0x_E8, 0x_29, 0x_AC,
		0x_12, 0x_FB, 0x_47, 0x_D6, 0x_BD, 0x_BE, 0x_46, 0x_DA, 0x_4C, 0x_E1, 0x_5E, 0x_83, 0x_80, 0x_28, 0x_CA,
		0x_B0, 0x_77, 0x_23, 0x_68, 0x_33, 0x_36, 0x_04, 0x_DF, 0x_F8, 0x_40, 0x_A3, 0x_45, 0x_8A, 0x_39, 0x_32,
		0x_E2, 0x_C5, 0x_D4, 0x_99, 0x_17, 0x_63, 0x_48, 0x_EF, 0x_8B, 0x_1E, 0x_42, 0x_19, 0x_85, 0x_50, 0x_C0,
		0x_B7, 0x_FA, 0x_95, 0x_10, 0x_ED, 0x_AF, 0x_FE, 0x_8E, 0x_07, 0x_4B, 0x_D2, 0x_67, 0x_DC, 0x_6D, 0x_44,
		0x_AA, 0x_05, 0x_35, 0x_A9, 0x_B6, 0x_91, 0x_F6, 0x_9E, 0x_7F, 0x_CD, 0x_FD, 0x_AE, 0x_1D, 0x_15, 0x_7A,
		0x_60, 0x_59, 0x_49, 0x_6F, 0x_9C, 0x_73, 0x_52, 0x_34, 0x_1B, 0x_DE, 0x_64, 0x_E3, 0x_F9, 0x_CF, 0x_BF,
		0x_08, 0x_4D, 0x_DD, 0x_F2, 0x_C1, 0x_79, 0x_84,
	];

	helper(S, BASE, 261_290);
}
// endregion
// region: s_has_signs_and_4_690_482_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_4_690_482_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_97, 0x_D0, 0x_B9, 0x_0C, 0x_6B, 0x_1D, 0x_FC, 0x_21, 0x_99,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_DF, 0x_F6, 0x_55, 0x_BE, 0x_10, 0x_57, 0x_6B, 0x_66, 0x_53, 0x_E6, 0x_F9, 0x_D8, 0x_1D, 0x_92,
		0x_FA, 0x_F0, 0x_D6, 0x_0E, 0x_A6, 0x_59, 0x_43, 0x_F3, 0x_67, 0x_22, 0x_23, 0x_73, 0x_EB, 0x_64, 0x_07,
		0x_31, 0x_E9, 0x_5F, 0x_EF, 0x_A3, 0x_75, 0x_D2, 0x_A4, 0x_01, 0x_28, 0x_C5, 0x_65, 0x_98, 0x_8D, 0x_CD,
		0x_71, 0x_F7, 0x_DB, 0x_15, 0x_95, 0x_1A, 0x_4E, 0x_CB, 0x_2E, 0x_42, 0x_AE, 0x_39, 0x_40, 0x_5A, 0x_AD,
		0x_A8, 0x_4B, 0x_1C, 0x_90, 0x_B5, 0x_89, 0x_78, 0x_7F, 0x_C3, 0x_4F, 0x_72, 0x_1B, 0x_41, 0x_54, 0x_60,
		0x_8B, 0x_97, 0x_7A, 0x_BA, 0x_46, 0x_E2, 0x_11, 0x_A2, 0x_17, 0x_D9, 0x_9E, 0x_77, 0x_83, 0x_C0, 0x_82,
		0x_C2, 0x_F2, 0x_FF, 0x_16, 0x_6E, 0x_94, 0x_3E, 0x_6C, 0x_E5, 0x_E3, 0x_6D, 0x_B6, 0x_19, 0x_A0, 0x_B7,
		0x_A9, 0x_02, 0x_08, 0x_7B, 0x_87, 0x_BB, 0x_AA, 0x_34, 0x_99, 0x_6A, 0x_B8, 0x_C9, 0x_7C, 0x_5D, 0x_E7,
		0x_38, 0x_DD, 0x_5C, 0x_D1, 0x_B0, 0x_FE, 0x_1E, 0x_EA, 0x_CE, 0x_30, 0x_2C, 0x_D3, 0x_6F, 0x_13, 0x_FB,
		0x_70, 0x_CA, 0x_F4, 0x_C6, 0x_C8, 0x_4A, 0x_21, 0x_5E, 0x_B3, 0x_32, 0x_BC, 0x_49, 0x_BF, 0x_BD, 0x_AF,
		0x_8C, 0x_5B, 0x_18, 0x_DC, 0x_1F, 0x_9B, 0x_DE, 0x_AB, 0x_EC, 0x_2A, 0x_C4, 0x_36, 0x_50, 0x_FD, 0x_3C,
		0x_7E, 0x_FC, 0x_0F, 0x_79, 0x_96, 0x_48, 0x_12, 0x_29, 0x_8F, 0x_44, 0x_A1, 0x_25, 0x_74, 0x_51, 0x_F8,
		0x_3B, 0x_86, 0x_B4, 0x_45, 0x_62, 0x_E0, 0x_8A, 0x_E8, 0x_C1, 0x_06, 0x_81, 0x_D5, 0x_26, 0x_9F, 0x_93,
		0x_4C, 0x_A7, 0x_B1, 0x_B2, 0x_B9, 0x_61, 0x_E1, 0x_91, 0x_03, 0x_4D, 0x_84, 0x_68, 0x_85, 0x_3D, 0x_05,
		0x_76, 0x_D4, 0x_35, 0x_14, 0x_24, 0x_04, 0x_ED, 0x_D0, 0x_9C, 0x_2F, 0x_37, 0x_63, 0x_3A, 0x_CF, 0x_80,
		0x_58, 0x_27, 0x_7D, 0x_E4, 0x_F5, 0x_C7, 0x_9A, 0x_F1, 0x_33, 0x_CC, 0x_52, 0x_8E, 0x_AC, 0x_69, 0x_A5,
		0x_D7, 0x_3F, 0x_DA, 0x_EE, 0x_9D, 0x_56, 0x_88,
	];

	helper(S, BASE, 4_690_482);
}
// endregion
// region: s_has_signs_and_24_336_062_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_24_336_062_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_E5, 0x_EB, 0x_6A, 0x_A3, 0x_0C, 0x_1A, 0x_AC, 0x_C5, 0x_40, 0x_61, 0x_5C,
		0x_76, 0x_81, 0x_25, 0x_49, 0x_CE, 0x_2C, 0x_D4, 0x_43, 0x_4D, 0x_7A, 0x_5A, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_E5, 0x_92, 0x_E6, 0x_12, 0x_01, 0x_D1, 0x_E8, 0x_F3, 0x_C1, 0x_B5, 0x_5D, 0x_1C, 0x_49, 0x_03,
		0x_02, 0x_1B, 0x_36, 0x_46, 0x_5B, 0x_8F, 0x_3B, 0x_54, 0x_77, 0x_4A, 0x_C2, 0x_90, 0x_9F, 0x_72, 0x_E4,
		0x_45, 0x_59, 0x_32, 0x_C6, 0x_60, 0x_BA, 0x_78, 0x_C3, 0x_F7, 0x_D6, 0x_14, 0x_44, 0x_AC, 0x_61, 0x_6D,
		0x_69, 0x_8B, 0x_1E, 0x_30, 0x_88, 0x_48, 0x_2E, 0x_BE, 0x_DA, 0x_CC, 0x_B3, 0x_34, 0x_9E, 0x_2A, 0x_13,
		0x_05, 0x_0E, 0x_A5, 0x_42, 0x_3A, 0x_5F, 0x_E0, 0x_87, 0x_55, 0x_D7, 0x_8D, 0x_29, 0x_C9, 0x_31, 0x_E9,
		0x_B1, 0x_D4, 0x_EE, 0x_5A, 0x_B2, 0x_16, 0x_D0, 0x_E2, 0x_17, 0x_AB, 0x_DF, 0x_D8, 0x_94, 0x_18, 0x_D3,
		0x_85, 0x_73, 0x_65, 0x_FE, 0x_3E, 0x_68, 0x_52, 0x_95, 0x_B9, 0x_1F, 0x_7D, 0x_62, 0x_35, 0x_D5, 0x_8C,
		0x_71, 0x_3C, 0x_8E, 0x_B0, 0x_4C, 0x_A6, 0x_BC, 0x_6E, 0x_74, 0x_47, 0x_38, 0x_A7, 0x_24, 0x_84, 0x_B6,
		0x_A2, 0x_76, 0x_93, 0x_51, 0x_F0, 0x_F4, 0x_D9, 0x_97, 0x_4E, 0x_AF, 0x_F6, 0x_80, 0x_43, 0x_CD, 0x_37,
		0x_10, 0x_22, 0x_EA, 0x_4B, 0x_7B, 0x_A3, 0x_6F, 0x_83, 0x_3D, 0x_EC, 0x_AD, 0x_C4, 0x_23, 0x_7A, 0x_99,
		0x_6C, 0x_EB, 0x_E7, 0x_FA, 0x_3F, 0x_F5, 0x_DE, 0x_39, 0x_B7, 0x_33, 0x_F8, 0x_B4, 0x_CB, 0x_BB, 0x_EF,
		0x_67, 0x_B8, 0x_81, 0x_26, 0x_06, 0x_58, 0x_53, 0x_BD, 0x_63, 0x_66, 0x_70, 0x_08, 0x_ED, 0x_FB, 0x_98,
		0x_F9, 0x_6B, 0x_E3, 0x_4F, 0x_F1, 0x_A1, 0x_FF, 0x_79, 0x_64, 0x_A4, 0x_1D, 0x_F2, 0x_A8, 0x_2C, 0x_CE,
		0x_15, 0x_91, 0x_07, 0x_40, 0x_21, 0x_8A, 0x_04, 0x_9B, 0x_FC, 0x_41, 0x_11, 0x_DC, 0x_C0, 0x_AE, 0x_A9,
		0x_BF, 0x_D2, 0x_C7, 0x_25, 0x_9C, 0x_82, 0x_96, 0x_DD, 0x_50, 0x_C5, 0x_6A, 0x_5C, 0x_19, 0x_FD, 0x_9D,
		0x_28, 0x_56, 0x_1A, 0x_86, 0x_2F, 0x_4D, 0x_E1, 0x_AA, 0x_DB, 0x_7E, 0x_CA, 0x_7C, 0x_89, 0x_27, 0x_5E,
		0x_0F, 0x_A0, 0x_9A, 0x_57, 0x_75, 0x_C8, 0x_7F,
	];

	helper(S, BASE, 24_336_062);
}
// endregion
// region: s_has_signs_and_784_100_348_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_784_100_348_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_B7, 0x_BE, 0x_56, 0x_1D, 0x_0A, 0x_55, 0x_B3, 0x_1A, 0x_93, 0x_FE, 0x_F0, 0x_D4,
		0x_49, 0x_7A, 0x_65, 0x_34, 0x_E9, 0x_DF, 0x_61, 0x_4A, 0x_C1, 0x_BC, 0x_C4, 0x_99, 0x_ED, 0x_53, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_CB, 0x_D7, 0x_65, 0x_A9, 0x_FA, 0x_FD, 0x_77, 0x_BE, 0x_5F, 0x_33, 0x_EC, 0x_B4, 0x_E3, 0x_9E,
		0x_C2, 0x_5B, 0x_E2, 0x_82, 0x_C3, 0x_26, 0x_A7, 0x_F2, 0x_3C, 0x_F9, 0x_E9, 0x_60, 0x_AE, 0x_C5, 0x_B1,
		0x_BF, 0x_46, 0x_E4, 0x_A2, 0x_85, 0x_0E, 0x_55, 0x_36, 0x_F4, 0x_8C, 0x_45, 0x_5E, 0x_40, 0x_C0, 0x_F5,
		0x_C9, 0x_6F, 0x_E5, 0x_7C, 0x_8F, 0x_0F, 0x_56, 0x_B7, 0x_EF, 0x_FC, 0x_2F, 0x_72, 0x_70, 0x_19, 0x_11,
		0x_29, 0x_2E, 0x_F0, 0x_71, 0x_F7, 0x_4D, 0x_98, 0x_A5, 0x_52, 0x_66, 0x_C1, 0x_51, 0x_3A, 0x_CF, 0x_63,
		0x_AD, 0x_BB, 0x_12, 0x_54, 0x_05, 0x_1C, 0x_DE, 0x_69, 0x_1D, 0x_03, 0x_D6, 0x_CC, 0x_23, 0x_17, 0x_4A,
		0x_95, 0x_A0, 0x_6C, 0x_1B, 0x_D4, 0x_9A, 0x_EB, 0x_7E, 0x_32, 0x_DD, 0x_D0, 0x_89, 0x_8D, 0x_30, 0x_64,
		0x_3B, 0x_7A, 0x_18, 0x_92, 0x_E1, 0x_80, 0x_91, 0x_88, 0x_62, 0x_48, 0x_5A, 0x_E6, 0x_C6, 0x_1F, 0x_8E,
		0x_57, 0x_A1, 0x_B8, 0x_4F, 0x_1A, 0x_6E, 0x_B2, 0x_04, 0x_14, 0x_A3, 0x_EA, 0x_8A, 0x_3D, 0x_25, 0x_41,
		0x_78, 0x_FB, 0x_4B, 0x_D8, 0x_7B, 0x_D1, 0x_93, 0x_3E, 0x_DA, 0x_7D, 0x_D2, 0x_79, 0x_D5, 0x_02, 0x_24,
		0x_10, 0x_AA, 0x_61, 0x_53, 0x_59, 0x_E0, 0x_31, 0x_35, 0x_47, 0x_75, 0x_CD, 0x_A6, 0x_49, 0x_87, 0x_6D,
		0x_D9, 0x_C7, 0x_27, 0x_68, 0x_07, 0x_76, 0x_90, 0x_96, 0x_15, 0x_37, 0x_C8, 0x_97, 0x_B9, 0x_CA, 0x_4C,
		0x_9B, 0x_DB, 0x_C4, 0x_5C, 0x_44, 0x_28, 0x_1E, 0x_74, 0x_58, 0x_43, 0x_DF, 0x_B5, 0x_CE, 0x_AC, 0x_39,
		0x_B0, 0x_08, 0x_F8, 0x_9D, 0x_6B, 0x_BD, 0x_38, 0x_2C, 0x_16, 0x_84, 0x_B6, 0x_21, 0x_9F, 0x_F3, 0x_86,
		0x_9C, 0x_A8, 0x_3F, 0x_2A, 0x_81, 0x_22, 0x_F1, 0x_01, 0x_AF, 0x_5D, 0x_34, 0x_BC, 0x_6A, 0x_FF, 0x_73,
		0x_06, 0x_ED, 0x_13, 0x_99, 0x_D3, 0x_FE, 0x_50, 0x_B3, 0x_E8, 0x_DC, 0x_F6, 0x_E7, 0x_94, 0x_7F, 0x_EE,
		0x_AB, 0x_4E, 0x_42, 0x_8B, 0x_83, 0x_A4, 0x_67,
	];

	helper(S, BASE, 784_100_348);
}
// endregion
// region: s_has_zeros_and_8_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_8_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_37, 0x_8D,
		0x_8D, 0x_8D, 0x_11, 0x_8D, 0x_8D, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_37,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_zeros_and_63_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_63_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55,
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_1B, 0x_55, 0x_25, 0x_25,
		0x_25, 0x_25, 0x_25, 0x_55, 0x_55, 0x_55, 0x_25, 0x_55, 0x_55, 0x_25, 0x_25, 0x_55, 0x_25, 0x_55, 0x_55,
		0x_55, 0x_25, 0x_25, 0x_25, 0x_25, 0x_55, 0x_55, 0x_25, 0x_25, 0x_55, 0x_25, 0x_55, 0x_55, 0x_25, 0x_25,
		0x_25, 0x_25, 0x_25, 0x_55, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_25,
	];

	helper(S, BASE, 63);
}
// endregion
// region: s_has_zeros_and_834_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_834_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_E7, 0x_E7, 0x_AF, 0x_E7, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_E7, 0x_AF,
		0x_78, 0x_E7, 0x_AF, 0x_AF, 0x_AF, 0x_E7, 0x_AF, 0x_AF, 0x_E7, 0x_E7, 0x_E7, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_E7,
	];

	helper(S, BASE, 834);
}
// endregion
// region: s_has_zeros_and_1_984_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_1_984_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_03, 0x_E1, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_E1, 0x_23, 0x_23, 0x_E1,
		0x_E1, 0x_23, 0x_E1, 0x_E1, 0x_E1, 0x_23, 0x_23, 0x_23, 0x_E1, 0x_E1, 0x_23, 0x_E1, 0x_E1, 0x_23, 0x_E1,
		0x_E1, 0x_E1, 0x_23, 0x_E1, 0x_E1, 0x_E1, 0x_23, 0x_23, 0x_E1, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_E1,
	];

	helper(S, BASE, 1_984);
}
// endregion
// region: s_has_zeros_and_45_641_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_45_641_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7,
		0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7,
		0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_4F, 0x_D7, 0x_4F, 0x_4F, 0x_D7, 0x_D7, 0x_4F, 0x_D7, 0x_D7, 0x_4F, 0x_D7,
		0x_D7, 0x_4F, 0x_D7, 0x_D7, 0x_4F, 0x_21, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_D7, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_4F,
	];

	helper(S, BASE, 45_641);
}
// endregion
// region: s_has_zeros_and_456_691_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_456_691_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_E4, 0x_E4, 0x_61,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_61, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_61, 0x_61, 0x_E4,
		0x_E4, 0x_F7, 0x_E4, 0x_61, 0x_61, 0x_E4, 0x_E4, 0x_61, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_E4,
	];

	helper(S, BASE, 456_691);
}
// endregion
// region: s_has_zeros_and_3_047_453_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_3_047_453_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_29, 0x_DC, 0x_29, 0x_29, 0x_29, 0x_DC, 0x_29, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_29, 0x_29, 0x_29, 0x_DC, 0x_29, 0x_B8, 0x_29, 0x_DC, 0x_29,
		0x_DC, 0x_29, 0x_DC, 0x_29, 0x_29, 0x_DC, 0x_29, 0x_29, 0x_DC, 0x_29, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_29,
		0x_DC, 0x_29, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_29,
	];

	helper(S, BASE, 3_047_453);
}
// endregion
// region: s_has_zeros_and_43_740_893_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_43_740_893_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_28, 0x_28, 0x_28, 0x_28, 0x_1B, 0x_28, 0x_1B, 0x_28, 0x_28, 0x_1B, 0x_1B, 0x_28, 0x_1B, 0x_1B, 0x_28,
		0x_1B, 0x_1B, 0x_28, 0x_1B, 0x_1B, 0x_1B, 0x_28, 0x_1B, 0x_1B, 0x_28, 0x_1B, 0x_1B, 0x_1B, 0x_28, 0x_1B,
		0x_4C, 0x_28, 0x_1B, 0x_28, 0x_28, 0x_28, 0x_28, 0x_1B, 0x_1B, 0x_28, 0x_28, 0x_28, 0x_1B, 0x_1B, 0x_1B,
		0x_28, 0x_28, 0x_28, 0x_28, 0x_28, 0x_1B, 0x_1B, 0x_28, 0x_1B, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_1B,
	];

	helper(S, BASE, 43_740_893);
}
// endregion
// region: s_has_zeros_and_948_332_704_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_948_332_704_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_C0,
		0x_C0, 0x_C0, 0x_4F, 0x_4F, 0x_4F, 0x_C0, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_C0, 0x_C0, 0x_4F, 0x_4F, 0x_C0,
		0x_C0, 0x_4F, 0x_C0, 0x_4F, 0x_4F, 0x_4F, 0x_C0, 0x_4F, 0x_C0, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_B7,
		0x_C0, 0x_C0, 0x_4F, 0x_4F, 0x_C0, 0x_4F, 0x_4F, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_4F, 0x_4F, 0x_4F, 0x_4F,
		0x_4F, 0x_C0, 0x_4F, 0x_C0, 0x_C0, 0x_4F, 0x_4F, 0x_C0, 0x_C0, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_C0, 0x_C0,
		0x_C0, 0x_C0, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_C0,
	];

	helper(S, BASE, 948_332_704);
}
// endregion
// region: s_has_zeros_and_6_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_6_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97,
		0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_37, 0x_97, 0x_0A, 0x_37,
		0x_37, 0x_D0, 0x_37, 0x_97, 0x_37, 0x_37, 0x_97, 0x_D0, 0x_97, 0x_97, 0x_D0, 0x_97, 0x_D0, 0x_97, 0x_97,
		0x_97, 0x_37, 0x_37, 0x_97, 0x_D0, 0x_97, 0x_37, 0x_D0, 0x_D0, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_D0, 0x_37,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_zeros_and_56_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_56_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_C1, 0x_80, 0x_80,
		0x_C1, 0x_7E, 0x_80, 0x_73, 0x_73, 0x_C1, 0x_73, 0x_80, 0x_80, 0x_C1, 0x_C1, 0x_C1, 0x_80, 0x_73, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_73, 0x_C1,
	];

	helper(S, BASE, 56);
}
// endregion
// region: s_has_zeros_and_922_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_922_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6,
		0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_FF, 0x_A6, 0x_D9, 0x_FF, 0x_A6, 0x_FF, 0x_FF,
		0x_D0, 0x_FF, 0x_FF, 0x_D9, 0x_D9, 0x_A6, 0x_FF, 0x_A6, 0x_FF, 0x_FF, 0x_D9, 0x_FF, 0x_D9, 0x_D9, 0x_A6,
		0x_FF, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_D9, 0x_D9, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_FF, 0x_D9,
	];

	helper(S, BASE, 922);
}
// endregion
// region: s_has_zeros_and_6_653_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_6_653_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F0, 0x_F6, 0x_F6, 0x_F6, 0x_F0, 0x_F6, 0x_F0, 0x_F6, 0x_31, 0x_14, 0x_F0, 0x_31, 0x_F6, 0x_F0,
		0x_F6, 0x_31, 0x_F0, 0x_31, 0x_31, 0x_F6, 0x_31, 0x_31, 0x_F6, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_F0, 0x_31,
	];

	helper(S, BASE, 6_653);
}
// endregion
// region: s_has_zeros_and_76_891_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_76_891_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_9B, 0x_DC, 0x_DD, 0x_DD, 0x_DC, 0x_9B, 0x_9B, 0x_DC, 0x_DD, 0x_9B, 0x_9B, 0x_01,
		0x_DD, 0x_9B, 0x_9B, 0x_DD, 0x_DD, 0x_DC, 0x_9B, 0x_DD, 0x_9B, 0x_DD, 0x_9B, 0x_DC, 0x_DD, 0x_9B, 0x_9B,
		0x_DD, 0x_DC, 0x_DC, 0x_DD, 0x_DC, 0x_DC, 0x_DD, 0x_DC,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_9B, 0x_DD,
	];

	helper(S, BASE, 76_891);
}
// endregion
// region: s_has_zeros_and_304_875_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_304_875_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_CF, 0x_3E, 0x_3F, 0x_CF, 0x_CF, 0x_CF, 0x_3F, 0x_CF, 0x_3E, 0x_3E, 0x_3F, 0x_3F,
		0x_A9, 0x_CF, 0x_3E, 0x_3F, 0x_CF, 0x_CF, 0x_3E, 0x_3E, 0x_3F, 0x_3E, 0x_3F, 0x_CF, 0x_CF, 0x_CF, 0x_3E,
		0x_3F, 0x_3E, 0x_3E, 0x_3F, 0x_3E, 0x_CF, 0x_3F, 0x_3F, 0x_3E, 0x_CF, 0x_3E, 0x_3E, 0x_3F, 0x_CF, 0x_3F,
		0x_CF, 0x_3F, 0x_CF, 0x_CF, 0x_3F, 0x_CF, 0x_3E, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_CF, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_CF, 0x_3E,
	];

	helper(S, BASE, 304_875);
}
// endregion
// region: s_has_zeros_and_9_804_052_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_9_804_052_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_48, 0x_94, 0x_94, 0x_93, 0x_93, 0x_94, 0x_94, 0x_94, 0x_48,
		0x_93, 0x_48, 0x_48, 0x_94, 0x_94, 0x_93, 0x_3B, 0x_48, 0x_48, 0x_94, 0x_94, 0x_93, 0x_94, 0x_93, 0x_93,
		0x_48, 0x_48, 0x_48, 0x_94, 0x_93, 0x_94, 0x_93, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_93, 0x_94,
		0x_94, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_93, 0x_48,
	];

	helper(S, BASE, 9_804_052);
}
// endregion
// region: s_has_zeros_and_53_822_777_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_53_822_777_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D,
		0x_8E, 0x_4D, 0x_4F, 0x_4D, 0x_4F, 0x_4D, 0x_4F, 0x_8E, 0x_8E, 0x_8E, 0x_4D, 0x_4F, 0x_4F, 0x_4F, 0x_4D,
		0x_8E, 0x_4F, 0x_B4, 0x_4D, 0x_4F, 0x_4D, 0x_4D, 0x_8E, 0x_4F, 0x_4F, 0x_4F, 0x_4D, 0x_8E, 0x_4F, 0x_8E,
		0x_8E, 0x_4F, 0x_4F, 0x_8E, 0x_4D, 0x_4F, 0x_8E, 0x_8E, 0x_4D, 0x_4F, 0x_8E, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_4D, 0x_8E, 0x_4F,
	];

	helper(S, BASE, 53_822_777);
}
// endregion
// region: s_has_zeros_and_152_197_336_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_152_197_336_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_07, 0x_D4, 0x_07, 0x_07, 0x_BB, 0x_07, 0x_07, 0x_D4,
		0x_07, 0x_07, 0x_D4, 0x_BB, 0x_07, 0x_07, 0x_07, 0x_07, 0x_D4, 0x_07, 0x_9D, 0x_07, 0x_D4, 0x_BB, 0x_BB,
		0x_D4, 0x_BB, 0x_07, 0x_BB, 0x_07, 0x_BB, 0x_BB, 0x_BB, 0x_D4, 0x_D4, 0x_D4, 0x_07, 0x_D4, 0x_BB,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_07, 0x_BB,
	];

	helper(S, BASE, 152_197_336);
}
// endregion
// region: s_has_zeros_and_9_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_9_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_10, 0x_89, 0x_88, 0x_8D, 0x_C1, 0x_89, 0x_8D,
		0x_10, 0x_C4, 0x_C4, 0x_10, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_10, 0x_8D, 0x_C4, 0x_89,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_zeros_and_19_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_19_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B,
		0x_9B, 0x_3B, 0x_A9, 0x_6F, 0x_91, 0x_A9, 0x_A9, 0x_3B, 0x_9B, 0x_91, 0x_52, 0x_A9, 0x_3B, 0x_A9, 0x_9B,
		0x_A9, 0x_52, 0x_3B, 0x_91, 0x_A9, 0x_52, 0x_52, 0x_9B, 0x_9B, 0x_3B, 0x_91, 0x_9B, 0x_3B, 0x_A9, 0x_9B,
		0x_91, 0x_9B, 0x_9B, 0x_91, 0x_9B, 0x_A9, 0x_3B, 0x_52, 0x_9B,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_52, 0x_91, 0x_3B, 0x_A9,
	];

	helper(S, BASE, 19);
}
// endregion
// region: s_has_zeros_and_809_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_809_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47,
		0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_F6, 0x_F6, 0x_B5, 0x_F6, 0x_80,
		0x_A2, 0x_B5, 0x_4F, 0x_80, 0x_4F, 0x_F6, 0x_80, 0x_F6, 0x_F6, 0x_80, 0x_80, 0x_4F, 0x_4F, 0x_4F, 0x_47,
		0x_80, 0x_4F, 0x_4F, 0x_4F, 0x_80, 0x_80, 0x_B5, 0x_B5, 0x_47, 0x_80, 0x_47, 0x_4F, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_F6, 0x_B5, 0x_4F, 0x_80,
	];

	helper(S, BASE, 809);
}
// endregion
// region: s_has_zeros_and_2_719_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_2_719_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_FC, 0x_D8, 0x_91, 0x_91, 0x_FC, 0x_48, 0x_D8, 0x_BB, 0x_FC, 0x_BB, 0x_E7,
		0x_91, 0x_FC, 0x_D8, 0x_FC, 0x_91, 0x_D8, 0x_91, 0x_FC, 0x_91, 0x_D8, 0x_E7, 0x_D8, 0x_91, 0x_FC, 0x_E7,
		0x_D8, 0x_91, 0x_FC, 0x_91, 0x_E7, 0x_BB, 0x_91, 0x_E7, 0x_E7, 0x_E7, 0x_D8, 0x_E7, 0x_FC, 0x_BB, 0x_D8,
		0x_91, 0x_E7,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_D8, 0x_E7, 0x_91, 0x_FC,
	];

	helper(S, BASE, 2_719);
}
// endregion
// region: s_has_zeros_and_39_255_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_39_255_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_14, 0x_14, 0x_14, 0x_4D, 0x_4D, 0x_4D, 0x_DD, 0x_14, 0x_5A, 0x_14, 0x_93, 0x_5A, 0x_14, 0x_DD, 0x_DD,
		0x_DD, 0x_5A, 0x_4D, 0x_DD, 0x_92, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_5A, 0x_4D, 0x_92, 0x_DD,
	];

	helper(S, BASE, 39_255);
}
// endregion
// region: s_has_zeros_and_330_778_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_330_778_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_7C, 0x_5F, 0x_8C, 0x_7C, 0x_5F, 0x_5F, 0x_8C,
		0x_A1, 0x_BD, 0x_8C, 0x_2E, 0x_7C, 0x_7C, 0x_A1, 0x_2E, 0x_8C, 0x_2E, 0x_A1, 0x_7C, 0x_A1, 0x_8C, 0x_A1,
		0x_8C, 0x_7C, 0x_5F, 0x_A1, 0x_5F, 0x_8C, 0x_7C, 0x_7C, 0x_A1, 0x_2E, 0x_2E, 0x_7C, 0x_A1, 0x_7C, 0x_A1,
		0x_2E, 0x_A1, 0x_5F, 0x_A1, 0x_2E, 0x_5F, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_5F, 0x_2E, 0x_A1, 0x_7C,
	];

	helper(S, BASE, 330_778);
}
// endregion
// region: s_has_zeros_and_2_540_306_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_2_540_306_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66,
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_C9, 0x_C9, 0x_85, 0x_85,
		0x_85, 0x_01, 0x_85, 0x_85, 0x_C9, 0x_C9, 0x_69, 0x_85, 0x_C9, 0x_C9, 0x_66, 0x_85, 0x_85, 0x_66, 0x_5E,
		0x_5E, 0x_01, 0x_01, 0x_5E, 0x_5E, 0x_01, 0x_85, 0x_5E, 0x_C9, 0x_66, 0x_5E, 0x_C9, 0x_66, 0x_C9, 0x_85,
		0x_85, 0x_85, 0x_5E, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_C9, 0x_85, 0x_5E, 0x_01,
	];

	helper(S, BASE, 2_540_306);
}
// endregion
// region: s_has_zeros_and_33_427_764_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_33_427_764_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_1C, 0x_FE, 0x_6C, 0x_FE, 0x_F4, 0x_68,
		0x_F4, 0x_FE, 0x_6C, 0x_FE, 0x_F4, 0x_49, 0x_FE, 0x_6C, 0x_FE, 0x_FE, 0x_F4, 0x_1C, 0x_1C, 0x_FE, 0x_6C,
		0x_68, 0x_68, 0x_F4, 0x_6C, 0x_68, 0x_6C, 0x_F4, 0x_6C, 0x_1C, 0x_FE, 0x_FE, 0x_6C, 0x_6C, 0x_F4, 0x_1C,
		0x_6C, 0x_F4, 0x_F4, 0x_1C, 0x_FE, 0x_F4,
	];
	const BASE: &[u8] = &[
		0x_6C, 0x_68, 0x_FE, 0x_1C, 0x_F4,
	];

	helper(S, BASE, 33_427_764);
}
// endregion
// region: s_has_zeros_and_374_685_943_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_374_685_943_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D,
		0x_4D, 0x_4D, 0x_1C, 0x_A6, 0x_19, 0x_1C, 0x_6E, 0x_4D, 0x_6E, 0x_6E, 0x_A6, 0x_A6, 0x_A6, 0x_19, 0x_19,
		0x_3D, 0x_6E, 0x_6E, 0x_A6, 0x_A6, 0x_4D, 0x_19, 0x_6E, 0x_4D, 0x_4D, 0x_1C, 0x_1C, 0x_A6, 0x_6E, 0x_1C,
		0x_1C, 0x_4D, 0x_A6, 0x_19, 0x_19, 0x_4D, 0x_19, 0x_6E, 0x_4D, 0x_6E, 0x_1C, 0x_6E, 0x_19, 0x_19, 0x_4D,
		0x_6E, 0x_19, 0x_6E, 0x_19, 0x_1C, 0x_4D, 0x_A6, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_4D, 0x_1C, 0x_A6, 0x_19, 0x_6E,
	];

	helper(S, BASE, 374_685_943);
}
// endregion
// region: s_has_zeros_and_1_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_1_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_AC, 0x_B7,
		0x_FE, 0x_E9, 0x_D6, 0x_6F, 0x_E9, 0x_8F, 0x_D6, 0x_86, 0x_AC, 0x_FE, 0x_FE, 0x_FE, 0x_D6, 0x_D6, 0x_AC,
		0x_86,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_AC, 0x_D6, 0x_E9, 0x_8F, 0x_FE, 0x_6F,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_zeros_and_82_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_82_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_E9, 0x_54, 0x_69, 0x_EA, 0x_54, 0x_2E, 0x_71, 0x_69, 0x_2E, 0x_71, 0x_71, 0x_2E,
		0x_E9, 0x_2E, 0x_9C, 0x_71, 0x_54, 0x_9C, 0x_69, 0x_54, 0x_69, 0x_E9, 0x_69, 0x_71, 0x_9C, 0x_69, 0x_54,
		0x_69, 0x_54, 0x_71, 0x_69, 0x_71, 0x_69, 0x_69, 0x_1A, 0x_71, 0x_E9, 0x_54, 0x_9C, 0x_1A, 0x_9C, 0x_E9,
		0x_E9, 0x_1A, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_E9, 0x_2E, 0x_71, 0x_54, 0x_69, 0x_9C,
	];

	helper(S, BASE, 82);
}
// endregion
// region: s_has_zeros_and_909_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_909_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_E3,
		0x_7C, 0x_FC, 0x_36, 0x_63, 0x_36, 0x_7C, 0x_36, 0x_36, 0x_FC, 0x_7C, 0x_E3, 0x_E3, 0x_CF, 0x_03, 0x_CF,
		0x_CF, 0x_7C, 0x_7C, 0x_03, 0x_FC, 0x_7C, 0x_BC, 0x_BC, 0x_BC, 0x_7C, 0x_03, 0x_03, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_CF, 0x_E3, 0x_FC, 0x_7C, 0x_03, 0x_36,
	];

	helper(S, BASE, 909);
}
// endregion
// region: s_has_zeros_and_5_843_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_5_843_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_6F, 0x_4A, 0x_9F, 0x_79, 0x_95, 0x_4F, 0x_9F, 0x_4A, 0x_79, 0x_6F, 0x_4A, 0x_6F,
		0x_D5, 0x_8B, 0x_4A, 0x_79, 0x_9F, 0x_9F, 0x_6F, 0x_6F, 0x_8B, 0x_6F, 0x_95, 0x_9F, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_79, 0x_6F, 0x_4A, 0x_D5, 0x_95, 0x_8B,
	];

	helper(S, BASE, 5_843);
}
// endregion
// region: s_has_zeros_and_53_146_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_53_146_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_45, 0x_39, 0x_D2, 0x_60, 0x_07, 0x_8C, 0x_6E,
		0x_3B, 0x_07, 0x_8C, 0x_60, 0x_07, 0x_07, 0x_60, 0x_07, 0x_8C, 0x_3B, 0x_D2, 0x_60, 0x_45, 0x_45, 0x_45,
		0x_07, 0x_D2, 0x_39, 0x_8C, 0x_D2, 0x_D2, 0x_3B, 0x_8C, 0x_D2, 0x_45, 0x_60, 0x_8C, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_39, 0x_8C, 0x_45, 0x_07, 0x_3B, 0x_60,
	];

	helper(S, BASE, 53_146);
}
// endregion
// region: s_has_zeros_and_304_425_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_304_425_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53,
		0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_8A, 0x_D6, 0x_53, 0x_DE, 0x_5C, 0x_DE, 0x_8A,
		0x_C9, 0x_53, 0x_DE, 0x_97, 0x_8A, 0x_5C, 0x_A2, 0x_97, 0x_53, 0x_A2, 0x_D6, 0x_A2,
	];
	const BASE: &[u8] = &[
		0x_53, 0x_A2, 0x_8A, 0x_5C, 0x_D6, 0x_DE, 0x_97,
	];

	helper(S, BASE, 304_425);
}
// endregion
// region: s_has_zeros_and_8_370_057_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_8_370_057_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_42, 0x_42, 0x_42, 0x_5B, 0x_CF, 0x_5B, 0x_5B, 0x_42, 0x_42, 0x_CF, 0x_CF, 0x_CF, 0x_62, 0x_5B, 0x_CF,
		0x_42, 0x_1D, 0x_64, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_5B, 0x_D9, 0x_CF, 0x_92, 0x_1D, 0x_64,
	];

	helper(S, BASE, 8_370_057);
}
// endregion
// region: s_has_zeros_and_99_030_087_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_99_030_087_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB,
		0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB,
		0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_31, 0x_7C, 0x_BD, 0x_BD,
		0x_EA, 0x_BD, 0x_31, 0x_7C, 0x_BD, 0x_31, 0x_72, 0x_31, 0x_DB, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_BD, 0x_31, 0x_7C, 0x_AD, 0x_EA, 0x_C9,
	];

	helper(S, BASE, 99_030_087);
}
// endregion
// region: s_has_zeros_and_145_077_683_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_145_077_683_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD,
		0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_BE, 0x_F4, 0x_6D, 0x_6D, 0x_DD, 0x_3C, 0x_3C, 0x_DD, 0x_DD,
		0x_55, 0x_48, 0x_78, 0x_F4, 0x_BE, 0x_DD, 0x_6D, 0x_F4, 0x_BE, 0x_F4, 0x_3C, 0x_DD, 0x_6D, 0x_3C, 0x_78,
		0x_55, 0x_78, 0x_F4, 0x_78, 0x_DD, 0x_F4, 0x_F4, 0x_6D, 0x_DD, 0x_BE, 0x_BE, 0x_BE, 0x_3C, 0x_55, 0x_DD,
		0x_78, 0x_55, 0x_DD, 0x_BE, 0x_F4, 0x_6D, 0x_6D, 0x_F4, 0x_F4, 0x_3C, 0x_55, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_6D, 0x_55, 0x_BE, 0x_F4, 0x_78, 0x_3C,
	];

	helper(S, BASE, 145_077_683);
}
// endregion
// region: s_has_zeros_and_6_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_6_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_27, 0x_27, 0x_0E, 0x_72, 0x_47, 0x_F0, 0x_0E, 0x_9F, 0x_47, 0x_9F, 0x_49, 0x_47, 0x_49, 0x_27,
		0x_9F, 0x_FB, 0x_49, 0x_C6, 0x_0E, 0x_27, 0x_C3, 0x_F0, 0x_C6, 0x_F0, 0x_49, 0x_49, 0x_27, 0x_F0, 0x_49,
		0x_FB, 0x_9F, 0x_47, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_C6, 0x_93, 0x_9F, 0x_FB, 0x_C3, 0x_0E, 0x_35, 0x_F0, 0x_47, 0x_49,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_zeros_and_44_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_44_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D,
		0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_39, 0x_4D, 0x_E7, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_4D, 0x_37, 0x_63, 0x_A4, 0x_39, 0x_95, 0x_9C, 0x_C1, 0x_29, 0x_AE, 0x_2F,
	];

	helper(S, BASE, 44);
}
// endregion
// region: s_has_zeros_and_463_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_463_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04,
		0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04,
		0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_ED, 0x_26, 0x_77, 0x_76, 0x_36,
		0x_ED, 0x_AC, 0x_B7, 0x_26, 0x_C4, 0x_AB, 0x_AB, 0x_AB, 0x_26, 0x_26, 0x_26, 0x_36, 0x_77, 0x_B7, 0x_87,
		0x_C4, 0x_B7, 0x_87, 0x_C4, 0x_26, 0x_04, 0x_04, 0x_77, 0x_AB, 0x_26, 0x_77, 0x_B7, 0x_AB, 0x_77, 0x_B7,
		0x_B7, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_77, 0x_03, 0x_ED, 0x_C4, 0x_87, 0x_36, 0x_AB, 0x_B7, 0x_26, 0x_AC,
	];

	helper(S, BASE, 463);
}
// endregion
// region: s_has_zeros_and_6_996_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_6_996_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34,
		0x_34, 0x_34, 0x_34, 0x_34, 0x_99, 0x_18, 0x_47, 0x_34, 0x_3A, 0x_81, 0x_4B, 0x_47, 0x_26, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_26, 0x_18, 0x_81, 0x_4B, 0x_99, 0x_24, 0x_2F, 0x_32, 0x_47, 0x_D1,
	];

	helper(S, BASE, 6_996);
}
// endregion
// region: s_has_zeros_and_46_602_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_46_602_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_0F, 0x_70, 0x_BC, 0x_C1, 0x_03, 0x_0A, 0x_03, 0x_0F, 0x_BC, 0x_7A,
		0x_C6, 0x_F0, 0x_7A, 0x_F0, 0x_C1, 0x_CD, 0x_C6, 0x_C6, 0x_5A, 0x_35, 0x_03, 0x_CD, 0x_C6, 0x_C6, 0x_C6,
		0x_F0,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_C1, 0x_70, 0x_0F, 0x_5A, 0x_7A, 0x_03, 0x_F0, 0x_CD, 0x_C6, 0x_35,
	];

	helper(S, BASE, 46_602);
}
// endregion
// region: s_has_zeros_and_979_716_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_979_716_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_25, 0x_38, 0x_6D, 0x_38, 0x_BB, 0x_CA, 0x_A0, 0x_A4, 0x_4C, 0x_6D,
		0x_A4, 0x_BB, 0x_4C, 0x_2F, 0x_A4, 0x_CA, 0x_2F, 0x_6D, 0x_2F, 0x_25, 0x_BB, 0x_BF, 0x_25, 0x_BB, 0x_BB,
		0x_2F, 0x_58, 0x_38, 0x_BB, 0x_25, 0x_38, 0x_BF, 0x_25, 0x_4C, 0x_BF, 0x_58, 0x_25, 0x_A4, 0x_4C, 0x_CA,
		0x_38, 0x_4C, 0x_6D, 0x_2F, 0x_A4, 0x_BB, 0x_CA,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_CA, 0x_2F, 0x_A4, 0x_6C, 0x_BF, 0x_25, 0x_4C, 0x_58, 0x_BB, 0x_6D,
	];

	helper(S, BASE, 979_716);
}
// endregion
// region: s_has_zeros_and_3_568_859_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_3_568_859_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_C5, 0x_50, 0x_95, 0x_21, 0x_91,
		0x_E0, 0x_21, 0x_68, 0x_E3, 0x_95, 0x_E3, 0x_E4, 0x_E3, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_95, 0x_C5, 0x_91, 0x_E3, 0x_E4, 0x_66, 0x_E0, 0x_21, 0x_F0, 0x_D0,
	];

	helper(S, BASE, 3_568_859);
}
// endregion
// region: s_has_zeros_and_80_235_055_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_80_235_055_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5,
		0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5,
		0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_C7, 0x_37, 0x_93, 0x_1F, 0x_37, 0x_3D, 0x_BE, 0x_96, 0x_3E,
		0x_F5, 0x_93, 0x_FC, 0x_49, 0x_37, 0x_BE, 0x_FC, 0x_C7, 0x_C7, 0x_1F, 0x_C7, 0x_F5, 0x_BE, 0x_93, 0x_BA,
		0x_FC, 0x_FC, 0x_49, 0x_FC, 0x_1F, 0x_1F, 0x_BE, 0x_BA, 0x_BA, 0x_37, 0x_FC, 0x_96, 0x_C7, 0x_37, 0x_49,
		0x_F5, 0x_93, 0x_BA, 0x_93, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_37, 0x_1F, 0x_93, 0x_C7, 0x_BA, 0x_BE, 0x_FC, 0x_3D, 0x_49, 0x_96,
	];

	helper(S, BASE, 80_235_055);
}
// endregion
// region: s_has_zeros_and_932_508_172_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_932_508_172_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_31, 0x_E1, 0x_82,
		0x_31, 0x_15, 0x_05, 0x_10, 0x_15, 0x_10, 0x_A5, 0x_15, 0x_23, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_15, 0x_10, 0x_E1, 0x_31, 0x_90, 0x_05, 0x_B2, 0x_23, 0x_82, 0x_A4,
	];

	helper(S, BASE, 932_508_172);
}
// endregion
// region: s_has_zeros_and_6_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_6_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_90, 0x_43, 0x_90, 0x_45, 0x_45, 0x_90, 0x_90, 0x_6A, 0x_10, 0x_10, 0x_48, 0x_E2, 0x_25, 0x_90, 0x_8F,
		0x_48, 0x_64, 0x_F8, 0x_8C, 0x_8F, 0x_8F, 0x_64, 0x_F8, 0x_64, 0x_8C, 0x_5F, 0x_48, 0x_04, 0x_90, 0x_64,
		0x_8F, 0x_25, 0x_6A, 0x_8C, 0x_25, 0x_10, 0x_6A, 0x_8F, 0x_8C, 0x_E2, 0x_6A, 0x_90, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_E2, 0x_48, 0x_25, 0x_04, 0x_F8, 0x_90, 0x_8C, 0x_5F, 0x_6A, 0x_8F, 0x_10, 0x_64,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_zeros_and_40_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_40_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_E1, 0x_E1, 0x_E1, 0x_A8, 0x_53, 0x_DF, 0x_E0, 0x_80, 0x_C5, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_53, 0x_1E, 0x_A8, 0x_27, 0x_C5, 0x_99, 0x_80, 0x_E0, 0x_D4, 0x_22, 0x_91, 0x_45,
	];

	helper(S, BASE, 40);
}
// endregion
// region: s_has_zeros_and_255_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_255_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C,
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_94, 0x_8E, 0x_B1, 0x_BD, 0x_80,
		0x_B1, 0x_88, 0x_91, 0x_83, 0x_91, 0x_88, 0x_65, 0x_94, 0x_DF, 0x_88, 0x_31, 0x_E5, 0x_80, 0x_E5, 0x_65,
		0x_83, 0x_31, 0x_65, 0x_83, 0x_B1, 0x_07, 0x_31, 0x_07, 0x_8E, 0x_8E, 0x_83, 0x_31, 0x_88, 0x_88, 0x_31,
		0x_65, 0x_E5,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_94, 0x_91, 0x_DF, 0x_07, 0x_83, 0x_8E, 0x_65, 0x_B1, 0x_31, 0x_80, 0x_88, 0x_E5,
	];

	helper(S, BASE, 255);
}
// endregion
// region: s_has_zeros_and_4_994_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_4_994_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_E6, 0x_F7, 0x_DB,
		0x_E6, 0x_B7, 0x_9D, 0x_A6, 0x_E6, 0x_38, 0x_18, 0x_A6, 0x_38, 0x_CA, 0x_DB, 0x_38, 0x_18, 0x_C1, 0x_E6,
		0x_DB, 0x_7C, 0x_CA, 0x_E6, 0x_B3, 0x_E6, 0x_CE, 0x_B3, 0x_B3, 0x_DB, 0x_A6, 0x_C1, 0x_CE, 0x_38, 0x_7C,
		0x_18, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_9D, 0x_E6, 0x_F7, 0x_C1, 0x_B3, 0x_18, 0x_DB, 0x_7C, 0x_CA, 0x_CE, 0x_C2, 0x_A6,
	];

	helper(S, BASE, 4_994);
}
// endregion
// region: s_has_zeros_and_45_340_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_45_340_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_3C, 0x_92, 0x_4C, 0x_34, 0x_A2, 0x_ED,
		0x_3C, 0x_7A, 0x_A6, 0x_3C, 0x_7A, 0x_A2, 0x_A6, 0x_34, 0x_92, 0x_34, 0x_34, 0x_60, 0x_A2, 0x_4C, 0x_4C,
		0x_34, 0x_8F, 0x_5A, 0x_34, 0x_92, 0x_6B, 0x_6B, 0x_60, 0x_88, 0x_A2, 0x_4C, 0x_68, 0x_88, 0x_68, 0x_3C,
		0x_34, 0x_7A, 0x_A2, 0x_7A, 0x_A2, 0x_A2, 0x_A2,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_3C, 0x_88, 0x_34, 0x_6B, 0x_A6, 0x_5A, 0x_92, 0x_4C, 0x_A2, 0x_8F, 0x_7A, 0x_68,
	];

	helper(S, BASE, 45_340);
}
// endregion
// region: s_has_zeros_and_900_971_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_900_971_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1,
		0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_4C, 0x_BD, 0x_12, 0x_53,
		0x_4C, 0x_F0, 0x_5B, 0x_F0, 0x_AF, 0x_F0, 0x_29, 0x_BF, 0x_F0, 0x_D1, 0x_F0, 0x_BD, 0x_D1, 0x_9F, 0x_9F,
		0x_5C, 0x_53, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_D1, 0x_53, 0x_4C, 0x_EB, 0x_5C, 0x_BD, 0x_F0, 0x_12, 0x_29, 0x_9F, 0x_AF, 0x_BF, 0x_37,
	];

	helper(S, BASE, 900_971);
}
// endregion
// region: s_has_zeros_and_9_854_723_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_9_854_723_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A,
		0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_BA, 0x_8A,
		0x_40, 0x_8A, 0x_9F, 0x_4F, 0x_FD, 0x_A9, 0x_F8, 0x_F8, 0x_87, 0x_9F, 0x_87, 0x_49, 0x_92, 0x_4F, 0x_49,
		0x_6E, 0x_F8, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_F8, 0x_BA, 0x_6E, 0x_1D, 0x_92, 0x_9F, 0x_40, 0x_FD, 0x_FA, 0x_49, 0x_87, 0x_4F,
	];

	helper(S, BASE, 9_854_723);
}
// endregion
// region: s_has_zeros_and_61_113_624_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_61_113_624_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8,
		0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_BF, 0x_FF, 0x_7B, 0x_F9,
		0x_A2, 0x_85, 0x_B8, 0x_10, 0x_F3, 0x_F9, 0x_43, 0x_69, 0x_69, 0x_69, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_85, 0x_81, 0x_FA, 0x_F3, 0x_9A, 0x_69, 0x_7B, 0x_FF, 0x_F9, 0x_43, 0x_A2, 0x_BF,
	];

	helper(S, BASE, 61_113_624);
}
// endregion
// region: s_has_zeros_and_488_564_292_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_488_564_292_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C,
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_E3, 0x_4C, 0x_6D, 0x_4C, 0x_FA, 0x_A5, 0x_FA, 0x_60, 0x_93, 0x_6D,
		0x_85, 0x_4C, 0x_C1, 0x_A8, 0x_C1, 0x_7C, 0x_A5, 0x_6C, 0x_A5, 0x_C3, 0x_FA, 0x_C3, 0x_E3, 0x_6C, 0x_FA,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_6C, 0x_6D, 0x_C1, 0x_A8, 0x_B6, 0x_C3, 0x_E3, 0x_60, 0x_85, 0x_4C, 0x_A5, 0x_FA,
	];

	helper(S, BASE, 488_564_292);
}
// endregion
// region: s_has_zeros_and_3_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_3_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_C2, 0x_C5, 0x_B4, 0x_8D, 0x_BF,
		0x_BF, 0x_BE, 0x_6D, 0x_18, 0x_9D, 0x_A4, 0x_E9, 0x_A2, 0x_18, 0x_14, 0x_13, 0x_9D, 0x_14, 0x_A2, 0x_CF,
		0x_18, 0x_BE, 0x_38, 0x_6D, 0x_A2, 0x_8D, 0x_3A, 0x_8D, 0x_A4, 0x_C2, 0x_6D, 0x_E9, 0x_6D, 0x_3A, 0x_3A,
		0x_B4, 0x_A4, 0x_BC, 0x_A2, 0x_9D, 0x_BE, 0x_81, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_13, 0x_B4, 0x_C2, 0x_18, 0x_BC, 0x_36, 0x_14, 0x_BE, 0x_BF, 0x_A4, 0x_38, 0x_8D, 0x_6D, 0x_E9,
		0x_81, 0x_A2, 0x_9D, 0x_3A,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_zeros_and_36_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_36_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_38, 0x_19, 0x_37, 0x_C9, 0x_2C, 0x_2C, 0x_93, 0x_2C, 0x_B5, 0x_C5,
		0x_33, 0x_C9, 0x_9D, 0x_29, 0x_B5, 0x_29, 0x_BC, 0x_33, 0x_9D, 0x_B5, 0x_2C, 0x_D8, 0x_D2, 0x_9D, 0x_C5,
		0x_9D, 0x_D2, 0x_2C, 0x_C9, 0x_40, 0x_2C, 0x_BB, 0x_D2, 0x_38, 0x_BC, 0x_D2, 0x_93, 0x_19, 0x_33, 0x_0F,
		0x_40,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_38, 0x_0F, 0x_D8, 0x_49, 0x_C9, 0x_33, 0x_69, 0x_C5, 0x_2C, 0x_9D, 0x_29, 0x_B5, 0x_BC, 0x_BB,
		0x_D2, 0x_93, 0x_19, 0x_1C,
	];

	helper(S, BASE, 36);
}
// endregion
// region: s_has_zeros_and_383_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_383_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22,
		0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22,
		0x_73, 0x_73, 0x_45, 0x_95, 0x_1B, 0x_49, 0x_84, 0x_3F, 0x_1E, 0x_37, 0x_49, 0x_3F, 0x_17, 0x_D7, 0x_92,
		0x_3F, 0x_16,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_73, 0x_1E, 0x_45, 0x_36, 0x_16, 0x_B7, 0x_1B, 0x_3F, 0x_FD, 0x_FE, 0x_92, 0x_D7, 0x_D8, 0x_37,
		0x_84, 0x_49, 0x_56, 0x_17,
	];

	helper(S, BASE, 383);
}
// endregion
// region: s_has_zeros_and_6_973_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_6_973_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_F2, 0x_9C, 0x_95, 0x_9C,
		0x_E9, 0x_95, 0x_80, 0x_5F, 0x_3C, 0x_2C, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_F2, 0x_AC, 0x_C4, 0x_2C, 0x_3C, 0x_95, 0x_C6, 0x_39, 0x_F5, 0x_80, 0x_6A, 0x_29, 0x_F6, 0x_8C,
		0x_14, 0x_5F, 0x_82, 0x_30,
	];

	helper(S, BASE, 6_973);
}
// endregion
// region: s_has_zeros_and_57_597_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_57_597_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_8B, 0x_1D, 0x_5A, 0x_8B,
		0x_C3, 0x_36, 0x_FD, 0x_8B, 0x_36, 0x_68, 0x_36, 0x_6C, 0x_A8, 0x_80, 0x_8C, 0x_80, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_F6, 0x_9A, 0x_7A, 0x_36, 0x_FD, 0x_69, 0x_1D, 0x_8B, 0x_6C, 0x_5A, 0x_8C, 0x_68, 0x_A8, 0x_80,
		0x_E0, 0x_7E, 0x_BF, 0x_F1,
	];

	helper(S, BASE, 57_597);
}
// endregion
// region: s_has_zeros_and_578_633_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_578_633_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6,
		0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_26, 0x_CE, 0x_FA,
		0x_EA, 0x_CB, 0x_DC, 0x_6C, 0x_FA, 0x_C6, 0x_4B, 0x_08, 0x_FA, 0x_CE, 0x_EA, 0x_99, 0x_CE, 0x_E1, 0x_FA,
		0x_C6, 0x_6D, 0x_80, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_C6, 0x_99, 0x_80, 0x_23, 0x_26, 0x_BB, 0x_FA, 0x_CB, 0x_CE, 0x_78, 0x_6D, 0x_E1, 0x_4E, 0x_30, 0x_E4,
		0x_4B, 0x_EA, 0x_08, 0x_6C,
	];

	helper(S, BASE, 578_633);
}
// endregion
// region: s_has_zeros_and_3_339_611_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_3_339_611_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_DD, 0x_31, 0x_DF, 0x_F7, 0x_46, 0x_46,
		0x_B9, 0x_31, 0x_31, 0x_31, 0x_4D, 0x_DF, 0x_71, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_DD, 0x_CE, 0x_4A, 0x_9D, 0x_35, 0x_31, 0x_4D, 0x_9F, 0x_56, 0x_71, 0x_DF, 0x_B0, 0x_AA, 0x_5F,
		0x_40, 0x_52, 0x_F7, 0x_87,
	];

	helper(S, BASE, 3_339_611);
}
// endregion
// region: s_has_zeros_and_41_341_912_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_41_341_912_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92,
		0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92,
		0x_92, 0x_92, 0x_92, 0x_92, 0x_59, 0x_DB, 0x_02, 0x_D4, 0x_14, 0x_2A, 0x_61, 0x_D1, 0x_59, 0x_E5, 0x_14,
		0x_89, 0x_59, 0x_8F, 0x_E6, 0x_BC, 0x_BC, 0x_E6, 0x_BC, 0x_89, 0x_C4, 0x_2A, 0x_51, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_D8, 0x_2A, 0x_6F, 0x_02, 0x_AF, 0x_E6, 0x_D4, 0x_D1, 0x_BC, 0x_14, 0x_38, 0x_8F, 0x_DB, 0x_89,
		0x_51, 0x_59, 0x_E5, 0x_C4,
	];

	helper(S, BASE, 41_341_912);
}
// endregion
// region: s_has_zeros_and_673_847_254_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_673_847_254_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_3B, 0x_1C, 0x_83, 0x_05, 0x_3B, 0x_5A, 0x_18, 0x_68, 0x_16, 0x_4B,
		0x_FC, 0x_5A, 0x_23, 0x_9A, 0x_1C, 0x_16, 0x_FC, 0x_CC, 0x_18, 0x_29, 0x_3B, 0x_05, 0x_18, 0x_23, 0x_DD,
		0x_CC, 0x_FC, 0x_83, 0x_29, 0x_7D, 0x_06, 0x_29, 0x_FC, 0x_CC, 0x_CC, 0x_9A, 0x_7D, 0x_4B, 0x_05, 0x_4B,
		0x_7D, 0x_0F, 0x_9A, 0x_18, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_7D, 0x_42, 0x_83, 0x_06, 0x_23, 0x_4B, 0x_1C, 0x_9A, 0x_0F, 0x_DD, 0x_CC, 0x_16, 0x_05, 0x_FC, 0x_3B,
		0x_29, 0x_5A, 0x_89, 0x_18,
	];

	helper(S, BASE, 673_847_254);
}
// endregion
// region: s_has_zeros_and_1_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_1_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_5E, 0x_94, 0x_91, 0x_39, 0x_8E,
		0x_AB, 0x_AC, 0x_65, 0x_65, 0x_9B, 0x_E7, 0x_82, 0x_50, 0x_E7, 0x_5E, 0x_01, 0x_91, 0x_0E, 0x_65, 0x_60,
		0x_33, 0x_37, 0x_18, 0x_AD, 0x_E7, 0x_1F, 0x_5E, 0x_65, 0x_D7, 0x_65, 0x_E7, 0x_9C, 0x_60, 0x_C2, 0x_DC,
		0x_BA, 0x_37, 0x_E5, 0x_DC, 0x_1F, 0x_50, 0x_82, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_5E, 0x_6C, 0x_FD, 0x_18, 0x_D7, 0x_9A, 0x_77, 0x_59, 0x_EC, 0x_50, 0x_AC, 0x_F6, 0x_0E, 0x_AD,
		0x_E7, 0x_33, 0x_82, 0x_60, 0x_9B, 0x_1F, 0x_A9, 0x_8E, 0x_01, 0x_9C, 0x_C2, 0x_41, 0x_91, 0x_A1, 0x_BA,
		0x_E1, 0x_F3, 0x_65, 0x_AB, 0x_E5, 0x_37, 0x_CD, 0x_39, 0x_DC, 0x_FE, 0x_49, 0x_74,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_zeros_and_56_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_56_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1,
		0x_EE, 0x_CF, 0x_47, 0x_7E, 0x_35, 0x_40, 0x_EE, 0x_35, 0x_42, 0x_17, 0x_35, 0x_FC, 0x_4A, 0x_CF, 0x_69,
		0x_F7, 0x_F2, 0x_06, 0x_8C, 0x_CF, 0x_5D, 0x_67, 0x_40, 0x_D7, 0x_E1, 0x_FC, 0x_68, 0x_A8, 0x_D7, 0x_A8,
		0x_F7, 0x_69, 0x_F2, 0x_F7, 0x_25, 0x_7E, 0x_72, 0x_04, 0x_39, 0x_14, 0x_91, 0x_40, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_D1, 0x_EE, 0x_35, 0x_02, 0x_17, 0x_4A, 0x_6A, 0x_F7, 0x_A8, 0x_06, 0x_D7, 0x_25, 0x_7E, 0x_2A, 0x_CF,
		0x_42, 0x_04, 0x_C8, 0x_F2, 0x_41, 0x_40, 0x_14, 0x_11, 0x_4C, 0x_91, 0x_C5, 0x_1F, 0x_FC, 0x_68, 0x_39,
		0x_C3, 0x_8C, 0x_89, 0x_67, 0x_6B, 0x_C7, 0x_E1, 0x_E5, 0x_05, 0x_69, 0x_5D, 0x_72,
	];

	helper(S, BASE, 56);
}
// endregion
// region: s_has_zeros_and_929_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_929_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_6D, 0x_E6, 0x_6C,
		0x_D3, 0x_DA, 0x_ED, 0x_E6, 0x_FF, 0x_17, 0x_AB, 0x_D3, 0x_A1, 0x_6D, 0x_17, 0x_0E, 0x_95, 0x_87, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_9D, 0x_A6, 0x_ED, 0x_87, 0x_E6, 0x_DA, 0x_26, 0x_71, 0x_33, 0x_0E, 0x_98, 0x_FF, 0x_86, 0x_17,
		0x_D3, 0x_EB, 0x_47, 0x_AB, 0x_A9, 0x_A8, 0x_9A, 0x_6D, 0x_A1, 0x_AD, 0x_49, 0x_97, 0x_45, 0x_57, 0x_FA,
		0x_07, 0x_40, 0x_3B, 0x_73, 0x_D7, 0x_53, 0x_74, 0x_43, 0x_1C, 0x_B5, 0x_95, 0x_D4,
	];

	helper(S, BASE, 929);
}
// endregion
// region: s_has_zeros_and_8_204_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_8_204_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_AF, 0x_EC, 0x_F4, 0x_48, 0x_A6,
		0x_51, 0x_CE, 0x_80, 0x_41, 0x_AC, 0x_1A, 0x_28, 0x_AF, 0x_A9, 0x_D4, 0x_4E, 0x_AF, 0x_7C, 0x_05, 0x_1A,
		0x_B7, 0x_BB, 0x_11, 0x_11, 0x_A9, 0x_0F, 0x_A9, 0x_80, 0x_05, 0x_AB, 0x_B3, 0x_D4, 0x_A9, 0x_A6, 0x_66,
		0x_A9, 0x_22, 0x_9C, 0x_24, 0x_41, 0x_41, 0x_CE, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_A5, 0x_E5, 0x_22, 0x_AF, 0x_38, 0x_9A, 0x_80, 0x_B7, 0x_90, 0x_F9, 0x_AB, 0x_A9, 0x_E4, 0x_F4,
		0x_D0, 0x_28, 0x_0F, 0x_34, 0x_45, 0x_46, 0x_4E, 0x_24, 0x_AE, 0x_41, 0x_9C, 0x_D9, 0x_EC, 0x_7C, 0x_D4,
		0x_05, 0x_66, 0x_A6, 0x_C1, 0x_51, 0x_11, 0x_CE, 0x_B3, 0x_AC, 0x_9D, 0x_68, 0x_BB,
	];

	helper(S, BASE, 8_204);
}
// endregion
// region: s_has_zeros_and_52_074_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_52_074_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_05, 0x_7A, 0x_43, 0x_7D, 0x_E8, 0x_3E, 0x_31, 0x_A1, 0x_BE, 0x_2F, 0x_A0, 0x_4E, 0x_1A, 0x_81,
		0x_7A, 0x_87, 0x_19, 0x_84, 0x_CD, 0x_87, 0x_16, 0x_9F, 0x_A0, 0x_24, 0x_84, 0x_03, 0x_35, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_A6, 0x_61, 0x_66, 0x_A0, 0x_3B, 0x_2F, 0x_16, 0x_13, 0x_3E, 0x_9F, 0x_87, 0x_F0, 0x_93, 0x_31,
		0x_E8, 0x_5A, 0x_D0, 0x_1A, 0x_90, 0x_24, 0x_7A, 0x_55, 0x_1E, 0x_A9, 0x_81, 0x_9C, 0x_C2, 0x_CD, 0x_05,
		0x_19, 0x_4E, 0x_9B, 0x_84, 0x_35, 0x_A1, 0x_43, 0x_64, 0x_17, 0x_4C, 0x_BE, 0x_1D,
	];

	helper(S, BASE, 52_074);
}
// endregion
// region: s_has_zeros_and_502_819_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_502_819_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_B7, 0x_B7, 0x_F3, 0x_50, 0x_30, 0x_B5, 0x_87, 0x_16, 0x_ED, 0x_F3, 0x_F6, 0x_F4, 0x_16, 0x_39, 0x_7D,
		0x_16, 0x_0E, 0x_2C, 0x_B1, 0x_6F, 0x_F3, 0x_8C, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_30, 0x_57, 0x_6F, 0x_AA, 0x_26, 0x_F3, 0x_69, 0x_21, 0x_F6, 0x_65, 0x_CF, 0x_55, 0x_7D, 0x_B1,
		0x_D4, 0x_53, 0x_3A, 0x_E3, 0x_ED, 0x_DA, 0x_6E, 0x_2C, 0x_88, 0x_8C, 0x_0E, 0x_3B, 0x_C3, 0x_3D, 0x_14,
		0x_52, 0x_F4, 0x_4C, 0x_50, 0x_43, 0x_FB, 0x_39, 0x_B5, 0x_C2, 0x_16, 0x_A6, 0x_42,
	];

	helper(S, BASE, 502_819);
}
// endregion
// region: s_has_zeros_and_2_580_318_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_2_580_318_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66,
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_90, 0x_90, 0x_77, 0x_54,
		0x_91, 0x_84,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_E9, 0x_DE, 0x_6A, 0x_3F, 0x_4A, 0x_54, 0x_31, 0x_75, 0x_EF, 0x_AD, 0x_15, 0x_ED, 0x_53, 0x_87,
		0x_84, 0x_F5, 0x_40, 0x_39, 0x_1B, 0x_41, 0x_46, 0x_0F, 0x_2C, 0x_CB, 0x_63, 0x_5B, 0x_33, 0x_FE, 0x_A5,
		0x_68, 0x_01, 0x_77, 0x_7B, 0x_90, 0x_E7, 0x_37, 0x_4C, 0x_7A, 0x_F3, 0x_21, 0x_10,
	];

	helper(S, BASE, 2_580_318);
}
// endregion
// region: s_has_zeros_and_38_710_146_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_38_710_146_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67,
		0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67,
		0x_BE, 0x_23, 0x_E3, 0x_1A, 0x_C9, 0x_8D, 0x_36, 0x_11, 0x_18, 0x_E3, 0x_55, 0x_39, 0x_AE, 0x_C7, 0x_E1,
		0x_39, 0x_36, 0x_EE, 0x_D0, 0x_C7, 0x_1B, 0x_1A, 0x_E3, 0x_36, 0x_23, 0x_55, 0x_C9, 0x_B8, 0x_65, 0x_23,
		0x_6B, 0x_FE, 0x_39, 0x_7A, 0x_E7, 0x_AE, 0x_13,
	];
	const BASE: &[u8] = &[
		0x_67, 0x_19, 0x_39, 0x_D0, 0x_B8, 0x_2F, 0x_C9, 0x_1B, 0x_3B, 0x_5C, 0x_04, 0x_83, 0x_BE, 0x_43, 0x_65,
		0x_7A, 0x_13, 0x_ED, 0x_23, 0x_C7, 0x_E3, 0x_E7, 0x_1A, 0x_88, 0x_DA, 0x_5A, 0x_E1, 0x_29, 0x_55, 0x_42,
		0x_AE, 0x_C2, 0x_A5, 0x_FE, 0x_62, 0x_18, 0x_EE, 0x_02, 0x_36, 0x_11, 0x_E0, 0x_6B,
	];

	helper(S, BASE, 38_710_146);
}
// endregion
// region: s_has_zeros_and_602_044_308_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_602_044_308_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D,
		0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_16, 0x_07, 0x_BD, 0x_CB,
		0x_8C, 0x_EE, 0x_32, 0x_46, 0x_8C, 0x_89, 0x_81, 0x_78, 0x_D5, 0x_60, 0x_E2, 0x_E2, 0x_81, 0x_17, 0x_57,
		0x_E4, 0x_8F, 0x_07, 0x_38, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_E4, 0x_CB, 0x_8B, 0x_16, 0x_1C, 0x_17, 0x_89, 0x_81, 0x_E2, 0x_73, 0x_F7, 0x_EE, 0x_E7, 0x_5A,
		0x_3C, 0x_30, 0x_22, 0x_60, 0x_38, 0x_BD, 0x_B4, 0x_8F, 0x_FF, 0x_69, 0x_07, 0x_78, 0x_F4, 0x_46, 0x_57,
		0x_D5, 0x_A4, 0x_7A, 0x_97, 0x_E0, 0x_E3, 0x_85, 0x_C1, 0x_D2, 0x_3E, 0x_8C, 0x_D6,
	];

	helper(S, BASE, 602_044_308);
}
// endregion
// region: s_has_zeros_and_6_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_6_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9,
		0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9,
		0x_B9, 0x_B9, 0x_B9, 0x_32, 0x_0B, 0x_1C, 0x_17, 0x_A5, 0x_EA, 0x_6E, 0x_F1, 0x_F6, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_B9, 0x_6F, 0x_FB, 0x_51, 0x_17, 0x_13, 0x_32, 0x_C2, 0x_F0, 0x_59, 0x_98, 0x_E8, 0x_F7, 0x_57, 0x_9E,
		0x_EA, 0x_45, 0x_81, 0x_F6, 0x_D3, 0x_C6, 0x_14, 0x_5F, 0x_F2, 0x_93, 0x_8C, 0x_67, 0x_1A, 0x_CF, 0x_FF,
		0x_5B, 0x_54, 0x_86, 0x_A4, 0x_94, 0x_D7, 0x_6D, 0x_A5, 0x_AF, 0x_36, 0x_5A, 0x_AA, 0x_DC, 0x_03, 0x_12,
		0x_F8, 0x_ED, 0x_84, 0x_4D, 0x_D2, 0x_48, 0x_69, 0x_D6, 0x_F1, 0x_1C, 0x_78, 0x_F4, 0x_3B, 0x_6E, 0x_DE,
		0x_3F, 0x_61, 0x_72, 0x_79, 0x_CC, 0x_B5, 0x_A8, 0x_BB, 0x_CA, 0x_0E, 0x_6B, 0x_56, 0x_F9,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_zeros_and_62_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_62_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_45, 0x_F2, 0x_CB, 0x_07, 0x_63, 0x_CD, 0x_11, 0x_AE, 0x_2F, 0x_11, 0x_FB, 0x_6E,
		0x_15, 0x_2C, 0x_F0, 0x_02, 0x_2F, 0x_9F, 0x_BE, 0x_AF, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_AF, 0x_64, 0x_6D, 0x_07, 0x_2A, 0x_63, 0x_15, 0x_74, 0x_D6, 0x_E1, 0x_C3, 0x_F5, 0x_53, 0x_2C,
		0x_31, 0x_1E, 0x_02, 0x_A6, 0x_37, 0x_BD, 0x_16, 0x_33, 0x_F4, 0x_89, 0x_5B, 0x_27, 0x_38, 0x_3D, 0x_AB,
		0x_C2, 0x_9E, 0x_DC, 0x_DD, 0x_35, 0x_E4, 0x_FE, 0x_FB, 0x_7C, 0x_F0, 0x_CD, 0x_E2, 0x_AE, 0x_CF, 0x_8B,
		0x_C0, 0x_24, 0x_6B, 0x_22, 0x_49, 0x_BE, 0x_43, 0x_84, 0x_68, 0x_6E, 0x_D7, 0x_5D, 0x_A0, 0x_A9, 0x_AD,
		0x_F3, 0x_3C, 0x_45, 0x_4A, 0x_2F, 0x_29, 0x_9F, 0x_72, 0x_11, 0x_CB, 0x_69, 0x_BB, 0x_67,
	];

	helper(S, BASE, 62);
}
// endregion
// region: s_has_zeros_and_154_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_154_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19,
		0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19,
		0x_19, 0x_19, 0x_19, 0x_17, 0x_14, 0x_4E, 0x_F7, 0x_02, 0x_10, 0x_BE, 0x_5E, 0x_5E, 0x_08, 0x_F4, 0x_6C,
		0x_7E, 0x_79, 0x_DE, 0x_FA, 0x_17, 0x_C7, 0x_BE, 0x_2A, 0x_7E, 0x_F4, 0x_F4, 0x_5E, 0x_16, 0x_07, 0x_79,
		0x_3F, 0x_9C, 0x_C7, 0x_15, 0x_F8, 0x_D9, 0x_17, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_BE, 0x_17, 0x_A2, 0x_06, 0x_C7, 0x_50, 0x_07, 0x_14, 0x_66, 0x_1B, 0x_BD, 0x_DE, 0x_DD, 0x_08,
		0x_93, 0x_04, 0x_5E, 0x_85, 0x_F7, 0x_12, 0x_EC, 0x_9C, 0x_51, 0x_16, 0x_6C, 0x_FD, 0x_D9, 0x_F4, 0x_6D,
		0x_D4, 0x_7E, 0x_EA, 0x_48, 0x_40, 0x_2A, 0x_8B, 0x_9D, 0x_67, 0x_EE, 0x_F8, 0x_71, 0x_10, 0x_02, 0x_5B,
		0x_D7, 0x_82, 0x_F3, 0x_63, 0x_6A, 0x_E7, 0x_DC, 0x_DB, 0x_38, 0x_15, 0x_73, 0x_26, 0x_76, 0x_D6, 0x_3F,
		0x_56, 0x_5F, 0x_59, 0x_96, 0x_EB, 0x_B2, 0x_D5, 0x_05, 0x_3E, 0x_79, 0x_C8, 0x_FA, 0x_2F,
	];

	helper(S, BASE, 154);
}
// endregion
// region: s_has_zeros_and_6_622_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_6_622_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_A9, 0x_07, 0x_4D, 0x_4B, 0x_BF, 0x_EE,
		0x_9B, 0x_BF, 0x_94, 0x_45, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_A9, 0x_BF, 0x_2F, 0x_1B, 0x_A4, 0x_64, 0x_45, 0x_AE, 0x_B3, 0x_34, 0x_7A, 0x_BC, 0x_CE, 0x_EF,
		0x_35, 0x_44, 0x_07, 0x_E0, 0x_9B, 0x_94, 0x_6B, 0x_62, 0x_C8, 0x_F2, 0x_06, 0x_B8, 0x_89, 0x_C7, 0x_AF,
		0x_7D, 0x_26, 0x_9F, 0x_8C, 0x_50, 0x_70, 0x_D5, 0x_EE, 0x_F8, 0x_B7, 0x_92, 0x_61, 0x_B5, 0x_1E, 0x_EB,
		0x_81, 0x_27, 0x_42, 0x_D2, 0x_7F, 0x_4E, 0x_03, 0x_4D, 0x_14, 0x_A5, 0x_E6, 0x_90, 0x_D9, 0x_5E, 0x_18,
		0x_CA, 0x_7C, 0x_9E, 0x_EA, 0x_98, 0x_6F, 0x_5A, 0x_85, 0x_23, 0x_95, 0x_A3, 0x_2A, 0x_73,
	];

	helper(S, BASE, 6_622);
}
// endregion
// region: s_has_zeros_and_68_057_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_68_057_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_38, 0x_D2, 0x_CF, 0x_C9,
		0x_07, 0x_47, 0x_52, 0x_EE, 0x_2C, 0x_3F, 0x_F0, 0x_F8, 0x_60, 0x_07, 0x_1A, 0x_07, 0x_EC, 0x_B0, 0x_CE,
		0x_F8, 0x_8A, 0x_F8, 0x_59, 0x_50, 0x_53, 0x_05, 0x_EA, 0x_90, 0x_A5, 0x_50, 0x_9F, 0x_38, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_0F, 0x_F5, 0x_9E, 0x_CA, 0x_EC, 0x_2C, 0x_59, 0x_75, 0x_7B, 0x_FB, 0x_03, 0x_38, 0x_BB, 0x_ED,
		0x_05, 0x_50, 0x_85, 0x_D6, 0x_B3, 0x_73, 0x_CF, 0x_4F, 0x_1B, 0x_77, 0x_3F, 0x_8A, 0x_B0, 0x_1A, 0x_17,
		0x_53, 0x_C5, 0x_47, 0x_19, 0x_62, 0x_35, 0x_B5, 0x_87, 0x_60, 0x_F8, 0x_90, 0x_07, 0x_A3, 0x_DA, 0x_F0,
		0x_D7, 0x_18, 0x_27, 0x_9F, 0x_92, 0x_7E, 0x_55, 0x_E9, 0x_52, 0x_EE, 0x_BC, 0x_D2, 0x_8E, 0x_11, 0x_E6,
		0x_B4, 0x_4A, 0x_8D, 0x_36, 0x_B1, 0x_5D, 0x_A5, 0x_3B, 0x_25, 0x_EA, 0x_CE, 0x_C1, 0x_F1,
	];

	helper(S, BASE, 68_057);
}
// endregion
// region: s_has_zeros_and_743_333_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_743_333_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_D6, 0x_82, 0x_BB, 0x_76, 0x_74, 0x_9C, 0x_77, 0x_84, 0x_BD, 0x_94,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_D6, 0x_7B, 0x_2A, 0x_FC, 0x_DE, 0x_A5, 0x_33, 0x_9C, 0x_64, 0x_85, 0x_9F, 0x_DB, 0x_F1, 0x_C8,
		0x_7C, 0x_01, 0x_E8, 0x_FA, 0x_4D, 0x_43, 0x_EE, 0x_B5, 0x_2C, 0x_A8, 0x_F7, 0x_42, 0x_EC, 0x_54, 0x_F3,
		0x_B3, 0x_0E, 0x_B1, 0x_8B, 0x_92, 0x_BB, 0x_C1, 0x_C4, 0x_BA, 0x_E4, 0x_C2, 0x_FD, 0x_EB, 0x_70, 0x_7A,
		0x_77, 0x_51, 0x_76, 0x_57, 0x_4E, 0x_11, 0x_EF, 0x_04, 0x_50, 0x_40, 0x_BD, 0x_DF, 0x_F2, 0x_97, 0x_46,
		0x_E3, 0x_BF, 0x_AE, 0x_C0, 0x_94, 0x_E1, 0x_82, 0x_3D, 0x_12, 0x_78, 0x_B0, 0x_63, 0x_84,
	];

	helper(S, BASE, 743_333);
}
// endregion
// region: s_has_zeros_and_5_315_077_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_5_315_077_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_1E, 0x_CB, 0x_C4, 0x_63, 0x_38, 0x_4E, 0x_EB, 0x_93,
		0x_FC, 0x_8E, 0x_8F, 0x_95, 0x_D0, 0x_91, 0x_95, 0x_8A, 0x_04, 0x_8F, 0x_C4, 0x_91, 0x_1D, 0x_A5, 0x_5B,
		0x_C9, 0x_EF, 0x_D9, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_7F, 0x_C6, 0x_17, 0x_52, 0x_67, 0x_ED, 0x_F5, 0x_D9, 0x_34, 0x_1B, 0x_60, 0x_1D, 0x_BF, 0x_1E, 0x_B4,
		0x_14, 0x_93, 0x_E2, 0x_91, 0x_B3, 0x_63, 0x_97, 0x_4F, 0x_0E, 0x_9F, 0x_EA, 0x_E8, 0x_78, 0x_C4, 0x_5B,
		0x_51, 0x_31, 0x_1C, 0x_04, 0x_80, 0x_0F, 0x_2F, 0x_08, 0x_85, 0x_6E, 0x_3D, 0x_8E, 0x_3E, 0x_87, 0x_EF,
		0x_6B, 0x_FC, 0x_D7, 0x_CB, 0x_A5, 0x_AD, 0x_D0, 0x_8D, 0x_56, 0x_F4, 0x_6F, 0x_FD, 0x_DB, 0x_4E, 0x_66,
		0x_10, 0x_8F, 0x_24, 0x_8A, 0x_C1, 0x_95, 0x_90, 0x_E3, 0x_DD, 0x_EB, 0x_9E, 0x_98, 0x_C9,
	];

	helper(S, BASE, 5_315_077);
}
// endregion
// region: s_has_zeros_and_64_022_681_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_64_022_681_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_ED, 0x_CF, 0x_47, 0x_8E, 0x_ED, 0x_07, 0x_2F, 0x_83, 0x_2F, 0x_50,
		0x_DC, 0x_85, 0x_F4, 0x_1D, 0x_21, 0x_E4, 0x_E4, 0x_4C, 0x_BA, 0x_C6, 0x_EA, 0x_2F, 0x_C6, 0x_C6, 0x_7F,
		0x_8D, 0x_AF, 0x_9D, 0x_C0, 0x_A0, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_8E, 0x_ED, 0x_83, 0x_BA, 0x_8B, 0x_1A, 0x_36, 0x_F4, 0x_D3, 0x_77, 0x_BB, 0x_27, 0x_FB, 0x_B5,
		0x_46, 0x_50, 0x_97, 0x_CF, 0x_84, 0x_D7, 0x_A6, 0x_5C, 0x_5F, 0x_9D, 0x_C7, 0x_8D, 0x_6E, 0x_AF, 0x_39,
		0x_21, 0x_7F, 0x_89, 0x_EE, 0x_38, 0x_35, 0x_EA, 0x_F0, 0x_33, 0x_CD, 0x_94, 0x_45, 0x_47, 0x_A8, 0x_B9,
		0x_C3, 0x_AD, 0x_68, 0x_86, 0x_F9, 0x_FD, 0x_5B, 0x_C0, 0x_1D, 0x_F5, 0x_A3, 0x_7C, 0x_2F, 0x_DC, 0x_4E,
		0x_32, 0x_4C, 0x_78, 0x_DD, 0x_C6, 0x_42, 0x_D5, 0x_8A, 0x_6B, 0x_75, 0x_A0, 0x_1E, 0x_85,
	];

	helper(S, BASE, 64_022_681);
}
// endregion
// region: s_has_zeros_and_446_377_753_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_446_377_753_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_2E, 0x_6C, 0x_4B, 0x_23, 0x_9E, 0x_6E, 0x_E5, 0x_49, 0x_95, 0x_83, 0x_81, 0x_27,
		0x_40, 0x_01, 0x_6D, 0x_2E, 0x_3F, 0x_94, 0x_FA, 0x_77, 0x_75, 0x_3D, 0x_64, 0x_CD, 0x_A4, 0x_63, 0x_FA,
		0x_63, 0x_BA, 0x_05, 0x_BA, 0x_DB, 0x_23, 0x_9E, 0x_83, 0x_A4, 0x_53, 0x_9E, 0x_88, 0x_99, 0x_AB, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_64, 0x_B0, 0x_B2, 0x_FA, 0x_BA, 0x_1E, 0x_F9, 0x_6D, 0x_3E, 0x_A8, 0x_33, 0x_A4, 0x_31, 0x_CE,
		0x_2E, 0x_B9, 0x_AB, 0x_13, 0x_87, 0x_41, 0x_AE, 0x_5B, 0x_75, 0x_DB, 0x_1D, 0x_05, 0x_58, 0x_9A, 0x_C9,
		0x_83, 0x_89, 0x_4B, 0x_39, 0x_52, 0x_D6, 0x_F4, 0x_88, 0x_3D, 0x_72, 0x_F5, 0x_29, 0x_D4, 0x_95, 0x_50,
		0x_FF, 0x_3F, 0x_0F, 0x_27, 0x_01, 0x_E9, 0x_49, 0x_6C, 0x_2F, 0x_9E, 0x_CD, 0x_3A, 0x_D7, 0x_40, 0x_81,
		0x_E5, 0x_6F, 0x_1C, 0x_63, 0x_23, 0x_51, 0x_4D, 0x_77, 0x_99, 0x_A1, 0x_45, 0x_53, 0x_42,
	];

	helper(S, BASE, 446_377_753);
}
// endregion
// region: s_has_zeros_and_3_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_3_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_23, 0x_D5, 0x_F0, 0x_AF, 0x_E1, 0x_C3, 0x_49, 0x_7E, 0x_89,
		0x_A0, 0x_1A, 0x_33, 0x_A3, 0x_BD, 0x_F4, 0x_FD, 0x_CC, 0x_C7, 0x_35, 0x_CB, 0x_FA, 0x_05, 0x_58, 0x_C3,
		0x_BD, 0x_C6, 0x_F1, 0x_76, 0x_60, 0x_C6, 0x_5F, 0x_98, 0x_87, 0x_CB, 0x_D8, 0x_F6, 0x_F2, 0x_1A, 0x_5B,
		0x_96, 0x_96, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_BF, 0x_BC, 0x_23, 0x_33, 0x_22, 0x_FA, 0x_A9, 0x_82, 0x_7B, 0x_13, 0x_F1, 0x_11, 0x_A6, 0x_3D,
		0x_E1, 0x_85, 0x_1A, 0x_E6, 0x_99, 0x_7E, 0x_5E, 0x_4D, 0x_EC, 0x_3A, 0x_98, 0x_F6, 0x_DA, 0x_31, 0x_9A,
		0x_89, 0x_AF, 0x_49, 0x_30, 0x_55, 0x_CB, 0x_02, 0x_6C, 0x_3C, 0x_66, 0x_92, 0x_A3, 0x_F7, 0x_79, 0x_71,
		0x_BE, 0x_F4, 0x_C6, 0x_60, 0x_DE, 0x_6E, 0x_05, 0x_76, 0x_28, 0x_0E, 0x_F2, 0x_C7, 0x_3F, 0x_26, 0x_70,
		0x_B4, 0x_2F, 0x_DB, 0x_A0, 0x_B7, 0x_5F, 0x_54, 0x_88, 0x_19, 0x_5B, 0x_37, 0x_BD, 0x_FB, 0x_F5, 0x_9C,
		0x_5C, 0x_FD, 0x_3B, 0x_A4, 0x_14, 0x_D3, 0x_04, 0x_5D, 0x_43, 0x_58, 0x_47, 0x_CC, 0x_21, 0x_96, 0x_4E,
		0x_D8, 0x_44, 0x_E4, 0x_6A, 0x_16, 0x_AC, 0x_0F, 0x_EB, 0x_06, 0x_F0, 0x_35, 0x_10, 0x_75, 0x_B0, 0x_81,
		0x_C3, 0x_39, 0x_C0, 0x_1D, 0x_84, 0x_87, 0x_24, 0x_E7,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_zeros_and_53_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_53_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_56, 0x_B2, 0x_A7, 0x_1C, 0x_91, 0x_E7, 0x_47, 0x_50, 0x_B3, 0x_ED, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_57, 0x_C1, 0x_5C, 0x_F8, 0x_B3, 0x_8A, 0x_48, 0x_61, 0x_40, 0x_D5, 0x_6A, 0x_07, 0x_B5, 0x_CF,
		0x_46, 0x_3A, 0x_1D, 0x_DE, 0x_64, 0x_91, 0x_80, 0x_8D, 0x_53, 0x_63, 0x_58, 0x_50, 0x_41, 0x_11, 0x_E1,
		0x_3E, 0x_1C, 0x_A0, 0x_F7, 0x_E8, 0x_86, 0x_26, 0x_3C, 0x_D9, 0x_34, 0x_96, 0x_17, 0x_3B, 0x_BE, 0x_9E,
		0x_3F, 0x_D1, 0x_9B, 0x_E7, 0x_98, 0x_ED, 0x_A6, 0x_D0, 0x_56, 0x_B8, 0x_AF, 0x_81, 0x_27, 0x_CB, 0x_7A,
		0x_F9, 0x_C2, 0x_74, 0x_4A, 0x_A2, 0x_32, 0x_1F, 0x_87, 0x_EF, 0x_82, 0x_9C, 0x_7C, 0x_76, 0x_62, 0x_EB,
		0x_AA, 0x_06, 0x_6E, 0x_D3, 0x_29, 0x_69, 0x_79, 0x_E2, 0x_AD, 0x_65, 0x_C3, 0x_9A, 0x_9F, 0x_39, 0x_A7,
		0x_43, 0x_33, 0x_19, 0x_73, 0x_A8, 0x_47, 0x_4E, 0x_DF, 0x_2C, 0x_38, 0x_C8, 0x_49, 0x_CA, 0x_D2, 0x_37,
		0x_90, 0x_7D, 0x_25, 0x_5E, 0x_A5, 0x_13, 0x_36, 0x_F2,
	];

	helper(S, BASE, 53);
}
// endregion
// region: s_has_zeros_and_313_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_313_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_C1, 0x_C1, 0x_C1, 0x_4D, 0x_F3, 0x_28, 0x_C6, 0x_54, 0x_71, 0x_58, 0x_C0, 0x_F9, 0x_19, 0x_64, 0x_9F,
		0x_7C, 0x_AE, 0x_A0, 0x_AD, 0x_E3, 0x_B0, 0x_18, 0x_92, 0x_F9, 0x_86, 0x_32, 0x_17, 0x_45, 0x_4E, 0x_6E,
		0x_2E, 0x_A0, 0x_C6, 0x_19, 0x_2F, 0x_E1, 0x_AE, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_71, 0x_4D, 0x_EA, 0x_78, 0x_B9, 0x_47, 0x_85, 0x_52, 0x_25, 0x_CF, 0x_9E, 0x_86, 0x_24, 0x_46,
		0x_E8, 0x_2C, 0x_6B, 0x_56, 0x_3B, 0x_69, 0x_A6, 0x_37, 0x_E3, 0x_BA, 0x_C0, 0x_06, 0x_98, 0x_BE, 0x_92,
		0x_AC, 0x_53, 0x_6E, 0x_96, 0x_C8, 0x_1E, 0x_67, 0x_D1, 0x_C6, 0x_05, 0x_E1, 0x_93, 0x_35, 0x_DB, 0x_A1,
		0x_DA, 0x_AE, 0x_77, 0x_18, 0x_BF, 0x_ED, 0x_76, 0x_64, 0x_DE, 0x_D0, 0x_72, 0x_55, 0x_17, 0x_B7, 0x_58,
		0x_A4, 0x_97, 0x_2A, 0x_8D, 0x_32, 0x_0F, 0x_AA, 0x_45, 0x_84, 0x_39, 0x_7E, 0x_54, 0x_F9, 0x_B2, 0x_27,
		0x_AD, 0x_B0, 0x_D9, 0x_DF, 0x_5F, 0x_70, 0x_CA, 0x_4E, 0x_38, 0x_49, 0x_90, 0x_8B, 0x_F3, 0x_EC, 0x_2E,
		0x_BB, 0x_63, 0x_34, 0x_1B, 0x_E6, 0x_EE, 0x_7C, 0x_19, 0x_D2, 0x_D7, 0x_2F, 0x_EF, 0x_5A, 0x_9C, 0x_12,
		0x_A0, 0x_3F, 0x_9F, 0x_F4, 0x_01, 0x_7A, 0x_CD, 0x_F6,
	];

	helper(S, BASE, 313);
}
// endregion
// region: s_has_zeros_and_6_882_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_6_882_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_1B, 0x_C1, 0x_93, 0x_EC, 0x_CC,
		0x_C1, 0x_BD, 0x_81, 0x_5F, 0x_64, 0x_1A, 0x_F6, 0x_79, 0x_C5, 0x_25, 0x_31, 0x_A5, 0x_A0, 0x_91, 0x_38,
		0x_02, 0x_EC, 0x_25, 0x_66, 0x_67, 0x_03, 0x_1B, 0x_E1, 0x_B2, 0x_23, 0x_88, 0x_A9, 0x_41, 0x_08, 0x_39,
		0x_54, 0x_9E, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_AD, 0x_96, 0x_67, 0x_8E, 0x_03, 0x_7B, 0x_70, 0x_91, 0x_C5, 0x_19, 0x_A0, 0x_D7, 0x_BB, 0x_F3,
		0x_F5, 0x_40, 0x_2C, 0x_F8, 0x_A5, 0x_D3, 0x_E1, 0x_1F, 0x_63, 0x_50, 0x_9C, 0x_39, 0x_34, 0x_ED, 0x_A4,
		0x_0E, 0x_EC, 0x_61, 0x_C0, 0x_65, 0x_C9, 0x_1C, 0x_FE, 0x_73, 0x_CA, 0x_31, 0x_13, 0x_F1, 0x_AA, 0x_25,
		0x_9E, 0x_F6, 0x_B1, 0x_B8, 0x_88, 0x_DB, 0x_F9, 0x_CC, 0x_23, 0x_3E, 0x_EA, 0x_F2, 0x_C8, 0x_DA, 0x_66,
		0x_1B, 0x_5F, 0x_79, 0x_5E, 0x_04, 0x_60, 0x_CF, 0x_64, 0x_27, 0x_47, 0x_81, 0x_33, 0x_75, 0x_41, 0x_BD,
		0x_7D, 0x_C7, 0x_B9, 0x_74, 0x_BA, 0x_76, 0x_9D, 0x_37, 0x_8C, 0x_A9, 0x_8B, 0x_EF, 0x_24, 0x_30, 0x_6B,
		0x_08, 0x_43, 0x_38, 0x_4E, 0x_35, 0x_E6, 0x_02, 0x_22, 0x_54, 0x_E9, 0x_99, 0x_B2, 0x_C1, 0x_A2, 0x_80,
		0x_F7, 0x_07, 0x_D9, 0x_7F, 0x_1A, 0x_6E, 0x_14, 0x_87,
	];

	helper(S, BASE, 6_882);
}
// endregion
// region: s_has_zeros_and_96_819_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_96_819_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_A5, 0x_69, 0x_03, 0x_5B, 0x_C0, 0x_90, 0x_CA, 0x_A1, 0x_7C, 0x_7C, 0x_DD,
		0x_87, 0x_CF, 0x_C5, 0x_ED, 0x_5E, 0x_2F, 0x_D8, 0x_3C, 0x_BC, 0x_7F, 0x_BD, 0x_27, 0x_43, 0x_6D, 0x_D9,
		0x_CD, 0x_27, 0x_FD, 0x_43, 0x_2F, 0x_1A, 0x_B6, 0x_54, 0x_D5, 0x_29, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_3B, 0x_5C, 0x_CF, 0x_B0, 0x_02, 0x_29, 0x_A5, 0x_EB, 0x_01, 0x_DA, 0x_9D, 0x_FD, 0x_D9, 0x_9F,
		0x_C7, 0x_1F, 0x_BA, 0x_99, 0x_CC, 0x_80, 0x_2F, 0x_5D, 0x_A1, 0x_F6, 0x_76, 0x_61, 0x_4A, 0x_26, 0x_4D,
		0x_F1, 0x_E4, 0x_8A, 0x_1A, 0x_22, 0x_54, 0x_30, 0x_C5, 0x_74, 0x_38, 0x_FB, 0x_E3, 0x_ED, 0x_D0, 0x_D1,
		0x_CB, 0x_6E, 0x_FF, 0x_92, 0x_7E, 0x_67, 0x_35, 0x_BD, 0x_5E, 0x_DF, 0x_C0, 0x_BC, 0x_6C, 0x_43, 0x_7F,
		0x_3C, 0x_96, 0x_8B, 0x_27, 0x_C1, 0x_69, 0x_65, 0x_C8, 0x_B1, 0x_B6, 0x_CA, 0x_D8, 0x_BB, 0x_45, 0x_3F,
		0x_64, 0x_23, 0x_6D, 0x_87, 0x_DD, 0x_84, 0x_A0, 0x_CD, 0x_72, 0x_BF, 0x_A4, 0x_57, 0x_1C, 0x_15, 0x_81,
		0x_66, 0x_03, 0x_C4, 0x_75, 0x_D5, 0x_59, 0x_D3, 0x_BE, 0x_2A, 0x_2E, 0x_68, 0x_AC, 0x_D4, 0x_33, 0x_4C,
		0x_7A, 0x_D2, 0x_FA, 0x_0F, 0x_6A, 0x_7C, 0x_90, 0x_D7,
	];

	helper(S, BASE, 96_819);
}
// endregion
// region: s_has_zeros_and_641_830_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_641_830_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_C1, 0x_C1, 0x_C1, 0x_B1, 0x_23, 0x_D7, 0x_AA, 0x_C1, 0x_14, 0x_C9, 0x_59, 0x_76, 0x_D6, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_A5, 0x_C2, 0x_CD, 0x_BD, 0x_39, 0x_EE, 0x_C3, 0x_80, 0x_49, 0x_64, 0x_9A, 0x_F0, 0x_4E, 0x_D5,
		0x_1F, 0x_A7, 0x_65, 0x_4F, 0x_06, 0x_B7, 0x_F7, 0x_5A, 0x_4D, 0x_FB, 0x_8C, 0x_3F, 0x_59, 0x_B9, 0x_23,
		0x_76, 0x_75, 0x_1C, 0x_2C, 0x_E4, 0x_81, 0x_B6, 0x_EC, 0x_37, 0x_7E, 0x_32, 0x_DD, 0x_D9, 0x_30, 0x_CC,
		0x_04, 0x_B4, 0x_B3, 0x_CF, 0x_28, 0x_B1, 0x_88, 0x_51, 0x_DF, 0x_CB, 0x_7D, 0x_14, 0x_08, 0x_84, 0x_5D,
		0x_C9, 0x_FD, 0x_F4, 0x_47, 0x_B2, 0x_A8, 0x_52, 0x_D8, 0x_8D, 0x_F3, 0x_4B, 0x_D1, 0x_5C, 0x_BF, 0x_78,
		0x_F9, 0x_6C, 0x_C8, 0x_3A, 0x_F1, 0x_71, 0x_90, 0x_87, 0x_3B, 0x_77, 0x_D4, 0x_B0, 0x_D6, 0x_03, 0x_1B,
		0x_0E, 0x_A3, 0x_22, 0x_BE, 0x_16, 0x_FE, 0x_C7, 0x_93, 0x_A9, 0x_05, 0x_57, 0x_12, 0x_94, 0x_D7, 0x_99,
		0x_74, 0x_6E, 0x_AF, 0x_DE, 0x_DA, 0x_7C, 0x_24, 0x_E8,
	];

	helper(S, BASE, 641_830);
}
// endregion
// region: s_has_zeros_and_6_690_260_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_6_690_260_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_5A, 0x_4F, 0x_64, 0x_79, 0x_77, 0x_10, 0x_25, 0x_B9,
		0x_9C, 0x_56, 0x_A8, 0x_56, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_3C, 0x_CC, 0x_7A, 0x_5A, 0x_43, 0x_54, 0x_F0, 0x_5B, 0x_F8, 0x_D4, 0x_AB, 0x_02, 0x_AC, 0x_EA,
		0x_F1, 0x_9D, 0x_98, 0x_91, 0x_9E, 0x_2C, 0x_97, 0x_34, 0x_36, 0x_03, 0x_E5, 0x_25, 0x_05, 0x_DF, 0x_A8,
		0x_7C, 0x_FE, 0x_22, 0x_1E, 0x_7B, 0x_4B, 0x_93, 0x_BD, 0x_3B, 0x_5E, 0x_9B, 0x_56, 0x_08, 0x_52, 0x_B6,
		0x_49, 0x_70, 0x_95, 0x_C5, 0x_2A, 0x_E4, 0x_80, 0x_92, 0x_04, 0x_76, 0x_40, 0x_FD, 0x_9C, 0x_DB, 0x_6C,
		0x_BA, 0x_27, 0x_D1, 0x_1F, 0x_30, 0x_7F, 0x_F6, 0x_C4, 0x_5F, 0x_35, 0x_06, 0x_4F, 0x_D2, 0x_B5, 0x_5C,
		0x_01, 0x_CD, 0x_F7, 0x_60, 0x_78, 0x_6B, 0x_4E, 0x_85, 0x_46, 0x_6D, 0x_33, 0x_B7, 0x_10, 0x_86, 0x_07,
		0x_F3, 0x_83, 0x_9A, 0x_AF, 0x_D9, 0x_79, 0x_A2, 0x_7D, 0x_B8, 0x_38, 0x_B4, 0x_E8, 0x_0F, 0x_53, 0x_6E,
		0x_84, 0x_64, 0x_1D, 0x_82, 0x_51, 0x_94, 0x_17, 0x_B9,
	];

	helper(S, BASE, 6_690_260);
}
// endregion
// region: s_has_zeros_and_53_547_784_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_53_547_784_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_56, 0x_B4, 0x_E9, 0x_26, 0x_C7, 0x_7D, 0x_8E, 0x_51, 0x_52, 0x_A6, 0x_51, 0x_57, 0x_60, 0x_C5,
		0x_94, 0x_E4, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_10, 0x_96, 0x_F1, 0x_25, 0x_94, 0x_98, 0x_C2, 0x_40, 0x_66, 0x_4C, 0x_49, 0x_B4, 0x_14, 0x_CC,
		0x_F8, 0x_42, 0x_54, 0x_1B, 0x_3E, 0x_5B, 0x_F6, 0x_26, 0x_65, 0x_BA, 0x_11, 0x_93, 0x_6D, 0x_C5, 0x_F3,
		0x_DD, 0x_C4, 0x_FE, 0x_50, 0x_6B, 0x_30, 0x_CA, 0x_56, 0x_83, 0x_EF, 0x_84, 0x_8E, 0x_4B, 0x_CF, 0x_3F,
		0x_C3, 0x_88, 0x_B0, 0x_46, 0x_AA, 0x_47, 0x_D3, 0x_9D, 0x_32, 0x_44, 0x_53, 0x_36, 0x_7C, 0x_4A, 0x_DC,
		0x_91, 0x_51, 0x_DB, 0x_D8, 0x_ED, 0x_E9, 0x_E5, 0x_FD, 0x_29, 0x_D2, 0x_68, 0x_4E, 0x_67, 0x_57, 0x_4F,
		0x_60, 0x_A4, 0x_3A, 0x_39, 0x_95, 0x_C6, 0x_EA, 0x_1F, 0x_03, 0x_0F, 0x_DA, 0x_71, 0x_35, 0x_7D, 0x_74,
		0x_1D, 0x_D0, 0x_58, 0x_63, 0x_C8, 0x_F2, 0x_5C, 0x_9E, 0x_6F, 0x_F7, 0x_A6, 0x_FB, 0x_D1, 0x_C9, 0x_AB,
		0x_52, 0x_80, 0x_73, 0x_E4, 0x_A8, 0x_BD, 0x_02, 0x_5A,
	];

	helper(S, BASE, 53_547_784);
}
// endregion
// region: s_has_zeros_and_927_958_421_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_927_958_421_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_1B, 0x_CB,
		0x_CE, 0x_8E, 0x_39, 0x_86, 0x_5A, 0x_5A, 0x_2C, 0x_E8, 0x_04, 0x_11, 0x_E9, 0x_AA, 0x_92, 0x_F2, 0x_BF,
		0x_84, 0x_05, 0x_C8, 0x_F2, 0x_84, 0x_36, 0x_EF, 0x_E2, 0x_02, 0x_43, 0x_63, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_FB, 0x_6E, 0x_B6, 0x_AC, 0x_1B, 0x_D6, 0x_3E, 0x_23, 0x_7C, 0x_E6, 0x_2C, 0x_1E, 0x_CE, 0x_E2,
		0x_10, 0x_5F, 0x_41, 0x_03, 0x_36, 0x_B4, 0x_4C, 0x_11, 0x_BC, 0x_49, 0x_C4, 0x_1D, 0x_4B, 0x_E8, 0x_50,
		0x_1C, 0x_15, 0x_BF, 0x_6C, 0x_61, 0x_51, 0x_A1, 0x_84, 0x_C8, 0x_EE, 0x_ED, 0x_96, 0x_71, 0x_D4, 0x_80,
		0x_E1, 0x_C9, 0x_87, 0x_39, 0x_58, 0x_DA, 0x_94, 0x_7A, 0x_AA, 0x_AD, 0x_26, 0x_29, 0x_B3, 0x_9B, 0x_9D,
		0x_37, 0x_D2, 0x_63, 0x_DB, 0x_13, 0x_73, 0x_79, 0x_19, 0x_42, 0x_54, 0x_F2, 0x_62, 0x_04, 0x_DF, 0x_D9,
		0x_E9, 0x_B2, 0x_83, 0x_CB, 0x_01, 0x_5A, 0x_53, 0x_B0, 0x_89, 0x_2E, 0x_8E, 0x_66, 0x_02, 0x_33, 0x_9C,
		0x_A4, 0x_5E, 0x_4A, 0x_72, 0x_EF, 0x_56, 0x_43, 0x_40, 0x_4D, 0x_1A, 0x_05, 0x_9A, 0x_FA, 0x_6F, 0x_59,
		0x_CF, 0x_F0, 0x_17, 0x_BA, 0x_95, 0x_3A, 0x_14, 0x_1F,
	];

	helper(S, BASE, 927_958_421);
}
// endregion
// region: s_has_zeros_and_1_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_1_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E,
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E,
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_44, 0x_2B, 0x_6E, 0x_D4, 0x_8A, 0x_37, 0x_4D, 0x_30, 0x_CD, 0x_12,
		0x_2C, 0x_A3, 0x_C1, 0x_D8, 0x_3E, 0x_7C, 0x_1E, 0x_81, 0x_5E, 0x_D4, 0x_23, 0x_83, 0x_05, 0x_4D, 0x_C9,
		0x_1E, 0x_D7, 0x_56, 0x_E3, 0x_8C, 0x_FE, 0x_A2, 0x_22, 0x_AF, 0x_74, 0x_FF, 0x_E4, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_44, 0x_AC, 0x_61, 0x_0E, 0x_13, 0x_8E, 0x_A5, 0x_A6, 0x_60, 0x_9F, 0x_1A, 0x_B3, 0x_A7, 0x_C9,
		0x_A3, 0x_EA, 0x_A9, 0x_90, 0x_AF, 0x_81, 0x_E6, 0x_1B, 0x_70, 0x_CC, 0x_87, 0x_FF, 0x_C3, 0x_55, 0x_D9,
		0x_3D, 0x_29, 0x_5D, 0x_5A, 0x_51, 0x_45, 0x_A8, 0x_66, 0x_39, 0x_BA, 0x_74, 0x_9E, 0x_96, 0x_AD, 0x_91,
		0x_1C, 0x_FD, 0x_14, 0x_DB, 0x_30, 0x_5B, 0x_D6, 0x_E2, 0x_33, 0x_02, 0x_7E, 0x_3B, 0x_CF, 0x_82, 0x_27,
		0x_9D, 0x_C0, 0x_08, 0x_A2, 0x_84, 0x_17, 0x_D0, 0x_C4, 0x_B2, 0x_C2, 0x_E5, 0x_95, 0x_67, 0x_CD, 0x_34,
		0x_B7, 0x_AE, 0x_4C, 0x_37, 0x_04, 0x_2C, 0x_BD, 0x_5F, 0x_85, 0x_D5, 0x_58, 0x_98, 0x_68, 0x_D8, 0x_06,
		0x_7B, 0x_A1, 0x_F7, 0x_D4, 0x_8A, 0x_48, 0x_7A, 0x_DC, 0x_78, 0x_7C, 0x_6C, 0x_77, 0x_A0, 0x_52, 0x_F9,
		0x_05, 0x_4A, 0x_59, 0x_E7, 0x_64, 0x_10, 0x_DD, 0x_3E, 0x_C5, 0x_79, 0x_7F, 0x_7D, 0x_83, 0x_12, 0x_C6,
		0x_5E, 0x_65, 0x_62, 0x_E3, 0x_97, 0x_6F, 0x_E0, 0x_DE, 0x_8C, 0x_E4, 0x_FC, 0x_99, 0x_F6, 0x_80, 0x_11,
		0x_FE, 0x_4E, 0x_F1, 0x_9B, 0x_76, 0x_3F, 0x_EC, 0x_2A, 0x_94, 0x_F2, 0x_BF, 0x_56, 0x_BB, 0x_1D, 0x_71,
		0x_8B, 0x_C1, 0x_16, 0x_FB, 0x_31, 0x_CA, 0x_8D, 0x_4B, 0x_B1, 0x_6E, 0x_23, 0x_B9, 0x_EF, 0x_2F, 0x_D7,
		0x_19, 0x_6A, 0x_53, 0x_3C, 0x_49, 0x_22, 0x_03, 0x_54, 0x_FA, 0x_AA, 0x_43, 0x_C8, 0x_F8, 0x_D1, 0x_D3,
		0x_57, 0x_72, 0x_B6, 0x_28, 0x_F3, 0x_4D, 0x_1F, 0x_63, 0x_AB, 0x_15, 0x_21, 0x_93, 0x_CB,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_zeros_and_64_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_64_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_37, 0x_0D, 0x_B0, 0x_D8, 0x_14, 0x_04, 0x_21,
		0x_7B, 0x_96, 0x_A1, 0x_32, 0x_29, 0x_FF, 0x_90, 0x_96, 0x_04, 0x_3F, 0x_37, 0x_80, 0x_7F, 0x_B4, 0x_4E,
		0x_AD, 0x_44, 0x_5C, 0x_82, 0x_1D, 0x_55, 0x_B1, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_C1, 0x_D6, 0x_45, 0x_4C, 0x_16, 0x_EE, 0x_B3, 0x_9B, 0x_B1, 0x_0F, 0x_5D, 0x_19, 0x_81, 0x_39,
		0x_9C, 0x_DF, 0x_E0, 0x_63, 0x_43, 0x_A9, 0x_4B, 0x_1D, 0x_13, 0x_36, 0x_33, 0x_CE, 0x_76, 0x_CD, 0x_F4,
		0x_74, 0x_72, 0x_9F, 0x_73, 0x_95, 0x_4D, 0x_82, 0x_DD, 0x_22, 0x_92, 0x_D4, 0x_70, 0x_08, 0x_C4, 0x_02,
		0x_2E, 0x_C0, 0x_35, 0x_BE, 0x_A5, 0x_D9, 0x_1F, 0x_98, 0x_59, 0x_1C, 0x_AA, 0x_83, 0x_F5, 0x_B4, 0x_D1,
		0x_4E, 0x_E6, 0x_21, 0x_A6, 0x_37, 0x_B0, 0x_5B, 0x_E5, 0x_B2, 0x_AF, 0x_5C, 0x_04, 0x_84, 0x_62, 0x_F6,
		0x_F3, 0x_2F, 0x_9D, 0x_77, 0x_3D, 0x_11, 0x_53, 0x_AD, 0x_D5, 0x_9A, 0x_E2, 0x_86, 0x_B5, 0x_67, 0x_5E,
		0x_B9, 0x_C9, 0x_6E, 0x_FA, 0x_D2, 0x_B8, 0x_26, 0x_55, 0x_D8, 0x_BC, 0x_AE, 0x_D3, 0x_DE, 0x_1E, 0x_ED,
		0x_7B, 0x_32, 0x_A4, 0x_F0, 0x_3A, 0x_FC, 0x_88, 0x_D7, 0x_9E, 0x_23, 0x_6A, 0x_3B, 0x_05, 0x_01, 0x_30,
		0x_6D, 0x_F8, 0x_A1, 0x_A7, 0x_80, 0x_5F, 0x_51, 0x_FF, 0x_99, 0x_1A, 0x_F7, 0x_97, 0x_48, 0x_D0, 0x_A2,
		0x_C2, 0x_8F, 0x_91, 0x_79, 0x_DB, 0x_14, 0x_B6, 0x_68, 0x_7E, 0x_57, 0x_3C, 0x_85, 0x_15, 0x_47, 0x_49,
		0x_64, 0x_90, 0x_78, 0x_24, 0x_93, 0x_60, 0x_CA, 0x_2A, 0x_C8, 0x_8C, 0x_3E, 0x_69, 0x_29, 0x_6B, 0x_07,
		0x_AC, 0x_C3, 0x_FE, 0x_4F, 0x_61, 0x_46, 0x_42, 0x_F9, 0x_FD, 0x_CB, 0x_4A, 0x_5A, 0x_58, 0x_52, 0x_89,
		0x_56, 0x_65, 0x_7F, 0x_8B, 0x_EF, 0x_44, 0x_94, 0x_FB, 0x_03, 0x_E8, 0x_96, 0x_3F, 0x_E4,
	];

	helper(S, BASE, 64);
}
// endregion
// region: s_has_zeros_and_739_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_739_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_8D, 0x_27, 0x_4B, 0x_8B, 0x_D5,
		0x_31, 0x_54, 0x_84, 0x_62, 0x_F7, 0x_67, 0x_98, 0x_C0, 0x_3A, 0x_60, 0x_67, 0x_F5, 0x_45, 0x_52, 0x_07,
		0x_8E, 0x_B1, 0x_4E, 0x_21, 0x_3F, 0x_C9, 0x_D0, 0x_D4, 0x_21, 0x_58, 0x_CE, 0x_69, 0x_8D, 0x_75, 0x_B6,
		0x_F2, 0x_75, 0x_60, 0x_F2, 0x_FC, 0x_98, 0x_97, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_4D, 0x_CC, 0x_07, 0x_8D, 0x_1F, 0x_DA, 0x_18, 0x_6A, 0x_78, 0x_30, 0x_A4, 0x_14, 0x_E8, 0x_FC, 0x_99,
		0x_E6, 0x_01, 0x_E2, 0x_31, 0x_80, 0x_91, 0x_21, 0x_69, 0x_D0, 0x_60, 0x_CE, 0x_44, 0x_2E, 0x_BF, 0x_70,
		0x_65, 0x_B8, 0x_8E, 0x_CD, 0x_FB, 0x_3F, 0x_95, 0x_68, 0x_D2, 0x_23, 0x_57, 0x_FD, 0x_45, 0x_89, 0x_E7,
		0x_49, 0x_5E, 0x_77, 0x_98, 0x_9E, 0x_C8, 0x_88, 0x_51, 0x_DE, 0x_84, 0x_EE, 0x_C3, 0x_24, 0x_F6, 0x_64,
		0x_AB, 0x_B3, 0x_22, 0x_81, 0x_8B, 0x_1C, 0x_2C, 0x_0F, 0x_93, 0x_B4, 0x_B1, 0x_59, 0x_AA, 0x_DF, 0x_3B,
		0x_12, 0x_4E, 0x_9C, 0x_19, 0x_9D, 0x_EC, 0x_3A, 0x_71, 0x_D9, 0x_43, 0x_54, 0x_DC, 0x_4F, 0x_26, 0x_D5,
		0x_37, 0x_10, 0x_A2, 0x_D3, 0x_6B, 0x_F9, 0x_66, 0x_A8, 0x_AF, 0x_32, 0x_7A, 0x_B7, 0x_C9, 0x_1B, 0x_EA,
		0x_7B, 0x_56, 0x_82, 0x_2A, 0x_CF, 0x_BA, 0x_C5, 0x_42, 0x_8F, 0x_F1, 0x_8A, 0x_D1, 0x_FA, 0x_67, 0x_CA,
		0x_EB, 0x_5A, 0x_F2, 0x_9A, 0x_F5, 0x_74, 0x_FF, 0x_02, 0x_E3, 0x_48, 0x_A6, 0x_47, 0x_A3, 0x_03, 0x_FE,
		0x_97, 0x_79, 0x_11, 0x_B9, 0x_58, 0x_29, 0x_75, 0x_A7, 0x_1A, 0x_1D, 0x_96, 0x_F7, 0x_3E, 0x_73, 0x_06,
		0x_76, 0x_25, 0x_39, 0x_F0, 0x_5C, 0x_28, 0x_B5, 0x_34, 0x_62, 0x_E1, 0x_27, 0x_90, 0x_3C, 0x_2F, 0x_83,
		0x_BC, 0x_B6, 0x_C4, 0x_A9, 0x_A0, 0x_BB, 0x_35, 0x_94, 0x_6F, 0x_1E, 0x_5B, 0x_C0, 0x_52, 0x_13, 0x_04,
		0x_E4, 0x_F8, 0x_A5, 0x_B2, 0x_C6, 0x_D4, 0x_4A, 0x_05, 0x_D7, 0x_6D, 0x_4C, 0x_17, 0x_AC,
	];

	helper(S, BASE, 739);
}
// endregion
// region: s_has_zeros_and_1_051_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_1_051_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5,
		0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_BB, 0x_73,
		0x_A2, 0x_4F, 0x_13, 0x_64, 0x_D3, 0x_C0, 0x_EA, 0x_F0, 0x_57, 0x_E8, 0x_A8, 0x_D6, 0x_2C, 0x_72, 0x_84,
		0x_16, 0x_90, 0x_C0, 0x_CC, 0x_7B, 0x_8B, 0x_A1, 0x_F1, 0x_47, 0x_C3, 0x_16, 0x_FA, 0x_3C, 0x_43, 0x_B4,
		0x_9C, 0x_EA, 0x_97,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_43, 0x_12, 0x_67, 0x_1B, 0x_BB, 0x_D4, 0x_16, 0x_7D, 0x_30, 0x_C5, 0x_77, 0x_A8, 0x_44, 0x_98,
		0x_10, 0x_D5, 0x_D0, 0x_50, 0x_C9, 0x_18, 0x_02, 0x_D7, 0x_75, 0x_19, 0x_34, 0x_A3, 0x_A9, 0x_96, 0x_EB,
		0x_D6, 0x_2A, 0x_7F, 0x_1E, 0x_28, 0x_C2, 0x_AB, 0x_88, 0x_79, 0x_3A, 0x_39, 0x_81, 0x_21, 0x_68, 0x_15,
		0x_F7, 0x_9A, 0x_13, 0x_F1, 0x_CE, 0x_5A, 0x_27, 0x_FE, 0x_8B, 0x_FA, 0x_17, 0x_5D, 0x_84, 0x_49, 0x_5F,
		0x_2C, 0x_B5, 0x_9D, 0x_04, 0x_85, 0x_1F, 0x_3F, 0x_B9, 0x_C3, 0x_87, 0x_5B, 0x_7A, 0x_D3, 0x_6E, 0x_45,
		0x_07, 0x_D2, 0x_05, 0x_1A, 0x_E7, 0x_AF, 0x_40, 0x_DE, 0x_CC, 0x_4D, 0x_F0, 0x_73, 0x_C0, 0x_47, 0x_6A,
		0x_D1, 0x_7E, 0x_1D, 0x_11, 0x_C7, 0x_22, 0x_3C, 0x_1C, 0x_76, 0x_B0, 0x_06, 0x_8D, 0x_E2, 0x_DA, 0x_08,
		0x_6D, 0x_37, 0x_64, 0x_6B, 0x_E8, 0x_41, 0x_36, 0x_8E, 0x_BE, 0x_CB, 0x_AE, 0x_B4, 0x_C6, 0x_A4, 0x_01,
		0x_80, 0x_3B, 0x_38, 0x_B1, 0x_93, 0x_2F, 0x_86, 0x_31, 0x_48, 0x_F6, 0x_CF, 0x_8C, 0x_EA, 0x_52, 0x_95,
		0x_F9, 0x_59, 0x_ED, 0x_F4, 0x_F3, 0x_4F, 0x_DC, 0x_A5, 0x_E1, 0x_4C, 0x_5E, 0x_61, 0x_60, 0x_55, 0x_56,
		0x_14, 0x_FD, 0x_51, 0x_BC, 0x_8A, 0x_7B, 0x_BD, 0x_24, 0x_62, 0x_97, 0x_70, 0x_E4, 0x_63, 0x_83, 0x_6F,
		0x_3D, 0x_82, 0x_AA, 0x_B2, 0x_78, 0x_8F, 0x_9B, 0x_9C, 0x_99, 0x_58, 0x_9F, 0x_53, 0x_26, 0x_33, 0x_EF,
		0x_9E, 0x_42, 0x_FF, 0x_BF, 0x_D9, 0x_CD, 0x_72, 0x_DB, 0x_A1, 0x_EC, 0x_90, 0x_57, 0x_A6,
	];

	helper(S, BASE, 1_051);
}
// endregion
// region: s_has_zeros_and_79_212_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_79_212_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_FA, 0x_F7, 0x_DE, 0x_F2, 0x_F5, 0x_FF, 0x_3A, 0x_5A, 0x_D7, 0x_5B, 0x_F6, 0x_19, 0x_71,
		0x_57, 0x_9B, 0x_BC, 0x_C0, 0x_BA, 0x_70, 0x_58, 0x_F5, 0x_FB, 0x_2E, 0x_9E, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_E2, 0x_FA, 0x_4F, 0x_64, 0x_5D, 0x_52, 0x_36, 0x_BC, 0x_A6, 0x_CB, 0x_BD, 0x_A5, 0x_18, 0x_EB,
		0x_56, 0x_F8, 0x_91, 0x_AA, 0x_35, 0x_9E, 0x_C4, 0x_39, 0x_49, 0x_F7, 0x_D0, 0x_7A, 0x_93, 0x_94, 0x_77,
		0x_A2, 0x_D1, 0x_BF, 0x_75, 0x_9D, 0x_05, 0x_E8, 0x_65, 0x_1A, 0x_1F, 0x_24, 0x_F1, 0x_30, 0x_99, 0x_98,
		0x_42, 0x_6C, 0x_AB, 0x_B2, 0x_C2, 0x_3E, 0x_BB, 0x_F6, 0x_81, 0x_5C, 0x_45, 0x_ED, 0x_03, 0x_AD, 0x_23,
		0x_A3, 0x_EC, 0x_34, 0x_D8, 0x_54, 0x_86, 0x_13, 0x_21, 0x_0F, 0x_D9, 0x_67, 0x_DD, 0x_C5, 0x_19, 0x_B6,
		0x_61, 0x_5B, 0x_CF, 0x_16, 0x_3B, 0x_7D, 0x_B8, 0x_DE, 0x_50, 0x_04, 0x_62, 0x_37, 0x_3C, 0x_57, 0x_9A,
		0x_3A, 0x_E0, 0x_01, 0x_53, 0x_CE, 0x_C1, 0x_D5, 0x_8F, 0x_60, 0x_17, 0x_10, 0x_25, 0x_8E, 0x_55, 0x_4B,
		0x_E1, 0x_1E, 0x_5A, 0x_EA, 0x_9C, 0x_2C, 0x_B3, 0x_AF, 0x_02, 0x_8C, 0x_C8, 0x_6E, 0x_73, 0x_2A, 0x_DB,
		0x_DA, 0x_96, 0x_0E, 0x_A9, 0x_63, 0x_68, 0x_BA, 0x_6D, 0x_C3, 0x_26, 0x_CC, 0x_D6, 0x_29, 0x_4C, 0x_6F,
		0x_D7, 0x_1C, 0x_70, 0x_71, 0x_2F, 0x_A8, 0x_3D, 0x_11, 0x_8D, 0x_89, 0x_B7, 0x_2E, 0x_88, 0x_1B, 0x_A7,
		0x_92, 0x_5E, 0x_4A, 0x_F5, 0x_CD, 0x_85, 0x_DC, 0x_E5, 0x_74, 0x_F3, 0x_4D, 0x_C0, 0x_83, 0x_51, 0x_FC,
		0x_07, 0x_FB, 0x_9B, 0x_B0, 0x_8A, 0x_AE, 0x_FF, 0x_A1, 0x_58, 0x_66, 0x_FD, 0x_97, 0x_B1, 0x_5F, 0x_7F,
		0x_15, 0x_3F, 0x_DF, 0x_47, 0x_8B, 0x_E9, 0x_08, 0x_48, 0x_1D, 0x_90, 0x_6A, 0x_EF, 0x_38,
	];

	helper(S, BASE, 79_212);
}
// endregion
// region: s_has_zeros_and_555_301_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_555_301_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80,
		0x_85, 0x_E8, 0x_7D, 0x_59, 0x_ED, 0x_57, 0x_4C, 0x_9B, 0x_B1, 0x_D0, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_29, 0x_5D, 0x_E5, 0x_6A, 0x_E3, 0x_70, 0x_A0, 0x_D0, 0x_E7, 0x_DE, 0x_39, 0x_C0, 0x_D3, 0x_85,
		0x_8E, 0x_73, 0x_A4, 0x_8B, 0x_A3, 0x_AC, 0x_A8, 0x_E6, 0x_C6, 0x_08, 0x_28, 0x_B4, 0x_2E, 0x_DF, 0x_F0,
		0x_0E, 0x_4D, 0x_F7, 0x_EA, 0x_6D, 0x_7B, 0x_BC, 0x_6C, 0x_E0, 0x_16, 0x_7D, 0x_92, 0x_9D, 0x_C1, 0x_41,
		0x_1E, 0x_9F, 0x_EC, 0x_1B, 0x_8F, 0x_77, 0x_BB, 0x_03, 0x_78, 0x_83, 0x_60, 0x_FE, 0x_FC, 0x_87, 0x_CA,
		0x_81, 0x_B1, 0x_4F, 0x_AA, 0x_5B, 0x_BF, 0x_49, 0x_ED, 0x_3D, 0x_C4, 0x_CD, 0x_64, 0x_AD, 0x_4B, 0x_C8,
		0x_6F, 0x_32, 0x_35, 0x_3E, 0x_23, 0x_8C, 0x_5A, 0x_89, 0x_79, 0x_DC, 0x_F6, 0x_C9, 0x_98, 0x_93, 0x_38,
		0x_FF, 0x_AF, 0x_65, 0x_63, 0x_B5, 0x_24, 0x_18, 0x_F9, 0x_FD, 0x_69, 0x_66, 0x_6B, 0x_AB, 0x_7E, 0x_13,
		0x_15, 0x_B2, 0x_4C, 0x_3B, 0x_B8, 0x_36, 0x_74, 0x_8D, 0x_17, 0x_62, 0x_E2, 0x_06, 0x_2F, 0x_A9, 0x_D1,
		0x_1F, 0x_B0, 0x_D5, 0x_25, 0x_5F, 0x_AE, 0x_BA, 0x_C3, 0x_3F, 0x_A1, 0x_46, 0x_50, 0x_51, 0x_58, 0x_F5,
		0x_12, 0x_31, 0x_57, 0x_4E, 0x_EF, 0x_5C, 0x_76, 0x_DA, 0x_82, 0x_C5, 0x_F2, 0x_97, 0x_61, 0x_01, 0x_75,
		0x_2A, 0x_2C, 0x_72, 0x_FA, 0x_9C, 0x_14, 0x_9A, 0x_CF, 0x_B6, 0x_05, 0x_3A, 0x_95, 0x_D7, 0x_44, 0x_A5,
		0x_D9, 0x_EE, 0x_40, 0x_EB, 0x_11, 0x_C7, 0x_1C, 0x_BD, 0x_94, 0x_43, 0x_E8, 0x_B3, 0x_71, 0x_88, 0x_DD,
		0x_5E, 0x_0F, 0x_E4, 0x_9B, 0x_45, 0x_4A, 0x_A6, 0x_8A, 0x_27, 0x_53, 0x_26, 0x_10, 0x_CE,
	];

	helper(S, BASE, 555_301);
}
// endregion
// region: s_has_zeros_and_8_842_132_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_8_842_132_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7,
		0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_F9, 0x_12, 0x_D8, 0x_AA, 0x_92,
		0x_85, 0x_3F, 0x_85, 0x_FF, 0x_5A, 0x_46, 0x_11, 0x_F0, 0x_BB, 0x_B1, 0x_3C, 0x_B9, 0x_FD, 0x_12, 0x_6E,
		0x_06, 0x_F1, 0x_CB, 0x_42, 0x_A9, 0x_D4, 0x_75, 0x_BD, 0x_71, 0x_3C, 0x_1F, 0x_46, 0x_54, 0x_C5, 0x_A8,
		0x_94, 0x_7C, 0x_50, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_E7, 0x_F9, 0x_86, 0x_13, 0x_42, 0x_05, 0x_1E, 0x_5A, 0x_9D, 0x_AB, 0x_C0, 0x_B0, 0x_ED, 0x_5D, 0x_B2,
		0x_56, 0x_FD, 0x_D9, 0x_53, 0x_F4, 0x_50, 0x_E5, 0x_7F, 0x_72, 0x_9F, 0x_1A, 0x_97, 0x_B3, 0x_C5, 0x_9E,
		0x_AA, 0x_CB, 0x_4A, 0x_D6, 0x_BB, 0x_89, 0x_DF, 0x_01, 0x_54, 0x_45, 0x_65, 0x_94, 0x_90, 0x_71, 0x_12,
		0x_9B, 0x_06, 0x_AC, 0x_C4, 0x_E2, 0x_04, 0x_79, 0x_3C, 0x_C7, 0x_CF, 0x_81, 0x_F8, 0x_76, 0x_17, 0x_2A,
		0x_B7, 0x_61, 0x_7D, 0x_CA, 0x_EA, 0x_07, 0x_D4, 0x_F3, 0x_7C, 0x_D1, 0x_3B, 0x_E6, 0x_8D, 0x_D8, 0x_08,
		0x_FF, 0x_75, 0x_CE, 0x_3F, 0x_82, 0x_14, 0x_A8, 0x_55, 0x_36, 0x_F2, 0x_0F, 0x_10, 0x_E1, 0x_B4, 0x_8F,
		0x_39, 0x_1F, 0x_DE, 0x_1B, 0x_A6, 0x_FC, 0x_73, 0x_68, 0x_0E, 0x_95, 0x_6B, 0x_C3, 0x_74, 0x_F1, 0x_6A,
		0x_E8, 0x_E3, 0x_96, 0x_6E, 0x_B6, 0x_25, 0x_B5, 0x_6D, 0x_2E, 0x_59, 0x_6C, 0x_32, 0x_E4, 0x_49, 0x_BD,
		0x_A0, 0x_22, 0x_DC, 0x_46, 0x_47, 0x_1D, 0x_02, 0x_5E, 0x_24, 0x_CD, 0x_38, 0x_5C, 0x_BA, 0x_26, 0x_C6,
		0x_85, 0x_67, 0x_A7, 0x_A1, 0x_33, 0x_91, 0x_C9, 0x_34, 0x_6F, 0x_DA, 0x_3A, 0x_AD, 0x_D2, 0x_43, 0x_88,
		0x_21, 0x_4E, 0x_2C, 0x_15, 0x_EC, 0x_4C, 0x_A2, 0x_9C, 0x_F7, 0x_EB, 0x_48, 0x_B1, 0x_98, 0x_8A, 0x_E0,
		0x_2F, 0x_DD, 0x_51, 0x_A9, 0x_D5, 0x_C8, 0x_83, 0x_58, 0x_64, 0x_31, 0x_DB, 0x_FA, 0x_CC, 0x_B9, 0x_40,
		0x_F0, 0x_93, 0x_AF, 0x_A3, 0x_AE, 0x_B8, 0x_7E, 0x_4B, 0x_66, 0x_63, 0x_5F, 0x_11, 0x_60,
	];

	helper(S, BASE, 8_842_132);
}
// endregion
// region: s_has_zeros_and_50_998_620_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_50_998_620_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_34, 0x_34, 0x_34, 0x_34, 0x_CC, 0x_9E, 0x_D2, 0x_40, 0x_6A, 0x_61, 0x_F9, 0x_78, 0x_40, 0x_3E, 0x_8A,
		0x_7B, 0x_A0, 0x_15, 0x_5C, 0x_BA, 0x_DD, 0x_6B, 0x_C7, 0x_4F, 0x_5E, 0x_BC, 0x_E4, 0x_F9, 0x_DE, 0x_61,
		0x_9B, 0x_71, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_84, 0x_B4, 0x_F3, 0x_4F, 0x_96, 0x_DD, 0x_CC, 0x_21, 0x_C9, 0x_27, 0x_4C, 0x_07, 0x_82, 0x_BB,
		0x_CD, 0x_CA, 0x_1D, 0x_9E, 0x_51, 0x_80, 0x_29, 0x_E7, 0x_B6, 0x_D2, 0x_4D, 0x_3C, 0x_7D, 0x_76, 0x_FE,
		0x_70, 0x_11, 0x_E9, 0x_BC, 0x_48, 0x_08, 0x_6D, 0x_04, 0x_3D, 0x_F5, 0x_99, 0x_88, 0x_98, 0x_5E, 0x_A4,
		0x_39, 0x_32, 0x_92, 0x_6C, 0x_F1, 0x_DE, 0x_63, 0x_A6, 0x_73, 0x_F4, 0x_7F, 0x_EF, 0x_5B, 0x_90, 0x_62,
		0x_41, 0x_B5, 0x_3E, 0x_2E, 0x_97, 0x_B1, 0x_C5, 0x_69, 0x_64, 0x_8E, 0x_24, 0x_81, 0x_C6, 0x_DA, 0x_75,
		0x_01, 0x_ED, 0x_DB, 0x_30, 0x_44, 0x_A7, 0x_55, 0x_8F, 0x_FD, 0x_E5, 0x_B8, 0x_BE, 0x_AE, 0x_E6, 0x_18,
		0x_D3, 0x_4B, 0x_25, 0x_42, 0x_05, 0x_CB, 0x_59, 0x_57, 0x_79, 0x_C7, 0x_8D, 0x_17, 0x_EE, 0x_E1, 0x_E4,
		0x_22, 0x_6F, 0x_40, 0x_03, 0x_47, 0x_B3, 0x_C0, 0x_4A, 0x_DC, 0x_A5, 0x_91, 0x_B7, 0x_54, 0x_AF, 0x_D7,
		0x_5C, 0x_3F, 0x_5F, 0x_36, 0x_A9, 0x_52, 0x_0F, 0x_F2, 0x_35, 0x_1F, 0x_B2, 0x_78, 0x_60, 0x_F6, 0x_D4,
		0x_02, 0x_9B, 0x_F7, 0x_2F, 0x_FB, 0x_68, 0x_1B, 0x_50, 0x_16, 0x_D8, 0x_66, 0x_10, 0x_A2, 0x_5D, 0x_AB,
		0x_E0, 0x_71, 0x_CE, 0x_E8, 0x_6B, 0x_61, 0x_AC, 0x_9D, 0x_33, 0x_1A, 0x_A3, 0x_28, 0x_BA, 0x_7C, 0x_AA,
		0x_D9, 0x_8A, 0x_A1, 0x_2A, 0x_C2, 0x_D0, 0x_A0, 0x_E2, 0x_F9, 0x_C4, 0x_D5, 0x_86, 0x_C3, 0x_F8, 0x_65,
		0x_1C, 0x_7B, 0x_BD, 0x_B0, 0x_72, 0x_67, 0x_19, 0x_FC, 0x_C8, 0x_15, 0x_85, 0x_D1, 0x_38,
	];

	helper(S, BASE, 50_998_620);
}
// endregion
// region: s_has_zeros_and_779_424_010_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_779_424_010_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5,
		0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5,
		0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_59, 0x_1E, 0x_97, 0x_8B, 0x_2B, 0x_C7, 0x_C8,
		0x_E8, 0x_F9, 0x_80, 0x_87, 0x_68, 0x_C7, 0x_A3, 0x_27, 0x_06, 0x_98, 0x_84, 0x_5D, 0x_2A, 0x_B6, 0x_A8,
		0x_96, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_D5, 0x_9F, 0x_D7, 0x_48, 0x_D3, 0x_19, 0x_68, 0x_14, 0x_94, 0x_05, 0x_4B, 0x_DD, 0x_1C, 0x_F9, 0x_9C,
		0x_A5, 0x_32, 0x_A4, 0x_C9, 0x_64, 0x_4D, 0x_3C, 0x_57, 0x_A1, 0x_D9, 0x_A8, 0x_90, 0x_8C, 0x_83, 0x_47,
		0x_6E, 0x_87, 0x_C2, 0x_EB, 0x_2E, 0x_FC, 0x_CA, 0x_D6, 0x_96, 0x_BC, 0x_D0, 0x_BA, 0x_5D, 0x_C6, 0x_41,
		0x_A6, 0x_4C, 0x_A3, 0x_39, 0x_CC, 0x_8F, 0x_5C, 0x_82, 0x_F7, 0x_1A, 0x_AA, 0x_91, 0x_03, 0x_C4, 0x_ED,
		0x_9B, 0x_0E, 0x_BD, 0x_77, 0x_29, 0x_E3, 0x_80, 0x_3F, 0x_AE, 0x_9D, 0x_A7, 0x_01, 0x_8B, 0x_F5, 0x_27,
		0x_E0, 0x_BE, 0x_07, 0x_73, 0x_34, 0x_1E, 0x_04, 0x_12, 0x_7E, 0x_B1, 0x_C5, 0x_3A, 0x_2F, 0x_71, 0x_0F,
		0x_E4, 0x_06, 0x_FD, 0x_61, 0x_C3, 0x_CE, 0x_B7, 0x_78, 0x_6A, 0x_2A, 0x_15, 0x_5A, 0x_85, 0x_3D, 0x_08,
		0x_49, 0x_E6, 0x_B6, 0x_59, 0x_30, 0x_EE, 0x_95, 0x_D1, 0x_31, 0x_60, 0x_E7, 0x_13, 0x_81, 0x_F4, 0x_B8,
		0x_B5, 0x_72, 0x_C8, 0x_B0, 0x_CB, 0x_7C, 0x_DA, 0x_CF, 0x_84, 0x_26, 0x_5E, 0x_36, 0x_DC, 0x_75, 0x_97,
		0x_E8, 0x_10, 0x_02, 0x_42, 0x_88, 0x_A2, 0x_99, 0x_C0, 0x_44, 0x_D4, 0x_F0, 0x_C1, 0x_5B, 0x_8E, 0x_24,
		0x_E9, 0x_B4, 0x_F6, 0x_92, 0x_35, 0x_38, 0x_4F, 0x_63, 0x_37, 0x_70, 0x_2C, 0x_9E, 0x_22, 0x_58, 0x_5F,
		0x_F3, 0x_52, 0x_16, 0x_1F, 0x_98, 0x_E1, 0x_DF, 0x_BF, 0x_21, 0x_A0, 0x_F8, 0x_B2, 0x_45, 0x_55, 0x_50,
		0x_7D, 0x_FE, 0x_86, 0x_8D, 0x_BB, 0x_7B, 0x_40, 0x_EC, 0x_1B, 0x_C7, 0x_53, 0x_F2, 0x_D2,
	];

	helper(S, BASE, 779_424_010);
}
// endregion
// region: s_has_zeros_and_6_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_6_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_5F, 0x_09, 0x_5D, 0x_50, 0x_70, 0x_78, 0x_8A, 0x_1C, 0x_02, 0x_65, 0x_D9, 0x_86, 0x_E3, 0x_83,
		0x_1A, 0x_75, 0x_E6, 0x_7B, 0x_BB, 0x_89, 0x_70, 0x_A9, 0x_34, 0x_10, 0x_A5, 0x_5D, 0x_8D, 0x_93, 0x_85,
		0x_EB, 0x_B7, 0x_F2, 0x_22, 0x_6D, 0x_D0, 0x_07, 0x_B2, 0x_51, 0x_7B, 0x_3D, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_17, 0x_14, 0x_1E, 0x_CE, 0x_A2, 0x_5F, 0x_83, 0x_2F, 0x_C4, 0x_71, 0x_1C, 0x_B1, 0x_56, 0x_D6,
		0x_3F, 0x_8F, 0x_AD, 0x_35, 0x_5B, 0x_E6, 0x_B7, 0x_86, 0x_80, 0x_C5, 0x_22, 0x_99, 0x_6C, 0x_A8, 0x_7F,
		0x_EE, 0x_E8, 0x_85, 0x_1F, 0x_95, 0x_B3, 0x_EC, 0x_CC, 0x_32, 0x_A5, 0x_43, 0x_87, 0x_F3, 0x_D9, 0x_4A,
		0x_9F, 0x_67, 0x_A4, 0x_34, 0x_A0, 0x_10, 0x_36, 0x_C3, 0x_B5, 0x_D1, 0x_AB, 0x_3A, 0x_E3, 0x_AE, 0x_BA,
		0x_D3, 0x_6E, 0x_CF, 0x_EF, 0x_82, 0x_08, 0x_73, 0x_A1, 0x_8A, 0x_2C, 0x_DA, 0x_29, 0x_89, 0x_B6, 0x_84,
		0x_ED, 0x_59, 0x_16, 0x_4E, 0x_07, 0x_81, 0x_F4, 0x_6F, 0x_42, 0x_3C, 0x_DF, 0x_61, 0x_CB, 0x_19, 0x_12,
		0x_66, 0x_92, 0x_A9, 0x_FC, 0x_37, 0x_23, 0x_2A, 0x_01, 0x_54, 0x_79, 0x_06, 0x_8E, 0x_8B, 0x_7A, 0x_39,
		0x_F9, 0x_F7, 0x_BB, 0x_A6, 0x_5C, 0x_D0, 0x_D7, 0x_CD, 0x_AF, 0x_6D, 0x_96, 0x_B2, 0x_21, 0x_64, 0x_13,
		0x_41, 0x_F2, 0x_90, 0x_49, 0x_E0, 0x_46, 0x_69, 0x_68, 0x_D2, 0x_04, 0x_02, 0x_30, 0x_47, 0x_7B, 0x_FA,
		0x_DB, 0x_78, 0x_BD, 0x_D5, 0x_D8, 0x_C7, 0x_9B, 0x_E1, 0x_D4, 0x_70, 0x_60, 0x_3E, 0x_27, 0x_65, 0x_15,
		0x_4B, 0x_AA, 0x_55, 0x_EA, 0x_DD, 0x_4C, 0x_5D, 0x_FE, 0x_58, 0x_3B, 0x_11, 0x_EB, 0x_93, 0x_9A, 0x_03,
		0x_62, 0x_BF, 0x_F8, 0x_91, 0x_A7, 0x_1B, 0x_0F, 0x_E5, 0x_FF, 0x_24, 0x_72, 0x_4F, 0x_1A, 0x_E4, 0x_1D,
		0x_9C, 0x_5A, 0x_FB, 0x_7D, 0x_52, 0x_F1, 0x_2E, 0x_48, 0x_38, 0x_B9, 0x_4D, 0x_B4, 0x_B8, 0x_C9, 0x_8C,
		0x_98, 0x_DC, 0x_05, 0x_88, 0x_25, 0x_E2, 0x_76, 0x_9D, 0x_FD, 0x_C6, 0x_AC, 0x_6B, 0x_53, 0x_CA, 0x_0E,
		0x_50, 0x_C8, 0x_3D, 0x_33, 0x_A3, 0x_45, 0x_7E, 0x_63, 0x_74, 0x_6A, 0x_E7, 0x_F0, 0x_C0, 0x_BC, 0x_28,
		0x_97, 0x_8D, 0x_F5, 0x_40, 0x_7C, 0x_C1, 0x_F6, 0x_DE, 0x_94, 0x_BE, 0x_57, 0x_18, 0x_5E, 0x_E9, 0x_75,
		0x_31, 0x_C2, 0x_77, 0x_51, 0x_9E, 0x_26, 0x_44,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_zeros_and_17_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_17_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_12, 0x_0D, 0x_C4, 0x_3F, 0x_4B, 0x_D8, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_ED, 0x_DF, 0x_FC, 0x_41, 0x_AF, 0x_46, 0x_6A, 0x_80, 0x_A9, 0x_AB, 0x_75, 0x_F8, 0x_23, 0x_19,
		0x_EE, 0x_82, 0x_12, 0x_55, 0x_BE, 0x_01, 0x_9B, 0x_87, 0x_CA, 0x_7C, 0x_5E, 0x_A7, 0x_1B, 0x_FF, 0x_4B,
		0x_F4, 0x_24, 0x_5C, 0x_F3, 0x_86, 0x_49, 0x_94, 0x_DE, 0x_D9, 0x_36, 0x_28, 0x_FE, 0x_CF, 0x_E9, 0x_D8,
		0x_13, 0x_30, 0x_E3, 0x_1A, 0x_C0, 0x_2F, 0x_35, 0x_3D, 0x_59, 0x_56, 0x_F1, 0x_2C, 0x_92, 0x_44, 0x_65,
		0x_CD, 0x_61, 0x_47, 0x_32, 0x_3C, 0x_67, 0x_8A, 0x_99, 0x_0E, 0x_11, 0x_38, 0x_CB, 0x_4E, 0x_1D, 0x_C3,
		0x_17, 0x_40, 0x_A5, 0x_8C, 0x_6F, 0x_CE, 0x_6E, 0x_D6, 0x_A4, 0x_D3, 0x_AC, 0x_6B, 0x_70, 0x_EF, 0x_B8,
		0x_52, 0x_1E, 0x_FA, 0x_D7, 0x_EB, 0x_A6, 0x_33, 0x_E6, 0x_2A, 0x_21, 0x_54, 0x_78, 0x_B2, 0x_3A, 0x_7E,
		0x_07, 0x_9F, 0x_A0, 0x_98, 0x_8D, 0x_8E, 0x_D4, 0x_A1, 0x_48, 0x_BB, 0x_27, 0x_3F, 0x_42, 0x_E8, 0x_39,
		0x_03, 0x_93, 0x_71, 0x_E4, 0x_BA, 0x_A8, 0x_29, 0x_4F, 0x_85, 0x_91, 0x_05, 0x_1F, 0x_E5, 0x_79, 0x_F7,
		0x_BC, 0x_5D, 0x_60, 0x_51, 0x_6D, 0x_25, 0x_CC, 0x_37, 0x_97, 0x_E2, 0x_73, 0x_7A, 0x_F6, 0x_D0, 0x_95,
		0x_3E, 0x_84, 0x_76, 0x_74, 0x_A2, 0x_B1, 0x_C9, 0x_C5, 0x_AA, 0x_69, 0x_31, 0x_DD, 0x_B0, 0x_FB, 0x_F2,
		0x_18, 0x_10, 0x_E0, 0x_90, 0x_AD, 0x_B5, 0x_4C, 0x_06, 0x_B4, 0x_E1, 0x_88, 0x_15, 0x_77, 0x_63, 0x_66,
		0x_4D, 0x_B3, 0x_F5, 0x_81, 0x_A3, 0x_5B, 0x_DB, 0x_64, 0x_96, 0x_EC, 0x_53, 0x_BD, 0x_C1, 0x_26, 0x_57,
		0x_9D, 0x_DC, 0x_22, 0x_16, 0x_8F, 0x_B7, 0x_D1, 0x_34, 0x_6C, 0x_02, 0x_F9, 0x_62, 0x_14, 0x_4A, 0x_08,
		0x_DA, 0x_8B, 0x_9C, 0x_58, 0x_C6, 0x_43, 0x_AE, 0x_C2, 0x_7D, 0x_2E, 0x_04, 0x_C7, 0x_C4, 0x_D5, 0x_B6,
		0x_B9, 0x_BF, 0x_45, 0x_C8, 0x_E7, 0x_EA, 0x_FD, 0x_5F, 0x_5A, 0x_83, 0x_7F, 0x_68, 0x_1C, 0x_F0, 0x_3B,
		0x_89, 0x_0F, 0x_9A, 0x_72, 0x_D2, 0x_9E, 0x_50,
	];

	helper(S, BASE, 17);
}
// endregion
// region: s_has_zeros_and_553_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_553_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_5D, 0x_E1, 0x_0A, 0x_1A, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_35, 0x_5D, 0x_97, 0x_AC, 0x_40, 0x_E7, 0x_90, 0x_D2, 0x_BB, 0x_71, 0x_9B, 0x_D4, 0x_E0, 0x_41,
		0x_CA, 0x_B5, 0x_55, 0x_E9, 0x_49, 0x_86, 0x_F4, 0x_AB, 0x_04, 0x_D0, 0x_A2, 0x_19, 0x_1D, 0x_4F, 0x_E8,
		0x_A9, 0x_60, 0x_C3, 0x_7A, 0x_33, 0x_D1, 0x_07, 0x_7D, 0x_B4, 0x_2F, 0x_99, 0x_57, 0x_28, 0x_58, 0x_14,
		0x_B7, 0x_08, 0x_D3, 0x_50, 0x_47, 0x_A5, 0x_B2, 0x_9C, 0x_16, 0x_5B, 0x_4D, 0x_D9, 0x_8D, 0x_C5, 0x_E1,
		0x_6F, 0x_CD, 0x_61, 0x_E6, 0x_59, 0x_3D, 0x_6E, 0x_79, 0x_15, 0x_7C, 0x_DC, 0x_11, 0x_76, 0x_C2, 0x_29,
		0x_75, 0x_3A, 0x_F0, 0x_6B, 0x_4E, 0x_F5, 0x_24, 0x_DF, 0x_82, 0x_AA, 0x_53, 0x_4C, 0x_7B, 0x_1C, 0x_17,
		0x_89, 0x_96, 0x_64, 0x_5A, 0x_A4, 0x_CF, 0x_AF, 0x_23, 0x_BF, 0x_FE, 0x_1A, 0x_77, 0x_0F, 0x_84, 0x_AD,
		0x_C1, 0x_B6, 0x_ED, 0x_BD, 0x_9D, 0x_93, 0x_B8, 0x_CB, 0x_5C, 0x_D8, 0x_9F, 0x_EC, 0x_FB, 0x_10, 0x_E4,
		0x_2C, 0x_C9, 0x_E5, 0x_56, 0x_78, 0x_92, 0x_FF, 0x_27, 0x_2E, 0x_95, 0x_8C, 0x_32, 0x_8B, 0x_EB, 0x_7F,
		0x_BC, 0x_F9, 0x_80, 0x_A8, 0x_4A, 0x_2A, 0x_4B, 0x_73, 0x_51, 0x_A7, 0x_65, 0x_B9, 0x_1B, 0x_FA, 0x_22,
		0x_81, 0x_A6, 0x_5F, 0x_3B, 0x_BE, 0x_8A, 0x_70, 0x_CE, 0x_67, 0x_83, 0x_87, 0x_C0, 0x_68, 0x_7E, 0x_98,
		0x_48, 0x_3C, 0x_46, 0x_06, 0x_C6, 0x_1E, 0x_C4, 0x_37, 0x_B3, 0x_63, 0x_3F, 0x_52, 0x_85, 0x_B0, 0x_DB,
		0x_EA, 0x_B1, 0x_05, 0x_DE, 0x_C7, 0x_66, 0x_F2, 0x_39, 0x_C8, 0x_CC, 0x_D6, 0x_F7, 0x_38, 0x_69, 0x_A3,
		0x_EF, 0x_8E, 0x_DA, 0x_02, 0x_88, 0x_36, 0x_D7, 0x_BA, 0x_FD, 0x_F1, 0x_9A, 0x_FC, 0x_12, 0x_91, 0x_34,
		0x_30, 0x_44, 0x_3E, 0x_6A, 0x_D5, 0x_74, 0x_E3, 0x_03, 0x_F6, 0x_6D, 0x_5E, 0x_31, 0x_45, 0x_AE, 0x_F8,
		0x_72, 0x_43, 0x_21, 0x_13, 0x_6C, 0x_DD, 0x_54, 0x_EE, 0x_18, 0x_26, 0x_8F, 0x_A0, 0x_1F, 0x_42, 0x_0E,
		0x_E2, 0x_9E, 0x_62, 0x_25, 0x_94, 0x_A1, 0x_F3,
	];

	helper(S, BASE, 553);
}
// endregion
// region: s_has_zeros_and_1_215_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_1_215_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_B3, 0x_39,
		0x_0B, 0x_42, 0x_94, 0x_67, 0x_1B, 0x_9B, 0x_35, 0x_B4, 0x_E0, 0x_85, 0x_EA, 0x_F2, 0x_1F, 0x_9F, 0x_54,
		0x_92, 0x_6B, 0x_3E, 0x_48, 0x_E8, 0x_F9, 0x_35, 0x_D9, 0x_38, 0x_64, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_C4, 0x_77, 0x_07, 0x_B3, 0x_B0, 0x_C9, 0x_89, 0x_44, 0x_EE, 0x_CC, 0x_93, 0x_72, 0x_50, 0x_53,
		0x_98, 0x_BB, 0x_A0, 0x_BF, 0x_FF, 0x_E7, 0x_F0, 0x_AD, 0x_84, 0x_52, 0x_3C, 0x_7C, 0x_F4, 0x_6B, 0x_40,
		0x_76, 0x_E9, 0x_B7, 0x_13, 0x_6F, 0x_BC, 0x_5B, 0x_D5, 0x_96, 0x_18, 0x_C2, 0x_14, 0x_01, 0x_CA, 0x_F7,
		0x_49, 0x_D8, 0x_9E, 0x_F8, 0x_4A, 0x_4C, 0x_C6, 0x_D2, 0x_DF, 0x_11, 0x_06, 0x_0E, 0x_D3, 0x_E2, 0x_A8,
		0x_C8, 0x_AC, 0x_87, 0x_FB, 0x_D1, 0x_8B, 0x_AF, 0x_6C, 0x_DE, 0x_B2, 0x_69, 0x_15, 0x_32, 0x_79, 0x_E3,
		0x_E8, 0x_65, 0x_D7, 0x_3A, 0x_66, 0x_90, 0x_29, 0x_3F, 0x_78, 0x_8A, 0x_AA, 0x_E6, 0x_9F, 0x_99, 0x_2E,
		0x_CD, 0x_80, 0x_67, 0x_EF, 0x_BD, 0x_AB, 0x_1B, 0x_C7, 0x_1D, 0x_FA, 0x_2A, 0x_23, 0x_DD, 0x_F1, 0x_81,
		0x_97, 0x_42, 0x_A2, 0x_6A, 0x_5A, 0x_B9, 0x_41, 0x_3B, 0x_ED, 0x_B6, 0x_F9, 0x_EC, 0x_25, 0x_43, 0x_63,
		0x_E0, 0x_4F, 0x_92, 0x_7D, 0x_05, 0x_7F, 0x_4E, 0x_62, 0x_5F, 0x_F6, 0x_DC, 0x_51, 0x_95, 0x_1F, 0x_24,
		0x_C0, 0x_7B, 0x_03, 0x_8E, 0x_5C, 0x_60, 0x_38, 0x_55, 0x_86, 0x_AE, 0x_58, 0x_FE, 0x_3D, 0x_47, 0x_D4,
		0x_A5, 0x_08, 0x_1E, 0x_70, 0x_1A, 0x_2C, 0x_26, 0x_D9, 0x_16, 0x_B5, 0x_31, 0x_6E, 0x_48, 0x_21, 0x_C5,
		0x_22, 0x_FD, 0x_54, 0x_9A, 0x_46, 0x_3E, 0x_27, 0x_DA, 0x_71, 0x_19, 0x_CE, 0x_F2, 0x_94, 0x_17, 0x_A7,
		0x_30, 0x_8C, 0x_12, 0x_6D, 0x_33, 0x_4D, 0x_F5, 0x_8D, 0x_59, 0x_56, 0x_64, 0x_A9, 0x_74, 0x_1C, 0x_5E,
		0x_4B, 0x_02, 0x_DB, 0x_EA, 0x_04, 0x_9B, 0x_82, 0x_B8, 0x_36, 0x_A6, 0x_91, 0x_5D, 0x_D0, 0x_C1, 0x_E5,
		0x_9D, 0x_BA, 0x_73, 0x_7E, 0x_34, 0x_A4, 0x_57, 0x_BE, 0x_A3, 0x_68, 0x_FC, 0x_8F, 0x_85, 0x_7A, 0x_61,
		0x_88, 0x_10, 0x_39, 0x_C3, 0x_E4, 0x_A1, 0x_2F, 0x_35, 0x_B4, 0x_B1, 0x_D6, 0x_F3, 0x_75, 0x_CB, 0x_45,
		0x_E1, 0x_28, 0x_CF, 0x_0F, 0x_37, 0x_83, 0x_9C,
	];

	helper(S, BASE, 1_215);
}
// endregion
// region: s_has_zeros_and_84_671_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_84_671_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88,
		0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_29, 0x_42, 0x_05, 0x_0D, 0x_A5,
		0x_40, 0x_56, 0x_EC, 0x_4E, 0x_7E, 0x_A5, 0x_D9, 0x_03, 0x_38, 0x_75, 0x_F1, 0x_E3, 0x_D3, 0x_D4, 0x_B1,
		0x_30, 0x_7E, 0x_FB, 0x_83, 0x_F9, 0x_DA, 0x_83, 0x_45, 0x_49, 0x_4E, 0x_D1, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_29, 0x_9D, 0x_79, 0x_5A, 0x_C5, 0x_13, 0x_39, 0x_83, 0x_B5, 0x_21, 0x_E4, 0x_CE, 0x_FC, 0x_D3,
		0x_C7, 0x_43, 0x_74, 0x_08, 0x_06, 0x_5E, 0x_93, 0x_7E, 0x_75, 0x_7A, 0x_46, 0x_D4, 0x_55, 0x_9C, 0x_C3,
		0x_71, 0x_3C, 0x_A1, 0x_2C, 0x_28, 0x_9F, 0x_7D, 0x_FD, 0x_FB, 0x_F9, 0x_82, 0x_12, 0x_2F, 0x_DF, 0x_A3,
		0x_11, 0x_FE, 0x_67, 0x_34, 0x_DD, 0x_9B, 0x_52, 0x_7F, 0x_6B, 0x_76, 0x_C0, 0x_F4, 0x_7B, 0x_90, 0x_BD,
		0x_80, 0x_AF, 0x_99, 0x_DC, 0x_A6, 0x_92, 0x_23, 0x_63, 0x_E9, 0x_53, 0x_69, 0x_FF, 0x_D9, 0x_B3, 0x_41,
		0x_DB, 0x_E0, 0x_91, 0x_31, 0x_D1, 0x_A0, 0x_4D, 0x_18, 0x_E7, 0x_BC, 0x_57, 0x_68, 0x_22, 0x_54, 0x_6A,
		0x_5C, 0x_87, 0x_19, 0x_7C, 0x_C2, 0x_42, 0x_8F, 0x_A2, 0x_F2, 0x_0F, 0x_8B, 0x_51, 0x_C1, 0x_24, 0x_27,
		0x_16, 0x_A4, 0x_F6, 0x_A5, 0x_86, 0x_07, 0x_BB, 0x_E2, 0x_30, 0x_1C, 0x_1F, 0x_40, 0x_8E, 0x_15, 0x_95,
		0x_E6, 0x_3B, 0x_6C, 0x_36, 0x_B6, 0x_35, 0x_2E, 0x_DE, 0x_B9, 0x_A7, 0x_BE, 0x_AB, 0x_0E, 0x_89, 0x_F5,
		0x_1E, 0x_96, 0x_D2, 0x_04, 0x_98, 0x_02, 0x_65, 0x_EC, 0x_EF, 0x_6D, 0x_72, 0x_44, 0x_25, 0x_50, 0x_70,
		0x_E3, 0x_E1, 0x_9E, 0x_F8, 0x_37, 0x_26, 0x_AE, 0x_D0, 0x_84, 0x_BA, 0x_4F, 0x_1D, 0x_EA, 0x_5B, 0x_38,
		0x_8A, 0x_B1, 0x_E5, 0x_D5, 0x_C9, 0x_62, 0x_F1, 0x_10, 0x_A8, 0x_81, 0x_EB, 0x_F0, 0x_4A, 0x_AD, 0x_61,
		0x_85, 0x_1B, 0x_C4, 0x_3A, 0x_59, 0x_14, 0x_32, 0x_B2, 0x_AA, 0x_01, 0x_B4, 0x_73, 0x_8D, 0x_4B, 0x_CC,
		0x_3E, 0x_47, 0x_05, 0x_E8, 0x_BF, 0x_B0, 0x_03, 0x_F7, 0x_17, 0x_CD, 0x_4E, 0x_C6, 0x_3F, 0x_B7, 0x_D8,
		0x_CB, 0x_D6, 0x_97, 0x_D7, 0x_6F, 0x_AC, 0x_77, 0x_66, 0x_60, 0x_58, 0x_DA, 0x_4C, 0x_FA, 0x_B8, 0x_5F,
		0x_56, 0x_ED, 0x_5D, 0x_C8, 0x_45, 0x_78, 0x_F3, 0x_6E, 0x_A9, 0x_3D, 0x_48, 0x_33, 0x_EE, 0x_1A, 0x_9A,
		0x_8C, 0x_94, 0x_CA, 0x_2A, 0x_64, 0x_49, 0x_CF,
	];

	helper(S, BASE, 84_671);
}
// endregion
// region: s_has_zeros_and_202_631_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_202_631_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED,
		0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED,
		0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_35, 0x_FB, 0x_0F, 0x_2D, 0x_37, 0x_F6, 0x_6C, 0x_D9, 0x_E0, 0x_97,
	];
	const BASE: &[u8] = &[
		0x_ED, 0x_AD, 0x_DB, 0x_35, 0x_77, 0x_AE, 0x_B2, 0x_0E, 0x_11, 0x_92, 0x_AC, 0x_A5, 0x_6E, 0x_CA, 0x_36,
		0x_60, 0x_6B, 0x_C0, 0x_4C, 0x_04, 0x_89, 0x_74, 0x_8A, 0x_FA, 0x_23, 0x_07, 0x_98, 0x_F5, 0x_85, 0x_67,
		0x_BF, 0x_A6, 0x_47, 0x_10, 0x_69, 0x_1A, 0x_9B, 0x_19, 0x_EE, 0x_65, 0x_BD, 0x_6A, 0x_97, 0x_08, 0x_F6,
		0x_1B, 0x_31, 0x_F8, 0x_94, 0x_7B, 0x_68, 0x_A3, 0x_E2, 0x_9F, 0x_5A, 0x_54, 0x_38, 0x_2F, 0x_8F, 0x_3F,
		0x_DC, 0x_D8, 0x_B9, 0x_7A, 0x_E7, 0x_B7, 0x_17, 0x_C5, 0x_4A, 0x_61, 0x_D4, 0x_C9, 0x_34, 0x_86, 0x_F0,
		0x_6F, 0x_E1, 0x_B0, 0x_1E, 0x_FB, 0x_F9, 0x_5F, 0x_E0, 0x_DE, 0x_FD, 0x_21, 0x_44, 0x_8E, 0x_F7, 0x_E5,
		0x_81, 0x_0F, 0x_8D, 0x_F1, 0x_88, 0x_52, 0x_41, 0x_D0, 0x_46, 0x_2A, 0x_1F, 0x_78, 0x_28, 0x_49, 0x_D1,
		0x_43, 0x_5E, 0x_3E, 0x_16, 0x_B3, 0x_25, 0x_66, 0x_E3, 0x_12, 0x_DF, 0x_03, 0x_53, 0x_91, 0x_4B, 0x_62,
		0x_EC, 0x_14, 0x_99, 0x_50, 0x_CB, 0x_9D, 0x_71, 0x_22, 0x_BE, 0x_7F, 0x_CE, 0x_29, 0x_5B, 0x_5D, 0x_C7,
		0x_93, 0x_1C, 0x_D3, 0x_45, 0x_A7, 0x_C8, 0x_F3, 0x_90, 0x_C6, 0x_FE, 0x_E4, 0x_FF, 0x_8C, 0x_9C, 0x_D5,
		0x_3C, 0x_3A, 0x_F2, 0x_96, 0x_42, 0x_15, 0x_70, 0x_E9, 0x_30, 0x_51, 0x_87, 0x_06, 0x_83, 0x_FC, 0x_BA,
		0x_B6, 0x_A1, 0x_AF, 0x_E6, 0x_13, 0x_56, 0x_18, 0x_B8, 0x_BC, 0x_64, 0x_DA, 0x_F4, 0x_D7, 0x_37, 0x_C4,
		0x_26, 0x_27, 0x_58, 0x_80, 0x_CF, 0x_C3, 0x_9E, 0x_A9, 0x_01, 0x_E8, 0x_76, 0x_CD, 0x_4E, 0x_D2, 0x_7D,
		0x_6D, 0x_32, 0x_6C, 0x_C1, 0x_C2, 0x_39, 0x_EB, 0x_40, 0x_3D, 0x_AB, 0x_D9, 0x_79, 0x_B5, 0x_AA, 0x_3B,
		0x_2E, 0x_63, 0x_73, 0x_24, 0x_A0, 0x_8B, 0x_55, 0x_A8, 0x_B4, 0x_48, 0x_7C, 0x_02, 0x_D6, 0x_9A, 0x_EF,
		0x_BB, 0x_EA, 0x_5C, 0x_A4, 0x_B1, 0x_72, 0x_95, 0x_CC, 0x_33, 0x_A2, 0x_4F, 0x_1D, 0x_84, 0x_2C, 0x_57,
		0x_59, 0x_05, 0x_82, 0x_DD, 0x_75, 0x_4D, 0x_7E,
	];

	helper(S, BASE, 202_631);
}
// endregion
// region: s_has_zeros_and_4_551_657_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_4_551_657_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40,
		0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40, 0x_40,
		0x_40, 0x_40, 0x_40, 0x_35, 0x_81, 0x_70, 0x_0B, 0x_89, 0x_AE, 0x_F3, 0x_9B, 0x_FA, 0x_A2, 0x_B2, 0x_A1,
		0x_18, 0x_68, 0x_2C, 0x_E6, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_C7, 0x_5C, 0x_E5, 0x_95, 0x_B4, 0x_5B, 0x_5F, 0x_1F, 0x_C0, 0x_1D, 0x_AC, 0x_74, 0x_E8, 0x_19,
		0x_64, 0x_D8, 0x_6A, 0x_0E, 0x_CC, 0x_28, 0x_37, 0x_F2, 0x_3B, 0x_E0, 0x_5E, 0x_DD, 0x_EC, 0x_15, 0x_11,
		0x_CD, 0x_BB, 0x_76, 0x_42, 0x_31, 0x_FA, 0x_08, 0x_A3, 0x_F5, 0x_38, 0x_16, 0x_83, 0x_71, 0x_63, 0x_AF,
		0x_F9, 0x_10, 0x_18, 0x_4D, 0x_C4, 0x_CE, 0x_05, 0x_92, 0x_9B, 0x_BA, 0x_87, 0x_12, 0x_C6, 0x_99, 0x_1E,
		0x_45, 0x_C3, 0x_7A, 0x_B3, 0x_9D, 0x_93, 0x_80, 0x_57, 0x_01, 0x_D1, 0x_47, 0x_33, 0x_D6, 0x_75, 0x_35,
		0x_51, 0x_67, 0x_56, 0x_F0, 0x_58, 0x_73, 0x_34, 0x_94, 0x_E1, 0x_2C, 0x_EE, 0x_A4, 0x_D3, 0x_B9, 0x_F3,
		0x_89, 0x_4F, 0x_32, 0x_ED, 0x_24, 0x_46, 0x_60, 0x_30, 0x_1A, 0x_D7, 0x_72, 0x_AB, 0x_CB, 0x_9F, 0x_14,
		0x_F7, 0x_D4, 0x_8E, 0x_A1, 0x_77, 0x_03, 0x_27, 0x_7F, 0x_7E, 0x_2A, 0x_EA, 0x_BF, 0x_02, 0x_55, 0x_62,
		0x_CF, 0x_36, 0x_4E, 0x_E2, 0x_FF, 0x_0F, 0x_8A, 0x_F6, 0x_3E, 0x_66, 0x_BD, 0x_B8, 0x_BE, 0x_96, 0x_7D,
		0x_06, 0x_DC, 0x_BC, 0x_5A, 0x_A8, 0x_91, 0x_9C, 0x_9A, 0x_86, 0x_AE, 0x_D0, 0x_F1, 0x_84, 0x_22, 0x_81,
		0x_DE, 0x_50, 0x_A0, 0x_DA, 0x_B6, 0x_61, 0x_F8, 0x_41, 0x_C9, 0x_04, 0x_39, 0x_3D, 0x_3A, 0x_69, 0x_53,
		0x_FB, 0x_C1, 0x_90, 0x_9E, 0x_44, 0x_A2, 0x_AD, 0x_98, 0x_C8, 0x_21, 0x_A6, 0x_07, 0x_4A, 0x_6C, 0x_13,
		0x_2E, 0x_E4, 0x_DB, 0x_6E, 0x_EB, 0x_C5, 0x_97, 0x_1B, 0x_70, 0x_26, 0x_DF, 0x_2F, 0x_B2, 0x_A5, 0x_8B,
		0x_A9, 0x_82, 0x_5D, 0x_43, 0x_79, 0x_B1, 0x_AA, 0x_FD, 0x_FC, 0x_1C, 0x_D2, 0x_3F, 0x_25, 0x_E6, 0x_4C,
		0x_85, 0x_4B, 0x_29, 0x_E9, 0x_48, 0x_88, 0x_EF, 0x_52, 0x_8F, 0x_8C, 0x_23, 0x_B5, 0x_17, 0x_7C, 0x_D9,
		0x_54, 0x_C2, 0x_49, 0x_E3, 0x_6D, 0x_78, 0x_B7, 0x_3C, 0x_B0, 0x_65, 0x_6B, 0x_6F, 0x_F4, 0x_8D, 0x_7B,
		0x_D5, 0x_FE, 0x_59, 0x_68, 0x_CA, 0x_A7, 0x_E7,
	];

	helper(S, BASE, 4_551_657);
}
// endregion
// region: s_has_zeros_and_54_483_019_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_54_483_019_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_B2, 0x_8D, 0x_4C, 0x_B8, 0x_09, 0x_0E,
		0x_6C, 0x_C0, 0x_A6, 0x_58, 0x_7C, 0x_07, 0x_44, 0x_72, 0x_CD, 0x_CC, 0x_5E, 0x_76, 0x_FB, 0x_4D, 0x_CD,
		0x_F8, 0x_95, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_4B, 0x_BD, 0x_B2, 0x_52, 0x_9C, 0x_B8, 0x_CB, 0x_4C, 0x_74, 0x_32, 0x_05, 0x_C5, 0x_59, 0x_DA,
		0x_58, 0x_7A, 0x_81, 0x_4F, 0x_5D, 0x_40, 0x_57, 0x_ED, 0x_04, 0x_EB, 0x_6D, 0x_8B, 0x_1A, 0x_A7, 0x_F4,
		0x_A5, 0x_F7, 0x_F3, 0x_91, 0x_FB, 0x_90, 0x_76, 0x_AA, 0x_F5, 0x_C6, 0x_D4, 0x_84, 0x_BC, 0x_E9, 0x_93,
		0x_0E, 0x_6A, 0x_FD, 0x_34, 0x_38, 0x_24, 0x_99, 0x_97, 0x_8E, 0x_6F, 0x_F8, 0x_DD, 0x_6E, 0x_E5, 0x_2F,
		0x_55, 0x_42, 0x_AC, 0x_FF, 0x_9F, 0x_02, 0x_E7, 0x_50, 0x_2E, 0x_26, 0x_7F, 0x_FE, 0x_3D, 0x_E6, 0x_66,
		0x_E8, 0x_CC, 0x_96, 0x_5B, 0x_7C, 0x_FA, 0x_AE, 0x_18, 0x_C2, 0x_77, 0x_B4, 0x_F0, 0x_86, 0x_B0, 0x_CD,
		0x_6C, 0x_B7, 0x_0F, 0x_75, 0x_68, 0x_3C, 0x_13, 0x_36, 0x_9B, 0x_BB, 0x_AF, 0x_AD, 0x_C1, 0x_43, 0x_EF,
		0x_92, 0x_7B, 0x_CE, 0x_E1, 0x_D6, 0x_49, 0x_A1, 0x_9A, 0x_4E, 0x_C4, 0x_4A, 0x_FC, 0x_9D, 0x_C0, 0x_3B,
		0x_67, 0x_45, 0x_A0, 0x_56, 0x_9E, 0x_D8, 0x_88, 0x_C8, 0x_6B, 0x_BF, 0x_72, 0x_65, 0x_E0, 0x_78, 0x_16,
		0x_14, 0x_37, 0x_73, 0x_B6, 0x_C9, 0x_21, 0x_31, 0x_79, 0x_BA, 0x_41, 0x_94, 0x_EC, 0x_5A, 0x_71, 0x_3F,
		0x_60, 0x_5E, 0x_8D, 0x_EA, 0x_5F, 0x_44, 0x_DE, 0x_EE, 0x_28, 0x_22, 0x_69, 0x_47, 0x_D1, 0x_3A, 0x_B5,
		0x_80, 0x_1E, 0x_03, 0x_CF, 0x_70, 0x_83, 0x_63, 0x_54, 0x_C7, 0x_07, 0x_17, 0x_1B, 0x_D7, 0x_8A, 0x_AB,
		0x_15, 0x_7D, 0x_48, 0x_DF, 0x_06, 0x_89, 0x_D2, 0x_1C, 0x_E4, 0x_30, 0x_D3, 0x_85, 0x_62, 0x_10, 0x_D9,
		0x_12, 0x_4D, 0x_3E, 0x_CA, 0x_8F, 0x_A9, 0x_A6, 0x_BE, 0x_E2, 0x_01, 0x_A3, 0x_1F, 0x_19, 0x_35, 0x_82,
		0x_53, 0x_C3, 0x_F9, 0x_87, 0x_2A, 0x_DC, 0x_A2, 0x_11, 0x_98, 0x_1D, 0x_29, 0x_64, 0x_51, 0x_D0, 0x_23,
		0x_39, 0x_A8, 0x_2C, 0x_E3, 0x_95, 0x_D5, 0x_F6, 0x_B3, 0x_46, 0x_B1, 0x_61, 0x_33, 0x_A4, 0x_DB, 0x_F1,
		0x_7E, 0x_27, 0x_25, 0x_8C, 0x_B9, 0x_08, 0x_5C,
	];

	helper(S, BASE, 54_483_019);
}
// endregion
// region: s_has_zeros_and_517_246_496_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_517_246_496_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0E, 0x_0E, 0x_BC, 0x_83, 0x_8F, 0x_F7, 0x_20, 0x_56, 0x_B4, 0x_D3, 0x_78, 0x_DF, 0x_8B, 0x_1F, 0x_D1,
		0x_C9, 0x_03, 0x_A1, 0x_7A, 0x_AD, 0x_C3, 0x_B6, 0x_7F, 0x_A7, 0x_1A, 0x_70, 0x_8B, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_DA, 0x_82, 0x_93, 0x_41, 0x_23, 0x_BD, 0x_5A, 0x_8B, 0x_53, 0x_0F, 0x_B3, 0x_55, 0x_3B, 0x_D7,
		0x_EC, 0x_F9, 0x_42, 0x_EF, 0x_9A, 0x_DE, 0x_D6, 0x_67, 0x_96, 0x_F2, 0x_6D, 0x_39, 0x_88, 0x_94, 0x_B0,
		0x_B4, 0x_04, 0x_29, 0x_B7, 0x_BC, 0x_CB, 0x_3C, 0x_A3, 0x_11, 0x_DD, 0x_B8, 0x_C0, 0x_18, 0x_E0, 0x_3E,
		0x_AF, 0x_85, 0x_1A, 0x_AC, 0x_8F, 0x_73, 0x_02, 0x_58, 0x_D0, 0x_50, 0x_7F, 0x_9F, 0x_FA, 0x_E5, 0x_84,
		0x_51, 0x_BE, 0x_1C, 0x_5E, 0x_D2, 0x_B9, 0x_07, 0x_95, 0x_7B, 0x_2A, 0x_5C, 0x_E3, 0x_7E, 0x_FE, 0x_86,
		0x_14, 0x_3F, 0x_87, 0x_5F, 0x_A5, 0x_83, 0x_2C, 0x_91, 0x_63, 0x_35, 0x_36, 0x_E1, 0x_22, 0x_3D, 0x_1B,
		0x_17, 0x_F7, 0x_31, 0x_D4, 0x_A4, 0x_78, 0x_EA, 0x_13, 0x_BA, 0x_1F, 0x_C5, 0x_21, 0x_E9, 0x_08, 0x_01,
		0x_54, 0x_12, 0x_37, 0x_68, 0x_43, 0x_DB, 0x_5D, 0x_1E, 0x_C2, 0x_C4, 0x_19, 0x_40, 0x_7C, 0x_75, 0x_FB,
		0x_33, 0x_30, 0x_8D, 0x_F0, 0x_66, 0x_8C, 0x_B5, 0x_FC, 0x_27, 0x_A2, 0x_4B, 0x_26, 0x_4D, 0x_A6, 0x_CC,
		0x_E8, 0x_46, 0x_E4, 0x_4A, 0x_1D, 0x_2E, 0x_AD, 0x_2F, 0x_6A, 0x_7D, 0x_03, 0x_FF, 0x_C1, 0x_60, 0x_DF,
		0x_56, 0x_F4, 0x_B2, 0x_44, 0x_98, 0x_80, 0x_9B, 0x_6B, 0x_D5, 0x_24, 0x_57, 0x_89, 0x_AA, 0x_C7, 0x_AB,
		0x_6C, 0x_92, 0x_4F, 0x_10, 0x_6F, 0x_05, 0x_C8, 0x_61, 0x_15, 0x_F8, 0x_CD, 0x_EE, 0x_79, 0x_76, 0x_32,
		0x_49, 0x_ED, 0x_B1, 0x_3A, 0x_CE, 0x_9D, 0x_F1, 0x_72, 0x_AE, 0x_7A, 0x_5B, 0x_DC, 0x_F6, 0x_FD, 0x_CA,
		0x_BF, 0x_8A, 0x_59, 0x_4C, 0x_F5, 0x_16, 0x_28, 0x_90, 0x_F3, 0x_A0, 0x_06, 0x_4E, 0x_97, 0x_BB, 0x_25,
		0x_71, 0x_64, 0x_CF, 0x_B6, 0x_9C, 0x_D1, 0x_69, 0x_47, 0x_45, 0x_8E, 0x_A1, 0x_A8, 0x_52, 0x_E7, 0x_77,
		0x_D3, 0x_EB, 0x_48, 0x_99, 0x_34, 0x_38, 0x_9E, 0x_E2, 0x_74, 0x_C6, 0x_70, 0x_62, 0x_E6, 0x_6E, 0x_C3,
		0x_C9, 0x_A9, 0x_A7, 0x_D9, 0x_81, 0x_65, 0x_D8,
	];

	helper(S, BASE, 517_246_496);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_3_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_3_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_8A, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_8A,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_40_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_40_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_09,
		0x_0C, 0x_0D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_FF, 0x_9E, 0x_FF,
		0x_9E, 0x_9E, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_FF,
	];

	helper(S, BASE, 40);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_749_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_749_in_base_2() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0C,
		0x_0A, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_19, 0x_54,
		0x_19, 0x_19, 0x_19, 0x_54, 0x_19, 0x_19, 0x_54, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_19,
	];

	helper(S, BASE, 749);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_8_171_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_8_171_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_0B,
		0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_FC, 0x_DE, 0x_FC, 0x_DE, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_DE,
	];

	helper(S, BASE, 8_171);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_85_999_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_85_999_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_0D,
		0x_09, 0x_09, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_B2, 0x_48, 0x_B2, 0x_48, 0x_48, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2,
		0x_B2, 0x_B2, 0x_48, 0x_B2, 0x_B2, 0x_B2, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_B2,
	];

	helper(S, BASE, 85_999);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_172_120_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_172_120_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0A,
		0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_20,
		0x_0D, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_69, 0x_69, 0x_69, 0x_69,
		0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69,
		0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69,
		0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_4F, 0x_69, 0x_4F, 0x_69, 0x_4F, 0x_69, 0x_69, 0x_69, 0x_69,
		0x_69, 0x_69, 0x_4F, 0x_69, 0x_4F, 0x_4F, 0x_69, 0x_69, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_4F,
	];

	helper(S, BASE, 172_120);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_1_159_950_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_1_159_950_in_base_2() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0C,
		0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_20,
		0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_11, 0x_CD, 0x_CD, 0x_CD, 0x_11,
		0x_11, 0x_CD, 0x_11, 0x_11, 0x_CD, 0x_CD, 0x_11, 0x_11, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_11, 0x_11, 0x_11,
		0x_CD,
	];
	const BASE: &[u8] = &[
		0x_CD, 0x_11,
	];

	helper(S, BASE, 1_159_950);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_74_848_510_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_74_848_510_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_20,
		0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84,
		0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_A6, 0x_84, 0x_84,
		0x_84, 0x_A6, 0x_A6, 0x_A6, 0x_84, 0x_A6, 0x_A6, 0x_84, 0x_84, 0x_84, 0x_84, 0x_A6, 0x_A6, 0x_84, 0x_84,
		0x_84, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_84,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_A6,
	];

	helper(S, BASE, 74_848_510);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_309_864_650_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_309_864_650_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_20,
		0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_E5, 0x_21, 0x_21, 0x_E5, 0x_21, 0x_21, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_E5, 0x_21, 0x_E5, 0x_21, 0x_21, 0x_21, 0x_E5, 0x_E5, 0x_21, 0x_21, 0x_E5, 0x_21,
		0x_E5, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_E5,
	];

	helper(S, BASE, 309_864_650);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_8_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_8_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_E8, 0x_E8, 0x_E8,
		0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8,
		0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_89, 0x_89,
	];
	const BASE: &[u8] = &[
		0x_E8, 0x_4F, 0x_89,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_18_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_18_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_79, 0x_EB, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_64, 0x_79,
	];

	helper(S, BASE, 18);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_326_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_326_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_2B, 0x_2B, 0x_2B,
		0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0,
		0x_4F, 0x_4F, 0x_C0, 0x_C0, 0x_C0, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_4F, 0x_D2,
	];

	helper(S, BASE, 326);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_6_825_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_6_825_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0A,
		0x_0A, 0x_09, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1,
		0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1,
		0x_38, 0x_D1, 0x_D1, 0x_38, 0x_D1, 0x_D1, 0x_D6, 0x_38, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_D1, 0x_38, 0x_D6,
	];

	helper(S, BASE, 6_825);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_76_430_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_76_430_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5,
		0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_C1, 0x_D5, 0x_9C, 0x_C1, 0x_9C, 0x_9C, 0x_C1,
		0x_C1, 0x_9C, 0x_D5, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_D5, 0x_C1, 0x_9C,
	];

	helper(S, BASE, 76_430);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_306_866_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_306_866_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC,
		0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC,
		0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_1D, 0x_62, 0x_CC, 0x_1D, 0x_62, 0x_CC, 0x_62, 0x_62, 0x_1D, 0x_1D, 0x_CC,
		0x_62,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_1D, 0x_62,
	];

	helper(S, BASE, 306_866);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_7_629_923_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_7_629_923_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0D,
		0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_C5,
		0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_91, 0x_91, 0x_E3,
		0x_91, 0x_C5, 0x_C5, 0x_91, 0x_E3, 0x_E3, 0x_C5, 0x_E3, 0x_91, 0x_E3, 0x_C5, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_91, 0x_E3,
	];

	helper(S, BASE, 7_629_923);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_49_839_362_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_49_839_362_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_0B,
		0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_09,
		0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_BB,
		0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB,
		0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_2F, 0x_BB, 0x_2F, 0x_2F, 0x_BB,
		0x_40, 0x_2F, 0x_BB, 0x_BB, 0x_BB, 0x_40, 0x_40, 0x_BB, 0x_40, 0x_BB, 0x_40, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_2F, 0x_40,
	];

	helper(S, BASE, 49_839_362);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_801_129_847_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_801_129_847_in_base_3() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_24, 0x_01, 0x_01, 0x_A0, 0x_24, 0x_A0, 0x_A0,
		0x_A0, 0x_A0, 0x_01, 0x_A0, 0x_24, 0x_A0, 0x_A0, 0x_A0, 0x_24, 0x_24, 0x_A0, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_A0, 0x_24,
	];

	helper(S, BASE, 801_129_847);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_9_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_9_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_F3,
		0x_67,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_F3, 0x_B1, 0x_97, 0x_67,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_32_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_32_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0C,
		0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A,
		0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_3C, 0x_3C,
		0x_E1,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_3C, 0x_E1, 0x_0E, 0x_26,
	];

	helper(S, BASE, 32);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_660_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_660_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0A,
		0x_09, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_20,
		0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_9A, 0x_9A, 0x_9A,
		0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A,
		0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_A2, 0x_9A, 0x_A2, 0x_2E, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_A2, 0x_2E, 0x_19, 0x_25,
	];

	helper(S, BASE, 660);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_3_188_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_3_188_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0D,
		0x_20, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0C,
		0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_3A, 0x_C8, 0x_C8, 0x_8B, 0x_8B, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_3A, 0x_8B, 0x_BE, 0x_71,
	];

	helper(S, BASE, 3_188);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_31_967_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_31_967_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0D,
		0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0D,
		0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_C4,
		0x_8E, 0x_45, 0x_8E, 0x_01, 0x_01, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_45, 0x_C4, 0x_01, 0x_58,
	];

	helper(S, BASE, 31_967);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_743_676_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_743_676_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_09,
		0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_09,
		0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F,
		0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F,
		0x_4F, 0x_4F, 0x_24, 0x_F9, 0x_D2, 0x_D2, 0x_F9, 0x_F9, 0x_D2, 0x_4F, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_24, 0x_D2, 0x_65, 0x_F9,
	];

	helper(S, BASE, 743_676);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_8_862_941_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_8_862_941_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0B,
		0x_0C, 0x_20, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_E0, 0x_6B,
		0x_B6, 0x_6B, 0x_C4, 0x_AC, 0x_B6, 0x_6B, 0x_B6, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_C4, 0x_6B, 0x_B6, 0x_E0,
	];

	helper(S, BASE, 8_862_941);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_81_055_049_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_81_055_049_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_20,
		0x_0C, 0x_20, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_06, 0x_EB, 0x_06, 0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_EB, 0x_B0, 0x_06, 0x_50,
		0x_50,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_06, 0x_F3, 0x_EB, 0x_50,
	];

	helper(S, BASE, 81_055_049);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_751_266_951_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_751_266_951_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA,
		0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA,
		0x_BA, 0x_BA, 0x_BA, 0x_DD, 0x_BA, 0x_0E, 0x_15, 0x_DD, 0x_0E, 0x_0E, 0x_BA, 0x_AF, 0x_BA, 0x_DD, 0x_BA,
		0x_0E,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_0E, 0x_AF, 0x_DD, 0x_15,
	];

	helper(S, BASE, 751_266_951);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_6_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_6_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0B,
		0x_20, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_A3, 0x_EF, 0x_BE, 0x_55, 0x_AF, 0x_B1,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_17_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_17_in_base_7() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42,
		0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42,
		0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42,
		0x_42, 0x_42, 0x_01, 0x_A5,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_FE, 0x_01, 0x_A5, 0x_82, 0x_59, 0x_21,
	];

	helper(S, BASE, 17);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_722_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_722_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_0A,
		0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_20, 0x_09,
		0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_AE, 0x_01, 0x_F1, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_62, 0x_AE, 0x_C9, 0x_99, 0x_F1, 0x_45,
	];

	helper(S, BASE, 722);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_4_758_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_4_758_in_base_7() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_09,
		0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0C, 0x_0D,
		0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78,
		0x_78, 0x_78, 0x_78, 0x_78, 0x_68, 0x_C3, 0x_C3, 0x_78, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_68, 0x_F6, 0x_30, 0x_C6, 0x_4A, 0x_C3,
	];

	helper(S, BASE, 4_758);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_87_871_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_87_871_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_09, 0x_0A,
		0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0A,
		0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_45, 0x_45, 0x_3F, 0x_84, 0x_0F, 0x_84, 0x_21, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_84, 0x_21, 0x_06, 0x_0F, 0x_3F, 0x_B3,
	];

	helper(S, BASE, 87_871);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_510_044_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_510_044_in_base_7() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0A,
		0x_0B, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_0D,
		0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_12, 0x_9E, 0x_6D, 0x_6D,
		0x_49, 0x_12, 0x_12, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_F8, 0x_6D, 0x_49, 0x_9E, 0x_74, 0x_FF,
	];

	helper(S, BASE, 510_044);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_6_810_064_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_6_810_064_in_base_7() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_20,
		0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_20,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_29,
		0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_7F, 0x_7F, 0x_7F, 0x_84, 0x_7F, 0x_E4, 0x_E4, 0x_84, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_7F, 0x_E4, 0x_69, 0x_43, 0x_EB, 0x_84,
	];

	helper(S, BASE, 6_810_064);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_46_164_134_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_46_164_134_in_base_7() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_0D,
		0x_09, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_9A,
		0x_9A, 0x_67, 0x_67, 0x_A4, 0x_FF, 0x_67, 0x_A4, 0x_9A, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_67, 0x_9A, 0x_A4, 0x_CA, 0x_60, 0x_FF, 0x_D1,
	];

	helper(S, BASE, 46_164_134);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_730_842_164_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_730_842_164_in_base_7() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_20,
		0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_EB, 0x_BE, 0x_A9, 0x_78, 0x_95, 0x_A9, 0x_EB, 0x_78, 0x_C2, 0x_C2, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_C2, 0x_EB, 0x_95, 0x_BE, 0x_78, 0x_9C,
	];

	helper(S, BASE, 730_842_164);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_9_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_9_in_base_11() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_20,
		0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_77, 0x_77, 0x_77,
		0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77,
		0x_D7,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_96, 0x_08, 0x_1C, 0x_58, 0x_AD, 0x_04, 0x_A2, 0x_56, 0x_D7, 0x_F0,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_18_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_18_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4,
		0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_3B, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_3B, 0x_16, 0x_8B, 0x_23, 0x_E8, 0x_11, 0x_FC, 0x_D7, 0x_03, 0x_BC,
	];

	helper(S, BASE, 18);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_916_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_916_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_AB, 0x_8F, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_D0, 0x_FF, 0x_34, 0x_44, 0x_D1, 0x_8F, 0x_AB, 0x_64, 0x_5A, 0x_1A,
	];

	helper(S, BASE, 916);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_5_219_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_5_219_in_base_11() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0D,
		0x_0C, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_45, 0x_84, 0x_17, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_CD, 0x_17, 0x_32, 0x_45, 0x_47, 0x_76, 0x_C3, 0x_35, 0x_4B, 0x_BC, 0x_84,
	];

	helper(S, BASE, 5_219);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_45_386_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_45_386_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_8D, 0x_67, 0x_67, 0x_67, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_67, 0x_92, 0x_8D, 0x_E4, 0x_DD, 0x_3D, 0x_5B, 0x_12, 0x_17, 0x_40,
	];

	helper(S, BASE, 45_386);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_870_083_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_870_083_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_85, 0x_90, 0x_90,
		0x_E1, 0x_99, 0x_85,
	];
	const BASE: &[u8] = &[
		0x_71, 0x_06, 0x_E8, 0x_14, 0x_90, 0x_85, 0x_F1, 0x_E1, 0x_99, 0x_CB, 0x_DE,
	];

	helper(S, BASE, 870_083);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_4_580_327_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_4_580_327_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_4B, 0x_4B, 0x_4B, 0x_CE, 0x_DE, 0x_50, 0x_6A, 0x_CE, 0x_3C, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_26, 0x_CE, 0x_77, 0x_50, 0x_89, 0x_DE, 0x_C0, 0x_D1, 0x_6A, 0x_3C,
	];

	helper(S, BASE, 4_580_327);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_89_582_807_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_89_582_807_in_base_11() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0A,
		0x_20, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4,
		0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_2F, 0x_A5, 0x_A5, 0x_0F, 0x_A5, 0x_4D, 0x_BC, 0x_A5,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_D7, 0x_0F, 0x_F2, 0x_2F, 0x_D6, 0x_A5, 0x_2A, 0x_BC, 0x_4D, 0x_3A,
	];

	helper(S, BASE, 89_582_807);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_869_920_464_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_869_920_464_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0C,
		0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_B7, 0x_B7, 0x_B7, 0x_B7,
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7,
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_F0, 0x_B7, 0x_6F, 0x_B7, 0x_29, 0x_5E, 0x_8B, 0x_B5,
		0x_34,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_8B, 0x_62, 0x_B5, 0x_F0, 0x_29, 0x_34, 0x_6F, 0x_5E, 0x_38, 0x_24,
	];

	helper(S, BASE, 869_920_464);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_1_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_1_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_BE, 0x_BE,
		0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_BE, 0x_71, 0x_8C, 0x_B0, 0x_BA, 0x_5B, 0x_EF, 0x_AD, 0x_4E, 0x_8A, 0x_2E, 0x_5F, 0x_54,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_35_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_35_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0A,
		0x_0C, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25,
		0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25,
		0x_25, 0x_25, 0x_25, 0x_30, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_9F, 0x_30, 0x_E2, 0x_29, 0x_64, 0x_6C, 0x_92, 0x_97, 0x_32, 0x_48, 0x_3B, 0x_26,
	];

	helper(S, BASE, 35);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_955_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_955_in_base_13() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0C,
		0x_09, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_20,
		0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3,
		0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_02, 0x_A1, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_C6, 0x_D5, 0x_BA, 0x_50, 0x_02, 0x_53, 0x_DC, 0x_A1, 0x_D0, 0x_C5, 0x_67, 0x_EC,
	];

	helper(S, BASE, 955);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_2_038_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_2_038_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0C,
		0x_09, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0B,
		0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF,
		0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF,
		0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_8B, 0x_BF, 0x_AC,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_DD, 0x_1E, 0x_8F, 0x_E5, 0x_34, 0x_ED, 0x_CC, 0x_C3, 0x_84, 0x_AC, 0x_B3, 0x_8B,
	];

	helper(S, BASE, 2_038);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_60_134_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_60_134_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0B,
		0x_20, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0C,
		0x_09, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_78, 0x_78, 0x_78, 0x_78,
		0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_04, 0x_BD, 0x_4B, 0x_DD, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_BD, 0x_04, 0x_1F, 0x_4B, 0x_C0, 0x_38, 0x_81, 0x_53, 0x_F7, 0x_DD, 0x_4F, 0x_B6,
	];

	helper(S, BASE, 60_134);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_270_196_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_270_196_in_base_13() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0A,
		0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_C3, 0x_C3,
		0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3,
		0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_16, 0x_F5, 0x_D3, 0x_68, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_67, 0x_63, 0x_AD, 0x_8D, 0x_F5, 0x_DD, 0x_57, 0x_78, 0x_16, 0x_68, 0x_3C, 0x_D3,
	];

	helper(S, BASE, 270_196);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_1_305_699_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_1_305_699_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0A,
		0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_A0, 0x_36, 0x_A4, 0x_51, 0x_FA, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_52, 0x_FC, 0x_A0, 0x_51, 0x_73, 0x_36, 0x_D4, 0x_49, 0x_A4, 0x_13, 0x_B3, 0x_A5,
	];

	helper(S, BASE, 1_305_699);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_49_000_599_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_49_000_599_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0D,
		0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_3B, 0x_3B,
		0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B,
		0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3F, 0x_75, 0x_9D, 0x_0E, 0x_1B, 0x_DC, 0x_DF,
	];
	const BASE: &[u8] = &[
		0x_3B, 0x_75, 0x_37, 0x_6E, 0x_DC, 0x_1B, 0x_83, 0x_CB, 0x_0E, 0x_49, 0x_3F, 0x_DF, 0x_9D,
	];

	helper(S, BASE, 49_000_599);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_120_013_720_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_120_013_720_in_base_13() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_A7,
		0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_C8, 0x_38, 0x_38, 0x_AF, 0x_A7, 0x_25, 0x_96, 0x_A9,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_C8, 0x_25, 0x_AF, 0x_96, 0x_F8, 0x_69, 0x_83, 0x_A9, 0x_65, 0x_70, 0x_38, 0x_19,
	];

	helper(S, BASE, 120_013_720);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_9_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_9_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3,
		0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3,
		0x_D3, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_21, 0x_27, 0x_2A, 0x_99, 0x_1C, 0x_95, 0x_EF, 0x_F6, 0x_5D, 0x_B0, 0x_37, 0x_C6, 0x_8C, 0x_98,
		0x_F8, 0x_DE, 0x_E3, 0x_8E,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_34_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_34_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_20,
		0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_09,
		0x_0A, 0x_0A, 0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_AF, 0x_AF, 0x_AF,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_98, 0x_AC,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_98, 0x_67, 0x_54, 0x_DE, 0x_28, 0x_E4, 0x_8E, 0x_6D, 0x_C5, 0x_90, 0x_06, 0x_D5, 0x_C8, 0x_FE,
		0x_AC, 0x_A8, 0x_9B, 0x_17,
	];

	helper(S, BASE, 34);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_290_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_290_in_base_19() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84,
		0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_02, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_7E, 0x_B9, 0x_BA, 0x_3E, 0x_6E, 0x_50, 0x_8B, 0x_05, 0x_8C, 0x_B8, 0x_77, 0x_E3, 0x_59, 0x_7D,
		0x_02, 0x_35, 0x_66, 0x_9E,
	];

	helper(S, BASE, 290);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_1_961_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_1_961_in_base_19() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0C,
		0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0A,
		0x_09, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D,
		0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_6C, 0x_36,
		0x_5D,
	];
	const BASE: &[u8] = &[
		0x_7D, 0x_D3, 0x_12, 0x_D4, 0x_5D, 0x_6C, 0x_02, 0x_4C, 0x_36, 0x_03, 0x_41, 0x_73, 0x_DB, 0x_AA, 0x_75,
		0x_C4, 0x_63, 0x_93, 0x_E7,
	];

	helper(S, BASE, 1_961);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_64_125_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_64_125_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_D4, 0x_D4, 0x_D4, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_84, 0x_8C, 0x_48, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_69, 0x_86, 0x_E4, 0x_F3, 0x_5E, 0x_8C, 0x_FA, 0x_5D, 0x_84, 0x_FE, 0x_58, 0x_48, 0x_EA, 0x_14,
		0x_3E, 0x_77, 0x_B6, 0x_B0,
	];

	helper(S, BASE, 64_125);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_904_280_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_904_280_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0A,
		0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_59, 0x_59,
		0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_B0, 0x_42, 0x_BE, 0x_42, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_EE, 0x_D1, 0x_2F, 0x_B3, 0x_4D, 0x_B0, 0x_1D, 0x_C0, 0x_68, 0x_92, 0x_AE, 0x_43, 0x_3F, 0x_1A,
		0x_BE, 0x_6C, 0x_42, 0x_CD,
	];

	helper(S, BASE, 904_280);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_5_145_556_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_5_145_556_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_09,
		0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_09,
		0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_D9, 0x_CD, 0x_BE, 0x_90, 0x_99, 0x_13,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_CD, 0x_D9, 0x_90, 0x_14, 0x_B8, 0x_4A, 0x_89, 0x_5B, 0x_BE, 0x_A2, 0x_99, 0x_64, 0x_AB, 0x_13,
		0x_BC, 0x_B3, 0x_A7, 0x_B7,
	];

	helper(S, BASE, 5_145_556);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_73_936_844_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_73_936_844_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_09,
		0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0A,
		0x_0A, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_8C, 0x_18, 0x_D3, 0x_16, 0x_18, 0x_C4, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_8C, 0x_98, 0x_C4, 0x_B3, 0x_32, 0x_16, 0x_A5, 0x_9D, 0x_4F, 0x_18, 0x_B4, 0x_FD, 0x_5C, 0x_84,
		0x_AD, 0x_D3, 0x_D4, 0x_9B,
	];

	helper(S, BASE, 73_936_844);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_168_574_374_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_168_574_374_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_09,
		0x_09, 0x_0B, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_EE, 0x_49, 0x_A1, 0x_B7, 0x_40, 0x_D8,
		0x_04,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_A1, 0x_40, 0x_EE, 0x_3E, 0x_45, 0x_C6, 0x_A9, 0x_21, 0x_04, 0x_B7, 0x_49, 0x_A0, 0x_5F, 0x_4A,
		0x_25, 0x_E9, 0x_B8, 0x_A6,
	];

	helper(S, BASE, 168_574_374);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_8_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_8_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_09,
		0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_EF, 0x_EF, 0x_EF,
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF,
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_31, 0x_FC, 0x_92, 0x_D8, 0x_23, 0x_4F, 0x_27, 0x_2F, 0x_EB, 0x_8C, 0x_F4, 0x_62, 0x_E0, 0x_88,
		0x_1D, 0x_70, 0x_64, 0x_DA, 0x_F2, 0x_A8, 0x_AA, 0x_F9, 0x_1C, 0x_5E, 0x_21, 0x_C7, 0x_54, 0x_4A, 0x_B6,
		0x_ED, 0x_59, 0x_60, 0x_E9, 0x_D4, 0x_A0, 0x_6F, 0x_24, 0x_53, 0x_9D, 0x_95, 0x_E6,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_46_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_46_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32,
		0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32,
		0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_57, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_57, 0x_73, 0x_DA, 0x_C6, 0x_1F, 0x_AA, 0x_80, 0x_F3, 0x_FA, 0x_E2, 0x_F8, 0x_29, 0x_CB, 0x_E0,
		0x_D5, 0x_71, 0x_AB, 0x_D3, 0x_7F, 0x_A0, 0x_F5, 0x_B5, 0x_92, 0x_9B, 0x_FF, 0x_ED, 0x_E7, 0x_53, 0x_83,
		0x_98, 0x_94, 0x_0F, 0x_EC, 0x_03, 0x_84, 0x_5A, 0x_1E, 0x_A9, 0x_60, 0x_99, 0x_C0,
	];

	helper(S, BASE, 46);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_912_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_912_in_base_42() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0B,
		0x_0A, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_0C,
		0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_11, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_CC, 0x_DC, 0x_21, 0x_37, 0x_64, 0x_18, 0x_5C, 0x_E4, 0x_87, 0x_7A, 0x_4C, 0x_CE, 0x_16, 0x_39,
		0x_E3, 0x_D4, 0x_4E, 0x_F6, 0x_59, 0x_68, 0x_11, 0x_D7, 0x_08, 0x_BA, 0x_2F, 0x_9A, 0x_0E, 0x_D9, 0x_D3,
		0x_FD, 0x_8C, 0x_EA, 0x_62, 0x_0F, 0x_52, 0x_66, 0x_6D, 0x_27, 0x_B5, 0x_60, 0x_F4,
	];

	helper(S, BASE, 912);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_5_344_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_5_344_in_base_42() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0B, 0x_0C,
		0x_09, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_0B,
		0x_2B, 0x_2B, 0x_2B, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2,
		0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_06, 0x_58, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_A2, 0x_58, 0x_5F, 0x_06, 0x_47, 0x_D3, 0x_97, 0x_8B, 0x_D0, 0x_27, 0x_F8, 0x_EC, 0x_1D, 0x_DC, 0x_76,
		0x_5B, 0x_A1, 0x_CC, 0x_77, 0x_71, 0x_5E, 0x_50, 0x_DB, 0x_B2, 0x_4E, 0x_8F, 0x_D9, 0x_D1, 0x_33, 0x_E8,
		0x_D5, 0x_A4, 0x_E2, 0x_AA, 0x_EA, 0x_92, 0x_C0, 0x_49, 0x_96, 0x_2E, 0x_43, 0x_F7,
	];

	helper(S, BASE, 5_344);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_20_038_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_20_038_in_base_42() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_0B,
		0x_0D, 0x_0A, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_AF, 0x_67, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_88, 0x_7E, 0x_B0, 0x_2A, 0x_05, 0x_DA, 0x_6A, 0x_4B, 0x_F1, 0x_AD, 0x_AF, 0x_C7, 0x_81, 0x_F9,
		0x_67, 0x_53, 0x_22, 0x_DF, 0x_FD, 0x_CF, 0x_E4, 0x_4D, 0x_F0, 0x_DE, 0x_4A, 0x_BC, 0x_13, 0x_CB, 0x_15,
		0x_C5, 0x_8B, 0x_17, 0x_5B, 0x_80, 0x_73, 0x_23, 0x_9B, 0x_1C, 0x_6B, 0x_78, 0x_36,
	];

	helper(S, BASE, 20_038);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_155_531_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_155_531_in_base_42() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05,
		0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05,
		0x_05, 0x_05, 0x_05, 0x_71, 0x_1B, 0x_5E, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_CA, 0x_71, 0x_D0, 0x_1B, 0x_7B, 0x_10, 0x_5E, 0x_55, 0x_9F, 0x_D8, 0x_9C, 0x_E9, 0x_B1, 0x_78,
		0x_74, 0x_73, 0x_CE, 0x_94, 0x_53, 0x_2F, 0x_5A, 0x_3B, 0x_86, 0x_A8, 0x_DE, 0x_61, 0x_FB, 0x_C2, 0x_8E,
		0x_F9, 0x_51, 0x_92, 0x_80, 0x_82, 0x_0F, 0x_96, 0x_07, 0x_B9, 0x_6B, 0x_40, 0x_F6,
	];

	helper(S, BASE, 155_531);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_3_619_270_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_3_619_270_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0A,
		0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_67,
		0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_5A,
		0x_7A, 0x_BC, 0x_CC, 0x_6D,
	];
	const BASE: &[u8] = &[
		0x_67, 0x_5A, 0x_C9, 0x_33, 0x_6D, 0x_36, 0x_7A, 0x_B9, 0x_E1, 0x_8B, 0x_FC, 0x_71, 0x_C3, 0x_7D, 0x_17,
		0x_EA, 0x_84, 0x_2C, 0x_43, 0x_9B, 0x_C4, 0x_1F, 0x_C5, 0x_FA, 0x_AE, 0x_D4, 0x_79, 0x_B0, 0x_E3, 0x_6A,
		0x_95, 0x_CC, 0x_94, 0x_6B, 0x_EE, 0x_BC, 0x_50, 0x_EF, 0x_E2, 0x_B2, 0x_F8, 0x_0F,
	];

	helper(S, BASE, 3_619_270);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_51_007_989_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_51_007_989_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_7A, 0x_7A, 0x_9B, 0x_07, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_3F, 0x_24, 0x_07, 0x_06, 0x_A5, 0x_BC, 0x_47, 0x_EA, 0x_8D, 0x_FE, 0x_5D, 0x_EC, 0x_28, 0x_F3,
		0x_26, 0x_7A, 0x_65, 0x_7D, 0x_4A, 0x_9B, 0x_6A, 0x_66, 0x_75, 0x_10, 0x_D9, 0x_04, 0x_D5, 0x_51, 0x_D4,
		0x_61, 0x_22, 0x_AA, 0x_C1, 0x_82, 0x_12, 0x_3E, 0x_A9, 0x_97, 0x_50, 0x_DD, 0x_F5,
	];

	helper(S, BASE, 51_007_989);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_984_933_008_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_984_933_008_in_base_42() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_0A,
		0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_0B,
		0x_0A, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_18, 0x_F8, 0x_F8, 0x_AB, 0x_A1, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_A1, 0x_6F, 0x_7B, 0x_AB, 0x_1B, 0x_24, 0x_18, 0x_08, 0x_9E, 0x_C9, 0x_E9, 0x_A5, 0x_66, 0x_62,
		0x_C4, 0x_53, 0x_70, 0x_F4, 0x_C8, 0x_33, 0x_A7, 0x_F8, 0x_D2, 0x_B8, 0x_21, 0x_F5, 0x_AE, 0x_8E, 0x_ED,
		0x_E1, 0x_B3, 0x_4F, 0x_D1, 0x_CE, 0x_57, 0x_14, 0x_17, 0x_3E, 0x_D6, 0x_6A, 0x_FC,
	];

	helper(S, BASE, 984_933_008);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_6_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_6_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0D,
		0x_0D, 0x_0B, 0x_09, 0x_20, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_55, 0x_4D, 0x_C0, 0x_F7, 0x_DB, 0x_36, 0x_08, 0x_78, 0x_E8, 0x_49, 0x_0E, 0x_EB, 0x_79, 0x_84,
		0x_72, 0x_97, 0x_50, 0x_FB, 0x_27, 0x_76, 0x_C7, 0x_E1, 0x_4C, 0x_A6, 0x_FE, 0x_3B, 0x_A0, 0x_68, 0x_9B,
		0x_3D, 0x_10, 0x_B7, 0x_89, 0x_C6, 0x_33, 0x_65, 0x_DF, 0x_39, 0x_BB, 0x_98, 0x_A9, 0x_A3, 0x_41, 0x_BA,
		0x_43, 0x_3A, 0x_B6, 0x_05, 0x_A2, 0x_F0, 0x_B9, 0x_A1, 0x_D0, 0x_5C, 0x_2F, 0x_BF, 0x_5E, 0x_63, 0x_1F,
		0x_B3, 0x_1B, 0x_7C, 0x_87, 0x_22, 0x_AB, 0x_C9, 0x_17, 0x_DA, 0x_E4, 0x_57, 0x_E2, 0x_56,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_55_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_55_in_base_73() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_13, 0x_E0, 0x_29, 0x_F1, 0x_A9, 0x_C0, 0x_F7, 0x_27, 0x_F2, 0x_C6, 0x_05, 0x_DD, 0x_03, 0x_E2,
		0x_AD, 0x_52, 0x_2C, 0x_25, 0x_9E, 0x_56, 0x_4D, 0x_34, 0x_C3, 0x_A1, 0x_BD, 0x_17, 0x_7A, 0x_80, 0x_23,
		0x_1B, 0x_48, 0x_E7, 0x_A4, 0x_BC, 0x_4E, 0x_1C, 0x_14, 0x_B6, 0x_96, 0x_06, 0x_9C, 0x_0F, 0x_D7, 0x_9D,
		0x_D1, 0x_53, 0x_BF, 0x_74, 0x_7D, 0x_6D, 0x_12, 0x_9A, 0x_69, 0x_3E, 0x_6F, 0x_5B, 0x_64, 0x_78, 0x_D3,
		0x_81, 0x_DB, 0x_8A, 0x_DE, 0x_F0, 0x_36, 0x_45, 0x_D8, 0x_AE, 0x_E6, 0x_F6, 0x_59, 0x_01,
	];

	helper(S, BASE, 55);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_781_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_781_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0C, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_E3, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_56, 0x_BC, 0x_B6, 0x_38, 0x_61, 0x_E6, 0x_30, 0x_CF, 0x_CD, 0x_E3, 0x_47, 0x_9B, 0x_3D, 0x_2E,
		0x_BA, 0x_46, 0x_83, 0x_42, 0x_4C, 0x_3A, 0x_7A, 0x_EC, 0x_A2, 0x_D7, 0x_7B, 0x_12, 0x_36, 0x_92, 0x_25,
		0x_5D, 0x_B1, 0x_26, 0x_AA, 0x_14, 0x_8B, 0x_60, 0x_5E, 0x_59, 0x_80, 0x_E9, 0x_97, 0x_02, 0x_FB, 0x_34,
		0x_32, 0x_F2, 0x_27, 0x_89, 0x_F0, 0x_74, 0x_FC, 0x_5A, 0x_A5, 0x_16, 0x_21, 0x_5F, 0x_D2, 0x_C5, 0x_A3,
		0x_E4, 0x_C7, 0x_F5, 0x_7D, 0x_05, 0x_C9, 0x_1B, 0x_D3, 0x_A4, 0x_10, 0x_51, 0x_EB, 0x_AB,
	];

	helper(S, BASE, 781);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_9_881_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_9_881_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2,
		0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2,
		0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_82, 0x_71,
		0x_42,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_82, 0x_D0, 0x_FB, 0x_1C, 0x_28, 0x_88, 0x_DF, 0x_BD, 0x_45, 0x_19, 0x_D6, 0x_8D, 0x_A7, 0x_6A,
		0x_B9, 0x_38, 0x_F7, 0x_94, 0x_41, 0x_8F, 0x_C4, 0x_02, 0x_B0, 0x_5C, 0x_BF, 0x_42, 0x_13, 0x_95, 0x_3C,
		0x_64, 0x_8A, 0x_CA, 0x_EB, 0x_32, 0x_29, 0x_ED, 0x_90, 0x_AE, 0x_DE, 0x_E4, 0x_B8, 0x_C5, 0x_34, 0x_C1,
		0x_84, 0x_59, 0x_F4, 0x_62, 0x_B2, 0x_06, 0x_69, 0x_D1, 0x_14, 0x_6C, 0x_6D, 0x_E8, 0x_3D, 0x_B4, 0x_26,
		0x_CF, 0x_4A, 0x_71, 0x_E6, 0x_27, 0x_7B, 0x_22, 0x_98, 0x_76, 0x_55, 0x_0E, 0x_4B, 0x_3B,
	];

	helper(S, BASE, 9_881);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_72_940_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_72_940_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D,
		0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_66,
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66,
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_BF, 0x_90, 0x_BF,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_60, 0x_D8, 0x_44, 0x_69, 0x_12, 0x_BA, 0x_7A, 0x_64, 0x_C2, 0x_74, 0x_A6, 0x_06, 0x_BF, 0x_B0,
		0x_43, 0x_A8, 0x_7C, 0x_37, 0x_45, 0x_77, 0x_A5, 0x_FA, 0x_84, 0x_DE, 0x_C1, 0x_42, 0x_3C, 0x_46, 0x_C0,
		0x_9A, 0x_6B, 0x_D4, 0x_3A, 0x_EA, 0x_02, 0x_78, 0x_C8, 0x_23, 0x_1D, 0x_E7, 0x_AA, 0x_6E, 0x_F7, 0x_5E,
		0x_58, 0x_7E, 0x_8F, 0x_CD, 0x_FD, 0x_90, 0x_E9, 0x_98, 0x_59, 0x_E2, 0x_D1, 0x_F4, 0x_9E, 0x_B5, 0x_8C,
		0x_F2, 0x_25, 0x_6D, 0x_BC, 0x_6C, 0x_EF, 0x_3F, 0x_E6, 0x_11, 0x_61, 0x_8E, 0x_85, 0x_88,
	];

	helper(S, BASE, 72_940);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_426_589_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_426_589_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_20,
		0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0C,
		0x_0C, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8,
		0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_32, 0x_79,
		0x_BD, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_32, 0x_A8, 0x_BD, 0x_B3, 0x_14, 0x_12, 0x_79, 0x_DB, 0x_AA, 0x_F1, 0x_8E, 0x_5A, 0x_6C, 0x_86,
		0x_F5, 0x_84, 0x_1A, 0x_21, 0x_A9, 0x_E5, 0x_69, 0x_10, 0x_D3, 0x_68, 0x_03, 0x_66, 0x_BB, 0x_04, 0x_5F,
		0x_D9, 0x_4A, 0x_52, 0x_54, 0x_CF, 0x_89, 0x_16, 0x_FB, 0x_C3, 0x_60, 0x_90, 0x_D1, 0x_BF, 0x_2E, 0x_5B,
		0x_B0, 0x_6D, 0x_D7, 0x_42, 0x_7D, 0x_D2, 0x_4E, 0x_29, 0x_36, 0x_28, 0x_DC, 0x_95, 0x_41, 0x_3E, 0x_8D,
		0x_07, 0x_40, 0x_E3, 0x_37, 0x_4F, 0x_63, 0x_64, 0x_7A, 0x_F9, 0x_DF, 0x_CB, 0x_7E, 0x_FD,
	];

	helper(S, BASE, 426_589);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_7_839_611_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_7_839_611_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_20,
		0x_09, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_0B,
		0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_98,
		0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98,
		0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_B1, 0x_AA, 0x_87, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_82, 0x_DA, 0x_28, 0x_46, 0x_D8, 0x_1C, 0x_DD, 0x_87, 0x_96, 0x_65, 0x_AA, 0x_57, 0x_04, 0x_70,
		0x_90, 0x_11, 0x_F1, 0x_72, 0x_94, 0x_B1, 0x_1D, 0x_25, 0x_91, 0x_B9, 0x_78, 0x_3F, 0x_18, 0x_A0, 0x_34,
		0x_2F, 0x_55, 0x_8A, 0x_6A, 0x_88, 0x_23, 0x_D7, 0x_AF, 0x_40, 0x_8F, 0x_FE, 0x_50, 0x_C0, 0x_C7, 0x_24,
		0x_64, 0x_D3, 0x_F4, 0x_74, 0x_A2, 0x_BC, 0x_5F, 0x_E0, 0x_A6, 0x_68, 0x_83, 0x_5A, 0x_A4, 0x_A5, 0x_89,
		0x_6F, 0x_AB, 0x_8C, 0x_69, 0x_16, 0x_9A, 0x_B6, 0x_E9, 0x_05, 0x_43, 0x_C5, 0x_E7, 0x_39,
	];

	helper(S, BASE, 7_839_611);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_29_087_018_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_29_087_018_in_base_73() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0D,
		0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_A2, 0x_A2, 0x_96, 0x_19, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_A2, 0x_4E, 0x_65, 0x_FC, 0x_A7, 0x_F6, 0x_DE, 0x_73, 0x_51, 0x_9F, 0x_60, 0x_FF, 0x_B2, 0x_97,
		0x_61, 0x_6A, 0x_90, 0x_19, 0x_E1, 0x_DA, 0x_79, 0x_48, 0x_1B, 0x_F7, 0x_69, 0x_B5, 0x_3B, 0x_BE, 0x_D9,
		0x_F0, 0x_24, 0x_B1, 0x_91, 0x_59, 0x_1E, 0x_BD, 0x_E4, 0x_9E, 0x_A4, 0x_F5, 0x_94, 0x_81, 0x_FD, 0x_EA,
		0x_28, 0x_10, 0x_A8, 0x_80, 0x_AB, 0x_EF, 0x_AC, 0x_55, 0x_75, 0x_E5, 0x_29, 0x_96, 0x_AF, 0x_33, 0x_6C,
		0x_CA, 0x_C9, 0x_71, 0x_B0, 0x_CF, 0x_3D, 0x_37, 0x_17, 0x_3F, 0x_D3, 0x_6F, 0x_32, 0x_CB,
	];

	helper(S, BASE, 29_087_018);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_389_829_363_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_389_829_363_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0C,
		0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0,
		0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_4C, 0x_9D, 0x_72, 0x_2F, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_E5, 0x_EC, 0x_B8, 0x_61, 0x_C9, 0x_72, 0x_BD, 0x_04, 0x_5C, 0x_55, 0x_C3, 0x_24, 0x_4C, 0x_14,
		0x_44, 0x_B0, 0x_15, 0x_FC, 0x_18, 0x_9C, 0x_74, 0x_DD, 0x_DF, 0x_5B, 0x_71, 0x_3A, 0x_1C, 0x_E3, 0x_3B,
		0x_6B, 0x_90, 0x_2F, 0x_F7, 0x_4B, 0x_E4, 0x_F0, 0x_C1, 0x_AC, 0x_1B, 0x_7E, 0x_39, 0x_58, 0x_7B, 0x_D2,
		0x_7D, 0x_2A, 0x_F8, 0x_81, 0x_A1, 0x_F5, 0x_33, 0x_F3, 0x_9D, 0x_89, 0x_91, 0x_32, 0x_75, 0x_01, 0x_9E,
		0x_5A, 0x_50, 0x_3E, 0x_05, 0x_AB, 0x_94, 0x_8A, 0x_A6, 0x_DB, 0x_A3, 0x_ED, 0x_B2, 0x_B5,
	];

	helper(S, BASE, 389_829_363);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_7_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_7_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0A,
		0x_20, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_5E, 0x_5E, 0x_5E,
		0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_3B, 0x_75, 0x_C8, 0x_39, 0x_6D, 0x_A0, 0x_B2, 0x_AE, 0x_24, 0x_E2, 0x_40, 0x_85, 0x_D0, 0x_8A,
		0x_7B, 0x_13, 0x_5C, 0x_E1, 0x_54, 0x_90, 0x_CF, 0x_18, 0x_C4, 0x_48, 0x_5D, 0x_79, 0x_0E, 0x_E7, 0x_77,
		0x_67, 0x_E5, 0x_38, 0x_CE, 0x_FF, 0x_21, 0x_4A, 0x_FD, 0x_C2, 0x_C7, 0x_99, 0x_E3, 0x_43, 0x_D3, 0x_DE,
		0x_A5, 0x_62, 0x_AD, 0x_17, 0x_56, 0x_C5, 0x_9B, 0x_9E, 0x_37, 0x_F8, 0x_6B, 0x_BF, 0x_72, 0x_BD, 0x_3E,
		0x_02, 0x_2C, 0x_95, 0x_E4, 0x_91, 0x_69, 0x_1C, 0x_F7, 0x_9F, 0x_DF, 0x_A4, 0x_C0, 0x_14, 0x_45, 0x_27,
		0x_42, 0x_35, 0x_DC, 0x_DB, 0x_C1, 0x_EE, 0x_9D, 0x_59, 0x_61, 0x_64, 0x_12, 0x_4B, 0x_F1, 0x_36, 0x_EF,
		0x_6C, 0x_C6, 0x_92, 0x_15, 0x_A9, 0x_BB, 0x_1E, 0x_A7, 0x_D6, 0x_71, 0x_30, 0x_1F, 0x_1A, 0x_F6, 0x_82,
		0x_B5, 0x_3C, 0x_BE, 0x_63, 0x_1D, 0x_04, 0x_B4, 0x_6F,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_37_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_37_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36,
		0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36,
		0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_81,
	];
	const BASE: &[u8] = &[
		0x_36, 0x_DC, 0x_EF, 0x_84, 0x_4B, 0x_FD, 0x_12, 0x_A1, 0x_40, 0x_92, 0x_D2, 0x_7E, 0x_6B, 0x_13, 0x_7B,
		0x_31, 0x_8C, 0x_3B, 0x_7C, 0x_EC, 0x_51, 0x_B5, 0x_83, 0x_77, 0x_6A, 0x_C6, 0x_69, 0x_57, 0x_32, 0x_BB,
		0x_72, 0x_62, 0x_68, 0x_9A, 0x_EE, 0x_04, 0x_D4, 0x_81, 0x_D7, 0x_23, 0x_D5, 0x_42, 0x_4C, 0x_2E, 0x_28,
		0x_8F, 0x_73, 0x_C9, 0x_FF, 0x_07, 0x_F2, 0x_C2, 0x_A3, 0x_5C, 0x_CF, 0x_7F, 0x_DE, 0x_A8, 0x_CE, 0x_B3,
		0x_02, 0x_E5, 0x_4A, 0x_97, 0x_3C, 0x_9C, 0x_CC, 0x_F0, 0x_05, 0x_64, 0x_45, 0x_E9, 0x_98, 0x_44, 0x_BE,
		0x_1F, 0x_BC, 0x_B1, 0x_33, 0x_30, 0x_18, 0x_CD, 0x_D1, 0x_90, 0x_F3, 0x_ED, 0x_D8, 0x_7D, 0x_79, 0x_10,
		0x_60, 0x_BD, 0x_E1, 0x_E8, 0x_D6, 0x_AC, 0x_5F, 0x_80, 0x_17, 0x_24, 0x_8D, 0x_EA, 0x_6C, 0x_BF, 0x_15,
		0x_53, 0x_9D, 0x_1A, 0x_26, 0x_82, 0x_96, 0x_5E, 0x_A6,
	];

	helper(S, BASE, 37);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_276_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_276_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_0D,
		0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_09,
		0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74,
		0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74,
		0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_DB, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_5F, 0x_DB, 0x_58, 0x_03, 0x_ED, 0x_56, 0x_AE, 0x_0E, 0x_C1, 0x_59, 0x_37, 0x_CC, 0x_E6, 0x_A0,
		0x_FA, 0x_02, 0x_B3, 0x_CE, 0x_FB, 0x_94, 0x_64, 0x_BF, 0x_1D, 0x_73, 0x_DE, 0x_9A, 0x_CB, 0x_86, 0x_DD,
		0x_B1, 0x_44, 0x_81, 0x_EC, 0x_68, 0x_8F, 0x_2C, 0x_31, 0x_32, 0x_F8, 0x_B6, 0x_43, 0x_F6, 0x_25, 0x_6D,
		0x_7E, 0x_D0, 0x_22, 0x_29, 0x_53, 0x_D5, 0x_18, 0x_79, 0x_72, 0x_4A, 0x_4F, 0x_4B, 0x_26, 0x_93, 0x_E8,
		0x_C2, 0x_05, 0x_D9, 0x_AA, 0x_EE, 0x_01, 0x_21, 0x_70, 0x_5C, 0x_84, 0x_F2, 0x_C4, 0x_41, 0x_DF, 0x_16,
		0x_D4, 0x_47, 0x_06, 0x_1F, 0x_A2, 0x_54, 0x_FF, 0x_0F, 0x_3D, 0x_1E, 0x_4E, 0x_D7, 0x_A8, 0x_FE, 0x_97,
		0x_F5, 0x_9C, 0x_75, 0x_E3, 0x_C9, 0x_9E, 0x_F4, 0x_5A, 0x_51, 0x_9B, 0x_6F, 0x_10, 0x_B4, 0x_6A, 0x_04,
		0x_3C, 0x_3A, 0x_1A, 0x_F1, 0x_66, 0x_D3, 0x_6B, 0x_D8,
	];

	helper(S, BASE, 276);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_8_220_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_8_220_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0D,
		0x_0B, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_E5,
		0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_2E, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_9A, 0x_6B, 0x_8B, 0x_56, 0x_F2, 0x_BA, 0x_F4, 0x_D6, 0x_EB, 0x_87, 0x_95, 0x_D9, 0x_9D, 0x_8A,
		0x_27, 0x_E9, 0x_C6, 0x_C7, 0x_DF, 0x_65, 0x_E8, 0x_37, 0x_99, 0x_74, 0x_4D, 0x_4A, 0x_80, 0x_21, 0x_5F,
		0x_44, 0x_13, 0x_4E, 0x_4F, 0x_C0, 0x_82, 0x_AE, 0x_73, 0x_A6, 0x_46, 0x_6A, 0x_DC, 0x_01, 0x_4C, 0x_52,
		0x_77, 0x_CD, 0x_97, 0x_35, 0x_B3, 0x_03, 0x_EC, 0x_A7, 0x_7F, 0x_0E, 0x_AB, 0x_62, 0x_7D, 0x_B8, 0x_E7,
		0x_A2, 0x_18, 0x_22, 0x_81, 0x_54, 0x_59, 0x_EF, 0x_BD, 0x_36, 0x_64, 0x_32, 0x_DD, 0x_2E, 0x_3E, 0x_5C,
		0x_C1, 0x_BE, 0x_7B, 0x_CC, 0x_A9, 0x_5A, 0x_25, 0x_63, 0x_71, 0x_C8, 0x_E1, 0x_26, 0x_E0, 0x_40, 0x_0F,
		0x_4B, 0x_8F, 0x_2F, 0x_A4, 0x_FE, 0x_60, 0x_D4, 0x_7A, 0x_B9, 0x_FD, 0x_92, 0x_F5, 0x_51, 0x_F1, 0x_79,
		0x_11, 0x_30, 0x_F9, 0x_FC, 0x_9B, 0x_FF, 0x_38, 0x_8D,
	];

	helper(S, BASE, 8_220);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_95_607_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_95_607_in_base_113() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0D,
		0x_09, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0C,
		0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_5A, 0x_4D, 0x_88,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_25, 0x_2F, 0x_C3, 0x_19, 0x_F6, 0x_6B, 0x_5A, 0x_EF, 0x_88, 0x_FB, 0x_D9, 0x_F9, 0x_D0, 0x_21,
		0x_69, 0x_39, 0x_05, 0x_02, 0x_BE, 0x_C9, 0x_2C, 0x_A4, 0x_3E, 0x_40, 0x_F0, 0x_3C, 0x_C0, 0x_5D, 0x_89,
		0x_DE, 0x_28, 0x_CD, 0x_B7, 0x_71, 0x_9A, 0x_BD, 0x_8B, 0x_B2, 0x_C7, 0x_54, 0x_79, 0x_0F, 0x_ED, 0x_11,
		0x_EE, 0x_CE, 0x_93, 0x_33, 0x_D6, 0x_3B, 0x_D1, 0x_1D, 0x_08, 0x_59, 0x_4D, 0x_1F, 0x_A9, 0x_44, 0x_A6,
		0x_1C, 0x_10, 0x_F8, 0x_7E, 0x_48, 0x_A5, 0x_26, 0x_8D, 0x_45, 0x_9E, 0x_27, 0x_D8, 0x_F5, 0x_16, 0x_6E,
		0x_9D, 0x_A3, 0x_E1, 0x_17, 0x_B9, 0x_60, 0x_14, 0x_42, 0x_E2, 0x_B3, 0x_D5, 0x_DF, 0x_EC, 0x_E8, 0x_CA,
		0x_B0, 0x_E5, 0x_FA, 0x_77, 0x_BC, 0x_4F, 0x_CC, 0x_47, 0x_12, 0x_90, 0x_4A, 0x_32, 0x_CB, 0x_81, 0x_4B,
		0x_56, 0x_83, 0x_DC, 0x_C5, 0x_78, 0x_67, 0x_04, 0x_B6,
	];

	helper(S, BASE, 95_607);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_203_846_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_203_846_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_D5,
		0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5,
		0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5,
		0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_26, 0x_52, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_D5, 0x_AA, 0x_A1, 0x_50, 0x_BB, 0x_C3, 0x_75, 0x_FA, 0x_21, 0x_55, 0x_B2, 0x_F6, 0x_17, 0x_18, 0x_65,
		0x_26, 0x_6D, 0x_EF, 0x_40, 0x_F1, 0x_A8, 0x_4F, 0x_F2, 0x_BE, 0x_E3, 0x_5C, 0x_2A, 0x_73, 0x_46, 0x_F3,
		0x_BA, 0x_D6, 0x_FF, 0x_7B, 0x_1B, 0x_86, 0x_3C, 0x_11, 0x_19, 0x_43, 0x_2E, 0x_DC, 0x_B0, 0x_28, 0x_1C,
		0x_CE, 0x_7D, 0x_DE, 0x_1E, 0x_E6, 0x_23, 0x_08, 0x_ED, 0x_8A, 0x_E0, 0x_35, 0x_95, 0x_15, 0x_07, 0x_48,
		0x_30, 0x_98, 0x_BC, 0x_9A, 0x_4A, 0x_AB, 0x_D1, 0x_8F, 0x_5F, 0x_F5, 0x_2F, 0x_A2, 0x_EC, 0x_03, 0x_01,
		0x_82, 0x_62, 0x_0F, 0x_58, 0x_8B, 0x_7F, 0x_DB, 0x_24, 0x_74, 0x_71, 0x_60, 0x_A0, 0x_9C, 0x_16, 0x_B4,
		0x_92, 0x_3F, 0x_E9, 0x_B8, 0x_AF, 0x_10, 0x_F9, 0x_29, 0x_22, 0x_1D, 0x_99, 0x_AE, 0x_1A, 0x_2C, 0x_C7,
		0x_3A, 0x_3E, 0x_E8, 0x_52, 0x_B5, 0x_45, 0x_4D, 0x_FE,
	];

	helper(S, BASE, 203_846);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_5_631_350_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_5_631_350_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_4B, 0x_A8, 0x_6C, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_6C, 0x_FD, 0x_4B, 0x_CC, 0x_51, 0x_7B, 0x_9A, 0x_14, 0x_1B, 0x_4C, 0x_C6, 0x_C1, 0x_50, 0x_35,
		0x_E0, 0x_AD, 0x_98, 0x_A9, 0x_32, 0x_7E, 0x_F9, 0x_5B, 0x_23, 0x_DE, 0x_33, 0x_25, 0x_FA, 0x_D4, 0x_9F,
		0x_E8, 0x_F3, 0x_E1, 0x_12, 0x_8D, 0x_B0, 0x_A2, 0x_37, 0x_10, 0x_28, 0x_57, 0x_95, 0x_67, 0x_1D, 0x_C0,
		0x_74, 0x_76, 0x_6F, 0x_54, 0x_27, 0x_26, 0x_DB, 0x_F4, 0x_9B, 0x_05, 0x_9D, 0x_2F, 0x_56, 0x_93, 0x_84,
		0x_A3, 0x_79, 0x_52, 0x_15, 0x_D5, 0x_C2, 0x_18, 0x_E5, 0x_07, 0x_42, 0x_78, 0x_86, 0x_DF, 0x_D2, 0x_8F,
		0x_C9, 0x_88, 0x_AC, 0x_96, 0x_BE, 0x_D7, 0x_B9, 0x_F2, 0x_48, 0x_85, 0x_22, 0x_17, 0x_E3, 0x_39, 0x_8B,
		0x_FE, 0x_1E, 0x_30, 0x_61, 0x_5D, 0x_3E, 0x_3F, 0x_B2, 0x_0E, 0x_59, 0x_45, 0x_5C, 0x_A8, 0x_69, 0x_2A,
		0x_49, 0x_1C, 0x_E4, 0x_EA, 0x_92, 0x_D1, 0x_F8, 0x_21,
	];

	helper(S, BASE, 5_631_350);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_62_580_549_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_62_580_549_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_41, 0x_CD, 0x_BC, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_04, 0x_A1, 0x_D4, 0x_53, 0x_91, 0x_16, 0x_FB, 0x_FA, 0x_7D, 0x_5C, 0x_82, 0x_8F, 0x_E8, 0x_A2,
		0x_CF, 0x_83, 0x_33, 0x_4C, 0x_BD, 0x_43, 0x_5A, 0x_F5, 0x_88, 0x_80, 0x_9C, 0x_F4, 0x_9B, 0x_DB, 0x_F0,
		0x_7C, 0x_BB, 0x_9D, 0x_37, 0x_29, 0x_03, 0x_DF, 0x_4E, 0x_C5, 0x_D7, 0x_FD, 0x_CD, 0x_F8, 0x_41, 0x_AE,
		0x_EE, 0x_64, 0x_4D, 0x_2C, 0x_E9, 0x_58, 0x_B8, 0x_3A, 0x_CC, 0x_F1, 0x_5B, 0x_D5, 0x_21, 0x_DC, 0x_46,
		0x_2E, 0x_EF, 0x_48, 0x_62, 0x_81, 0x_73, 0x_F3, 0x_54, 0x_4F, 0x_6B, 0x_C2, 0x_98, 0x_B1, 0x_49, 0x_99,
		0x_78, 0x_2F, 0x_FE, 0x_E4, 0x_1F, 0x_23, 0x_D1, 0x_B2, 0x_17, 0x_1C, 0x_C8, 0x_55, 0x_32, 0x_76, 0x_8B,
		0x_30, 0x_C6, 0x_AD, 0x_F6, 0x_24, 0x_C3, 0x_E6, 0x_E1, 0x_61, 0x_94, 0x_85, 0x_0F, 0x_63, 0x_CA, 0x_B3,
		0x_69, 0x_F7, 0x_74, 0x_59, 0x_1B, 0x_BC, 0x_25, 0x_6F,
	];

	helper(S, BASE, 62_580_549);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_906_509_706_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_906_509_706_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0D,
		0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_09,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_F1, 0x_05, 0x_BD, 0x_17, 0x_97,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_CA, 0x_02, 0x_5E, 0x_81, 0x_F1, 0x_08, 0x_9F, 0x_98, 0x_04, 0x_5F, 0x_44, 0x_DB, 0x_7A, 0x_2C,
		0x_E0, 0x_68, 0x_28, 0x_B2, 0x_96, 0x_26, 0x_C3, 0x_12, 0x_B9, 0x_73, 0x_2A, 0x_DA, 0x_92, 0x_BC, 0x_BD,
		0x_3F, 0x_E4, 0x_43, 0x_7F, 0x_86, 0x_A0, 0x_E9, 0x_F8, 0x_10, 0x_7E, 0x_37, 0x_A5, 0x_F2, 0x_A6, 0x_88,
		0x_59, 0x_AC, 0x_ED, 0x_A1, 0x_36, 0x_32, 0x_C9, 0x_F0, 0x_CB, 0x_8B, 0x_FE, 0x_55, 0x_49, 0x_FD, 0x_B6,
		0x_E6, 0x_FF, 0x_3A, 0x_05, 0x_F7, 0x_78, 0x_34, 0x_A7, 0x_EC, 0x_03, 0x_F6, 0x_F3, 0x_79, 0x_D0, 0x_B0,
		0x_76, 0x_89, 0x_33, 0x_8A, 0x_4F, 0x_B5, 0x_38, 0x_2F, 0x_15, 0x_D2, 0x_FC, 0x_1C, 0x_7B, 0x_35, 0x_97,
		0x_B7, 0x_C1, 0x_6E, 0x_C4, 0x_5A, 0x_52, 0x_63, 0x_F9, 0x_72, 0x_A2, 0x_DF, 0x_A9, 0x_84, 0x_16, 0x_70,
		0x_7D, 0x_CE, 0x_64, 0x_85, 0x_25, 0x_41, 0x_D7, 0x_1A,
	];

	helper(S, BASE, 906_509_706);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_5_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_5_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0A,
		0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF,
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_A3,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_21, 0x_62, 0x_22, 0x_40, 0x_A3, 0x_F0, 0x_04, 0x_65, 0x_1F, 0x_DD, 0x_AD, 0x_B0, 0x_FD, 0x_FA,
		0x_7D, 0x_B8, 0x_A0, 0x_97, 0x_8C, 0x_DE, 0x_90, 0x_54, 0x_47, 0x_67, 0x_E3, 0x_DA, 0x_B1, 0x_36, 0x_2A,
		0x_D0, 0x_5B, 0x_8A, 0x_5E, 0x_82, 0x_31, 0x_39, 0x_06, 0x_A6, 0x_68, 0x_98, 0x_92, 0x_9C, 0x_32, 0x_F3,
		0x_89, 0x_CA, 0x_26, 0x_33, 0x_52, 0x_17, 0x_A2, 0x_AC, 0x_DF, 0x_A4, 0x_14, 0x_0F, 0x_FB, 0x_3C, 0x_18,
		0x_6D, 0x_D1, 0x_F7, 0x_79, 0x_61, 0x_B4, 0x_99, 0x_88, 0x_D8, 0x_24, 0x_AB, 0x_57, 0x_E6, 0x_B9, 0x_AE,
		0x_30, 0x_D4, 0x_50, 0x_C9, 0x_BE, 0x_D5, 0x_6F, 0x_C4, 0x_BD, 0x_25, 0x_27, 0x_F6, 0x_10, 0x_7F, 0x_3D,
		0x_FE, 0x_D3, 0x_15, 0x_8E, 0x_DB, 0x_AA, 0x_CC, 0x_4F, 0x_7B, 0x_E8, 0x_BB, 0x_C7, 0x_D6, 0x_B2, 0x_1B,
		0x_B5, 0x_43, 0x_73, 0x_EA, 0x_86, 0x_8F, 0x_91, 0x_63, 0x_B7, 0x_5A, 0x_45, 0x_07, 0x_9F, 0x_ED, 0x_BF,
		0x_53, 0x_DC, 0x_CB, 0x_58, 0x_74, 0x_CD, 0x_2C, 0x_D7, 0x_4C, 0x_37, 0x_C8, 0x_70, 0x_80, 0x_9E, 0x_78,
		0x_1A, 0x_EC, 0x_F8, 0x_A9, 0x_87, 0x_23, 0x_81, 0x_95, 0x_72, 0x_E5, 0x_B3, 0x_E4, 0x_E1, 0x_6C, 0x_60,
		0x_E0, 0x_F5, 0x_FF, 0x_12, 0x_6E, 0x_71, 0x_5C, 0x_55, 0x_16, 0x_EB, 0x_94, 0x_9D, 0x_2E, 0x_C5, 0x_05,
		0x_56, 0x_B6, 0x_E9, 0x_13, 0x_49, 0x_9A, 0x_93, 0x_51, 0x_7E, 0x_1D, 0x_83, 0x_48, 0x_8B, 0x_A8, 0x_66,
		0x_2F, 0x_6B, 0x_59, 0x_02, 0x_3A, 0x_FC, 0x_BA, 0x_69, 0x_01, 0x_C2, 0x_E2, 0x_9B, 0x_C0,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_18_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_18_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0C,
		0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0D,
		0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_07, 0x_EE, 0x_DF, 0x_36, 0x_3D, 0x_C6, 0x_2C, 0x_DE, 0x_FF, 0x_3A, 0x_DD, 0x_40, 0x_7C, 0x_39,
		0x_3B, 0x_D3, 0x_1A, 0x_F6, 0x_8E, 0x_4A, 0x_E9, 0x_43, 0x_78, 0x_BA, 0x_90, 0x_A7, 0x_02, 0x_FC, 0x_B3,
		0x_1E, 0x_F8, 0x_72, 0x_94, 0x_50, 0x_AD, 0x_65, 0x_FE, 0x_DA, 0x_EA, 0x_92, 0x_9E, 0x_9F, 0x_46, 0x_61,
		0x_6D, 0x_28, 0x_33, 0x_8B, 0x_B6, 0x_12, 0x_EF, 0x_11, 0x_4D, 0x_CB, 0x_37, 0x_4C, 0x_64, 0x_97, 0x_AB,
		0x_8C, 0x_5D, 0x_98, 0x_41, 0x_3F, 0x_87, 0x_D2, 0x_C0, 0x_7A, 0x_60, 0x_88, 0x_24, 0x_E0, 0x_27, 0x_DB,
		0x_05, 0x_A8, 0x_7F, 0x_71, 0x_F2, 0x_81, 0x_54, 0x_3E, 0x_62, 0x_66, 0x_E7, 0x_F9, 0x_70, 0x_A5, 0x_82,
		0x_6E, 0x_5C, 0x_32, 0x_1F, 0x_83, 0x_7B, 0x_A2, 0x_CF, 0x_1B, 0x_29, 0x_E4, 0x_45, 0x_1D, 0x_B4, 0x_08,
		0x_CA, 0x_F4, 0x_85, 0x_5F, 0x_F5, 0x_26, 0x_14, 0x_15, 0x_21, 0x_13, 0x_F3, 0x_04, 0x_51, 0x_95, 0x_D4,
		0x_63, 0x_84, 0x_FA, 0x_69, 0x_01, 0x_9A, 0x_22, 0x_BE, 0x_EB, 0x_99, 0x_03, 0x_AF, 0x_4B, 0x_52, 0x_55,
		0x_96, 0x_47, 0x_D0, 0x_34, 0x_23, 0x_ED, 0x_9D, 0x_10, 0x_19, 0x_8D, 0x_59, 0x_16, 0x_67, 0x_2E, 0x_25,
		0x_5A, 0x_E8, 0x_6A, 0x_D5, 0x_5E, 0x_06, 0x_B7, 0x_93, 0x_86, 0x_C2, 0x_6B, 0x_D1, 0x_2F, 0x_BB, 0x_B8,
		0x_DC, 0x_6C, 0x_38, 0x_CC, 0x_B1, 0x_75, 0x_AC, 0x_56, 0x_B9, 0x_C4, 0x_6F, 0x_CE, 0x_68, 0x_E2, 0x_4E,
		0x_31, 0x_0E, 0x_77, 0x_F0, 0x_E6, 0x_18, 0x_42, 0x_9B, 0x_0F, 0x_C9, 0x_58, 0x_E5, 0x_8A,
	];

	helper(S, BASE, 18);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_721_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_721_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0D,
		0x_20, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_2D, 0x_2D, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_04, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_58, 0x_1B, 0x_04, 0x_7F, 0x_FD, 0x_C9, 0x_29, 0x_86, 0x_2A, 0x_EE, 0x_52, 0x_B0, 0x_B4, 0x_88,
		0x_E0, 0x_7A, 0x_F6, 0x_B7, 0x_79, 0x_24, 0x_06, 0x_71, 0x_74, 0x_0E, 0x_70, 0x_AB, 0x_5C, 0x_C0, 0x_94,
		0x_DF, 0x_FF, 0x_F5, 0x_E3, 0x_60, 0x_B5, 0x_CA, 0x_5B, 0x_66, 0x_61, 0x_F1, 0x_7E, 0x_1D, 0x_D9, 0x_6F,
		0x_1F, 0x_42, 0x_01, 0x_81, 0x_E5, 0x_25, 0x_BB, 0x_E8, 0x_DC, 0x_E1, 0x_8C, 0x_9A, 0x_BE, 0x_A0, 0x_9D,
		0x_21, 0x_15, 0x_C5, 0x_A7, 0x_6E, 0x_0F, 0x_97, 0x_92, 0x_BC, 0x_D6, 0x_90, 0x_5F, 0x_13, 0x_99, 0x_37,
		0x_30, 0x_EF, 0x_8D, 0x_63, 0x_3D, 0x_2E, 0x_98, 0x_4E, 0x_F0, 0x_B3, 0x_F4, 0x_1E, 0x_1A, 0x_FB, 0x_CD,
		0x_C2, 0x_19, 0x_14, 0x_D5, 0x_6B, 0x_77, 0x_B8, 0x_E7, 0x_B9, 0x_ED, 0x_5A, 0x_AF, 0x_45, 0x_8F, 0x_69,
		0x_A1, 0x_B1, 0x_3C, 0x_43, 0x_34, 0x_4D, 0x_AA, 0x_EC, 0x_18, 0x_44, 0x_F7, 0x_57, 0x_A4, 0x_DE, 0x_7B,
		0x_10, 0x_75, 0x_65, 0x_E6, 0x_16, 0x_D0, 0x_47, 0x_E4, 0x_07, 0x_D1, 0x_39, 0x_F8, 0x_5D, 0x_55, 0x_05,
		0x_CB, 0x_A9, 0x_46, 0x_E9, 0x_48, 0x_87, 0x_7C, 0x_3A, 0x_22, 0x_4B, 0x_2C, 0x_A8, 0x_6A, 0x_EB, 0x_D3,
		0x_54, 0x_84, 0x_76, 0x_9E, 0x_CC, 0x_DB, 0x_FA, 0x_91, 0x_6C, 0x_8A, 0x_C7, 0x_89, 0x_82, 0x_A2, 0x_B2,
		0x_68, 0x_49, 0x_31, 0x_50, 0x_26, 0x_BD, 0x_F9, 0x_A5, 0x_1C, 0x_3F, 0x_03, 0x_8E, 0x_96, 0x_35, 0x_32,
		0x_56, 0x_9B, 0x_02, 0x_D4, 0x_A6, 0x_CE, 0x_FC, 0x_D8, 0x_51, 0x_80, 0x_5E, 0x_11, 0x_4A,
	];

	helper(S, BASE, 721);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_6_059_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_6_059_in_base_193() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0D,
		0x_20, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_0C,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_EE, 0x_EE, 0x_EE,
		0x_3F, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_8F, 0x_D6, 0x_64, 0x_CC, 0x_4B, 0x_7E, 0x_D2, 0x_96, 0x_5E, 0x_D3, 0x_05, 0x_E7, 0x_70, 0x_4D,
		0x_5D, 0x_16, 0x_82, 0x_49, 0x_15, 0x_9B, 0x_71, 0x_38, 0x_97, 0x_14, 0x_E1, 0x_7D, 0x_72, 0x_FB, 0x_25,
		0x_06, 0x_3F, 0x_01, 0x_C5, 0x_C8, 0x_B6, 0x_33, 0x_6A, 0x_91, 0x_C9, 0x_2A, 0x_AE, 0x_CA, 0x_EA, 0x_86,
		0x_6D, 0x_D8, 0x_98, 0x_A0, 0x_5A, 0x_0E, 0x_6E, 0x_42, 0x_BD, 0x_90, 0x_45, 0x_C7, 0x_1C, 0x_B2, 0x_95,
		0x_D9, 0x_E5, 0x_54, 0x_AC, 0x_8D, 0x_1D, 0x_FA, 0x_8E, 0x_A5, 0x_65, 0x_73, 0x_7C, 0x_6C, 0x_02, 0x_07,
		0x_D4, 0x_1F, 0x_66, 0x_80, 0x_B8, 0x_F4, 0x_93, 0x_C1, 0x_3B, 0x_23, 0x_83, 0x_19, 0x_36, 0x_7A, 0x_5B,
		0x_46, 0x_6B, 0x_03, 0x_17, 0x_CB, 0x_89, 0x_4A, 0x_D1, 0x_21, 0x_A4, 0x_1B, 0x_84, 0x_10, 0x_04, 0x_2F,
		0x_BA, 0x_A6, 0x_41, 0x_99, 0x_40, 0x_9C, 0x_AA, 0x_A9, 0x_B7, 0x_37, 0x_88, 0x_3A, 0x_F2, 0x_39, 0x_69,
		0x_F0, 0x_26, 0x_87, 0x_24, 0x_8B, 0x_A7, 0x_E9, 0x_5F, 0x_68, 0x_76, 0x_8A, 0x_F5, 0x_43, 0x_A8, 0x_58,
		0x_E6, 0x_77, 0x_C2, 0x_F9, 0x_48, 0x_BC, 0x_9F, 0x_BB, 0x_75, 0x_D0, 0x_44, 0x_74, 0x_7F, 0x_5C, 0x_81,
		0x_35, 0x_BF, 0x_7B, 0x_CD, 0x_E2, 0x_29, 0x_AD, 0x_CE, 0x_67, 0x_B1, 0x_18, 0x_6F, 0x_B4, 0x_13, 0x_EF,
		0x_57, 0x_2C, 0x_DF, 0x_1E, 0x_FD, 0x_DC, 0x_28, 0x_62, 0x_B5, 0x_94, 0x_0F, 0x_EB, 0x_60, 0x_FE, 0x_DA,
		0x_E0, 0x_4C, 0x_3D, 0x_52, 0x_32, 0x_B9, 0x_34, 0x_31, 0x_4F, 0x_9E, 0x_C3, 0x_85, 0x_E4,
	];

	helper(S, BASE, 6_059);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_40_417_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_40_417_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_20,
		0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_A5, 0x_5D, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_67, 0x_A5, 0x_84, 0x_B1, 0x_AD, 0x_FD, 0x_94, 0x_4F, 0x_B3, 0x_9A, 0x_16, 0x_69, 0x_A2, 0x_D8, 0x_1B,
		0x_3D, 0x_5D, 0x_BC, 0x_CA, 0x_33, 0x_68, 0x_D0, 0x_11, 0x_FA, 0x_50, 0x_7E, 0x_C2, 0x_D6, 0x_78, 0x_48,
		0x_A9, 0x_F3, 0x_6A, 0x_82, 0x_4E, 0x_1D, 0x_24, 0x_65, 0x_74, 0x_25, 0x_93, 0x_E9, 0x_22, 0x_27, 0x_BF,
		0x_39, 0x_7F, 0x_F2, 0x_64, 0x_EE, 0x_A3, 0x_7B, 0x_B9, 0x_83, 0x_54, 0x_32, 0x_89, 0x_B6, 0x_87, 0x_29,
		0x_C4, 0x_AF, 0x_BE, 0x_E0, 0x_05, 0x_F7, 0x_59, 0x_1A, 0x_2A, 0x_A1, 0x_C7, 0x_3F, 0x_6C, 0x_97, 0x_E6,
		0x_0E, 0x_58, 0x_DB, 0x_6E, 0x_35, 0x_EF, 0x_57, 0x_06, 0x_A0, 0x_BB, 0x_AA, 0x_43, 0x_B4, 0x_21, 0x_C3,
		0x_76, 0x_1C, 0x_EC, 0x_86, 0x_9F, 0x_BD, 0x_38, 0x_61, 0x_C8, 0x_9E, 0x_D2, 0x_55, 0x_04, 0x_D5, 0x_C6,
		0x_49, 0x_62, 0x_B0, 0x_E1, 0x_17, 0x_DC, 0x_5C, 0x_2C, 0x_91, 0x_88, 0x_DE, 0x_77, 0x_02, 0x_80, 0x_2F,
		0x_5A, 0x_60, 0x_ED, 0x_8B, 0x_0F, 0x_C9, 0x_1E, 0x_D9, 0x_1F, 0x_EB, 0x_01, 0x_C0, 0x_DD, 0x_CC, 0x_51,
		0x_42, 0x_66, 0x_9C, 0x_F0, 0x_63, 0x_E7, 0x_40, 0x_6D, 0x_44, 0x_53, 0x_92, 0x_3B, 0x_DA, 0x_CE, 0x_14,
		0x_E8, 0x_FC, 0x_A7, 0x_52, 0x_B8, 0x_8D, 0x_7C, 0x_2E, 0x_F4, 0x_EA, 0x_3A, 0x_90, 0x_18, 0x_79, 0x_C1,
		0x_71, 0x_E4, 0x_31, 0x_37, 0x_8A, 0x_D4, 0x_75, 0x_85, 0x_8F, 0x_F1, 0x_8E, 0x_FE, 0x_81, 0x_B5, 0x_8C,
		0x_30, 0x_98, 0x_A6, 0x_CF, 0x_A8, 0x_12, 0x_4C, 0x_D1, 0x_B2, 0x_7A, 0x_AB, 0x_AC, 0x_15,
	];

	helper(S, BASE, 40_417);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_868_923_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_868_923_in_base_193() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0A, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57,
		0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_87, 0x_3B, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_57, 0x_2C, 0x_5A, 0x_DC, 0x_84, 0x_95, 0x_EC, 0x_6F, 0x_DA, 0x_8B, 0x_DE, 0x_A5, 0x_22, 0x_88, 0x_9E,
		0x_AD, 0x_C9, 0x_55, 0x_F9, 0x_63, 0x_AB, 0x_E4, 0x_06, 0x_87, 0x_42, 0x_1D, 0x_BA, 0x_28, 0x_AA, 0x_03,
		0x_A1, 0x_35, 0x_EB, 0x_B9, 0x_B6, 0x_1C, 0x_4F, 0x_23, 0x_D7, 0x_39, 0x_D6, 0x_65, 0x_F5, 0x_CF, 0x_25,
		0x_85, 0x_BF, 0x_F0, 0x_76, 0x_1A, 0x_21, 0x_80, 0x_3D, 0x_CC, 0x_3E, 0x_A6, 0x_70, 0x_C5, 0x_44, 0x_6E,
		0x_01, 0x_52, 0x_5F, 0x_3B, 0x_97, 0x_10, 0x_99, 0x_75, 0x_4B, 0x_8D, 0x_2F, 0x_CD, 0x_C2, 0x_7E, 0x_5C,
		0x_46, 0x_F8, 0x_E3, 0x_90, 0x_D8, 0x_94, 0x_14, 0x_59, 0x_E1, 0x_DF, 0x_74, 0x_64, 0x_FA, 0x_37, 0x_92,
		0x_3A, 0x_EA, 0x_B7, 0x_41, 0x_17, 0x_BB, 0x_43, 0x_62, 0x_C3, 0x_86, 0x_82, 0x_9D, 0x_32, 0x_81, 0x_02,
		0x_2E, 0x_53, 0x_B5, 0x_6C, 0x_51, 0x_9B, 0x_8F, 0x_A2, 0x_66, 0x_C7, 0x_A7, 0x_F7, 0x_FC, 0x_54, 0x_34,
		0x_30, 0x_78, 0x_3F, 0x_77, 0x_60, 0x_36, 0x_B3, 0x_C1, 0x_16, 0x_50, 0x_7C, 0x_1F, 0x_AF, 0x_E2, 0x_8C,
		0x_12, 0x_B4, 0x_07, 0x_D9, 0x_69, 0x_2A, 0x_71, 0x_F4, 0x_BC, 0x_49, 0x_D3, 0x_ED, 0x_4E, 0x_F3, 0x_61,
		0x_47, 0x_F1, 0x_96, 0x_BD, 0x_FF, 0x_6B, 0x_CA, 0x_05, 0x_24, 0x_4A, 0x_FE, 0x_A8, 0x_E7, 0x_0E, 0x_56,
		0x_40, 0x_C8, 0x_89, 0x_48, 0x_4C, 0x_C6, 0x_AC, 0x_26, 0x_7A, 0x_B2, 0x_27, 0x_38, 0x_1E, 0x_D0, 0x_11,
		0x_AE, 0x_B1, 0x_5D, 0x_EF, 0x_FD, 0x_D5, 0x_D4, 0x_68, 0x_4D, 0x_C4, 0x_EE, 0x_6A, 0x_A3,
	];

	helper(S, BASE, 868_923);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_2_592_772_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_2_592_772_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02,
		0x_02, 0x_02, 0x_A1, 0x_84, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_FC, 0x_40, 0x_F2, 0x_75, 0x_C2, 0x_59, 0x_9F, 0x_82, 0x_D7, 0x_8F, 0x_EC, 0x_30, 0x_AC, 0x_29,
		0x_C4, 0x_E6, 0x_D9, 0x_95, 0x_DB, 0x_86, 0x_90, 0x_D1, 0x_39, 0x_E1, 0x_89, 0x_5B, 0x_6B, 0x_AE, 0x_46,
		0x_EE, 0x_24, 0x_A3, 0x_F9, 0x_4D, 0x_3C, 0x_F1, 0x_49, 0x_06, 0x_17, 0x_B9, 0x_EF, 0x_A9, 0x_BE, 0x_1B,
		0x_38, 0x_62, 0x_11, 0x_D4, 0x_DD, 0x_3E, 0x_A8, 0x_DA, 0x_72, 0x_66, 0x_5D, 0x_7E, 0x_1D, 0x_73, 0x_9E,
		0x_41, 0x_C9, 0x_C8, 0x_9C, 0x_83, 0x_4C, 0x_9B, 0x_3D, 0x_B7, 0x_A1, 0x_AD, 0x_05, 0x_CD, 0x_F3, 0x_FB,
		0x_7A, 0x_E7, 0x_34, 0x_BD, 0x_D2, 0x_51, 0x_8D, 0x_37, 0x_CB, 0x_57, 0x_CF, 0x_E8, 0x_67, 0x_45, 0x_B8,
		0x_79, 0x_54, 0x_76, 0x_8C, 0x_65, 0x_B0, 0x_99, 0x_18, 0x_07, 0x_14, 0x_1F, 0x_26, 0x_6A, 0x_92, 0x_88,
		0x_BB, 0x_C0, 0x_23, 0x_74, 0x_AF, 0x_5A, 0x_FA, 0x_E2, 0x_CE, 0x_A6, 0x_31, 0x_68, 0x_84, 0x_EA, 0x_04,
		0x_2C, 0x_3B, 0x_7F, 0x_48, 0x_3A, 0x_ED, 0x_64, 0x_01, 0x_81, 0x_15, 0x_91, 0x_DE, 0x_E0, 0x_AA, 0x_1C,
		0x_78, 0x_42, 0x_A2, 0x_7C, 0x_FE, 0x_B6, 0x_B3, 0x_D8, 0x_9A, 0x_21, 0x_27, 0x_19, 0x_60, 0x_5E, 0x_5F,
		0x_2F, 0x_6F, 0x_2A, 0x_96, 0x_E3, 0x_AB, 0x_70, 0x_E5, 0x_85, 0x_35, 0x_F7, 0x_87, 0x_F6, 0x_4B, 0x_CA,
		0x_4F, 0x_C5, 0x_97, 0x_8A, 0x_33, 0x_C6, 0x_43, 0x_28, 0x_61, 0x_56, 0x_B1, 0x_93, 0x_D6, 0x_6E, 0x_3F,
		0x_32, 0x_4A, 0x_E4, 0x_CC, 0x_9D, 0x_B4, 0x_58, 0x_1A, 0x_C3, 0x_E9, 0x_A7, 0x_7D, 0x_25,
	];

	helper(S, BASE, 2_592_772);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_96_942_502_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_96_942_502_in_base_193() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0C,
		0x_09, 0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_D6,
		0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_54, 0x_4C, 0x_8A, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_EB, 0x_13, 0x_8F, 0x_D5, 0x_6B, 0x_AF, 0x_4E, 0x_CF, 0x_DA, 0x_3F, 0x_85, 0x_A8, 0x_54, 0x_88,
		0x_43, 0x_C7, 0x_8D, 0x_FD, 0x_12, 0x_B8, 0x_74, 0x_BF, 0x_8C, 0x_45, 0x_4D, 0x_A4, 0x_80, 0x_26, 0x_71,
		0x_C1, 0x_E4, 0x_17, 0x_86, 0x_E8, 0x_5D, 0x_46, 0x_41, 0x_48, 0x_C5, 0x_39, 0x_65, 0x_BB, 0x_6A, 0x_A7,
		0x_E7, 0x_93, 0x_37, 0x_C0, 0x_7B, 0x_FB, 0x_E9, 0x_7E, 0x_D2, 0x_A2, 0x_AD, 0x_66, 0x_40, 0x_3C, 0x_63,
		0x_2F, 0x_70, 0x_8E, 0x_16, 0x_1E, 0x_92, 0x_AC, 0x_6F, 0x_79, 0x_57, 0x_DD, 0x_51, 0x_47, 0x_72, 0x_73,
		0x_9F, 0x_61, 0x_FC, 0x_C6, 0x_E5, 0x_A6, 0x_B6, 0x_50, 0x_04, 0x_33, 0x_FE, 0x_01, 0x_CC, 0x_B2, 0x_F2,
		0x_C8, 0x_95, 0x_BE, 0x_4C, 0x_A5, 0x_36, 0x_EA, 0x_FA, 0x_BC, 0x_4A, 0x_97, 0x_07, 0x_35, 0x_23, 0x_99,
		0x_C9, 0x_8A, 0x_DC, 0x_90, 0x_49, 0x_3B, 0x_DB, 0x_94, 0x_22, 0x_87, 0x_82, 0x_29, 0x_B9, 0x_6E, 0x_89,
		0x_F7, 0x_24, 0x_8B, 0x_E3, 0x_05, 0x_CB, 0x_11, 0x_64, 0x_B5, 0x_AB, 0x_EF, 0x_A3, 0x_B7, 0x_9A, 0x_1D,
		0x_0F, 0x_4B, 0x_75, 0x_D9, 0x_B3, 0x_38, 0x_5A, 0x_3D, 0x_15, 0x_AE, 0x_D4, 0x_59, 0x_91, 0x_68, 0x_6D,
		0x_D8, 0x_EE, 0x_96, 0x_F8, 0x_F4, 0x_5E, 0x_52, 0x_77, 0x_56, 0x_C4, 0x_F9, 0x_EC, 0x_1A, 0x_84, 0x_42,
		0x_7D, 0x_B0, 0x_E0, 0x_06, 0x_03, 0x_31, 0x_1C, 0x_5F, 0x_D0, 0x_34, 0x_3E, 0x_44, 0x_14, 0x_F0, 0x_A9,
		0x_3A, 0x_5B, 0x_F1, 0x_98, 0x_4F, 0x_B1, 0x_CA, 0x_55, 0x_D3, 0x_F6, 0x_30, 0x_19, 0x_E6,
	];

	helper(S, BASE, 96_942_502);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_770_411_514_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_770_411_514_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19,
		0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_99, 0x_FB, 0x_55, 0x_A9,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_D4, 0x_51, 0x_5B, 0x_AB, 0x_90, 0x_75, 0x_BE, 0x_2F, 0x_10, 0x_98, 0x_CB, 0x_26, 0x_CF, 0x_43,
		0x_DB, 0x_A3, 0x_F6, 0x_86, 0x_8F, 0x_0E, 0x_F2, 0x_8B, 0x_E2, 0x_AF, 0x_13, 0x_21, 0x_E1, 0x_1D, 0x_E0,
		0x_84, 0x_FB, 0x_14, 0x_CC, 0x_AC, 0x_6A, 0x_67, 0x_56, 0x_5C, 0x_E9, 0x_01, 0x_48, 0x_62, 0x_70, 0x_F4,
		0x_9C, 0x_76, 0x_EE, 0x_6B, 0x_E7, 0x_4D, 0x_2E, 0x_B6, 0x_5A, 0x_39, 0x_54, 0x_41, 0x_87, 0x_BA, 0x_B7,
		0x_7F, 0x_88, 0x_CA, 0x_A8, 0x_4A, 0x_94, 0x_61, 0x_8C, 0x_C9, 0x_49, 0x_EB, 0x_EF, 0x_82, 0x_3A, 0x_02,
		0x_6C, 0x_B8, 0x_C6, 0x_73, 0x_D1, 0x_15, 0x_DF, 0x_A1, 0x_27, 0x_E6, 0x_D2, 0x_37, 0x_FD, 0x_D6, 0x_EC,
		0x_C3, 0x_63, 0x_92, 0x_FE, 0x_9A, 0x_08, 0x_0F, 0x_A9, 0x_97, 0x_47, 0x_77, 0x_31, 0x_A4, 0x_46, 0x_11,
		0x_35, 0x_3E, 0x_99, 0x_DC, 0x_AE, 0x_81, 0x_57, 0x_04, 0x_36, 0x_C0, 0x_9E, 0x_3C, 0x_6D, 0x_E4, 0x_A6,
		0x_42, 0x_C5, 0x_93, 0x_4B, 0x_1B, 0x_79, 0x_59, 0x_30, 0x_F1, 0x_3B, 0x_29, 0x_B2, 0x_FA, 0x_AA, 0x_07,
		0x_64, 0x_22, 0x_F7, 0x_ED, 0x_FF, 0x_65, 0x_D9, 0x_66, 0x_55, 0x_D7, 0x_8A, 0x_32, 0x_8E, 0x_91, 0x_B3,
		0x_78, 0x_9F, 0x_E3, 0x_E8, 0x_7B, 0x_7E, 0x_9B, 0x_85, 0x_69, 0x_A7, 0x_BC, 0x_1C, 0x_17, 0x_B4, 0x_16,
		0x_53, 0x_D5, 0x_72, 0x_1A, 0x_AD, 0x_58, 0x_71, 0x_A2, 0x_44, 0x_8D, 0x_4C, 0x_BD, 0x_05, 0x_3F, 0x_95,
		0x_6E, 0x_F9, 0x_D3, 0x_DD, 0x_96, 0x_3D, 0x_89, 0x_7D, 0x_60, 0x_B0, 0x_68, 0x_03, 0x_C8,
	];

	helper(S, BASE, 770_411_514);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_5_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_5_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_09,
		0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0C,
		0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_B0, 0x_14, 0x_CD, 0x_BB, 0x_30, 0x_D3, 0x_E6, 0x_3F, 0x_D4, 0x_1E, 0x_3C, 0x_DA, 0x_D1, 0x_19,
		0x_D9, 0x_25, 0x_95, 0x_23, 0x_0E, 0x_44, 0x_EF, 0x_64, 0x_C7, 0x_31, 0x_4A, 0x_37, 0x_50, 0x_51, 0x_42,
		0x_F9, 0x_E1, 0x_32, 0x_CE, 0x_60, 0x_6C, 0x_04, 0x_9C, 0x_A3, 0x_5B, 0x_C5, 0x_2A, 0x_FB, 0x_91, 0x_BC,
		0x_7C, 0x_1F, 0x_B7, 0x_53, 0x_E2, 0x_C8, 0x_07, 0x_88, 0x_9B, 0x_E9, 0x_12, 0x_BA, 0x_4F, 0x_54, 0x_61,
		0x_F1, 0x_22, 0x_39, 0x_1B, 0x_55, 0x_E5, 0x_84, 0x_BE, 0x_5D, 0x_1D, 0x_85, 0x_66, 0x_AF, 0x_82, 0x_79,
		0x_69, 0x_24, 0x_E3, 0x_B2, 0x_C2, 0x_BD, 0x_06, 0x_97, 0x_F6, 0x_40, 0x_63, 0x_B9, 0x_94, 0x_70, 0x_D8,
		0x_18, 0x_DF, 0x_7D, 0x_89, 0x_83, 0x_4B, 0x_6E, 0x_BF, 0x_AC, 0x_16, 0x_86, 0x_7F, 0x_A7, 0x_C4, 0x_E4,
		0x_D0, 0x_03, 0x_45, 0x_36, 0x_D6, 0x_C6, 0x_2F, 0x_49, 0x_8C, 0x_EE, 0x_62, 0x_17, 0x_3A, 0x_87, 0x_A1,
		0x_9F, 0x_08, 0x_8B, 0x_8A, 0x_CB, 0x_28, 0x_C9, 0x_E8, 0x_F3, 0x_A2, 0x_CA, 0x_FE, 0x_C3, 0x_B3, 0x_FC,
		0x_B1, 0x_58, 0x_A9, 0x_F7, 0x_FA, 0x_11, 0x_F8, 0x_9D, 0x_A0, 0x_02, 0x_CC, 0x_AA, 0x_AB, 0x_6B, 0x_3E,
		0x_EA, 0x_48, 0x_41, 0x_80, 0x_ED, 0x_7E, 0x_F2, 0x_4D, 0x_27, 0x_71, 0x_A6, 0x_1C, 0x_57, 0x_7B, 0x_56,
		0x_6D, 0x_5C, 0x_C1, 0x_68, 0x_AD, 0x_01, 0x_D2, 0x_DD, 0x_3D, 0x_4E, 0x_DB, 0x_29, 0x_46, 0x_B5, 0x_D7,
		0x_8F, 0x_8E, 0x_F5, 0x_73, 0x_98, 0x_34, 0x_B8, 0x_15, 0x_77, 0x_C0, 0x_81, 0x_B4, 0x_9A, 0x_CF, 0x_FF,
		0x_67, 0x_2E, 0x_65, 0x_72, 0x_93, 0x_2C, 0x_74, 0x_F4, 0x_AE, 0x_6F, 0x_21, 0x_99, 0x_DC, 0x_78, 0x_75,
		0x_4C, 0x_EC, 0x_43, 0x_1A, 0x_E0, 0x_76, 0x_90, 0x_DE, 0x_B6, 0x_38, 0x_A8, 0x_59, 0x_26, 0x_F0, 0x_FD,
		0x_10, 0x_EB, 0x_05, 0x_8D, 0x_5A, 0x_52, 0x_96, 0x_A4, 0x_3B, 0x_35, 0x_5E, 0x_A5, 0x_D5, 0x_13, 0x_0F,
		0x_5F, 0x_6A, 0x_92, 0x_47, 0x_7A, 0x_E7, 0x_33,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_48_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_48_in_base_247() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A,
		0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A,
		0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_AA,
	];
	const BASE: &[u8] = &[
		0x_3A, 0x_FE, 0x_FB, 0x_08, 0x_10, 0x_53, 0x_4F, 0x_FC, 0x_61, 0x_A8, 0x_F3, 0x_47, 0x_4A, 0x_BE, 0x_D2,
		0x_15, 0x_06, 0x_26, 0x_B0, 0x_99, 0x_49, 0x_BC, 0x_98, 0x_DA, 0x_9E, 0x_7A, 0x_84, 0x_E9, 0x_4D, 0x_37,
		0x_51, 0x_DC, 0x_88, 0x_E5, 0x_DD, 0x_69, 0x_5D, 0x_BB, 0x_A3, 0x_7B, 0x_4E, 0x_19, 0x_81, 0x_C7, 0x_8C,
		0x_94, 0x_5C, 0x_93, 0x_AA, 0x_B8, 0x_95, 0x_1C, 0x_F1, 0x_79, 0x_2A, 0x_27, 0x_FD, 0x_39, 0x_1D, 0x_80,
		0x_A0, 0x_1F, 0x_F2, 0x_E0, 0x_9F, 0x_E7, 0x_72, 0x_C8, 0x_6D, 0x_AF, 0x_3F, 0x_1A, 0x_82, 0x_C9, 0x_28,
		0x_B1, 0x_B7, 0x_6A, 0x_EA, 0x_E2, 0x_C2, 0x_9B, 0x_D1, 0x_EE, 0x_66, 0x_76, 0x_11, 0x_6F, 0x_58, 0x_5F,
		0x_5E, 0x_ED, 0x_60, 0x_13, 0x_DE, 0x_F6, 0x_FA, 0x_48, 0x_D3, 0x_D4, 0x_86, 0x_CA, 0x_70, 0x_16, 0x_EB,
		0x_B5, 0x_38, 0x_BF, 0x_65, 0x_F4, 0x_2F, 0x_02, 0x_8F, 0x_5B, 0x_2C, 0x_F5, 0x_F8, 0x_62, 0x_D5, 0x_B6,
		0x_18, 0x_AD, 0x_4C, 0x_03, 0x_7C, 0x_31, 0x_8A, 0x_24, 0x_8B, 0x_2E, 0x_07, 0x_DF, 0x_C0, 0x_67, 0x_CC,
		0x_5A, 0x_22, 0x_D7, 0x_8E, 0x_45, 0x_68, 0x_D9, 0x_E8, 0x_0E, 0x_44, 0x_01, 0x_A6, 0x_E3, 0x_E6, 0x_FF,
		0x_29, 0x_AC, 0x_41, 0x_7F, 0x_23, 0x_36, 0x_9C, 0x_1E, 0x_6E, 0x_C5, 0x_21, 0x_33, 0x_17, 0x_D0, 0x_78,
		0x_55, 0x_59, 0x_96, 0x_1B, 0x_56, 0x_54, 0x_B9, 0x_52, 0x_A2, 0x_F9, 0x_4B, 0x_74, 0x_05, 0x_73, 0x_9A,
		0x_B4, 0x_F0, 0x_EF, 0x_43, 0x_3E, 0x_C6, 0x_75, 0x_D6, 0x_57, 0x_7D, 0x_C1, 0x_87, 0x_30, 0x_CE, 0x_14,
		0x_9D, 0x_8D, 0x_BD, 0x_92, 0x_64, 0x_B2, 0x_EC, 0x_0F, 0x_DB, 0x_40, 0x_6C, 0x_A7, 0x_77, 0x_85, 0x_34,
		0x_D8, 0x_E4, 0x_F7, 0x_6B, 0x_CF, 0x_90, 0x_CB, 0x_63, 0x_CD, 0x_B3, 0x_25, 0x_3C, 0x_C4, 0x_71, 0x_C3,
		0x_A5, 0x_E1, 0x_3B, 0x_04, 0x_32, 0x_A4, 0x_A1, 0x_BA, 0x_AE, 0x_50, 0x_91, 0x_AB, 0x_A9, 0x_83, 0x_46,
		0x_97, 0x_42, 0x_12, 0x_3D, 0x_89, 0x_7E, 0x_35,
	];

	helper(S, BASE, 48);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_880_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_880_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0A,
		0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0C,
		0x_0B, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB,
		0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_54, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_F7, 0x_4D, 0x_54, 0x_AE, 0x_5D, 0x_05, 0x_19, 0x_27, 0x_C9, 0x_F0, 0x_2F, 0x_D6, 0x_CF, 0x_98,
		0x_97, 0x_94, 0x_25, 0x_DE, 0x_5A, 0x_90, 0x_57, 0x_F8, 0x_D2, 0x_CD, 0x_A1, 0x_03, 0x_21, 0x_44, 0x_D3,
		0x_A8, 0x_6D, 0x_FF, 0x_58, 0x_59, 0x_01, 0x_13, 0x_AD, 0x_BC, 0x_4B, 0x_81, 0x_84, 0x_A5, 0x_38, 0x_0F,
		0x_3B, 0x_F6, 0x_DD, 0x_02, 0x_7C, 0x_93, 0x_B1, 0x_50, 0x_6F, 0x_64, 0x_06, 0x_6E, 0x_77, 0x_6C, 0x_D0,
		0x_2A, 0x_9E, 0x_AB, 0x_F4, 0x_C6, 0x_D4, 0x_1F, 0x_AC, 0x_48, 0x_2C, 0x_D1, 0x_BD, 0x_61, 0x_15, 0x_0E,
		0x_C0, 0x_47, 0x_8B, 0x_72, 0x_DB, 0x_36, 0x_A0, 0x_1D, 0x_69, 0x_CB, 0x_73, 0x_74, 0x_CC, 0x_FA, 0x_A6,
		0x_80, 0x_D8, 0x_86, 0x_5E, 0x_DA, 0x_51, 0x_DC, 0x_A2, 0x_3E, 0x_41, 0x_5B, 0x_C5, 0x_99, 0x_CA, 0x_53,
		0x_B9, 0x_65, 0x_C1, 0x_C4, 0x_78, 0x_FC, 0x_62, 0x_EC, 0x_EA, 0x_E5, 0x_E1, 0x_39, 0x_7D, 0x_B8, 0x_63,
		0x_67, 0x_11, 0x_FE, 0x_3F, 0x_B6, 0x_1B, 0x_1E, 0x_22, 0x_ED, 0x_EF, 0x_92, 0x_8E, 0x_31, 0x_33, 0x_FD,
		0x_4F, 0x_75, 0x_A7, 0x_79, 0x_40, 0x_16, 0x_12, 0x_B5, 0x_C8, 0x_71, 0x_AF, 0x_43, 0x_1C, 0x_A4, 0x_BE,
		0x_30, 0x_95, 0x_28, 0x_C7, 0x_17, 0x_6A, 0x_E0, 0x_85, 0x_E8, 0x_88, 0x_C2, 0x_91, 0x_DF, 0x_52, 0x_4A,
		0x_89, 0x_9F, 0x_8A, 0x_F1, 0x_3D, 0x_04, 0x_B7, 0x_D7, 0x_A9, 0x_8C, 0x_83, 0x_E3, 0x_B0, 0x_9B, 0x_2E,
		0x_34, 0x_F9, 0x_1A, 0x_32, 0x_BF, 0x_9C, 0x_7F, 0x_9A, 0x_70, 0x_E4, 0x_55, 0x_B3, 0x_D5, 0x_7B, 0x_E9,
		0x_3C, 0x_10, 0x_6B, 0x_7A, 0x_F2, 0x_8F, 0x_B4, 0x_3A, 0x_C3, 0x_29, 0x_AA, 0x_CE, 0x_A3, 0x_60, 0x_45,
		0x_BA, 0x_76, 0x_46, 0x_42, 0x_14, 0x_49, 0x_26, 0x_96, 0x_F3, 0x_87, 0x_E6, 0x_F5, 0x_EB, 0x_7E, 0x_37,
		0x_9D, 0x_8D, 0x_07, 0x_68, 0x_4C, 0x_B2, 0x_FB, 0x_5C, 0x_D9, 0x_18, 0x_5F, 0x_08, 0x_E2, 0x_56, 0x_35,
		0x_23, 0x_66, 0x_4E, 0x_24, 0x_EE, 0x_E7, 0x_82,
	];

	helper(S, BASE, 880);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_5_396_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_5_396_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_20,
		0x_0D, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_A0, 0x_A0, 0x_A0, 0x_A0,
		0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0,
		0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0,
		0x_A0, 0x_A0, 0x_A0, 0x_08, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_B3, 0x_DD, 0x_4B, 0x_28, 0x_68, 0x_B9, 0x_4C, 0x_8B, 0x_CF, 0x_73, 0x_49, 0x_B2, 0x_6F, 0x_32,
		0x_24, 0x_A9, 0x_BB, 0x_69, 0x_87, 0x_16, 0x_08, 0x_F3, 0x_97, 0x_79, 0x_13, 0x_C7, 0x_25, 0x_C3, 0x_67,
		0x_A7, 0x_45, 0x_F2, 0x_B6, 0x_E7, 0x_78, 0x_D2, 0x_2E, 0x_D6, 0x_9F, 0x_74, 0x_1E, 0x_C1, 0x_10, 0x_86,
		0x_1F, 0x_F0, 0x_CE, 0x_66, 0x_35, 0x_56, 0x_B1, 0x_18, 0x_89, 0x_FD, 0x_BE, 0x_53, 0x_31, 0x_3B, 0x_8F,
		0x_06, 0x_55, 0x_48, 0x_2C, 0x_63, 0x_57, 0x_7F, 0x_12, 0x_F9, 0x_62, 0x_D3, 0x_C0, 0x_E3, 0x_FC, 0x_30,
		0x_60, 0x_96, 0x_C8, 0x_50, 0x_E0, 0x_03, 0x_C4, 0x_B8, 0x_8C, 0x_2A, 0x_61, 0x_8D, 0x_CB, 0x_DA, 0x_4D,
		0x_19, 0x_DC, 0x_6D, 0x_4E, 0x_3E, 0x_02, 0x_5D, 0x_6E, 0x_EE, 0x_C2, 0x_21, 0x_9E, 0x_29, 0x_01, 0x_D5,
		0x_36, 0x_F5, 0x_5B, 0x_37, 0x_FE, 0x_6B, 0x_D0, 0x_9D, 0x_AF, 0x_47, 0x_8A, 0x_F4, 0x_11, 0x_CD, 0x_34,
		0x_33, 0x_7A, 0x_05, 0x_AE, 0x_81, 0x_F7, 0x_7C, 0x_EC, 0x_91, 0x_94, 0x_42, 0x_5C, 0x_2F, 0x_4A, 0x_DB,
		0x_F6, 0x_88, 0x_E2, 0x_9A, 0x_14, 0x_3A, 0x_39, 0x_CC, 0x_4F, 0x_BA, 0x_75, 0x_64, 0x_6C, 0x_85, 0x_92,
		0x_A1, 0x_D7, 0x_BF, 0x_BC, 0x_65, 0x_EB, 0x_AD, 0x_76, 0x_5E, 0x_C6, 0x_F8, 0x_23, 0x_58, 0x_B5, 0x_84,
		0x_80, 0x_C9, 0x_E8, 0x_95, 0x_E6, 0x_FB, 0x_72, 0x_9C, 0x_B7, 0x_0F, 0x_82, 0x_40, 0x_A2, 0x_07, 0x_D8,
		0x_A3, 0x_90, 0x_43, 0x_98, 0x_F1, 0x_3C, 0x_A4, 0x_17, 0x_E5, 0x_B4, 0x_1D, 0x_D1, 0x_46, 0x_D4, 0x_54,
		0x_59, 0x_DE, 0x_AA, 0x_93, 0x_AC, 0x_15, 0x_3F, 0x_A6, 0x_83, 0x_9B, 0x_7D, 0x_0E, 0x_5A, 0x_38, 0x_EF,
		0x_E1, 0x_26, 0x_52, 0x_77, 0x_8E, 0x_04, 0x_A8, 0x_E4, 0x_7E, 0x_EA, 0x_22, 0x_BD, 0x_CA, 0x_7B, 0x_FF,
		0x_B0, 0x_3D, 0x_ED, 0x_41, 0x_1A, 0x_71, 0x_99, 0x_AB, 0x_DF, 0x_FA, 0x_E9, 0x_5F, 0x_27, 0x_1C, 0x_1B,
		0x_C5, 0x_A5, 0x_44, 0x_70, 0x_51, 0x_6A, 0x_D9,
	];

	helper(S, BASE, 5_396);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_19_938_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_19_938_in_base_247() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_09,
		0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_20,
		0x_0C, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_4A, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_16, 0x_8E, 0x_ED, 0x_7B, 0x_54, 0x_76, 0x_34, 0x_F7, 0x_5D, 0x_C3, 0x_17, 0x_93, 0x_6C, 0x_28,
		0x_95, 0x_EE, 0x_E7, 0x_B7, 0x_3D, 0x_F8, 0x_D4, 0x_A2, 0x_B6, 0x_BD, 0x_E1, 0x_80, 0x_A5, 0x_31, 0x_75,
		0x_55, 0x_D3, 0x_78, 0x_3C, 0x_03, 0x_84, 0x_1C, 0x_FB, 0x_2A, 0x_44, 0x_F0, 0x_35, 0x_A3, 0x_4F, 0x_2F,
		0x_F1, 0x_67, 0x_06, 0x_AC, 0x_B8, 0x_E8, 0x_12, 0x_D8, 0x_49, 0x_5B, 0x_F6, 0x_F3, 0x_63, 0x_C9, 0x_8D,
		0x_3E, 0x_8B, 0x_9A, 0x_CC, 0x_C0, 0x_FD, 0x_7D, 0x_9F, 0x_3A, 0x_EA, 0x_3B, 0x_D6, 0x_94, 0x_33, 0x_B9,
		0x_DA, 0x_43, 0x_2C, 0x_91, 0x_13, 0x_4A, 0x_C5, 0x_82, 0x_E9, 0x_68, 0x_66, 0x_21, 0x_BC, 0x_53, 0x_45,
		0x_4E, 0x_85, 0x_7F, 0x_9E, 0x_11, 0x_62, 0x_AB, 0x_37, 0x_5A, 0x_DF, 0x_E0, 0x_5E, 0x_7C, 0x_E4, 0x_26,
		0x_58, 0x_60, 0x_6A, 0x_22, 0x_30, 0x_59, 0x_0E, 0x_9B, 0x_DD, 0x_CA, 0x_C4, 0x_F4, 0x_B2, 0x_D9, 0x_32,
		0x_EF, 0x_27, 0x_6E, 0x_CE, 0x_CF, 0x_4C, 0x_AD, 0x_97, 0x_DB, 0x_8F, 0x_71, 0x_24, 0x_8C, 0x_7A, 0x_C8,
		0x_C1, 0x_6B, 0x_F5, 0x_E2, 0x_98, 0x_41, 0x_1F, 0x_E6, 0x_A4, 0x_73, 0x_81, 0x_C2, 0x_EB, 0x_77, 0x_9D,
		0x_8A, 0x_96, 0x_90, 0x_9C, 0x_23, 0x_A9, 0x_1A, 0x_83, 0x_D0, 0x_BA, 0x_05, 0x_19, 0x_A8, 0x_48, 0x_57,
		0x_47, 0x_42, 0x_F2, 0x_15, 0x_36, 0x_CB, 0x_B0, 0x_4B, 0x_89, 0x_D7, 0x_B4, 0x_7E, 0x_FF, 0x_18, 0x_EC,
		0x_02, 0x_72, 0x_AA, 0x_92, 0x_C7, 0x_74, 0x_14, 0x_AE, 0x_D5, 0x_B3, 0x_79, 0x_1E, 0x_E3, 0x_0F, 0x_FE,
		0x_B1, 0x_70, 0x_5F, 0x_BF, 0x_A0, 0x_CD, 0x_87, 0x_DC, 0x_1D, 0x_50, 0x_69, 0x_DE, 0x_2E, 0x_3F, 0x_07,
		0x_01, 0x_46, 0x_C6, 0x_99, 0x_6F, 0x_86, 0x_A7, 0x_A1, 0x_08, 0x_61, 0x_10, 0x_FA, 0x_E5, 0x_D1, 0x_88,
		0x_D2, 0x_F9, 0x_1B, 0x_A6, 0x_5C, 0x_25, 0x_65, 0x_BB, 0x_AF, 0x_51, 0x_39, 0x_38, 0x_64, 0x_29, 0x_56,
		0x_04, 0x_FC, 0x_B5, 0x_40, 0x_52, 0x_4D, 0x_BE,
	];

	helper(S, BASE, 19_938);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_343_756_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_343_756_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_09, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_CB, 0x_CB, 0x_CB, 0x_CB,
		0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB,
		0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB,
		0x_CB, 0x_CB, 0x_CB, 0x_04, 0x_92, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_CB, 0x_6D, 0x_F2, 0x_51, 0x_9F, 0x_04, 0x_30, 0x_F1, 0x_11, 0x_60, 0x_98, 0x_80, 0x_A9, 0x_B4, 0x_FB,
		0x_63, 0x_AB, 0x_81, 0x_1E, 0x_DA, 0x_CD, 0x_C1, 0x_B3, 0x_FD, 0x_E3, 0x_EC, 0x_7A, 0x_48, 0x_86, 0x_3B,
		0x_26, 0x_43, 0x_50, 0x_4C, 0x_0E, 0x_61, 0x_25, 0x_5C, 0x_83, 0x_B6, 0x_F4, 0x_D2, 0x_07, 0x_4D, 0x_53,
		0x_3D, 0x_AE, 0x_68, 0x_BB, 0x_E5, 0x_C2, 0x_36, 0x_58, 0x_8C, 0x_C5, 0x_8A, 0x_FC, 0x_13, 0x_5F, 0x_64,
		0x_FF, 0x_19, 0x_F8, 0x_DF, 0x_F5, 0x_88, 0x_79, 0x_A0, 0x_DB, 0x_2A, 0x_2F, 0x_3F, 0x_EB, 0x_02, 0x_EF,
		0x_E6, 0x_31, 0x_95, 0x_1F, 0x_38, 0x_4B, 0x_1A, 0x_7F, 0x_CC, 0x_A5, 0x_32, 0x_FE, 0x_94, 0x_D6, 0x_24,
		0x_FA, 0x_F0, 0x_A8, 0x_F9, 0x_7E, 0x_72, 0x_73, 0x_76, 0x_9D, 0x_6E, 0x_5D, 0x_C8, 0x_06, 0x_D5, 0x_E4,
		0x_10, 0x_BA, 0x_C9, 0x_9E, 0x_67, 0x_8F, 0x_08, 0x_E9, 0x_F7, 0x_C3, 0x_AF, 0x_65, 0x_44, 0x_45, 0x_47,
		0x_BD, 0x_4E, 0x_BC, 0x_85, 0x_56, 0x_21, 0x_12, 0x_52, 0x_C0, 0x_71, 0x_A2, 0x_77, 0x_62, 0x_75, 0x_A7,
		0x_D4, 0x_0F, 0x_C7, 0x_66, 0x_DD, 0x_37, 0x_B2, 0x_7D, 0x_D3, 0x_B9, 0x_C6, 0x_AA, 0x_7B, 0x_D7, 0x_8B,
		0x_1B, 0x_74, 0x_14, 0x_D9, 0x_EE, 0x_4A, 0x_92, 0x_16, 0x_91, 0x_3E, 0x_E2, 0x_B8, 0x_E8, 0x_46, 0x_CA,
		0x_BF, 0x_2C, 0x_42, 0x_01, 0x_E7, 0x_41, 0x_1D, 0x_5A, 0x_35, 0x_15, 0x_A6, 0x_A4, 0x_6F, 0x_9C, 0x_28,
		0x_D8, 0x_1C, 0x_ED, 0x_7C, 0x_90, 0x_B7, 0x_B1, 0x_B5, 0x_17, 0x_6B, 0x_59, 0x_40, 0x_D1, 0x_A1, 0x_F3,
		0x_22, 0x_89, 0x_6C, 0x_33, 0x_87, 0x_E0, 0x_9B, 0x_84, 0x_8E, 0x_2E, 0x_23, 0x_05, 0x_5B, 0x_29, 0x_AC,
		0x_9A, 0x_DC, 0x_DE, 0x_49, 0x_A3, 0x_CE, 0x_AD, 0x_B0, 0x_6A, 0x_93, 0x_96, 0x_39, 0x_34, 0x_78, 0x_D0,
		0x_82, 0x_03, 0x_69, 0x_55, 0x_3C, 0x_99, 0x_8D, 0x_70, 0x_CF, 0x_57, 0x_97, 0x_BE, 0x_C4, 0x_54, 0x_EA,
		0x_18, 0x_3A, 0x_E1, 0x_5E, 0x_4F, 0x_F6, 0x_27,
	];

	helper(S, BASE, 343_756);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_2_965_210_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_2_965_210_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_09,
		0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_84, 0x_84,
		0x_F3, 0x_82, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_33, 0x_E1, 0x_22, 0x_3B, 0x_88, 0x_A5, 0x_4E, 0x_39, 0x_E8, 0x_76, 0x_21, 0x_26, 0x_F5, 0x_6C,
		0x_B2, 0x_94, 0x_2C, 0x_71, 0x_D7, 0x_12, 0x_2F, 0x_C5, 0x_DC, 0x_61, 0x_FA, 0x_F1, 0x_D5, 0x_04, 0x_77,
		0x_6D, 0x_D3, 0x_D0, 0x_4C, 0x_7B, 0x_64, 0x_40, 0x_B4, 0x_87, 0x_2A, 0x_DE, 0x_44, 0x_50, 0x_A4, 0x_1E,
		0x_6B, 0x_8E, 0x_BA, 0x_F3, 0x_1D, 0x_96, 0x_1B, 0x_A0, 0x_7E, 0x_24, 0x_C2, 0x_F4, 0x_4F, 0x_37, 0x_6E,
		0x_CB, 0x_97, 0x_72, 0x_06, 0x_60, 0x_10, 0x_9C, 0x_9E, 0x_7D, 0x_F2, 0x_D2, 0x_FC, 0x_FF, 0x_D6, 0x_D9,
		0x_1A, 0x_27, 0x_59, 0x_AB, 0x_19, 0x_41, 0x_65, 0x_AD, 0x_70, 0x_A9, 0x_48, 0x_B9, 0x_55, 0x_FD, 0x_C4,
		0x_5E, 0x_08, 0x_36, 0x_4B, 0x_98, 0x_17, 0x_91, 0x_5C, 0x_C7, 0x_B3, 0x_B7, 0x_02, 0x_BD, 0x_CD, 0x_B5,
		0x_32, 0x_EA, 0x_BC, 0x_C9, 0x_86, 0x_25, 0x_78, 0x_E2, 0x_2E, 0x_92, 0x_B6, 0x_EB, 0x_8D, 0x_42, 0x_D1,
		0x_7F, 0x_AF, 0x_01, 0x_51, 0x_D4, 0x_A7, 0x_35, 0x_FB, 0x_E6, 0x_89, 0x_4A, 0x_3F, 0x_49, 0x_83, 0x_9B,
		0x_62, 0x_A6, 0x_03, 0x_85, 0x_95, 0x_5B, 0x_47, 0x_93, 0x_A1, 0x_DD, 0x_DA, 0x_A2, 0x_5D, 0x_82, 0x_56,
		0x_45, 0x_EF, 0x_15, 0x_28, 0x_B8, 0x_31, 0x_54, 0x_A3, 0x_07, 0x_CA, 0x_3D, 0x_1F, 0x_75, 0x_16, 0x_29,
		0x_F0, 0x_34, 0x_9D, 0x_ED, 0x_18, 0x_E7, 0x_CC, 0x_C3, 0x_1C, 0x_90, 0x_E3, 0x_57, 0x_23, 0x_E5, 0x_A8,
		0x_C8, 0x_7A, 0x_8F, 0x_6A, 0x_BE, 0x_46, 0x_BF, 0x_0F, 0x_52, 0x_AE, 0x_4D, 0x_3C, 0x_58, 0x_05, 0x_14,
		0x_CF, 0x_8C, 0x_C6, 0x_C0, 0x_74, 0x_F8, 0x_0E, 0x_E9, 0x_3E, 0x_63, 0x_53, 0x_66, 0x_5A, 0x_BB, 0x_F9,
		0x_B0, 0x_D8, 0x_73, 0x_E4, 0x_68, 0x_DB, 0x_EC, 0x_F7, 0x_13, 0x_DF, 0x_E0, 0x_8A, 0x_69, 0x_81, 0x_80,
		0x_3A, 0x_5F, 0x_9F, 0x_AC, 0x_30, 0x_CE, 0x_AA, 0x_43, 0x_79, 0x_8B, 0x_99, 0x_7C, 0x_67, 0x_6F, 0x_9A,
		0x_EE, 0x_11, 0x_C1, 0x_38, 0x_F6, 0x_B1, 0x_FE,
	];

	helper(S, BASE, 2_965_210);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_45_885_768_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_45_885_768_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86,
		0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_FB, 0x_6D, 0x_9C, 0x_99,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_D0, 0x_76, 0x_FB, 0x_52, 0x_42, 0x_58, 0x_C0, 0x_E5, 0x_B0, 0x_04, 0x_6D, 0x_B8, 0x_2F, 0x_08,
		0x_48, 0x_B1, 0x_80, 0x_4B, 0x_FD, 0x_CF, 0x_CA, 0x_D1, 0x_1F, 0x_25, 0x_03, 0x_F1, 0x_44, 0x_9C, 0x_30,
		0x_11, 0x_F4, 0x_91, 0x_3F, 0x_8C, 0x_F8, 0x_F2, 0x_E7, 0x_29, 0x_46, 0x_E2, 0x_C1, 0x_6C, 0x_23, 0x_FC,
		0x_16, 0x_7C, 0x_9F, 0x_4E, 0x_92, 0x_9E, 0x_78, 0x_75, 0x_C8, 0x_2A, 0x_79, 0x_7D, 0x_19, 0x_53, 0x_4D,
		0x_8E, 0x_7F, 0x_0F, 0x_C6, 0x_1A, 0x_77, 0x_FE, 0x_61, 0x_7A, 0x_60, 0x_1B, 0x_A9, 0x_6A, 0x_F9, 0x_14,
		0x_9B, 0x_50, 0x_B4, 0x_18, 0x_98, 0x_2C, 0x_31, 0x_CD, 0x_73, 0x_99, 0x_B9, 0x_DF, 0x_93, 0x_5A, 0x_68,
		0x_95, 0x_CE, 0x_D5, 0x_BB, 0x_72, 0x_E1, 0x_F5, 0x_A7, 0x_13, 0x_71, 0x_CB, 0x_32, 0x_0E, 0x_54, 0x_37,
		0x_3B, 0x_5F, 0x_07, 0x_BA, 0x_AD, 0x_8B, 0x_8A, 0x_8D, 0x_15, 0x_65, 0x_3C, 0x_88, 0x_7E, 0x_51, 0x_24,
		0x_43, 0x_02, 0x_35, 0x_D4, 0x_06, 0x_A0, 0x_AA, 0x_97, 0x_C2, 0x_28, 0x_82, 0x_E4, 0x_2E, 0x_85, 0x_B5,
		0x_D6, 0x_BD, 0x_94, 0x_6E, 0x_17, 0x_3E, 0x_DD, 0x_21, 0x_6F, 0x_C5, 0x_87, 0x_05, 0x_CC, 0x_56, 0x_90,
		0x_7B, 0x_F3, 0x_DC, 0x_E8, 0x_64, 0x_D8, 0x_5B, 0x_22, 0x_55, 0x_E3, 0x_49, 0x_AE, 0x_89, 0x_5D, 0x_1C,
		0x_EB, 0x_84, 0x_3D, 0x_4C, 0x_C9, 0x_AC, 0x_D7, 0x_57, 0x_EC, 0x_4F, 0x_B7, 0x_DA, 0x_1D, 0x_ED, 0x_F6,
		0x_E0, 0x_BF, 0x_47, 0x_C4, 0x_33, 0x_8F, 0x_A6, 0x_34, 0x_F0, 0x_A1, 0x_39, 0x_D2, 0x_A5, 0x_5C, 0x_A3,
		0x_69, 0x_83, 0x_AF, 0x_12, 0x_01, 0x_4A, 0x_59, 0x_BE, 0x_A8, 0x_3A, 0x_FF, 0x_A4, 0x_FA, 0x_F7, 0x_6B,
		0x_10, 0x_C3, 0x_DB, 0x_45, 0x_B2, 0x_D9, 0x_E6, 0x_67, 0x_A2, 0x_26, 0x_C7, 0x_70, 0x_41, 0x_40, 0x_9D,
		0x_27, 0x_36, 0x_5E, 0x_B6, 0x_B3, 0x_E9, 0x_BC, 0x_EA, 0x_62, 0x_D3, 0x_EF, 0x_74, 0x_81, 0x_66, 0x_1E,
		0x_DE, 0x_38, 0x_AB, 0x_9A, 0x_63, 0x_96, 0x_EE,
	];

	helper(S, BASE, 45_885_768);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_824_056_838_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_824_056_838_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_09,
		0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0C,
		0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_40, 0x_40, 0x_26, 0x_D7, 0x_59, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_43, 0x_7F, 0x_A6, 0x_F8, 0x_AF, 0x_46, 0x_89, 0x_AD, 0x_93, 0x_39, 0x_67, 0x_29, 0x_4F, 0x_BC,
		0x_63, 0x_21, 0x_41, 0x_9E, 0x_CF, 0x_B0, 0x_11, 0x_4B, 0x_D3, 0x_1E, 0x_2E, 0x_12, 0x_7A, 0x_8D, 0x_B5,
		0x_66, 0x_91, 0x_3A, 0x_59, 0x_04, 0x_1D, 0x_EE, 0x_15, 0x_A5, 0x_10, 0x_28, 0x_87, 0x_3B, 0x_F0, 0x_4C,
		0x_4D, 0x_E7, 0x_CE, 0x_6A, 0x_2A, 0x_98, 0x_C0, 0x_0E, 0x_52, 0x_26, 0x_64, 0x_3D, 0x_7E, 0x_99, 0x_CD,
		0x_7D, 0x_A0, 0x_32, 0x_65, 0x_69, 0x_81, 0x_DE, 0x_07, 0x_05, 0x_06, 0x_5C, 0x_38, 0x_82, 0x_5F, 0x_61,
		0x_94, 0x_E3, 0x_55, 0x_9B, 0x_16, 0x_C6, 0x_5B, 0x_C4, 0x_F1, 0x_EB, 0x_1C, 0x_EF, 0x_FE, 0x_B1, 0x_B4,
		0x_9F, 0x_D9, 0x_B7, 0x_73, 0x_4E, 0x_C1, 0x_E4, 0x_FB, 0x_95, 0x_C9, 0x_33, 0x_53, 0x_E1, 0x_A7, 0x_F4,
		0x_78, 0x_7B, 0x_23, 0x_86, 0x_B6, 0x_AA, 0x_58, 0x_85, 0x_BB, 0x_49, 0x_F5, 0x_A8, 0x_CB, 0x_E0, 0x_9C,
		0x_88, 0x_A9, 0x_57, 0x_1F, 0x_3E, 0x_62, 0x_42, 0x_3C, 0x_DC, 0x_DF, 0x_50, 0x_76, 0x_AC, 0x_90, 0x_48,
		0x_8C, 0x_E9, 0x_70, 0x_5A, 0x_17, 0x_68, 0x_CA, 0x_4A, 0x_CC, 0x_36, 0x_45, 0x_AE, 0x_75, 0x_6F, 0x_37,
		0x_1B, 0x_30, 0x_FF, 0x_72, 0x_96, 0x_56, 0x_6E, 0x_80, 0x_08, 0x_5D, 0x_6B, 0x_B9, 0x_BD, 0x_0F, 0x_A2,
		0x_B3, 0x_D5, 0x_D4, 0x_27, 0x_D7, 0x_D2, 0x_C8, 0x_ED, 0x_F3, 0x_9A, 0x_3F, 0x_79, 0x_34, 0x_DD, 0x_31,
		0x_8F, 0x_C2, 0x_7C, 0x_24, 0x_C5, 0x_D6, 0x_FD, 0x_71, 0x_03, 0x_9D, 0x_84, 0x_01, 0x_83, 0x_8B, 0x_44,
		0x_EA, 0x_B2, 0x_D1, 0x_BE, 0x_F2, 0x_6D, 0x_C3, 0x_F6, 0x_18, 0x_FA, 0x_35, 0x_F9, 0x_47, 0x_22, 0x_C7,
		0x_54, 0x_5E, 0x_FC, 0x_19, 0x_14, 0x_A4, 0x_2C, 0x_DA, 0x_D8, 0x_97, 0x_E5, 0x_8A, 0x_02, 0x_B8, 0x_77,
		0x_E6, 0x_51, 0x_E8, 0x_92, 0x_13, 0x_74, 0x_EC, 0x_E2, 0x_8E, 0x_60, 0x_AB, 0x_DB, 0x_BA, 0x_A3, 0x_F7,
		0x_6C, 0x_BF, 0x_25, 0x_A1, 0x_D0, 0x_2F, 0x_1A,
	];

	helper(S, BASE, 824_056_838);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_8_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0D,
		0x_09, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0B,
		0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_F0, 0x_14, 0x_14, 0x_14, 0x_6F, 0x_F0,
		0x_F0, 0x_F0, 0x_14, 0x_F0, 0x_F0, 0x_F0, 0x_14, 0x_14, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_F0,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_86_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_86_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0C,
		0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_E1, 0x_DB, 0x_E1, 0x_DB, 0x_E1, 0x_E1, 0x_DB, 0x_18, 0x_DB, 0x_E1, 0x_E1, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_E1,
	];

	helper(S, BASE, 86);
}
// endregion
// region: s_has_whitespaces_and_signs_and_556_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_556_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_09,
		0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_0A,
		0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_FF, 0x_F5, 0x_F5, 0x_F5, 0x_FF, 0x_F5, 0x_FF,
		0x_FF, 0x_F5, 0x_F5, 0x_CF, 0x_F5, 0x_F5, 0x_FF, 0x_FF, 0x_FF, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_FF,
	];

	helper(S, BASE, 556);
}
// endregion
// region: s_has_whitespaces_and_signs_and_2_787_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_2_787_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_4A, 0x_44, 0x_4A, 0x_44, 0x_4A, 0x_4A, 0x_4A, 0x_44, 0x_44, 0x_44, 0x_4A,
		0x_4A, 0x_E9, 0x_44, 0x_44, 0x_4A, 0x_4A, 0x_44, 0x_4A, 0x_44, 0x_44, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_44, 0x_4A, 0x_4A, 0x_44, 0x_44, 0x_44, 0x_44, 0x_4A, 0x_4A, 0x_44, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_44, 0x_4A, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_4A,
	];

	helper(S, BASE, 2_787);
}
// endregion
// region: s_has_whitespaces_and_signs_and_37_170_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_37_170_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_C4, 0x_29, 0x_29, 0x_C4, 0x_29, 0x_29, 0x_29, 0x_C4, 0x_29,
		0x_29, 0x_C4, 0x_C4, 0x_29, 0x_29, 0x_C4, 0x_29, 0x_FC, 0x_29, 0x_C4, 0x_C4, 0x_29, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_29, 0x_C4, 0x_C4, 0x_C4, 0x_29, 0x_C4, 0x_29, 0x_C4, 0x_C4, 0x_29, 0x_C4, 0x_C4, 0x_C4, 0x_29,
		0x_C4, 0x_29, 0x_C4, 0x_29, 0x_C4, 0x_29, 0x_29, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_C4,
	];

	helper(S, BASE, 37_170);
}
// endregion
// region: s_has_whitespaces_and_signs_and_158_222_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_158_222_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_20,
		0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0D,
		0x_0D, 0x_0A, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_3C, 0x_9F, 0x_9F, 0x_3C, 0x_3C,
		0x_9F, 0x_3C, 0x_9F, 0x_3C, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_3C, 0x_3C, 0x_3C, 0x_9F, 0x_65, 0x_3C,
		0x_9F, 0x_9F, 0x_3C, 0x_9F, 0x_3C, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_3C,
	];

	helper(S, BASE, 158_222);
}
// endregion
// region: s_has_whitespaces_and_signs_and_6_678_974_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_6_678_974_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0A,
		0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_09, 0x_0D,
		0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_F5, 0x_F5, 0x_BC, 0x_BC,
		0x_F5, 0x_BC, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_BC, 0x_F5, 0x_BC, 0x_BC, 0x_F5, 0x_F5, 0x_BC, 0x_F5, 0x_F5,
		0x_F5, 0x_F5, 0x_F5, 0x_BC, 0x_32, 0x_BC, 0x_BC, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_BC, 0x_F5, 0x_BC,
		0x_F5, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_F5,
	];

	helper(S, BASE, 6_678_974);
}
// endregion
// region: s_has_whitespaces_and_signs_and_18_132_033_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_18_132_033_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0C,
		0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0B,
		0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_0E, 0x_75, 0x_75, 0x_75, 0x_0E, 0x_75, 0x_0E, 0x_75, 0x_75, 0x_0E, 0x_75, 0x_0E,
		0x_75, 0x_0E, 0x_0E, 0x_75, 0x_75, 0x_75, 0x_0E, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_0E, 0x_0F, 0x_75,
		0x_0E, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_75, 0x_75, 0x_0E, 0x_0E,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_0E, 0x_75, 0x_0E, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_0E,
	];

	helper(S, BASE, 18_132_033);
}
// endregion
// region: s_has_whitespaces_and_signs_and_315_457_018_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_315_457_018_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_09,
		0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_0B,
		0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_73, 0x_28, 0x_28, 0x_73,
		0x_28, 0x_73, 0x_73, 0x_28, 0x_28, 0x_73, 0x_73, 0x_28, 0x_73, 0x_28, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73,
		0x_28, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_28, 0x_73, 0x_28, 0x_0E, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_73,
	];

	helper(S, BASE, 315_457_018);
}
// endregion
// region: s_has_whitespaces_and_signs_and_4_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_4_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0D,
		0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0A,
		0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_BC, 0x_BC, 0x_E9, 0x_13, 0x_53, 0x_13, 0x_53, 0x_BC, 0x_BC, 0x_13, 0x_BC, 0x_53, 0x_BC, 0x_BC, 0x_BC,
		0x_53,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_BC, 0x_53,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_whitespaces_and_signs_and_91_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_91_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_FC, 0x_52, 0x_FC, 0x_52, 0x_FC, 0x_84, 0x_52, 0x_E1, 0x_E1, 0x_FC, 0x_E1,
		0x_FC, 0x_52, 0x_E1, 0x_E1, 0x_FC, 0x_52, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_FC, 0x_E1,
	];

	helper(S, BASE, 91);
}
// endregion
// region: s_has_whitespaces_and_signs_and_808_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_808_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_0D,
		0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_F3, 0x_41, 0x_41, 0x_27, 0x_27, 0x_27,
		0x_F3, 0x_C4, 0x_41, 0x_F3, 0x_F3, 0x_F3, 0x_41, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_F3, 0x_27,
	];

	helper(S, BASE, 808);
}
// endregion
// region: s_has_whitespaces_and_signs_and_3_643_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_3_643_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0D,
		0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_0D,
		0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_14, 0x_14, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_14, 0x_56, 0x_80, 0x_D3,
		0x_D3, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_14, 0x_D3,
	];

	helper(S, BASE, 3_643);
}
// endregion
// region: s_has_whitespaces_and_signs_and_19_184_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_19_184_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0C,
		0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_BF, 0x_BF, 0x_BF, 0x_96,
		0x_BF, 0x_BF, 0x_53, 0x_53, 0x_BF, 0x_EF, 0x_96, 0x_BF, 0x_53, 0x_96, 0x_BF, 0x_96, 0x_BF, 0x_53, 0x_96,
		0x_53, 0x_96, 0x_96, 0x_BF, 0x_96, 0x_96, 0x_BF, 0x_53, 0x_96, 0x_53, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96,
		0x_BF, 0x_96, 0x_96, 0x_BF, 0x_BF, 0x_96, 0x_96, 0x_96, 0x_96, 0x_BF, 0x_BF, 0x_53, 0x_96, 0x_53, 0x_BF,
		0x_96,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_53, 0x_BF,
	];

	helper(S, BASE, 19_184);
}
// endregion
// region: s_has_whitespaces_and_signs_and_776_283_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_776_283_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_20,
		0x_09, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_AF, 0x_AF, 0x_AF, 0x_4F, 0x_AF, 0x_4F, 0x_B2, 0x_B2, 0x_AF, 0x_B2,
		0x_4F, 0x_B2, 0x_4F, 0x_AC, 0x_4F, 0x_AF, 0x_B2, 0x_B2, 0x_AF, 0x_4F, 0x_4F, 0x_B2, 0x_AF, 0x_B2, 0x_B2,
		0x_B2, 0x_AF, 0x_4F, 0x_AF, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_AF, 0x_B2, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_AF, 0x_B2,
	];

	helper(S, BASE, 776_283);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_213_583_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_7_213_583_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_20,
		0x_09, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0C,
		0x_09, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_7C, 0x_AC, 0x_B7, 0x_B7, 0x_B7,
		0x_AC, 0x_B7, 0x_B7, 0x_7C, 0x_AC, 0x_7C, 0x_F4, 0x_B7, 0x_AC, 0x_AC, 0x_7C, 0x_B7, 0x_B7, 0x_AC, 0x_B7,
		0x_7C, 0x_B7, 0x_B7, 0x_7C, 0x_B7, 0x_7C, 0x_B7, 0x_AC, 0x_B7, 0x_7C, 0x_AC, 0x_7C, 0x_B7, 0x_7C, 0x_AC,
		0x_AC, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_B7, 0x_7C,
	];

	helper(S, BASE, 7_213_583);
}
// endregion
// region: s_has_whitespaces_and_signs_and_20_097_740_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_20_097_740_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0B,
		0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_E9, 0x_E9, 0x_70,
		0x_E9, 0x_2A, 0x_E9, 0x_E9, 0x_70, 0x_70, 0x_E9, 0x_2A, 0x_2A, 0x_70, 0x_2A, 0x_70, 0x_2A, 0x_8F, 0x_2A,
		0x_E9, 0x_E9, 0x_E9, 0x_2A, 0x_70, 0x_E9, 0x_E9, 0x_2A, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_70, 0x_E9, 0x_2A,
	];

	helper(S, BASE, 20_097_740);
}
// endregion
// region: s_has_whitespaces_and_signs_and_590_081_801_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_590_081_801_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_EA, 0x_EA, 0x_EA, 0x_D2, 0x_30, 0x_EA, 0x_30, 0x_EA, 0x_30, 0x_30,
		0x_30, 0x_D2, 0x_EA, 0x_30, 0x_30, 0x_EA, 0x_EA, 0x_EA, 0x_D2, 0x_19, 0x_EA, 0x_30, 0x_D2, 0x_EA, 0x_30,
		0x_EA, 0x_D2, 0x_D2, 0x_EA, 0x_EA, 0x_D2, 0x_D2, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_EA, 0x_D2,
	];

	helper(S, BASE, 590_081_801);
}
// endregion
// region: s_has_whitespaces_and_signs_and_5_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_5_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0D,
		0x_0B, 0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_8C, 0x_4C, 0x_F3, 0x_4C, 0x_4C, 0x_6C, 0x_8C, 0x_4C, 0x_6C, 0x_8C, 0x_6C,
		0x_47, 0x_49, 0x_47,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_8C, 0x_47, 0x_49, 0x_6C,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_signs_and_83_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_83_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_20,
		0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_09,
		0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_6A, 0x_88, 0x_6A, 0x_82, 0x_68, 0x_6A, 0x_6A, 0x_54, 0x_6A, 0x_55,
		0x_6A, 0x_88, 0x_88, 0x_54, 0x_55, 0x_55, 0x_88, 0x_55, 0x_6A, 0x_54, 0x_55, 0x_68, 0x_88, 0x_68, 0x_88,
		0x_6A, 0x_54, 0x_54, 0x_6A, 0x_88, 0x_68, 0x_54, 0x_88,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_88, 0x_55, 0x_6A, 0x_54,
	];

	helper(S, BASE, 83);
}
// endregion
// region: s_has_whitespaces_and_signs_and_229_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_229_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_51, 0x_86, 0x_EE,
		0x_86, 0x_9B, 0x_AE, 0x_30, 0x_51, 0x_51, 0x_AE, 0x_EE, 0x_EE, 0x_EE, 0x_30, 0x_51, 0x_30, 0x_EE, 0x_30,
		0x_30, 0x_AE, 0x_EE, 0x_AE, 0x_AE, 0x_EE, 0x_86, 0x_86, 0x_51, 0x_51, 0x_51, 0x_AE, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_51, 0x_AE, 0x_30, 0x_86,
	];

	helper(S, BASE, 229);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_851_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_7_851_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_02, 0x_02, 0x_02, 0x_13, 0x_E9, 0x_9F, 0x_BF, 0x_13,
		0x_60, 0x_02, 0x_02, 0x_E9, 0x_E9, 0x_E9, 0x_9F, 0x_02, 0x_60, 0x_9F, 0x_60, 0x_E9, 0x_E9, 0x_13, 0x_E9,
		0x_13, 0x_02, 0x_13, 0x_13, 0x_02, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_E9, 0x_9F, 0x_02, 0x_60, 0x_13,
	];

	helper(S, BASE, 7_851);
}
// endregion
// region: s_has_whitespaces_and_signs_and_29_439_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_29_439_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0C,
		0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_4C, 0x_44, 0x_9E, 0x_72, 0x_9E, 0x_9E, 0x_44, 0x_D7, 0x_44, 0x_72,
		0x_72, 0x_9E, 0x_B5, 0x_72, 0x_72, 0x_9E, 0x_72, 0x_9E, 0x_44, 0x_9E, 0x_72, 0x_44, 0x_B5, 0x_4C, 0x_44,
		0x_72, 0x_B5, 0x_4C, 0x_B5, 0x_72, 0x_44, 0x_B5, 0x_B5, 0x_9E, 0x_B5, 0x_72, 0x_B5, 0x_4C, 0x_B5, 0x_B5,
		0x_44, 0x_B5, 0x_B5, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_4C, 0x_9E, 0x_B5, 0x_44,
	];

	helper(S, BASE, 29_439);
}
// endregion
// region: s_has_whitespaces_and_signs_and_681_172_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_681_172_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_F5, 0x_1B, 0x_1B, 0x_17, 0x_B3, 0x_B3, 0x_F5, 0x_B3, 0x_17,
		0x_D5, 0x_F5, 0x_F5, 0x_B9, 0x_B9, 0x_17, 0x_F5, 0x_B9, 0x_F5, 0x_17, 0x_F5, 0x_F5, 0x_B9, 0x_F5, 0x_F5,
		0x_F5, 0x_B9, 0x_F5, 0x_1B, 0x_B3, 0x_B9, 0x_B9, 0x_B3, 0x_F5, 0x_B9, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_B9, 0x_F5, 0x_17, 0x_1B, 0x_B3,
	];

	helper(S, BASE, 681_172);
}
// endregion
// region: s_has_whitespaces_and_signs_and_6_818_731_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_6_818_731_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_09,
		0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_20,
		0x_20, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_97, 0x_C2, 0x_C2, 0x_E1, 0x_E1, 0x_E6, 0x_E6, 0x_E6, 0x_E1, 0x_E1, 0x_C0, 0x_97, 0x_E1,
		0x_97, 0x_E1, 0x_E6, 0x_97, 0x_C2, 0x_E6, 0x_E1, 0x_97, 0x_E6, 0x_C2, 0x_E6, 0x_97, 0x_E6, 0x_E6, 0x_97,
		0x_C2, 0x_E6, 0x_97, 0x_97, 0x_E1, 0x_97, 0x_97, 0x_97, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_E1, 0x_C2, 0x_97, 0x_E6,
	];

	helper(S, BASE, 6_818_731);
}
// endregion
// region: s_has_whitespaces_and_signs_and_80_259_748_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_80_259_748_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0C,
		0x_09, 0x_09, 0x_20, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_A8, 0x_B3, 0x_A8, 0x_DB,
		0x_31, 0x_A8, 0x_B3, 0x_DB, 0x_31, 0x_23, 0x_23, 0x_B3, 0x_B9, 0x_DB, 0x_DB, 0x_DB, 0x_31, 0x_B3, 0x_B3,
		0x_31, 0x_B3, 0x_23, 0x_B3, 0x_DB, 0x_23, 0x_31, 0x_DB, 0x_B3, 0x_31, 0x_23, 0x_DB, 0x_31, 0x_DB, 0x_31,
		0x_31, 0x_A8, 0x_23, 0x_23, 0x_DB, 0x_23, 0x_DB, 0x_DB, 0x_A8, 0x_A8, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_A8, 0x_31, 0x_B3, 0x_23,
	];

	helper(S, BASE, 80_259_748);
}
// endregion
// region: s_has_whitespaces_and_signs_and_921_700_767_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_921_700_767_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_09,
		0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0C,
		0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_3E, 0x_3E, 0x_D0, 0x_DA, 0x_D0, 0x_92, 0x_3E, 0x_D0, 0x_DA, 0x_DA, 0x_BD, 0x_3E, 0x_92,
		0x_62, 0x_92, 0x_D0, 0x_D0, 0x_BD, 0x_D0, 0x_D0, 0x_3E, 0x_92, 0x_BD, 0x_DA, 0x_92, 0x_BD, 0x_92, 0x_3E,
		0x_DA, 0x_92, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_DA, 0x_92, 0x_3E, 0x_D0,
	];

	helper(S, BASE, 921_700_767);
}
// endregion
// region: s_has_whitespaces_and_signs_and_5_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_5_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_09,
		0x_0A, 0x_2B, 0x_B3, 0x_F3, 0x_A3, 0x_90, 0x_C2, 0x_B3, 0x_72, 0x_90, 0x_72, 0x_90, 0x_A3, 0x_A3,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_A3, 0x_80, 0x_90, 0x_68, 0x_B3, 0x_C2,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_signs_and_83_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_83_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_CC, 0x_73, 0x_BD, 0x_B2, 0x_CC, 0x_26, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_CC, 0x_26, 0x_C3, 0x_73, 0x_16, 0x_BD,
	];

	helper(S, BASE, 83);
}
// endregion
// region: s_has_whitespaces_and_signs_and_794_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_794_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0D,
		0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_20,
		0x_09, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_67, 0x_67, 0x_C3, 0x_8C, 0x_D3, 0x_67, 0x_C3, 0x_C3, 0x_4E, 0x_67, 0x_67, 0x_4E, 0x_4E,
		0x_62, 0x_4E, 0x_F8, 0x_62, 0x_8C, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_C3, 0x_67, 0x_8C, 0x_F8, 0x_62, 0x_52,
	];

	helper(S, BASE, 794);
}
// endregion
// region: s_has_whitespaces_and_signs_and_2_429_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_2_429_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_8B, 0x_14, 0x_14, 0x_0E, 0x_14, 0x_71, 0x_67, 0x_C7,
		0x_C7, 0x_14, 0x_67, 0x_14, 0x_14, 0x_14, 0x_D8, 0x_D8, 0x_67, 0x_8B, 0x_67, 0x_D8, 0x_D8, 0x_0E, 0x_67,
		0x_8B, 0x_14, 0x_C7, 0x_D8, 0x_C7, 0x_14, 0x_8B, 0x_D8, 0x_0E, 0x_14, 0x_67, 0x_14, 0x_8B, 0x_14, 0x_C7,
		0x_67, 0x_0E, 0x_67, 0x_14, 0x_14, 0x_8B, 0x_D8,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_8B, 0x_D8, 0x_67, 0x_0E, 0x_BF, 0x_C7,
	];

	helper(S, BASE, 2_429);
}
// endregion
// region: s_has_whitespaces_and_signs_and_82_099_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_82_099_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0C,
		0x_09, 0x_09, 0x_0D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_E4, 0x_10, 0x_53, 0x_E9, 0x_39, 0x_39, 0x_CA,
		0x_53, 0x_11, 0x_E4, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_53, 0x_E9, 0x_39, 0x_E4, 0x_E5, 0x_10,
	];

	helper(S, BASE, 82_099);
}
// endregion
// region: s_has_whitespaces_and_signs_and_710_897_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_710_897_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_AF, 0x_FC, 0x_9A, 0x_FC, 0x_95, 0x_FC, 0x_7F, 0x_52, 0x_F4, 0x_95, 0x_FC, 0x_AF, 0x_7F, 0x_7F, 0x_95,
		0x_9A, 0x_FC, 0x_FC, 0x_9A, 0x_FC, 0x_AF, 0x_AF, 0x_F4, 0x_9A, 0x_7F, 0x_F4, 0x_F4, 0x_9A, 0x_FC, 0x_AF,
		0x_F4, 0x_95, 0x_D9, 0x_FC, 0x_7F, 0x_FC, 0x_9A, 0x_AF, 0x_F4, 0x_95, 0x_FC, 0x_9A, 0x_FC, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_F4, 0x_9A, 0x_D9, 0x_95, 0x_7F, 0x_AF,
	];

	helper(S, BASE, 710_897);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_679_955_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_8_679_955_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_C3, 0x_F9, 0x_F9,
		0x_9F, 0x_F9, 0x_3F, 0x_2E, 0x_2E, 0x_DE, 0x_60, 0x_C3, 0x_3F, 0x_2E, 0x_9F, 0x_C3, 0x_9F, 0x_F9, 0x_9F,
		0x_DE, 0x_DE, 0x_1C, 0x_DE, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_C3, 0x_1C, 0x_F9, 0x_DE, 0x_9F, 0x_2E,
	];

	helper(S, BASE, 8_679_955);
}
// endregion
// region: s_has_whitespaces_and_signs_and_87_806_559_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_87_806_559_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_20,
		0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_C6, 0x_02, 0x_02, 0x_BB, 0x_C6, 0x_C6, 0x_1C, 0x_1C, 0x_BB, 0x_02, 0x_41, 0x_1C, 0x_02, 0x_1C,
		0x_A2, 0x_C6, 0x_A2, 0x_BA, 0x_AD, 0x_BB, 0x_02, 0x_02, 0x_AD, 0x_AD, 0x_BA, 0x_C6, 0x_1C, 0x_A2, 0x_BB,
		0x_BB, 0x_C6, 0x_1C, 0x_AD, 0x_BA, 0x_AD, 0x_BA, 0x_1C, 0x_BA, 0x_BB, 0x_A2, 0x_A2, 0x_BA, 0x_A2, 0x_BB,
		0x_1C,
	];
	const BASE: &[u8] = &[
		0x_AD, 0x_02, 0x_C6, 0x_BA, 0x_BB, 0x_1C, 0x_A2,
	];

	helper(S, BASE, 87_806_559);
}
// endregion
// region: s_has_whitespaces_and_signs_and_540_196_732_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_540_196_732_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_37, 0x_12, 0x_5E, 0x_94, 0x_12,
		0x_94, 0x_37, 0x_37, 0x_94, 0x_C0, 0x_53, 0x_1A, 0x_94, 0x_53, 0x_C0, 0x_B8, 0x_C0, 0x_5E, 0x_C0, 0x_5E,
		0x_37, 0x_5E, 0x_37, 0x_B8, 0x_94, 0x_94, 0x_12, 0x_12, 0x_94, 0x_B8, 0x_C0, 0x_5E, 0x_37, 0x_C0, 0x_C0,
		0x_94, 0x_12, 0x_94, 0x_5E, 0x_C0, 0x_94, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_37, 0x_5E, 0x_B8, 0x_94, 0x_53, 0x_12,
	];

	helper(S, BASE, 540_196_732);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_8_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0B,
		0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_04, 0x_1B, 0x_7E, 0x_C5, 0x_A5, 0x_A5, 0x_DB, 0x_C5, 0x_C5, 0x_DB, 0x_DB, 0x_A5, 0x_04, 0x_11, 0x_AB,
		0x_2A, 0x_AB, 0x_52, 0x_D4, 0x_C5, 0x_7E, 0x_A5, 0x_4A, 0x_A5, 0x_52, 0x_7E, 0x_11, 0x_52, 0x_2A, 0x_A5,
		0x_DB, 0x_A5, 0x_7E, 0x_11, 0x_2A, 0x_04, 0x_4A, 0x_D4, 0x_D4, 0x_7E, 0x_52, 0x_A5, 0x_2A, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_7E, 0x_C5, 0x_11, 0x_DB, 0x_A5, 0x_D4, 0x_4A, 0x_04, 0x_2A, 0x_AB,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_60_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_60_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0B,
		0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0C,
		0x_0A, 0x_09, 0x_0C, 0x_20, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_DF, 0x_DF, 0x_99, 0x_46, 0x_84, 0x_1D,
		0x_97, 0x_E5, 0x_45, 0x_DC, 0x_E5, 0x_FF, 0x_44, 0x_E5, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_44, 0x_97, 0x_45, 0x_84, 0x_DF, 0x_DC, 0x_E5, 0x_FF, 0x_46, 0x_89,
	];

	helper(S, BASE, 60);
}
// endregion
// region: s_has_whitespaces_and_signs_and_177_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_177_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_20,
		0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0D,
		0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_A6,
		0x_1B, 0x_A6, 0x_83, 0x_77, 0x_A6, 0x_77, 0x_77, 0x_FB, 0x_7F, 0x_1D, 0x_68, 0x_68, 0x_A6, 0x_1D, 0x_FB,
		0x_1B, 0x_A6, 0x_FB, 0x_FB, 0x_A6, 0x_A7,
	];
	const BASE: &[u8] = &[
		0x_67, 0x_A6, 0x_68, 0x_A7, 0x_55, 0x_1B, 0x_FB, 0x_77, 0x_EF, 0x_1D, 0x_7F,
	];

	helper(S, BASE, 177);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_600_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_8_600_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_FE, 0x_27, 0x_A4, 0x_FB, 0x_B7, 0x_A4, 0x_AE, 0x_FE, 0x_13, 0x_B4, 0x_13,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_B4, 0x_66, 0x_23, 0x_35, 0x_27, 0x_FE, 0x_34, 0x_AE, 0x_FB, 0x_13,
	];

	helper(S, BASE, 8_600);
}
// endregion
// region: s_has_whitespaces_and_signs_and_61_515_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_61_515_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0A,
		0x_0A, 0x_0C, 0x_0A, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_BD, 0x_37, 0x_37, 0x_BD, 0x_38, 0x_98, 0x_37,
		0x_81, 0x_4A, 0x_A3, 0x_A3, 0x_37, 0x_27, 0x_BD, 0x_E4, 0x_BD, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_95, 0x_37, 0x_38, 0x_BD, 0x_4A, 0x_A3, 0x_81, 0x_E4, 0x_35, 0x_1C,
	];

	helper(S, BASE, 61_515);
}
// endregion
// region: s_has_whitespaces_and_signs_and_922_742_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_922_742_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_D2, 0x_E3,
		0x_28, 0x_77, 0x_46, 0x_90, 0x_0B, 0x_B1, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_C5, 0x_77, 0x_9B, 0x_B1, 0x_D2, 0x_DA, 0x_90, 0x_E3, 0x_10, 0x_46,
	];

	helper(S, BASE, 922_742);
}
// endregion
// region: s_has_whitespaces_and_signs_and_6_768_980_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_6_768_980_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_8F, 0x_1A, 0x_35, 0x_8F, 0x_E2, 0x_2F, 0x_1A,
		0x_06, 0x_2F, 0x_E2, 0x_7B, 0x_E2, 0x_B7, 0x_E2, 0x_8F, 0x_2F, 0x_CD, 0x_CD, 0x_CD, 0x_7B, 0x_B6, 0x_B6,
		0x_35, 0x_65, 0x_B6, 0x_B6, 0x_7B, 0x_7B, 0x_35, 0x_65, 0x_10, 0x_1A, 0x_2F, 0x_E2, 0x_CD, 0x_CD, 0x_10,
		0x_7B, 0x_B6, 0x_CD, 0x_10, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_7B, 0x_CD, 0x_8F, 0x_B7, 0x_65, 0x_E2, 0x_10, 0x_B6, 0x_1A, 0x_2F,
	];

	helper(S, BASE, 6_768_980);
}
// endregion
// region: s_has_whitespaces_and_signs_and_65_861_832_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_65_861_832_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_09,
		0x_0C, 0x_0D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_60, 0x_55, 0x_68, 0x_1F, 0x_55, 0x_1F, 0x_42, 0x_60, 0x_39, 0x_1D, 0x_1D, 0x_60, 0x_60,
		0x_35, 0x_A3,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_68, 0x_30, 0x_60, 0x_55, 0x_1E, 0x_1D, 0x_42, 0x_D2, 0x_35, 0x_1F,
	];

	helper(S, BASE, 65_861_832);
}
// endregion
// region: s_has_whitespaces_and_signs_and_261_186_915_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_261_186_915_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_C7, 0x_DA, 0x_72, 0x_72, 0x_7E, 0x_72, 0x_3B, 0x_3B, 0x_1A, 0x_14,
		0x_79, 0x_DA, 0x_7E, 0x_1A, 0x_79, 0x_5B, 0x_7E, 0x_3B, 0x_DA, 0x_5B, 0x_C7, 0x_C7, 0x_5B, 0x_E1, 0x_3B,
		0x_1A, 0x_72, 0x_46, 0x_FF, 0x_7E, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_C7, 0x_DA, 0x_E1, 0x_72, 0x_5B, 0x_3B, 0x_46, 0x_7E, 0x_79, 0x_FF,
	];

	helper(S, BASE, 261_186_915);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_7_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0C, 0x_0C, 0x_20,
		0x_0B, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_7F, 0x_11, 0x_33, 0x_FE, 0x_E8,
		0x_10, 0x_99, 0x_19, 0x_19, 0x_33, 0x_A0, 0x_D5, 0x_C8, 0x_10, 0x_7F, 0x_19, 0x_07, 0x_7F, 0x_7F, 0x_07,
		0x_33, 0x_7F, 0x_A0, 0x_7F, 0x_99, 0x_07, 0x_99, 0x_A0, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_FD, 0x_C8, 0x_19, 0x_D5, 0x_FE, 0x_E8, 0x_7F, 0x_A0, 0x_07, 0x_87, 0x_33, 0x_99,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_45_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_45_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0C,
		0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_0A,
		0x_0B, 0x_0B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_9B, 0x_EF, 0x_51, 0x_C2, 0x_D6, 0x_A7, 0x_9E, 0x_9C, 0x_9E, 0x_3A, 0x_26, 0x_86, 0x_26, 0x_86,
		0x_9B, 0x_9C, 0x_D6, 0x_86, 0x_D6, 0x_FB, 0x_FB, 0x_9C, 0x_86, 0x_26, 0x_A7, 0x_9B, 0x_D6, 0x_86, 0x_3A,
		0x_AA, 0x_AC, 0x_26, 0x_9C, 0x_9B, 0x_9B, 0x_86, 0x_9E, 0x_AA, 0x_C2, 0x_D6, 0x_C2, 0x_9C, 0x_D6, 0x_9E,
		0x_FB,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_D6, 0x_AC, 0x_9B, 0x_FB, 0x_9C, 0x_EF, 0x_86, 0x_26, 0x_9E, 0x_3A, 0x_A7, 0x_C2,
	];

	helper(S, BASE, 45);
}
// endregion
// region: s_has_whitespaces_and_signs_and_800_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_800_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_AB, 0x_12, 0x_EE, 0x_0A, 0x_47, 0x_47, 0x_04, 0x_74, 0x_96, 0x_D5,
		0x_47, 0x_71, 0x_47, 0x_73, 0x_71, 0x_47, 0x_AB, 0x_74, 0x_69, 0x_04, 0x_F6, 0x_F6, 0x_F6, 0x_69, 0x_F6,
		0x_EE, 0x_70, 0x_96, 0x_69, 0x_F6, 0x_12, 0x_71, 0x_04, 0x_F6, 0x_12, 0x_71, 0x_70, 0x_96, 0x_04, 0x_AB,
		0x_70,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_73, 0x_96, 0x_D5, 0x_AB, 0x_04, 0x_70, 0x_EE, 0x_69, 0x_12, 0x_F6, 0x_47, 0x_71,
	];

	helper(S, BASE, 800);
}
// endregion
// region: s_has_whitespaces_and_signs_and_3_552_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_3_552_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0B,
		0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_02, 0x_A4,
		0x_AA, 0x_6D, 0x_53, 0x_8F, 0x_A4, 0x_02, 0x_AA, 0x_55, 0x_02, 0x_6D, 0x_6D, 0x_25, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_02, 0x_E5, 0x_6D, 0x_DF, 0x_55, 0x_F8, 0x_25, 0x_A4, 0x_4E, 0x_FE, 0x_18, 0x_8F,
	];

	helper(S, BASE, 3_552);
}
// endregion
// region: s_has_whitespaces_and_signs_and_33_152_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_33_152_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0A,
		0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_B9, 0x_A5, 0x_B9, 0x_A5, 0x_A5, 0x_5E, 0x_1B, 0x_97, 0x_A5,
		0x_A5, 0x_B9, 0x_26, 0x_97, 0x_E0, 0x_44, 0x_10, 0x_F1, 0x_E0, 0x_F1, 0x_0F, 0x_A5, 0x_44, 0x_B9, 0x_F1,
		0x_E0, 0x_26, 0x_1B, 0x_97, 0x_E0, 0x_10, 0x_F6, 0x_1B, 0x_B9, 0x_E0, 0x_1B, 0x_A5, 0x_E0, 0x_F1, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_B9, 0x_A5, 0x_F6, 0x_0F, 0x_E0, 0x_26, 0x_44, 0x_97, 0x_10, 0x_1B, 0x_71, 0x_F1,
	];

	helper(S, BASE, 33_152);
}
// endregion
// region: s_has_whitespaces_and_signs_and_981_617_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_981_617_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_A8, 0x_23, 0x_5A, 0x_63, 0x_C2, 0x_03, 0x_70, 0x_E9, 0x_63, 0x_C9, 0x_A8, 0x_03,
		0x_43, 0x_23, 0x_03, 0x_03, 0x_A8, 0x_83, 0x_C2, 0x_83, 0x_23, 0x_43, 0x_5A, 0x_A8, 0x_43, 0x_88, 0x_88,
		0x_E9, 0x_88, 0x_88, 0x_D9, 0x_C9, 0x_D9, 0x_C2, 0x_C2, 0x_C2, 0x_E9, 0x_88, 0x_83, 0x_63, 0x_83, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_C9, 0x_A8, 0x_43, 0x_5A, 0x_C2, 0x_A7, 0x_D9, 0x_23, 0x_83, 0x_63, 0x_E9, 0x_88,
	];

	helper(S, BASE, 981_617);
}
// endregion
// region: s_has_whitespaces_and_signs_and_3_246_136_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_3_246_136_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0C,
		0x_09, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_09,
		0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_29, 0x_EC, 0x_29, 0x_EA, 0x_35, 0x_FE, 0x_77, 0x_47,
		0x_6B, 0x_B3, 0x_B9, 0x_EA, 0x_7E, 0x_7E, 0x_EA, 0x_40, 0x_29, 0x_40, 0x_EC, 0x_35, 0x_EC, 0x_EC, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_6B, 0x_BF, 0x_1E, 0x_B9, 0x_B3, 0x_EA, 0x_40, 0x_29, 0x_EC, 0x_FE, 0x_35, 0x_7E,
	];

	helper(S, BASE, 3_246_136);
}
// endregion
// region: s_has_whitespaces_and_signs_and_35_002_056_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_35_002_056_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0B,
		0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_24, 0x_A8, 0x_A8, 0x_E3, 0x_DA,
		0x_DA, 0x_02, 0x_12, 0x_24, 0x_24, 0x_24, 0x_8D, 0x_E3, 0x_02, 0x_56, 0x_24, 0x_8D, 0x_49, 0x_49, 0x_6C,
		0x_49, 0x_49, 0x_49, 0x_02, 0x_DA, 0x_6C, 0x_56, 0x_E3, 0x_E3, 0x_1B, 0x_24, 0x_C0,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_49, 0x_56, 0x_A8, 0x_8D, 0x_1B, 0x_E3, 0x_24, 0x_91, 0x_DA, 0x_C0, 0x_02, 0x_6C,
	];

	helper(S, BASE, 35_002_056);
}
// endregion
// region: s_has_whitespaces_and_signs_and_870_423_104_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_870_423_104_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0C,
		0x_09, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_09,
		0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_4B, 0x_BE, 0x_26, 0x_59,
		0x_6C, 0x_21, 0x_4B, 0x_3F, 0x_DC, 0x_18, 0x_6C, 0x_BE, 0x_C0, 0x_F4, 0x_F4, 0x_26, 0x_59, 0x_CC, 0x_86,
		0x_21, 0x_59, 0x_4B, 0x_59, 0x_6C, 0x_DC, 0x_C0,
	];
	const BASE: &[u8] = &[
		0x_BE, 0x_4B, 0x_02, 0x_6C, 0x_59, 0x_DC, 0x_CC, 0x_3F, 0x_C0, 0x_86, 0x_F4, 0x_26, 0x_21,
	];

	helper(S, BASE, 870_423_104);
}
// endregion
// region: s_has_whitespaces_and_signs_and_4_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_4_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_20,
		0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_87, 0x_F1, 0x_3F, 0x_1A, 0x_46,
		0x_B3, 0x_B3, 0x_60, 0x_A8, 0x_E7, 0x_A2, 0x_1A, 0x_46, 0x_87, 0x_70, 0x_B3, 0x_DA, 0x_B8, 0x_A2, 0x_F0,
		0x_D9, 0x_DA, 0x_DD, 0x_3F, 0x_70, 0x_A2, 0x_F0, 0x_A2, 0x_DA, 0x_D9, 0x_A7, 0x_A8, 0x_60, 0x_E7, 0x_46,
		0x_48, 0x_BD, 0x_B3, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_70, 0x_A7, 0x_A2, 0x_87, 0x_B3, 0x_60, 0x_B8, 0x_D9, 0x_C8, 0x_BD, 0x_E7, 0x_A8, 0x_DD, 0x_DA,
		0x_3F, 0x_48, 0x_1A, 0x_F0,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_whitespaces_and_signs_and_74_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_74_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0A,
		0x_0D, 0x_09, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_FC, 0x_FA, 0x_77, 0x_D7, 0x_FA, 0x_D7, 0x_98, 0x_BE, 0x_FD, 0x_C9, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_8B, 0x_C9, 0x_FC, 0x_98, 0x_05, 0x_FD, 0x_C1, 0x_E9, 0x_4E, 0x_CD, 0x_12, 0x_D7, 0x_BE, 0x_D3,
		0x_9A, 0x_B7, 0x_FA, 0x_23,
	];

	helper(S, BASE, 74);
}
// endregion
// region: s_has_whitespaces_and_signs_and_578_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_578_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_17, 0x_64, 0x_5C, 0x_4C,
		0x_1E, 0x_1E, 0x_1E, 0x_5D, 0x_36, 0x_73, 0x_73, 0x_11, 0x_17, 0x_5D, 0x_08, 0x_EB, 0x_7F, 0x_5C, 0x_11,
		0x_17, 0x_85, 0x_5D, 0x_41, 0x_97, 0x_C6, 0x_1E, 0x_1E, 0x_36, 0x_85, 0x_D5, 0x_11, 0x_9B, 0x_41, 0x_85,
		0x_C6, 0x_9B, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_17, 0x_C6, 0x_65, 0x_11, 0x_08, 0x_EB, 0x_D5, 0x_5C, 0x_54, 0x_1E, 0x_64, 0x_73, 0x_5D, 0x_9B,
		0x_36, 0x_7F, 0x_97, 0x_41,
	];

	helper(S, BASE, 578);
}
// endregion
// region: s_has_whitespaces_and_signs_and_2_569_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_2_569_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_B5,
		0x_2C, 0x_61, 0x_E9, 0x_83, 0x_B2, 0x_74, 0x_2C, 0x_37, 0x_B5, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_88, 0x_2C, 0x_BE, 0x_61, 0x_F6, 0x_3F, 0x_B5, 0x_A9, 0x_51, 0x_11, 0x_83, 0x_05, 0x_37, 0x_B9,
		0x_F1, 0x_74, 0x_73, 0x_B2,
	];

	helper(S, BASE, 2_569);
}
// endregion
// region: s_has_whitespaces_and_signs_and_87_796_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_87_796_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_0C,
		0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_15, 0x_9D, 0x_B9,
		0x_67, 0x_EC, 0x_76, 0x_4F, 0x_A4, 0x_CD, 0x_5D, 0x_9D, 0x_12, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_4F, 0x_A4, 0x_B9, 0x_C8, 0x_F4, 0x_FF, 0x_CD, 0x_12, 0x_37, 0x_CF, 0x_76, 0x_15, 0x_42, 0x_A3,
		0x_9D, 0x_67, 0x_B3, 0x_13,
	];

	helper(S, BASE, 87_796);
}
// endregion
// region: s_has_whitespaces_and_signs_and_126_421_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_126_421_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0A,
		0x_0D, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0D,
		0x_09, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_F1, 0x_AE, 0x_B4, 0x_BF, 0x_60, 0x_1E, 0x_BF, 0x_1D, 0x_65,
		0x_B8, 0x_1E, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_1D, 0x_5E, 0x_B4, 0x_A6, 0x_4F, 0x_B8, 0x_1F, 0x_AE, 0x_DB, 0x_D3, 0x_BA, 0x_6A, 0x_65, 0x_BF,
		0x_D9, 0x_A3, 0x_1E, 0x_F1,
	];

	helper(S, BASE, 126_421);
}
// endregion
// region: s_has_whitespaces_and_signs_and_1_537_921_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_1_537_921_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0C,
		0x_0A, 0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_14, 0x_85,
		0x_CC, 0x_3B, 0x_CC, 0x_28, 0x_3D, 0x_65, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_2A, 0x_65, 0x_3B, 0x_CC, 0x_23, 0x_79, 0x_F3, 0x_A1, 0x_FA, 0x_89, 0x_14, 0x_33, 0x_3D, 0x_D4,
		0x_85, 0x_EB, 0x_D1, 0x_AE,
	];

	helper(S, BASE, 1_537_921);
}
// endregion
// region: s_has_whitespaces_and_signs_and_79_741_974_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_79_741_974_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_09,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_F0, 0x_6F, 0x_02, 0x_EB,
		0x_EB, 0x_A4, 0x_82, 0x_A1, 0x_6F, 0x_EB, 0x_EF, 0x_EB, 0x_02, 0x_4B, 0x_31, 0x_BC, 0x_6F, 0x_4B, 0x_F0,
		0x_10, 0x_EB, 0x_85,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_F0, 0x_31, 0x_02, 0x_85, 0x_56, 0x_BC, 0x_DD, 0x_52, 0x_4B, 0x_B9, 0x_30, 0x_10, 0x_6F, 0x_28,
		0x_EF, 0x_EB, 0x_A4, 0x_D3,
	];

	helper(S, BASE, 79_741_974);
}
// endregion
// region: s_has_whitespaces_and_signs_and_185_756_293_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_185_756_293_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0B, 0x_09, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_79, 0x_61, 0x_9E, 0x_B9, 0x_52, 0x_B9,
		0x_9E, 0x_CE, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_D5, 0x_52, 0x_79, 0x_C3, 0x_7C, 0x_4D, 0x_B9, 0x_75, 0x_D6, 0x_44, 0x_C5, 0x_0F, 0x_8B, 0x_37,
		0x_FE, 0x_A2, 0x_1C, 0x_61,
	];

	helper(S, BASE, 185_756_293);
}
// endregion
// region: s_has_whitespaces_and_signs_and_9_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_9_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_66, 0x_98, 0x_BF, 0x_56, 0x_16, 0x_1B, 0x_95, 0x_7C, 0x_D4, 0x_BF, 0x_66, 0x_9C, 0x_F4, 0x_1B,
		0x_67, 0x_03, 0x_FC, 0x_9F, 0x_EA, 0x_1C, 0x_35, 0x_A8, 0x_D0, 0x_D0, 0x_42, 0x_72, 0x_B8, 0x_CC, 0x_B8,
		0x_D0, 0x_56, 0x_64, 0x_55, 0x_BF, 0x_C7, 0x_35, 0x_56, 0x_18, 0x_03, 0x_35, 0x_1B, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_56, 0x_AC, 0x_C3, 0x_77, 0x_69, 0x_03, 0x_7C, 0x_52, 0x_66, 0x_67, 0x_1C, 0x_16, 0x_18, 0x_A8,
		0x_9F, 0x_C9, 0x_64, 0x_88, 0x_C6, 0x_8F, 0x_EB, 0x_FF, 0x_C7, 0x_5D, 0x_B8, 0x_EA, 0x_D0, 0x_72, 0x_BF,
		0x_42, 0x_55, 0x_35, 0x_D4, 0x_95, 0x_71, 0x_F4, 0x_FC, 0x_9C, 0x_E6, 0x_CC, 0x_1B,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_whitespaces_and_signs_and_59_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_59_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_0C,
		0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_E7,
		0x_5E, 0x_FB, 0x_FE, 0x_4C, 0x_6F, 0x_E7, 0x_81, 0x_3B, 0x_81, 0x_05, 0x_A2, 0x_9C, 0x_81, 0x_42, 0x_2C,
		0x_66, 0x_B5, 0x_88, 0x_9C, 0x_9C, 0x_68, 0x_92, 0x_03, 0x_E6, 0x_64, 0x_42, 0x_4C, 0x_F7, 0x_F0, 0x_2C,
		0x_B4, 0x_E7, 0x_81, 0x_68, 0x_8E, 0x_88, 0x_CA, 0x_42, 0x_80,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_E7, 0x_E6, 0x_19, 0x_FE, 0x_8E, 0x_16, 0x_4C, 0x_88, 0x_2C, 0x_85, 0x_81, 0x_37, 0x_9C, 0x_ED,
		0x_D9, 0x_80, 0x_5E, 0x_18, 0x_44, 0x_66, 0x_31, 0x_5C, 0x_64, 0x_92, 0x_55, 0x_8C, 0x_C1, 0x_B4, 0x_A2,
		0x_3B, 0x_DE, 0x_F0, 0x_F7, 0x_AA, 0x_42, 0x_03, 0x_94, 0x_CA, 0x_68, 0x_6F, 0x_B5,
	];

	helper(S, BASE, 59);
}
// endregion
// region: s_has_whitespaces_and_signs_and_119_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_119_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0A,
		0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_0B,
		0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_AB, 0x_DA, 0x_D1, 0x_B3, 0x_0F, 0x_F1, 0x_A4, 0x_DA, 0x_54, 0x_F1, 0x_46, 0x_B6, 0x_4D, 0x_D2,
		0x_29, 0x_62, 0x_A4, 0x_B2, 0x_A4, 0x_A9, 0x_56, 0x_7C, 0x_98, 0x_37, 0x_27, 0x_D3, 0x_DA, 0x_B2, 0x_90,
		0x_DE, 0x_38, 0x_37, 0x_37, 0x_DF, 0x_90, 0x_56, 0x_AB, 0x_15, 0x_5A, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_62, 0x_AB, 0x_B3, 0x_37, 0x_38, 0x_46, 0x_D2, 0x_15, 0x_21, 0x_90, 0x_3E, 0x_B9, 0x_68, 0x_F1,
		0x_98, 0x_56, 0x_C2, 0x_A8, 0x_51, 0x_70, 0x_65, 0x_02, 0x_3A, 0x_DE, 0x_29, 0x_DF, 0x_0F, 0x_54, 0x_27,
		0x_7C, 0x_4D, 0x_D9, 0x_A9, 0x_3C, 0x_DA, 0x_5A, 0x_AD, 0x_A4, 0x_B2, 0x_D3, 0x_EF,
	];

	helper(S, BASE, 119);
}
// endregion
// region: s_has_whitespaces_and_signs_and_6_547_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_6_547_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_15, 0x_97, 0x_46,
		0x_75, 0x_AF, 0x_11, 0x_91, 0x_EC, 0x_93, 0x_B1, 0x_9C, 0x_D3, 0x_93, 0x_91, 0x_A2, 0x_E7, 0x_CE, 0x_A2,
		0x_AC, 0x_AF, 0x_C8, 0x_B2, 0x_B2, 0x_44, 0x_46, 0x_9C, 0x_93, 0x_B6, 0x_E7, 0x_5E, 0x_C8, 0x_19, 0x_FF,
		0x_C8, 0x_60, 0x_EC, 0x_7F, 0x_9E, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_91, 0x_C7, 0x_15, 0x_E3, 0x_5E, 0x_DB, 0x_9F, 0x_2A, 0x_AC, 0x_08, 0x_CE, 0x_9E, 0x_11, 0x_BA,
		0x_D3, 0x_A2, 0x_30, 0x_6D, 0x_19, 0x_44, 0x_F3, 0x_47, 0x_B5, 0x_7F, 0x_E7, 0x_93, 0x_C8, 0x_EC, 0x_97,
		0x_10, 0x_60, 0x_FF, 0x_32, 0x_B1, 0x_F2, 0x_9C, 0x_46, 0x_AF, 0x_B2, 0x_B6, 0x_89,
	];

	helper(S, BASE, 6_547);
}
// endregion
// region: s_has_whitespaces_and_signs_and_51_669_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_51_669_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_09,
		0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_09,
		0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_A1, 0x_1D, 0x_5A, 0x_F2,
		0x_79, 0x_40, 0x_41, 0x_F0, 0x_9A, 0x_B9, 0x_A7, 0x_E7, 0x_D6, 0x_49, 0x_DE, 0x_F0, 0x_52, 0x_F0, 0x_41,
		0x_CF, 0x_41, 0x_D6, 0x_52, 0x_1D, 0x_B9, 0x_40, 0x_15, 0x_EA, 0x_A4, 0x_5B, 0x_A2, 0x_5A, 0x_30, 0x_41,
		0x_E0, 0x_B9, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_9A, 0x_CF, 0x_E8, 0x_52, 0x_B5, 0x_F0, 0x_15, 0x_83, 0x_5A, 0x_30, 0x_40, 0x_1D, 0x_79, 0x_A7,
		0x_D1, 0x_DE, 0x_47, 0x_49, 0x_B0, 0x_3D, 0x_29, 0x_E3, 0x_E7, 0x_DD, 0x_41, 0x_D3, 0x_EA, 0x_A4, 0x_A1,
		0x_4D, 0x_8A, 0x_5E, 0x_95, 0x_D4, 0x_E6, 0x_A2, 0x_68, 0x_50, 0x_B9, 0x_E0, 0x_5B,
	];

	helper(S, BASE, 51_669);
}
// endregion
// region: s_has_whitespaces_and_signs_and_417_370_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_417_370_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0C,
		0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_E3,
		0x_FF, 0x_3F, 0x_D6, 0x_41, 0x_26, 0x_BF, 0x_CC, 0x_BF, 0x_64, 0x_EC, 0x_CA, 0x_FE, 0x_05, 0x_E3, 0x_DD,
		0x_BE, 0x_FF, 0x_37, 0x_12, 0x_D1, 0x_D6, 0x_CA, 0x_3F, 0x_E3, 0x_E0, 0x_FE, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_FE, 0x_2A, 0x_7F, 0x_26, 0x_E3, 0x_3A, 0x_80, 0x_E8, 0x_EC, 0x_7B, 0x_2F, 0x_81, 0x_D1, 0x_CA,
		0x_B1, 0x_D6, 0x_DD, 0x_6F, 0x_94, 0x_0F, 0x_8F, 0x_7C, 0x_E0, 0x_D2, 0x_3F, 0x_FF, 0x_91, 0x_40, 0x_83,
		0x_3E, 0x_F2, 0x_64, 0x_05, 0x_37, 0x_A2, 0x_BF, 0x_CC, 0x_33, 0x_69, 0x_BE, 0x_12,
	];

	helper(S, BASE, 417_370);
}
// endregion
// region: s_has_whitespaces_and_signs_and_3_724_363_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_3_724_363_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_09,
		0x_0A, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_E6, 0x_72, 0x_77, 0x_9D, 0x_9D, 0x_89, 0x_74,
		0x_77, 0x_6F, 0x_C9, 0x_C7, 0x_F1, 0x_D1, 0x_C6, 0x_32, 0x_72, 0x_72, 0x_A2, 0x_75, 0x_A5, 0x_7C, 0x_14,
		0x_75, 0x_48, 0x_8C, 0x_CD, 0x_C7, 0x_7C, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_E6, 0x_C9, 0x_74, 0x_BD, 0x_96, 0x_AF, 0x_4B, 0x_72, 0x_D1, 0x_B9, 0x_77, 0x_D9, 0x_9D, 0x_A2,
		0x_3F, 0x_14, 0x_32, 0x_D6, 0x_7C, 0x_48, 0x_5E, 0x_8E, 0x_87, 0x_AD, 0x_C6, 0x_8C, 0x_6F, 0x_A5, 0x_36,
		0x_D5, 0x_1E, 0x_75, 0x_1A, 0x_52, 0x_B4, 0x_50, 0x_DA, 0x_CD, 0x_F1, 0x_55, 0x_C7,
	];

	helper(S, BASE, 3_724_363);
}
// endregion
// region: s_has_whitespaces_and_signs_and_71_878_747_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_71_878_747_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_5F, 0x_03, 0x_CB, 0x_86, 0x_A8, 0x_43, 0x_E4, 0x_AC, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_3B, 0x_02, 0x_D5, 0x_03, 0x_C6, 0x_9F, 0x_CB, 0x_6A, 0x_FF, 0x_40, 0x_D1, 0x_C1, 0x_E8, 0x_AA,
		0x_75, 0x_E6, 0x_CF, 0x_AC, 0x_2A, 0x_5B, 0x_C0, 0x_F6, 0x_5F, 0x_86, 0x_E4, 0x_04, 0x_6B, 0x_DE, 0x_A1,
		0x_C9, 0x_A8, 0x_DB, 0x_FB, 0x_08, 0x_D0, 0x_29, 0x_1F, 0x_A7, 0x_23, 0x_E1, 0x_53,
	];

	helper(S, BASE, 71_878_747);
}
// endregion
// region: s_has_whitespaces_and_signs_and_769_932_845_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_769_932_845_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_09,
		0x_20, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0B,
		0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_62, 0x_54, 0x_D9, 0x_62, 0x_56, 0x_52, 0x_83,
		0x_0F, 0x_D7, 0x_42, 0x_7C, 0x_30, 0x_4E, 0x_D9, 0x_EA, 0x_30, 0x_4E, 0x_56, 0x_49, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_21, 0x_6D, 0x_9C, 0x_97, 0x_62, 0x_02, 0x_37, 0x_E1, 0x_79, 0x_EA, 0x_7C, 0x_75, 0x_12, 0x_80,
		0x_42, 0x_2C, 0x_52, 0x_D9, 0x_DA, 0x_F4, 0x_49, 0x_C7, 0x_3B, 0x_0F, 0x_30, 0x_DF, 0x_AD, 0x_AA, 0x_D7,
		0x_4E, 0x_9E, 0x_CD, 0x_28, 0x_E2, 0x_B2, 0x_56, 0x_54, 0x_72, 0x_B7, 0x_27, 0x_D3,
	];

	helper(S, BASE, 769_932_845);
}
// endregion
// region: s_has_whitespaces_and_signs_and_9_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_9_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_33,
		0x_3D, 0x_B3, 0x_21, 0x_7B, 0x_08, 0x_74, 0x_27, 0x_A1, 0x_D7, 0x_52, 0x_EB, 0x_C8, 0x_50, 0x_7C, 0x_AF,
		0x_7B, 0x_71, 0x_06, 0x_52, 0x_47, 0x_B7, 0x_9B, 0x_D4, 0x_16, 0x_1F, 0x_E4, 0x_29, 0x_F6, 0x_88, 0x_50,
		0x_52,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_8E, 0x_80, 0x_68, 0x_9A, 0x_9B, 0x_37, 0x_78, 0x_69, 0x_33, 0x_50, 0x_7B, 0x_30, 0x_E1, 0x_7C,
		0x_4F, 0x_16, 0x_48, 0x_87, 0x_08, 0x_B3, 0x_55, 0x_61, 0x_46, 0x_B1, 0x_C8, 0x_AF, 0x_C2, 0x_27, 0x_21,
		0x_74, 0x_24, 0x_F6, 0x_5E, 0x_5A, 0x_72, 0x_F9, 0x_86, 0x_04, 0x_CD, 0x_9D, 0x_E4, 0x_88, 0x_EB, 0x_53,
		0x_AD, 0x_B6, 0x_FC, 0x_F8, 0x_CB, 0x_2E, 0x_29, 0x_D3, 0x_0E, 0x_71, 0x_6A, 0x_90, 0x_D5, 0x_06, 0x_D4,
		0x_B4, 0x_1B, 0x_1F, 0x_81, 0x_36, 0x_47, 0x_58, 0x_19, 0x_D7, 0x_B7, 0x_A1, 0x_F4, 0x_97,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_whitespaces_and_signs_and_98_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_98_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0C,
		0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_CE, 0x_43, 0x_51, 0x_91, 0x_9E, 0x_C3, 0x_A5, 0x_CB,
		0x_69, 0x_CF, 0x_14, 0x_32, 0x_40, 0x_15, 0x_D1, 0x_F4, 0x_40, 0x_77, 0x_B4, 0x_74, 0x_84, 0x_84, 0x_C3,
		0x_07, 0x_32, 0x_81, 0x_07, 0x_8E, 0x_43, 0x_38, 0x_75, 0x_82, 0x_77, 0x_A5, 0x_43, 0x_30, 0x_D1, 0x_C8,
		0x_B5, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_CE, 0x_5C, 0x_82, 0x_24, 0x_40, 0x_92, 0x_81, 0x_6F, 0x_4F, 0x_79, 0x_C1, 0x_1A, 0x_D1, 0x_15,
		0x_70, 0x_D6, 0x_74, 0x_F4, 0x_FA, 0x_8B, 0x_64, 0x_9D, 0x_32, 0x_47, 0x_43, 0x_75, 0x_B5, 0x_C8, 0x_53,
		0x_6C, 0x_72, 0x_CB, 0x_12, 0x_C3, 0x_6B, 0x_35, 0x_EA, 0x_52, 0x_D3, 0x_9E, 0x_8A, 0x_30, 0x_6E, 0x_9A,
		0x_83, 0x_8C, 0x_14, 0x_EE, 0x_0F, 0x_F6, 0x_95, 0x_5F, 0x_38, 0x_5A, 0x_55, 0x_A5, 0x_67, 0x_84, 0x_60,
		0x_94, 0x_B4, 0x_AE, 0x_BB, 0x_91, 0x_69, 0x_07, 0x_C9, 0x_1C, 0x_76, 0x_8E, 0x_CF, 0x_77,
	];

	helper(S, BASE, 98);
}
// endregion
// region: s_has_whitespaces_and_signs_and_840_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_840_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_20,
		0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_0A,
		0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_39, 0x_8C, 0x_C9, 0x_EE, 0x_FB, 0x_88, 0x_A8, 0x_5F, 0x_5C, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_EE, 0x_BE, 0x_3E, 0x_D7, 0x_88, 0x_B0, 0x_56, 0x_7F, 0x_90, 0x_A8, 0x_39, 0x_4C, 0x_DB, 0x_5B,
		0x_BD, 0x_CE, 0x_F4, 0x_CC, 0x_03, 0x_E4, 0x_A2, 0x_29, 0x_AE, 0x_8E, 0x_F5, 0x_A7, 0x_C3, 0x_BB, 0x_CD,
		0x_55, 0x_07, 0x_61, 0x_E2, 0x_6C, 0x_3B, 0x_25, 0x_8C, 0x_F2, 0x_8D, 0x_D6, 0x_F8, 0x_EA, 0x_14, 0x_5C,
		0x_6F, 0x_DE, 0x_D8, 0x_5E, 0x_31, 0x_53, 0x_26, 0x_BF, 0x_9F, 0x_C2, 0x_18, 0x_63, 0x_AC, 0x_36, 0x_DC,
		0x_96, 0x_7E, 0x_24, 0x_5F, 0x_15, 0x_1C, 0x_D9, 0x_9B, 0x_72, 0x_DD, 0x_FB, 0x_54, 0x_DF,
	];

	helper(S, BASE, 840);
}
// endregion
// region: s_has_whitespaces_and_signs_and_5_641_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_5_641_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_8D, 0x_FB, 0x_C8, 0x_AF, 0x_7F, 0x_7C, 0x_2E, 0x_7B, 0x_3A, 0x_A7, 0x_38, 0x_92,
		0x_BE, 0x_6A, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_8D, 0x_1A, 0x_63, 0x_FB, 0x_70, 0x_15, 0x_E7, 0x_39, 0x_85, 0x_59, 0x_99, 0x_3A, 0x_92, 0x_EF,
		0x_8A, 0x_A7, 0x_76, 0x_7C, 0x_01, 0x_C8, 0x_A9, 0x_B9, 0x_6E, 0x_88, 0x_FE, 0x_DA, 0x_C3, 0x_E3, 0x_75,
		0x_BC, 0x_16, 0x_E2, 0x_FA, 0x_D6, 0x_A2, 0x_1B, 0x_D8, 0x_8C, 0x_43, 0x_7B, 0x_24, 0x_2E, 0x_77, 0x_ED,
		0x_95, 0x_BE, 0x_38, 0x_F8, 0x_4D, 0x_87, 0x_C1, 0x_FD, 0x_CD, 0x_F6, 0x_7F, 0x_A6, 0x_22, 0x_42, 0x_E6,
		0x_48, 0x_73, 0x_8B, 0x_6A, 0x_AC, 0x_40, 0x_2A, 0x_B3, 0x_66, 0x_02, 0x_EE, 0x_78, 0x_9F,
	];

	helper(S, BASE, 5_641);
}
// endregion
// region: s_has_whitespaces_and_signs_and_95_184_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_95_184_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_E3, 0x_03, 0x_02, 0x_1E, 0x_55, 0x_DA,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_88, 0x_8C, 0x_8A, 0x_5A, 0x_25, 0x_23, 0x_F5, 0x_C8, 0x_F6, 0x_ED, 0x_37, 0x_F2, 0x_45, 0x_B1,
		0x_01, 0x_24, 0x_E3, 0x_7A, 0x_4E, 0x_E7, 0x_62, 0x_34, 0x_DA, 0x_51, 0x_2C, 0x_82, 0x_53, 0x_6F, 0x_AF,
		0x_A5, 0x_55, 0x_9D, 0x_97, 0x_9E, 0x_81, 0x_9F, 0x_77, 0x_A9, 0x_CD, 0x_21, 0x_13, 0x_86, 0x_CA, 0x_D8,
		0x_E6, 0x_5B, 0x_D3, 0x_54, 0x_CC, 0x_8E, 0x_A7, 0x_74, 0x_26, 0x_19, 0x_2F, 0x_C0, 0x_4A, 0x_3E, 0x_E5,
		0x_96, 0x_AC, 0x_03, 0x_BE, 0x_63, 0x_02, 0x_40, 0x_75, 0x_89, 0x_1D, 0x_B8, 0x_84, 0x_6A,
	];

	helper(S, BASE, 95_184);
}
// endregion
// region: s_has_whitespaces_and_signs_and_389_302_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_389_302_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0A,
		0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_D9, 0x_2E, 0x_46, 0x_B7, 0x_DD, 0x_02, 0x_32, 0x_01, 0x_C6, 0x_D9, 0x_41, 0x_BC, 0x_22, 0x_A0,
		0x_7C, 0x_4F, 0x_D4, 0x_5F, 0x_25, 0x_F4, 0x_75, 0x_75, 0x_FF, 0x_D9, 0x_A3, 0x_8D, 0x_32, 0x_50, 0x_75,
		0x_32, 0x_0E, 0x_F1, 0x_C8, 0x_58, 0x_DE, 0x_E6, 0x_77, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_D9, 0x_33, 0x_46, 0x_75, 0x_C4, 0x_02, 0x_51, 0x_D8, 0x_98, 0x_04, 0x_64, 0x_60, 0x_8D, 0x_B1,
		0x_F4, 0x_54, 0x_41, 0x_DE, 0x_67, 0x_B6, 0x_FB, 0x_FF, 0x_EA, 0x_32, 0x_78, 0x_13, 0x_4F, 0x_97, 0x_58,
		0x_D4, 0x_9E, 0x_22, 0x_50, 0x_53, 0x_D2, 0x_E6, 0x_77, 0x_34, 0x_AB, 0x_63, 0x_AE, 0x_5F, 0x_FE, 0x_1B,
		0x_0F, 0x_66, 0x_9F, 0x_C8, 0x_F1, 0x_A3, 0x_14, 0x_DB, 0x_27, 0x_6B, 0x_A0, 0x_BC, 0x_3B, 0x_1A, 0x_E7,
		0x_AD, 0x_01, 0x_7C, 0x_25, 0x_74, 0x_C6, 0x_B7, 0x_95, 0x_AC, 0x_16, 0x_3F, 0x_C5, 0x_0E,
	];

	helper(S, BASE, 389_302);
}
// endregion
// region: s_has_whitespaces_and_signs_and_9_920_097_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_9_920_097_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0C,
		0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_20,
		0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_6E, 0x_36, 0x_8C, 0x_93, 0x_3D, 0x_A9, 0x_EC, 0x_8C, 0x_67, 0x_80, 0x_40, 0x_6E, 0x_EF, 0x_67, 0x_BC,
		0x_3E, 0x_67, 0x_C2, 0x_AB, 0x_ED, 0x_ED, 0x_4C, 0x_9A, 0x_E5, 0x_93, 0x_14, 0x_4D, 0x_DA, 0x_01, 0x_01,
		0x_86, 0x_95, 0x_43, 0x_65, 0x_35, 0x_36, 0x_01, 0x_DA, 0x_40, 0x_24, 0x_A6, 0x_E0, 0x_25, 0x_29, 0x_E2,
		0x_81,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_A2, 0x_01, 0x_C5, 0x_A6, 0x_86, 0x_9C, 0x_3E, 0x_B2, 0x_4D, 0x_67, 0x_C7, 0x_2C, 0x_BF, 0x_AB,
		0x_2E, 0x_C1, 0x_35, 0x_40, 0x_A4, 0x_E0, 0x_1F, 0x_95, 0x_98, 0x_E5, 0x_6E, 0x_EF, 0x_81, 0x_53, 0x_E2,
		0x_FE, 0x_A9, 0x_12, 0x_87, 0x_7D, 0x_22, 0x_36, 0x_8A, 0x_8C, 0x_EA, 0x_F6, 0x_4C, 0x_37, 0x_F3, 0x_B9,
		0x_14, 0x_C2, 0x_F5, 0x_80, 0x_29, 0x_4E, 0x_FA, 0x_FF, 0x_9A, 0x_93, 0x_65, 0x_19, 0x_EC, 0x_B4, 0x_F9,
		0x_DA, 0x_66, 0x_ED, 0x_DD, 0x_43, 0x_D0, 0x_BC, 0x_24, 0x_B7, 0x_6A, 0x_A5, 0x_33, 0x_25,
	];

	helper(S, BASE, 9_920_097);
}
// endregion
// region: s_has_whitespaces_and_signs_and_36_397_518_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_36_397_518_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_A1, 0x_21, 0x_AD,
		0x_2E, 0x_C7, 0x_92, 0x_88, 0x_5E, 0x_D5, 0x_17, 0x_BE, 0x_5E, 0x_6F, 0x_33, 0x_5E, 0x_F9, 0x_EB, 0x_5A,
		0x_F9, 0x_F9, 0x_88, 0x_A1, 0x_CF, 0x_18, 0x_EF, 0x_35, 0x_F1, 0x_D5, 0x_5E, 0x_F6, 0x_C6, 0x_4A, 0x_9D,
		0x_ED, 0x_C7, 0x_60, 0x_87, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_A1, 0x_87, 0x_3D, 0x_55, 0x_33, 0x_2E, 0x_5A, 0x_D5, 0x_39, 0x_C7, 0x_BC, 0x_22, 0x_EF, 0x_5D,
		0x_DA, 0x_FB, 0x_E8, 0x_F0, 0x_F2, 0x_21, 0x_AC, 0x_F9, 0x_6F, 0x_2A, 0x_BE, 0x_F6, 0x_15, 0x_81, 0x_17,
		0x_72, 0x_A9, 0x_96, 0x_ED, 0x_C6, 0x_73, 0x_67, 0x_5E, 0x_93, 0x_A8, 0x_A7, 0x_AD, 0x_E4, 0x_7B, 0x_6A,
		0x_61, 0x_88, 0x_EB, 0x_C0, 0x_1D, 0x_18, 0x_40, 0x_AB, 0x_1F, 0x_9D, 0x_DF, 0x_4A, 0x_31, 0x_56, 0x_DB,
		0x_F1, 0x_54, 0x_89, 0x_9F, 0x_CB, 0x_60, 0x_2C, 0x_58, 0x_90, 0x_CE, 0x_65, 0x_C2, 0x_CF,
	];

	helper(S, BASE, 36_397_518);
}
// endregion
// region: s_has_whitespaces_and_signs_and_443_232_084_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_443_232_084_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_96, 0x_E6, 0x_C2, 0x_CA, 0x_F2,
		0x_24, 0x_9E, 0x_8B, 0x_0F, 0x_80, 0x_DC, 0x_C7, 0x_FC, 0x_10, 0x_35, 0x_73, 0x_39, 0x_E6, 0x_85, 0x_6B,
		0x_C1, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_5C, 0x_EF, 0x_73, 0x_AD, 0x_DF, 0x_2E, 0x_C7, 0x_10, 0x_0E, 0x_72, 0x_B9, 0x_6D, 0x_5A, 0x_D6,
		0x_96, 0x_4B, 0x_BF, 0x_25, 0x_DD, 0x_F7, 0x_DC, 0x_9E, 0x_BA, 0x_21, 0x_85, 0x_C2, 0x_43, 0x_F2, 0x_DA,
		0x_FC, 0x_35, 0x_A7, 0x_5E, 0x_CF, 0x_93, 0x_BB, 0x_8B, 0x_79, 0x_40, 0x_39, 0x_6A, 0x_81, 0x_CA, 0x_E6,
		0x_49, 0x_52, 0x_AE, 0x_9B, 0x_38, 0x_AA, 0x_04, 0x_1E, 0x_45, 0x_9A, 0x_03, 0x_6B, 0x_2C, 0x_C5, 0x_84,
		0x_9F, 0x_B4, 0x_0F, 0x_74, 0x_7B, 0x_C1, 0x_08, 0x_F4, 0x_CB, 0x_CE, 0x_F3, 0x_80, 0x_95,
	];

	helper(S, BASE, 443_232_084);
}
// endregion
// region: s_has_whitespaces_and_signs_and_9_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_9_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_09,
		0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_BF,
		0x_71, 0x_D8, 0x_45, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_75, 0x_FA, 0x_1E, 0x_82, 0x_7B, 0x_50, 0x_D7, 0x_84, 0x_BF, 0x_C3, 0x_0E, 0x_EC, 0x_94, 0x_54,
		0x_23, 0x_BD, 0x_FE, 0x_AB, 0x_46, 0x_1A, 0x_DB, 0x_F6, 0x_F5, 0x_E8, 0x_28, 0x_03, 0x_AD, 0x_13, 0x_1F,
		0x_3A, 0x_35, 0x_9E, 0x_B0, 0x_49, 0x_B5, 0x_42, 0x_39, 0x_72, 0x_01, 0x_99, 0x_65, 0x_16, 0x_DD, 0x_DA,
		0x_87, 0x_B4, 0x_A0, 0x_B1, 0x_AF, 0x_11, 0x_A1, 0x_A4, 0x_56, 0x_BB, 0x_EA, 0x_60, 0x_9B, 0x_45, 0x_D1,
		0x_93, 0x_F7, 0x_D3, 0x_95, 0x_8F, 0x_10, 0x_80, 0x_D6, 0x_66, 0x_E2, 0x_58, 0x_E4, 0x_B8, 0x_E6, 0x_D2,
		0x_22, 0x_C6, 0x_7E, 0x_AE, 0x_1C, 0x_6C, 0x_68, 0x_DE, 0x_5D, 0x_E7, 0x_F1, 0x_A8, 0x_8A, 0x_B7, 0x_88,
		0x_9C, 0x_40, 0x_B2, 0x_ED, 0x_38, 0x_A5, 0x_C9, 0x_CD, 0x_D8, 0x_E5, 0x_9F, 0x_DC, 0x_2E, 0x_48, 0x_5F,
		0x_07, 0x_31, 0x_6A, 0x_2F, 0x_3B, 0x_B6, 0x_C0, 0x_C4,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_whitespaces_and_signs_and_41_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_41_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_B3, 0x_82, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_1E, 0x_3C, 0x_CE, 0x_40, 0x_06, 0x_EA, 0x_19, 0x_10, 0x_78, 0x_39, 0x_25, 0x_13, 0x_5C, 0x_70,
		0x_BB, 0x_52, 0x_3D, 0x_A4, 0x_50, 0x_63, 0x_0E, 0x_A8, 0x_6B, 0x_18, 0x_F1, 0x_64, 0x_98, 0x_8A, 0x_2A,
		0x_D0, 0x_29, 0x_75, 0x_A6, 0x_73, 0x_DB, 0x_94, 0x_C5, 0x_71, 0x_CD, 0x_AF, 0x_B3, 0x_80, 0x_4E, 0x_14,
		0x_45, 0x_F6, 0x_C7, 0x_AA, 0x_D3, 0x_95, 0x_5F, 0x_F9, 0x_37, 0x_3E, 0x_E6, 0x_74, 0x_7C, 0x_8D, 0x_8C,
		0x_72, 0x_D5, 0x_84, 0x_61, 0x_97, 0x_46, 0x_1C, 0x_2F, 0x_D7, 0x_11, 0x_D9, 0x_D1, 0x_C2, 0x_B0, 0x_54,
		0x_86, 0x_01, 0x_8F, 0x_7D, 0x_43, 0x_59, 0x_B7, 0x_56, 0x_81, 0x_99, 0x_62, 0x_ED, 0x_12, 0x_1F, 0x_AC,
		0x_E8, 0x_EF, 0x_83, 0x_87, 0x_FB, 0x_6D, 0x_5D, 0x_02, 0x_C1, 0x_85, 0x_9E, 0x_D8, 0x_57, 0x_A0, 0x_5A,
		0x_27, 0x_58, 0x_7F, 0x_AD, 0x_93, 0x_28, 0x_E4, 0x_04,
	];

	helper(S, BASE, 41);
}
// endregion
// region: s_has_whitespaces_and_signs_and_649_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_649_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0C,
		0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_20,
		0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_F8, 0x_BA, 0x_B5, 0x_7B, 0x_E5, 0x_B6, 0x_49, 0x_AA, 0x_27, 0x_88, 0x_3E, 0x_B2, 0x_DD, 0x_CC,
		0x_D6, 0x_C0, 0x_C2, 0x_05, 0x_1D, 0x_FD, 0x_C5, 0x_EF, 0x_87, 0x_88, 0x_91, 0x_56, 0x_DF, 0x_8B, 0x_8A,
		0x_8D,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_7C, 0x_D3, 0x_8D, 0x_8B, 0x_F8, 0x_05, 0x_B6, 0x_17, 0x_13, 0x_8A, 0x_96, 0x_1E, 0x_AA, 0x_E2,
		0x_1D, 0x_73, 0x_91, 0x_EF, 0x_56, 0x_70, 0x_21, 0x_10, 0x_87, 0x_FE, 0x_B9, 0x_F0, 0x_ED, 0x_A5, 0x_FA,
		0x_34, 0x_B1, 0x_53, 0x_54, 0x_27, 0x_C7, 0x_B2, 0x_C0, 0x_89, 0x_49, 0x_D1, 0x_A8, 0x_95, 0x_E5, 0x_C6,
		0x_3A, 0x_88, 0x_3D, 0x_1F, 0x_7D, 0x_0E, 0x_37, 0x_C5, 0x_DD, 0x_1B, 0x_FD, 0x_98, 0x_AF, 0x_46, 0x_78,
		0x_D9, 0x_FB, 0x_A4, 0x_4F, 0x_6D, 0x_FC, 0x_97, 0x_31, 0x_48, 0x_C2, 0x_FF, 0x_F6, 0x_CB, 0x_8E, 0x_12,
		0x_0F, 0x_5F, 0x_6F, 0x_85, 0x_4D, 0x_C4, 0x_DF, 0x_B4, 0x_5C, 0x_BA, 0x_D6, 0x_52, 0x_39, 0x_C9, 0x_43,
		0x_CC, 0x_90, 0x_BB, 0x_8F, 0x_3C, 0x_B3, 0x_3E, 0x_64, 0x_07, 0x_15, 0x_E6, 0x_7B, 0x_B0, 0x_EE, 0x_F9,
		0x_4A, 0x_11, 0x_74, 0x_CD, 0x_9B, 0x_65, 0x_19, 0x_DA,
	];

	helper(S, BASE, 649);
}
// endregion
// region: s_has_whitespaces_and_signs_and_8_163_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_8_163_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0C,
		0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_20,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_41,
		0x_43, 0x_34, 0x_CD, 0x_65, 0x_F2, 0x_2E, 0x_31, 0x_0E, 0x_EC, 0x_DF, 0x_EC, 0x_83, 0x_A3, 0x_BB, 0x_BB,
		0x_79, 0x_E6, 0x_E0, 0x_65, 0x_26, 0x_F2, 0x_53, 0x_F3, 0x_84, 0x_B1, 0x_45, 0x_65, 0x_FA, 0x_AA, 0x_DD,
		0x_1A, 0x_92, 0x_F3, 0x_89, 0x_79, 0x_3F, 0x_0E, 0x_FA,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_E8, 0x_CD, 0x_60, 0x_EB, 0x_9A, 0x_FA, 0x_91, 0x_C4, 0x_84, 0x_FC, 0x_A0, 0x_E0, 0x_85, 0x_44,
		0x_66, 0x_76, 0x_F8, 0x_D2, 0x_90, 0x_B3, 0x_A5, 0x_6E, 0x_18, 0x_D1, 0x_BC, 0x_BB, 0x_43, 0x_B9, 0x_C5,
		0x_F1, 0x_3D, 0x_31, 0x_AD, 0x_E6, 0x_6A, 0x_21, 0x_7C, 0x_79, 0x_4D, 0x_D3, 0x_10, 0x_99, 0x_6B, 0x_2A,
		0x_88, 0x_C0, 0x_17, 0x_DC, 0x_7D, 0x_3F, 0x_E5, 0x_83, 0x_45, 0x_5E, 0x_14, 0x_DF, 0x_D5, 0x_78, 0x_F2,
		0x_74, 0x_1A, 0x_1E, 0x_7F, 0x_AA, 0x_03, 0x_3E, 0x_F3, 0x_B1, 0x_46, 0x_A3, 0x_B7, 0x_41, 0x_53, 0x_65,
		0x_DA, 0x_FF, 0x_B2, 0x_B0, 0x_AC, 0x_89, 0x_63, 0x_49, 0x_C1, 0x_30, 0x_EC, 0x_0E, 0x_19, 0x_8B, 0x_2E,
		0x_E7, 0x_B6, 0x_48, 0x_70, 0x_5D, 0x_ED, 0x_36, 0x_05, 0x_3B, 0x_FD, 0x_75, 0x_13, 0x_5C, 0x_02, 0x_15,
		0x_D6, 0x_DD, 0x_98, 0x_80, 0x_92, 0x_26, 0x_A7, 0x_97,
	];

	helper(S, BASE, 8_163);
}
// endregion
// region: s_has_whitespaces_and_signs_and_60_633_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_60_633_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_28, 0x_A5,
		0x_84, 0x_4D, 0x_D2, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_9B, 0x_2A, 0x_F1, 0x_28, 0x_BC, 0x_73, 0x_8A, 0x_61, 0x_78, 0x_25, 0x_4E, 0x_35, 0x_12, 0x_8B,
		0x_B5, 0x_1C, 0x_18, 0x_0F, 0x_38, 0x_D8, 0x_C2, 0x_43, 0x_B8, 0x_98, 0x_A1, 0x_C3, 0x_3C, 0x_3A, 0x_F6,
		0x_ED, 0x_75, 0x_79, 0x_B2, 0x_41, 0x_D2, 0x_E6, 0x_03, 0x_CD, 0x_49, 0x_D7, 0x_FC, 0x_D9, 0x_7F, 0x_72,
		0x_5A, 0x_52, 0x_C7, 0x_3F, 0x_CB, 0x_BF, 0x_A9, 0x_08, 0x_5D, 0x_E1, 0x_DE, 0x_99, 0x_7D, 0x_D3, 0x_47,
		0x_05, 0x_CA, 0x_2C, 0x_DA, 0x_6F, 0x_84, 0x_1E, 0x_6E, 0x_22, 0x_57, 0x_E4, 0x_02, 0x_4C, 0x_26, 0x_27,
		0x_F3, 0x_69, 0x_B7, 0x_53, 0x_83, 0x_F2, 0x_C6, 0x_91, 0x_E8, 0x_A5, 0x_F5, 0x_89, 0x_93, 0x_58, 0x_A7,
		0x_BB, 0x_8F, 0x_8D, 0x_FB, 0x_2E, 0x_CC, 0x_D5, 0x_F4, 0x_DB, 0x_50, 0x_21, 0x_80, 0x_D1, 0x_17, 0x_A3,
		0x_5B, 0x_88, 0x_45, 0x_5E, 0x_64, 0x_46, 0x_66, 0x_AA,
	];

	helper(S, BASE, 60_633);
}
// endregion
// region: s_has_whitespaces_and_signs_and_769_884_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_769_884_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_09,
		0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_8C, 0x_83, 0x_EE, 0x_93,
		0x_19, 0x_C8, 0x_30, 0x_CC, 0x_29, 0x_E5, 0x_CF, 0x_8F, 0x_E1, 0x_8D, 0x_19, 0x_9B, 0x_0F, 0x_52, 0x_94,
		0x_CC,
	];
	const BASE: &[u8] = &[
		0x_87, 0x_94, 0x_68, 0x_9E, 0x_BC, 0x_1D, 0x_3D, 0x_C2, 0x_08, 0x_53, 0x_39, 0x_95, 0x_C1, 0x_B1, 0x_CF,
		0x_EE, 0x_17, 0x_90, 0x_E2, 0x_97, 0x_F3, 0x_B3, 0x_D0, 0x_1F, 0x_7E, 0x_31, 0x_C5, 0x_80, 0x_CE, 0x_38,
		0x_9B, 0x_65, 0x_F5, 0x_83, 0x_EB, 0x_8E, 0x_12, 0x_A4, 0x_67, 0x_81, 0x_3A, 0x_C6, 0x_05, 0x_49, 0x_76,
		0x_D6, 0x_23, 0x_FD, 0x_5D, 0x_7B, 0x_B0, 0x_40, 0x_42, 0x_6D, 0x_EF, 0x_1A, 0x_21, 0x_56, 0x_8D, 0x_BF,
		0x_8C, 0x_DF, 0x_C9, 0x_CA, 0x_E8, 0x_4D, 0x_D2, 0x_27, 0x_AF, 0x_CD, 0x_F4, 0x_D1, 0x_72, 0x_CC, 0x_66,
		0x_CB, 0x_E5, 0x_29, 0x_A2, 0x_BE, 0x_52, 0x_6A, 0x_FE, 0x_7D, 0x_B4, 0x_8F, 0x_73, 0x_B5, 0x_62, 0x_AE,
		0x_6B, 0x_DB, 0x_B8, 0x_E1, 0x_C8, 0x_D7, 0x_60, 0x_01, 0x_58, 0x_0F, 0x_F9, 0x_5B, 0x_AA, 0x_44, 0x_6F,
		0x_E7, 0x_57, 0x_FB, 0x_19, 0x_A0, 0x_30, 0x_37, 0x_FA,
	];

	helper(S, BASE, 769_884);
}
// endregion
// region: s_has_whitespaces_and_signs_and_5_209_150_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_5_209_150_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_48, 0x_67, 0x_76, 0x_FD, 0x_2C, 0x_58, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_9D, 0x_18, 0x_48, 0x_70, 0x_60, 0x_A5, 0x_9B, 0x_E2, 0x_95, 0x_66, 0x_1B, 0x_AD, 0x_B1, 0x_04,
		0x_CA, 0x_FC, 0x_6D, 0x_D0, 0x_D8, 0x_D3, 0x_46, 0x_1E, 0x_27, 0x_6F, 0x_74, 0x_AC, 0x_FB, 0x_90, 0x_DA,
		0x_77, 0x_33, 0x_A6, 0x_58, 0x_71, 0x_DD, 0x_85, 0x_5D, 0x_05, 0x_AA, 0x_15, 0x_0F, 0x_6C, 0x_D7, 0x_7A,
		0x_16, 0x_4F, 0x_A8, 0x_19, 0x_C1, 0x_CD, 0x_CE, 0x_F6, 0x_72, 0x_75, 0x_01, 0x_A1, 0x_0E, 0x_AE, 0x_A4,
		0x_56, 0x_39, 0x_9E, 0x_25, 0x_73, 0x_65, 0x_34, 0x_CC, 0x_67, 0x_C6, 0x_A2, 0x_52, 0x_94, 0x_FE, 0x_EA,
		0x_51, 0x_FD, 0x_E8, 0x_D6, 0x_B2, 0x_C5, 0x_59, 0x_7D, 0x_9F, 0x_1D, 0x_D2, 0x_86, 0x_D9, 0x_CB, 0x_35,
		0x_80, 0x_4C, 0x_A9, 0x_F5, 0x_89, 0x_B5, 0x_38, 0x_E4, 0x_6A, 0x_64, 0x_E5, 0x_A7, 0x_4A, 0x_36, 0x_E6,
		0x_02, 0x_3E, 0x_76, 0x_D4, 0x_AF, 0x_ED, 0x_7B, 0x_5C,
	];

	helper(S, BASE, 5_209_150);
}
// endregion
// region: s_has_whitespaces_and_signs_and_93_820_422_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_93_820_422_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_20,
		0x_20, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_20,
		0x_09, 0x_09, 0x_0A, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_05, 0x_A0, 0x_A3, 0x_39, 0x_DA, 0x_36, 0x_32,
		0x_4B,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_F7, 0x_A0, 0x_4B, 0x_69, 0x_C5, 0x_6E, 0x_74, 0x_FD, 0x_D2, 0x_A7, 0x_C6, 0x_8C, 0x_AD, 0x_24,
		0x_82, 0x_6F, 0x_33, 0x_EE, 0x_02, 0x_9B, 0x_CC, 0x_B2, 0x_FA, 0x_BC, 0x_39, 0x_77, 0x_63, 0x_36, 0x_8E,
		0x_EB, 0x_65, 0x_BD, 0x_94, 0x_27, 0x_0F, 0x_60, 0x_2A, 0x_F9, 0x_3A, 0x_62, 0x_10, 0x_37, 0x_32, 0x_F8,
		0x_C7, 0x_C8, 0x_B8, 0x_3D, 0x_FC, 0x_87, 0x_EA, 0x_78, 0x_7A, 0x_57, 0x_1F, 0x_79, 0x_CB, 0x_A3, 0x_99,
		0x_E4, 0x_89, 0x_22, 0x_1C, 0x_4C, 0x_05, 0x_16, 0x_7D, 0x_28, 0x_84, 0x_34, 0x_4D, 0x_E1, 0x_5B, 0x_D4,
		0x_7B, 0x_F6, 0x_6A, 0x_23, 0x_F2, 0x_FF, 0x_2E, 0x_5A, 0x_B4, 0x_51, 0x_19, 0x_45, 0x_2C, 0x_B3, 0x_E2,
		0x_D9, 0x_B7, 0x_8A, 0x_A8, 0x_92, 0x_F0, 0x_55, 0x_C0, 0x_C4, 0x_E5, 0x_E3, 0x_25, 0x_4F, 0x_06, 0x_68,
		0x_7F, 0x_AB, 0x_FE, 0x_7C, 0x_A9, 0x_C9, 0x_93, 0x_B5,
	];

	helper(S, BASE, 93_820_422);
}
// endregion
// region: s_has_whitespaces_and_signs_and_671_471_646_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_671_471_646_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_0C,
		0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_94, 0x_BD, 0x_3C, 0x_CE, 0x_9F, 0x_4E, 0x_98, 0x_BA,
		0x_1F, 0x_BD, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_57, 0x_03, 0x_98, 0x_D8, 0x_94, 0x_13, 0x_AA, 0x_86, 0x_CE, 0x_37, 0x_9B, 0x_58, 0x_B6, 0x_BD, 0x_10,
		0x_C3, 0x_3B, 0x_07, 0x_62, 0x_2C, 0x_91, 0x_97, 0x_8E, 0x_40, 0x_28, 0x_42, 0x_E9, 0x_B4, 0x_CF, 0x_11,
		0x_F2, 0x_74, 0x_04, 0x_99, 0x_53, 0x_96, 0x_F9, 0x_EA, 0x_1B, 0x_E8, 0x_F0, 0x_3C, 0x_81, 0x_CA, 0x_B2,
		0x_9A, 0x_55, 0x_25, 0x_DD, 0x_1F, 0x_D4, 0x_D5, 0x_6A, 0x_0E, 0x_C7, 0x_BB, 0x_9E, 0x_87, 0x_FD, 0x_1A,
		0x_66, 0x_60, 0x_EC, 0x_3F, 0x_D9, 0x_C8, 0x_05, 0x_B5, 0x_DF, 0x_6B, 0x_51, 0x_76, 0x_C1, 0x_0F, 0x_DA,
		0x_F6, 0x_82, 0x_7F, 0x_3D, 0x_35, 0x_8F, 0x_FB, 0x_6C, 0x_BF, 0x_92, 0x_36, 0x_B9, 0x_16, 0x_E7, 0x_2E,
		0x_BA, 0x_3A, 0x_32, 0x_CD, 0x_8B, 0x_E1, 0x_21, 0x_1C, 0x_79, 0x_4B, 0x_75, 0x_34, 0x_8D, 0x_D6, 0x_64,
		0x_54, 0x_D3, 0x_70, 0x_9F, 0x_A9, 0x_48, 0x_02, 0x_9D,
	];

	helper(S, BASE, 671_471_646);
}
// endregion
// region: s_has_whitespaces_and_signs_and_3_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_3_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0B,
		0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_1B, 0x_E9, 0x_1C, 0x_C9, 0x_8D, 0x_DB, 0x_6D, 0x_21, 0x_4A, 0x_03, 0x_A9, 0x_B2, 0x_79,
		0x_BF, 0x_EA, 0x_4E, 0x_15, 0x_13, 0x_99, 0x_C9, 0x_A9, 0x_81, 0x_EE, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_57, 0x_A7, 0x_A3, 0x_1B, 0x_0F, 0x_C4, 0x_99, 0x_16, 0x_86, 0x_8E, 0x_78, 0x_BE, 0x_EF, 0x_D3, 0x_35,
		0x_A4, 0x_BA, 0x_9C, 0x_F5, 0x_A1, 0x_9A, 0x_8C, 0x_7E, 0x_D6, 0x_3C, 0x_9D, 0x_B0, 0x_42, 0x_89, 0x_95,
		0x_88, 0x_64, 0x_D9, 0x_49, 0x_A0, 0x_59, 0x_FA, 0x_B3, 0x_26, 0x_8F, 0x_7F, 0x_8B, 0x_F9, 0x_AC, 0x_37,
		0x_F7, 0x_8D, 0x_E8, 0x_AD, 0x_5C, 0x_72, 0x_E1, 0x_04, 0x_F0, 0x_3F, 0x_E2, 0x_34, 0x_14, 0x_7B, 0x_F6,
		0x_8A, 0x_62, 0x_EA, 0x_CD, 0x_CF, 0x_38, 0x_B8, 0x_83, 0x_87, 0x_D5, 0x_FE, 0x_47, 0x_22, 0x_A5, 0x_E5,
		0x_C7, 0x_B9, 0x_29, 0x_93, 0x_70, 0x_74, 0x_4B, 0x_1E, 0x_11, 0x_19, 0x_E4, 0x_03, 0x_AE, 0x_BB, 0x_4A,
		0x_92, 0x_D1, 0x_CE, 0x_AA, 0x_CC, 0x_69, 0x_9F, 0x_C9, 0x_41, 0x_0E, 0x_21, 0x_3E, 0x_5F, 0x_50, 0x_18,
		0x_DB, 0x_A6, 0x_4E, 0x_2E, 0x_46, 0x_9E, 0x_79, 0x_15, 0x_30, 0x_FC, 0x_4C, 0x_25, 0x_90, 0x_2C, 0x_E0,
		0x_7D, 0x_73, 0x_EC, 0x_5B, 0x_E6, 0x_36, 0x_EE, 0x_3A, 0x_1C, 0x_A8, 0x_60, 0x_D4, 0x_1D, 0x_4D, 0x_3B,
		0x_CA, 0x_48, 0x_B2, 0x_65, 0x_56, 0x_13, 0x_5E, 0x_D8, 0x_6E, 0x_D7, 0x_B1, 0x_98, 0x_77, 0x_2A, 0x_DC,
		0x_E3, 0x_68, 0x_D0, 0x_07, 0x_54, 0x_6A, 0x_24, 0x_01, 0x_45, 0x_58, 0x_6D, 0x_53, 0x_2F, 0x_BC, 0x_1A,
		0x_4F, 0x_DA, 0x_C8, 0x_A9, 0x_80, 0x_10, 0x_27, 0x_FB, 0x_28, 0x_23, 0x_6B, 0x_F2, 0x_08, 0x_81, 0x_96,
		0x_A2, 0x_BF, 0x_F8, 0x_06, 0x_51, 0x_B6, 0x_5A, 0x_C0, 0x_71, 0x_1F, 0x_61, 0x_C6, 0x_EB,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_44_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_44_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_0B,
		0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_34, 0x_07,
		0x_CD, 0x_77, 0x_16, 0x_65, 0x_50, 0x_D8, 0x_4F, 0x_1B, 0x_D9, 0x_64, 0x_45, 0x_4F, 0x_F2, 0x_FA, 0x_70,
		0x_C8, 0x_90, 0x_1E, 0x_C8, 0x_6F, 0x_E9, 0x_86, 0x_E6, 0x_C6, 0x_D9, 0x_55, 0x_1B, 0x_AC, 0x_95, 0x_FC,
		0x_5B,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_55, 0x_40, 0x_B5, 0x_B9, 0x_53, 0x_DC, 0x_92, 0x_62, 0x_CC, 0x_76, 0x_E7, 0x_3D, 0x_2E, 0x_41,
		0x_C0, 0x_1B, 0x_B4, 0x_B8, 0x_8E, 0x_17, 0x_87, 0x_61, 0x_CD, 0x_46, 0x_56, 0x_D2, 0x_64, 0x_10, 0x_25,
		0x_D4, 0x_57, 0x_6F, 0x_12, 0x_04, 0x_4E, 0x_1E, 0x_8B, 0x_FB, 0x_13, 0x_18, 0x_AA, 0x_16, 0x_8C, 0x_34,
		0x_E4, 0x_37, 0x_63, 0x_22, 0x_30, 0x_06, 0x_85, 0x_5A, 0x_7D, 0x_14, 0x_91, 0x_BB, 0x_8A, 0x_2A, 0x_31,
		0x_C5, 0x_EA, 0x_E5, 0x_35, 0x_1F, 0x_88, 0x_68, 0x_8D, 0x_21, 0x_E0, 0x_95, 0x_03, 0x_DF, 0x_33, 0x_90,
		0x_70, 0x_AD, 0x_F3, 0x_C1, 0x_7C, 0x_AC, 0x_29, 0x_DE, 0x_A1, 0x_9C, 0x_A3, 0x_74, 0x_6B, 0x_C8, 0x_9E,
		0x_65, 0x_CA, 0x_D0, 0x_2F, 0x_D9, 0x_3A, 0x_7E, 0x_4D, 0x_F5, 0x_BA, 0x_A9, 0x_86, 0x_45, 0x_84, 0x_FE,
		0x_EC, 0x_F8, 0x_5D, 0x_C3, 0x_B3, 0x_F4, 0x_78, 0x_EB, 0x_67, 0x_3C, 0x_CF, 0x_98, 0x_97, 0x_7F, 0x_DA,
		0x_81, 0x_C9, 0x_01, 0x_4B, 0x_FA, 0x_0F, 0x_73, 0x_F2, 0x_99, 0x_FF, 0x_B7, 0x_96, 0x_52, 0x_B6, 0x_D7,
		0x_AF, 0x_5E, 0x_1A, 0x_D8, 0x_A6, 0x_5B, 0x_B0, 0x_E3, 0x_E9, 0x_72, 0x_C7, 0x_50, 0x_3E, 0x_54, 0x_77,
		0x_A7, 0x_C6, 0x_3F, 0x_EF, 0x_44, 0x_49, 0x_48, 0x_75, 0x_F0, 0x_FD, 0x_C2, 0x_BF, 0x_3B, 0x_02, 0x_7B,
		0x_E2, 0x_A8, 0x_15, 0x_24, 0x_11, 0x_27, 0x_32, 0x_05, 0x_DD, 0x_E1, 0x_7A, 0x_B2, 0x_4F, 0x_FC, 0x_AE,
		0x_8F, 0x_BC, 0x_19, 0x_6A, 0x_79, 0x_CB, 0x_BE, 0x_A5, 0x_93, 0x_E6, 0x_F9, 0x_60, 0x_43,
	];

	helper(S, BASE, 44);
}
// endregion
// region: s_has_whitespaces_and_signs_and_396_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_396_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0D,
		0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_9E, 0x_D5, 0x_5A, 0x_BA, 0x_85, 0x_5C, 0x_85, 0x_89, 0x_7E,
		0x_9C, 0x_CB, 0x_7D, 0x_F3, 0x_EA, 0x_F8, 0x_62, 0x_07, 0x_C9, 0x_27, 0x_98, 0x_C7, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_5F, 0x_9E, 0x_06, 0x_94, 0x_CB, 0x_17, 0x_23, 0x_98, 0x_74, 0x_D5, 0x_1D, 0x_44, 0x_91, 0x_FB,
		0x_26, 0x_5C, 0x_16, 0x_E2, 0x_78, 0x_9C, 0x_DF, 0x_50, 0x_CC, 0x_11, 0x_DE, 0x_CA, 0x_31, 0x_C0, 0x_B1,
		0x_97, 0x_6B, 0x_DB, 0x_04, 0x_E5, 0x_4F, 0x_2E, 0x_33, 0x_42, 0x_D3, 0x_C3, 0x_53, 0x_B2, 0x_A0, 0x_01,
		0x_EC, 0x_AC, 0x_93, 0x_51, 0x_63, 0x_9A, 0x_92, 0x_D1, 0x_E7, 0x_E9, 0x_21, 0x_36, 0x_73, 0x_A6, 0x_FE,
		0x_30, 0x_3A, 0x_BD, 0x_0F, 0x_FD, 0x_1A, 0x_76, 0x_DC, 0x_B8, 0x_8C, 0x_AF, 0x_46, 0x_1B, 0x_77, 0x_87,
		0x_38, 0x_52, 0x_24, 0x_A5, 0x_07, 0x_62, 0x_75, 0x_56, 0x_8E, 0x_8A, 0x_C8, 0x_61, 0x_A2, 0x_57, 0x_A7,
		0x_C2, 0x_5B, 0x_5E, 0x_43, 0x_D7, 0x_99, 0x_79, 0x_FA, 0x_E6, 0x_B9, 0x_05, 0x_4C, 0x_B0, 0x_60, 0x_CE,
		0x_E1, 0x_34, 0x_0E, 0x_B6, 0x_10, 0x_AE, 0x_F0, 0x_02, 0x_9B, 0x_47, 0x_3F, 0x_6E, 0x_66, 0x_D8, 0x_29,
		0x_F3, 0x_45, 0x_2C, 0x_2A, 0x_70, 0x_2F, 0x_BC, 0x_4E, 0x_41, 0x_32, 0x_19, 0x_D2, 0x_83, 0x_DD, 0x_EA,
		0x_7E, 0x_65, 0x_C1, 0x_B5, 0x_71, 0x_7A, 0x_5D, 0x_A8, 0x_CF, 0x_C4, 0x_BE, 0x_35, 0x_A9, 0x_88, 0x_84,
		0x_EB, 0x_1F, 0x_B4, 0x_D9, 0x_39, 0x_BA, 0x_D0, 0x_7D, 0x_89, 0x_F5, 0x_54, 0x_3D, 0x_1C, 0x_58, 0x_4D,
		0x_F8, 0x_CD, 0x_18, 0x_E0, 0x_49, 0x_27, 0x_8B, 0x_E3, 0x_A3, 0x_14, 0x_F7, 0x_72, 0x_85, 0x_B3, 0x_68,
		0x_95, 0x_C9, 0x_6C, 0x_F4, 0x_7F, 0x_E4, 0x_28, 0x_C5, 0x_F2, 0x_C7, 0x_B7, 0x_4A, 0x_86,
	];

	helper(S, BASE, 396);
}
// endregion
// region: s_has_whitespaces_and_signs_and_2_462_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_2_462_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_09,
		0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0D,
		0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_32,
		0x_EA, 0x_0A, 0x_7B, 0x_9D, 0x_9A, 0x_99, 0x_18, 0x_2C, 0x_BA, 0x_50, 0x_97, 0x_E2, 0x_57, 0x_05, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_D7, 0x_41, 0x_83, 0x_5C, 0x_4A, 0x_C3, 0x_E2, 0x_E0, 0x_DF, 0x_08, 0x_68, 0x_32, 0x_CD, 0x_02,
		0x_30, 0x_97, 0x_69, 0x_39, 0x_3F, 0x_E9, 0x_3A, 0x_6E, 0x_F0, 0x_16, 0x_42, 0x_D4, 0x_C8, 0x_7B, 0x_A9,
		0x_79, 0x_BF, 0x_D5, 0x_9C, 0x_8E, 0x_17, 0x_72, 0x_05, 0x_F3, 0x_74, 0x_DC, 0x_34, 0x_58, 0x_4F, 0x_85,
		0x_60, 0x_9F, 0x_BA, 0x_8F, 0x_18, 0x_96, 0x_24, 0x_66, 0x_82, 0x_E7, 0x_3E, 0x_AA, 0x_25, 0x_2C, 0x_81,
		0x_31, 0x_48, 0x_29, 0x_B2, 0x_C2, 0x_F1, 0x_14, 0x_E4, 0x_2F, 0x_4D, 0x_BB, 0x_94, 0x_A4, 0x_AC, 0x_D3,
		0x_13, 0x_F9, 0x_65, 0x_4E, 0x_CA, 0x_CC, 0x_8C, 0x_D9, 0x_AD, 0x_C6, 0x_23, 0x_28, 0x_C0, 0x_9E, 0x_F5,
		0x_92, 0x_CE, 0x_B3, 0x_6D, 0x_9A, 0x_D8, 0x_22, 0x_1E, 0x_33, 0x_DD, 0x_2A, 0x_B6, 0x_BC, 0x_4C, 0x_89,
		0x_8D, 0x_C5, 0x_5E, 0x_ED, 0x_9B, 0x_C4, 0x_1A, 0x_3D, 0x_CF, 0x_A1, 0x_5D, 0x_63, 0x_5F, 0x_F8, 0x_95,
		0x_59, 0x_A6, 0x_C1, 0x_A2, 0x_10, 0x_26, 0x_98, 0x_75, 0x_3B, 0x_DB, 0x_7E, 0x_2E, 0x_49, 0x_6B, 0x_DA,
		0x_5B, 0x_12, 0x_D0, 0x_21, 0x_A8, 0x_B0, 0x_A5, 0x_B1, 0x_B4, 0x_46, 0x_F6, 0x_EA, 0x_AE, 0x_3C, 0x_64,
		0x_71, 0x_7C, 0x_43, 0x_4B, 0x_57, 0x_E6, 0x_B9, 0x_1D, 0x_B8, 0x_7A, 0x_76, 0x_06, 0x_11, 0x_70, 0x_86,
		0x_03, 0x_6A, 0x_53, 0x_19, 0x_BD, 0x_99, 0x_15, 0x_D6, 0x_9D, 0x_47, 0x_35, 0x_F7, 0x_88, 0x_0F, 0x_E3,
		0x_67, 0x_DE, 0x_56, 0x_1C, 0x_7F, 0x_55, 0x_6F, 0x_EB, 0x_FE, 0x_40, 0x_51, 0x_50, 0x_FA,
	];

	helper(S, BASE, 2_462);
}
// endregion
// region: s_has_whitespaces_and_signs_and_50_531_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_50_531_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_0C,
		0x_09, 0x_20, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_46, 0x_FF, 0x_67, 0x_88,
		0x_E1, 0x_91, 0x_04, 0x_75, 0x_A4, 0x_7A, 0x_8A, 0x_90, 0x_95, 0x_E4, 0x_F5, 0x_FA, 0x_FD, 0x_58, 0x_53,
		0x_B7, 0x_99, 0x_80, 0x_38, 0x_B8, 0x_9B, 0x_C6, 0x_85, 0x_8C, 0x_EA, 0x_F3, 0x_E4, 0x_8F, 0x_F0, 0x_7F,
		0x_03, 0x_37, 0x_C4, 0x_4A, 0x_5A, 0x_08, 0x_53, 0x_E7, 0x_B2, 0x_8B, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_46, 0x_25, 0x_4C, 0x_07, 0x_56, 0x_53, 0x_BD, 0x_7C, 0x_AD, 0x_AE, 0x_A4, 0x_AC, 0x_A8, 0x_27,
		0x_91, 0x_96, 0x_A3, 0x_7E, 0x_9F, 0x_CD, 0x_50, 0x_54, 0x_2E, 0x_80, 0x_1A, 0x_C4, 0x_EE, 0x_6A, 0x_CF,
		0x_52, 0x_33, 0x_F7, 0x_A1, 0x_F9, 0x_F6, 0x_CB, 0x_42, 0x_99, 0x_1B, 0x_83, 0x_75, 0x_98, 0x_D3, 0x_9D,
		0x_90, 0x_64, 0x_9B, 0x_E1, 0x_3D, 0x_23, 0x_77, 0x_F0, 0x_11, 0x_8E, 0x_49, 0x_0E, 0x_2F, 0x_8C, 0x_8A,
		0x_84, 0x_D0, 0x_22, 0x_38, 0x_74, 0x_63, 0x_8F, 0x_BF, 0x_FF, 0x_BC, 0x_73, 0x_43, 0x_F2, 0x_7A, 0x_F1,
		0x_35, 0x_68, 0x_61, 0x_32, 0x_B8, 0x_93, 0x_8B, 0x_C7, 0x_78, 0x_1F, 0x_B5, 0x_FB, 0x_92, 0x_E7, 0x_13,
		0x_51, 0x_7B, 0x_A5, 0x_87, 0x_05, 0x_BA, 0x_A9, 0x_7F, 0x_85, 0x_B9, 0x_66, 0x_48, 0x_F8, 0x_FE, 0x_2C,
		0x_95, 0x_31, 0x_3F, 0x_82, 0x_94, 0x_C2, 0x_9A, 0x_B7, 0x_4A, 0x_AA, 0x_19, 0x_0F, 0x_04, 0x_15, 0x_97,
		0x_CC, 0x_57, 0x_E5, 0x_BE, 0x_86, 0x_EA, 0x_3C, 0x_A6, 0x_06, 0x_AB, 0x_14, 0x_A7, 0x_24, 0x_B2, 0x_E4,
		0x_1D, 0x_D9, 0x_D2, 0x_F4, 0x_29, 0x_DD, 0x_D1, 0x_81, 0x_DB, 0x_03, 0x_FA, 0x_58, 0x_DE, 0x_D4, 0x_5A,
		0x_6F, 0x_C9, 0x_08, 0x_EC, 0x_C6, 0x_E0, 0x_6D, 0x_79, 0x_67, 0x_C1, 0x_ED, 0x_71, 0x_3B, 0x_89, 0x_30,
		0x_E6, 0x_69, 0x_F3, 0x_D5, 0x_F5, 0x_55, 0x_C5, 0x_C0, 0x_B6, 0x_EB, 0x_4B, 0x_76, 0x_1C, 0x_36, 0x_12,
		0x_6B, 0x_DF, 0x_FC, 0x_37, 0x_10, 0x_D6, 0x_59, 0x_DA, 0x_7D, 0x_1E, 0x_2A, 0x_FD, 0x_6E,
	];

	helper(S, BASE, 50_531);
}
// endregion
// region: s_has_whitespaces_and_signs_and_266_850_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_266_850_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0C,
		0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_20,
		0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_17, 0x_2F, 0x_39, 0x_0D, 0x_6F, 0x_CB, 0x_01, 0x_31, 0x_D4, 0x_19,
		0x_B4, 0x_B4, 0x_DA, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_9D, 0x_F6, 0x_A0, 0x_16, 0x_F1, 0x_D8, 0x_81, 0x_17, 0x_10, 0x_92, 0x_46, 0x_D1, 0x_64, 0x_FC, 0x_A3,
		0x_F5, 0x_D2, 0x_4F, 0x_3F, 0x_AD, 0x_71, 0x_3C, 0x_83, 0x_A1, 0x_A2, 0x_EF, 0x_D6, 0x_4C, 0x_B5, 0x_7A,
		0x_EA, 0x_2F, 0x_14, 0x_05, 0x_04, 0x_95, 0x_12, 0x_01, 0x_65, 0x_35, 0x_A8, 0x_56, 0x_E6, 0x_7F, 0x_E4,
		0x_70, 0x_CF, 0x_75, 0x_D0, 0x_08, 0x_C4, 0x_F3, 0x_B3, 0x_44, 0x_4D, 0x_87, 0x_54, 0x_50, 0x_A9, 0x_8C,
		0x_C8, 0x_AA, 0x_5E, 0x_FA, 0x_E1, 0x_BF, 0x_BE, 0x_98, 0x_43, 0x_79, 0x_B0, 0x_9F, 0x_34, 0x_0F, 0x_23,
		0x_1E, 0x_3E, 0x_C2, 0x_3D, 0x_EB, 0x_FF, 0x_6B, 0x_0E, 0x_52, 0x_E3, 0x_F7, 0x_41, 0x_07, 0x_62, 0x_9C,
		0x_C3, 0x_E0, 0x_CC, 0x_8E, 0x_36, 0x_5D, 0x_B2, 0x_94, 0x_97, 0x_B1, 0x_BD, 0x_E8, 0x_28, 0x_8D, 0x_4A,
		0x_C5, 0x_D4, 0x_85, 0x_6A, 0x_B4, 0x_BA, 0x_53, 0x_FB, 0x_80, 0x_E5, 0x_C9, 0x_FD, 0x_77, 0x_2E, 0x_99,
		0x_B6, 0x_D3, 0x_A5, 0x_6E, 0x_39, 0x_59, 0x_26, 0x_CB, 0x_88, 0x_AF, 0x_C1, 0x_3A, 0x_73, 0x_DA, 0x_4B,
		0x_D9, 0x_02, 0x_60, 0x_13, 0x_29, 0x_89, 0x_72, 0x_47, 0x_9B, 0x_CA, 0x_37, 0x_B8, 0x_A6, 0x_B9, 0x_5B,
		0x_48, 0x_19, 0x_C7, 0x_C6, 0x_8F, 0x_6F, 0x_F4, 0x_E2, 0x_63, 0x_61, 0x_18, 0x_49, 0x_76, 0x_EC, 0x_84,
		0x_AC, 0x_45, 0x_5A, 0x_86, 0x_6C, 0x_1C, 0x_9E, 0x_D7, 0x_55, 0x_AB, 0x_E7, 0x_DD, 0x_22, 0x_31, 0x_9A,
		0x_DF, 0x_B7, 0x_82, 0x_42, 0x_A7, 0x_1A, 0x_7B, 0x_4E, 0x_2A, 0x_7E, 0x_30, 0x_ED, 0x_7C,
	];

	helper(S, BASE, 266_850);
}
// endregion
// region: s_has_whitespaces_and_signs_and_6_500_851_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_6_500_851_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_0B,
		0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_90, 0x_E9, 0x_E6, 0x_0A, 0x_C9, 0x_A0, 0x_BA, 0x_C5,
		0x_AF, 0x_79, 0x_82, 0x_47, 0x_9E, 0x_8C, 0x_91, 0x_3C, 0x_B4, 0x_77,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_71, 0x_D4, 0x_DD, 0x_79, 0x_ED, 0x_CD, 0x_7B, 0x_3A, 0x_3F, 0x_8E, 0x_C0, 0x_D8, 0x_35, 0x_99,
		0x_21, 0x_07, 0x_10, 0x_39, 0x_02, 0x_D6, 0x_1F, 0x_E0, 0x_03, 0x_83, 0x_C4, 0x_DB, 0x_2A, 0x_17, 0x_3D,
		0x_BB, 0x_96, 0x_E6, 0x_5E, 0x_5A, 0x_D3, 0x_E5, 0x_EB, 0x_AA, 0x_7F, 0x_5B, 0x_EF, 0x_1A, 0x_A3, 0x_36,
		0x_4E, 0x_19, 0x_AC, 0x_6B, 0x_18, 0x_63, 0x_14, 0x_9E, 0x_F4, 0x_A5, 0x_4C, 0x_7D, 0x_C7, 0x_60, 0x_EC,
		0x_7A, 0x_2E, 0x_87, 0x_88, 0x_F5, 0x_47, 0x_4D, 0x_05, 0x_AB, 0x_8A, 0x_85, 0x_59, 0x_2F, 0x_77, 0x_57,
		0x_A4, 0x_43, 0x_50, 0x_0E, 0x_28, 0x_89, 0x_78, 0x_D1, 0x_B4, 0x_E8, 0x_8F, 0x_11, 0x_51, 0x_9B, 0x_3C,
		0x_54, 0x_B7, 0x_FC, 0x_5C, 0x_EE, 0x_7E, 0x_DA, 0x_76, 0x_CA, 0x_C3, 0x_C5, 0x_E9, 0x_AE, 0x_55, 0x_49,
		0x_6A, 0x_E1, 0x_F0, 0x_01, 0x_B8, 0x_84, 0x_D5, 0x_0F, 0x_BF, 0x_64, 0x_6E, 0x_A0, 0x_61, 0x_D9, 0x_25,
		0x_4B, 0x_75, 0x_B2, 0x_98, 0x_A8, 0x_C8, 0x_D2, 0x_F9, 0x_BE, 0x_23, 0x_C9, 0x_4A, 0x_13, 0x_A6, 0x_B5,
		0x_8D, 0x_BC, 0x_34, 0x_95, 0x_8C, 0x_CB, 0x_12, 0x_C2, 0x_15, 0x_D0, 0x_8B, 0x_46, 0x_CC, 0x_56, 0x_1C,
		0x_6C, 0x_1D, 0x_5F, 0x_A1, 0x_91, 0x_66, 0x_2C, 0x_9D, 0x_BA, 0x_80, 0x_81, 0x_4F, 0x_DF, 0x_7C, 0x_B0,
		0x_58, 0x_16, 0x_F1, 0x_AD, 0x_92, 0x_AF, 0x_31, 0x_68, 0x_3B, 0x_90, 0x_E7, 0x_24, 0x_CF, 0x_52, 0x_1B,
		0x_67, 0x_5D, 0x_9F, 0x_82, 0x_26, 0x_86, 0x_D7, 0x_DC, 0x_F3, 0x_B1, 0x_22, 0x_F6, 0x_E2,
	];

	helper(S, BASE, 6_500_851);
}
// endregion
// region: s_has_whitespaces_and_signs_and_25_958_453_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_25_958_453_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_20,
		0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0B,
		0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_F0, 0x_1C, 0x_2E, 0x_08,
		0x_77, 0x_DC, 0x_9C, 0x_5E, 0x_01, 0x_30, 0x_73, 0x_27, 0x_6D, 0x_40, 0x_6C, 0x_B0, 0x_B5, 0x_A3, 0x_C7,
		0x_64, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_51, 0x_B5, 0x_F0, 0x_97, 0x_AE, 0x_7F, 0x_CC, 0x_98, 0x_54, 0x_91, 0x_F7, 0x_1E, 0x_ED, 0x_F3,
		0x_8C, 0x_45, 0x_0F, 0x_85, 0x_F9, 0x_17, 0x_FB, 0x_95, 0x_4A, 0x_3B, 0x_B7, 0x_D7, 0x_F6, 0x_3F, 0x_65,
		0x_5A, 0x_4F, 0x_DB, 0x_EE, 0x_DE, 0x_EC, 0x_E5, 0x_15, 0x_4D, 0x_DD, 0x_E1, 0x_6E, 0x_30, 0x_48, 0x_68,
		0x_66, 0x_6D, 0x_41, 0x_7C, 0x_81, 0x_DF, 0x_D6, 0x_EB, 0x_05, 0x_F1, 0x_AB, 0x_5B, 0x_84, 0x_C7, 0x_B9,
		0x_FC, 0x_69, 0x_31, 0x_3A, 0x_A9, 0x_D4, 0x_AF, 0x_C0, 0x_8F, 0x_CF, 0x_BC, 0x_29, 0x_61, 0x_C4, 0x_B6,
		0x_9A, 0x_87, 0x_E6, 0x_90, 0x_88, 0x_DA, 0x_B3, 0x_9F, 0x_07, 0x_B1, 0x_49, 0x_19, 0x_86, 0x_6A, 0x_5E,
		0x_A7, 0x_9E, 0x_C5, 0x_8E, 0x_BE, 0x_92, 0x_80, 0x_36, 0x_A4, 0x_89, 0x_25, 0x_AD, 0x_8D, 0x_D5, 0x_99,
		0x_0E, 0x_DC, 0x_E3, 0x_CB, 0x_52, 0x_9B, 0x_5D, 0x_22, 0x_03, 0x_35, 0x_3D, 0x_37, 0x_1C, 0x_32, 0x_FD,
		0x_39, 0x_43, 0x_E4, 0x_BD, 0x_59, 0x_21, 0x_B8, 0x_A3, 0x_1A, 0x_55, 0x_F5, 0x_01, 0x_EA, 0x_3E, 0x_E8,
		0x_2A, 0x_C8, 0x_4B, 0x_BA, 0x_B4, 0x_6C, 0x_38, 0x_C2, 0x_23, 0x_D3, 0x_74, 0x_08, 0x_27, 0x_C6, 0x_D0,
		0x_A2, 0x_D2, 0x_C1, 0x_FA, 0x_96, 0x_2F, 0x_40, 0x_9C, 0x_8A, 0x_3C, 0x_A6, 0x_9D, 0x_AC, 0x_CA, 0x_7D,
		0x_82, 0x_46, 0x_47, 0x_1F, 0x_58, 0x_50, 0x_2E, 0x_63, 0x_BF, 0x_64, 0x_73, 0x_62, 0x_CD, 0x_04, 0x_4E,
		0x_1D, 0x_75, 0x_5F, 0x_7A, 0x_53, 0x_28, 0x_7E, 0x_93, 0x_EF, 0x_6F, 0x_67, 0x_7B, 0x_02,
	];

	helper(S, BASE, 25_958_453);
}
// endregion
// region: s_has_whitespaces_and_signs_and_530_651_576_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_530_651_576_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_0D,
		0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0B,
		0x_20, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_98, 0x_2A, 0x_C3,
		0x_60, 0x_40, 0x_53, 0x_36, 0x_77, 0x_83, 0x_34, 0x_DF, 0x_3A, 0x_77, 0x_6B, 0x_CA,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_BF, 0x_03, 0x_EB, 0x_AD, 0x_D4, 0x_60, 0x_BA, 0x_F1, 0x_75, 0x_F4, 0x_A8, 0x_C3, 0x_65, 0x_AA,
		0x_47, 0x_11, 0x_C5, 0x_79, 0x_19, 0x_07, 0x_7F, 0x_DA, 0x_A2, 0x_B3, 0x_24, 0x_39, 0x_18, 0x_DF, 0x_EE,
		0x_2C, 0x_56, 0x_D7, 0x_F8, 0x_D1, 0x_45, 0x_E2, 0x_25, 0x_62, 0x_71, 0x_12, 0x_C8, 0x_E1, 0x_6B, 0x_F0,
		0x_88, 0x_58, 0x_7D, 0x_0F, 0x_3F, 0x_3D, 0x_B1, 0x_8A, 0x_4F, 0x_A6, 0x_04, 0x_D8, 0x_83, 0x_C4, 0x_CA,
		0x_E4, 0x_16, 0x_DE, 0x_72, 0x_AF, 0x_5D, 0x_E8, 0x_28, 0x_3B, 0x_7A, 0x_9E, 0x_BE, 0x_29, 0x_98, 0x_64,
		0x_57, 0x_CB, 0x_1B, 0x_1F, 0x_E6, 0x_99, 0x_1C, 0x_CF, 0x_CD, 0x_90, 0x_6F, 0x_93, 0x_8B, 0x_D0, 0x_EC,
		0x_73, 0x_B8, 0x_3A, 0x_48, 0x_27, 0x_87, 0x_41, 0x_AB, 0x_80, 0x_0E, 0x_F9, 0x_96, 0x_5C, 0x_FE, 0x_50,
		0x_1A, 0x_52, 0x_BD, 0x_53, 0x_4B, 0x_85, 0x_B6, 0x_5B, 0x_FC, 0x_77, 0x_B0, 0x_C7, 0x_97, 0x_33, 0x_4C,
		0x_D9, 0x_8F, 0x_14, 0x_C0, 0x_3C, 0x_59, 0x_51, 0x_37, 0x_FD, 0x_9B, 0x_2E, 0x_C1, 0x_B9, 0x_30, 0x_66,
		0x_F6, 0x_82, 0x_DC, 0x_E7, 0x_D2, 0x_35, 0x_89, 0x_EA, 0x_D6, 0x_4E, 0x_54, 0x_E0, 0x_9A, 0x_9F, 0x_FA,
		0x_5E, 0x_D3, 0x_1D, 0x_61, 0x_BC, 0x_A9, 0x_1E, 0x_2A, 0x_6E, 0x_8D, 0x_42, 0x_36, 0x_F2, 0x_91, 0x_A0,
		0x_E9, 0x_9C, 0x_67, 0x_21, 0x_06, 0x_7E, 0x_6A, 0x_69, 0x_31, 0x_DD, 0x_43, 0x_44, 0x_B5, 0x_2F, 0x_4D,
		0x_15, 0x_CC, 0x_34, 0x_84, 0x_26, 0x_8C, 0x_46, 0x_68, 0x_DB, 0x_94, 0x_A5, 0x_C6, 0x_F5,
	];

	helper(S, BASE, 530_651_576);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_7_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0D,
		0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_64, 0x_0A, 0x_92, 0x_8E, 0x_75, 0x_E8, 0x_FE, 0x_04, 0x_E1, 0x_F8, 0x_4B, 0x_16, 0x_86, 0x_59, 0x_B8,
		0x_FB, 0x_BC, 0x_14, 0x_C6, 0x_79, 0x_53, 0x_F4, 0x_C7, 0x_8C, 0x_C7, 0x_39, 0x_B0, 0x_AA, 0x_55,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_A4, 0x_8F, 0x_C6, 0x_1C, 0x_03, 0x_40, 0x_64, 0x_9A, 0x_76, 0x_8C, 0x_6D, 0x_F9, 0x_4C, 0x_84,
		0x_2E, 0x_FB, 0x_15, 0x_90, 0x_AE, 0x_35, 0x_11, 0x_BC, 0x_7A, 0x_5A, 0x_25, 0x_81, 0x_E2, 0x_CA, 0x_55,
		0x_FF, 0x_3F, 0x_82, 0x_C5, 0x_38, 0x_26, 0x_B2, 0x_9E, 0x_B6, 0x_52, 0x_95, 0x_B4, 0x_BD, 0x_A9, 0x_30,
		0x_CE, 0x_4E, 0x_E6, 0x_28, 0x_EF, 0x_85, 0x_AB, 0x_C8, 0x_67, 0x_3C, 0x_50, 0x_A1, 0x_D2, 0x_07, 0x_F4,
		0x_6C, 0x_C4, 0x_96, 0x_91, 0x_94, 0x_5E, 0x_12, 0x_1E, 0x_72, 0x_C7, 0x_ED, 0x_0E, 0x_5F, 0x_48, 0x_63,
		0x_73, 0x_42, 0x_D3, 0x_2C, 0x_7E, 0x_75, 0x_3D, 0x_88, 0x_5C, 0x_4A, 0x_B7, 0x_36, 0x_FE, 0x_39, 0x_1A,
		0x_74, 0x_CD, 0x_EC, 0x_DD, 0x_AA, 0x_3E, 0x_D6, 0x_04, 0x_F7, 0x_32, 0x_6A, 0x_53, 0x_4D, 0x_06, 0x_16,
		0x_24, 0x_E8, 0x_54, 0x_C9, 0x_E5, 0x_29, 0x_BA, 0x_D1, 0x_34, 0x_D4, 0x_8D, 0x_1F, 0x_DA, 0x_B3, 0x_68,
		0x_E7, 0x_5B, 0x_23, 0x_CF, 0x_60, 0x_AC, 0x_59, 0x_66, 0x_EA, 0x_86, 0x_E0, 0x_C2, 0x_B5, 0x_79, 0x_31,
		0x_A3, 0x_DC, 0x_AD, 0x_E4, 0x_7B, 0x_17, 0x_21, 0x_9D, 0x_78, 0x_8B, 0x_6E, 0x_05, 0x_70, 0x_BE, 0x_19,
		0x_C0, 0x_AF, 0x_44, 0x_97, 0x_58, 0x_56, 0x_83, 0x_9F, 0x_A0, 0x_A8, 0x_CB, 0x_DF, 0x_DB, 0x_80, 0x_EB,
		0x_F6, 0x_65, 0x_1B, 0x_7C, 0x_F3, 0x_CC, 0x_71, 0x_F0, 0x_41, 0x_98, 0x_FD, 0x_8A, 0x_33, 0x_D8, 0x_EE,
		0x_8E, 0x_27, 0x_DE, 0x_B1, 0x_C1, 0x_37, 0x_4F, 0x_F8, 0x_01, 0x_A5, 0x_62, 0x_89, 0x_3B, 0x_57, 0x_13,
		0x_E9, 0x_10, 0x_02, 0x_FA, 0x_F2, 0x_61, 0x_D0, 0x_6F, 0x_D7, 0x_E3, 0x_99, 0x_3A, 0x_18, 0x_FC, 0x_B0,
		0x_92, 0x_7F, 0x_A7, 0x_B9, 0x_5D, 0x_7D, 0x_93, 0x_BF, 0x_9B, 0x_47, 0x_A2, 0x_0F, 0x_F1, 0x_1D, 0x_A6,
		0x_4B, 0x_69, 0x_D5, 0x_46, 0x_08, 0x_D9, 0x_BB, 0x_B8, 0x_2A, 0x_77, 0x_14, 0x_22, 0x_51, 0x_F5, 0x_9C,
		0x_87, 0x_45, 0x_C3, 0x_49, 0x_43, 0x_2F, 0x_E1,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_98_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_98_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_CA, 0x_0C, 0x_9B, 0x_65, 0x_13, 0x_61,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_5F, 0x_57, 0x_80, 0x_BF, 0x_C8, 0x_9E, 0x_6C, 0x_6B, 0x_59, 0x_FB, 0x_DA, 0x_23, 0x_A4, 0x_55,
		0x_27, 0x_B9, 0x_E1, 0x_B7, 0x_97, 0x_B6, 0x_81, 0x_EC, 0x_5D, 0x_53, 0x_93, 0x_7C, 0x_B0, 0x_DF, 0x_C9,
		0x_C4, 0x_0F, 0x_CE, 0x_6D, 0x_11, 0x_C2, 0x_45, 0x_10, 0x_79, 0x_AB, 0x_3C, 0x_FA, 0x_70, 0x_64, 0x_BA,
		0x_E6, 0x_5C, 0x_AE, 0x_E8, 0x_FF, 0x_D2, 0x_74, 0x_1B, 0x_EE, 0x_2C, 0x_EA, 0x_26, 0x_E5, 0x_8B, 0x_A6,
		0x_44, 0x_42, 0x_1D, 0x_78, 0x_5A, 0x_5B, 0x_D6, 0x_3A, 0x_C3, 0x_AC, 0x_CD, 0x_A5, 0x_5E, 0x_BB, 0x_C0,
		0x_05, 0x_8F, 0x_4D, 0x_96, 0x_6F, 0x_24, 0x_D4, 0x_4A, 0x_19, 0x_A8, 0x_50, 0x_E9, 0x_9C, 0x_71, 0x_61,
		0x_FC, 0x_32, 0x_15, 0x_2F, 0x_36, 0x_CB, 0x_87, 0x_8D, 0x_CA, 0x_9D, 0x_25, 0x_83, 0x_D9, 0x_68, 0x_E0,
		0x_66, 0x_EF, 0x_58, 0x_46, 0x_41, 0x_84, 0x_67, 0x_86, 0x_BC, 0x_08, 0x_13, 0x_43, 0x_E7, 0x_C7, 0x_33,
		0x_16, 0x_3E, 0x_A1, 0x_34, 0x_4B, 0x_28, 0x_82, 0x_D0, 0x_A3, 0x_35, 0x_37, 0x_D8, 0x_8A, 0x_B5, 0x_04,
		0x_E4, 0x_F6, 0x_B1, 0x_9F, 0x_90, 0x_3B, 0x_75, 0x_D5, 0x_A9, 0x_7E, 0x_B4, 0x_CF, 0x_E2, 0x_7F, 0x_6A,
		0x_85, 0x_07, 0x_CC, 0x_38, 0x_BE, 0x_03, 0x_F5, 0x_52, 0x_DD, 0x_92, 0x_56, 0x_FD, 0x_12, 0x_48, 0x_06,
		0x_1E, 0x_B8, 0x_8C, 0x_1F, 0x_98, 0x_3D, 0x_95, 0x_FE, 0x_1C, 0x_1A, 0x_77, 0x_7D, 0x_2A, 0x_40, 0x_4F,
		0x_F2, 0x_4E, 0x_51, 0x_99, 0x_E3, 0x_F9, 0x_6E, 0x_76, 0x_A7, 0x_A2, 0x_39, 0x_54, 0x_3F, 0x_9B, 0x_AF,
		0x_65, 0x_7B, 0x_7A, 0x_14, 0x_49, 0x_63, 0x_C1, 0x_DE, 0x_B2, 0x_31, 0x_72, 0x_02, 0x_F3, 0x_ED, 0x_2E,
		0x_62, 0x_F7, 0x_94, 0x_29, 0x_D1, 0x_47, 0x_9A, 0x_AA, 0x_BD, 0x_30, 0x_89, 0x_DB, 0x_DC, 0x_73, 0x_C6,
		0x_88, 0x_8E, 0x_22, 0x_F1, 0x_F0, 0x_60, 0x_21, 0x_F8, 0x_EB, 0x_0E, 0x_C5, 0x_B3, 0x_D3, 0x_69, 0x_AD,
		0x_A0, 0x_4C, 0x_18, 0x_01, 0x_17, 0x_D7, 0x_F4,
	];

	helper(S, BASE, 98);
}
// endregion
// region: s_has_whitespaces_and_signs_and_400_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_400_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0B,
		0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_0C,
		0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_09, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_9B, 0x_40, 0x_0B, 0x_A5, 0x_A5, 0x_62, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_6C, 0x_9B, 0x_98, 0x_07, 0x_39, 0x_A7, 0x_B1, 0x_AC, 0x_75, 0x_24, 0x_9A, 0x_34, 0x_1E, 0x_52, 0x_8D,
		0x_08, 0x_F4, 0x_DD, 0x_77, 0x_71, 0x_D2, 0x_15, 0x_9E, 0x_9F, 0x_68, 0x_66, 0x_BA, 0x_56, 0x_29, 0x_CE,
		0x_DB, 0x_8C, 0x_48, 0x_F5, 0x_9C, 0x_63, 0x_78, 0x_C9, 0x_21, 0x_3D, 0x_A0, 0x_35, 0x_46, 0x_C3, 0x_D9,
		0x_87, 0x_5D, 0x_0E, 0x_A4, 0x_84, 0x_D4, 0x_EE, 0x_55, 0x_5B, 0x_41, 0x_E4, 0x_2A, 0x_38, 0x_14, 0x_F3,
		0x_2F, 0x_47, 0x_37, 0x_81, 0x_4D, 0x_E9, 0x_2E, 0x_C4, 0x_FE, 0x_92, 0x_F7, 0x_80, 0x_BF, 0x_E1, 0x_B7,
		0x_65, 0x_AE, 0x_5A, 0x_67, 0x_5C, 0x_0F, 0x_C5, 0x_E8, 0x_A3, 0x_94, 0x_F1, 0x_88, 0x_EA, 0x_DF, 0x_FA,
		0x_31, 0x_16, 0x_11, 0x_1B, 0x_FB, 0x_5F, 0x_A5, 0x_D5, 0x_4A, 0x_02, 0x_9D, 0x_43, 0x_12, 0x_62, 0x_49,
		0x_3A, 0x_6D, 0x_27, 0x_82, 0x_03, 0x_8A, 0x_05, 0x_C2, 0x_54, 0x_76, 0x_32, 0x_AD, 0x_3B, 0x_13, 0x_B4,
		0x_17, 0x_7F, 0x_95, 0x_AB, 0x_AA, 0x_4E, 0x_69, 0x_B6, 0x_E6, 0x_3F, 0x_79, 0x_4C, 0x_06, 0x_7D, 0x_93,
		0x_8E, 0x_42, 0x_57, 0x_E0, 0x_44, 0x_58, 0x_BB, 0x_74, 0x_33, 0x_30, 0x_C7, 0x_90, 0x_D3, 0x_CC, 0x_26,
		0x_72, 0x_AF, 0x_45, 0x_40, 0x_1D, 0x_DE, 0x_A1, 0x_B3, 0x_C6, 0x_F6, 0x_D1, 0x_BE, 0x_D7, 0x_FD, 0x_2C,
		0x_60, 0x_61, 0x_85, 0x_E7, 0x_01, 0x_22, 0x_CB, 0x_F0, 0x_18, 0x_6A, 0x_4F, 0x_BC, 0x_6B, 0x_5E, 0x_53,
		0x_FC, 0x_FF, 0x_B5, 0x_64, 0x_7E, 0x_86, 0x_91, 0x_B0, 0x_BD, 0x_B8, 0x_EB, 0x_CF, 0x_CD, 0x_70, 0x_73,
		0x_DA, 0x_89, 0x_19, 0x_ED, 0x_C8, 0x_C0, 0x_28, 0x_E3, 0x_A8, 0x_D6, 0x_96, 0x_4B, 0x_59, 0x_C1, 0x_97,
		0x_10, 0x_23, 0x_50, 0x_DC, 0x_04, 0x_A9, 0x_6F, 0x_E5, 0x_F9, 0x_8F, 0x_E2, 0x_3C, 0x_7B, 0x_D0, 0x_EF,
		0x_1A, 0x_7C, 0x_1C, 0x_B2, 0x_51, 0x_36, 0x_25, 0x_F2, 0x_A2, 0x_3E, 0x_CA, 0x_B9, 0x_EC, 0x_99, 0x_8B,
		0x_7A, 0x_D8, 0x_1F, 0x_F8, 0x_6E, 0x_83, 0x_A6,
	];

	helper(S, BASE, 400);
}
// endregion
// region: s_has_whitespaces_and_signs_and_7_070_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_7_070_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_0D,
		0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_AC, 0x_9F, 0x_2D, 0x_1D, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_76, 0x_9D, 0x_78, 0x_BB, 0x_88, 0x_85, 0x_6F, 0x_45, 0x_C1, 0x_D8, 0x_72, 0x_52, 0x_1B, 0x_EC,
		0x_F1, 0x_C2, 0x_93, 0x_E8, 0x_55, 0x_74, 0x_D9, 0x_5D, 0x_57, 0x_7B, 0x_8B, 0x_73, 0x_BF, 0x_AC, 0x_B7,
		0x_32, 0x_3E, 0x_3C, 0x_25, 0x_98, 0x_6B, 0x_94, 0x_47, 0x_E4, 0x_99, 0x_91, 0x_58, 0x_06, 0x_F4, 0x_B1,
		0x_AE, 0x_A3, 0x_39, 0x_A4, 0x_8A, 0x_F7, 0x_66, 0x_8F, 0x_34, 0x_8D, 0x_BC, 0x_46, 0x_BA, 0x_A1, 0x_04,
		0x_B9, 0x_69, 0x_60, 0x_6C, 0x_49, 0x_35, 0x_61, 0x_4E, 0x_2E, 0x_BD, 0x_6E, 0x_71, 0x_43, 0x_B4, 0x_E2,
		0x_95, 0x_50, 0x_7F, 0x_CB, 0x_63, 0x_01, 0x_56, 0x_51, 0x_08, 0x_EA, 0x_B0, 0x_F2, 0x_CA, 0x_77, 0x_02,
		0x_44, 0x_7C, 0x_1E, 0x_05, 0x_B3, 0x_D7, 0x_FC, 0x_84, 0x_36, 0x_FE, 0x_B8, 0x_67, 0x_22, 0x_03, 0x_42,
		0x_13, 0x_F3, 0x_75, 0x_17, 0x_F0, 0x_23, 0x_E1, 0x_9B, 0x_A2, 0x_1D, 0x_F8, 0x_FF, 0x_5A, 0x_14, 0x_BE,
		0x_82, 0x_C6, 0x_9C, 0x_4A, 0x_53, 0x_5C, 0x_81, 0x_38, 0x_D2, 0x_6A, 0x_80, 0x_79, 0x_E9, 0x_AF, 0x_87,
		0x_EB, 0x_6D, 0x_15, 0x_A9, 0x_DA, 0x_DF, 0x_97, 0x_1F, 0x_F9, 0x_5F, 0x_C5, 0x_A8, 0x_FB, 0x_E5, 0x_90,
		0x_96, 0x_F6, 0x_D4, 0x_59, 0x_9F, 0x_C7, 0x_ED, 0x_7E, 0x_FA, 0x_1C, 0x_D0, 0x_EF, 0x_8E, 0x_FD, 0x_40,
		0x_DC, 0x_8C, 0x_89, 0x_27, 0x_A0, 0x_3F, 0x_24, 0x_19, 0x_B5, 0x_B2, 0x_0E, 0x_B6, 0x_AD, 0x_E7, 0x_65,
		0x_D5, 0x_D3, 0x_12, 0x_E3, 0x_C0, 0x_4D, 0x_CE, 0x_64, 0x_31, 0x_41, 0x_26, 0x_4F, 0x_28, 0x_EE, 0x_2F,
		0x_54, 0x_E0, 0x_2A, 0x_CF, 0x_D1, 0x_11, 0x_92, 0x_21, 0x_C8, 0x_4B, 0x_7A, 0x_D6, 0x_CD, 0x_16, 0x_10,
		0x_62, 0x_70, 0x_A5, 0x_DD, 0x_DB, 0x_68, 0x_0F, 0x_7D, 0x_F5, 0x_9A, 0x_83, 0x_3D, 0x_86, 0x_3A, 0x_29,
		0x_48, 0x_37, 0x_18, 0x_1A, 0x_E6, 0x_CC, 0x_C3, 0x_DE, 0x_5E, 0x_30, 0x_07, 0x_3B, 0x_33, 0x_2C, 0x_4C,
		0x_C9, 0x_AB, 0x_9E, 0x_A6, 0x_AA, 0x_5B, 0x_C4,
	];

	helper(S, BASE, 7_070);
}
// endregion
// region: s_has_whitespaces_and_signs_and_57_818_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_57_818_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0D,
		0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_B6, 0x_67, 0x_0B, 0x_74, 0x_D1, 0x_1C, 0x_87, 0x_60, 0x_31, 0x_95, 0x_B0, 0x_C6,
		0x_9C, 0x_E9, 0x_AD, 0x_BA, 0x_50, 0x_D9, 0x_D2, 0x_63, 0x_33, 0x_48, 0x_F4, 0x_36, 0x_87, 0x_FE, 0x_3F,
		0x_0E, 0x_D8, 0x_F3, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_81, 0x_99, 0x_5F, 0x_CA, 0x_8E, 0x_BD, 0x_E1, 0x_53, 0x_8F, 0x_62, 0x_6C, 0x_C5, 0x_46, 0x_5D,
		0x_D2, 0x_1D, 0x_D9, 0x_91, 0x_AE, 0x_67, 0x_51, 0x_F7, 0x_38, 0x_1C, 0x_9B, 0x_82, 0x_3A, 0x_6F, 0x_E8,
		0x_B0, 0x_84, 0x_AC, 0x_C2, 0x_FB, 0x_8D, 0x_F1, 0x_C7, 0x_A6, 0x_E2, 0x_C6, 0x_5B, 0x_33, 0x_29, 0x_37,
		0x_5C, 0x_5E, 0x_C0, 0x_5A, 0x_4A, 0x_35, 0x_E6, 0x_36, 0x_DE, 0x_BA, 0x_EE, 0x_2F, 0x_F5, 0x_4E, 0x_90,
		0x_8C, 0x_3B, 0x_FE, 0x_43, 0x_BF, 0x_85, 0x_7D, 0x_D1, 0x_CC, 0x_4F, 0x_30, 0x_3E, 0x_49, 0x_AB, 0x_08,
		0x_52, 0x_7E, 0x_76, 0x_A7, 0x_28, 0x_DC, 0x_A3, 0x_7F, 0x_42, 0x_F4, 0x_CF, 0x_11, 0x_2E, 0x_14, 0x_DD,
		0x_6B, 0x_55, 0x_3C, 0x_3F, 0x_40, 0x_B4, 0x_13, 0x_17, 0x_B2, 0x_95, 0x_70, 0x_F6, 0x_E7, 0x_72, 0x_B9,
		0x_BE, 0x_C1, 0x_10, 0x_DA, 0x_87, 0x_DF, 0x_27, 0x_EA, 0x_60, 0x_23, 0x_71, 0x_59, 0x_75, 0x_7B, 0x_58,
		0x_74, 0x_F3, 0x_1B, 0x_A4, 0x_A9, 0x_E9, 0x_C8, 0x_AD, 0x_CE, 0x_22, 0x_96, 0x_61, 0x_03, 0x_F9, 0x_EF,
		0x_6E, 0x_E0, 0x_68, 0x_2C, 0x_6D, 0x_D4, 0x_4B, 0x_D8, 0x_18, 0x_F0, 0x_05, 0x_93, 0x_83, 0x_B7, 0x_FC,
		0x_88, 0x_ED, 0x_FA, 0x_19, 0x_1F, 0x_B1, 0x_F2, 0x_9E, 0x_D0, 0x_BC, 0x_D3, 0x_1E, 0x_78, 0x_24, 0x_EC,
		0x_B3, 0x_AA, 0x_79, 0x_54, 0x_66, 0x_B8, 0x_98, 0x_44, 0x_C4, 0x_65, 0x_57, 0x_CD, 0x_E5, 0x_D7, 0x_69,
		0x_9A, 0x_56, 0x_31, 0x_16, 0x_E3, 0x_EB, 0x_50, 0x_15, 0x_25, 0x_64, 0x_39, 0x_D5, 0x_47, 0x_FF, 0x_8B,
		0x_32, 0x_8A, 0x_DB, 0x_C9, 0x_02, 0x_89, 0x_C3, 0x_3D, 0x_A0, 0x_CB, 0x_45, 0x_BB, 0x_F8, 0x_0E, 0x_A5,
		0x_B5, 0x_77, 0x_D6, 0x_0F, 0x_21, 0x_92, 0x_48, 0x_9D, 0x_6A, 0x_FD, 0x_97, 0x_94, 0x_7A, 0x_07, 0x_9F,
		0x_2A, 0x_9C, 0x_80, 0x_4D, 0x_06, 0x_12, 0x_63, 0x_7C, 0x_86, 0x_B6, 0x_4C, 0x_AF, 0x_A2, 0x_E4, 0x_73,
		0x_04, 0x_41, 0x_26, 0x_A8, 0x_01, 0x_34, 0x_A1,
	];

	helper(S, BASE, 57_818);
}
// endregion
// region: s_has_whitespaces_and_signs_and_501_809_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_501_809_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_20,
		0x_20, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_0C,
		0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_4A, 0x_23,
		0x_AB, 0x_0C, 0x_80, 0x_6C, 0x_71, 0x_A9, 0x_3F, 0x_7C, 0x_12, 0x_D6, 0x_E5, 0x_E1, 0x_CA, 0x_BD, 0x_32,
		0x_A4, 0x_65, 0x_EA, 0x_67, 0x_3F, 0x_DE, 0x_11, 0x_DC, 0x_30, 0x_67, 0x_01, 0x_C7, 0x_9A, 0x_60, 0x_86,
		0x_1A, 0x_EA, 0x_85, 0x_25, 0x_0F, 0x_22, 0x_2F, 0x_04, 0x_F3, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_94, 0x_21, 0x_C0, 0x_3C, 0x_E2, 0x_86, 0x_D3, 0x_4A, 0x_A8, 0x_9D, 0x_64, 0x_2F, 0x_C1, 0x_E6,
		0x_E3, 0x_45, 0x_32, 0x_0E, 0x_01, 0x_E0, 0x_D7, 0x_36, 0x_26, 0x_9B, 0x_30, 0x_22, 0x_D0, 0x_E1, 0x_B5,
		0x_76, 0x_91, 0x_CA, 0x_71, 0x_97, 0x_F9, 0x_4C, 0x_5C, 0x_C7, 0x_5F, 0x_E5, 0x_F2, 0x_47, 0x_75, 0x_AE,
		0x_D4, 0x_7D, 0x_7C, 0x_29, 0x_11, 0x_17, 0x_8B, 0x_7A, 0x_08, 0x_87, 0x_23, 0x_DB, 0x_5A, 0x_89, 0x_BA,
		0x_DF, 0x_52, 0x_A5, 0x_07, 0x_6F, 0x_6C, 0x_92, 0x_DA, 0x_7F, 0x_B4, 0x_CD, 0x_FD, 0x_8D, 0x_1E, 0x_F0,
		0x_9F, 0x_66, 0x_FB, 0x_54, 0x_CF, 0x_C6, 0x_38, 0x_19, 0x_AC, 0x_16, 0x_B2, 0x_BC, 0x_A1, 0x_7B, 0x_63,
		0x_03, 0x_2C, 0x_1F, 0x_B1, 0x_81, 0x_84, 0x_85, 0x_79, 0x_3F, 0x_A7, 0x_F7, 0x_FC, 0x_27, 0x_74, 0x_98,
		0x_CE, 0x_EA, 0x_A9, 0x_DD, 0x_4B, 0x_4E, 0x_D5, 0x_90, 0x_E4, 0x_58, 0x_C5, 0x_6D, 0x_3E, 0x_18, 0x_DC,
		0x_B3, 0x_EE, 0x_D8, 0x_33, 0x_C2, 0x_A4, 0x_D1, 0x_41, 0x_40, 0x_E7, 0x_68, 0x_A0, 0x_3B, 0x_1B, 0x_AF,
		0x_F5, 0x_8A, 0x_5B, 0x_69, 0x_EB, 0x_15, 0x_B7, 0x_7E, 0x_04, 0x_65, 0x_C9, 0x_9C, 0x_CB, 0x_59, 0x_99,
		0x_1C, 0x_B8, 0x_AB, 0x_5D, 0x_62, 0x_4D, 0x_FE, 0x_35, 0x_D6, 0x_C4, 0x_BE, 0x_AD, 0x_61, 0x_60, 0x_ED,
		0x_24, 0x_78, 0x_55, 0x_6E, 0x_34, 0x_44, 0x_FF, 0x_CC, 0x_0F, 0x_25, 0x_E9, 0x_57, 0x_56, 0x_1D, 0x_BD,
		0x_BF, 0x_B9, 0x_2A, 0x_31, 0x_DE, 0x_37, 0x_8E, 0x_3A, 0x_83, 0x_C3, 0x_EC, 0x_82, 0x_06, 0x_9A, 0x_A2,
		0x_10, 0x_88, 0x_51, 0x_8F, 0x_6B, 0x_96, 0x_F4, 0x_4F, 0x_72, 0x_F3, 0x_F8, 0x_46, 0x_BB, 0x_39, 0x_02,
		0x_AA, 0x_3D, 0x_95, 0x_42, 0x_93, 0x_1A, 0x_53, 0x_F1, 0x_B6, 0x_73, 0x_70, 0x_2E, 0x_A3, 0x_C8, 0x_12,
		0x_8C, 0x_14, 0x_9E, 0x_67, 0x_43, 0x_E8, 0x_80, 0x_A6, 0x_EF, 0x_28, 0x_50, 0x_05, 0x_13, 0x_D2, 0x_D9,
		0x_49, 0x_48, 0x_F6, 0x_FA, 0x_6A, 0x_B0, 0x_77,
	];

	helper(S, BASE, 501_809);
}
// endregion
// region: s_has_whitespaces_and_signs_and_9_837_573_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_9_837_573_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_DB, 0x_73, 0x_05, 0x_0B, 0x_C8, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_F9, 0x_72, 0x_EB, 0x_F6, 0x_40, 0x_74, 0x_7C, 0x_58, 0x_6A, 0x_49, 0x_6D, 0x_29, 0x_57, 0x_BF,
		0x_A3, 0x_27, 0x_7F, 0x_C9, 0x_C6, 0x_D4, 0x_1F, 0x_3A, 0x_9B, 0x_50, 0x_2F, 0x_26, 0x_08, 0x_EF, 0x_3F,
		0x_EA, 0x_6F, 0x_44, 0x_59, 0x_86, 0x_75, 0x_AA, 0x_83, 0x_DD, 0x_DC, 0x_8A, 0x_BD, 0x_5C, 0x_0F, 0x_62,
		0x_E7, 0x_71, 0x_9D, 0x_48, 0x_1B, 0x_FD, 0x_52, 0x_F2, 0x_91, 0x_98, 0x_45, 0x_33, 0x_05, 0x_CD, 0x_4F,
		0x_55, 0x_73, 0x_30, 0x_38, 0x_F3, 0x_C0, 0x_CF, 0x_E2, 0x_A5, 0x_AF, 0x_E4, 0x_89, 0x_6E, 0x_42, 0x_66,
		0x_FC, 0x_87, 0x_C3, 0x_E9, 0x_D2, 0x_2A, 0x_A9, 0x_65, 0x_94, 0x_DE, 0x_9F, 0x_B1, 0x_3C, 0x_82, 0x_04,
		0x_7A, 0x_D5, 0x_F4, 0x_FA, 0x_B2, 0x_95, 0x_12, 0x_9C, 0x_D8, 0x_7B, 0x_4A, 0x_37, 0x_E5, 0x_B6, 0x_32,
		0x_39, 0x_23, 0x_C7, 0x_E1, 0x_51, 0x_85, 0x_C2, 0x_E3, 0x_FB, 0x_D9, 0x_79, 0x_9A, 0x_67, 0x_2C, 0x_AD,
		0x_15, 0x_5E, 0x_6C, 0x_ED, 0x_97, 0x_18, 0x_2E, 0x_CE, 0x_B7, 0x_F1, 0x_64, 0x_56, 0x_02, 0x_6B, 0x_1E,
		0x_B8, 0x_CA, 0x_93, 0x_10, 0x_8C, 0x_47, 0x_F7, 0x_FE, 0x_03, 0x_D0, 0x_19, 0x_CC, 0x_3B, 0x_80, 0x_FF,
		0x_E6, 0x_3D, 0x_43, 0x_17, 0x_C1, 0x_01, 0x_69, 0x_A2, 0x_B4, 0x_EC, 0x_4B, 0x_DB, 0x_31, 0x_77, 0x_3E,
		0x_A7, 0x_41, 0x_1A, 0x_BE, 0x_35, 0x_CB, 0x_34, 0x_D3, 0x_70, 0x_A6, 0x_25, 0x_5B, 0x_D7, 0x_8D, 0x_06,
		0x_C8, 0x_99, 0x_4C, 0x_BB, 0x_63, 0x_1D, 0x_EE, 0x_A0, 0x_53, 0x_88, 0x_F8, 0x_BA, 0x_68, 0x_7E, 0x_5D,
		0x_0E, 0x_9E, 0x_92, 0x_AB, 0x_A4, 0x_84, 0x_BC, 0x_54, 0x_AE, 0x_46, 0x_14, 0x_DF, 0x_22, 0x_E8, 0x_4E,
		0x_96, 0x_78, 0x_D1, 0x_E0, 0x_B9, 0x_8B, 0x_D6, 0x_7D, 0x_B5, 0x_36, 0x_B3, 0x_B0, 0x_1C, 0x_A8, 0x_A1,
		0x_C4, 0x_81, 0x_16, 0x_76, 0x_4D, 0x_24, 0x_F5, 0x_60, 0x_8E, 0x_8F, 0x_11, 0x_AC, 0x_13, 0x_28, 0x_5A,
		0x_61, 0x_90, 0x_21, 0x_C5, 0x_5F, 0x_DA, 0x_F0,
	];

	helper(S, BASE, 9_837_573);
}
// endregion
// region: s_has_whitespaces_and_signs_and_84_750_627_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_84_750_627_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_09,
		0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_0A,
		0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_2D, 0x_2B, 0x_2D, 0x_9F, 0x_C2,
		0x_9E, 0x_05, 0x_0B, 0x_5D, 0x_9A, 0x_73, 0x_68, 0x_BE, 0x_19, 0x_2C, 0x_1F, 0x_C4, 0x_FE, 0x_86, 0x_91,
		0x_5C, 0x_30, 0x_41, 0x_38, 0x_9A, 0x_E5, 0x_E2, 0x_F2, 0x_1C, 0x_6D, 0x_47, 0x_F3, 0x_3D, 0x_A9, 0x_5C,
		0x_13, 0x_B3, 0x_02, 0x_B1, 0x_D7, 0x_D9, 0x_91, 0x_F2, 0x_B9, 0x_46, 0x_6B, 0x_C6, 0x_C7, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_58, 0x_C8, 0x_91, 0x_92, 0x_9F, 0x_95, 0x_83, 0x_04, 0x_AA, 0x_E7, 0x_97, 0x_F7, 0x_27, 0x_7D,
		0x_BC, 0x_D3, 0x_D8, 0x_59, 0x_D9, 0x_99, 0x_B5, 0x_79, 0x_B2, 0x_F6, 0x_41, 0x_8C, 0x_A8, 0x_FD, 0x_45,
		0x_EE, 0x_31, 0x_FC, 0x_CF, 0x_4E, 0x_B9, 0x_9E, 0x_25, 0x_B6, 0x_2E, 0x_DF, 0x_BD, 0x_7B, 0x_4C, 0x_ED,
		0x_E1, 0x_66, 0x_D4, 0x_70, 0x_1F, 0x_11, 0x_39, 0x_0F, 0x_6F, 0x_D5, 0x_EF, 0x_3C, 0x_A1, 0x_9D, 0x_21,
		0x_DE, 0x_3F, 0x_88, 0x_8D, 0x_E3, 0x_3A, 0x_CE, 0x_64, 0x_51, 0x_55, 0x_60, 0x_4F, 0x_F9, 0x_87, 0x_5F,
		0x_61, 0x_FB, 0x_2C, 0x_12, 0x_94, 0x_7E, 0x_50, 0x_28, 0x_8B, 0x_B8, 0x_33, 0x_6A, 0x_3D, 0x_52, 0x_BF,
		0x_53, 0x_A9, 0x_1D, 0x_D6, 0x_22, 0x_1E, 0x_8F, 0x_6B, 0x_08, 0x_8E, 0x_A6, 0x_E6, 0x_36, 0x_40, 0x_D2,
		0x_89, 0x_F4, 0x_43, 0x_17, 0x_47, 0x_35, 0x_AC, 0x_18, 0x_BA, 0x_9A, 0x_3B, 0x_7C, 0x_FE, 0x_DD, 0x_73,
		0x_67, 0x_13, 0x_CB, 0x_85, 0x_42, 0x_7A, 0x_C4, 0x_1A, 0x_2F, 0x_CD, 0x_C0, 0x_F2, 0x_74, 0x_81, 0x_76,
		0x_30, 0x_02, 0x_57, 0x_5A, 0x_B7, 0x_48, 0x_34, 0x_B1, 0x_E8, 0x_06, 0x_32, 0x_A5, 0x_75, 0x_F3, 0x_03,
		0x_AD, 0x_19, 0x_BE, 0x_6C, 0x_C2, 0x_4A, 0x_82, 0x_D0, 0x_B0, 0x_D7, 0x_E0, 0x_AF, 0x_5B, 0x_DB, 0x_C5,
		0x_44, 0x_71, 0x_68, 0x_CC, 0x_63, 0x_0E, 0x_96, 0x_AE, 0x_B4, 0x_A7, 0x_C3, 0x_93, 0x_3E, 0x_5D, 0x_77,
		0x_62, 0x_2A, 0x_C7, 0x_4D, 0x_DC, 0x_F5, 0x_29, 0x_EC, 0x_15, 0x_A2, 0x_26, 0x_FF, 0x_C6, 0x_9B, 0x_49,
		0x_4B, 0x_1C, 0x_1B, 0x_56, 0x_E5, 0x_C9, 0x_CA, 0x_BB, 0x_A0, 0x_07, 0x_AB, 0x_FA, 0x_B3, 0x_84, 0x_7F,
		0x_A4, 0x_F0, 0x_F1, 0x_5E, 0x_98, 0x_72, 0x_69, 0x_EB, 0x_90, 0x_65, 0x_5C, 0x_F8, 0x_8A, 0x_6E, 0x_C1,
		0x_6D, 0x_37, 0x_9C, 0x_A3, 0x_DA, 0x_80, 0x_E2, 0x_16, 0x_D1, 0x_05, 0x_E4, 0x_14, 0x_23, 0x_10, 0x_86,
		0x_01, 0x_EA, 0x_24, 0x_54, 0x_E9, 0x_46, 0x_38,
	];

	helper(S, BASE, 84_750_627);
}
// endregion
// region: s_has_whitespaces_and_signs_and_654_219_004_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_654_219_004_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_30, 0x_2A, 0x_66, 0x_27, 0x_0A,
		0x_AE, 0x_A3, 0x_2E, 0x_19, 0x_DF, 0x_63, 0x_AA, 0x_DA, 0x_0F, 0x_D0, 0x_CE, 0x_A2, 0x_B4, 0x_4D, 0x_73,
		0x_5C, 0x_A4, 0x_ED, 0x_90, 0x_8C, 0x_B4, 0x_53, 0x_76, 0x_F7, 0x_28, 0x_FD, 0x_D4, 0x_C2, 0x_F8, 0x_30,
		0x_A3, 0x_10, 0x_74, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_6C, 0x_DD, 0x_4A, 0x_C2, 0x_90, 0x_3B, 0x_7F, 0x_D5, 0x_EC, 0x_91, 0x_5B, 0x_85, 0x_A5, 0x_A9,
		0x_42, 0x_C1, 0x_6B, 0x_9A, 0x_10, 0x_9E, 0x_89, 0x_B3, 0x_B7, 0x_B5, 0x_78, 0x_B9, 0x_5D, 0x_AC, 0x_71,
		0x_46, 0x_48, 0x_50, 0x_44, 0x_3E, 0x_74, 0x_98, 0x_BE, 0x_69, 0x_8F, 0x_C9, 0x_8A, 0x_D1, 0x_30, 0x_AE,
		0x_4E, 0x_33, 0x_63, 0x_CC, 0x_41, 0x_23, 0x_DE, 0x_9B, 0x_0F, 0x_4D, 0x_53, 0x_F1, 0x_97, 0x_B4, 0x_65,
		0x_F9, 0x_A3, 0x_32, 0x_24, 0x_14, 0x_F4, 0x_5A, 0x_59, 0x_39, 0x_8E, 0x_55, 0x_E1, 0x_36, 0x_49, 0x_1F,
		0x_A6, 0x_2F, 0x_1E, 0x_66, 0x_22, 0x_DF, 0x_6F, 0x_F7, 0x_F6, 0x_67, 0x_83, 0x_D0, 0x_B1, 0x_FD, 0x_EF,
		0x_17, 0x_FB, 0x_A1, 0x_93, 0x_A2, 0x_72, 0x_C5, 0x_BB, 0x_9D, 0x_9C, 0x_8D, 0x_A4, 0x_2A, 0x_7E, 0x_BA,
		0x_29, 0x_E9, 0x_43, 0x_54, 0x_C3, 0x_D7, 0x_A8, 0x_7B, 0x_95, 0x_19, 0x_B0, 0x_15, 0x_82, 0x_CE, 0x_25,
		0x_D8, 0x_F5, 0x_C7, 0x_FF, 0x_E4, 0x_81, 0x_2E, 0x_76, 0x_BC, 0x_C4, 0x_FA, 0x_06, 0x_01, 0x_6D, 0x_E7,
		0x_92, 0x_18, 0x_45, 0x_FC, 0x_F2, 0x_CA, 0x_AA, 0x_80, 0x_02, 0x_5C, 0x_E0, 0x_77, 0x_8C, 0x_8B, 0x_37,
		0x_C6, 0x_EA, 0x_7C, 0x_C8, 0x_F8, 0x_D3, 0x_11, 0x_04, 0x_34, 0x_62, 0x_99, 0x_EB, 0x_31, 0x_A7, 0x_AD,
		0x_28, 0x_A0, 0x_3D, 0x_96, 0x_0E, 0x_87, 0x_2C, 0x_AB, 0x_40, 0x_BF, 0x_64, 0x_4C, 0x_6A, 0x_5E, 0x_B8,
		0x_DA, 0x_38, 0x_9F, 0x_05, 0x_88, 0x_F0, 0x_57, 0x_F3, 0x_C0, 0x_B6, 0x_51, 0x_47, 0x_D9, 0x_3F, 0x_13,
		0x_E5, 0x_94, 0x_4F, 0x_CF, 0x_86, 0x_3A, 0x_07, 0x_E8, 0x_5F, 0x_58, 0x_ED, 0x_12, 0x_7A, 0x_B2, 0x_E3,
		0x_73, 0x_E6, 0x_1A, 0x_84, 0x_D4, 0x_56, 0x_FE, 0x_03, 0x_68, 0x_1C, 0x_CB, 0x_26, 0x_21, 0x_75, 0x_D2,
		0x_35, 0x_70, 0x_E2, 0x_CD, 0x_1D, 0x_08, 0x_27, 0x_52, 0x_EE, 0x_61, 0x_6E, 0x_1B, 0x_16, 0x_3C, 0x_79,
		0x_7D, 0x_D6, 0x_DC, 0x_BD, 0x_60, 0x_DB, 0x_AF,
	];

	helper(S, BASE, 654_219_004);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_6_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_6_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0D,
		0x_0D, 0x_0B, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_17, 0x_17, 0x_5F, 0x_DA, 0x_5F, 0x_5F, 0x_5F, 0x_17, 0x_5F, 0x_17, 0x_5F, 0x_17,
		0x_17, 0x_5F, 0x_5F, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_17,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_80_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_80_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0C,
		0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_24, 0x_24, 0x_24,
		0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24,
		0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_6F, 0x_24, 0x_6F, 0x_24, 0x_24, 0x_24,
		0x_24, 0x_8A, 0x_24, 0x_6F, 0x_6F, 0x_24, 0x_6F, 0x_24, 0x_24, 0x_6F, 0x_24, 0x_6F, 0x_6F, 0x_6F, 0x_6F,
		0x_24, 0x_24, 0x_6F, 0x_24, 0x_6F, 0x_6F, 0x_24, 0x_6F, 0x_6F, 0x_6F, 0x_24, 0x_6F, 0x_6F, 0x_24, 0x_6F,
		0x_24, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_24, 0x_6F,
	];

	helper(S, BASE, 80);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_851_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_851_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_20,
		0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_6A,
		0x_6A, 0x_AF, 0x_6A, 0x_AF, 0x_6A, 0x_AF, 0x_AF, 0x_6A, 0x_6A, 0x_B2, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_6A, 0x_AF, 0x_AF, 0x_AF, 0x_6A, 0x_6A, 0x_AF, 0x_AF,
		0x_AF, 0x_AF, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_AF, 0x_6A, 0x_6A, 0x_6A, 0x_AF, 0x_AF, 0x_6A, 0x_AF, 0x_AF,
		0x_6A, 0x_6A, 0x_AF, 0x_6A,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_6A,
	];

	helper(S, BASE, 851);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_1_754_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_1_754_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0D,
		0x_09, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0C,
		0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7,
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7,
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_E7, 0x_E7, 0x_B7, 0x_E7, 0x_E7, 0x_B7, 0x_E7, 0x_E7, 0x_B7,
		0x_E7, 0x_B7, 0x_A4, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_E7, 0x_B7, 0x_B7, 0x_B7, 0x_E7, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_E7,
	];

	helper(S, BASE, 1_754);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_41_906_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_41_906_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_08,
		0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08,
		0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08,
		0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_45, 0x_08, 0x_45, 0x_08, 0x_08, 0x_08, 0x_45, 0x_45, 0x_45, 0x_08,
		0x_45, 0x_45, 0x_08, 0x_08, 0x_45, 0x_08, 0x_71, 0x_08, 0x_08, 0x_45, 0x_45, 0x_08, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_08, 0x_08, 0x_08, 0x_45, 0x_45, 0x_45, 0x_08, 0x_08, 0x_45, 0x_45, 0x_45, 0x_08, 0x_08, 0x_45,
		0x_45, 0x_08, 0x_45, 0x_08, 0x_08, 0x_45, 0x_45, 0x_08, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_45,
	];

	helper(S, BASE, 41_906);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_378_358_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_378_358_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_0C,
		0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_0D,
		0x_0D, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_07, 0x_F2, 0x_07, 0x_07, 0x_07, 0x_F2, 0x_F2, 0x_F2, 0x_07, 0x_F2, 0x_07, 0x_07, 0x_07,
		0x_07, 0x_07, 0x_F2, 0x_07, 0x_07, 0x_F2, 0x_8B, 0x_F2, 0x_F2, 0x_07, 0x_07, 0x_07, 0x_F2, 0x_07, 0x_F2,
		0x_F2, 0x_07, 0x_07, 0x_F2, 0x_07, 0x_07, 0x_F2, 0x_07, 0x_07, 0x_F2, 0x_F2, 0x_F2, 0x_07, 0x_F2, 0x_07,
		0x_07, 0x_F2, 0x_07, 0x_07, 0x_07, 0x_07, 0x_F2, 0x_F2, 0x_07, 0x_F2, 0x_07, 0x_F2, 0x_F2, 0x_07, 0x_07,
		0x_07, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_07,
	];

	helper(S, BASE, 378_358);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_1_233_805_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_1_233_805_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_32, 0x_01, 0x_01, 0x_32, 0x_01, 0x_32, 0x_32, 0x_01, 0x_32, 0x_01, 0x_01,
		0x_32, 0x_32, 0x_32, 0x_01, 0x_01, 0x_01, 0x_32, 0x_32, 0x_01, 0x_32, 0x_1C, 0x_01, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_32, 0x_01, 0x_01, 0x_32, 0x_32, 0x_32, 0x_01, 0x_01, 0x_01,
		0x_32, 0x_01, 0x_01, 0x_32, 0x_01, 0x_32, 0x_32, 0x_01, 0x_32, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_32,
	];

	helper(S, BASE, 1_233_805);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_84_557_668_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_84_557_668_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_09,
		0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0C,
		0x_20, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_27, 0x_27, 0x_27, 0x_27, 0x_65, 0x_27, 0x_65,
		0x_27, 0x_27, 0x_27, 0x_27, 0x_65, 0x_27, 0x_65, 0x_27, 0x_27, 0x_27, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65,
		0x_65, 0x_27, 0x_65, 0x_65, 0x_27, 0x_27, 0x_65, 0x_27, 0x_27, 0x_C7, 0x_27, 0x_27, 0x_27, 0x_65, 0x_65,
		0x_65, 0x_27, 0x_27, 0x_65, 0x_27, 0x_65, 0x_27, 0x_65, 0x_27, 0x_27, 0x_65, 0x_65, 0x_27, 0x_65, 0x_65,
		0x_27, 0x_27, 0x_27, 0x_65, 0x_27, 0x_65, 0x_27, 0x_27, 0x_65, 0x_27, 0x_27, 0x_27, 0x_65, 0x_27, 0x_65,
		0x_65,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_65,
	];

	helper(S, BASE, 84_557_668);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_913_338_733_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_913_338_733_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_18, 0x_18,
		0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_89, 0x_89, 0x_18, 0x_89, 0x_89, 0x_18, 0x_18,
		0x_89, 0x_89, 0x_89, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_89, 0x_89, 0x_89, 0x_18, 0x_18, 0x_18, 0x_89,
		0x_18, 0x_89, 0x_89, 0x_18, 0x_89, 0x_89, 0x_18, 0x_89, 0x_BB, 0x_18, 0x_18, 0x_89, 0x_89, 0x_18, 0x_89,
		0x_89, 0x_18, 0x_18, 0x_89, 0x_89, 0x_89, 0x_18, 0x_89, 0x_89, 0x_18, 0x_18, 0x_18, 0x_89, 0x_89, 0x_18,
		0x_89, 0x_89, 0x_89, 0x_18, 0x_89, 0x_89, 0x_89, 0x_18, 0x_18, 0x_89, 0x_18, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_89,
	];

	helper(S, BASE, 913_338_733);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_7_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_7_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_54, 0x_6F, 0x_DB, 0x_64, 0x_6F, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_6F, 0x_54,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_49_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_49_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0A,
		0x_0D, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_D1, 0x_44,
		0x_D1, 0x_D1, 0x_26, 0x_E4, 0x_E4, 0x_44, 0x_D1, 0x_E4, 0x_D1, 0x_D1, 0x_E4, 0x_D1, 0x_44, 0x_44, 0x_D1,
		0x_D1, 0x_E4, 0x_E4, 0x_44, 0x_44, 0x_D1, 0x_44, 0x_44, 0x_44, 0x_D1, 0x_E4, 0x_44, 0x_44, 0x_E4, 0x_E4,
		0x_D1, 0x_44, 0x_D1, 0x_E4, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_D1, 0x_44,
	];

	helper(S, BASE, 49);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_648_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_648_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0A,
		0x_0B, 0x_09, 0x_0A, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_A6, 0x_A6, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_62, 0x_AC, 0x_AC, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_AC, 0x_4E, 0x_4E, 0x_4E, 0x_AC, 0x_A6,
		0x_AC, 0x_4E, 0x_4E, 0x_4E, 0x_AC, 0x_A6, 0x_A6, 0x_AC, 0x_4E, 0x_4E, 0x_AC, 0x_A6, 0x_4E, 0x_A6, 0x_A6,
		0x_A6, 0x_AC, 0x_A6, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_AC, 0x_A6,
	];

	helper(S, BASE, 648);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_1_955_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_1_955_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0B,
		0x_20, 0x_0B, 0x_17, 0x_17, 0x_29, 0x_29, 0x_17, 0x_17, 0x_5E, 0x_17, 0x_29, 0x_59, 0x_29, 0x_5E, 0x_29,
		0x_17, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_29, 0x_17, 0x_29, 0x_17, 0x_29, 0x_17, 0x_17, 0x_29, 0x_17, 0x_5E,
		0x_29, 0x_29, 0x_17, 0x_5E, 0x_17, 0x_5E, 0x_17, 0x_17, 0x_5E, 0x_17, 0x_17, 0x_17, 0x_29, 0x_5E, 0x_17,
		0x_5E, 0x_5E, 0x_29, 0x_17, 0x_29, 0x_29, 0x_5E, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_5E, 0x_29,
	];

	helper(S, BASE, 1_955);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_60_569_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_60_569_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0C,
		0x_20, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_DB, 0x_7E, 0x_7E, 0x_7E, 0x_AA, 0x_7E, 0x_7E, 0x_AA, 0x_7E, 0x_AA, 0x_AA,
		0x_56, 0x_7E, 0x_7E, 0x_AA, 0x_DB, 0x_7E, 0x_7E, 0x_AA, 0x_7E, 0x_AA, 0x_DB, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_DB, 0x_AA, 0x_7E, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_7E, 0x_AA,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_DB, 0x_AA,
	];

	helper(S, BASE, 60_569);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_575_735_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_575_735_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0A,
		0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_11,
		0x_E8, 0x_E8, 0x_83, 0x_E8, 0x_83, 0x_E8, 0x_83, 0x_E8, 0x_83, 0x_11, 0x_11, 0x_83, 0x_78, 0x_83, 0x_E8,
		0x_E8, 0x_E8, 0x_11, 0x_83, 0x_11, 0x_E8, 0x_83, 0x_83, 0x_E8, 0x_83, 0x_E8, 0x_11, 0x_11, 0x_E8, 0x_E8,
		0x_83, 0x_11, 0x_11, 0x_E8, 0x_11, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_11, 0x_E8, 0x_83, 0x_E8, 0x_83, 0x_83,
		0x_83,
	];
	const BASE: &[u8] = &[
		0x_E8, 0x_11, 0x_83,
	];

	helper(S, BASE, 575_735);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_8_558_555_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_8_558_555_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_B6,
		0x_AA, 0x_B6, 0x_5C, 0x_5C, 0x_AA, 0x_AA, 0x_B6, 0x_B6, 0x_5C, 0x_B6, 0x_5C, 0x_B6, 0x_B6, 0x_AA, 0x_6B,
		0x_AA, 0x_B6, 0x_B6, 0x_5C, 0x_5C, 0x_5C, 0x_AA, 0x_B6, 0x_AA, 0x_5C, 0x_B6, 0x_AA, 0x_5C, 0x_AA, 0x_B6,
		0x_AA, 0x_5C, 0x_B6, 0x_5C, 0x_5C, 0x_B6, 0x_5C, 0x_5C, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_AA, 0x_5C, 0x_AA,
		0x_AA,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_B6, 0x_AA,
	];

	helper(S, BASE, 8_558_555);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_44_928_688_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_44_928_688_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0B,
		0x_0D, 0x_0D, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F,
		0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_78, 0x_0F, 0x_0F, 0x_78, 0x_0F, 0x_78,
		0x_78, 0x_90, 0x_78, 0x_90, 0x_78, 0x_78, 0x_90, 0x_0F, 0x_78, 0x_78, 0x_78, 0x_06, 0x_78, 0x_0F, 0x_0F,
		0x_78, 0x_0F, 0x_90, 0x_0F, 0x_90, 0x_0F, 0x_90, 0x_90, 0x_90, 0x_0F, 0x_90, 0x_0F, 0x_0F, 0x_90, 0x_90,
		0x_78, 0x_78, 0x_90, 0x_78, 0x_78, 0x_0F, 0x_78, 0x_90, 0x_0F, 0x_0F,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_78, 0x_90,
	];

	helper(S, BASE, 44_928_688);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_688_696_676_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_688_696_676_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0A,
		0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_1F, 0x_6B, 0x_E6, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_E6, 0x_1F, 0x_E6,
		0x_6B, 0x_E6, 0x_6B, 0x_E6, 0x_E6, 0x_6B, 0x_6B, 0x_02, 0x_E6, 0x_1F, 0x_E6, 0x_E6, 0x_6B, 0x_E6, 0x_6B,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_1F, 0x_6B,
	];

	helper(S, BASE, 688_696_676);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_4_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_4_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0C,
		0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_2C,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_40, 0x_74, 0x_62, 0x_BD, 0x_40, 0x_40, 0x_14, 0x_2C, 0x_62, 0x_14,
		0x_2C, 0x_BD, 0x_62, 0x_40, 0x_40, 0x_2C, 0x_62, 0x_14, 0x_2C, 0x_40, 0x_62, 0x_62, 0x_62, 0x_14, 0x_40,
		0x_2C, 0x_40, 0x_BD, 0x_62, 0x_40, 0x_40, 0x_40, 0x_14, 0x_BD, 0x_2C, 0x_62, 0x_14, 0x_BD, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_BD, 0x_14, 0x_62, 0x_40,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_48_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_48_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_20,
		0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_EE, 0x_25, 0x_E1, 0x_F0, 0x_E1, 0x_E1,
		0x_47, 0x_25, 0x_25, 0x_25, 0x_E1, 0x_25, 0x_EE, 0x_47, 0x_E1, 0x_25, 0x_E1, 0x_E1, 0x_64, 0x_47, 0x_64,
		0x_E1, 0x_E1, 0x_64, 0x_64, 0x_25, 0x_E1, 0x_64, 0x_EE, 0x_47, 0x_64, 0x_25, 0x_E1, 0x_E1, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_EE, 0x_47, 0x_E1, 0x_25,
	];

	helper(S, BASE, 48);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_316_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_316_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0A,
		0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_20,
		0x_0C, 0x_09, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_C9, 0x_C9,
		0x_BF, 0x_30, 0x_8E, 0x_30, 0x_A9, 0x_46, 0x_46, 0x_46, 0x_A9, 0x_A9, 0x_C9, 0x_A9, 0x_BF, 0x_30, 0x_30,
		0x_46, 0x_A9, 0x_BF, 0x_A9, 0x_46, 0x_C9, 0x_46, 0x_46, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_30, 0x_C9, 0x_BF, 0x_46,
	];

	helper(S, BASE, 316);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_7_100_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_7_100_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58, 0x_58,
		0x_58, 0x_64, 0x_85, 0x_85, 0x_01, 0x_58, 0x_58, 0x_BB, 0x_A0, 0x_01, 0x_A0, 0x_85, 0x_85, 0x_58, 0x_58,
		0x_A0, 0x_01, 0x_01, 0x_01, 0x_58, 0x_58, 0x_64, 0x_64, 0x_85, 0x_58, 0x_64, 0x_85, 0x_01, 0x_85, 0x_01,
		0x_A0, 0x_01, 0x_58, 0x_A0, 0x_64, 0x_64, 0x_64, 0x_64, 0x_01, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_58, 0x_85, 0x_64, 0x_A0, 0x_01,
	];

	helper(S, BASE, 7_100);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_49_691_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_49_691_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0B,
		0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0A,
		0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0A, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_8D, 0x_9C, 0x_D3, 0x_FB, 0x_FB, 0x_8D, 0x_EE,
		0x_CA, 0x_FB, 0x_D3, 0x_9C, 0x_9C, 0x_EE, 0x_EE, 0x_9C, 0x_D3, 0x_FB, 0x_EE, 0x_EE, 0x_EE, 0x_FB, 0x_D3,
		0x_8D, 0x_FB, 0x_D3, 0x_9C, 0x_9C, 0x_8D, 0x_FB, 0x_EE, 0x_EE, 0x_D3, 0x_FB, 0x_9C, 0x_8D, 0x_9C, 0x_EE,
		0x_EE, 0x_FB, 0x_EE, 0x_8D, 0x_8D, 0x_FB, 0x_D3, 0x_9C, 0x_D3, 0x_D3, 0x_D3, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_EE, 0x_FB, 0x_8D, 0x_D3,
	];

	helper(S, BASE, 49_691);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_348_801_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_348_801_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_0C,
		0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_42, 0x_42, 0x_42, 0x_42,
		0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_DD, 0x_DB, 0x_85, 0x_B7, 0x_42, 0x_DB, 0x_42, 0x_85, 0x_C3,
		0x_42, 0x_85, 0x_B7, 0x_DD, 0x_B7, 0x_85, 0x_B7, 0x_85, 0x_42, 0x_B7, 0x_B7, 0x_85, 0x_85, 0x_DB, 0x_DD,
		0x_42, 0x_B7, 0x_B7, 0x_85, 0x_DB, 0x_B7, 0x_B7, 0x_85, 0x_42, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_85, 0x_DB, 0x_B7, 0x_DD,
	];

	helper(S, BASE, 348_801);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_8_332_010_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_8_332_010_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_FC, 0x_FC, 0x_FC,
		0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_94,
		0x_CE, 0x_CE, 0x_C4, 0x_CE, 0x_CE, 0x_CE, 0x_FC, 0x_70, 0x_FC, 0x_40, 0x_70, 0x_70, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_FC, 0x_CE, 0x_70, 0x_C4, 0x_70, 0x_94, 0x_CE, 0x_FC, 0x_CE, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_CE, 0x_70, 0x_C4, 0x_94,
	];

	helper(S, BASE, 8_332_010);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_48_740_718_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_48_740_718_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_4B, 0x_4B, 0x_4B, 0x_EB,
		0x_4B, 0x_1F, 0x_A9, 0x_A9, 0x_EB, 0x_EB, 0x_EB, 0x_17, 0x_4B, 0x_A9, 0x_EB, 0x_1F, 0x_A9, 0x_EB, 0x_1F,
		0x_A9, 0x_4B, 0x_22, 0x_1F, 0x_A9, 0x_A9, 0x_1F, 0x_1F, 0x_A9, 0x_EB, 0x_4B, 0x_4B, 0x_A9, 0x_22, 0x_22,
		0x_4B, 0x_A9, 0x_22, 0x_A9, 0x_22, 0x_1F, 0x_22, 0x_EB, 0x_4B, 0x_22, 0x_EB, 0x_4B, 0x_4B, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_22, 0x_1F, 0x_EB, 0x_4B,
	];

	helper(S, BASE, 48_740_718);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_810_566_724_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_810_566_724_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_0A,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_88, 0x_C5, 0x_88, 0x_68, 0x_68, 0x_68, 0x_C5, 0x_C5, 0x_C5, 0x_88, 0x_88, 0x_36, 0x_36,
		0x_DC, 0x_C5, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_C5, 0x_B9, 0x_88, 0x_36,
	];

	helper(S, BASE, 810_566_724);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_6_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_6_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_20, 0x_0D,
		0x_0B, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_09,
		0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE,
		0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_CA, 0x_EA, 0x_AE,
		0x_AA, 0x_AA, 0x_CA, 0x_84, 0x_AA, 0x_CA, 0x_84, 0x_ED, 0x_AE, 0x_ED, 0x_CA, 0x_AE, 0x_04, 0x_AE, 0x_AE,
		0x_CA, 0x_84, 0x_AA, 0x_ED, 0x_93, 0x_93, 0x_93, 0x_84, 0x_ED, 0x_AA, 0x_AE, 0x_AE, 0x_ED, 0x_84, 0x_AE,
		0x_ED, 0x_04, 0x_04, 0x_04, 0x_AA, 0x_04, 0x_CA, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_93, 0x_AA, 0x_84, 0x_ED, 0x_04, 0x_CA,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_30_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_30_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_09,
		0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18,
		0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18,
		0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_76, 0x_16, 0x_2D, 0x_FB, 0x_D4, 0x_76, 0x_76, 0x_76,
		0x_16, 0x_C0, 0x_D4, 0x_C0, 0x_FB, 0x_76, 0x_D4, 0x_D4, 0x_18, 0x_D4, 0x_A3, 0x_D4, 0x_A3, 0x_76, 0x_76,
		0x_76, 0x_D4, 0x_C0, 0x_76, 0x_A3, 0x_A3, 0x_18, 0x_A3, 0x_FB, 0x_76, 0x_16, 0x_D4, 0x_76, 0x_D4, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_C0, 0x_16, 0x_A3, 0x_76, 0x_D4, 0x_FB,
	];

	helper(S, BASE, 30);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_212_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_212_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0C,
		0x_09, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_3C, 0x_3C, 0x_3C, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3B, 0x_1F, 0x_1F, 0x_8D, 0x_3B, 0x_1F, 0x_39,
		0x_39, 0x_6B, 0x_3C, 0x_3B, 0x_3C, 0x_6B, 0x_3B, 0x_3C, 0x_3C, 0x_25, 0x_3B, 0x_3B, 0x_3B, 0x_39, 0x_25,
		0x_1F, 0x_EB, 0x_3B, 0x_EB, 0x_39, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_39, 0x_1F, 0x_25, 0x_3B, 0x_6B, 0x_EB,
	];

	helper(S, BASE, 212);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_9_112_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_9_112_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0C,
		0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A,
		0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_CC, 0x_93, 0x_CC, 0x_30, 0x_93, 0x_C0, 0x_DE, 0x_F6,
		0x_CC, 0x_CC, 0x_CC, 0x_93, 0x_5A, 0x_CC, 0x_5A, 0x_30, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_F6, 0x_CC, 0x_93,
		0x_30, 0x_CC, 0x_E4, 0x_30, 0x_30, 0x_CC, 0x_F6, 0x_E4, 0x_CC, 0x_E4, 0x_5A, 0x_CC, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_E4, 0x_DE, 0x_CC, 0x_F6, 0x_93, 0x_30,
	];

	helper(S, BASE, 9_112);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_48_263_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_48_263_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0D,
		0x_0A, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_09,
		0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99,
		0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_AA, 0x_97, 0x_99, 0x_CA, 0x_97, 0x_F1, 0x_83,
		0x_B7, 0x_AA, 0x_F1, 0x_97, 0x_97, 0x_AA, 0x_F1, 0x_CA, 0x_B7, 0x_99, 0x_97, 0x_B7, 0x_99, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_B7, 0x_AA, 0x_46, 0x_CA, 0x_F1, 0x_97,
	];

	helper(S, BASE, 48_263);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_467_899_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_467_899_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0A,
		0x_09, 0x_20, 0x_0A, 0x_0D, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7,
		0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7,
		0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_BA, 0x_F0,
		0x_67, 0x_F0, 0x_E7, 0x_F0, 0x_67, 0x_9F, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_E7, 0x_82, 0x_68, 0x_BA, 0x_4D, 0x_67, 0x_F0,
	];

	helper(S, BASE, 467_899);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_3_988_267_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_3_988_267_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_20,
		0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_1E, 0x_7F,
		0x_EE, 0x_36, 0x_9C, 0x_1E, 0x_46, 0x_33, 0x_BD, 0x_EE, 0x_EE, 0x_1E, 0x_36, 0x_33, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_46, 0x_36, 0x_33, 0x_1E, 0x_7F, 0x_EE,
	];

	helper(S, BASE, 3_988_267);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_54_850_782_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_54_850_782_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0A,
		0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D,
		0x_90, 0x_F6, 0x_5F, 0x_19, 0x_90, 0x_5F, 0x_99, 0x_DE, 0x_DE, 0x_7D, 0x_1A, 0x_19, 0x_F6, 0x_DE, 0x_5F,
		0x_99, 0x_F6, 0x_90, 0x_90, 0x_99, 0x_F6, 0x_19, 0x_19, 0x_DE, 0x_90, 0x_90, 0x_99, 0x_7D, 0x_19, 0x_19,
		0x_F6, 0x_99, 0x_7D, 0x_F6, 0x_5F, 0x_7D, 0x_90, 0x_19, 0x_F6, 0x_7D,
	];
	const BASE: &[u8] = &[
		0x_7D, 0x_90, 0x_F6, 0x_5F, 0x_19, 0x_DE, 0x_99,
	];

	helper(S, BASE, 54_850_782);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_657_850_776_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_657_850_776_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_20, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_0A,
		0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0C,
		0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_23, 0x_23, 0x_23, 0x_C2, 0x_C2, 0x_C2, 0x_23, 0x_48,
		0x_D2, 0x_E6, 0x_C2, 0x_C2, 0x_23, 0x_C2, 0x_98, 0x_48, 0x_23, 0x_C2, 0x_C2, 0x_23, 0x_D2, 0x_D2, 0x_48,
		0x_C2, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_DB, 0x_C2, 0x_E6, 0x_D2, 0x_48, 0x_D0,
	];

	helper(S, BASE, 657_850_776);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_3_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_3_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_09,
		0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_24, 0x_24,
		0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24,
		0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24,
		0x_24, 0x_24, 0x_24, 0x_24, 0x_D8, 0x_4F, 0x_6C, 0x_95, 0x_95, 0x_F0, 0x_DA, 0x_24, 0x_F0, 0x_DA, 0x_D8,
		0x_F0, 0x_F0, 0x_24, 0x_D8, 0x_D8, 0x_7A, 0x_7A, 0x_D8, 0x_F0, 0x_7A, 0x_F0, 0x_DA, 0x_C5, 0x_6C, 0x_C5,
		0x_D8, 0x_23, 0x_C5,
	];
	const BASE: &[u8] = &[
		0x_24, 0x_95, 0x_6C, 0x_D8, 0x_F0, 0x_3A, 0x_DA, 0x_6A, 0x_23, 0x_C5, 0x_7A,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_60_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_60_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_B2,
		0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2,
		0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2,
		0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B3, 0x_B3, 0x_5A, 0x_39, 0x_39, 0x_11, 0x_60, 0x_60, 0x_DA, 0x_B3,
		0x_B2, 0x_60, 0x_36, 0x_E1, 0x_39, 0x_36, 0x_63, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_B2, 0x_63, 0x_36, 0x_39, 0x_FD, 0x_B3, 0x_11, 0x_E1, 0x_78, 0x_DA, 0x_60,
	];

	helper(S, BASE, 60);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_775_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_775_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_20, 0x_0B,
		0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0D,
		0x_20, 0x_0C, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_68, 0x_21, 0x_91, 0x_42, 0x_26, 0x_DB,
		0x_26, 0x_68, 0x_21, 0x_37, 0x_76, 0x_5E, 0x_68, 0x_58, 0x_76, 0x_91, 0x_58, 0x_37, 0x_DB, 0x_37, 0x_68,
		0x_37, 0x_21, 0x_37, 0x_68, 0x_58, 0x_DB, 0x_DB, 0x_30, 0x_5E, 0x_26, 0x_68, 0x_68, 0x_30, 0x_37, 0x_26,
		0x_8E, 0x_76, 0x_91, 0x_5E, 0x_26, 0x_DB, 0x_26, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_30, 0x_DB, 0x_76, 0x_21, 0x_91, 0x_68, 0x_5E, 0x_58, 0x_26, 0x_37,
	];

	helper(S, BASE, 775);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_3_025_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_3_025_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_0C,
		0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_0B,
		0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_B1, 0x_B1, 0x_B1,
		0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1,
		0x_B1, 0x_B4, 0x_CE, 0x_B1, 0x_B1, 0x_1F, 0x_B4, 0x_C1, 0x_B1, 0x_CE, 0x_86, 0x_FB, 0x_77, 0x_77, 0x_E2,
		0x_FB, 0x_77, 0x_B1, 0x_86, 0x_3E, 0x_E2, 0x_FB, 0x_86, 0x_55, 0x_B4, 0x_CE, 0x_E2, 0x_77, 0x_3D, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_86, 0x_B4, 0x_CE, 0x_E2, 0x_FB, 0x_3E, 0x_77, 0x_3D, 0x_55, 0x_C1,
	];

	helper(S, BASE, 3_025);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_98_144_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_98_144_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0B,
		0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_20, 0x_0C,
		0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_2F, 0x_2F, 0x_38, 0x_D0, 0x_AE, 0x_6C, 0x_CD, 0x_F9, 0x_2F, 0x_03,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_6C, 0x_CD, 0x_F7, 0x_DF, 0x_48, 0x_38, 0x_D0, 0x_AE, 0x_03, 0x_79,
	];

	helper(S, BASE, 98_144);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_881_405_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_881_405_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_20,
		0x_0C, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_0B,
		0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66,
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_38, 0x_38, 0x_A8, 0x_A8, 0x_50, 0x_73, 0x_45, 0x_38, 0x_66,
		0x_A7, 0x_66, 0x_50, 0x_BD, 0x_A8, 0x_38, 0x_A8, 0x_A7, 0x_81, 0x_A7, 0x_38, 0x_A3, 0x_8D, 0x_50, 0x_66,
		0x_89, 0x_73, 0x_A8, 0x_A8, 0x_8D, 0x_A7, 0x_66, 0x_66, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_A7, 0x_A8, 0x_50, 0x_BD, 0x_38, 0x_A3, 0x_8D, 0x_73, 0x_81, 0x_89,
	];

	helper(S, BASE, 881_405);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_6_330_304_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_6_330_304_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_09,
		0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_EC, 0x_2C, 0x_49, 0x_2C, 0x_DD, 0x_EC, 0x_49, 0x_D1, 0x_59,
		0x_FB, 0x_67, 0x_EC, 0x_2C, 0x_EC, 0x_D1, 0x_FB, 0x_2C, 0x_B4, 0x_D1, 0x_D1, 0x_4A, 0x_EC, 0x_EC, 0x_3D,
		0x_70, 0x_49, 0x_D1, 0x_4A, 0x_49, 0x_2C, 0x_D1, 0x_70, 0x_2C, 0x_B4, 0x_EC, 0x_B4, 0x_2C, 0x_4A, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_EC, 0x_70, 0x_D1, 0x_2C, 0x_DD, 0x_FB, 0x_49, 0x_B4, 0x_3D, 0x_67, 0x_4A,
	];

	helper(S, BASE, 6_330_304);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_83_984_998_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_83_984_998_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0A,
		0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0C,
		0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_1E, 0x_1E, 0x_1E,
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E,
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_B4, 0x_3D,
		0x_B4, 0x_43, 0x_3D, 0x_BF, 0x_C1, 0x_C1, 0x_44, 0x_1E, 0x_0E, 0x_0E, 0x_0E, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_BF, 0x_71, 0x_3D, 0x_B4, 0x_43, 0x_EB, 0x_0E, 0x_93, 0x_C1, 0x_E3,
	];

	helper(S, BASE, 83_984_998);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_842_642_060_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_842_642_060_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_20,
		0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_34, 0x_34, 0x_34, 0x_34,
		0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34,
		0x_34, 0x_34, 0x_53, 0x_83, 0x_D4, 0x_A9, 0x_75, 0x_8B, 0x_40, 0x_83, 0x_A9, 0x_15, 0x_75, 0x_8B, 0x_DF,
		0x_DF,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_75, 0x_D4, 0x_53, 0x_40, 0x_5C, 0x_8B, 0x_A9, 0x_DF, 0x_1D, 0x_83,
	];

	helper(S, BASE, 842_642_060);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_6_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_6_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0D,
		0x_09, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_20, 0x_0C,
		0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE,
		0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_8E, 0x_10,
		0x_D1, 0x_DC, 0x_37, 0x_11, 0x_D1, 0x_11, 0x_DC, 0x_37, 0x_2F, 0x_52, 0x_52, 0x_AE, 0x_AE, 0x_11, 0x_AE,
		0x_48, 0x_8E, 0x_AE, 0x_2F, 0x_EB, 0x_8E, 0x_BD, 0x_DC, 0x_2F, 0x_EB, 0x_37, 0x_37, 0x_52, 0x_37, 0x_48,
		0x_2F, 0x_52, 0x_DD, 0x_37, 0x_52, 0x_2F, 0x_03, 0x_BD, 0x_D1, 0x_DC, 0x_03,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_11, 0x_DC, 0x_52, 0x_DD, 0x_48, 0x_8E, 0x_03, 0x_EB, 0x_D1, 0x_2F, 0x_BD, 0x_37,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_35_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_35_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0B,
		0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_16, 0x_36, 0x_C8, 0x_C3, 0x_9F, 0x_16, 0x_D4, 0x_9F, 0x_39, 0x_36, 0x_16, 0x_16, 0x_2A, 0x_36,
		0x_39, 0x_03, 0x_93, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_C3, 0x_16, 0x_93, 0x_D4, 0x_9F, 0x_29, 0x_39, 0x_C1, 0x_36, 0x_2A, 0x_03, 0x_37,
	];

	helper(S, BASE, 35);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_384_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_384_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_20,
		0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_24, 0x_E0, 0x_92, 0x_9E, 0x_8D, 0x_7C, 0x_C4, 0x_03, 0x_7C,
		0x_2C, 0x_AA,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_7C, 0x_24, 0x_E0, 0x_36, 0x_2C, 0x_9A, 0x_92, 0x_03, 0x_8D, 0x_85, 0x_BF, 0x_AA,
	];

	helper(S, BASE, 384);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_7_047_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_7_047_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_0D,
		0x_0A, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0D,
		0x_0B, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31,
		0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_A2, 0x_E8, 0x_D1, 0x_ED, 0x_97,
		0x_AC, 0x_D1, 0x_E2, 0x_A2, 0x_2C, 0x_E8, 0x_AC, 0x_91, 0x_31, 0x_AC, 0x_3C, 0x_2C, 0x_31, 0x_93, 0x_9B,
		0x_A2, 0x_3C, 0x_91, 0x_D1, 0x_D1, 0x_A2, 0x_31, 0x_31, 0x_39, 0x_93, 0x_2C, 0x_2C, 0x_AC, 0x_D1, 0x_39,
		0x_AC,
	];
	const BASE: &[u8] = &[
		0x_31, 0x_ED, 0x_E8, 0x_A2, 0x_3C, 0x_E2, 0x_2C, 0x_93, 0x_39, 0x_D1, 0x_91, 0x_9B, 0x_AC,
	];

	helper(S, BASE, 7_047);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_85_091_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_85_091_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_93, 0x_68,
		0x_AE, 0x_9F, 0x_9F, 0x_49, 0x_B2, 0x_DB, 0x_93, 0x_93, 0x_28, 0x_78, 0x_EA, 0x_28, 0x_DB, 0x_05, 0x_23,
		0x_A4, 0x_A4, 0x_78, 0x_34, 0x_EA, 0x_68, 0x_B2, 0x_DB, 0x_A4, 0x_34, 0x_34, 0x_05, 0x_9F, 0x_DB, 0x_93,
		0x_78, 0x_28, 0x_DB, 0x_68, 0x_EA, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_78, 0x_93, 0x_A4, 0x_DB, 0x_05, 0x_9F, 0x_EA, 0x_B2, 0x_AE, 0x_28, 0x_23, 0x_68,
	];

	helper(S, BASE, 85_091);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_254_709_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_254_709_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0C,
		0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_C6, 0x_15, 0x_17, 0x_3C, 0x_27, 0x_22, 0x_27, 0x_45, 0x_27, 0x_D1, 0x_D1, 0x_3C, 0x_3C, 0x_C6,
		0x_15, 0x_17, 0x_A2, 0x_15, 0x_68, 0x_AB, 0x_3C, 0x_96, 0x_96, 0x_A2, 0x_C6, 0x_D1, 0x_A2, 0x_C6, 0x_C6,
		0x_6F, 0x_6F, 0x_15, 0x_45, 0x_A2, 0x_AB, 0x_AB, 0x_A2, 0x_6F, 0x_D1, 0x_27, 0x_3C, 0x_D1, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_D1, 0x_3C, 0x_A2, 0x_1B, 0x_68, 0x_96, 0x_AB, 0x_C6, 0x_45, 0x_6F, 0x_15, 0x_17,
	];

	helper(S, BASE, 254_709);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_4_943_977_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_4_943_977_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84,
		0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84,
		0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_2C, 0x_84, 0x_6C, 0x_2C, 0x_6C, 0x_18, 0x_72, 0x_13,
		0x_17, 0x_8B, 0x_4C, 0x_5D, 0x_18, 0x_72, 0x_A9, 0x_8B, 0x_A9, 0x_8B, 0x_E8, 0x_17, 0x_1D, 0x_1D, 0x_1D,
		0x_72, 0x_72, 0x_6C, 0x_6C, 0x_18, 0x_8B, 0x_18, 0x_18, 0x_72, 0x_1D, 0x_1D, 0x_6C, 0x_72, 0x_1D, 0x_5D,
		0x_1D, 0x_1D, 0x_72, 0x_6C, 0x_6C, 0x_18, 0x_5D, 0x_2C, 0x_A9, 0x_1D, 0x_A9, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_2C, 0x_1D, 0x_18, 0x_6C, 0x_4C, 0x_A9, 0x_E8, 0x_5D, 0x_17, 0x_08, 0x_8B, 0x_72,
	];

	helper(S, BASE, 4_943_977);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_36_925_385_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_36_925_385_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_09,
		0x_09, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_09,
		0x_0B, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_B1, 0x_B1, 0x_B1, 0x_B1,
		0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1,
		0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_C1, 0x_1C, 0x_85, 0x_99, 0x_D6, 0x_85, 0x_50, 0x_04, 0x_F7, 0x_E9, 0x_C1,
		0x_85, 0x_9A, 0x_F7, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_E9, 0x_D6, 0x_50, 0x_F7, 0x_85, 0x_57, 0x_C1, 0x_1C, 0x_EC, 0x_9A, 0x_99, 0x_41,
	];

	helper(S, BASE, 36_925_385);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_339_516_451_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_339_516_451_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_B7, 0x_B7, 0x_B3, 0x_B7, 0x_B7, 0x_B7, 0x_DB, 0x_DB,
		0x_4B, 0x_F7, 0x_91, 0x_B7, 0x_F7, 0x_4A, 0x_12, 0x_B3, 0x_4A, 0x_91, 0x_91, 0x_91, 0x_4A, 0x_7D, 0x_07,
		0x_71,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_DB, 0x_FD, 0x_71, 0x_B3, 0x_B7, 0x_07, 0x_F7, 0x_6B, 0x_91, 0x_7D, 0x_E4, 0x_4A,
	];

	helper(S, BASE, 339_516_451);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_3_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_3_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_64, 0x_D0, 0x_C7, 0x_AF, 0x_EC, 0x_9B, 0x_94, 0x_26, 0x_EC, 0x_60, 0x_EC, 0x_AB, 0x_DF,
		0x_26, 0x_3A, 0x_D0, 0x_F9, 0x_26, 0x_05, 0x_64, 0x_3A, 0x_AB, 0x_AF, 0x_7D, 0x_AB, 0x_9B, 0x_94, 0x_60,
		0x_81, 0x_AF, 0x_64, 0x_EC, 0x_7D, 0x_6A, 0x_D0, 0x_92, 0x_F0, 0x_92, 0x_92, 0x_DF, 0x_EC, 0x_81, 0x_05,
		0x_AF,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_26, 0x_DF, 0x_D0, 0x_F9, 0x_AF, 0x_05, 0x_1E, 0x_60, 0x_9B, 0x_AB, 0x_7D, 0x_F0, 0x_3A, 0x_EC,
		0x_92, 0x_6A, 0x_94, 0x_81,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_26_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_26_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_86, 0x_86, 0x_86, 0x_AD, 0x_E7, 0x_9F, 0x_A0, 0x_86, 0x_AD, 0x_4E, 0x_ED, 0x_4E,
		0x_92, 0x_E7, 0x_21, 0x_A0, 0x_A4, 0x_E7,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_AD, 0x_50, 0x_04, 0x_0F, 0x_F7, 0x_21, 0x_E7, 0x_5D, 0x_92, 0x_17, 0x_A4, 0x_18, 0x_4E, 0x_A0,
		0x_9D, 0x_ED, 0x_A2, 0x_D8,
	];

	helper(S, BASE, 26);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_535_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_535_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0A,
		0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_09,
		0x_09, 0x_09, 0x_0C, 0x_0C, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_B9, 0x_90, 0x_7D, 0x_09, 0x_70, 0x_D0, 0x_37, 0x_3F, 0x_FA,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_B9, 0x_64, 0x_7D, 0x_9D, 0x_93, 0x_D0, 0x_4C, 0x_CF, 0x_90, 0x_31, 0x_B3, 0x_7E, 0x_ED, 0x_37,
		0x_82, 0x_70, 0x_FA, 0x_3F,
	];

	helper(S, BASE, 535);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_9_810_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_9_810_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0B,
		0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_4F, 0x_4F, 0x_4F,
		0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F,
		0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_49, 0x_BD, 0x_21, 0x_27, 0x_32, 0x_E6, 0x_B9, 0x_21, 0x_EA, 0x_B4, 0x_EA,
		0x_C4, 0x_F9, 0x_80, 0x_EA, 0x_75, 0x_49, 0x_4F, 0x_C4, 0x_43, 0x_27, 0x_27, 0x_75, 0x_75, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_49, 0x_E6, 0x_21, 0x_F9, 0x_80, 0x_27, 0x_63, 0x_BD, 0x_A6, 0x_B9, 0x_B4, 0x_75, 0x_43, 0x_01,
		0x_06, 0x_7D, 0x_C4, 0x_EA,
	];

	helper(S, BASE, 9_810);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_41_990_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_41_990_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_0D,
		0x_0D, 0x_09, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B,
		0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B,
		0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_4E, 0x_E0, 0x_4E, 0x_6B, 0x_C6, 0x_E1, 0x_C1, 0x_2A, 0x_E1,
		0x_3A, 0x_35, 0x_E1, 0x_35, 0x_E0, 0x_35, 0x_EC, 0x_EC, 0x_03, 0x_94, 0x_EC, 0x_E0, 0x_6E, 0x_EC, 0x_91,
		0x_47, 0x_E1, 0x_6E, 0x_07, 0x_77, 0x_4E, 0x_47, 0x_35, 0x_08, 0x_2A, 0x_E0, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_07, 0x_E0, 0x_2A, 0x_E1, 0x_47, 0x_4E, 0x_3A, 0x_35, 0x_77, 0x_41, 0x_08, 0x_91, 0x_03, 0x_C1,
		0x_EC, 0x_94, 0x_6E, 0x_49,
	];

	helper(S, BASE, 41_990);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_346_187_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_346_187_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0D,
		0x_09, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22,
		0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22,
		0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22,
		0x_22, 0x_22, 0x_22, 0x_22, 0x_40, 0x_B5, 0x_6F, 0x_EA, 0x_78, 0x_B1, 0x_62, 0x_83, 0x_56, 0x_15, 0x_EA,
		0x_5D, 0x_15, 0x_22, 0x_EA, 0x_37, 0x_37, 0x_6D, 0x_B5, 0x_EA, 0x_EA, 0x_78, 0x_5D, 0x_EA, 0x_56, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_5D, 0x_40, 0x_EC, 0x_62, 0x_D3, 0x_6D, 0x_78, 0x_6F, 0x_0E, 0x_15, 0x_83, 0x_B5, 0x_F3, 0x_37,
		0x_BF, 0x_56, 0x_84, 0x_EA,
	];

	helper(S, BASE, 346_187);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_6_786_498_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_6_786_498_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_09,
		0x_09, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_3E, 0x_3E,
		0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E,
		0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E,
		0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_A0, 0x_1E, 0x_27, 0x_11, 0x_4B, 0x_A0, 0x_24, 0x_7B, 0x_1E, 0x_BB,
		0x_7B, 0x_7B, 0x_BB, 0x_42, 0x_BB, 0x_BB, 0x_16, 0x_11, 0x_35, 0x_11, 0x_7B, 0x_35, 0x_65, 0x_27, 0x_E1,
		0x_16, 0x_2E, 0x_2E, 0x_35, 0x_65, 0x_E1, 0x_1E, 0x_11, 0x_A0, 0x_35, 0x_D1, 0x_5B, 0x_7B, 0x_2E, 0x_6C,
		0x_5B, 0x_A0, 0x_DF, 0x_3E, 0x_35, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_27, 0x_A0, 0x_4B, 0x_BB, 0x_16, 0x_DF, 0x_5B, 0x_11, 0x_2E, 0x_65, 0x_35, 0x_E1, 0x_32, 0x_1E,
		0x_6C, 0x_42, 0x_D1, 0x_7B,
	];

	helper(S, BASE, 6_786_498);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_39_288_397_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_39_288_397_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_83, 0x_83, 0x_1B, 0x_85, 0x_0E, 0x_83, 0x_3A, 0x_95, 0x_F7, 0x_D8, 0x_A6, 0x_6C, 0x_A6,
		0x_83, 0x_3A, 0x_A6, 0x_79, 0x_C5, 0x_95, 0x_79, 0x_03, 0x_34, 0x_D8, 0x_79, 0x_04, 0x_D8, 0x_D0, 0x_04,
		0x_3A, 0x_04, 0x_D8, 0x_88, 0x_83, 0x_0E, 0x_A6, 0x_1B, 0x_6C, 0x_0E, 0x_1B, 0x_85, 0x_0E, 0x_C5, 0x_83,
		0x_34, 0x_87, 0x_D8, 0x_D8, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_34, 0x_3A, 0x_B5, 0x_04, 0x_A6, 0x_03, 0x_95, 0x_87, 0x_0E, 0x_EF, 0x_D8, 0x_88, 0x_C5, 0x_79,
		0x_1B, 0x_85, 0x_6C, 0x_D0,
	];

	helper(S, BASE, 39_288_397);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_962_698_614_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_962_698_614_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_20,
		0x_09, 0x_0B, 0x_0C, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07,
		0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07,
		0x_46, 0x_46, 0x_55, 0x_97, 0x_BE, 0x_F6, 0x_F1, 0x_BE, 0x_47, 0x_F6, 0x_34, 0x_92, 0x_36, 0x_97, 0x_B0,
		0x_F2, 0x_92, 0x_92, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_46, 0x_BE, 0x_F1, 0x_29, 0x_ED, 0x_92, 0x_37, 0x_55, 0x_F2, 0x_F6, 0x_B0, 0x_52, 0x_93, 0x_F7,
		0x_97, 0x_36, 0x_32, 0x_34,
	];

	helper(S, BASE, 962_698_614);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_5_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_5_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0A,
		0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_0C,
		0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2,
		0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_05, 0x_35, 0x_12, 0x_B8, 0x_69, 0x_1B, 0x_08, 0x_37, 0x_6A,
		0x_13, 0x_6A, 0x_41, 0x_EB, 0x_4D, 0x_A8, 0x_C9, 0x_E2, 0x_E2, 0x_B8, 0x_3B, 0x_2C, 0x_0E, 0x_F0, 0x_AB,
		0x_69, 0x_69, 0x_84, 0x_FF, 0x_AB, 0x_26, 0x_08, 0x_C9, 0x_08, 0x_44, 0x_17, 0x_AE, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_B2, 0x_54, 0x_4B, 0x_26, 0x_01, 0x_05, 0x_08, 0x_2C, 0x_61, 0x_03, 0x_A8, 0x_69, 0x_89, 0x_13, 0x_C9,
		0x_E2, 0x_84, 0x_3B, 0x_4D, 0x_B8, 0x_02, 0x_EB, 0x_1E, 0x_17, 0x_43, 0x_BB, 0x_74, 0x_AB, 0x_1B, 0x_FF,
		0x_06, 0x_7F, 0x_41, 0x_12, 0x_70, 0x_F4, 0x_44, 0x_37, 0x_F0, 0x_0E, 0x_6A, 0x_AE,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_33_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_33_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_09,
		0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_AC, 0x_3D,
		0x_65, 0x_11, 0x_38, 0x_75, 0x_73, 0x_CF, 0x_AF, 0x_B1, 0x_51, 0x_73, 0x_07, 0x_65, 0x_3C, 0x_7C, 0x_29,
		0x_8A, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_4F, 0x_8A, 0x_7D, 0x_65, 0x_11, 0x_E2, 0x_FF, 0x_6E, 0x_02, 0x_F0, 0x_F5, 0x_75, 0x_F7, 0x_9F,
		0x_C3, 0x_95, 0x_B3, 0x_51, 0x_43, 0x_A8, 0x_24, 0x_7C, 0x_73, 0x_3C, 0x_47, 0x_18, 0x_29, 0x_91, 0x_9A,
		0x_D5, 0x_D6, 0x_38, 0x_AC, 0x_1A, 0x_07, 0x_10, 0x_CF, 0x_B1, 0x_45, 0x_AF, 0x_03,
	];

	helper(S, BASE, 33);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_853_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_853_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0C,
		0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0D,
		0x_09, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_41, 0x_41, 0x_D0, 0x_B0, 0x_14, 0x_42,
		0x_43, 0x_87, 0x_07, 0x_54, 0x_4F, 0x_41, 0x_A1, 0x_54, 0x_EB, 0x_81, 0x_87, 0x_EE, 0x_77, 0x_1B, 0x_1B,
		0x_CD, 0x_D5, 0x_07, 0x_54, 0x_5C, 0x_EE, 0x_77, 0x_43, 0x_F9, 0x_4F, 0x_4E, 0x_DF, 0x_D5, 0x_19, 0x_DF,
		0x_9A, 0x_D0, 0x_FE, 0x_DF, 0x_6A, 0x_D5, 0x_D5, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_B4, 0x_07, 0x_A3, 0x_56, 0x_6A, 0x_C0, 0x_77, 0x_9A, 0x_1E, 0x_1B, 0x_EB, 0x_EE, 0x_B0, 0x_47,
		0x_44, 0x_4E, 0x_53, 0x_A1, 0x_DF, 0x_D0, 0x_43, 0x_19, 0x_F9, 0x_A8, 0x_FE, 0x_02, 0x_87, 0x_52, 0x_01,
		0x_81, 0x_9F, 0x_4F, 0x_42, 0x_5C, 0x_F4, 0x_D5, 0x_6F, 0x_54, 0x_CD, 0x_98, 0x_03,
	];

	helper(S, BASE, 853);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_2_992_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_2_992_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0D,
		0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_B4, 0x_C4, 0x_31, 0x_F4, 0x_3D, 0x_01, 0x_B6, 0x_24, 0x_C3, 0x_D0, 0x_D0, 0x_8B, 0x_B6, 0x_EE,
		0x_F1, 0x_1D, 0x_BE, 0x_8B, 0x_EE, 0x_DB, 0x_C4, 0x_12, 0x_DB, 0x_C6, 0x_4B, 0x_46, 0x_81, 0x_CF, 0x_C8,
		0x_42, 0x_01, 0x_DB, 0x_EE, 0x_C8, 0x_FC, 0x_E3, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_B4, 0x_C3, 0x_28, 0x_18, 0x_4B, 0x_DF, 0x_45, 0x_FC, 0x_24, 0x_31, 0x_CF, 0x_C7, 0x_42, 0x_B6,
		0x_FA, 0x_D3, 0x_72, 0x_BE, 0x_8B, 0x_F1, 0x_83, 0x_E3, 0x_81, 0x_6E, 0x_47, 0x_E5, 0x_D0, 0x_C6, 0x_C4,
		0x_8F, 0x_01, 0x_1D, 0x_85, 0x_DB, 0x_C8, 0x_EE, 0x_87, 0x_12, 0x_F0, 0x_50, 0x_46,
	];

	helper(S, BASE, 2_992);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_83_376_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_83_376_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_0C,
		0x_0C, 0x_20, 0x_0D, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_83, 0x_61, 0x_BA,
		0x_C5, 0x_14, 0x_62, 0x_6E, 0x_AA, 0x_25, 0x_83, 0x_01, 0x_EB, 0x_E0, 0x_10, 0x_07, 0x_64, 0x_AC, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_83, 0x_9A, 0x_B2, 0x_40, 0x_61, 0x_C5, 0x_5B, 0x_69, 0x_AC, 0x_B4, 0x_BA, 0x_C1, 0x_31, 0x_07,
		0x_64, 0x_F7, 0x_E0, 0x_A1, 0x_A4, 0x_F4, 0x_25, 0x_11, 0x_6E, 0x_62, 0x_F9, 0x_3A, 0x_AA, 0x_A6, 0x_05,
		0x_78, 0x_10, 0x_FF, 0x_65, 0x_7D, 0x_AB, 0x_01, 0x_03, 0x_CE, 0x_22, 0x_EB, 0x_F3,
	];

	helper(S, BASE, 83_376);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_808_304_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_808_304_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0D,
		0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62,
		0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62,
		0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_58, 0x_84, 0x_2F, 0x_46, 0x_EA, 0x_9F, 0x_F4, 0x_46, 0x_52, 0x_9F,
		0x_76, 0x_03, 0x_69, 0x_B6, 0x_52, 0x_69, 0x_96, 0x_14, 0x_25, 0x_62, 0x_25, 0x_72, 0x_82, 0x_86, 0x_18,
		0x_77, 0x_87, 0x_25, 0x_7A, 0x_D9, 0x_A9, 0x_D9, 0x_03, 0x_90, 0x_2F, 0x_B6, 0x_6C, 0x_90, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_DD, 0x_FC, 0x_82, 0x_7A, 0x_77, 0x_68, 0x_8F, 0x_BE, 0x_2F, 0x_58, 0x_72, 0x_96, 0x_87, 0x_46,
		0x_16, 0x_C2, 0x_25, 0x_14, 0x_69, 0x_18, 0x_50, 0x_EF, 0x_B6, 0x_86, 0x_F1, 0x_A6, 0x_90, 0x_76, 0x_6C,
		0x_52, 0x_A9, 0x_44, 0x_D9, 0x_6E, 0x_03, 0x_95, 0x_D8, 0x_84, 0x_B2, 0x_9F, 0x_F4,
	];

	helper(S, BASE, 808_304);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_1_254_756_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_1_254_756_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0,
		0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_DD, 0x_82, 0x_5E, 0x_DF, 0x_29, 0x_D2, 0x_C3, 0x_DD, 0x_EE, 0x_EE,
		0x_7C, 0x_E3, 0x_5E, 0x_11, 0x_80, 0x_C0, 0x_80, 0x_E8, 0x_2C, 0x_2C, 0x_D2, 0x_CB, 0x_39, 0x_1A, 0x_6D,
		0x_07, 0x_11, 0x_D4, 0x_D2, 0x_7C, 0x_39, 0x_DD, 0x_57, 0x_92, 0x_11, 0x_7C, 0x_82, 0x_8C, 0x_27, 0x_39,
		0x_FB, 0x_44, 0x_F4,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_B3, 0x_8C, 0x_7C, 0x_CB, 0x_39, 0x_DF, 0x_DB, 0x_F4, 0x_A4, 0x_D9, 0x_2C, 0x_B9, 0x_5E, 0x_44,
		0x_06, 0x_DD, 0x_E3, 0x_C3, 0x_B0, 0x_FE, 0x_27, 0x_07, 0x_11, 0x_1A, 0x_76, 0x_D2, 0x_FB, 0x_C7, 0x_EE,
		0x_80, 0x_6D, 0x_E8, 0x_89, 0x_22, 0x_C8, 0x_57, 0x_92, 0x_D4, 0x_82, 0x_7F, 0x_84,
	];

	helper(S, BASE, 1_254_756);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_92_558_300_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_92_558_300_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_32, 0x_F9, 0x_26, 0x_32,
		0x_30, 0x_C0, 0x_AD, 0x_26, 0x_30, 0x_F5, 0x_B6, 0x_F5, 0x_CF, 0x_76, 0x_43, 0x_D8, 0x_D3, 0x_D3, 0x_32,
		0x_7C, 0x_68, 0x_30, 0x_FB, 0x_FD, 0x_56, 0x_26, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_03, 0x_30, 0x_9F, 0x_8C, 0x_25, 0x_D3, 0x_4E, 0x_C8, 0x_A2, 0x_E5, 0x_F5, 0x_26, 0x_C3, 0x_BD,
		0x_B5, 0x_CF, 0x_16, 0x_7C, 0x_21, 0x_3A, 0x_7F, 0x_FD, 0x_EA, 0x_38, 0x_BA, 0x_9E, 0x_7B, 0x_D8, 0x_32,
		0x_CD, 0x_F9, 0x_68, 0x_33, 0x_56, 0x_3D, 0x_B6, 0x_1D, 0x_43, 0x_AD, 0x_76, 0x_FB,
	];

	helper(S, BASE, 92_558_300);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_126_152_000_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_126_152_000_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0B,
		0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0B,
		0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25,
		0x_28, 0x_48, 0x_67, 0x_10, 0x_CF, 0x_E0, 0x_D9, 0x_1D, 0x_CA, 0x_AA, 0x_55, 0x_CF, 0x_F2, 0x_AA, 0x_DC,
		0x_61, 0x_67, 0x_C0, 0x_FA, 0x_28, 0x_FE, 0x_25, 0x_C0, 0x_EB, 0x_EB, 0x_C0, 0x_B1, 0x_71, 0x_69, 0x_61,
		0x_16, 0x_C0, 0x_7C, 0x_A6, 0x_FE, 0x_25, 0x_CE, 0x_35, 0x_EB, 0x_EB, 0x_CE,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_61, 0x_CF, 0x_55, 0x_C0, 0x_CA, 0x_AA, 0x_A6, 0x_35, 0x_AF, 0x_3C, 0x_2A, 0x_69, 0x_4F, 0x_3A,
		0x_7C, 0x_DC, 0x_EB, 0x_58, 0x_FA, 0x_15, 0x_1D, 0x_48, 0x_DA, 0x_B1, 0x_5A, 0x_16, 0x_71, 0x_12, 0x_B7,
		0x_67, 0x_10, 0x_D9, 0x_C5, 0x_FE, 0x_05, 0x_95, 0x_30, 0x_66, 0x_F2, 0x_28, 0x_CE,
	];

	helper(S, BASE, 126_152_000);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_6_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_6_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_0C,
		0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_CA, 0x_A6, 0x_91, 0x_CC,
		0x_F4, 0x_6F, 0x_C6, 0x_06, 0x_96, 0x_56, 0x_91, 0x_1D, 0x_58, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_E2, 0x_C6, 0x_9C, 0x_DA, 0x_49, 0x_CA, 0x_FE, 0x_FA, 0x_87, 0x_5A, 0x_17, 0x_6B, 0x_CC, 0x_C9,
		0x_FB, 0x_C2, 0x_58, 0x_11, 0x_67, 0x_1C, 0x_56, 0x_95, 0x_D1, 0x_A7, 0x_C8, 0x_83, 0x_7D, 0x_60, 0x_63,
		0x_E7, 0x_C3, 0x_7A, 0x_61, 0x_45, 0x_2C, 0x_33, 0x_96, 0x_AF, 0x_14, 0x_C0, 0x_43, 0x_1D, 0x_5B, 0x_70,
		0x_A2, 0x_84, 0x_F4, 0x_40, 0x_22, 0x_54, 0x_64, 0x_B1, 0x_D8, 0x_EC, 0x_6F, 0x_92, 0x_3B, 0x_3F, 0x_2A,
		0x_F2, 0x_E4, 0x_89, 0x_AA, 0x_D5, 0x_68, 0x_DF, 0x_01, 0x_A5, 0x_91, 0x_B6, 0x_5C, 0x_AC,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_39_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_39_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0C,
		0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_0A,
		0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_8B, 0x_16, 0x_11,
		0x_67, 0x_3D, 0x_9A, 0x_FD, 0x_99, 0x_DC, 0x_0F, 0x_24, 0x_11, 0x_3C, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_F7, 0x_68, 0x_4F, 0x_46, 0x_4B, 0x_A3, 0x_D2, 0x_FD, 0x_63, 0x_11, 0x_3D, 0x_D7, 0x_60, 0x_27,
		0x_3B, 0x_BB, 0x_9F, 0x_B6, 0x_58, 0x_2C, 0x_32, 0x_53, 0x_67, 0x_99, 0x_A5, 0x_DC, 0x_1B, 0x_96, 0x_C4,
		0x_91, 0x_69, 0x_52, 0x_0F, 0x_94, 0x_42, 0x_17, 0x_E0, 0x_6D, 0x_8B, 0x_6B, 0x_AA, 0x_76, 0x_74, 0x_33,
		0x_07, 0x_88, 0x_B8, 0x_E4, 0x_6A, 0x_04, 0x_64, 0x_55, 0x_44, 0x_FB, 0x_C9, 0x_D6, 0x_DD, 0x_7F, 0x_1D,
		0x_24, 0x_1F, 0x_E6, 0x_3C, 0x_F0, 0x_B4, 0x_A4, 0x_5C, 0x_9A, 0x_36, 0x_6F, 0x_25, 0x_AE,
	];

	helper(S, BASE, 39);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_429_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_429_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0D, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_C0,
		0x_21, 0x_0C, 0x_9C, 0x_37, 0x_3C, 0x_94, 0x_A6, 0x_1A, 0x_38, 0x_9C, 0x_78, 0x_24, 0x_C5, 0x_86, 0x_BC,
		0x_75, 0x_9F, 0x_D5, 0x_94, 0x_5B, 0x_22, 0x_AD, 0x_19, 0x_91, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_F8, 0x_3F, 0x_5D, 0x_22, 0x_C0, 0x_A6, 0x_9B, 0x_C9, 0x_4A, 0x_FF, 0x_9E, 0x_88, 0x_BA, 0x_4F,
		0x_DB, 0x_B6, 0x_18, 0x_4C, 0x_BB, 0x_9C, 0x_1A, 0x_F6, 0x_CC, 0x_37, 0x_38, 0x_59, 0x_31, 0x_5B, 0x_2C,
		0x_C5, 0x_57, 0x_6C, 0x_3D, 0x_24, 0x_A8, 0x_D2, 0x_19, 0x_73, 0x_D5, 0x_77, 0x_EE, 0x_D1, 0x_25, 0x_C8,
		0x_27, 0x_E8, 0x_68, 0x_78, 0x_8F, 0x_91, 0x_AD, 0x_8C, 0x_99, 0x_94, 0x_5F, 0x_A3, 0x_A2, 0x_8D, 0x_9F,
		0x_B4, 0x_BC, 0x_79, 0x_60, 0x_21, 0x_15, 0x_A5, 0x_86, 0x_51, 0x_3C, 0x_A1, 0x_36, 0x_75,
	];

	helper(S, BASE, 429);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_9_704_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_9_704_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0B,
		0x_0D, 0x_0C, 0x_20, 0x_09, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3,
		0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3,
		0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3,
		0x_D3, 0x_2A, 0x_08, 0x_26, 0x_40, 0x_A3, 0x_EF, 0x_5F, 0x_7F, 0x_03, 0x_C6, 0x_08, 0x_77, 0x_71, 0x_3C,
		0x_CC, 0x_29, 0x_11, 0x_CC, 0x_47, 0x_7F, 0x_79, 0x_44, 0x_EE, 0x_05, 0x_79, 0x_16, 0x_FE, 0x_15, 0x_A6,
		0x_11, 0x_C5, 0x_8C, 0x_26, 0x_CA, 0x_7A, 0x_DB, 0x_3D, 0x_3D, 0x_FE, 0x_62, 0x_BB, 0x_C0, 0x_62, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_2A, 0x_71, 0x_E6, 0x_84, 0x_1F, 0x_A6, 0x_6F, 0x_15, 0x_BD, 0x_8C, 0x_94, 0x_14, 0x_C1, 0x_DE,
		0x_16, 0x_EE, 0x_BC, 0x_62, 0x_13, 0x_C6, 0x_F6, 0x_3D, 0x_9F, 0x_03, 0x_5F, 0x_1C, 0x_DB, 0x_CA, 0x_66,
		0x_3C, 0x_C5, 0x_AA, 0x_2F, 0x_4E, 0x_6B, 0x_0E, 0x_87, 0x_44, 0x_FA, 0x_55, 0x_29, 0x_CC, 0x_05, 0x_3E,
		0x_A9, 0x_2C, 0x_64, 0x_4D, 0x_C0, 0x_77, 0x_A3, 0x_7E, 0x_BB, 0x_8D, 0x_7A, 0x_DC, 0x_11, 0x_7F, 0x_08,
		0x_4F, 0x_5A, 0x_E9, 0x_EF, 0x_47, 0x_51, 0x_FF, 0x_FE, 0x_26, 0x_79, 0x_D7, 0x_46, 0x_59,
	];

	helper(S, BASE, 9_704);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_71_386_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_71_386_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0D,
		0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_BC, 0x_96, 0x_C4, 0x_AF, 0x_C4, 0x_78, 0x_D2, 0x_C4,
		0x_36, 0x_FB, 0x_C4, 0x_8A, 0x_3A, 0x_C3, 0x_D2, 0x_39, 0x_36, 0x_59, 0x_92, 0x_39, 0x_D2, 0x_40, 0x_39,
		0x_15, 0x_47, 0x_DA, 0x_8E, 0x_F5, 0x_C1, 0x_EC, 0x_37, 0x_2E, 0x_15, 0x_81, 0x_3A, 0x_59, 0x_32, 0x_70,
		0x_04, 0x_12, 0x_EC, 0x_31, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_39, 0x_FB, 0x_5D, 0x_A3, 0x_75, 0x_C1, 0x_AB, 0x_C3, 0x_F5, 0x_92, 0x_A9, 0x_97, 0x_BC, 0x_36,
		0x_3E, 0x_EC, 0x_AD, 0x_3B, 0x_3F, 0x_DD, 0x_47, 0x_1D, 0x_DF, 0x_5C, 0x_73, 0x_04, 0x_56, 0x_96, 0x_CD,
		0x_59, 0x_DA, 0x_12, 0x_79, 0x_D7, 0x_1E, 0x_4A, 0x_D2, 0x_BE, 0x_32, 0x_15, 0x_50, 0x_70, 0x_4E, 0x_38,
		0x_8E, 0x_E2, 0x_A6, 0x_64, 0x_06, 0x_9D, 0x_EB, 0x_E9, 0x_D4, 0x_66, 0x_16, 0x_2E, 0x_81, 0x_8F, 0x_43,
		0x_57, 0x_0E, 0x_08, 0x_78, 0x_31, 0x_C4, 0x_07, 0x_37, 0x_40, 0x_3A, 0x_B8, 0x_8B, 0x_77,
	];

	helper(S, BASE, 71_386);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_948_865_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_948_865_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_88, 0x_88, 0x_88,
		0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88,
		0x_88, 0x_F6, 0x_19, 0x_F3, 0x_FD, 0x_A1, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_10, 0x_F6, 0x_21, 0x_F3, 0x_05, 0x_47, 0x_FF, 0x_35, 0x_3C, 0x_92, 0x_FD, 0x_1F, 0x_24, 0x_6D,
		0x_57, 0x_7B, 0x_06, 0x_56, 0x_7F, 0x_30, 0x_EA, 0x_C1, 0x_F2, 0x_36, 0x_3F, 0x_62, 0x_32, 0x_61, 0x_BD,
		0x_13, 0x_99, 0x_19, 0x_B0, 0x_D8, 0x_1B, 0x_F4, 0x_E5, 0x_E0, 0x_C0, 0x_EF, 0x_9D, 0x_AD, 0x_DF, 0x_EC,
		0x_F0, 0x_AE, 0x_4B, 0x_43, 0x_65, 0x_A3, 0x_46, 0x_68, 0x_F8, 0x_C7, 0x_84, 0x_44, 0x_C8, 0x_D5, 0x_5B,
		0x_B9, 0x_E8, 0x_8A, 0x_C6, 0x_F9, 0x_B2, 0x_C3, 0x_22, 0x_96, 0x_8C, 0x_3D, 0x_CF, 0x_E2,
	];

	helper(S, BASE, 948_865);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_6_941_650_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_6_941_650_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0A,
		0x_09, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_20,
		0x_0B, 0x_0B, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D,
		0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_91, 0x_7E, 0x_64, 0x_53, 0x_C9, 0x_35, 0x_3C, 0x_19, 0x_30, 0x_FE,
		0x_7B, 0x_69, 0x_5E, 0x_30, 0x_FE, 0x_6B, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_5D, 0x_92, 0x_C3, 0x_3D, 0x_30, 0x_3C, 0x_53, 0x_AD, 0x_DD, 0x_25, 0x_98, 0x_3B, 0x_A0, 0x_34,
		0x_E3, 0x_03, 0x_91, 0x_8D, 0x_4D, 0x_D2, 0x_5E, 0x_ED, 0x_7B, 0x_28, 0x_96, 0x_E5, 0x_BD, 0x_2F, 0x_BF,
		0x_2E, 0x_69, 0x_14, 0x_33, 0x_80, 0x_A3, 0x_EA, 0x_4A, 0x_79, 0x_74, 0x_A6, 0x_73, 0x_45, 0x_26, 0x_49,
		0x_64, 0x_BC, 0x_40, 0x_39, 0x_C1, 0x_76, 0x_6B, 0x_A8, 0x_63, 0x_7C, 0x_A4, 0x_07, 0x_8F, 0x_FE, 0x_C6,
		0x_75, 0x_7E, 0x_5F, 0x_4C, 0x_F3, 0x_D3, 0x_99, 0x_46, 0x_35, 0x_85, 0x_19, 0x_54, 0x_F1,
	];

	helper(S, BASE, 6_941_650);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_41_671_632_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_41_671_632_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_09,
		0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_B2, 0x_B2, 0x_B2,
		0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2,
		0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_F9, 0x_5A, 0x_88, 0x_65, 0x_56, 0x_1F, 0x_97,
		0x_60, 0x_AF, 0x_88, 0x_DF, 0x_E8, 0x_65, 0x_E1, 0x_E1, 0x_6D, 0x_01, 0x_45, 0x_7D, 0x_45, 0x_5D, 0x_60,
		0x_6D, 0x_DF, 0x_4F, 0x_46, 0x_97, 0x_D6, 0x_4F, 0x_21, 0x_D8, 0x_F2, 0x_B4, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_B2, 0x_F9, 0x_A2, 0x_19, 0x_C1, 0x_B4, 0x_EA, 0x_5D, 0x_88, 0x_8B, 0x_05, 0x_7D, 0x_49, 0x_D6, 0x_23,
		0x_E8, 0x_4E, 0x_E5, 0x_DF, 0x_83, 0x_56, 0x_33, 0x_94, 0x_2E, 0x_60, 0x_B3, 0x_9E, 0x_A9, 0x_6D, 0x_98,
		0x_ED, 0x_A6, 0x_A7, 0x_55, 0x_5A, 0x_50, 0x_79, 0x_AC, 0x_E2, 0x_F2, 0x_01, 0x_3C, 0x_64, 0x_1E, 0x_E1,
		0x_76, 0x_A8, 0x_D8, 0x_BE, 0x_04, 0x_78, 0x_B9, 0x_FC, 0x_D1, 0x_D9, 0x_92, 0x_46, 0x_65, 0x_21, 0x_4F,
		0x_90, 0x_44, 0x_B7, 0x_73, 0x_45, 0x_C6, 0x_97, 0x_BA, 0x_34, 0x_AF, 0x_32, 0x_C3, 0x_37,
	];

	helper(S, BASE, 41_671_632);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_984_668_031_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_984_668_031_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_D0, 0x_2F, 0x_B7, 0x_27, 0x_B7, 0x_A9, 0x_98, 0x_87, 0x_F4,
		0x_E3, 0x_26, 0x_84, 0x_F0, 0x_7A, 0x_21, 0x_7A, 0x_0F, 0x_CD, 0x_B7, 0x_13, 0x_2C, 0x_59, 0x_E8, 0x_14,
		0x_D6, 0x_8F, 0x_57, 0x_16, 0x_CB, 0x_4A, 0x_4A, 0x_CC, 0x_8B, 0x_8F, 0x_16, 0x_A1, 0x_AC, 0x_74, 0x_95,
		0x_2F, 0x_1A, 0x_59, 0x_AC, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_55, 0x_87, 0x_C1, 0x_5E, 0x_86, 0x_7F, 0x_33, 0x_3C, 0x_79, 0x_CB, 0x_7A, 0x_B7, 0x_4A, 0x_2C,
		0x_B6, 0x_99, 0x_F6, 0x_84, 0x_1A, 0x_CC, 0x_71, 0x_CD, 0x_C6, 0x_03, 0x_D3, 0x_3D, 0x_E6, 0x_27, 0x_AB,
		0x_6F, 0x_57, 0x_F4, 0x_56, 0x_D0, 0x_8B, 0x_F0, 0x_BE, 0x_73, 0x_8F, 0x_14, 0x_A2, 0x_0F, 0x_AA, 0x_29,
		0x_1D, 0x_E8, 0x_A1, 0x_E3, 0x_2F, 0x_7E, 0x_16, 0x_5A, 0x_4B, 0x_74, 0x_A4, 0x_26, 0x_7D, 0x_95, 0x_82,
		0x_2A, 0x_F8, 0x_3E, 0x_AC, 0x_59, 0x_21, 0x_98, 0x_18, 0x_13, 0x_02, 0x_E5, 0x_89, 0x_D6,
	];

	helper(S, BASE, 984_668_031);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_3_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_3_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0D,
		0x_20, 0x_0D, 0x_D2, 0x_16, 0x_DF, 0x_90, 0x_73, 0x_35, 0x_ED, 0x_FB, 0x_6E, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_23, 0x_61, 0x_16, 0x_4C, 0x_98, 0x_6C, 0x_6B, 0x_91, 0x_5A, 0x_C8, 0x_48, 0x_EE, 0x_76, 0x_4F,
		0x_6E, 0x_C1, 0x_AC, 0x_73, 0x_A9, 0x_06, 0x_F9, 0x_17, 0x_83, 0x_93, 0x_E6, 0x_F3, 0x_E1, 0x_2E, 0x_6D,
		0x_FE, 0x_75, 0x_56, 0x_95, 0x_77, 0x_63, 0x_18, 0x_69, 0x_28, 0x_C4, 0x_05, 0x_7B, 0x_EA, 0x_D9, 0x_AB,
		0x_A4, 0x_8D, 0x_FB, 0x_32, 0x_8E, 0x_AE, 0x_DA, 0x_62, 0x_15, 0x_65, 0x_92, 0x_97, 0x_52, 0x_01, 0x_6F,
		0x_5F, 0x_4B, 0x_D5, 0x_3C, 0x_35, 0x_94, 0x_A7, 0x_F4, 0x_DD, 0x_60, 0x_72, 0x_90, 0x_CE, 0x_47, 0x_27,
		0x_66, 0x_C6, 0x_49, 0x_D7, 0x_34, 0x_8B, 0x_1E, 0x_A2, 0x_ED, 0x_CD, 0x_3F, 0x_10, 0x_A1, 0x_B1, 0x_02,
		0x_F0, 0x_BC, 0x_44, 0x_C0, 0x_A5, 0x_E2, 0x_51, 0x_C9, 0x_26, 0x_8A, 0x_C7, 0x_45, 0x_4D, 0x_EB, 0x_40,
		0x_A3, 0x_5E, 0x_1B, 0x_30, 0x_5D, 0x_2C, 0x_E5, 0x_14,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_19_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_19_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E,
		0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_48, 0x_AE, 0x_92, 0x_3A,
		0x_D6, 0x_77, 0x_13, 0x_2C, 0x_77, 0x_45, 0x_96, 0x_E4, 0x_23, 0x_7C, 0x_D5, 0x_93, 0x_7C, 0x_8E, 0x_FA,
		0x_AF, 0x_B7, 0x_D0, 0x_7B, 0x_99, 0x_90, 0x_D1, 0x_8E, 0x_60, 0x_D0, 0x_71, 0x_2E, 0x_55, 0x_A2, 0x_F8,
		0x_A8, 0x_59, 0x_53, 0x_69, 0x_01, 0x_BE, 0x_E9, 0x_70, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_BE, 0x_63, 0x_D9, 0x_D2, 0x_E7, 0x_CB, 0x_35, 0x_14, 0x_7C, 0x_34, 0x_53, 0x_8D, 0x_C8, 0x_64,
		0x_75, 0x_FA, 0x_50, 0x_4D, 0x_48, 0x_6F, 0x_DE, 0x_1D, 0x_B9, 0x_24, 0x_60, 0x_BF, 0x_6B, 0x_31, 0x_13,
		0x_D1, 0x_2C, 0x_8A, 0x_83, 0x_59, 0x_F0, 0x_F9, 0x_A8, 0x_54, 0x_A2, 0x_01, 0x_99, 0x_BD, 0x_C6, 0x_B6,
		0x_4C, 0x_A4, 0x_3E, 0x_80, 0x_F8, 0x_84, 0x_2E, 0x_06, 0x_1A, 0x_BB, 0x_23, 0x_71, 0x_6E, 0x_F1, 0x_E9,
		0x_7F, 0x_92, 0x_A5, 0x_1B, 0x_DD, 0x_FB, 0x_55, 0x_E4, 0x_73, 0x_AA, 0x_1E, 0x_4F, 0x_96, 0x_D6, 0x_9C,
		0x_D4, 0x_97, 0x_F2, 0x_EE, 0x_7B, 0x_5B, 0x_D5, 0x_04, 0x_E1, 0x_90, 0x_89, 0x_57, 0x_61, 0x_19, 0x_32,
		0x_10, 0x_69, 0x_B7, 0x_17, 0x_12, 0x_11, 0x_8E, 0x_93, 0x_E3, 0x_A3, 0x_D0, 0x_45, 0x_5C, 0x_2A, 0x_3A,
		0x_33, 0x_77, 0x_72, 0x_70, 0x_C2, 0x_95, 0x_AF, 0x_7D,
	];

	helper(S, BASE, 19);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_336_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_336_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0A,
		0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0D,
		0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51,
		0x_51, 0x_51, 0x_51, 0x_10, 0x_AB, 0x_B2, 0x_D6, 0x_3E, 0x_84, 0x_13, 0x_74, 0x_90, 0x_F7, 0x_43, 0x_2C,
		0x_74, 0x_6F, 0x_AB, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_82, 0x_10, 0x_AD, 0x_62, 0x_57, 0x_30, 0x_28, 0x_BD, 0x_91, 0x_7F, 0x_50, 0x_04, 0x_19, 0x_73,
		0x_93, 0x_56, 0x_E0, 0x_75, 0x_F5, 0x_7D, 0x_DC, 0x_18, 0x_7A, 0x_85, 0x_31, 0x_2C, 0x_7E, 0x_FB, 0x_D2,
		0x_3E, 0x_12, 0x_81, 0x_FC, 0x_F7, 0x_D9, 0x_36, 0x_1C, 0x_CE, 0x_23, 0x_5A, 0x_60, 0x_8D, 0x_84, 0x_52,
		0x_D6, 0x_15, 0x_34, 0x_4E, 0x_A3, 0x_47, 0x_54, 0x_6E, 0x_01, 0x_07, 0x_76, 0x_EE, 0x_65, 0x_4A, 0x_98,
		0x_5E, 0x_8C, 0x_AA, 0x_4D, 0x_83, 0x_1F, 0x_06, 0x_74, 0x_5D, 0x_F9, 0x_9A, 0x_EC, 0x_BA, 0x_FE, 0x_43,
		0x_DD, 0x_A1, 0x_3A, 0x_71, 0x_8B, 0x_21, 0x_16, 0x_AE, 0x_D4, 0x_EA, 0x_F3, 0x_EB, 0x_6C, 0x_E5, 0x_77,
		0x_02, 0x_DB, 0x_CA, 0x_F0, 0x_90, 0x_BC, 0x_61, 0x_2E, 0x_DE, 0x_5F, 0x_BF, 0x_E4, 0x_A8, 0x_C2, 0x_13,
		0x_E6, 0x_6F, 0x_FF, 0x_53, 0x_BE, 0x_AB, 0x_B5, 0x_67,
	];

	helper(S, BASE, 336);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_5_853_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_5_853_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_20,
		0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0C,
		0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_40, 0x_A0, 0x_5B, 0x_BB, 0x_16, 0x_13,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_05, 0x_F0, 0x_77, 0x_C9, 0x_80, 0x_82, 0x_ED, 0x_DF, 0x_4E, 0x_D7, 0x_38, 0x_91, 0x_47, 0x_7A,
		0x_AA, 0x_CC, 0x_10, 0x_8D, 0x_5A, 0x_04, 0x_C7, 0x_71, 0x_13, 0x_60, 0x_46, 0x_C1, 0x_93, 0x_81, 0x_A8,
		0x_5C, 0x_37, 0x_F3, 0x_8C, 0x_F8, 0x_32, 0x_21, 0x_83, 0x_88, 0x_85, 0x_EC, 0x_4B, 0x_D9, 0x_9E, 0x_C2,
		0x_8A, 0x_58, 0x_FB, 0x_A6, 0x_B6, 0x_0E, 0x_40, 0x_A4, 0x_A5, 0x_E5, 0x_1F, 0x_43, 0x_EA, 0x_3D, 0x_2A,
		0x_D6, 0x_C6, 0x_4F, 0x_FD, 0x_FE, 0x_3F, 0x_D0, 0x_8E, 0x_11, 0x_4A, 0x_96, 0x_AD, 0x_7D, 0x_84, 0x_DB,
		0x_3A, 0x_17, 0x_D3, 0x_E2, 0x_12, 0x_78, 0x_4C, 0x_6B, 0x_3C, 0x_62, 0x_16, 0x_BB, 0x_01, 0x_08, 0x_27,
		0x_A0, 0x_CB, 0x_1E, 0x_E9, 0x_BA, 0x_94, 0x_5F, 0x_F2, 0x_3B, 0x_56, 0x_22, 0x_AE, 0x_61, 0x_AC, 0x_55,
		0x_C3, 0x_C5, 0x_50, 0x_DA, 0x_E0, 0x_B3, 0x_F5, 0x_24,
	];

	helper(S, BASE, 5_853);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_88_449_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_88_449_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_A1, 0x_BD, 0x_35, 0x_6B, 0x_FD, 0x_B9,
		0x_72, 0x_B6, 0x_DB, 0x_BA, 0x_61, 0x_8D, 0x_B0, 0x_96, 0x_86, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_FD, 0x_02, 0x_E0, 0x_54, 0x_BA, 0x_A1, 0x_A7, 0x_D1, 0x_4F, 0x_50, 0x_84, 0x_8F, 0x_CA, 0x_FF,
		0x_15, 0x_5E, 0x_CD, 0x_8E, 0x_D2, 0x_D6, 0x_34, 0x_6E, 0x_1E, 0x_48, 0x_D5, 0x_7D, 0x_E4, 0x_72, 0x_F6,
		0x_57, 0x_27, 0x_59, 0x_5F, 0x_97, 0x_96, 0x_D0, 0x_B0, 0x_65, 0x_49, 0x_8C, 0x_03, 0x_17, 0x_A0, 0x_C3,
		0x_B2, 0x_CB, 0x_53, 0x_A8, 0x_B9, 0x_79, 0x_E6, 0x_25, 0x_87, 0x_CF, 0x_4C, 0x_74, 0x_58, 0x_33, 0x_5D,
		0x_68, 0x_3A, 0x_07, 0x_D9, 0x_B6, 0x_F3, 0x_73, 0x_86, 0x_B8, 0x_39, 0x_47, 0x_10, 0x_31, 0x_92, 0x_9D,
		0x_1F, 0x_3C, 0x_C1, 0x_2A, 0x_3B, 0x_F0, 0x_FA, 0x_26, 0x_35, 0x_AF, 0x_18, 0x_B5, 0x_11, 0x_32, 0x_76,
		0x_61, 0x_BB, 0x_BC, 0x_E2, 0x_CE, 0x_01, 0x_E7, 0x_14, 0x_F8, 0x_2C, 0x_36, 0x_B1, 0x_FB, 0x_2E, 0x_BD,
		0x_C2, 0x_E1, 0x_DB, 0x_0E, 0x_7C, 0x_22, 0x_8D, 0x_80,
	];

	helper(S, BASE, 88_449);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_607_055_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_607_055_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_20,
		0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_20,
		0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_D7, 0x_84, 0x_BD, 0x_DB, 0x_03, 0x_CA, 0x_31,
		0x_BB, 0x_44, 0x_EA, 0x_6E, 0x_82, 0x_CD, 0x_73, 0x_0F, 0x_C7, 0x_31, 0x_D4, 0x_CE, 0x_44, 0x_EE, 0x_67,
		0x_9C, 0x_EA, 0x_71, 0x_65, 0x_F9, 0x_8E, 0x_17, 0x_CC, 0x_31, 0x_7B, 0x_6A, 0x_7A, 0x_C7, 0x_71, 0x_F9,
		0x_25,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_36, 0x_B3, 0x_E5, 0x_62, 0x_C2, 0x_15, 0x_EA, 0x_81, 0x_3E, 0x_74, 0x_9D, 0x_54, 0x_B4, 0x_99,
		0x_CD, 0x_4C, 0x_90, 0x_BC, 0x_BD, 0x_0F, 0x_59, 0x_6A, 0x_48, 0x_9C, 0x_E4, 0x_A0, 0x_03, 0x_FE, 0x_F1,
		0x_73, 0x_1B, 0x_8B, 0x_EB, 0x_FF, 0x_66, 0x_7B, 0x_70, 0x_06, 0x_44, 0x_65, 0x_5E, 0x_C9, 0x_D4, 0x_AE,
		0x_BE, 0x_F5, 0x_D7, 0x_B7, 0x_F4, 0x_E3, 0x_21, 0x_4E, 0x_9F, 0x_AD, 0x_D2, 0x_F8, 0x_E0, 0x_4A, 0x_7C,
		0x_CC, 0x_84, 0x_24, 0x_13, 0x_18, 0x_5C, 0x_23, 0x_7A, 0x_7E, 0x_1F, 0x_E2, 0x_8E, 0x_CB, 0x_97, 0x_C0,
		0x_30, 0x_C6, 0x_82, 0x_67, 0x_5A, 0x_C7, 0x_D0, 0x_5B, 0x_CA, 0x_31, 0x_64, 0x_C8, 0x_AB, 0x_F0, 0x_BB,
		0x_68, 0x_CE, 0x_6E, 0x_A6, 0x_26, 0x_B5, 0x_EE, 0x_88, 0x_25, 0x_17, 0x_EF, 0x_2C, 0x_D3, 0x_0E, 0x_12,
		0x_AF, 0x_C3, 0x_93, 0x_E1, 0x_F9, 0x_F6, 0x_94, 0x_71,
	];

	helper(S, BASE, 607_055);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_6_056_921_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_6_056_921_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A,
		0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_A0, 0x_99, 0x_B6, 0x_B1, 0x_C8, 0x_69, 0x_5D, 0x_87,
		0x_C4, 0x_7D, 0x_DA, 0x_81, 0x_B5, 0x_89, 0x_B5, 0x_F6, 0x_B2, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_45, 0x_62, 0x_89, 0x_A0, 0x_1A, 0x_53, 0x_5C, 0x_B1, 0x_2E, 0x_C6, 0x_D3, 0x_37, 0x_8B, 0x_E6,
		0x_EC, 0x_2A, 0x_83, 0x_48, 0x_C0, 0x_69, 0x_3E, 0x_99, 0x_7D, 0x_D4, 0x_64, 0x_57, 0x_71, 0x_58, 0x_6B,
		0x_BA, 0x_DE, 0x_61, 0x_AB, 0x_43, 0x_78, 0x_F9, 0x_54, 0x_31, 0x_B6, 0x_26, 0x_FB, 0x_9E, 0x_19, 0x_F7,
		0x_B2, 0x_AE, 0x_07, 0x_1E, 0x_E3, 0x_E1, 0x_BF, 0x_75, 0x_15, 0x_8F, 0x_3F, 0x_08, 0x_5F, 0x_46, 0x_B5,
		0x_03, 0x_44, 0x_59, 0x_93, 0x_C4, 0x_21, 0x_14, 0x_8D, 0x_D8, 0x_AA, 0x_D0, 0x_DA, 0x_E0, 0x_68, 0x_A4,
		0x_01, 0x_D7, 0x_90, 0x_B4, 0x_81, 0x_34, 0x_24, 0x_22, 0x_A8, 0x_0F, 0x_CA, 0x_72, 0x_BE, 0x_F8, 0x_C7,
		0x_30, 0x_C5, 0x_B7, 0x_7E, 0x_9C, 0x_1F, 0x_88, 0x_79, 0x_38, 0x_4D, 0x_5B, 0x_4A, 0x_29, 0x_F6, 0x_B3,
		0x_2F, 0x_66, 0x_3A, 0x_87, 0x_EE, 0x_95, 0x_5D, 0x_DF,
	];

	helper(S, BASE, 6_056_921);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_34_414_767_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_34_414_767_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0B,
		0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_6E, 0x_7D, 0x_B7, 0x_FA, 0x_D9, 0x_06, 0x_DD, 0x_47, 0x_9D, 0x_B8, 0x_FB, 0x_F0,
		0x_9D, 0x_93, 0x_5D, 0x_DD, 0x_D2, 0x_82, 0x_4C, 0x_B6, 0x_C4, 0x_94,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_8F, 0x_A9, 0x_15, 0x_0E, 0x_2F, 0x_61, 0x_CB, 0x_4B, 0x_4D, 0x_4C, 0x_0F, 0x_DD, 0x_36, 0x_46,
		0x_8A, 0x_29, 0x_FE, 0x_77, 0x_47, 0x_B7, 0x_7A, 0x_30, 0x_6E, 0x_68, 0x_66, 0x_E4, 0x_5E, 0x_EF, 0x_84,
		0x_2E, 0x_F3, 0x_34, 0x_D8, 0x_3B, 0x_B9, 0x_F5, 0x_33, 0x_83, 0x_E3, 0x_FC, 0x_37, 0x_87, 0x_A8, 0x_78,
		0x_58, 0x_08, 0x_AB, 0x_D1, 0x_C4, 0x_DE, 0x_E7, 0x_FA, 0x_9C, 0x_F4, 0x_94, 0x_18, 0x_54, 0x_9D, 0x_CF,
		0x_F7, 0x_6A, 0x_27, 0x_63, 0x_82, 0x_10, 0x_FB, 0x_38, 0x_DF, 0x_99, 0x_52, 0x_CA, 0x_C1, 0x_26, 0x_9E,
		0x_71, 0x_6C, 0x_07, 0x_06, 0x_62, 0x_85, 0x_DA, 0x_03, 0x_CE, 0x_CD, 0x_C0, 0x_81, 0x_F0, 0x_B8, 0x_5D,
		0x_B6, 0x_C9, 0x_1B, 0x_53, 0x_A5, 0x_41, 0x_7D, 0x_24, 0x_B3, 0x_D2, 0x_AD, 0x_31, 0x_25, 0x_6F, 0x_65,
		0x_93, 0x_28, 0x_02, 0x_8B, 0x_97, 0x_44, 0x_AC, 0x_35,
	];

	helper(S, BASE, 34_414_767);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_370_950_493_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_370_950_493_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0D,
		0x_0C, 0x_0D, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E,
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E,
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_C7, 0x_EE, 0x_7B, 0x_18, 0x_F2, 0x_75, 0x_23, 0x_9F, 0x_A4, 0x_01, 0x_53,
		0x_D0,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_E0, 0x_C7, 0x_5A, 0x_D8, 0x_F8, 0x_2C, 0x_38, 0x_6E, 0x_7B, 0x_49, 0x_C9, 0x_C3, 0x_6B, 0x_6A,
		0x_A4, 0x_B4, 0x_08, 0x_F9, 0x_B8, 0x_27, 0x_FB, 0x_E6, 0x_8E, 0x_91, 0x_4D, 0x_F0, 0x_83, 0x_6C, 0x_3F,
		0x_31, 0x_EE, 0x_07, 0x_11, 0x_6F, 0x_9F, 0x_53, 0x_8D, 0x_65, 0x_CF, 0x_26, 0x_AC, 0x_7F, 0x_BF, 0x_3B,
		0x_16, 0x_0F, 0x_FD, 0x_C5, 0x_3D, 0x_A6, 0x_45, 0x_AE, 0x_2A, 0x_33, 0x_A3, 0x_81, 0x_51, 0x_9E, 0x_66,
		0x_CB, 0x_70, 0x_35, 0x_59, 0x_78, 0x_8F, 0x_60, 0x_99, 0x_B1, 0x_1F, 0x_E7, 0x_90, 0x_23, 0x_71, 0x_95,
		0x_3C, 0x_C6, 0x_FC, 0x_22, 0x_64, 0x_73, 0x_E5, 0x_F2, 0x_F7, 0x_E8, 0x_10, 0x_47, 0x_5E, 0x_01, 0x_05,
		0x_80, 0x_D0, 0x_D4, 0x_F3, 0x_D7, 0x_37, 0x_84, 0x_18, 0x_B0, 0x_8C, 0x_5D, 0x_DF, 0x_FA, 0x_9C, 0x_03,
		0x_EC, 0x_1A, 0x_FF, 0x_C2, 0x_F1, 0x_4C, 0x_5B, 0x_04,
	];

	helper(S, BASE, 370_950_493);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_8_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_8_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0B,
		0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0B,
		0x_20, 0x_0A, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_9A, 0x_5C,
		0x_6E, 0x_7A, 0x_31, 0x_50, 0x_E9, 0x_19, 0x_6E, 0x_AC, 0x_59, 0x_7A, 0x_5F, 0x_90, 0x_B3, 0x_89, 0x_9B,
		0x_B4, 0x_91, 0x_36, 0x_59, 0x_4C, 0x_82, 0x_AC, 0x_BB, 0x_B1, 0x_E1, 0x_CE, 0x_74, 0x_DF, 0x_D4, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_C6, 0x_3F, 0x_3C, 0x_3A, 0x_71, 0x_D8, 0x_6A, 0x_0F, 0x_9A, 0x_15, 0x_68, 0x_E3, 0x_04, 0x_26, 0x_65,
		0x_3E, 0x_67, 0x_A9, 0x_CE, 0x_64, 0x_70, 0x_75, 0x_88, 0x_60, 0x_10, 0x_50, 0x_AE, 0x_87, 0x_19, 0x_B5,
		0x_06, 0x_C3, 0x_F0, 0x_41, 0x_03, 0x_BA, 0x_AB, 0x_F1, 0x_C2, 0x_22, 0x_EE, 0x_D4, 0x_80, 0x_66, 0x_13,
		0x_30, 0x_9C, 0x_4C, 0x_2F, 0x_55, 0x_17, 0x_8D, 0x_7D, 0x_92, 0x_81, 0x_1A, 0x_45, 0x_B8, 0x_93, 0x_86,
		0x_A3, 0x_E6, 0x_7C, 0x_44, 0x_8F, 0x_7E, 0x_3D, 0x_53, 0x_FE, 0x_74, 0x_DF, 0x_4E, 0x_F9, 0x_2C, 0x_1B,
		0x_5D, 0x_DD, 0x_B1, 0x_9B, 0x_FD, 0x_25, 0x_BD, 0x_23, 0x_D1, 0x_FC, 0x_78, 0x_F5, 0x_62, 0x_33, 0x_1E,
		0x_1D, 0x_96, 0x_E0, 0x_14, 0x_E8, 0x_90, 0x_5F, 0x_59, 0x_83, 0x_BC, 0x_6F, 0x_82, 0x_8E, 0x_DA, 0x_6C,
		0x_D3, 0x_42, 0x_91, 0x_DE, 0x_AF, 0x_6B, 0x_29, 0x_8C, 0x_3B, 0x_BB, 0x_46, 0x_02, 0x_AC, 0x_E2, 0x_34,
		0x_31, 0x_E5, 0x_77, 0x_56, 0x_E9, 0x_7F, 0x_69, 0x_12, 0x_F2, 0x_CF, 0x_84, 0x_AA, 0x_F7, 0x_4F, 0x_43,
		0x_0E, 0x_B7, 0x_2E, 0x_27, 0x_8B, 0x_A1, 0x_B3, 0x_4B, 0x_21, 0x_95, 0x_35, 0x_AD, 0x_BF, 0x_49, 0x_B0,
		0x_6E, 0x_C1, 0x_63, 0x_FB, 0x_A0, 0x_4D, 0x_8A, 0x_BE, 0x_9E, 0x_C0, 0x_E7, 0x_F8, 0x_08, 0x_C7, 0x_48,
		0x_47, 0x_98, 0x_5A, 0x_D5, 0x_7A, 0x_E1, 0x_A5, 0x_94, 0x_89, 0x_73, 0x_B4, 0x_DB, 0x_9F, 0x_18, 0x_07,
		0x_EB, 0x_4A, 0x_28, 0x_24, 0x_ED, 0x_C4, 0x_32, 0x_05, 0x_C8, 0x_36, 0x_7B, 0x_B2, 0x_54,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_33_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_33_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0A,
		0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_20,
		0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_1D,
		0x_2B, 0x_70, 0x_37, 0x_30, 0x_DC, 0x_85, 0x_92, 0x_51, 0x_30, 0x_B1, 0x_DD, 0x_30, 0x_5A, 0x_85, 0x_BF,
		0x_B3, 0x_F7, 0x_A4, 0x_60, 0x_86, 0x_B8, 0x_C7, 0x_FC, 0x_B1, 0x_74, 0x_24, 0x_59, 0x_1C, 0x_6D, 0x_17,
		0x_2A, 0x_2E, 0x_10, 0x_D1, 0x_A5, 0x_71, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_23, 0x_B5, 0x_EA, 0x_5C, 0x_FC, 0x_E6, 0x_7A, 0x_DC, 0x_8F, 0x_BA, 0x_F7, 0x_C2, 0x_25, 0x_67,
		0x_AB, 0x_4D, 0x_DE, 0x_D0, 0x_A8, 0x_C6, 0x_96, 0x_E5, 0x_FB, 0x_E8, 0x_47, 0x_DF, 0x_0F, 0x_9C, 0x_9F,
		0x_57, 0x_59, 0x_D8, 0x_1D, 0x_D7, 0x_A4, 0x_7C, 0x_97, 0x_26, 0x_85, 0x_94, 0x_AE, 0x_CA, 0x_88, 0x_24,
		0x_8D, 0x_33, 0x_61, 0x_6C, 0x_4B, 0x_FA, 0x_C7, 0x_66, 0x_49, 0x_31, 0x_F9, 0x_79, 0x_C4, 0x_17, 0x_3D,
		0x_46, 0x_B4, 0x_3B, 0x_86, 0x_F0, 0x_B8, 0x_80, 0x_38, 0x_1E, 0x_AC, 0x_22, 0x_D4, 0x_2A, 0x_98, 0x_F5,
		0x_72, 0x_D6, 0x_6F, 0x_77, 0x_7F, 0x_9E, 0x_81, 0x_BE, 0x_82, 0x_B2, 0x_68, 0x_32, 0x_6E, 0x_83, 0x_54,
		0x_6B, 0x_5D, 0x_28, 0x_C3, 0x_E1, 0x_92, 0x_34, 0x_BF, 0x_E7, 0x_12, 0x_DA, 0x_E0, 0x_DD, 0x_74, 0x_F2,
		0x_1F, 0x_73, 0x_37, 0x_B7, 0x_2E, 0x_39, 0x_52, 0x_B6, 0x_CD, 0x_4E, 0x_04, 0x_30, 0x_E9, 0x_36, 0x_3E,
		0x_FD, 0x_A9, 0x_18, 0x_76, 0x_8C, 0x_35, 0x_95, 0x_D5, 0x_B3, 0x_71, 0x_AF, 0x_02, 0x_8B, 0x_E3, 0x_9B,
		0x_5A, 0x_51, 0x_6D, 0x_F6, 0x_78, 0x_07, 0x_FF, 0x_EB, 0x_06, 0x_13, 0x_7B, 0x_8E, 0x_15, 0x_29, 0x_7D,
		0x_08, 0x_55, 0x_11, 0x_D1, 0x_4A, 0x_10, 0x_B1, 0x_B0, 0x_03, 0x_93, 0x_CC, 0x_B9, 0x_8A, 0x_A2, 0x_2C,
		0x_D9, 0x_BD, 0x_75, 0x_48, 0x_1C, 0x_60, 0x_87, 0x_A5, 0x_BC, 0x_43, 0x_53, 0x_7E, 0x_21, 0x_45, 0x_ED,
		0x_44, 0x_05, 0x_FE, 0x_99, 0x_C9, 0x_70, 0x_90, 0x_56, 0x_F3, 0x_EE, 0x_CB, 0x_BB, 0x_91,
	];

	helper(S, BASE, 33);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_753_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_753_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0D,
		0x_0C, 0x_09, 0x_09, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_3B, 0x_A2, 0x_D2, 0x_A8, 0x_31, 0x_3C, 0x_58, 0x_9A, 0x_83, 0x_DA, 0x_B6, 0x_97,
		0x_48, 0x_8F, 0x_45, 0x_01, 0x_30, 0x_7A, 0x_4A, 0x_B0, 0x_71, 0x_3F, 0x_4D, 0x_9A, 0x_6D, 0x_45, 0x_CC,
		0x_78, 0x_A6, 0x_84, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_E7, 0x_FC, 0x_3B, 0x_2C, 0x_15, 0x_F8, 0x_1A, 0x_DF, 0x_60, 0x_7A, 0x_95, 0x_DE, 0x_D7, 0x_04,
		0x_EE, 0x_23, 0x_AD, 0x_14, 0x_96, 0x_41, 0x_6A, 0x_BF, 0x_58, 0x_9A, 0x_98, 0x_5D, 0x_9C, 0x_8D, 0x_8B,
		0x_C0, 0x_75, 0x_3D, 0x_66, 0x_3C, 0x_97, 0x_85, 0x_9B, 0x_D8, 0x_EA, 0x_52, 0x_BD, 0x_EB, 0x_C5, 0x_EC,
		0x_48, 0x_B0, 0x_59, 0x_10, 0x_DC, 0x_CC, 0x_D5, 0x_F3, 0x_7D, 0x_72, 0x_5C, 0x_CA, 0x_C2, 0x_02, 0x_C1,
		0x_2A, 0x_8F, 0x_24, 0x_E5, 0x_4E, 0x_16, 0x_42, 0x_6F, 0x_17, 0x_30, 0x_90, 0x_31, 0x_73, 0x_57, 0x_A9,
		0x_B2, 0x_BE, 0x_78, 0x_77, 0x_6E, 0x_67, 0x_70, 0x_FF, 0x_EF, 0x_A3, 0x_71, 0x_E0, 0x_51, 0x_7E, 0x_C7,
		0x_F2, 0x_84, 0x_56, 0x_E4, 0x_63, 0x_18, 0x_1F, 0x_D1, 0x_82, 0x_94, 0x_F7, 0x_43, 0x_4D, 0x_1C, 0x_83,
		0x_A1, 0x_FD, 0x_C6, 0x_53, 0x_0E, 0x_40, 0x_6D, 0x_86, 0x_E2, 0x_2E, 0x_8A, 0x_A7, 0x_1B, 0x_F9, 0x_CF,
		0x_27, 0x_13, 0x_05, 0x_C3, 0x_4A, 0x_34, 0x_C8, 0x_B3, 0x_36, 0x_FE, 0x_7B, 0x_E6, 0x_37, 0x_9F, 0x_FB,
		0x_91, 0x_8C, 0x_AB, 0x_6C, 0x_D3, 0x_19, 0x_4F, 0x_7C, 0x_89, 0x_BA, 0x_A8, 0x_07, 0x_47, 0x_06, 0x_55,
		0x_E3, 0x_DD, 0x_26, 0x_A4, 0x_29, 0x_92, 0x_5F, 0x_28, 0x_3F, 0x_21, 0x_B9, 0x_4B, 0x_A6, 0x_B5, 0x_BB,
		0x_B6, 0x_CB, 0x_A0, 0x_CE, 0x_6B, 0x_AC, 0x_AF, 0x_F5, 0x_ED, 0x_A2, 0x_38, 0x_D0, 0x_DA, 0x_80, 0x_9E,
		0x_54, 0x_76, 0x_01, 0x_08, 0x_61, 0x_F1, 0x_69, 0x_45, 0x_74, 0x_88, 0x_32, 0x_79, 0x_8E,
	];

	helper(S, BASE, 753);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_3_786_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_3_786_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_20,
		0x_09, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0B,
		0x_0B, 0x_0A, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92,
		0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_C4,
		0x_55, 0x_DF, 0x_A7, 0x_49, 0x_EF, 0x_D2, 0x_6F, 0x_B4, 0x_54, 0x_A4, 0x_9F, 0x_89, 0x_7B, 0x_35, 0x_3B,
		0x_64, 0x_18, 0x_FE, 0x_A2, 0x_30, 0x_BE, 0x_12, 0x_14, 0x_69, 0x_D0, 0x_6B, 0x_D0, 0x_52, 0x_EE, 0x_C2,
		0x_46, 0x_C3, 0x_76, 0x_D5, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_C9, 0x_E1, 0x_C5, 0x_3B, 0x_FC, 0x_13, 0x_1A, 0x_8F, 0x_29, 0x_64, 0x_87, 0x_B6, 0x_39, 0x_D1,
		0x_E4, 0x_F5, 0x_ED, 0x_6B, 0x_C4, 0x_D0, 0x_7B, 0x_50, 0x_5B, 0x_8A, 0x_D9, 0x_45, 0x_10, 0x_AD, 0x_8B,
		0x_CD, 0x_0F, 0x_12, 0x_42, 0x_35, 0x_65, 0x_15, 0x_E6, 0x_80, 0x_5E, 0x_9B, 0x_9C, 0x_D5, 0x_F6, 0x_CF,
		0x_7A, 0x_A7, 0x_46, 0x_30, 0x_3D, 0x_08, 0x_EB, 0x_5A, 0x_F0, 0x_69, 0x_4A, 0x_E2, 0x_11, 0x_2C, 0x_0E,
		0x_C6, 0x_1F, 0x_6C, 0x_A6, 0x_51, 0x_6F, 0x_1E, 0x_31, 0x_E9, 0x_B9, 0x_24, 0x_DE, 0x_43, 0x_4F, 0x_3F,
		0x_37, 0x_97, 0x_4B, 0x_93, 0x_85, 0x_98, 0x_16, 0x_06, 0x_C2, 0x_78, 0x_B3, 0x_FE, 0x_CE, 0x_19, 0x_95,
		0x_C3, 0x_14, 0x_8C, 0x_D6, 0x_D8, 0x_BB, 0x_82, 0x_EA, 0x_E0, 0x_38, 0x_75, 0x_A1, 0x_A4, 0x_28, 0x_6A,
		0x_BF, 0x_7F, 0x_17, 0x_6D, 0x_A0, 0x_DA, 0x_BC, 0x_8D, 0x_44, 0x_D7, 0x_26, 0x_3A, 0x_33, 0x_9F, 0x_55,
		0x_DB, 0x_89, 0x_EF, 0x_AC, 0x_03, 0x_B0, 0x_90, 0x_79, 0x_AE, 0x_58, 0x_22, 0x_27, 0x_4D, 0x_4C, 0x_5F,
		0x_AF, 0x_F2, 0x_32, 0x_B8, 0x_1C, 0x_EC, 0x_21, 0x_84, 0x_01, 0x_4E, 0x_FB, 0x_9E, 0x_C7, 0x_FF, 0x_A3,
		0x_7D, 0x_E8, 0x_77, 0x_FA, 0x_59, 0x_2A, 0x_F1, 0x_C1, 0x_60, 0x_61, 0x_CB, 0x_47, 0x_48, 0x_BE, 0x_41,
		0x_18, 0x_96, 0x_94, 0x_B4, 0x_A8, 0x_6E, 0x_7C, 0x_63, 0x_A2, 0x_68, 0x_DD, 0x_FD, 0x_57, 0x_BA, 0x_25,
		0x_1B, 0x_B2, 0x_52, 0x_54, 0x_3E, 0x_BD, 0x_EE, 0x_D2, 0x_04, 0x_40, 0x_76, 0x_49, 0x_F9,
	];

	helper(S, BASE, 3_786);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_72_839_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_72_839_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0D,
		0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_3B, 0x_90, 0x_94, 0x_A4, 0x_B7, 0x_93, 0x_02,
		0x_8E, 0x_AB, 0x_D9, 0x_DA, 0x_7C, 0x_8E, 0x_E9, 0x_3D, 0x_32, 0x_2F, 0x_55, 0x_C4, 0x_B0, 0x_A3, 0x_46,
		0x_91, 0x_E2, 0x_36, 0x_14, 0x_8E, 0x_BC, 0x_11, 0x_9B, 0x_75, 0x_FD, 0x_D3, 0x_2F, 0x_A0, 0x_B2, 0x_47,
		0x_F1, 0x_88, 0x_B9, 0x_A7, 0x_61, 0x_5E, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_3B, 0x_48, 0x_98, 0x_24, 0x_89, 0x_BF, 0x_50, 0x_F3, 0x_81, 0x_CD, 0x_AE, 0x_80, 0x_97, 0x_B9,
		0x_62, 0x_7D, 0x_02, 0x_A7, 0x_9A, 0x_92, 0x_2A, 0x_9D, 0x_E7, 0x_E1, 0x_E6, 0x_BA, 0x_B0, 0x_DB, 0x_17,
		0x_70, 0x_FA, 0x_9B, 0x_71, 0x_87, 0x_16, 0x_F0, 0x_65, 0x_A9, 0x_74, 0x_EE, 0x_69, 0x_E3, 0x_07, 0x_F9,
		0x_72, 0x_8B, 0x_A8, 0x_31, 0x_C3, 0x_12, 0x_D9, 0x_58, 0x_1D, 0x_7E, 0x_91, 0x_99, 0x_78, 0x_43, 0x_3D,
		0x_FD, 0x_93, 0x_8A, 0x_B7, 0x_ED, 0x_32, 0x_46, 0x_CC, 0x_52, 0x_5A, 0x_7A, 0x_A2, 0x_68, 0x_DF, 0x_7F,
		0x_47, 0x_7B, 0x_86, 0x_94, 0x_E4, 0x_03, 0x_D4, 0x_D7, 0x_3C, 0x_6C, 0x_CB, 0x_83, 0x_F5, 0x_4B, 0x_F1,
		0x_1A, 0x_49, 0x_53, 0x_33, 0x_27, 0x_B1, 0x_5F, 0x_59, 0x_DC, 0x_A3, 0x_35, 0x_30, 0x_D3, 0x_21, 0x_1B,
		0x_28, 0x_22, 0x_04, 0x_36, 0x_64, 0x_D8, 0x_0E, 0x_A1, 0x_75, 0x_AA, 0x_B2, 0x_D1, 0x_1C, 0x_5E, 0x_77,
		0x_E9, 0x_8E, 0x_E5, 0x_34, 0x_14, 0x_19, 0x_9C, 0x_8C, 0x_5D, 0x_4F, 0x_4A, 0x_88, 0x_D2, 0x_9F, 0x_B3,
		0x_F6, 0x_6A, 0x_2F, 0x_57, 0x_A0, 0x_DD, 0x_40, 0x_95, 0x_AD, 0x_CA, 0x_FF, 0x_D5, 0x_EA, 0x_FE, 0x_7C,
		0x_96, 0x_4C, 0x_37, 0x_79, 0x_BC, 0x_18, 0x_AB, 0x_A5, 0x_5C, 0x_FC, 0x_2E, 0x_61, 0x_39, 0x_BE, 0x_06,
		0x_C2, 0x_EC, 0x_55, 0x_E8, 0x_F7, 0x_F4, 0x_82, 0x_66, 0x_BD, 0x_3A, 0x_2C, 0x_6E, 0x_5B, 0x_BB, 0x_45,
		0x_E2, 0x_C4, 0x_C0, 0x_6D, 0x_90, 0x_11, 0x_60, 0x_B8, 0x_DA, 0x_44, 0x_C6, 0x_1E, 0x_76,
	];

	helper(S, BASE, 72_839);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_136_736_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_136_736_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_E3, 0x_E3,
		0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_CE, 0x_36, 0x_E1, 0x_61, 0x_C5, 0x_89, 0x_AE, 0x_AA, 0x_BF, 0x_BE, 0x_FF,
		0x_37, 0x_A9, 0x_73, 0x_78, 0x_ED, 0x_8B, 0x_A8, 0x_08, 0x_C8, 0x_64, 0x_DC, 0x_A7, 0x_7F, 0x_C5, 0x_16,
		0x_92, 0x_CB, 0x_F1, 0x_FF, 0x_BB,
	];
	const BASE: &[u8] = &[
		0x_E3, 0x_4B, 0x_6F, 0x_CE, 0x_2C, 0x_5A, 0x_0E, 0x_69, 0x_AD, 0x_49, 0x_08, 0x_8A, 0x_22, 0x_85, 0x_DD,
		0x_63, 0x_C3, 0x_B0, 0x_92, 0x_3D, 0x_17, 0x_52, 0x_4E, 0x_FF, 0x_37, 0x_F7, 0x_E9, 0x_72, 0x_73, 0x_1B,
		0x_33, 0x_45, 0x_C1, 0x_D8, 0x_C4, 0x_19, 0x_65, 0x_88, 0x_8F, 0x_E5, 0x_A5, 0x_D0, 0x_9C, 0x_AE, 0x_11,
		0x_71, 0x_CD, 0x_4A, 0x_A7, 0x_62, 0x_F2, 0x_67, 0x_F5, 0x_57, 0x_4D, 0x_07, 0x_BE, 0x_6E, 0x_12, 0x_C2,
		0x_3B, 0x_01, 0x_7B, 0x_43, 0x_91, 0x_5D, 0x_16, 0x_BB, 0x_77, 0x_FE, 0x_F8, 0x_3F, 0x_1C, 0x_D2, 0x_EC,
		0x_80, 0x_94, 0x_8C, 0x_1F, 0x_EF, 0x_28, 0x_25, 0x_68, 0x_29, 0x_A6, 0x_7E, 0x_A0, 0x_55, 0x_D7, 0x_B2,
		0x_BF, 0x_46, 0x_E1, 0x_27, 0x_4C, 0x_10, 0x_6A, 0x_32, 0x_5F, 0x_E2, 0x_1D, 0x_6D, 0x_C9, 0x_A8, 0x_F3,
		0x_8B, 0x_C5, 0x_B8, 0x_50, 0x_05, 0x_F9, 0x_FA, 0x_31, 0x_59, 0x_AC, 0x_18, 0x_15, 0x_47, 0x_24, 0x_42,
		0x_2F, 0x_54, 0x_C8, 0x_CB, 0x_D1, 0x_44, 0x_82, 0x_70, 0x_76, 0x_36, 0x_B5, 0x_34, 0x_DE, 0x_D3, 0x_99,
		0x_21, 0x_04, 0x_58, 0x_98, 0x_A1, 0x_D9, 0x_3A, 0x_D5, 0x_7A, 0x_B1, 0x_75, 0x_C6, 0x_CF, 0x_13, 0x_A2,
		0x_78, 0x_DA, 0x_9D, 0x_9F, 0x_89, 0x_06, 0x_30, 0x_AA, 0x_B3, 0x_41, 0x_7F, 0x_56, 0x_CC, 0x_86, 0x_BC,
		0x_8E, 0x_D4, 0x_B6, 0x_9A, 0x_FC, 0x_4F, 0x_ED, 0x_DC, 0x_5C, 0x_F6, 0x_A9, 0x_64, 0x_38, 0x_9B, 0x_39,
		0x_93, 0x_7D, 0x_BD, 0x_F0, 0x_90, 0x_3C, 0x_A4, 0x_B4, 0x_F1, 0x_9E, 0x_EA, 0x_D6, 0x_B7,
	];

	helper(S, BASE, 136_736);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_3_560_042_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_3_560_042_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_0A,
		0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_20,
		0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_0E, 0x_50, 0x_73,
		0x_42, 0x_3A, 0x_F2, 0x_CC, 0x_ED, 0x_B6, 0x_84, 0x_83, 0x_8D, 0x_EF, 0x_F0, 0x_4A, 0x_84, 0x_23, 0x_27,
		0x_55, 0x_DD, 0x_77, 0x_23, 0x_8D, 0x_C6, 0x_65, 0x_4A, 0x_B1, 0x_90, 0x_A4, 0x_2C, 0x_E0, 0x_58, 0x_1D,
		0x_39, 0x_1D, 0x_EF, 0x_C4, 0x_85, 0x_43, 0x_FE, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_7C, 0x_19, 0x_D5, 0x_5F, 0x_FB, 0x_76, 0x_64, 0x_C0, 0x_B2, 0x_F6, 0x_40, 0x_26, 0x_65, 0x_51,
		0x_96, 0x_79, 0x_07, 0x_A0, 0x_E5, 0x_B4, 0x_B6, 0x_4A, 0x_E4, 0x_C8, 0x_02, 0x_13, 0x_9E, 0x_8D, 0x_89,
		0x_DE, 0x_B5, 0x_C5, 0x_E1, 0x_99, 0x_D9, 0x_8F, 0x_CD, 0x_D4, 0x_E0, 0x_A7, 0x_48, 0x_E6, 0x_FA, 0x_12,
		0x_94, 0x_D1, 0x_DF, 0x_DC, 0x_4B, 0x_84, 0x_3A, 0x_05, 0x_9C, 0x_F9, 0x_C4, 0x_DD, 0x_35, 0x_77, 0x_39,
		0x_7F, 0x_86, 0x_5C, 0x_85, 0x_A9, 0x_A8, 0x_04, 0x_92, 0x_9F, 0x_BE, 0x_53, 0x_C6, 0x_59, 0x_87, 0x_C7,
		0x_BB, 0x_2C, 0x_D8, 0x_EF, 0x_A5, 0x_69, 0x_5E, 0x_EA, 0x_83, 0x_F2, 0x_97, 0x_0F, 0x_BF, 0x_66, 0x_10,
		0x_8A, 0x_23, 0x_34, 0x_AC, 0x_9D, 0x_0E, 0x_C9, 0x_56, 0x_46, 0x_67, 0x_3F, 0x_3E, 0x_95, 0x_33, 0x_49,
		0x_D2, 0x_A4, 0x_BC, 0x_D0, 0x_DA, 0x_50, 0x_57, 0x_70, 0x_80, 0x_75, 0x_6F, 0x_78, 0x_B3, 0x_AF, 0x_47,
		0x_43, 0x_B8, 0x_16, 0x_54, 0x_CE, 0x_6C, 0x_1C, 0x_41, 0x_CC, 0x_2F, 0x_36, 0x_11, 0x_25, 0x_D7, 0x_4D,
		0x_58, 0x_F0, 0x_29, 0x_FE, 0x_F3, 0x_27, 0x_B1, 0x_FC, 0x_30, 0x_1D, 0x_1F, 0x_2A, 0x_62, 0x_7D, 0x_4F,
		0x_8B, 0x_E3, 0x_14, 0x_6E, 0x_17, 0x_61, 0x_5A, 0x_73, 0x_EC, 0x_FF, 0x_24, 0x_21, 0x_F7, 0x_55, 0x_90,
		0x_EE, 0x_60, 0x_98, 0x_37, 0x_F8, 0x_9A, 0x_C3, 0x_71, 0x_DB, 0x_3D, 0x_6D, 0x_CB, 0x_32, 0x_E8, 0x_22,
		0x_7B, 0x_D6, 0x_93, 0x_03, 0x_AA, 0x_52, 0x_ED, 0x_B9, 0x_7E, 0x_A3, 0x_9B, 0x_88, 0x_18,
	];

	helper(S, BASE, 3_560_042);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_64_728_121_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_64_728_121_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0D,
		0x_20, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_09,
		0x_09, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83,
		0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_25, 0x_83, 0x_FE, 0x_37, 0x_E8,
		0x_74, 0x_47, 0x_70, 0x_43, 0x_17, 0x_75, 0x_76, 0x_92, 0x_9C, 0x_D6, 0x_6C, 0x_57, 0x_77, 0x_A4, 0x_FC,
		0x_FC, 0x_11, 0x_33, 0x_11, 0x_3A, 0x_F0, 0x_80, 0x_6B, 0x_43, 0x_2C, 0x_54, 0x_7D, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_FA, 0x_91, 0x_EC, 0x_7F, 0x_2C, 0x_E5, 0x_F6, 0x_18, 0x_25, 0x_F7, 0x_35, 0x_5C, 0x_FB, 0x_C3,
		0x_9F, 0x_84, 0x_69, 0x_D2, 0x_C6, 0x_4C, 0x_C5, 0x_1F, 0x_6D, 0x_E4, 0x_F0, 0x_9B, 0x_C4, 0x_43, 0x_45,
		0x_D4, 0x_E3, 0x_46, 0x_85, 0x_33, 0x_B8, 0x_A9, 0x_88, 0x_6C, 0x_7E, 0x_40, 0x_B3, 0x_61, 0x_3D, 0x_6B,
		0x_68, 0x_55, 0x_29, 0x_87, 0x_C1, 0x_74, 0x_D5, 0x_AD, 0x_10, 0x_AB, 0x_B5, 0x_E7, 0x_2E, 0x_DD, 0x_96,
		0x_1D, 0x_08, 0x_51, 0x_99, 0x_90, 0x_BF, 0x_CE, 0x_54, 0x_CC, 0x_59, 0x_EE, 0x_AE, 0x_9A, 0x_FD, 0x_5A,
		0x_27, 0x_67, 0x_CF, 0x_60, 0x_57, 0x_13, 0x_07, 0x_EF, 0x_CA, 0x_31, 0x_D9, 0x_14, 0x_98, 0x_7B, 0x_B2,
		0x_A2, 0x_32, 0x_52, 0x_72, 0x_B9, 0x_21, 0x_C2, 0x_3E, 0x_11, 0x_44, 0x_8D, 0x_9C, 0x_9E, 0x_F1, 0x_BC,
		0x_64, 0x_73, 0x_2F, 0x_D6, 0x_C9, 0x_B1, 0x_EA, 0x_3F, 0x_7D, 0x_8F, 0x_82, 0x_DC, 0x_92, 0x_65, 0x_7A,
		0x_23, 0x_86, 0x_42, 0x_75, 0x_EB, 0x_8E, 0x_F8, 0x_62, 0x_80, 0x_63, 0x_47, 0x_77, 0x_89, 0x_BD, 0x_D1,
		0x_D7, 0x_24, 0x_FE, 0x_81, 0x_A6, 0x_97, 0x_26, 0x_48, 0x_93, 0x_C7, 0x_50, 0x_E2, 0x_5B, 0x_B0, 0x_C8,
		0x_6A, 0x_A3, 0x_F3, 0x_B7, 0x_FC, 0x_1B, 0x_16, 0x_4D, 0x_8A, 0x_E1, 0x_A8, 0x_D0, 0x_1E, 0x_4B, 0x_5D,
		0x_CD, 0x_04, 0x_37, 0x_3A, 0x_1C, 0x_ED, 0x_17, 0x_01, 0x_53, 0x_C0, 0x_4F, 0x_03, 0x_8B, 0x_DF, 0x_A7,
		0x_BE, 0x_0F, 0x_70, 0x_A4, 0x_D8, 0x_F4, 0x_E9, 0x_3B, 0x_4A, 0x_76, 0x_A1, 0x_7C, 0x_71,
	];

	helper(S, BASE, 64_728_121);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_132_382_103_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_132_382_103_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_DC, 0x_9E, 0x_86, 0x_21, 0x_5C, 0x_F1, 0x_62, 0x_C5, 0x_B4,
		0x_65, 0x_E7, 0x_8A, 0x_A5, 0x_5D, 0x_4A, 0x_FC, 0x_4D, 0x_F1, 0x_14, 0x_18, 0x_2A, 0x_79, 0x_6F, 0x_3E,
		0x_B2, 0x_64, 0x_04, 0x_1C, 0x_C3, 0x_FE, 0x_C9, 0x_56, 0x_BA, 0x_EB, 0x_9A, 0x_EE, 0x_BE, 0x_F3, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_A6, 0x_BB, 0x_FC, 0x_D0, 0x_B2, 0x_E4, 0x_01, 0x_D3, 0x_5A, 0x_4B, 0x_F9, 0x_3A, 0x_71, 0x_8F,
		0x_F1, 0x_0F, 0x_58, 0x_DC, 0x_E7, 0x_5D, 0x_4D, 0x_A0, 0x_22, 0x_17, 0x_53, 0x_92, 0x_C9, 0x_59, 0x_48,
		0x_EB, 0x_1D, 0x_C3, 0x_B4, 0x_96, 0x_45, 0x_C5, 0x_57, 0x_8E, 0x_B5, 0x_6C, 0x_AB, 0x_63, 0x_47, 0x_18,
		0x_91, 0x_76, 0x_E0, 0x_E8, 0x_A7, 0x_D5, 0x_FE, 0x_DF, 0x_DD, 0x_11, 0x_A4, 0x_39, 0x_E5, 0x_3E, 0x_42,
		0x_80, 0x_77, 0x_9B, 0x_CB, 0x_1A, 0x_3C, 0x_81, 0x_AD, 0x_CE, 0x_89, 0x_1C, 0x_6D, 0x_66, 0x_13, 0x_46,
		0x_DE, 0x_FA, 0x_02, 0x_8C, 0x_9E, 0x_34, 0x_3B, 0x_EA, 0x_98, 0x_8A, 0x_F5, 0x_38, 0x_EE, 0x_74, 0x_12,
		0x_C8, 0x_0E, 0x_4E, 0x_BC, 0x_D2, 0x_7F, 0x_10, 0x_DA, 0x_43, 0x_C0, 0x_40, 0x_6F, 0x_04, 0x_19, 0x_26,
		0x_2C, 0x_E9, 0x_79, 0x_41, 0x_D8, 0x_ED, 0x_9A, 0x_E2, 0x_F2, 0x_C7, 0x_56, 0x_64, 0x_94, 0x_5F, 0x_F3,
		0x_06, 0x_C6, 0x_21, 0x_73, 0x_61, 0x_FF, 0x_51, 0x_F6, 0x_50, 0x_FB, 0x_23, 0x_BF, 0x_A5, 0x_55, 0x_65,
		0x_AE, 0x_37, 0x_A1, 0x_88, 0x_4C, 0x_69, 0x_78, 0x_FD, 0x_95, 0x_DB, 0x_84, 0x_2E, 0x_70, 0x_05, 0x_E6,
		0x_67, 0x_BE, 0x_97, 0x_C4, 0x_F8, 0x_E1, 0x_D9, 0x_27, 0x_CF, 0x_5B, 0x_B3, 0x_68, 0x_B9, 0x_14, 0x_D7,
		0x_A3, 0x_31, 0x_CA, 0x_1E, 0x_2F, 0x_4A, 0x_BD, 0x_BA, 0x_62, 0x_90, 0x_D1, 0x_08, 0x_52, 0x_D4, 0x_8D,
		0x_E3, 0x_85, 0x_49, 0x_4F, 0x_7E, 0x_93, 0x_36, 0x_83, 0x_86, 0x_2A, 0x_7A, 0x_75, 0x_3D,
	];

	helper(S, BASE, 132_382_103);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_2_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_2_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_0A,
		0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_B0, 0x_2B, 0x_9E, 0x_A0, 0x_58, 0x_E7, 0x_8E, 0x_10, 0x_90, 0x_BC, 0x_C3, 0x_4F,
		0x_F9, 0x_4E, 0x_A7, 0x_94,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_08, 0x_B0, 0x_02, 0x_85, 0x_63, 0x_48, 0x_DD, 0x_1F, 0x_34, 0x_A8, 0x_56, 0x_79, 0x_74, 0x_AA,
		0x_7D, 0x_BE, 0x_28, 0x_4F, 0x_4B, 0x_C7, 0x_73, 0x_12, 0x_C5, 0x_5E, 0x_66, 0x_E0, 0x_D3, 0x_CB, 0x_A9,
		0x_05, 0x_3E, 0x_D9, 0x_67, 0x_B1, 0x_B4, 0x_68, 0x_E9, 0x_37, 0x_9A, 0x_27, 0x_A7, 0x_BA, 0x_18, 0x_E2,
		0x_6F, 0x_D7, 0x_0E, 0x_4E, 0x_C1, 0x_CA, 0x_19, 0x_01, 0x_11, 0x_B8, 0x_5F, 0x_A3, 0x_A2, 0x_2F, 0x_C9,
		0x_15, 0x_AC, 0x_AE, 0x_92, 0x_B3, 0x_76, 0x_59, 0x_47, 0x_F2, 0x_6E, 0x_6D, 0x_13, 0x_BD, 0x_6B, 0x_ED,
		0x_1C, 0x_26, 0x_AD, 0x_55, 0x_9B, 0x_30, 0x_58, 0x_F3, 0x_FA, 0x_7A, 0x_FE, 0x_1E, 0x_D6, 0x_EF, 0x_54,
		0x_16, 0x_6C, 0x_8C, 0x_98, 0x_E1, 0x_72, 0x_69, 0x_FB, 0x_3C, 0x_E8, 0x_C2, 0x_EE, 0x_B2, 0x_62, 0x_99,
		0x_8F, 0x_70, 0x_7F, 0x_DF, 0x_7C, 0x_A4, 0x_9C, 0x_91, 0x_2E, 0x_7E, 0x_21, 0x_E6, 0x_CE, 0x_D1, 0x_CF,
		0x_4A, 0x_41, 0x_D4, 0x_0F, 0x_F6, 0x_89, 0x_25, 0x_10, 0x_61, 0x_BF, 0x_C3, 0x_4D, 0x_81, 0x_1D, 0x_53,
		0x_CD, 0x_24, 0x_B5, 0x_A5, 0x_AF, 0x_EA, 0x_EC, 0x_2C, 0x_03, 0x_F0, 0x_E5, 0x_64, 0x_3B, 0x_94, 0x_77,
		0x_BB, 0x_22, 0x_E3, 0x_2A, 0x_39, 0x_82, 0x_7B, 0x_9E, 0x_29, 0x_FC, 0x_EB, 0x_86, 0x_DC, 0x_B9, 0x_32,
		0x_F5, 0x_88, 0x_E4, 0x_5C, 0x_49, 0x_33, 0x_44, 0x_52, 0x_75, 0x_CC, 0x_78, 0x_9D, 0x_90, 0x_93, 0x_C6,
		0x_5D, 0x_1B, 0x_51, 0x_3A, 0x_80, 0x_FD, 0x_F4, 0x_D8, 0x_F8, 0x_04, 0x_F7, 0x_38, 0x_07, 0x_84, 0x_17,
		0x_45, 0x_A6, 0x_A1, 0x_DA, 0x_C8, 0x_14, 0x_3D, 0x_4C, 0x_65, 0x_96, 0x_36, 0x_B6, 0x_71, 0x_23, 0x_B7,
		0x_FF, 0x_8A, 0x_C4, 0x_6A, 0x_57, 0x_87, 0x_A0, 0x_F9, 0x_50, 0x_31, 0x_F1, 0x_43, 0x_D2, 0x_E7, 0x_5B,
		0x_06, 0x_42, 0x_AB, 0x_8D, 0x_8E, 0x_DB, 0x_8B, 0x_83, 0x_D5, 0x_3F, 0x_97, 0x_40, 0x_C0, 0x_95, 0x_BC,
		0x_60, 0x_DE, 0x_46, 0x_35, 0x_1A, 0x_5A, 0x_D0,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_53_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_53_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_20, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_C8, 0x_09, 0x_FB, 0x_DD, 0x_85, 0x_6B, 0x_3A,
		0x_6A, 0x_52, 0x_7E, 0x_69, 0x_BF, 0x_59, 0x_91, 0x_3C, 0x_34, 0x_40, 0x_92, 0x_F1, 0x_DA, 0x_7A, 0x_03,
		0x_98, 0x_1F, 0x_C6, 0x_1F, 0x_BE, 0x_85, 0x_D6, 0x_EC, 0x_18, 0x_DF, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_12, 0x_D3, 0x_01, 0x_9F, 0x_7D, 0x_5C, 0x_18, 0x_81, 0x_AD, 0x_15, 0x_C4, 0x_82, 0x_9A, 0x_6E,
		0x_74, 0x_6C, 0x_5A, 0x_A8, 0x_36, 0x_4D, 0x_7F, 0x_A0, 0x_AB, 0x_8B, 0x_14, 0x_22, 0x_83, 0x_1F, 0x_2E,
		0x_DD, 0x_EC, 0x_37, 0x_2C, 0x_8F, 0x_04, 0x_7C, 0x_FB, 0x_F5, 0x_C9, 0x_57, 0x_45, 0x_24, 0x_4C, 0x_ED,
		0x_96, 0x_85, 0x_D6, 0x_B6, 0x_A1, 0x_6D, 0x_70, 0x_B3, 0x_C8, 0x_AE, 0x_51, 0x_CC, 0x_D5, 0x_9C, 0x_1E,
		0x_79, 0x_FC, 0x_40, 0x_3B, 0x_E6, 0x_F4, 0x_19, 0x_3F, 0x_DB, 0x_50, 0x_EB, 0x_39, 0x_55, 0x_42, 0x_62,
		0x_90, 0x_33, 0x_A4, 0x_D7, 0x_4F, 0x_48, 0x_8E, 0x_07, 0x_A9, 0x_08, 0x_52, 0x_D4, 0x_DE, 0x_E5, 0x_32,
		0x_7B, 0x_FA, 0x_35, 0x_23, 0x_2A, 0x_3E, 0x_16, 0x_10, 0x_67, 0x_44, 0x_CA, 0x_89, 0x_71, 0x_91, 0x_BD,
		0x_98, 0x_B8, 0x_86, 0x_8C, 0x_93, 0x_92, 0x_CB, 0x_9D, 0x_B0, 0x_A3, 0x_F8, 0x_34, 0x_DA, 0x_3A, 0x_76,
		0x_68, 0x_E4, 0x_69, 0x_6A, 0x_F7, 0x_F9, 0x_61, 0x_26, 0x_EE, 0x_5B, 0x_1B, 0x_1C, 0x_B4, 0x_0E, 0x_02,
		0x_E7, 0x_73, 0x_28, 0x_2F, 0x_46, 0x_60, 0x_C0, 0x_B5, 0x_C2, 0x_53, 0x_63, 0x_77, 0x_E3, 0x_3C, 0x_21,
		0x_5F, 0x_38, 0x_D8, 0x_5E, 0x_1A, 0x_BA, 0x_6B, 0x_06, 0x_DC, 0x_EF, 0x_7E, 0x_AF, 0x_72, 0x_E1, 0x_29,
		0x_0F, 0x_B1, 0x_9E, 0x_A6, 0x_56, 0x_B7, 0x_1D, 0x_58, 0x_30, 0x_A7, 0x_66, 0x_A2, 0x_B9, 0x_97, 0x_95,
		0x_4B, 0x_E2, 0x_C3, 0x_D1, 0x_CE, 0x_6F, 0x_A5, 0x_CF, 0x_C1, 0x_17, 0x_11, 0x_8A, 0x_C6, 0x_F1, 0x_4E,
		0x_7A, 0x_E8, 0x_FE, 0x_4A, 0x_54, 0x_BB, 0x_E0, 0x_C7, 0x_41, 0x_AC, 0x_DF, 0x_EA, 0x_FD, 0x_3D, 0x_CD,
		0x_8D, 0x_F0, 0x_47, 0x_5D, 0x_78, 0x_88, 0x_E9, 0x_87, 0x_25, 0x_F2, 0x_31, 0x_84, 0x_03, 0x_27, 0x_99,
		0x_D0, 0x_FF, 0x_80, 0x_13, 0x_C5, 0x_D9, 0x_BE, 0x_49, 0x_D2, 0x_F6, 0x_59, 0x_BC, 0x_B2, 0x_AA, 0x_75,
		0x_94, 0x_43, 0x_65, 0x_05, 0x_9B, 0x_64, 0x_F3,
	];

	helper(S, BASE, 53);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_647_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_647_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_0C,
		0x_09, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80,
		0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_CB, 0x_BA, 0x_20, 0x_02, 0x_34,
		0x_68, 0x_4E, 0x_8A, 0x_7F, 0x_54, 0x_9A, 0x_08, 0x_D0, 0x_B1, 0x_8B, 0x_78, 0x_E9, 0x_43, 0x_BB, 0x_78,
		0x_C8, 0x_95, 0x_6A, 0x_50, 0x_A9, 0x_F5, 0x_B3, 0x_4C, 0x_46, 0x_E5, 0x_4F, 0x_82, 0x_DC, 0x_3F, 0x_CF,
		0x_BD, 0x_0E, 0x_AF, 0x_8B, 0x_74, 0x_AB, 0x_F4, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_33, 0x_CB, 0x_88, 0x_35, 0x_64, 0x_16, 0x_BD, 0x_EF, 0x_93, 0x_B5, 0x_03, 0x_06, 0x_5B, 0x_40,
		0x_A2, 0x_D7, 0x_C7, 0x_BF, 0x_6A, 0x_27, 0x_C9, 0x_57, 0x_44, 0x_3E, 0x_FC, 0x_B1, 0x_31, 0x_A6, 0x_AF,
		0x_9D, 0x_87, 0x_77, 0x_B6, 0x_FD, 0x_4E, 0x_E6, 0x_53, 0x_91, 0x_74, 0x_55, 0x_CC, 0x_4F, 0x_0E, 0x_84,
		0x_D3, 0x_E2, 0x_FB, 0x_83, 0x_D4, 0x_49, 0x_68, 0x_C1, 0x_DC, 0x_FF, 0x_21, 0x_8D, 0x_5E, 0x_04, 0x_41,
		0x_6E, 0x_5A, 0x_2C, 0x_45, 0x_9F, 0x_72, 0x_D5, 0x_89, 0x_51, 0x_EE, 0x_4C, 0x_9A, 0x_46, 0x_50, 0x_D9,
		0x_1F, 0x_42, 0x_56, 0x_98, 0x_15, 0x_B8, 0x_DB, 0x_4A, 0x_7C, 0x_C3, 0x_7F, 0x_01, 0x_1A, 0x_B0, 0x_7E,
		0x_17, 0x_9C, 0x_29, 0x_C2, 0x_7D, 0x_F4, 0x_08, 0x_E9, 0x_65, 0x_43, 0x_F5, 0x_DE, 0x_C0, 0x_6D, 0x_CF,
		0x_8C, 0x_73, 0x_C8, 0x_26, 0x_F1, 0x_3F, 0x_05, 0x_82, 0x_4B, 0x_63, 0x_F8, 0x_11, 0x_6C, 0x_B2, 0x_9E,
		0x_60, 0x_78, 0x_DA, 0x_A8, 0x_AD, 0x_BB, 0x_28, 0x_FE, 0x_6F, 0x_E0, 0x_C5, 0x_7B, 0x_3B, 0x_F9, 0x_66,
		0x_47, 0x_A4, 0x_F6, 0x_14, 0x_D1, 0x_E3, 0x_23, 0x_67, 0x_52, 0x_94, 0x_E5, 0x_CE, 0x_D8, 0x_90, 0x_62,
		0x_25, 0x_59, 0x_30, 0x_BA, 0x_E8, 0x_22, 0x_6B, 0x_34, 0x_F7, 0x_EC, 0x_B9, 0x_3C, 0x_2F, 0x_5F, 0x_A7,
		0x_69, 0x_24, 0x_A3, 0x_96, 0x_BE, 0x_99, 0x_38, 0x_1C, 0x_76, 0x_FA, 0x_12, 0x_EB, 0x_18, 0x_8B, 0x_D0,
		0x_A1, 0x_86, 0x_D6, 0x_37, 0x_DD, 0x_5C, 0x_1B, 0x_10, 0x_8E, 0x_E1, 0x_2E, 0x_79, 0x_F0, 0x_36, 0x_71,
		0x_13, 0x_70, 0x_CD, 0x_95, 0x_58, 0x_E4, 0x_BC, 0x_E7, 0x_A0, 0x_8F, 0x_B3, 0x_85, 0x_0F, 0x_B4, 0x_1D,
		0x_8A, 0x_92, 0x_F3, 0x_9B, 0x_19, 0x_F2, 0x_75, 0x_54, 0x_DF, 0x_61, 0x_CA, 0x_C4, 0x_81, 0x_AC, 0x_7A,
		0x_ED, 0x_5D, 0x_AB, 0x_AA, 0x_48, 0x_C6, 0x_4D, 0x_32, 0x_2A, 0x_07, 0x_39, 0x_A5, 0x_02, 0x_D2, 0x_1E,
		0x_AE, 0x_3A, 0x_3D, 0x_97, 0x_B7, 0x_EA, 0x_A9,
	];

	helper(S, BASE, 647);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_2_760_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_2_760_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0C,
		0x_09, 0x_0C, 0x_09, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_45, 0x_8C, 0x_0D, 0x_1E, 0x_97,
		0x_3F, 0x_42, 0x_9D, 0x_87, 0x_12, 0x_27, 0x_99, 0x_82, 0x_A7, 0x_86, 0x_6C, 0x_33, 0x_C5, 0x_73, 0x_DA,
		0x_4A, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_A3, 0x_49, 0x_24, 0x_C6, 0x_C7, 0x_04, 0x_5D, 0x_22, 0x_71, 0x_CE, 0x_45, 0x_1F, 0x_EB, 0x_60,
		0x_91, 0x_81, 0x_DD, 0x_19, 0x_26, 0x_33, 0x_23, 0x_D3, 0x_D9, 0x_E7, 0x_A7, 0x_A8, 0x_FD, 0x_5F, 0x_B5,
		0x_BB, 0x_7E, 0x_36, 0x_A2, 0x_AD, 0x_7B, 0x_AE, 0x_D7, 0x_4F, 0x_1B, 0x_32, 0x_4E, 0x_D1, 0x_8C, 0x_76,
		0x_F6, 0x_28, 0x_02, 0x_35, 0x_2E, 0x_EF, 0x_BD, 0x_8D, 0x_D2, 0x_40, 0x_77, 0x_FC, 0x_B4, 0x_2F, 0x_9D,
		0x_CD, 0x_53, 0x_90, 0x_DB, 0x_52, 0x_F5, 0x_AB, 0x_CF, 0x_FE, 0x_56, 0x_F7, 0x_DF, 0x_10, 0x_41, 0x_16,
		0x_42, 0x_E1, 0x_3C, 0x_1E, 0x_78, 0x_87, 0x_E3, 0x_25, 0x_A1, 0x_C0, 0x_73, 0x_D4, 0x_59, 0x_A4, 0x_3A,
		0x_AF, 0x_21, 0x_CC, 0x_9C, 0x_E2, 0x_7A, 0x_06, 0x_D0, 0x_15, 0x_94, 0x_7C, 0x_1A, 0x_11, 0x_6D, 0x_6E,
		0x_96, 0x_C1, 0x_95, 0x_03, 0x_68, 0x_55, 0x_2C, 0x_8E, 0x_80, 0x_BE, 0x_3F, 0x_B3, 0x_47, 0x_44, 0x_85,
		0x_B8, 0x_6F, 0x_17, 0x_F9, 0x_72, 0x_BC, 0x_E0, 0x_A6, 0x_AA, 0x_3B, 0x_30, 0x_DA, 0x_0F, 0x_58, 0x_61,
		0x_E6, 0x_EA, 0x_FF, 0x_E4, 0x_3D, 0x_FB, 0x_D6, 0x_64, 0x_14, 0x_CB, 0x_65, 0x_E9, 0x_E8, 0x_A0, 0x_5A,
		0x_93, 0x_69, 0x_DC, 0x_99, 0x_12, 0x_86, 0x_51, 0x_6B, 0x_84, 0x_92, 0x_AC, 0x_1C, 0x_5B, 0x_9F, 0x_39,
		0x_62, 0x_EC, 0x_3E, 0x_6A, 0x_4C, 0x_66, 0x_98, 0x_7F, 0x_29, 0x_B1, 0x_05, 0x_46, 0x_5C, 0x_EE, 0x_34,
		0x_5E, 0x_88, 0x_8F, 0x_D5, 0x_BA, 0x_57, 0x_A5, 0x_18, 0x_27, 0x_1D, 0x_75, 0x_F1, 0x_4D, 0x_31, 0x_ED,
		0x_F3, 0x_D8, 0x_79, 0x_B2, 0x_F8, 0x_89, 0x_F4, 0x_C4, 0x_01, 0x_13, 0x_CA, 0x_67, 0x_9A, 0x_C8, 0x_08,
		0x_C3, 0x_37, 0x_B0, 0x_8A, 0x_4A, 0x_FA, 0x_C5, 0x_97, 0x_2A, 0x_0E, 0x_F0, 0x_7D, 0x_E5, 0x_07, 0x_A9,
		0x_63, 0x_8B, 0x_83, 0x_B7, 0x_C9, 0x_B9, 0x_BF, 0x_F2, 0x_74, 0x_DE, 0x_82, 0x_43, 0x_C2, 0x_70, 0x_B6,
		0x_4B, 0x_38, 0x_6C, 0x_48, 0x_50, 0x_9B, 0x_54,
	];

	helper(S, BASE, 2_760);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_83_667_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_83_667_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_84, 0x_2C, 0x_E2, 0x_2B, 0x_2E, 0x_7B, 0x_35, 0x_1A, 0x_11, 0x_FA, 0x_ED, 0x_74, 0x_36,
		0x_DD, 0x_F0, 0x_A9, 0x_97, 0x_7C, 0x_9B, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_84, 0x_27, 0x_A4, 0x_D5, 0x_D1, 0x_5A, 0x_F9, 0x_44, 0x_9A, 0x_C0, 0x_8E, 0x_64, 0x_3B, 0x_2A,
		0x_30, 0x_BD, 0x_82, 0x_78, 0x_6B, 0x_48, 0x_D4, 0x_A0, 0x_1F, 0x_1E, 0x_AD, 0x_72, 0x_CF, 0x_E9, 0x_34,
		0x_B2, 0x_1C, 0x_4B, 0x_F4, 0x_42, 0x_7B, 0x_06, 0x_63, 0x_5F, 0x_BB, 0x_17, 0x_21, 0x_5D, 0x_1B, 0x_4E,
		0x_FE, 0x_6A, 0x_0F, 0x_85, 0x_77, 0x_F5, 0x_91, 0x_E3, 0x_9C, 0x_FB, 0x_97, 0x_70, 0x_CE, 0x_DD, 0x_B5,
		0x_10, 0x_1A, 0x_BA, 0x_9E, 0x_61, 0x_8C, 0x_8B, 0x_B7, 0x_7D, 0x_A3, 0x_59, 0x_08, 0x_C4, 0x_7A, 0x_B6,
		0x_4C, 0x_B3, 0x_C3, 0x_3F, 0x_EE, 0x_A6, 0x_EC, 0x_81, 0x_FD, 0x_13, 0x_71, 0x_95, 0x_47, 0x_12, 0x_A9,
		0x_29, 0x_2C, 0x_18, 0x_9F, 0x_87, 0x_74, 0x_15, 0x_F1, 0x_C2, 0x_39, 0x_EA, 0x_D0, 0x_16, 0x_3D, 0x_37,
		0x_E4, 0x_B4, 0x_2E, 0x_51, 0x_35, 0x_E6, 0x_E8, 0x_14, 0x_41, 0x_A1, 0x_AA, 0x_93, 0x_5B, 0x_89, 0x_C8,
		0x_28, 0x_3E, 0x_9B, 0x_67, 0x_03, 0x_A7, 0x_23, 0x_01, 0x_CC, 0x_B8, 0x_75, 0x_1D, 0x_33, 0x_D3, 0x_56,
		0x_26, 0x_38, 0x_79, 0x_5E, 0x_C5, 0x_02, 0x_6C, 0x_A5, 0x_3A, 0x_83, 0x_E7, 0x_BF, 0x_A2, 0x_F0, 0x_8A,
		0x_92, 0x_FA, 0x_73, 0x_C7, 0x_94, 0x_53, 0x_3C, 0x_7F, 0x_36, 0x_AB, 0x_E1, 0x_F2, 0x_19, 0x_BC, 0x_E0,
		0x_68, 0x_40, 0x_6E, 0x_D6, 0x_04, 0x_DF, 0x_EB, 0x_F8, 0x_A8, 0x_65, 0x_49, 0x_F3, 0x_DB, 0x_D8, 0x_6D,
		0x_66, 0x_E2, 0x_D9, 0x_0E, 0x_B0, 0x_CB, 0x_2F, 0x_90, 0x_5C, 0x_32, 0x_C6, 0x_AF, 0x_EF, 0x_98, 0x_F6,
		0x_7C, 0x_52, 0x_DA, 0x_22, 0x_CA, 0x_76, 0x_8F, 0x_FC, 0x_4A, 0x_88, 0x_05, 0x_DE, 0x_24, 0x_F7, 0x_07,
		0x_B1, 0x_57, 0x_60, 0x_ED, 0x_AC, 0x_50, 0x_CD, 0x_25, 0x_31, 0x_69, 0x_DC, 0x_54, 0x_4D, 0x_99, 0x_D2,
		0x_11, 0x_D7, 0x_7E, 0x_45, 0x_4F, 0x_62, 0x_86, 0x_96, 0x_43, 0x_AE, 0x_58, 0x_80, 0x_C1, 0x_B9, 0x_9D,
		0x_55, 0x_FF, 0x_C9, 0x_46, 0x_E5, 0x_BE, 0x_6F,
	];

	helper(S, BASE, 83_667);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_634_176_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_634_176_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0B,
		0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47,
		0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_A1, 0x_7A, 0x_6F, 0x_2B, 0x_91, 0x_1D, 0x_15, 0x_97,
		0x_75, 0x_49, 0x_17, 0x_94, 0x_D1, 0x_4F, 0x_89, 0x_30, 0x_68, 0x_C9, 0x_11, 0x_EA, 0x_D8, 0x_10, 0x_A0,
		0x_A4, 0x_4E, 0x_95, 0x_67, 0x_FB, 0x_65, 0x_8A, 0x_C0, 0x_E8, 0x_4E, 0x_6E, 0x_F5, 0x_22, 0x_AC, 0x_17,
		0x_A1, 0x_5C, 0x_AF, 0x_C2, 0x_6C, 0x_C7, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_55, 0x_C5, 0x_D4, 0x_A9, 0x_B3, 0x_44, 0x_49, 0x_6B, 0x_6C, 0x_A1, 0x_8F, 0x_85, 0x_60, 0x_DE,
		0x_DC, 0x_25, 0x_74, 0x_06, 0x_93, 0x_23, 0x_3B, 0x_36, 0x_2F, 0x_28, 0x_9C, 0x_40, 0x_46, 0x_69, 0x_13,
		0x_31, 0x_8D, 0x_77, 0x_84, 0x_A2, 0x_F8, 0x_E1, 0x_4D, 0x_5B, 0x_1A, 0x_15, 0x_87, 0x_0E, 0x_94, 0x_83,
		0x_B8, 0x_FE, 0x_58, 0x_79, 0x_BF, 0x_CB, 0x_64, 0x_B4, 0x_53, 0x_5D, 0x_A5, 0x_65, 0x_AF, 0x_01, 0x_A7,
		0x_96, 0x_45, 0x_3F, 0x_F3, 0x_A4, 0x_2A, 0x_81, 0x_78, 0x_DF, 0x_C8, 0x_2C, 0x_FF, 0x_04, 0x_75, 0x_BB,
		0x_80, 0x_59, 0x_5E, 0x_66, 0x_03, 0x_CF, 0x_05, 0x_3E, 0x_90, 0x_E8, 0x_9B, 0x_8A, 0x_F0, 0x_7F, 0x_EE,
		0x_33, 0x_70, 0x_57, 0x_14, 0x_D2, 0x_FB, 0x_39, 0x_7A, 0x_9D, 0x_11, 0x_C6, 0x_73, 0x_F6, 0x_3A, 0x_B7,
		0x_C9, 0x_D1, 0x_EC, 0x_ED, 0x_3D, 0x_2E, 0x_18, 0x_99, 0x_6A, 0x_98, 0x_E2, 0x_32, 0x_B9, 0x_22, 0x_63,
		0x_92, 0x_30, 0x_AE, 0x_16, 0x_5C, 0x_B5, 0x_89, 0x_6F, 0x_8E, 0x_02, 0x_68, 0x_29, 0x_BA, 0x_DD, 0x_08,
		0x_D6, 0x_9F, 0x_E0, 0x_4F, 0x_26, 0x_F2, 0x_67, 0x_E4, 0x_4E, 0x_97, 0x_56, 0x_95, 0x_B6, 0x_9E, 0x_F9,
		0x_1E, 0x_91, 0x_C2, 0x_07, 0x_EA, 0x_C4, 0x_D9, 0x_19, 0x_4B, 0x_B1, 0x_AD, 0x_BD, 0x_10, 0x_C0, 0x_E5,
		0x_7C, 0x_B2, 0x_34, 0x_C1, 0x_0F, 0x_E9, 0x_D0, 0x_AA, 0x_C3, 0x_A8, 0x_F4, 0x_A6, 0x_41, 0x_5F, 0x_D3,
		0x_F5, 0x_7D, 0x_48, 0x_71, 0x_AC, 0x_88, 0x_9A, 0x_6D, 0x_D7, 0x_4A, 0x_E3, 0x_A3, 0x_86, 0x_61, 0x_7E,
		0x_1F, 0x_5A, 0x_EB, 0x_43, 0x_17, 0x_E6, 0x_F7, 0x_24, 0x_50, 0x_CA, 0x_3C, 0x_FA, 0x_6E, 0x_27, 0x_DB,
		0x_CC, 0x_BE, 0x_62, 0x_DA, 0x_E7, 0x_FC, 0x_CE, 0x_D5, 0x_37, 0x_F1, 0x_D8, 0x_BC, 0x_CD, 0x_B0, 0x_EF,
		0x_A0, 0x_AB, 0x_51, 0x_8B, 0x_1D, 0x_76, 0x_72, 0x_FD, 0x_54, 0x_8C, 0x_21, 0x_52, 0x_35, 0x_1C, 0x_7B,
		0x_C7, 0x_38, 0x_1B, 0x_4C, 0x_42, 0x_12, 0x_82,
	];

	helper(S, BASE, 634_176);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_2_538_522_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_2_538_522_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_09,
		0x_0B, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0D,
		0x_20, 0x_0A, 0x_0A, 0x_88, 0x_88, 0x_88, 0x_88, 0x_88, 0x_41, 0x_A8, 0x_FB, 0x_0C, 0x_37, 0x_CC, 0x_BF,
		0x_79, 0x_53, 0x_B7, 0x_57, 0x_A0, 0x_BC, 0x_70, 0x_16, 0x_C9, 0x_98, 0x_1C, 0x_75, 0x_88, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_84, 0x_40, 0x_36, 0x_F9, 0x_24, 0x_C2, 0x_DE, 0x_67, 0x_17, 0x_D8, 0x_ED, 0x_64, 0x_7D, 0x_B8,
		0x_5C, 0x_48, 0x_53, 0x_BC, 0x_7E, 0x_54, 0x_DA, 0x_6A, 0x_C8, 0x_47, 0x_E6, 0x_78, 0x_58, 0x_F8, 0x_79,
		0x_F1, 0x_D3, 0x_99, 0x_03, 0x_93, 0x_26, 0x_04, 0x_4C, 0x_35, 0x_1E, 0x_4A, 0x_41, 0x_60, 0x_BF, 0x_82,
		0x_8A, 0x_A5, 0x_CC, 0x_BB, 0x_0F, 0x_D5, 0x_3D, 0x_15, 0x_73, 0x_B9, 0x_AD, 0x_E8, 0x_81, 0x_6F, 0x_7C,
		0x_FA, 0x_31, 0x_B2, 0x_6B, 0x_05, 0x_8D, 0x_16, 0x_3A, 0x_D4, 0x_3E, 0x_6D, 0x_B1, 0x_18, 0x_D2, 0x_5B,
		0x_CD, 0x_06, 0x_10, 0x_90, 0x_A9, 0x_80, 0x_AF, 0x_9F, 0x_C9, 0x_9A, 0x_45, 0x_23, 0x_38, 0x_1A, 0x_C0,
		0x_3F, 0x_D7, 0x_3C, 0x_9C, 0x_66, 0x_CB, 0x_1D, 0x_E2, 0x_2C, 0x_2F, 0x_6E, 0x_63, 0x_70, 0x_FB, 0x_EF,
		0x_EC, 0x_21, 0x_3B, 0x_BA, 0x_4F, 0x_2E, 0x_61, 0x_92, 0x_B3, 0x_59, 0x_02, 0x_25, 0x_6C, 0x_E7, 0x_DC,
		0x_D6, 0x_B6, 0x_D0, 0x_42, 0x_C3, 0x_83, 0x_19, 0x_13, 0x_E5, 0x_87, 0x_14, 0x_77, 0x_EE, 0x_9D, 0x_D9,
		0x_E9, 0x_75, 0x_55, 0x_94, 0x_5D, 0x_F7, 0x_F4, 0x_DB, 0x_8F, 0x_C5, 0x_A3, 0x_5F, 0x_49, 0x_07, 0x_E4,
		0x_A8, 0x_A0, 0x_1B, 0x_A7, 0x_44, 0x_76, 0x_A4, 0x_E0, 0x_96, 0x_A2, 0x_E3, 0x_FE, 0x_CF, 0x_68, 0x_F5,
		0x_C6, 0x_46, 0x_F6, 0x_F2, 0x_30, 0x_0E, 0x_AC, 0x_57, 0x_AA, 0x_33, 0x_E1, 0x_32, 0x_B4, 0x_F0, 0x_4B,
		0x_28, 0x_EA, 0x_BD, 0x_AB, 0x_DF, 0x_5A, 0x_7B, 0x_43, 0x_C1, 0x_52, 0x_B7, 0x_4D, 0x_69, 0x_B0, 0x_EB,
		0x_37, 0x_FC, 0x_D1, 0x_34, 0x_FF, 0x_AE, 0x_72, 0x_71, 0x_A1, 0x_01, 0x_8E, 0x_86, 0x_89, 0x_62, 0x_39,
		0x_FD, 0x_65, 0x_12, 0x_1C, 0x_B5, 0x_98, 0x_29, 0x_F3, 0x_95, 0x_97, 0x_CE, 0x_51, 0x_08, 0x_27, 0x_8C,
		0x_22, 0x_9B, 0x_C7, 0x_7A, 0x_5E, 0x_9E, 0x_4E, 0x_C4, 0x_2A, 0x_A6, 0x_1F, 0x_DD, 0x_8B, 0x_50, 0x_85,
		0x_7F, 0x_BE, 0x_74, 0x_91, 0x_CA, 0x_56, 0x_11,
	];

	helper(S, BASE, 2_538_522);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_76_409_321_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_76_409_321_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_B7, 0x_4A, 0x_9B, 0x_29, 0x_0D, 0x_F7, 0x_FF, 0x_22, 0x_65, 0x_6C,
		0x_E3, 0x_EC, 0x_B4, 0x_9C, 0x_87, 0x_8E, 0x_D6, 0x_67, 0x_B4, 0x_17, 0x_C3, 0x_05, 0x_F9, 0x_A3, 0x_86,
		0x_FD, 0x_36, 0x_C2, 0x_D1, 0x_76, 0x_52, 0x_62, 0x_56, 0x_D4, 0x_A5, 0x_B1, 0x_A9, 0x_E4, 0x_70, 0x_A7,
		0x_DF, 0x_60, 0x_5C, 0x_FC, 0x_C3, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_64, 0x_C9, 0x_98, 0x_F6, 0x_B7, 0x_A4, 0x_CA, 0x_25, 0x_68, 0x_66, 0x_AD, 0x_C5, 0x_26, 0x_92,
		0x_60, 0x_13, 0x_4A, 0x_05, 0x_E9, 0x_7C, 0x_DC, 0x_BE, 0x_EA, 0x_83, 0x_36, 0x_07, 0x_A6, 0x_4E, 0x_B0,
		0x_88, 0x_AB, 0x_EF, 0x_DB, 0x_1A, 0x_FE, 0x_06, 0x_B2, 0x_6E, 0x_10, 0x_AC, 0x_F2, 0x_99, 0x_57, 0x_3D,
		0x_12, 0x_BA, 0x_91, 0x_7D, 0x_AE, 0x_F5, 0x_52, 0x_E3, 0x_4C, 0x_23, 0x_9E, 0x_5B, 0x_D7, 0x_E1, 0x_BD,
		0x_DF, 0x_32, 0x_70, 0x_DD, 0x_FC, 0x_50, 0x_A2, 0x_3F, 0x_5E, 0x_D0, 0x_B4, 0x_D9, 0x_AA, 0x_D2, 0x_BC,
		0x_F9, 0x_19, 0x_9C, 0x_A5, 0x_61, 0x_F8, 0x_74, 0x_58, 0x_B8, 0x_54, 0x_C4, 0x_73, 0x_35, 0x_4F, 0x_C6,
		0x_E5, 0x_F1, 0x_77, 0x_16, 0x_1F, 0x_9F, 0x_4B, 0x_72, 0x_D6, 0x_3B, 0x_F7, 0x_3A, 0x_45, 0x_8C, 0x_FF,
		0x_9B, 0x_A8, 0x_76, 0x_E2, 0x_47, 0x_14, 0x_D1, 0x_04, 0x_30, 0x_A3, 0x_E6, 0x_D3, 0x_C3, 0x_29, 0x_43,
		0x_51, 0x_CD, 0x_01, 0x_53, 0x_6D, 0x_DA, 0x_49, 0x_E7, 0x_CE, 0x_E4, 0x_8B, 0x_D4, 0x_67, 0x_E8, 0x_D8,
		0x_62, 0x_37, 0x_65, 0x_5D, 0x_90, 0x_ED, 0x_8D, 0x_41, 0x_81, 0x_B5, 0x_EC, 0x_42, 0x_0F, 0x_5A, 0x_18,
		0x_6F, 0x_95, 0x_71, 0x_CF, 0x_9D, 0x_69, 0x_87, 0x_B1, 0x_33, 0x_FD, 0x_AF, 0x_55, 0x_C1, 0x_5F, 0x_7F,
		0x_97, 0x_6A, 0x_08, 0x_93, 0x_44, 0x_4D, 0x_63, 0x_7A, 0x_A7, 0x_FB, 0x_03, 0x_59, 0x_84, 0x_15, 0x_7E,
		0x_1B, 0x_A1, 0x_F4, 0x_40, 0x_3E, 0x_24, 0x_21, 0x_D5, 0x_1C, 0x_82, 0x_DE, 0x_1D, 0x_FA, 0x_46, 0x_22,
		0x_39, 0x_B3, 0x_BF, 0x_2F, 0x_A0, 0x_BB, 0x_28, 0x_C7, 0x_CC, 0x_CB, 0x_3C, 0x_2E, 0x_96, 0x_56, 0x_86,
		0x_7B, 0x_F3, 0x_6B, 0x_02, 0x_17, 0x_78, 0x_11, 0x_0E, 0x_C2, 0x_2A, 0x_8E, 0x_75, 0x_94, 0x_E0, 0x_F0,
		0x_5C, 0x_EE, 0x_79, 0x_85, 0x_8A, 0x_89, 0x_C8, 0x_48, 0x_80, 0x_27, 0x_B6, 0x_38, 0x_B9, 0x_1E, 0x_34,
		0x_31, 0x_8F, 0x_EB, 0x_A9, 0x_C0, 0x_6C, 0x_9A,
	];

	helper(S, BASE, 76_409_321);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_232_031_890_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_232_031_890_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_75, 0x_5A, 0x_E7, 0x_39, 0x_0B, 0x_EB, 0x_87, 0x_A6, 0x_D9, 0x_61, 0x_BF, 0x_13, 0x_14,
		0x_E7, 0x_82, 0x_C8, 0x_3D, 0x_31, 0x_4A, 0x_37, 0x_26, 0x_67, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_29, 0x_0F, 0x_87, 0x_59, 0x_3E, 0x_45, 0x_38, 0x_7D, 0x_E6, 0x_15, 0x_01, 0x_86, 0x_A8, 0x_EC,
		0x_75, 0x_9E, 0x_B6, 0x_08, 0x_4E, 0x_79, 0x_D0, 0x_A6, 0x_DE, 0x_25, 0x_1F, 0x_A5, 0x_68, 0x_40, 0x_A1,
		0x_17, 0x_50, 0x_10, 0x_E0, 0x_3D, 0x_42, 0x_9A, 0x_49, 0x_3A, 0x_DD, 0x_90, 0x_A4, 0x_AF, 0x_D8, 0x_5E,
		0x_D2, 0x_70, 0x_1B, 0x_BA, 0x_F5, 0x_B0, 0x_6D, 0x_8D, 0x_6E, 0x_CA, 0x_1C, 0x_44, 0x_C7, 0x_BB, 0x_E7,
		0x_CB, 0x_88, 0x_F7, 0x_51, 0x_D7, 0x_84, 0x_7C, 0x_72, 0x_64, 0x_B3, 0x_36, 0x_A7, 0x_77, 0x_65, 0x_55,
		0x_93, 0x_47, 0x_8F, 0x_9C, 0x_B7, 0x_06, 0x_B4, 0x_1A, 0x_7B, 0x_F6, 0x_2E, 0x_C2, 0x_D6, 0x_E9, 0x_BD,
		0x_39, 0x_91, 0x_5D, 0x_53, 0x_92, 0x_F0, 0x_58, 0x_D3, 0x_5A, 0x_34, 0x_2F, 0x_37, 0x_1E, 0x_BF, 0x_F4,
		0x_46, 0x_43, 0x_4C, 0x_AB, 0x_9D, 0x_BE, 0x_54, 0x_74, 0x_B2, 0x_D9, 0x_F8, 0x_35, 0x_2C, 0x_02, 0x_57,
		0x_7A, 0x_99, 0x_05, 0x_EB, 0x_C0, 0x_30, 0x_95, 0x_4F, 0x_C1, 0x_48, 0x_89, 0x_E1, 0x_12, 0x_6C, 0x_F1,
		0x_8C, 0x_FC, 0x_FB, 0x_E5, 0x_82, 0x_24, 0x_03, 0x_CD, 0x_73, 0x_07, 0x_AD, 0x_C6, 0x_CC, 0x_5F, 0x_23,
		0x_C8, 0x_ED, 0x_22, 0x_DC, 0x_D5, 0x_4A, 0x_61, 0x_AC, 0x_F2, 0x_C4, 0x_AE, 0x_5C, 0x_B5, 0x_A2, 0x_C3,
		0x_CF, 0x_18, 0x_0E, 0x_3F, 0x_41, 0x_1D, 0x_D4, 0x_60, 0x_11, 0x_98, 0x_85, 0x_81, 0x_D1, 0x_E3, 0x_4B,
		0x_DB, 0x_96, 0x_DF, 0x_71, 0x_32, 0x_9F, 0x_8A, 0x_DA, 0x_76, 0x_3C, 0x_63, 0x_16, 0x_CE, 0x_6F, 0x_BC,
		0x_EF, 0x_67, 0x_13, 0x_B9, 0x_FE, 0x_EA, 0x_A0, 0x_97, 0x_7F, 0x_31, 0x_6A, 0x_B8, 0x_80, 0x_F9, 0x_C5,
		0x_3B, 0x_EE, 0x_33, 0x_B1, 0x_FF, 0x_A9, 0x_7E, 0x_56, 0x_66, 0x_69, 0x_19, 0x_6B, 0x_E4, 0x_28, 0x_04,
		0x_FA, 0x_F3, 0x_26, 0x_2A, 0x_C9, 0x_8B, 0x_78, 0x_5B, 0x_4D, 0x_27, 0x_A3, 0x_21, 0x_52, 0x_9B, 0x_14,
		0x_8E, 0x_E2, 0x_AA, 0x_E8, 0x_FD, 0x_83, 0x_62,
	];

	helper(S, BASE, 232_031_890);
}
// endregion
// region: s_has_signs_and_zeros_and_6_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_6_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC,
		0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC,
		0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_6C, 0x_6C, 0x_AC, 0x_EB, 0x_6C, 0x_6C, 0x_6C, 0x_6C,
		0x_AC, 0x_6C, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_6C, 0x_AC, 0x_AC, 0x_AC, 0x_AC,
		0x_AC, 0x_6C, 0x_6C, 0x_6C, 0x_AC, 0x_6C, 0x_6C, 0x_AC, 0x_6C, 0x_AC, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_AC,
		0x_AC,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_6C,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_signs_and_zeros_and_20_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_20_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_BA, 0x_D1, 0x_BA, 0x_D1, 0x_D1,
		0x_C7, 0x_BA, 0x_D1, 0x_BA, 0x_D1, 0x_BA, 0x_D1, 0x_BA, 0x_D1, 0x_D1, 0x_D1, 0x_BA, 0x_BA, 0x_BA, 0x_D1,
		0x_BA, 0x_D1, 0x_BA, 0x_D1, 0x_D1, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_D1, 0x_BA,
	];

	helper(S, BASE, 20);
}
// endregion
// region: s_has_signs_and_zeros_and_561_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_561_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_6E, 0x_6E, 0x_6E,
		0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E,
		0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_33, 0x_6E, 0x_6E, 0x_6E, 0x_33, 0x_33, 0x_6E, 0x_6E, 0x_6E,
		0x_33, 0x_FF, 0x_6E, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_6E, 0x_33, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_33,
	];

	helper(S, BASE, 561);
}
// endregion
// region: s_has_signs_and_zeros_and_7_104_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_7_104_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D,
		0x_94, 0x_94, 0x_6D, 0x_94, 0x_94, 0x_94, 0x_94, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_53, 0x_6D,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_94,
	];

	helper(S, BASE, 7_104);
}
// endregion
// region: s_has_signs_and_zeros_and_42_736_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_42_736_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_71, 0x_D8, 0x_71, 0x_D8, 0x_D8, 0x_71, 0x_71, 0x_D8, 0x_71, 0x_71, 0x_71, 0x_71, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D1, 0x_71, 0x_71, 0x_D8, 0x_71, 0x_D8, 0x_71, 0x_D8, 0x_71, 0x_71, 0x_D8, 0x_D8,
		0x_71, 0x_D8, 0x_71, 0x_D8, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_71,
	];

	helper(S, BASE, 42_736);
}
// endregion
// region: s_has_signs_and_zeros_and_550_456_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_550_456_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_B7, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_B7, 0x_B7, 0x_DA, 0x_DA, 0x_B7, 0x_B7, 0x_DA, 0x_DA, 0x_DA, 0x_B7, 0x_B7, 0x_B7, 0x_DA, 0x_DA, 0x_DA,
		0x_FE, 0x_B7, 0x_B7, 0x_DA, 0x_B7, 0x_DA, 0x_B7, 0x_B7, 0x_DA, 0x_DA, 0x_B7, 0x_DA, 0x_B7, 0x_B7, 0x_DA,
		0x_B7, 0x_B7, 0x_B7, 0x_DA, 0x_B7, 0x_B7, 0x_DA, 0x_B7, 0x_B7, 0x_B7, 0x_DA, 0x_B7, 0x_B7, 0x_B7, 0x_DA,
		0x_B7, 0x_B7, 0x_B7, 0x_DA, 0x_DA, 0x_B7, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_B7,
	];

	helper(S, BASE, 550_456);
}
// endregion
// region: s_has_signs_and_zeros_and_1_305_414_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_1_305_414_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7,
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_2C, 0x_B7,
		0x_B7, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_B7, 0x_2C, 0x_B7, 0x_2C, 0x_2C, 0x_B7, 0x_2C, 0x_B7, 0x_B7,
		0x_B7, 0x_2C, 0x_2C, 0x_B7, 0x_57, 0x_2C, 0x_2C, 0x_B7, 0x_2C, 0x_B7, 0x_2C, 0x_2C, 0x_2C, 0x_B7, 0x_2C,
		0x_B7, 0x_B7, 0x_2C, 0x_B7, 0x_B7, 0x_2C, 0x_B7, 0x_2C, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_2C,
	];

	helper(S, BASE, 1_305_414);
}
// endregion
// region: s_has_signs_and_zeros_and_93_187_748_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_93_187_748_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_92, 0x_DE, 0x_92, 0x_92, 0x_DE, 0x_DE, 0x_DE, 0x_92, 0x_92,
		0x_DE, 0x_92, 0x_92, 0x_92, 0x_92, 0x_DE, 0x_92, 0x_92, 0x_92, 0x_DE, 0x_92, 0x_DE, 0x_92, 0x_DE, 0x_DE,
		0x_92, 0x_DE, 0x_DE, 0x_02, 0x_92, 0x_92, 0x_92, 0x_DE, 0x_92, 0x_DE, 0x_92, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_92,
	];

	helper(S, BASE, 93_187_748);
}
// endregion
// region: s_has_signs_and_zeros_and_577_416_222_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_577_416_222_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_4C, 0x_AA, 0x_AA, 0x_AA, 0x_4C, 0x_AA, 0x_AA, 0x_4C, 0x_4C, 0x_AA, 0x_4C,
		0x_AA, 0x_4C, 0x_AA, 0x_4C, 0x_AA, 0x_4C, 0x_AA, 0x_4C, 0x_4C, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_AA, 0x_E1, 0x_AA, 0x_AA, 0x_AA, 0x_4C, 0x_4C, 0x_AA, 0x_4C, 0x_AA, 0x_AA, 0x_AA,
		0x_4C, 0x_4C, 0x_4C, 0x_AA, 0x_4C, 0x_AA, 0x_AA, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_AA, 0x_AA, 0x_4C,
		0x_4C, 0x_4C, 0x_AA, 0x_AA, 0x_AA, 0x_4C, 0x_4C, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_4C,
	];

	helper(S, BASE, 577_416_222);
}
// endregion
// region: s_has_signs_and_zeros_and_8_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_8_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_12, 0x_12, 0x_69,
		0x_5C, 0x_5C, 0x_5C, 0x_12, 0x_A8, 0x_A8, 0x_12, 0x_5C, 0x_A8, 0x_5C, 0x_A8, 0x_5C, 0x_5C, 0x_5C, 0x_12,
		0x_12, 0x_A8, 0x_A8, 0x_5C, 0x_A8, 0x_12, 0x_12, 0x_5C, 0x_5C, 0x_12, 0x_12, 0x_12, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_A8, 0x_12,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_signs_and_zeros_and_23_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_23_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_C7,
		0x_74, 0x_C7, 0x_3E, 0x_74, 0x_C7, 0x_C7, 0x_C7, 0x_74, 0x_74, 0x_74, 0x_74, 0x_21, 0x_74, 0x_21, 0x_74,
		0x_74, 0x_21, 0x_C7, 0x_C7, 0x_21, 0x_21, 0x_C7,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_74, 0x_C7,
	];

	helper(S, BASE, 23);
}
// endregion
// region: s_has_signs_and_zeros_and_526_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_526_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49,
		0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49,
		0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_27,
		0x_49, 0x_77, 0x_77, 0x_77, 0x_77, 0x_AA, 0x_27, 0x_77, 0x_27, 0x_49, 0x_49, 0x_27, 0x_49, 0x_77, 0x_27,
		0x_49, 0x_27, 0x_49, 0x_49, 0x_27, 0x_49, 0x_77, 0x_27, 0x_27, 0x_27, 0x_49, 0x_27, 0x_27, 0x_27, 0x_49,
		0x_77, 0x_49, 0x_27, 0x_27, 0x_27, 0x_77, 0x_27, 0x_77, 0x_77, 0x_27, 0x_27, 0x_49, 0x_27, 0x_49, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_77, 0x_27,
	];

	helper(S, BASE, 526);
}
// endregion
// region: s_has_signs_and_zeros_and_1_196_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_1_196_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49,
		0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49,
		0x_49, 0x_49, 0x_49, 0x_49, 0x_ED, 0x_ED, 0x_8E, 0x_8E, 0x_49, 0x_8E, 0x_8E, 0x_8D, 0x_8E, 0x_ED, 0x_8E,
		0x_49, 0x_49, 0x_ED, 0x_ED, 0x_8E, 0x_8E, 0x_49, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_ED, 0x_8E,
	];

	helper(S, BASE, 1_196);
}
// endregion
// region: s_has_signs_and_zeros_and_55_742_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_55_742_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF,
		0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_A5, 0x_A5, 0x_11, 0x_11, 0x_11, 0x_11, 0x_BF, 0x_11, 0x_11, 0x_A5,
		0x_3E, 0x_A5, 0x_11, 0x_A5, 0x_A5, 0x_BF, 0x_A5, 0x_BF, 0x_11, 0x_BF, 0x_A5, 0x_A5, 0x_BF, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_A5, 0x_11, 0x_11, 0x_11, 0x_11, 0x_A5, 0x_11, 0x_11, 0x_11, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_11, 0x_A5,
	];

	helper(S, BASE, 55_742);
}
// endregion
// region: s_has_signs_and_zeros_and_619_359_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_619_359_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_C4, 0x_32,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_32, 0x_C4, 0x_65, 0x_C4, 0x_32, 0x_65, 0x_32, 0x_61, 0x_32, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_C4, 0x_65,
	];

	helper(S, BASE, 619_359);
}
// endregion
// region: s_has_signs_and_zeros_and_5_491_973_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_5_491_973_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_3E, 0x_A9,
		0x_3E, 0x_3E, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_3E, 0x_B0, 0x_A9, 0x_3E, 0x_A9, 0x_B0, 0x_64, 0x_A9,
		0x_B0, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_B0, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_A9, 0x_A9, 0x_3E,
		0x_3E, 0x_A9, 0x_B0, 0x_B0, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_3E, 0x_B0,
	];

	helper(S, BASE, 5_491_973);
}
// endregion
// region: s_has_signs_and_zeros_and_97_015_673_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_97_015_673_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_07, 0x_48, 0x_07, 0x_48, 0x_07, 0x_F7, 0x_F7,
		0x_07, 0x_07, 0x_07, 0x_48, 0x_F7, 0x_F7, 0x_F7, 0x_48, 0x_48, 0x_07, 0x_F3, 0x_07, 0x_48, 0x_F7, 0x_48,
		0x_48, 0x_48, 0x_F7, 0x_F7, 0x_07, 0x_48, 0x_48, 0x_07, 0x_07, 0x_48, 0x_F7, 0x_07, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_F7, 0x_07,
	];

	helper(S, BASE, 97_015_673);
}
// endregion
// region: s_has_signs_and_zeros_and_586_506_830_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_586_506_830_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_75, 0x_9C,
		0x_75, 0x_9C, 0x_75, 0x_9C, 0x_9C, 0x_75, 0x_75, 0x_FF, 0x_9C, 0x_FF, 0x_FF, 0x_9C, 0x_75, 0x_80, 0x_9C,
		0x_75, 0x_FF, 0x_9C, 0x_FF, 0x_9C, 0x_9C, 0x_75, 0x_9C, 0x_75, 0x_FF, 0x_FF, 0x_75, 0x_75, 0x_FF, 0x_9C,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_9C, 0x_75,
	];

	helper(S, BASE, 586_506_830);
}
// endregion
// region: s_has_signs_and_zeros_and_6_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_6_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B,
		0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B,
		0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_E1, 0x_E1, 0x_05, 0x_DF,
		0x_7B, 0x_E1, 0x_E1, 0x_E1, 0x_2F, 0x_2F, 0x_DF, 0x_DF, 0x_34, 0x_34, 0x_E1, 0x_34, 0x_34, 0x_2F, 0x_34,
		0x_DF, 0x_7B, 0x_34, 0x_34, 0x_2F, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_7B, 0x_34, 0x_DF, 0x_34, 0x_2F, 0x_34,
		0x_E1, 0x_E1, 0x_34, 0x_34, 0x_34, 0x_2F, 0x_7B, 0x_7B, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_E1, 0x_34, 0x_2F, 0x_DF,
	];

	helper(S, BASE, 6);
}
// endregion
// region: s_has_signs_and_zeros_and_47_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_47_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_04,
		0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04,
		0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04,
		0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_88, 0x_EA, 0x_7B, 0x_C8, 0x_04, 0x_7B,
		0x_04, 0x_88, 0x_88, 0x_04, 0x_EA, 0x_8D, 0x_88, 0x_04, 0x_04, 0x_04, 0x_EA, 0x_8D, 0x_88, 0x_7B, 0x_EA,
		0x_EA, 0x_88, 0x_8D, 0x_8D, 0x_7B, 0x_88, 0x_7B, 0x_8D, 0x_04, 0x_EA, 0x_88, 0x_88, 0x_8D, 0x_EA, 0x_7B,
		0x_EA, 0x_88, 0x_7B, 0x_04, 0x_04, 0x_88, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_88, 0x_7B, 0x_8D, 0x_EA,
	];

	helper(S, BASE, 47);
}
// endregion
// region: s_has_signs_and_zeros_and_202_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_202_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_A2,
		0x_07, 0x_E3, 0x_4D, 0x_B9, 0x_07, 0x_4D, 0x_E3, 0x_4D, 0x_32, 0x_32, 0x_32, 0x_4D, 0x_E3, 0x_4D, 0x_32,
		0x_07, 0x_4D, 0x_E3, 0x_07, 0x_E3, 0x_A2, 0x_A2, 0x_07, 0x_E3, 0x_4D, 0x_32, 0x_E3, 0x_07, 0x_32, 0x_A2,
		0x_32, 0x_E3, 0x_E3, 0x_A2, 0x_32, 0x_A2, 0x_A2, 0x_4D, 0x_4D,
	];
	const BASE: &[u8] = &[
		0x_E3, 0x_A2, 0x_4D, 0x_07, 0x_32,
	];

	helper(S, BASE, 202);
}
// endregion
// region: s_has_signs_and_zeros_and_1_812_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_1_812_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2A, 0x_AB, 0x_14, 0x_AB, 0x_AB, 0x_AB,
		0x_66, 0x_31, 0x_BF, 0x_31, 0x_2A, 0x_14, 0x_2A, 0x_31, 0x_AB, 0x_BF, 0x_2A, 0x_31, 0x_AB, 0x_AB, 0x_AB,
		0x_31, 0x_2A, 0x_BF, 0x_2A, 0x_14, 0x_31, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_BF, 0x_AB, 0x_31, 0x_14,
	];

	helper(S, BASE, 1_812);
}
// endregion
// region: s_has_signs_and_zeros_and_81_413_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_81_413_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_59, 0x_59,
		0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59,
		0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_D4, 0x_59, 0x_D4, 0x_59, 0x_D4, 0x_D4, 0x_FE, 0x_4D,
		0x_27, 0x_4D, 0x_FE, 0x_D4, 0x_D4, 0x_4D, 0x_D4, 0x_91, 0x_59, 0x_4D, 0x_59, 0x_4D, 0x_91, 0x_91, 0x_D4,
		0x_59, 0x_91, 0x_91, 0x_4D, 0x_D4, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_D4, 0x_FE, 0x_4D, 0x_91,
	];

	helper(S, BASE, 81_413);
}
// endregion
// region: s_has_signs_and_zeros_and_939_262_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_939_262_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26,
		0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26,
		0x_75, 0x_75, 0x_26, 0x_26, 0x_75, 0x_03, 0x_26, 0x_75, 0x_75, 0x_6D, 0x_F9, 0x_75, 0x_03, 0x_26, 0x_70,
		0x_70, 0x_75, 0x_F9, 0x_75, 0x_70, 0x_26, 0x_F9, 0x_70, 0x_75, 0x_70, 0x_75, 0x_75, 0x_75, 0x_26, 0x_03,
		0x_F9, 0x_03, 0x_03, 0x_75, 0x_75, 0x_26, 0x_26, 0x_70, 0x_03, 0x_03, 0x_75, 0x_03, 0x_70, 0x_26, 0x_F9,
		0x_03, 0x_F9, 0x_75, 0x_F9, 0x_F9, 0x_03, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_F9, 0x_75, 0x_70, 0x_03,
	];

	helper(S, BASE, 939_262);
}
// endregion
// region: s_has_signs_and_zeros_and_6_438_306_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_6_438_306_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_E2, 0x_E2,
		0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_68, 0x_75, 0x_61,
		0x_61, 0x_E2, 0x_75, 0x_75, 0x_61, 0x_75, 0x_75, 0x_8A, 0x_61, 0x_75, 0x_61, 0x_68, 0x_75, 0x_3D, 0x_68,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_3D, 0x_E2, 0x_75, 0x_3D, 0x_E2, 0x_61, 0x_3D, 0x_68, 0x_68, 0x_68, 0x_61,
		0x_E2, 0x_3D, 0x_3D, 0x_75, 0x_75, 0x_E2, 0x_68, 0x_3D, 0x_68, 0x_3D, 0x_61, 0x_3D, 0x_61, 0x_75, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_75, 0x_61, 0x_68, 0x_3D,
	];

	helper(S, BASE, 6_438_306);
}
// endregion
// region: s_has_signs_and_zeros_and_63_667_735_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_63_667_735_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33,
		0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_23, 0x_23, 0x_D6,
		0x_D6, 0x_88, 0x_88, 0x_95, 0x_95, 0x_23, 0x_88, 0x_D6, 0x_33, 0x_50, 0x_23, 0x_D6, 0x_88, 0x_23, 0x_D6,
		0x_D6, 0x_95, 0x_D6, 0x_23, 0x_23, 0x_33, 0x_D6, 0x_33, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_23, 0x_D6, 0x_95, 0x_88,
	];

	helper(S, BASE, 63_667_735);
}
// endregion
// region: s_has_signs_and_zeros_and_978_516_203_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_978_516_203_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0,
		0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_DE, 0x_E0, 0x_E0, 0x_1D, 0x_E0, 0x_E0, 0x_E0, 0x_E0,
		0x_E0, 0x_DE, 0x_2A, 0x_E0, 0x_2A, 0x_24, 0x_2A, 0x_DE, 0x_DE, 0x_1D, 0x_E0, 0x_E0, 0x_77, 0x_DE, 0x_DE,
		0x_DE, 0x_E0, 0x_77, 0x_DE, 0x_77, 0x_1D, 0x_DE, 0x_1D, 0x_E0, 0x_1D, 0x_DE, 0x_E0, 0x_E0, 0x_DE, 0x_E0,
		0x_77, 0x_77, 0x_2A, 0x_DE, 0x_77, 0x_2A, 0x_77, 0x_77, 0x_77, 0x_E0, 0x_77, 0x_77, 0x_77, 0x_DE, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_1D, 0x_77, 0x_2A, 0x_DE,
	];

	helper(S, BASE, 978_516_203);
}
// endregion
// region: s_has_signs_and_zeros_and_4_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_4_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26,
		0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26,
		0x_26, 0x_26, 0x_6D, 0x_8A, 0x_CA, 0x_DD, 0x_B2, 0x_6D, 0x_26, 0x_B2, 0x_CA, 0x_28, 0x_CA, 0x_6D, 0x_6D,
		0x_CA, 0x_28, 0x_6D, 0x_50, 0x_CA, 0x_26, 0x_26, 0x_6D, 0x_CA, 0x_28, 0x_50, 0x_B2, 0x_6D, 0x_DD, 0x_B2,
		0x_DD, 0x_DD, 0x_50, 0x_50, 0x_50, 0x_6D, 0x_26, 0x_50, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_B2, 0x_CA, 0x_DD, 0x_6D, 0x_28, 0x_50,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_signs_and_zeros_and_20_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_20_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_65, 0x_65, 0x_65, 0x_65, 0x_D9, 0x_D6, 0x_16, 0x_4A, 0x_65, 0x_65, 0x_31, 0x_4A, 0x_D9, 0x_65,
		0x_4A, 0x_4A, 0x_E6, 0x_D9, 0x_D9, 0x_4A, 0x_BF, 0x_E6, 0x_D6, 0x_BF, 0x_D9, 0x_E6, 0x_E6, 0x_D6, 0x_31,
		0x_4A, 0x_65, 0x_4A, 0x_65, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_65, 0x_E6, 0x_D9, 0x_31, 0x_BF, 0x_4A, 0x_D6,
	];

	helper(S, BASE, 20);
}
// endregion
// region: s_has_signs_and_zeros_and_114_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_114_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C,
		0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_88, 0x_88, 0x_88,
		0x_CF, 0x_6C, 0x_43, 0x_D6, 0x_43, 0x_43, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_6C, 0x_70, 0x_88, 0x_43, 0x_D6, 0x_1E, 0x_B9,
	];

	helper(S, BASE, 114);
}
// endregion
// region: s_has_signs_and_zeros_and_5_061_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_5_061_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_86, 0x_03,
		0x_17, 0x_86, 0x_03, 0x_B7, 0x_17, 0x_40, 0x_4D, 0x_40, 0x_B4, 0x_B4, 0x_86, 0x_4D, 0x_4D, 0x_4D, 0x_86,
		0x_03, 0x_17, 0x_4D, 0x_86, 0x_E2, 0x_4D, 0x_B4, 0x_03, 0x_86, 0x_E2, 0x_4D, 0x_E2, 0x_B4, 0x_4D, 0x_40,
		0x_E2, 0x_86, 0x_17, 0x_4D, 0x_4D, 0x_03, 0x_4D,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_E2, 0x_86, 0x_40, 0x_4D, 0x_17, 0x_B4,
	];

	helper(S, BASE, 5_061);
}
// endregion
// region: s_has_signs_and_zeros_and_76_230_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_76_230_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2,
		0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2,
		0x_B2, 0x_B2, 0x_9C, 0x_A2, 0x_3D, 0x_BC, 0x_3D, 0x_B2, 0x_98, 0x_42, 0x_9C, 0x_A2, 0x_42, 0x_9C, 0x_42,
		0x_BC, 0x_BC, 0x_A2, 0x_34, 0x_A2, 0x_3D, 0x_34, 0x_42, 0x_34, 0x_BC, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_B2, 0x_BC, 0x_34, 0x_A2, 0x_9C, 0x_3D, 0x_42,
	];

	helper(S, BASE, 76_230);
}
// endregion
// region: s_has_signs_and_zeros_and_952_973_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_952_973_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70,
		0x_70, 0x_70, 0x_70, 0x_70, 0x_4C, 0x_4C, 0x_70, 0x_3B, 0x_35, 0x_68, 0x_3E, 0x_70, 0x_61, 0x_3B, 0x_70,
		0x_3E, 0x_35, 0x_35, 0x_70, 0x_35, 0x_35, 0x_70, 0x_3E, 0x_35, 0x_3B, 0x_3E, 0x_68, 0x_99, 0x_4C, 0x_68,
		0x_35, 0x_70, 0x_3B, 0x_3E, 0x_70, 0x_4C, 0x_3E, 0x_70, 0x_35, 0x_99, 0x_35, 0x_3E, 0x_3E, 0x_3E, 0x_4C,
		0x_3B, 0x_3B, 0x_3B, 0x_70, 0x_4C,
	];
	const BASE: &[u8] = &[
		0x_70, 0x_4C, 0x_68, 0x_3E, 0x_3B, 0x_99, 0x_35,
	];

	helper(S, BASE, 952_973);
}
// endregion
// region: s_has_signs_and_zeros_and_9_908_595_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_9_908_595_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F,
		0x_2F, 0x_2F, 0x_2F, 0x_AF, 0x_89, 0x_2F, 0x_AF, 0x_C6, 0x_B8, 0x_2F, 0x_AF, 0x_9C, 0x_4E, 0x_89, 0x_89,
		0x_5F, 0x_89, 0x_AF, 0x_B8, 0x_89, 0x_2F, 0x_89, 0x_B8, 0x_AF, 0x_9C, 0x_AF, 0x_2F, 0x_AF, 0x_5F, 0x_B8,
		0x_9C, 0x_AF, 0x_89, 0x_B8, 0x_5F, 0x_C6, 0x_2F, 0x_C6, 0x_89, 0x_2F, 0x_2F, 0x_B8, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_AF, 0x_5F, 0x_C6, 0x_9C, 0x_89, 0x_B8,
	];

	helper(S, BASE, 9_908_595);
}
// endregion
// region: s_has_signs_and_zeros_and_79_638_608_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_79_638_608_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F,
		0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F,
		0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_73, 0x_58, 0x_7B, 0x_A3, 0x_58,
		0x_72, 0x_58, 0x_03, 0x_7B, 0x_0F, 0x_BF, 0x_A3, 0x_03, 0x_73, 0x_A3, 0x_73, 0x_03, 0x_A3, 0x_7B, 0x_72,
		0x_7B, 0x_7B, 0x_73, 0x_03, 0x_0F, 0x_03, 0x_0F, 0x_73, 0x_73, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_73, 0x_72, 0x_03, 0x_A3, 0x_7B, 0x_58,
	];

	helper(S, BASE, 79_638_608);
}
// endregion
// region: s_has_signs_and_zeros_and_787_232_320_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_787_232_320_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3,
		0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_1A, 0x_3E, 0x_06, 0x_06, 0x_2E,
		0x_1A, 0x_06, 0x_3E, 0x_2E, 0x_3E, 0x_A3, 0x_F0, 0x_AF, 0x_A3, 0x_94, 0x_1A, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_AF, 0x_1A, 0x_06, 0x_94, 0x_3E, 0x_2E,
	];

	helper(S, BASE, 787_232_320);
}
// endregion
// region: s_has_signs_and_zeros_and_8_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_8_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_3E, 0x_33,
		0x_54, 0x_6B, 0x_52, 0x_17, 0x_3E, 0x_A8, 0x_4D, 0x_54, 0x_A8, 0x_17, 0x_17, 0x_B9, 0x_4D, 0x_4D, 0x_54,
		0x_84, 0x_3E, 0x_6A, 0x_D6, 0x_84, 0x_17, 0x_A8, 0x_3E, 0x_52, 0x_84, 0x_4D, 0x_4D, 0x_6B, 0x_17, 0x_4D,
		0x_54, 0x_D6, 0x_52, 0x_6A, 0x_6A, 0x_D6, 0x_6B, 0x_84,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_6A, 0x_52, 0x_17, 0x_4D, 0x_84, 0x_A8, 0x_B9, 0x_3E, 0x_D6, 0x_6B,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_signs_and_zeros_and_30_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_30_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_A3, 0x_A3,
		0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3,
		0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3,
		0x_A3, 0x_C4, 0x_72, 0x_3E, 0x_27, 0x_D5, 0x_D5, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_51, 0x_C4, 0x_27, 0x_EE, 0x_92, 0x_D5, 0x_F2, 0x_72, 0x_B1, 0x_7E,
	];

	helper(S, BASE, 30);
}
// endregion
// region: s_has_signs_and_zeros_and_730_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_730_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF,
		0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF,
		0x_BF, 0x_BF, 0x_BF, 0x_77, 0x_BF, 0x_D7, 0x_2E, 0x_BF, 0x_D7, 0x_06, 0x_70, 0x_BF, 0x_77, 0x_21, 0x_57,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_06, 0x_24, 0x_70, 0x_D7, 0x_57, 0x_77, 0x_65, 0x_23, 0x_FE, 0x_21,
	];

	helper(S, BASE, 730);
}
// endregion
// region: s_has_signs_and_zeros_and_8_913_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_8_913_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF,
		0x_AF, 0x_30, 0x_73, 0x_73, 0x_57, 0x_07, 0x_7E, 0x_98, 0x_FE, 0x_AF, 0x_BC, 0x_7E, 0x_BC, 0x_73, 0x_BC,
		0x_11, 0x_BC, 0x_99, 0x_AF, 0x_AF, 0x_FE, 0x_73, 0x_11, 0x_57, 0x_99, 0x_BC, 0x_63,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_63, 0x_11, 0x_57, 0x_BC, 0x_7E, 0x_30, 0x_73, 0x_98, 0x_99, 0x_FE,
	];

	helper(S, BASE, 8_913);
}
// endregion
// region: s_has_signs_and_zeros_and_26_653_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_26_653_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_47, 0x_23, 0x_5C, 0x_66, 0x_5C, 0x_C9, 0x_3A, 0x_3A, 0x_F2, 0x_F2, 0x_5C, 0x_5C, 0x_30, 0x_3A,
		0x_23, 0x_F2, 0x_5C, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_47, 0x_CB, 0x_66, 0x_F2, 0x_3A, 0x_30, 0x_9A, 0x_32, 0x_23, 0x_BE,
	];

	helper(S, BASE, 26_653);
}
// endregion
// region: s_has_signs_and_zeros_and_518_863_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_518_863_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_5A, 0x_29, 0x_BB, 0x_E8, 0x_02, 0x_BB, 0x_42, 0x_29, 0x_BB, 0x_AA, 0x_4C,
		0x_78, 0x_AA, 0x_4C, 0x_E8, 0x_BB, 0x_78, 0x_02, 0x_5A, 0x_E8, 0x_4C, 0x_29, 0x_02, 0x_BB, 0x_78, 0x_23,
		0x_11, 0x_11, 0x_E8, 0x_4C, 0x_BB, 0x_23, 0x_23, 0x_E8, 0x_78, 0x_DB, 0x_4C, 0x_78, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_02, 0x_29, 0x_5A, 0x_BB, 0x_4C, 0x_AA, 0x_DB, 0x_78, 0x_E8, 0x_11,
	];

	helper(S, BASE, 518_863);
}
// endregion
// region: s_has_signs_and_zeros_and_6_833_124_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_6_833_124_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66,
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_80, 0x_8C, 0x_F2, 0x_53, 0x_8C, 0x_FF,
		0x_FF, 0x_0E, 0x_7C, 0x_9B, 0x_8C, 0x_1B, 0x_FF, 0x_8C, 0x_FF, 0x_A1, 0x_A1, 0x_80, 0x_F2, 0x_9E, 0x_F2,
		0x_9E, 0x_80, 0x_FF, 0x_9B, 0x_80, 0x_8C, 0x_7C, 0x_7C, 0x_9E, 0x_A1, 0x_66, 0x_80, 0x_9E, 0x_7C, 0x_53,
		0x_F2, 0x_FF, 0x_FF, 0x_9E, 0x_9B, 0x_F2, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_FF, 0x_9E, 0x_80, 0x_F2, 0x_9B, 0x_7C, 0x_53, 0x_1B, 0x_8C, 0x_A1,
	];

	helper(S, BASE, 6_833_124);
}
// endregion
// region: s_has_signs_and_zeros_and_79_906_275_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_79_906_275_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_40, 0x_6A, 0x_6A, 0x_6A, 0x_80, 0x_E3, 0x_40, 0x_E9, 0x_16,
		0x_4F, 0x_40, 0x_4C, 0x_E7, 0x_E3, 0x_E7, 0x_BD, 0x_80, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_6A, 0x_D4, 0x_BD, 0x_40, 0x_E7, 0x_06, 0x_80, 0x_E3, 0x_E9, 0x_4F,
	];

	helper(S, BASE, 79_906_275);
}
// endregion
// region: s_has_signs_and_zeros_and_123_607_736_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_123_607_736_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_A7,
		0x_DC, 0x_18, 0x_F3, 0x_A7, 0x_DC, 0x_F3, 0x_81, 0x_FE, 0x_82, 0x_DC, 0x_F5, 0x_9E, 0x_DC, 0x_81, 0x_81,
		0x_25, 0x_DC, 0x_A5, 0x_DC, 0x_18, 0x_A7, 0x_25, 0x_A7, 0x_59, 0x_18, 0x_F5, 0x_82, 0x_9E, 0x_F5, 0x_F5,
		0x_F5, 0x_DC, 0x_9E, 0x_F5, 0x_18, 0x_A7, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_F5, 0x_9E, 0x_DC, 0x_A5, 0x_F3, 0x_A7, 0x_82, 0x_18, 0x_59, 0x_81,
	];

	helper(S, BASE, 123_607_736);
}
// endregion
// region: s_has_signs_and_zeros_and_8_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_8_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A,
		0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_A6, 0x_D7, 0x_D6, 0x_51, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_78, 0x_7B, 0x_4C, 0x_6F, 0x_6B, 0x_4A, 0x_D6, 0x_A6, 0x_E0, 0x_5C, 0x_BC, 0x_51,
	];

	helper(S, BASE, 8);
}
// endregion
// region: s_has_signs_and_zeros_and_43_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_43_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5,
		0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_FB, 0x_BF, 0x_47, 0x_85, 0x_FC,
		0x_3B, 0x_CD, 0x_EB, 0x_BF, 0x_FC, 0x_BF, 0x_2A, 0x_FC, 0x_7B, 0x_ED, 0x_3A, 0x_E5, 0x_CD, 0x_A7, 0x_FC,
		0x_BF, 0x_3B, 0x_ED, 0x_A7, 0x_ED, 0x_ED, 0x_3B, 0x_3A, 0x_3B, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_ED, 0x_3B, 0x_FB, 0x_BF, 0x_FC, 0x_7B, 0x_3A, 0x_CD, 0x_85, 0x_2A, 0x_A7, 0x_EB,
	];

	helper(S, BASE, 43);
}
// endregion
// region: s_has_signs_and_zeros_and_720_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_720_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_48, 0x_85, 0x_01, 0x_D8, 0x_E2, 0x_85, 0x_4A, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_1D, 0x_10, 0x_85, 0x_48, 0x_01, 0x_99, 0x_4A, 0x_BF, 0x_26, 0x_12, 0x_E2, 0x_9F,
	];

	helper(S, BASE, 720);
}
// endregion
// region: s_has_signs_and_zeros_and_6_545_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_6_545_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_44, 0x_08, 0x_D3, 0x_F1, 0x_83, 0x_6A, 0x_CD,
		0x_D8, 0x_CD, 0x_B8, 0x_54, 0x_D3, 0x_B8, 0x_F1, 0x_75, 0x_B8, 0x_B8, 0x_08, 0x_6A, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_60, 0x_44, 0x_5D, 0x_41, 0x_CD, 0x_F1, 0x_54, 0x_D8, 0x_D3, 0x_6A, 0x_B8, 0x_08,
	];

	helper(S, BASE, 6_545);
}
// endregion
// region: s_has_signs_and_zeros_and_42_828_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_42_828_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3,
		0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3,
		0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_D3, 0x_80, 0x_9C, 0x_9C, 0x_4A, 0x_9C, 0x_5B, 0x_80,
		0x_B3, 0x_DD, 0x_DD, 0x_30, 0x_4A, 0x_43, 0x_80, 0x_E5, 0x_D8, 0x_9C, 0x_80, 0x_43, 0x_4A, 0x_61, 0x_DD,
		0x_43, 0x_B3, 0x_D3, 0x_61, 0x_B3, 0x_D8, 0x_9C, 0x_4A, 0x_61, 0x_D8, 0x_DD, 0x_D8, 0x_B3, 0x_9C, 0x_DD,
		0x_4A, 0x_62, 0x_DD, 0x_30, 0x_15, 0x_DD, 0x_D8, 0x_D3, 0x_43, 0x_D8, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_80, 0x_30, 0x_D8, 0x_15, 0x_4A, 0x_9C, 0x_DD, 0x_43, 0x_B3, 0x_62, 0x_E5, 0x_61,
	];

	helper(S, BASE, 42_828);
}
// endregion
// region: s_has_signs_and_zeros_and_633_373_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_633_373_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93,
		0x_93, 0x_4E, 0x_3C, 0x_B3, 0x_BE, 0x_1C, 0x_93, 0x_21, 0x_BE, 0x_4E, 0x_BE, 0x_F8, 0x_46, 0x_94, 0x_68,
		0x_4E,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_4E, 0x_B3, 0x_BE, 0x_94, 0x_57, 0x_F8, 0x_46, 0x_68, 0x_3C, 0x_1C, 0x_81, 0x_88,
	];

	helper(S, BASE, 633_373);
}
// endregion
// region: s_has_signs_and_zeros_and_1_841_235_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_1_841_235_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_B7, 0x_26, 0x_37, 0x_01,
		0x_8F, 0x_37, 0x_4C, 0x_95, 0x_DE, 0x_8F, 0x_4A, 0x_B7, 0x_61, 0x_B7, 0x_B7, 0x_01, 0x_26, 0x_C4, 0x_8F,
		0x_DE, 0x_B7, 0x_61, 0x_4A, 0x_B7, 0x_37, 0x_26, 0x_4A, 0x_95, 0x_37, 0x_9C, 0x_01, 0x_DE, 0x_26, 0x_8F,
		0x_C4, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_95, 0x_DE, 0x_9C, 0x_B7, 0x_68, 0x_37, 0x_C4, 0x_61, 0x_4A, 0x_04, 0x_8F, 0x_26,
	];

	helper(S, BASE, 1_841_235);
}
// endregion
// region: s_has_signs_and_zeros_and_47_338_946_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_47_338_946_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_8F, 0x_3E, 0x_A9, 0x_A9, 0x_FF, 0x_FF, 0x_D9, 0x_7B, 0x_37, 0x_56, 0x_CC, 0x_D9, 0x_D9, 0x_37,
		0x_3E, 0x_3E, 0x_D9, 0x_3E, 0x_D9, 0x_56, 0x_3E, 0x_FF, 0x_33, 0x_FF, 0x_33, 0x_28, 0x_D9, 0x_A9, 0x_D5,
		0x_A9, 0x_CC, 0x_3E, 0x_28, 0x_DF, 0x_28, 0x_CA, 0x_8F, 0x_CC, 0x_FF, 0x_D5, 0x_8F, 0x_DF, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_FF, 0x_33, 0x_CC, 0x_DF, 0x_D9, 0x_A9, 0x_28, 0x_37, 0x_8F, 0x_3E, 0x_D5, 0x_56,
	];

	helper(S, BASE, 47_338_946);
}
// endregion
// region: s_has_signs_and_zeros_and_601_547_881_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_601_547_881_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_DB, 0x_8E, 0x_C5, 0x_B8, 0x_13, 0x_07, 0x_13, 0x_3E, 0x_94, 0x_E5, 0x_B8, 0x_3E,
		0x_41, 0x_12, 0x_E5, 0x_3E, 0x_C5, 0x_41, 0x_13, 0x_4F, 0x_07, 0x_41, 0x_13, 0x_BC, 0x_DB, 0x_8E, 0x_C5,
		0x_C5, 0x_8E, 0x_BC, 0x_DB, 0x_8E, 0x_12, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_B8, 0x_07, 0x_BC, 0x_E5, 0x_D5, 0x_4F, 0x_8E, 0x_C5, 0x_DB, 0x_41, 0x_13, 0x_3E,
	];

	helper(S, BASE, 601_547_881);
}
// endregion
// region: s_has_signs_and_zeros_and_7_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_7_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_1D, 0x_82, 0x_0F, 0x_43,
		0x_BA, 0x_DE, 0x_96, 0x_71, 0x_DE, 0x_B2, 0x_4C, 0x_4C, 0x_11, 0x_1D, 0x_B2, 0x_D5, 0x_11, 0x_89, 0x_43,
		0x_A5, 0x_8E, 0x_D5, 0x_A5, 0x_5F, 0x_D5, 0x_C0, 0x_DE, 0x_BA, 0x_02,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_89, 0x_BA, 0x_4C, 0x_96, 0x_0F, 0x_CA, 0x_1D, 0x_DE, 0x_99, 0x_71, 0x_43, 0x_C0, 0x_11, 0x_D5,
		0x_02, 0x_B2, 0x_A5, 0x_8E,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_signs_and_zeros_and_20_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_20_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_16, 0x_16, 0x_80,
		0x_80, 0x_78, 0x_A1, 0x_5B, 0x_8C, 0x_E0, 0x_38, 0x_E0, 0x_47, 0x_1F, 0x_A1, 0x_A8, 0x_47, 0x_41, 0x_2C,
		0x_80, 0x_89, 0x_4E, 0x_E0, 0x_16, 0x_2C, 0x_80,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_80, 0x_E0, 0x_38, 0x_4E, 0x_A8, 0x_48, 0x_89, 0x_8C, 0x_1F, 0x_95, 0x_2C, 0x_47, 0x_5B, 0x_13,
		0x_EF, 0x_41, 0x_FF, 0x_A1,
	];

	helper(S, BASE, 20);
}
// endregion
// region: s_has_signs_and_zeros_and_283_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_283_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19,
		0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_87, 0x_AA, 0x_6F, 0x_E0, 0x_F6, 0x_E0,
		0x_52, 0x_26, 0x_90, 0x_CA, 0x_28, 0x_E0, 0x_43, 0x_E4, 0x_CA, 0x_19, 0x_2F, 0x_4A, 0x_9C, 0x_82, 0x_F6,
		0x_80, 0x_82, 0x_CA, 0x_80, 0x_26, 0x_45, 0x_82, 0x_80, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_4A, 0x_E0, 0x_52, 0x_E4, 0x_80, 0x_F6, 0x_43, 0x_26, 0x_CA, 0x_45, 0x_28, 0x_D6, 0x_9C, 0x_87,
		0x_90, 0x_82, 0x_AA, 0x_2F,
	];

	helper(S, BASE, 283);
}
// endregion
// region: s_has_signs_and_zeros_and_1_434_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_1_434_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_83, 0x_AB, 0x_87, 0x_B3, 0x_9C,
		0x_6C, 0x_6C, 0x_95, 0x_AD, 0x_AB, 0x_7C, 0x_83, 0x_6F, 0x_95, 0x_7C, 0x_DC, 0x_95, 0x_1C, 0x_DC, 0x_6C,
		0x_33, 0x_7D, 0x_E5, 0x_10, 0x_95, 0x_9C, 0x_7D, 0x_6F, 0x_7C, 0x_95, 0x_95, 0x_E5, 0x_E5, 0x_33, 0x_2F,
		0x_AD, 0x_10, 0x_5B, 0x_AD, 0x_33, 0x_E5, 0x_7D,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_7A, 0x_AD, 0x_83, 0x_6C, 0x_33, 0x_7D, 0x_9C, 0x_2F, 0x_87, 0x_E5, 0x_6F, 0x_DC, 0x_95, 0x_10,
		0x_4B, 0x_5B, 0x_7C, 0x_AB,
	];

	helper(S, BASE, 1_434);
}
// endregion
// region: s_has_signs_and_zeros_and_74_568_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_74_568_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_75, 0x_98, 0x_75, 0x_BB, 0x_33, 0x_25, 0x_4E, 0x_86, 0x_86,
		0x_98, 0x_98, 0x_DC, 0x_75, 0x_01, 0x_6B, 0x_B7, 0x_19, 0x_5D, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_86, 0x_01, 0x_C2, 0x_19, 0x_91, 0x_25, 0x_5D, 0x_6B, 0x_B7, 0x_75, 0x_13, 0x_BB, 0x_DC, 0x_FD,
		0x_4F, 0x_98, 0x_B9, 0x_81,
	];

	helper(S, BASE, 74_568);
}
// endregion
// region: s_has_signs_and_zeros_and_703_318_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_703_318_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02,
		0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02,
		0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_93, 0x_C8, 0x_3B, 0x_50, 0x_94, 0x_1F, 0x_13, 0x_AE, 0x_3B,
		0x_50, 0x_87, 0x_F5, 0x_87, 0x_70, 0x_37, 0x_3B, 0x_50, 0x_5E, 0x_C8, 0x_87, 0x_F5, 0x_AE, 0x_87, 0x_70,
		0x_F5, 0x_5E, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_13, 0x_B8, 0x_A7, 0x_50, 0x_93, 0x_5E, 0x_C8, 0x_AE, 0x_F5, 0x_3B, 0x_51, 0x_70, 0x_2F, 0x_94,
		0x_87, 0x_5D, 0x_C2, 0x_37,
	];

	helper(S, BASE, 703_318);
}
// endregion
// region: s_has_signs_and_zeros_and_4_649_649_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_4_649_649_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_99, 0x_FA, 0x_8C, 0x_FA, 0x_BB, 0x_38, 0x_B3, 0x_38, 0x_43, 0x_8D, 0x_BF, 0x_3E, 0x_F8, 0x_06, 0x_43,
		0x_8D, 0x_4C, 0x_BF, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_99, 0x_63, 0x_8D, 0x_3A, 0x_4C, 0x_06, 0x_38, 0x_3E, 0x_F8, 0x_43, 0x_EC, 0x_8C, 0x_A0, 0x_82,
		0x_56, 0x_FA, 0x_BB, 0x_BF,
	];

	helper(S, BASE, 4_649_649);
}
// endregion
// region: s_has_signs_and_zeros_and_76_012_100_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_76_012_100_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_99, 0x_99, 0x_15, 0x_86, 0x_82, 0x_F7, 0x_15, 0x_FA, 0x_C8, 0x_21, 0x_E2, 0x_99, 0x_86, 0x_99, 0x_86,
		0x_86, 0x_B9, 0x_EA, 0x_EA, 0x_05, 0x_15, 0x_B9, 0x_90, 0x_01, 0x_6C, 0x_F7, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_15, 0x_58, 0x_3B, 0x_24, 0x_F7, 0x_E2, 0x_1C, 0x_6C, 0x_05, 0x_EA, 0x_86, 0x_6B, 0x_82, 0x_01,
		0x_FA, 0x_C8, 0x_90, 0x_B9,
	];

	helper(S, BASE, 76_012_100);
}
// endregion
// region: s_has_signs_and_zeros_and_918_988_691_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_918_988_691_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_FC, 0x_FC, 0x_FC, 0x_FC,
		0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC,
		0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC,
		0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_30, 0x_FC, 0x_6F, 0x_EE, 0x_E2, 0x_23, 0x_FC,
		0x_DE, 0x_34, 0x_4B, 0x_F8, 0x_81, 0x_72, 0x_DE, 0x_F4, 0x_72, 0x_32, 0x_43, 0x_EE, 0x_8E, 0x_8E, 0x_23,
		0x_72, 0x_CC, 0x_A6, 0x_F4, 0x_DE, 0x_4B, 0x_CC, 0x_C6, 0x_4B, 0x_80, 0x_E2, 0x_81, 0x_23, 0x_81, 0x_23,
		0x_A6, 0x_80, 0x_E2, 0x_72, 0x_C6, 0x_EE, 0x_72, 0x_81, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_30, 0x_EE, 0x_F4, 0x_72, 0x_32, 0x_C6, 0x_F8, 0x_8E, 0x_81, 0x_6F, 0x_80, 0x_43, 0x_E2, 0x_4B,
		0x_A6, 0x_DE, 0x_23, 0x_CC,
	];

	helper(S, BASE, 918_988_691);
}
// endregion
// region: s_has_signs_and_zeros_and_9_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_9_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_4A, 0x_AB, 0x_FB, 0x_C0, 0x_D9, 0x_9C, 0x_AD, 0x_B8, 0x_DC, 0x_90, 0x_46, 0x_8D, 0x_B3, 0x_9A,
		0x_EC, 0x_FA, 0x_12, 0x_DC, 0x_46, 0x_BE, 0x_BA, 0x_32, 0x_A6, 0x_C9, 0x_C0, 0x_B8, 0x_9A, 0x_B9, 0x_33,
		0x_F3, 0x_C9, 0x_88, 0x_24, 0x_F3, 0x_88,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_BA, 0x_DE, 0x_C0, 0x_AD, 0x_A6, 0x_9C, 0x_9A, 0x_33, 0x_4A, 0x_B8, 0x_CF, 0x_FB, 0x_12, 0x_8D,
		0x_E2, 0x_E8, 0x_B9, 0x_72, 0x_A2, 0x_EC, 0x_15, 0x_F3, 0x_C9, 0x_E7, 0x_59, 0x_90, 0x_FA, 0x_35, 0x_32,
		0x_D9, 0x_DC, 0x_5A, 0x_84, 0x_88, 0x_FE, 0x_24, 0x_BE, 0x_46, 0x_F6, 0x_B3, 0x_AA,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_signs_and_zeros_and_61_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_61_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51,
		0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_86, 0x_A9, 0x_E3, 0x_8D, 0x_B2, 0x_98, 0x_B2, 0x_65, 0x_96,
		0x_F4, 0x_51, 0x_98, 0x_98, 0x_DB, 0x_C1, 0x_D8, 0x_7F, 0x_8D, 0x_4E, 0x_7A, 0x_93, 0x_38, 0x_F1, 0x_D8,
		0x_51, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_86, 0x_B2, 0x_4E, 0x_91, 0x_96, 0x_79, 0x_F4, 0x_98, 0x_E0, 0x_0F, 0x_2E, 0x_83, 0x_B3, 0x_2C,
		0x_D8, 0x_03, 0x_D3, 0x_BC, 0x_A9, 0x_7F, 0x_38, 0x_8D, 0x_7A, 0x_4A, 0x_65, 0x_AE, 0x_37, 0x_CC, 0x_C1,
		0x_DE, 0x_F1, 0x_4B, 0x_DA, 0x_BA, 0x_93, 0x_90, 0x_AC, 0x_49, 0x_DB, 0x_46, 0x_BE,
	];

	helper(S, BASE, 61);
}
// endregion
// region: s_has_signs_and_zeros_and_515_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_515_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_22, 0x_70, 0x_BA, 0x_9F, 0x_A0, 0x_3E, 0x_9B, 0x_F5, 0x_49,
		0x_24, 0x_F5, 0x_93, 0x_70, 0x_9B, 0x_E9, 0x_94, 0x_E5, 0x_39, 0x_FF, 0x_25, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_CB, 0x_21, 0x_80, 0x_DE, 0x_BB, 0x_40, 0x_B3, 0x_89, 0x_62, 0x_2E, 0x_70, 0x_22, 0x_A0, 0x_FF,
		0x_01, 0x_53, 0x_EF, 0x_54, 0x_F6, 0x_25, 0x_93, 0x_9B, 0x_FA, 0x_6C, 0x_94, 0x_D7, 0x_E9, 0x_86, 0x_27,
		0x_24, 0x_F8, 0x_3E, 0x_F5, 0x_E5, 0x_5B, 0x_6F, 0x_DB, 0x_9F, 0x_C5, 0x_49, 0x_A3,
	];

	helper(S, BASE, 515);
}
// endregion
// region: s_has_signs_and_zeros_and_9_186_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_9_186_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_07,
		0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07,
		0x_07, 0x_07, 0x_4C, 0x_EC, 0x_ED, 0x_F9, 0x_72, 0x_AE, 0x_C3, 0x_AD, 0x_F7, 0x_72, 0x_ED, 0x_7A, 0x_7A,
		0x_CD, 0x_35, 0x_7C, 0x_7A, 0x_9D, 0x_4A, 0x_EC, 0x_72, 0x_B1, 0x_EC, 0x_4A, 0x_0F, 0x_E3, 0x_49, 0x_E3,
		0x_4A, 0x_F7, 0x_9D, 0x_0F, 0x_D3, 0x_52, 0x_0F, 0x_D6, 0x_0E, 0x_DD, 0x_52, 0x_4C, 0x_3F, 0x_4C, 0x_52,
		0x_D6, 0x_11, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_DD, 0x_35, 0x_52, 0x_4A, 0x_4C, 0x_F7, 0x_D3, 0x_EC, 0x_6B, 0x_75, 0x_7A, 0x_7B, 0x_7C, 0x_E3,
		0x_C3, 0x_1D, 0x_AD, 0x_5A, 0x_AE, 0x_9D, 0x_0E, 0x_96, 0x_49, 0x_13, 0x_CD, 0x_FA, 0x_EE, 0x_61, 0x_16,
		0x_ED, 0x_3F, 0x_B1, 0x_C8, 0x_D6, 0x_19, 0x_88, 0x_A8, 0x_A9, 0x_72, 0x_0F, 0x_11,
	];

	helper(S, BASE, 9_186);
}
// endregion
// region: s_has_signs_and_zeros_and_24_308_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_24_308_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_AC, 0x_64, 0x_64, 0x_18, 0x_11, 0x_B2, 0x_70, 0x_45, 0x_4E, 0x_B9, 0x_1A,
		0x_D0, 0x_4E, 0x_C4, 0x_B9, 0x_E4, 0x_EA, 0x_E2, 0x_D0, 0x_B9, 0x_1F, 0x_4E, 0x_64, 0x_29, 0x_10, 0x_CB,
		0x_11, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_9D, 0x_F7, 0x_1F, 0x_B2, 0x_44, 0x_B9, 0x_CB, 0x_29, 0x_7D, 0x_13, 0x_C3, 0x_C4, 0x_AC, 0x_45,
		0x_42, 0x_D0, 0x_95, 0x_93, 0x_1A, 0x_C8, 0x_4E, 0x_41, 0x_28, 0x_E5, 0x_D9, 0x_70, 0x_A4, 0x_25, 0x_E2,
		0x_11, 0x_82, 0x_64, 0x_BD, 0x_F5, 0x_84, 0x_EA, 0x_CD, 0x_E4, 0x_0E, 0x_10, 0x_A0,
	];

	helper(S, BASE, 24_308);
}
// endregion
// region: s_has_signs_and_zeros_and_767_331_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_767_331_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_01, 0x_E7, 0x_74, 0x_5B, 0x_99, 0x_AF,
		0x_70, 0x_82, 0x_50, 0x_7A, 0x_E7, 0x_17, 0x_82, 0x_72, 0x_C0, 0x_3C, 0x_07, 0x_11, 0x_11, 0x_74, 0x_7C,
		0x_78, 0x_AD, 0x_E2, 0x_C0, 0x_E2, 0x_F2, 0x_04, 0x_3C, 0x_7C, 0x_61, 0x_04, 0x_91, 0x_41, 0x_DF, 0x_84,
		0x_E3,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_77, 0x_F2, 0x_7D, 0x_82, 0x_E3, 0x_61, 0x_84, 0x_12, 0x_50, 0x_01, 0x_3C, 0x_AC, 0x_9D, 0x_E7,
		0x_AF, 0x_04, 0x_70, 0x_7A, 0x_AD, 0x_1F, 0x_B6, 0x_41, 0x_95, 0x_17, 0x_C8, 0x_11, 0x_7C, 0x_44, 0x_0E,
		0x_30, 0x_07, 0x_91, 0x_5B, 0x_72, 0x_52, 0x_E2, 0x_86, 0x_DF, 0x_C0, 0x_68, 0x_74,
	];

	helper(S, BASE, 767_331);
}
// endregion
// region: s_has_signs_and_zeros_and_6_066_193_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_6_066_193_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_D5,
		0x_C5, 0x_59, 0x_18, 0x_AA, 0x_36, 0x_59, 0x_96, 0x_F1, 0x_B1, 0x_AA, 0x_CA, 0x_BF, 0x_87, 0x_5A, 0x_DA,
		0x_8F, 0x_C5, 0x_60, 0x_AA, 0x_96, 0x_59, 0x_CA, 0x_D5, 0x_E9, 0x_D5, 0x_5A, 0x_01, 0x_61, 0x_61, 0x_02,
		0x_B1, 0x_07, 0x_22, 0x_F1, 0x_21, 0x_61, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_D5, 0x_B8, 0x_EC, 0x_34, 0x_37, 0x_21, 0x_AA, 0x_1D, 0x_96, 0x_60, 0x_3D, 0x_E9, 0x_5A, 0x_A8,
		0x_48, 0x_B1, 0x_22, 0x_CA, 0x_8F, 0x_DA, 0x_8E, 0x_87, 0x_BF, 0x_8C, 0x_FB, 0x_6A, 0x_F1, 0x_3F, 0x_01,
		0x_B6, 0x_07, 0x_70, 0x_63, 0x_F9, 0x_02, 0x_59, 0x_18, 0x_61, 0x_C5, 0x_13, 0x_A1,
	];

	helper(S, BASE, 6_066_193);
}
// endregion
// region: s_has_signs_and_zeros_and_90_454_354_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_90_454_354_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_81, 0x_70, 0x_C2, 0x_A2, 0x_14, 0x_64, 0x_AA,
		0x_D8, 0x_73, 0x_16, 0x_F2, 0x_C2, 0x_5B, 0x_9F, 0x_EF, 0x_A2, 0x_8C, 0x_7C, 0x_57, 0x_6C, 0x_A2, 0x_5A,
		0x_5B, 0x_5A, 0x_6F, 0x_41, 0x_3C, 0x_6F, 0x_63, 0x_75, 0x_75, 0x_FA, 0x_90, 0x_EA, 0x_6C, 0x_C3, 0x_C3,
		0x_F2, 0x_D9, 0x_78, 0x_9F, 0x_90, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_81, 0x_44, 0x_C2, 0x_D6, 0x_64, 0x_18, 0x_75, 0x_EA, 0x_FA, 0x_1B, 0x_41, 0x_63, 0x_58, 0x_5B, 0x_3C,
		0x_5A, 0x_7C, 0x_0F, 0x_78, 0x_68, 0x_9F, 0x_47, 0x_16, 0x_6C, 0x_6F, 0x_57, 0x_FE, 0x_C3, 0x_D7, 0x_70,
		0x_EF, 0x_8C, 0x_83, 0x_F2, 0x_D8, 0x_73, 0x_F0, 0x_A2, 0x_90, 0x_02, 0x_D9, 0x_14,
	];

	helper(S, BASE, 90_454_354);
}
// endregion
// region: s_has_signs_and_zeros_and_422_309_343_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_422_309_343_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_A0, 0x_A0, 0x_5D, 0x_71, 0x_AC, 0x_A6, 0x_FA, 0x_99, 0x_62, 0x_D5, 0x_5D, 0x_D7, 0x_CA,
		0x_B1,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_70, 0x_B8, 0x_5D, 0x_A6, 0x_CA, 0x_48, 0x_E8, 0x_27, 0x_71, 0x_B9, 0x_D5, 0x_B3, 0x_69, 0x_67,
		0x_99, 0x_FA, 0x_6C, 0x_8A, 0x_40, 0x_D7, 0x_CD, 0x_89, 0x_31, 0x_11, 0x_7D, 0x_03, 0x_50, 0x_D8, 0x_2E,
		0x_AC, 0x_33, 0x_08, 0x_01, 0x_BA, 0x_5B, 0x_9D, 0x_D9, 0x_C5, 0x_BC, 0x_B1, 0x_1B,
	];

	helper(S, BASE, 422_309_343);
}
// endregion
// region: s_has_signs_and_zeros_and_7_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_7_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_F7, 0x_FC, 0x_87, 0x_C3, 0x_D0, 0x_1F, 0x_F1, 0x_57,
		0x_C5, 0x_66, 0x_0F, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_99, 0x_54, 0x_1E, 0x_38, 0x_7D, 0x_FD, 0x_F7, 0x_1F, 0x_2E, 0x_E0, 0x_EA, 0x_01, 0x_87, 0x_E3,
		0x_F5, 0x_D2, 0x_66, 0x_F1, 0x_DA, 0x_D0, 0x_32, 0x_40, 0x_F6, 0x_3D, 0x_AF, 0x_88, 0x_A9, 0x_DD, 0x_63,
		0x_B7, 0x_A1, 0x_28, 0x_46, 0x_25, 0x_08, 0x_CB, 0x_BD, 0x_1D, 0x_B5, 0x_30, 0x_AE, 0x_4F, 0x_51, 0x_C3,
		0x_60, 0x_8B, 0x_F2, 0x_3A, 0x_D4, 0x_CF, 0x_7E, 0x_70, 0x_C2, 0x_8C, 0x_95, 0x_47, 0x_71, 0x_8E, 0x_0E,
		0x_0F, 0x_F9, 0x_1A, 0x_98, 0x_6B, 0x_C5, 0x_9F, 0x_B2, 0x_CA, 0x_57, 0x_49, 0x_B4, 0x_1C,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_signs_and_zeros_and_48_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_48_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_18, 0x_18, 0x_18,
		0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_BD, 0x_7E, 0x_DA, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_B9, 0x_F4, 0x_C5, 0x_AD, 0x_25, 0x_4D, 0x_45, 0x_DF, 0x_FE, 0x_90, 0x_67, 0x_88, 0x_41, 0x_B7,
		0x_1D, 0x_AB, 0x_11, 0x_E3, 0x_87, 0x_78, 0x_93, 0x_7F, 0x_D2, 0x_53, 0x_A8, 0x_61, 0x_FF, 0x_79, 0x_59,
		0x_27, 0x_5D, 0x_62, 0x_49, 0x_0E, 0x_A4, 0x_C2, 0x_28, 0x_1F, 0x_F0, 0x_7D, 0x_EC, 0x_BB, 0x_B0, 0x_80,
		0x_50, 0x_46, 0x_A7, 0x_BD, 0x_CD, 0x_E6, 0x_ED, 0x_10, 0x_76, 0x_E0, 0x_D4, 0x_A9, 0x_B1, 0x_EE, 0x_D6,
		0x_04, 0x_52, 0x_DA, 0x_8E, 0x_1C, 0x_7B, 0x_7A, 0x_3A, 0x_83, 0x_A3, 0x_AA, 0x_4E, 0x_D8,
	];

	helper(S, BASE, 48);
}
// endregion
// region: s_has_signs_and_zeros_and_987_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_987_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_57, 0x_53, 0x_23, 0x_3D, 0x_6F, 0x_85, 0x_B1, 0x_D2, 0x_8D, 0x_6F, 0x_32, 0x_8B, 0x_AF, 0x_8D,
		0x_32, 0x_C3, 0x_2E, 0x_57, 0x_6A, 0x_B4, 0x_C7, 0x_85, 0x_14, 0x_3E, 0x_3E, 0x_D2, 0x_78, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_F9, 0x_16, 0x_D8, 0x_51, 0x_6F, 0x_C3, 0x_EC, 0x_F7, 0x_B3, 0x_6A, 0x_81, 0x_90, 0x_57, 0x_28,
		0x_CF, 0x_8C, 0x_32, 0x_60, 0x_4F, 0x_6B, 0x_B1, 0x_85, 0x_58, 0x_A9, 0x_B4, 0x_A5, 0x_19, 0x_8B, 0x_0E,
		0x_2A, 0x_AB, 0x_76, 0x_2C, 0x_43, 0x_91, 0x_FC, 0x_7C, 0x_53, 0x_02, 0x_F0, 0x_8D, 0x_89, 0x_D3, 0x_79,
		0x_C7, 0x_BB, 0x_5A, 0x_3D, 0x_D2, 0x_1D, 0x_6C, 0x_83, 0x_99, 0x_74, 0x_97, 0x_E4, 0x_FF, 0x_5F, 0x_14,
		0x_A7, 0x_5E, 0x_10, 0x_2E, 0x_B6, 0x_3E, 0x_AF, 0x_9D, 0x_78, 0x_12, 0x_FA, 0x_47, 0x_93,
	];

	helper(S, BASE, 987);
}
// endregion
// region: s_has_signs_and_zeros_and_6_092_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_6_092_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02,
		0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02,
		0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_7B, 0x_BF, 0x_3A,
		0x_AA, 0x_4F, 0x_80, 0x_63, 0x_97, 0x_A6, 0x_A8, 0x_5A, 0x_7C, 0x_AD, 0x_E2, 0x_34, 0x_E2, 0x_DE, 0x_6C,
		0x_7C, 0x_E2, 0x_63, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_7B, 0x_F1, 0x_98, 0x_FF, 0x_68, 0x_B7, 0x_34, 0x_E7, 0x_BB, 0x_BF, 0x_23, 0x_1D, 0x_66, 0x_5A,
		0x_57, 0x_B9, 0x_A6, 0x_82, 0x_F6, 0x_D5, 0x_4F, 0x_70, 0x_9C, 0x_63, 0x_3E, 0x_16, 0x_C1, 0x_C6, 0x_3B,
		0x_9A, 0x_87, 0x_37, 0x_3A, 0x_5E, 0x_94, 0x_B2, 0x_51, 0x_01, 0x_E2, 0x_61, 0x_A2, 0x_D1, 0x_7F, 0x_77,
		0x_6C, 0x_39, 0x_1A, 0x_80, 0x_3F, 0x_F4, 0x_DE, 0x_10, 0x_41, 0x_BC, 0x_FA, 0x_F5, 0x_50, 0x_97, 0x_53,
		0x_7C, 0x_86, 0x_59, 0x_74, 0x_83, 0x_A8, 0x_45, 0x_B6, 0x_3C, 0x_4A, 0x_DC, 0x_1F, 0x_AD,
	];

	helper(S, BASE, 6_092);
}
// endregion
// region: s_has_signs_and_zeros_and_35_255_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_35_255_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99,
		0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_F4, 0x_9B, 0x_C1, 0x_6D, 0x_15,
		0x_7C, 0x_4C, 0x_8D, 0x_40, 0x_99, 0x_EA, 0x_1F, 0x_CD, 0x_8F, 0x_3C, 0x_3A, 0x_8D, 0x_64, 0x_EA, 0x_67,
		0x_E8, 0x_89, 0x_6B, 0x_DC, 0x_8F, 0x_EC, 0x_3D, 0x_4B, 0x_7E, 0x_D1, 0x_1F, 0x_42, 0x_D3, 0x_3D, 0x_C1,
		0x_B0, 0x_89, 0x_34, 0x_EA, 0x_CD, 0x_7B, 0x_F8, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_74, 0x_D3, 0x_D0, 0x_C4, 0x_D1, 0x_F4, 0x_3C, 0x_A6, 0x_A1, 0x_E2, 0x_F8, 0x_A8, 0x_B2, 0x_CD,
		0x_40, 0x_84, 0x_95, 0x_A3, 0x_3D, 0x_4B, 0x_1E, 0x_81, 0x_3B, 0x_E8, 0x_F2, 0x_64, 0x_03, 0x_2F, 0x_3A,
		0x_94, 0x_8D, 0x_80, 0x_34, 0x_22, 0x_35, 0x_F5, 0x_71, 0x_B7, 0x_89, 0x_07, 0x_43, 0x_8F, 0x_FF, 0x_9B,
		0x_B0, 0x_EA, 0x_15, 0x_E3, 0x_EC, 0x_42, 0x_6B, 0x_59, 0x_26, 0x_7E, 0x_7C, 0x_1A, 0x_1F, 0x_DC, 0x_3E,
		0x_DE, 0x_D7, 0x_B4, 0x_E4, 0x_4C, 0x_96, 0x_C0, 0x_7B, 0x_11, 0x_C1, 0x_67, 0x_5D, 0x_57,
	];

	helper(S, BASE, 35_255);
}
// endregion
// region: s_has_signs_and_zeros_and_284_045_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_284_045_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_E9, 0x_E9, 0x_E9, 0x_CB, 0x_51, 0x_34,
		0x_B7, 0x_05, 0x_05, 0x_FC, 0x_53, 0x_41, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_E9, 0x_19, 0x_34, 0x_95, 0x_01, 0x_BA, 0x_EF, 0x_24, 0x_23, 0x_7F, 0x_AB, 0x_31, 0x_4D, 0x_6E, 0x_37,
		0x_42, 0x_22, 0x_30, 0x_B0, 0x_43, 0x_CC, 0x_71, 0x_51, 0x_05, 0x_76, 0x_3B, 0x_41, 0x_8F, 0x_86, 0x_FF,
		0x_6C, 0x_BE, 0x_5A, 0x_84, 0x_F3, 0x_54, 0x_45, 0x_E3, 0x_9D, 0x_A0, 0x_4A, 0x_3E, 0x_BF, 0x_A8, 0x_1C,
		0x_F6, 0x_A4, 0x_16, 0x_47, 0x_AC, 0x_52, 0x_A7, 0x_91, 0x_CB, 0x_F8, 0x_08, 0x_83, 0x_EA, 0x_FC, 0x_68,
		0x_88, 0x_4F, 0x_26, 0x_7E, 0x_66, 0x_4C, 0x_D6, 0x_CF, 0x_11, 0x_07, 0x_D3, 0x_F4, 0x_53,
	];

	helper(S, BASE, 284_045);
}
// endregion
// region: s_has_signs_and_zeros_and_8_121_190_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_8_121_190_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_6F, 0x_15, 0x_98, 0x_CF, 0x_F0, 0x_5C,
		0x_2C, 0x_E0, 0x_85, 0x_D1, 0x_1E, 0x_53, 0x_CB, 0x_9D, 0x_2E, 0x_76, 0x_C7, 0x_FD, 0x_C0, 0x_DF, 0x_97,
		0x_EB, 0x_E2, 0x_0E, 0x_49, 0x_0E, 0x_A6, 0x_C7, 0x_29, 0x_CC, 0x_15, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_FD, 0x_DA, 0x_5C, 0x_75, 0x_72, 0x_C2, 0x_69, 0x_9D, 0x_C0, 0x_D5, 0x_31, 0x_71, 0x_66, 0x_CF, 0x_C7,
		0x_0E, 0x_BF, 0x_DD, 0x_FA, 0x_13, 0x_6F, 0x_6B, 0x_04, 0x_A6, 0x_97, 0x_1E, 0x_42, 0x_CC, 0x_5A, 0x_22,
		0x_E9, 0x_4B, 0x_D1, 0x_A0, 0x_BB, 0x_CB, 0x_B4, 0x_63, 0x_1A, 0x_73, 0x_E5, 0x_86, 0x_2E, 0x_79, 0x_10,
		0x_B9, 0x_93, 0x_E2, 0x_E0, 0x_51, 0x_C6, 0x_85, 0x_90, 0x_B6, 0x_29, 0x_76, 0x_EF, 0x_F9, 0x_53, 0x_95,
		0x_08, 0x_30, 0x_35, 0x_15, 0x_EB, 0x_60, 0x_49, 0x_2C, 0x_6A, 0x_5B, 0x_98, 0x_23, 0x_DF,
	];

	helper(S, BASE, 8_121_190);
}
// endregion
// region: s_has_signs_and_zeros_and_64_075_004_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_64_075_004_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_9B, 0x_9B, 0x_9B, 0x_9B,
		0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B,
		0x_9B, 0x_9B, 0x_5B, 0x_BD, 0x_1A, 0x_AB, 0x_7E, 0x_6B, 0x_F0, 0x_8F, 0x_8A, 0x_AD, 0x_8A, 0x_35, 0x_8A,
		0x_35,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_8F, 0x_5B, 0x_94, 0x_3D, 0x_24, 0x_16, 0x_9C, 0x_D1, 0x_35, 0x_71, 0x_44, 0x_BF, 0x_CB, 0x_F2,
		0x_8A, 0x_E8, 0x_23, 0x_BD, 0x_7D, 0x_95, 0x_05, 0x_CF, 0x_D2, 0x_A7, 0x_19, 0x_9F, 0x_A8, 0x_65, 0x_AE,
		0x_50, 0x_F0, 0x_12, 0x_3B, 0x_2C, 0x_DE, 0x_92, 0x_91, 0x_74, 0x_54, 0x_45, 0x_DD, 0x_E9, 0x_0E, 0x_FF,
		0x_75, 0x_C6, 0x_F7, 0x_B8, 0x_AD, 0x_E1, 0x_1A, 0x_5F, 0x_E7, 0x_10, 0x_76, 0x_86, 0x_7E, 0x_48, 0x_27,
		0x_AB, 0x_BC, 0x_B2, 0x_BB, 0x_8D, 0x_DF, 0x_7C, 0x_C7, 0x_68, 0x_4C, 0x_3F, 0x_6E, 0x_E2,
	];

	helper(S, BASE, 64_075_004);
}
// endregion
// region: s_has_signs_and_zeros_and_500_829_825_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_500_829_825_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_E9,
		0x_C5, 0x_9C, 0x_8F, 0x_8C, 0x_AC, 0x_8F, 0x_12, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_C0, 0x_42, 0x_16, 0x_A9, 0x_95, 0x_01, 0x_5B, 0x_88, 0x_84, 0x_81, 0x_67, 0x_71, 0x_B9, 0x_DB,
		0x_50, 0x_CC, 0x_E9, 0x_F1, 0x_24, 0x_7C, 0x_D0, 0x_66, 0x_8E, 0x_DA, 0x_31, 0x_12, 0x_64, 0x_6A, 0x_1F,
		0x_9C, 0x_E6, 0x_54, 0x_62, 0x_26, 0x_7D, 0x_74, 0x_63, 0x_5D, 0x_8C, 0x_61, 0x_1C, 0x_72, 0x_19, 0x_F9,
		0x_69, 0x_C5, 0x_55, 0x_AB, 0x_9F, 0x_FF, 0x_B1, 0x_E7, 0x_48, 0x_D6, 0x_EA, 0x_A5, 0x_03, 0x_8A, 0x_D1,
		0x_99, 0x_18, 0x_68, 0x_07, 0x_34, 0x_04, 0x_CB, 0x_90, 0x_14, 0x_8F, 0x_A6, 0x_AA, 0x_4B,
	];

	helper(S, BASE, 500_829_825);
}
// endregion
// region: s_has_signs_and_zeros_and_9_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_9_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_9A, 0x_9A, 0x_9A,
		0x_B9, 0x_A7, 0x_22, 0x_A1, 0x_E0, 0x_16, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_A3, 0x_30, 0x_B3, 0x_51, 0x_6E, 0x_5D, 0x_65, 0x_AC, 0x_B9, 0x_AA, 0x_FF, 0x_D4, 0x_C8, 0x_97,
		0x_4F, 0x_AD, 0x_9E, 0x_6D, 0x_62, 0x_6A, 0x_02, 0x_92, 0x_1B, 0x_46, 0x_04, 0x_93, 0x_E5, 0x_E8, 0x_E3,
		0x_3B, 0x_4B, 0x_FD, 0x_E6, 0x_8D, 0x_AE, 0x_27, 0x_8B, 0x_48, 0x_A1, 0x_54, 0x_33, 0x_83, 0x_36, 0x_DF,
		0x_0F, 0x_C7, 0x_F3, 0x_03, 0x_C5, 0x_18, 0x_96, 0x_26, 0x_AB, 0x_28, 0x_29, 0x_F0, 0x_80, 0x_5C, 0x_08,
		0x_AF, 0x_67, 0x_F8, 0x_7B, 0x_22, 0x_98, 0x_13, 0x_CA, 0x_3D, 0x_25, 0x_FE, 0x_21, 0x_8E, 0x_74, 0x_E0,
		0x_C6, 0x_31, 0x_19, 0x_53, 0x_3E, 0x_1E, 0x_FB, 0x_E9, 0x_C2, 0x_D0, 0x_7F, 0x_E4, 0x_10, 0x_1D, 0x_D2,
		0x_F4, 0x_6B, 0x_59, 0x_B4, 0x_1C, 0x_70, 0x_A8, 0x_B0, 0x_38, 0x_FA, 0x_4C, 0x_17, 0x_99, 0x_6F, 0x_23,
		0x_16, 0x_EA, 0x_BA, 0x_73, 0x_95, 0x_57, 0x_BC, 0x_BB,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_signs_and_zeros_and_68_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_68_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_7E, 0x_93, 0x_78, 0x_8E, 0x_5E, 0x_B2, 0x_6F, 0x_C7, 0x_89, 0x_B9,
		0x_3A, 0x_08, 0x_8B, 0x_B1, 0x_45, 0x_68, 0x_FC, 0x_33, 0x_F5, 0x_D0, 0x_64, 0x_FC, 0x_77, 0x_28, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_13, 0x_1B, 0x_D9, 0x_BB, 0x_15, 0x_55, 0x_7A, 0x_8E, 0x_B3, 0x_CB, 0x_C4, 0x_80, 0x_12, 0x_37,
		0x_33, 0x_B6, 0x_FB, 0x_C9, 0x_99, 0x_72, 0x_2A, 0x_92, 0x_64, 0x_6C, 0x_51, 0x_16, 0x_BC, 0x_39, 0x_D3,
		0x_D1, 0x_EC, 0x_4C, 0x_E2, 0x_B2, 0x_AD, 0x_30, 0x_6B, 0x_47, 0x_38, 0x_BD, 0x_2E, 0x_49, 0x_A7, 0x_F5,
		0x_36, 0x_4B, 0x_28, 0x_B1, 0x_6D, 0x_77, 0x_DD, 0x_8B, 0x_61, 0x_8F, 0x_E9, 0x_89, 0x_9C, 0x_A3, 0x_5E,
		0x_08, 0x_68, 0x_88, 0x_53, 0x_1C, 0x_C0, 0x_A9, 0x_DF, 0x_7E, 0x_85, 0x_3A, 0x_3E, 0x_BF, 0x_C7, 0x_9B,
		0x_07, 0x_27, 0x_FE, 0x_46, 0x_6A, 0x_40, 0x_9E, 0x_F3, 0x_5A, 0x_34, 0x_78, 0x_58, 0x_D0, 0x_C1, 0x_B5,
		0x_25, 0x_7C, 0x_3C, 0x_1A, 0x_5F, 0x_5B, 0x_A5, 0x_74, 0x_C5, 0x_45, 0x_B9, 0x_6F, 0x_1E, 0x_35, 0x_FA,
		0x_E6, 0x_FC, 0x_5C, 0x_57, 0x_F2, 0x_B0, 0x_60, 0x_CA,
	];

	helper(S, BASE, 68);
}
// endregion
// region: s_has_signs_and_zeros_and_482_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_482_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_97, 0x_6F, 0x_D4, 0x_5C, 0x_E6, 0x_DB, 0x_D3, 0x_EB, 0x_56, 0x_70, 0x_C7, 0x_C2, 0x_D7, 0x_27, 0x_CD,
		0x_11, 0x_D6, 0x_78, 0x_C0, 0x_D7, 0x_E6, 0x_A4, 0x_62, 0x_F2, 0x_A4, 0x_C6, 0x_45, 0x_7F, 0x_C5, 0x_B4,
		0x_D7, 0x_48, 0x_9D, 0x_56,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_30, 0x_E1, 0x_A5, 0x_97, 0x_5C, 0x_EB, 0x_51, 0x_B6, 0x_57, 0x_3C, 0x_D2, 0x_A9, 0x_62, 0x_C6,
		0x_6B, 0x_56, 0x_F4, 0x_15, 0x_C2, 0x_F1, 0x_40, 0x_BF, 0x_DB, 0x_11, 0x_5D, 0x_D0, 0x_19, 0x_A8, 0x_75,
		0x_6F, 0x_BC, 0x_59, 0x_B1, 0x_E0, 0x_9D, 0x_93, 0x_55, 0x_E7, 0x_10, 0x_34, 0x_C7, 0x_06, 0x_CB, 0x_27,
		0x_0E, 0x_7E, 0x_04, 0x_25, 0x_53, 0x_70, 0x_48, 0x_A4, 0x_CD, 0x_0F, 0x_74, 0x_B4, 0x_08, 0x_D6, 0x_9E,
		0x_7F, 0x_B0, 0x_01, 0x_4A, 0x_FF, 0x_71, 0x_C0, 0x_50, 0x_91, 0x_CC, 0x_45, 0x_73, 0x_CF, 0x_42, 0x_78,
		0x_69, 0x_C5, 0x_B8, 0x_38, 0x_4D, 0x_72, 0x_64, 0x_9B, 0x_87, 0x_B5, 0x_99, 0x_65, 0x_58, 0x_07, 0x_2E,
		0x_E6, 0x_83, 0x_41, 0x_B7, 0x_3F, 0x_C4, 0x_6D, 0x_8C, 0x_35, 0x_A6, 0x_DF, 0x_D7, 0x_AB, 0x_A1, 0x_52,
		0x_8E, 0x_7A, 0x_F2, 0x_88, 0x_90, 0x_D3, 0x_F8, 0x_17,
	];

	helper(S, BASE, 482);
}
// endregion
// region: s_has_signs_and_zeros_and_7_589_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_7_589_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_5C, 0x_7F, 0x_E3, 0x_DA, 0x_92, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_B1, 0x_68, 0x_BB, 0x_95, 0x_04, 0x_C7, 0x_CE, 0x_A1, 0x_DD, 0x_1A, 0x_29, 0x_61, 0x_14, 0x_1C,
		0x_3F, 0x_1B, 0x_2A, 0x_7F, 0x_88, 0x_12, 0x_57, 0x_78, 0x_39, 0x_77, 0x_71, 0x_8A, 0x_53, 0x_E4, 0x_31,
		0x_6F, 0x_7C, 0x_1E, 0x_CA, 0x_92, 0x_08, 0x_4A, 0x_74, 0x_58, 0x_44, 0x_3D, 0x_99, 0x_F0, 0x_97, 0x_51,
		0x_D4, 0x_82, 0x_06, 0x_B5, 0x_F8, 0x_D1, 0x_2E, 0x_D8, 0x_CF, 0x_AD, 0x_C6, 0x_8C, 0x_16, 0x_8D, 0x_0E,
		0x_6A, 0x_54, 0x_9D, 0x_C5, 0x_7A, 0x_F3, 0x_D0, 0x_5C, 0x_47, 0x_0F, 0x_11, 0x_2F, 0x_BD, 0x_6B, 0x_26,
		0x_2C, 0x_F9, 0x_CC, 0x_3E, 0x_8B, 0x_76, 0x_34, 0x_87, 0x_49, 0x_36, 0x_DA, 0x_FA, 0x_10, 0x_DE, 0x_13,
		0x_AC, 0x_8F, 0x_B3, 0x_40, 0x_4C, 0x_B7, 0x_A8, 0x_42, 0x_AB, 0x_8E, 0x_EB, 0x_DC, 0x_6C, 0x_F6, 0x_5F,
		0x_81, 0x_FB, 0x_D6, 0x_A5, 0x_21, 0x_E8, 0x_F7, 0x_79,
	];

	helper(S, BASE, 7_589);
}
// endregion
// region: s_has_signs_and_zeros_and_62_337_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_62_337_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_34, 0x_62, 0x_15, 0x_EE, 0x_84, 0x_A2,
		0x_D7, 0x_40, 0x_49, 0x_48, 0x_98, 0x_CB, 0x_41, 0x_A6, 0x_22, 0x_92, 0x_18, 0x_96, 0x_A4, 0x_4A, 0x_E8,
		0x_70, 0x_23, 0x_F1, 0x_CB, 0x_50, 0x_CA,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_AA, 0x_B4, 0x_7F, 0x_34, 0x_48, 0x_39, 0x_1B, 0x_70, 0x_46, 0x_92, 0x_31, 0x_35, 0x_40, 0x_2E,
		0x_65, 0x_50, 0x_87, 0x_D7, 0x_AD, 0x_4C, 0x_1E, 0x_E4, 0x_CB, 0x_D9, 0x_8B, 0x_A1, 0x_B1, 0x_C6, 0x_C7,
		0x_A0, 0x_A4, 0x_4B, 0x_ED, 0x_36, 0x_7B, 0x_04, 0x_C5, 0x_1C, 0x_F6, 0x_77, 0x_CC, 0x_96, 0x_A6, 0x_D8,
		0x_23, 0x_7C, 0x_A5, 0x_06, 0x_32, 0x_67, 0x_86, 0x_81, 0x_54, 0x_44, 0x_C2, 0x_58, 0x_A7, 0x_FC, 0x_3E,
		0x_11, 0x_B6, 0x_F9, 0x_9D, 0x_1F, 0x_A2, 0x_B2, 0x_18, 0x_97, 0x_12, 0x_F5, 0x_D1, 0x_22, 0x_28, 0x_15,
		0x_99, 0x_74, 0x_FD, 0x_E8, 0x_4A, 0x_5C, 0x_98, 0x_0E, 0x_84, 0x_DC, 0x_68, 0x_91, 0x_F3, 0x_51, 0x_61,
		0x_41, 0x_9E, 0x_2C, 0x_6F, 0x_57, 0x_C3, 0x_49, 0x_0F, 0x_3C, 0x_62, 0x_2A, 0x_E7, 0x_2F, 0x_F1, 0x_16,
		0x_94, 0x_B7, 0x_4F, 0x_CA, 0x_E0, 0x_63, 0x_D3, 0x_CF,
	];

	helper(S, BASE, 62_337);
}
// endregion
// region: s_has_signs_and_zeros_and_158_597_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_158_597_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE,
		0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE,
		0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE,
		0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_5D, 0x_07, 0x_76, 0x_AB, 0x_26, 0x_4A, 0x_E0, 0x_F2, 0x_7B, 0x_46, 0x_1D,
		0x_A1, 0x_D1, 0x_76, 0x_04, 0x_9F, 0x_78, 0x_B8, 0x_78, 0x_72, 0x_04, 0x_FE, 0x_E4, 0x_72, 0x_E7, 0x_8E,
		0x_08, 0x_16, 0x_9F, 0x_3B, 0x_05, 0x_1D, 0x_07, 0x_E5, 0x_E9, 0x_90, 0x_72, 0x_72, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_34, 0x_ED, 0x_05, 0x_7F, 0x_90, 0x_B2, 0x_5A, 0x_C9, 0x_A6, 0x_F1, 0x_7B, 0x_5D, 0x_23, 0x_C0,
		0x_E0, 0x_97, 0x_61, 0x_2E, 0x_F6, 0x_D3, 0x_65, 0x_F2, 0x_4A, 0x_46, 0x_9D, 0x_6D, 0x_D9, 0x_BF, 0x_D4,
		0x_64, 0x_0E, 0x_03, 0x_88, 0x_63, 0x_CA, 0x_29, 0x_E7, 0x_08, 0x_BC, 0x_B8, 0x_87, 0x_32, 0x_3D, 0x_8F,
		0x_71, 0x_51, 0x_07, 0x_62, 0x_12, 0x_80, 0x_C6, 0x_18, 0x_96, 0x_EF, 0x_E9, 0x_DB, 0x_25, 0x_76, 0x_16,
		0x_86, 0x_8E, 0x_B4, 0x_C3, 0x_D1, 0x_DF, 0x_26, 0x_3B, 0x_B6, 0x_EC, 0x_60, 0x_67, 0x_44, 0x_84, 0x_6B,
		0x_39, 0x_CF, 0x_52, 0x_04, 0x_E5, 0x_72, 0x_CB, 0x_9F, 0x_7D, 0x_FE, 0x_FF, 0x_DA, 0x_3F, 0x_E4, 0x_78,
		0x_A8, 0x_45, 0x_C7, 0x_4F, 0x_4C, 0x_6C, 0x_40, 0x_85, 0x_DE, 0x_9A, 0x_1C, 0x_5E, 0x_A0, 0x_9E, 0x_82,
		0x_D0, 0x_1D, 0x_8A, 0x_A1, 0x_21, 0x_7A, 0x_57, 0x_02,
	];

	helper(S, BASE, 158_597);
}
// endregion
// region: s_has_signs_and_zeros_and_7_720_571_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_7_720_571_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04,
		0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04,
		0x_04, 0x_04, 0x_04, 0x_04, 0x_6D, 0x_32, 0x_E6, 0x_97, 0x_CB, 0x_A0, 0x_90, 0x_21, 0x_97, 0x_AD, 0x_73,
		0x_7A, 0x_FC, 0x_F8, 0x_33, 0x_89, 0x_EF, 0x_AD, 0x_F1, 0x_3B, 0x_30, 0x_AD, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_AD, 0x_4A, 0x_34, 0x_45, 0x_6D, 0x_25, 0x_A7, 0x_A0, 0x_E4, 0x_C0, 0x_03, 0x_16, 0x_EA, 0x_D4,
		0x_F8, 0x_88, 0x_15, 0x_3B, 0x_FB, 0x_EF, 0x_B5, 0x_74, 0x_FD, 0x_BF, 0x_D8, 0x_D3, 0x_81, 0x_78, 0x_10,
		0x_33, 0x_A8, 0x_EE, 0x_F9, 0x_CA, 0x_BC, 0x_29, 0x_59, 0x_31, 0x_32, 0x_B8, 0x_0E, 0x_E7, 0x_D5, 0x_CE,
		0x_64, 0x_83, 0x_35, 0x_5D, 0x_1B, 0x_89, 0x_AC, 0x_7B, 0x_C8, 0x_FF, 0x_95, 0x_DD, 0x_46, 0x_7A, 0x_FC,
		0x_AF, 0x_65, 0x_F1, 0x_27, 0x_D0, 0x_3A, 0x_30, 0x_90, 0x_21, 0x_E1, 0x_A6, 0x_E6, 0x_97, 0x_07, 0x_12,
		0x_A2, 0x_E2, 0x_77, 0x_80, 0x_8B, 0x_1C, 0x_CF, 0x_BD, 0x_C3, 0x_E0, 0x_D7, 0x_B2, 0x_60, 0x_BA, 0x_C5,
		0x_8D, 0x_94, 0x_5F, 0x_F0, 0x_37, 0x_01, 0x_14, 0x_02, 0x_55, 0x_86, 0x_F5, 0x_C9, 0x_BE, 0x_A1, 0x_48,
		0x_9F, 0x_8F, 0x_2A, 0x_73, 0x_67, 0x_CD, 0x_F2, 0x_FE,
	];

	helper(S, BASE, 7_720_571);
}
// endregion
// region: s_has_signs_and_zeros_and_44_615_283_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_44_615_283_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_78,
		0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_D5, 0x_BC, 0x_4F, 0x_5F, 0x_87, 0x_6A,
		0x_10, 0x_BC, 0x_B2, 0x_6A, 0x_25, 0x_42, 0x_E6, 0x_DF, 0x_FE, 0x_3A, 0x_70, 0x_B5, 0x_40, 0x_4E, 0x_9E,
		0x_A1, 0x_3E, 0x_B8, 0x_D1, 0x_AF, 0x_E4, 0x_EC, 0x_4E, 0x_E0, 0x_35, 0x_4F, 0x_BC, 0x_FE, 0x_13, 0x_15,
		0x_7D, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_68, 0x_6A, 0x_4F, 0x_CE, 0x_7C, 0x_44, 0x_7D, 0x_E0, 0x_10, 0x_5C, 0x_55, 0x_BD, 0x_2F, 0x_1B,
		0x_25, 0x_E7, 0x_3E, 0x_94, 0x_FD, 0x_42, 0x_D0, 0x_F4, 0x_22, 0x_3A, 0x_C0, 0x_A1, 0x_9E, 0x_4D, 0x_EC,
		0x_D5, 0x_D2, 0x_4E, 0x_9D, 0x_35, 0x_FE, 0x_0E, 0x_B6, 0x_07, 0x_DB, 0x_AF, 0x_B8, 0x_B2, 0x_8B, 0x_C6,
		0x_5E, 0x_A5, 0x_9C, 0x_8C, 0x_F7, 0x_FC, 0x_40, 0x_A3, 0x_A0, 0x_1C, 0x_26, 0x_CC, 0x_15, 0x_5F, 0x_9F,
		0x_F0, 0x_39, 0x_A2, 0x_4B, 0x_A9, 0x_AA, 0x_DC, 0x_82, 0x_72, 0x_FA, 0x_53, 0x_31, 0x_2E, 0x_48, 0x_19,
		0x_66, 0x_36, 0x_F8, 0x_90, 0x_CB, 0x_62, 0x_DF, 0x_23, 0x_7B, 0x_C9, 0x_D1, 0x_13, 0x_54, 0x_34, 0x_80,
		0x_BA, 0x_52, 0x_06, 0x_56, 0x_84, 0x_70, 0x_5D, 0x_A8, 0x_69, 0x_B5, 0x_85, 0x_DA, 0x_E5, 0x_9A, 0x_BC,
		0x_B3, 0x_4C, 0x_E6, 0x_79, 0x_E4, 0x_03, 0x_38, 0x_E2,
	];

	helper(S, BASE, 44_615_283);
}
// endregion
// region: s_has_signs_and_zeros_and_438_411_636_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_438_411_636_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_F1,
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1,
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1,
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_C8, 0x_C5, 0x_CE, 0x_82, 0x_72,
		0x_83, 0x_6A, 0x_D4, 0x_55, 0x_BF, 0x_79, 0x_13, 0x_9B, 0x_5A, 0x_55, 0x_F7, 0x_30, 0x_EC, 0x_13, 0x_50,
		0x_CD,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_8D, 0x_C8, 0x_61, 0x_79, 0x_7C, 0x_82, 0x_D7, 0x_06, 0x_92, 0x_CD, 0x_C6, 0x_54, 0x_0E, 0x_BB,
		0x_75, 0x_BC, 0x_78, 0x_39, 0x_04, 0x_9A, 0x_55, 0x_B6, 0x_65, 0x_1A, 0x_EB, 0x_ED, 0x_49, 0x_2A, 0x_A9,
		0x_4D, 0x_A1, 0x_03, 0x_13, 0x_B2, 0x_D2, 0x_EC, 0x_43, 0x_8C, 0x_67, 0x_C1, 0x_9B, 0x_81, 0x_AE, 0x_BA,
		0x_B9, 0x_5F, 0x_05, 0x_68, 0x_84, 0x_C0, 0x_A0, 0x_50, 0x_7F, 0x_6F, 0x_E2, 0x_A3, 0x_3A, 0x_90, 0x_70,
		0x_64, 0x_DF, 0x_30, 0x_74, 0x_BD, 0x_F7, 0x_89, 0x_4F, 0x_A5, 0x_EE, 0x_F3, 0x_12, 0x_A4, 0x_E0, 0x_3F,
		0x_40, 0x_1E, 0x_C5, 0x_CA, 0x_6A, 0x_23, 0x_28, 0x_69, 0x_47, 0x_97, 0x_EA, 0x_D6, 0x_2E, 0x_A6, 0x_15,
		0x_B4, 0x_E3, 0x_D4, 0x_1C, 0x_41, 0x_CE, 0x_5A, 0x_22, 0x_BF, 0x_F9, 0x_73, 0x_11, 0x_D0, 0x_53, 0x_02,
		0x_5C, 0x_56, 0x_14, 0x_57, 0x_D8, 0x_48, 0x_E9, 0x_72,
	];

	helper(S, BASE, 438_411_636);
}
// endregion
// region: s_has_signs_and_zeros_and_5_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_5_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_AB, 0x_0C,
		0x_2C, 0x_60, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_27, 0x_EC, 0x_A9, 0x_66, 0x_AB, 0x_8C, 0x_62, 0x_AC, 0x_AF, 0x_5B, 0x_E3, 0x_D3, 0x_87, 0x_63,
		0x_3E, 0x_9B, 0x_1C, 0x_82, 0x_06, 0x_7B, 0x_89, 0x_F0, 0x_50, 0x_02, 0x_05, 0x_5E, 0x_04, 0x_54, 0x_03,
		0x_83, 0x_01, 0x_E6, 0x_C4, 0x_6E, 0x_99, 0x_4D, 0x_16, 0x_C3, 0x_A0, 0x_9F, 0x_35, 0x_1B, 0x_F6, 0x_41,
		0x_DF, 0x_D0, 0x_B0, 0x_3F, 0x_BD, 0x_78, 0x_5D, 0x_26, 0x_73, 0x_F5, 0x_60, 0x_17, 0x_94, 0x_18, 0x_2C,
		0x_B3, 0x_3D, 0x_BA, 0x_7D, 0x_F4, 0x_0E, 0x_39, 0x_8A, 0x_B7, 0x_74, 0x_E4, 0x_7E, 0x_91, 0x_B6, 0x_9C,
		0x_BC, 0x_D1, 0x_D9, 0x_28, 0x_CA, 0x_D6, 0x_64, 0x_79, 0x_95, 0x_55, 0x_07, 0x_C0, 0x_43, 0x_A7, 0x_12,
		0x_40, 0x_36, 0x_98, 0x_B8, 0x_76, 0x_A2, 0x_71, 0x_47, 0x_4B, 0x_77, 0x_EB, 0x_2E, 0x_B9, 0x_C7, 0x_FD,
		0x_58, 0x_C6, 0x_90, 0x_E2, 0x_0F, 0x_9D, 0x_5C, 0x_1A, 0x_31, 0x_2F, 0x_AD, 0x_59, 0x_B1, 0x_F9, 0x_A5,
		0x_72, 0x_51, 0x_30, 0x_29, 0x_CF, 0x_8B, 0x_70, 0x_86, 0x_33, 0x_A4, 0x_88, 0x_23, 0x_F1, 0x_8F, 0x_B2,
		0x_CD, 0x_15, 0x_6D, 0x_6A, 0x_22, 0x_9A, 0x_B4, 0x_46, 0x_EE, 0x_49, 0x_32, 0x_F3, 0x_52, 0x_6F, 0x_10,
		0x_45, 0x_C9, 0x_AA, 0x_F8, 0x_14, 0x_D2, 0x_1F, 0x_E9, 0x_1E, 0x_37, 0x_9E, 0x_D4, 0x_19, 0x_5A, 0x_D5,
		0x_CE, 0x_34, 0x_56, 0x_57, 0x_F2, 0x_42, 0x_AE, 0x_69, 0x_44, 0x_84, 0x_7F, 0x_EA, 0x_48, 0x_FC, 0x_CB,
		0x_A6, 0x_EF, 0x_93, 0x_D8, 0x_68, 0x_92, 0x_A1, 0x_BE, 0x_61, 0x_DA, 0x_65, 0x_C5, 0x_24,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_signs_and_zeros_and_37_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_37_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_C3,
		0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3,
		0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_BC, 0x_97,
		0x_04, 0x_42, 0x_92, 0x_E5, 0x_EF, 0x_02, 0x_D8, 0x_11, 0x_F6, 0x_18, 0x_F6, 0x_24, 0x_BC, 0x_95, 0x_6D,
		0x_53, 0x_B3, 0x_A4, 0x_75, 0x_76, 0x_CD, 0x_4D, 0x_E4, 0x_2F, 0x_A4, 0x_90, 0x_8F, 0x_9B, 0x_DA, 0x_B2,
		0x_EF, 0x_7C, 0x_28, 0x_AD, 0x_23, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_E2, 0x_17, 0x_9E, 0x_A9, 0x_21, 0x_22, 0x_8A, 0x_9F, 0x_16, 0x_99, 0x_6B, 0x_11, 0x_13, 0x_DA,
		0x_B4, 0x_37, 0x_06, 0x_53, 0x_87, 0x_C4, 0x_7C, 0x_12, 0x_1A, 0x_4C, 0x_F3, 0x_70, 0x_79, 0x_CB, 0x_61,
		0x_E9, 0x_AA, 0x_F7, 0x_C2, 0x_80, 0x_3C, 0x_B3, 0x_BC, 0x_F8, 0x_77, 0x_3A, 0x_F6, 0x_75, 0x_3F, 0x_14,
		0x_67, 0x_AD, 0x_32, 0x_A0, 0x_9C, 0x_A4, 0x_57, 0x_18, 0x_78, 0x_31, 0x_7E, 0x_68, 0x_F1, 0x_63, 0x_6C,
		0x_E6, 0x_FD, 0x_C8, 0x_D2, 0x_B0, 0x_81, 0x_E0, 0x_D8, 0x_25, 0x_D0, 0x_AC, 0x_55, 0x_34, 0x_B2, 0x_8F,
		0x_51, 0x_F5, 0x_CD, 0x_A6, 0x_D9, 0x_DE, 0x_5A, 0x_6A, 0x_49, 0x_28, 0x_74, 0x_2C, 0x_42, 0x_B7, 0x_8C,
		0x_A3, 0x_EF, 0x_52, 0x_AB, 0x_29, 0x_DF, 0x_02, 0x_A1, 0x_91, 0x_8D, 0x_D5, 0x_CF, 0x_3B, 0x_76, 0x_62,
		0x_D1, 0x_9D, 0x_F9, 0x_C7, 0x_E7, 0x_98, 0x_F2, 0x_BF, 0x_59, 0x_8E, 0x_2E, 0x_1F, 0x_CE, 0x_E8, 0x_7B,
		0x_1B, 0x_69, 0x_54, 0x_B6, 0x_BA, 0x_6D, 0x_CA, 0x_2F, 0x_7A, 0x_66, 0x_05, 0x_88, 0x_50, 0x_96, 0x_AE,
		0x_EB, 0x_BE, 0x_4F, 0x_3E, 0x_23, 0x_E5, 0x_C6, 0x_BD, 0x_86, 0x_B5, 0x_60, 0x_36, 0x_F4, 0x_C0, 0x_1C,
		0x_90, 0x_DC, 0x_1D, 0x_48, 0x_4B, 0x_40, 0x_5B, 0x_73, 0x_95, 0x_0E, 0x_24, 0x_0F, 0x_19, 0x_41, 0x_72,
		0x_82, 0x_B9, 0x_C9, 0x_FB, 0x_DD, 0x_D6, 0x_47, 0x_04, 0x_10, 0x_58, 0x_9B, 0x_5F, 0x_5E, 0x_D4, 0x_27,
		0x_46, 0x_6E, 0x_56, 0x_8B, 0x_92, 0x_A2, 0x_07, 0x_44, 0x_E4, 0x_4D, 0x_BB, 0x_CC, 0x_B1,
	];

	helper(S, BASE, 37);
}
// endregion
// region: s_has_signs_and_zeros_and_619_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_619_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A,
		0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_9C, 0x_E1, 0x_43, 0x_3A, 0x_86, 0x_EC,
		0x_54, 0x_6C, 0x_E8, 0x_6D, 0x_D9, 0x_1E, 0x_D9, 0x_80, 0x_1D, 0x_F4, 0x_65, 0x_24, 0x_D6, 0x_B6, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_81, 0x_8C, 0x_9C, 0x_F4, 0x_2A, 0x_1A, 0x_0E, 0x_13, 0x_0F, 0x_4A, 0x_71, 0x_80, 0x_27, 0x_9D,
		0x_D7, 0x_4B, 0x_70, 0x_E7, 0x_68, 0x_42, 0x_8A, 0x_EF, 0x_85, 0x_3D, 0x_91, 0x_54, 0x_53, 0x_03, 0x_41,
		0x_C8, 0x_7C, 0x_79, 0x_DC, 0x_05, 0x_44, 0x_B3, 0x_15, 0x_4F, 0x_5C, 0x_E1, 0x_04, 0x_47, 0x_B5, 0x_92,
		0x_95, 0x_B6, 0x_89, 0x_3B, 0x_6C, 0x_78, 0x_02, 0x_8D, 0x_F5, 0x_B7, 0x_7F, 0x_AA, 0x_84, 0x_1B, 0x_46,
		0x_9E, 0x_E4, 0x_5B, 0x_8E, 0x_D9, 0x_5A, 0x_C6, 0x_BE, 0x_CE, 0x_10, 0x_FE, 0x_E6, 0x_A1, 0x_50, 0x_56,
		0x_7D, 0x_FA, 0x_CB, 0x_7E, 0x_A2, 0x_A7, 0x_23, 0x_77, 0x_FF, 0x_96, 0x_CC, 0x_DE, 0x_73, 0x_38, 0x_33,
		0x_B0, 0x_34, 0x_A6, 0x_5E, 0x_74, 0x_8F, 0x_6B, 0x_82, 0x_51, 0x_76, 0x_B2, 0x_F2, 0x_87, 0x_DA, 0x_DF,
		0x_F1, 0x_BD, 0x_E0, 0x_22, 0x_C3, 0x_9B, 0x_D6, 0x_E3, 0x_F9, 0x_C0, 0x_B8, 0x_63, 0x_2C, 0x_F7, 0x_3E,
		0x_ED, 0x_AF, 0x_45, 0x_6D, 0x_AC, 0x_16, 0x_B9, 0x_D4, 0x_A5, 0x_18, 0x_40, 0x_1F, 0x_62, 0x_97, 0x_30,
		0x_17, 0x_BB, 0x_CF, 0x_55, 0x_F3, 0x_C1, 0x_EB, 0x_48, 0x_72, 0x_31, 0x_F0, 0x_E5, 0x_D1, 0x_3C, 0x_83,
		0x_A8, 0x_C4, 0x_E2, 0x_12, 0x_14, 0x_69, 0x_60, 0x_F8, 0x_58, 0x_86, 0x_C7, 0x_9F, 0x_5F, 0x_DB, 0x_67,
		0x_E8, 0x_24, 0x_66, 0x_6E, 0x_C9, 0x_88, 0x_64, 0x_CA, 0x_3A, 0x_A9, 0x_1C, 0x_59, 0x_2F, 0x_BA, 0x_32,
		0x_26, 0x_D8, 0x_EC, 0x_AB, 0x_28, 0x_CD, 0x_90, 0x_01, 0x_65, 0x_C5, 0x_08, 0x_1D, 0x_1E,
	];

	helper(S, BASE, 619);
}
// endregion
// region: s_has_signs_and_zeros_and_5_893_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_5_893_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1,
		0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1,
		0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_8D, 0x_6C, 0x_20, 0x_C0,
		0x_57, 0x_4C, 0x_E4, 0x_0E, 0x_76, 0x_B9, 0x_E5, 0x_96, 0x_84, 0x_C9, 0x_01, 0x_5F, 0x_BA, 0x_BB, 0x_05,
		0x_F7, 0x_68, 0x_F4, 0x_B1, 0x_F1, 0x_A1, 0x_F6, 0x_D7, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_D1, 0x_B2, 0x_8A, 0x_2F, 0x_EA, 0x_35, 0x_D0, 0x_96, 0x_04, 0x_2C, 0x_B3, 0x_10, 0x_6E, 0x_4B, 0x_77,
		0x_12, 0x_5D, 0x_BB, 0x_E3, 0x_0F, 0x_F6, 0x_C2, 0x_91, 0x_BD, 0x_C0, 0x_F4, 0x_F9, 0x_A0, 0x_B7, 0x_36,
		0x_8D, 0x_76, 0x_FB, 0x_9A, 0x_BE, 0x_AA, 0x_4C, 0x_9F, 0x_B6, 0x_5F, 0x_07, 0x_70, 0x_4E, 0x_50, 0x_D5,
		0x_27, 0x_06, 0x_F1, 0x_90, 0x_D3, 0x_74, 0x_FF, 0x_60, 0x_2A, 0x_5E, 0x_25, 0x_EB, 0x_14, 0x_48, 0x_8F,
		0x_B5, 0x_8B, 0x_30, 0x_C1, 0x_9D, 0x_34, 0x_89, 0x_DA, 0x_4D, 0x_A8, 0x_AC, 0x_03, 0x_66, 0x_FC, 0x_AB,
		0x_C3, 0x_1C, 0x_F0, 0x_31, 0x_38, 0x_D7, 0x_C6, 0x_AD, 0x_7F, 0x_42, 0x_29, 0x_80, 0x_64, 0x_46, 0x_97,
		0x_15, 0x_61, 0x_57, 0x_D8, 0x_1D, 0x_4A, 0x_EC, 0x_FD, 0x_82, 0x_52, 0x_53, 0x_B8, 0x_D4, 0x_6C, 0x_9C,
		0x_56, 0x_63, 0x_6A, 0x_0E, 0x_51, 0x_19, 0x_E5, 0x_6D, 0x_CF, 0x_A5, 0x_C5, 0x_7D, 0x_8C, 0x_C9, 0x_AE,
		0x_E8, 0x_98, 0x_BA, 0x_1E, 0x_22, 0x_3C, 0x_40, 0x_7E, 0x_4F, 0x_65, 0x_CC, 0x_F8, 0x_5B, 0x_E1, 0x_B9,
		0x_5C, 0x_CA, 0x_8E, 0x_43, 0x_37, 0x_A7, 0x_99, 0x_F3, 0x_A1, 0x_6B, 0x_3D, 0x_6F, 0x_78, 0x_CE, 0x_D9,
		0x_E4, 0x_7C, 0x_17, 0x_7A, 0x_49, 0x_CD, 0x_ED, 0x_A2, 0x_F7, 0x_85, 0x_28, 0x_92, 0x_FE, 0x_3B, 0x_68,
		0x_24, 0x_1B, 0x_BF, 0x_01, 0x_88, 0x_D2, 0x_C7, 0x_87, 0x_1F, 0x_DD, 0x_18, 0x_71, 0x_69, 0x_72, 0x_3A,
		0x_05, 0x_84, 0x_B1, 0x_41, 0x_B0, 0x_93, 0x_7B, 0x_21, 0x_39, 0x_3F, 0x_2E, 0x_DF, 0x_11,
	];

	helper(S, BASE, 5_893);
}
// endregion
// region: s_has_signs_and_zeros_and_89_865_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_89_865_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9,
		0x_EF, 0x_E4, 0x_7E, 0x_67, 0x_A0, 0x_29, 0x_54, 0x_89, 0x_DE, 0x_F5, 0x_F9, 0x_84, 0x_85, 0x_2C, 0x_29,
		0x_3D, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_E9, 0x_2E, 0x_EF, 0x_C0, 0x_7A, 0x_22, 0x_66, 0x_E5, 0x_F3, 0x_4D, 0x_13, 0x_12, 0x_91, 0x_D7, 0x_27,
		0x_D3, 0x_B1, 0x_6F, 0x_5D, 0x_93, 0x_97, 0x_55, 0x_89, 0x_8A, 0x_DC, 0x_DE, 0x_D5, 0x_76, 0x_78, 0x_25,
		0x_19, 0x_F2, 0x_05, 0x_6E, 0x_42, 0x_BD, 0x_47, 0x_29, 0x_8F, 0x_17, 0x_B8, 0x_58, 0x_C5, 0x_AE, 0x_9F,
		0x_26, 0x_1A, 0x_8E, 0x_75, 0x_85, 0x_44, 0x_DA, 0x_6A, 0x_73, 0x_01, 0x_02, 0x_AC, 0x_C7, 0x_24, 0x_3A,
		0x_1D, 0x_CD, 0x_16, 0x_A2, 0x_DD, 0x_F0, 0x_10, 0x_A0, 0x_50, 0x_90, 0x_3C, 0x_98, 0x_FC, 0x_1E, 0x_CC,
		0x_BC, 0x_94, 0x_A6, 0x_37, 0x_E4, 0x_C3, 0x_45, 0x_2A, 0x_57, 0x_D8, 0x_A8, 0x_C4, 0x_30, 0x_65, 0x_F9,
		0x_86, 0x_B3, 0x_DF, 0x_F6, 0x_3D, 0x_7C, 0x_9D, 0x_B9, 0x_03, 0x_8C, 0x_52, 0x_4B, 0x_B7, 0x_54, 0x_CF,
		0x_9B, 0x_B0, 0x_B6, 0x_BA, 0x_28, 0x_5F, 0x_2C, 0x_56, 0x_E0, 0x_D9, 0x_C9, 0x_FF, 0x_04, 0x_EA, 0x_D2,
		0x_7E, 0x_35, 0x_6C, 0x_A1, 0x_51, 0x_D1, 0x_6D, 0x_60, 0x_34, 0x_08, 0x_3F, 0x_3B, 0x_84, 0x_95, 0x_79,
		0x_7B, 0x_E3, 0x_F4, 0x_68, 0x_31, 0x_92, 0x_AA, 0x_B4, 0x_5A, 0x_FA, 0x_A9, 0x_A3, 0x_9C, 0x_BB, 0x_AD,
		0x_7F, 0x_CA, 0x_74, 0x_40, 0x_F8, 0x_F7, 0x_62, 0x_48, 0x_F5, 0x_8B, 0x_7D, 0x_06, 0x_4A, 0x_87, 0x_FB,
		0x_1C, 0x_B5, 0x_80, 0x_5E, 0x_9A, 0x_14, 0x_21, 0x_AB, 0x_BF, 0x_5B, 0x_96, 0x_11, 0x_69, 0x_D4, 0x_C2,
		0x_E1, 0x_70, 0x_CE, 0x_B2, 0x_49, 0x_3E, 0x_32, 0x_F1, 0x_A5, 0x_EC, 0x_1F, 0x_72, 0x_39,
	];

	helper(S, BASE, 89_865);
}
// endregion
// region: s_has_signs_and_zeros_and_872_799_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_872_799_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19,
		0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19,
		0x_19, 0x_19, 0x_50, 0x_7A, 0x_A8, 0x_86, 0x_E5, 0x_9C, 0x_B6, 0x_73, 0x_3D, 0x_AF, 0x_06, 0x_A0, 0x_71,
		0x_1A, 0x_A2, 0x_7C, 0x_A3, 0x_16, 0x_78, 0x_29, 0x_79, 0x_D6, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_CC, 0x_A0, 0x_F3, 0x_67, 0x_70, 0x_C6, 0x_B3, 0x_D4, 0x_91, 0x_14, 0x_DF, 0x_BD, 0x_52, 0x_4B,
		0x_97, 0x_31, 0x_78, 0x_4C, 0x_08, 0x_A4, 0x_56, 0x_FB, 0x_50, 0x_BA, 0x_61, 0x_EB, 0x_1B, 0x_C0, 0x_33,
		0x_8B, 0x_7D, 0x_27, 0x_C8, 0x_E5, 0x_0F, 0x_65, 0x_53, 0x_D0, 0x_80, 0x_B7, 0x_96, 0x_E7, 0x_5A, 0x_AB,
		0x_A7, 0x_15, 0x_62, 0x_BF, 0x_10, 0x_B1, 0x_05, 0x_9E, 0x_A8, 0x_D2, 0x_7C, 0x_AA, 0x_E6, 0x_28, 0x_40,
		0x_EC, 0x_E0, 0x_F7, 0x_18, 0x_D9, 0x_3F, 0x_79, 0x_57, 0x_BC, 0x_45, 0x_FF, 0x_46, 0x_41, 0x_32, 0x_D7,
		0x_77, 0x_F5, 0x_CF, 0x_69, 0x_B8, 0x_DD, 0x_60, 0x_D3, 0x_7A, 0x_F9, 0x_6F, 0x_ED, 0x_8F, 0x_5B, 0x_F2,
		0x_59, 0x_D5, 0x_5F, 0x_2F, 0x_AE, 0x_43, 0x_22, 0x_73, 0x_8A, 0x_7B, 0x_63, 0x_55, 0x_A1, 0x_2C, 0x_8C,
		0x_90, 0x_93, 0x_1C, 0x_BE, 0x_FC, 0x_AF, 0x_85, 0x_C1, 0x_5D, 0x_FD, 0x_EF, 0x_C5, 0x_B6, 0x_95, 0x_DC,
		0x_8E, 0x_CA, 0x_83, 0x_CE, 0x_E4, 0x_76, 0x_21, 0x_94, 0x_68, 0x_DA, 0x_B5, 0x_F4, 0x_71, 0x_C9, 0x_CD,
		0x_1A, 0x_9A, 0x_8D, 0x_25, 0x_39, 0x_12, 0x_5C, 0x_AD, 0x_29, 0x_B9, 0x_A3, 0x_3A, 0x_4F, 0x_3B, 0x_01,
		0x_0E, 0x_4D, 0x_30, 0x_5E, 0x_1D, 0x_9C, 0x_CB, 0x_6D, 0x_1F, 0x_EA, 0x_7F, 0x_B2, 0x_89, 0x_34, 0x_D6,
		0x_F0, 0x_26, 0x_88, 0x_C7, 0x_E9, 0x_06, 0x_2A, 0x_04, 0x_B4, 0x_72, 0x_11, 0x_2E, 0x_49, 0x_16, 0x_6C,
		0x_66, 0x_6B, 0x_A6, 0x_D1, 0x_54, 0x_C4, 0x_87, 0x_A2, 0x_9D, 0x_FE, 0x_03, 0x_3D, 0x_92,
	];

	helper(S, BASE, 872_799);
}
// endregion
// region: s_has_signs_and_zeros_and_1_576_719_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_1_576_719_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_4F,
		0x_44, 0x_4A, 0x_DE, 0x_09, 0x_F3, 0x_9C, 0x_A6, 0x_DF, 0x_1A, 0x_CE, 0x_96, 0x_CB, 0x_6F, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_02, 0x_04, 0x_FA, 0x_C2, 0x_FE, 0x_71, 0x_F5, 0x_6C, 0x_14, 0x_78, 0x_E1, 0x_F2, 0x_3E, 0x_A1,
		0x_75, 0x_A9, 0x_5E, 0x_80, 0x_3D, 0x_B7, 0x_ED, 0x_9A, 0x_C3, 0x_1E, 0x_16, 0x_28, 0x_B6, 0x_38, 0x_70,
		0x_D3, 0x_85, 0x_73, 0x_C1, 0x_2F, 0x_9C, 0x_39, 0x_EB, 0x_77, 0x_5B, 0x_08, 0x_F4, 0x_44, 0x_A0, 0x_E4,
		0x_D9, 0x_19, 0x_94, 0x_CE, 0x_29, 0x_DB, 0x_BB, 0x_5A, 0x_AA, 0x_4C, 0x_CB, 0x_C8, 0x_87, 0x_E6, 0x_9F,
		0x_9B, 0x_36, 0x_49, 0x_4A, 0x_DD, 0x_2A, 0x_F1, 0x_5D, 0x_7F, 0x_6E, 0x_15, 0x_11, 0x_8F, 0x_B0, 0x_03,
		0x_99, 0x_06, 0x_6D, 0x_56, 0x_63, 0x_59, 0x_EE, 0x_8D, 0x_CA, 0x_21, 0x_46, 0x_A4, 0x_D5, 0x_1B, 0x_33,
		0x_EC, 0x_51, 0x_10, 0x_FB, 0x_BE, 0x_05, 0x_7A, 0x_83, 0x_BA, 0x_BF, 0x_E2, 0x_6F, 0x_DE, 0x_E8, 0x_C9,
		0x_12, 0x_0F, 0x_92, 0x_93, 0x_13, 0x_AB, 0x_4B, 0x_68, 0x_86, 0x_F3, 0x_6A, 0x_C7, 0x_61, 0x_97, 0x_4E,
		0x_40, 0x_82, 0x_41, 0x_9E, 0x_D7, 0x_8B, 0x_F9, 0x_45, 0x_CD, 0x_43, 0x_DC, 0x_30, 0x_57, 0x_EA, 0x_18,
		0x_37, 0x_B1, 0x_B3, 0x_3F, 0x_F7, 0x_3B, 0x_5C, 0x_95, 0x_7E, 0x_8E, 0x_D8, 0x_23, 0x_17, 0x_E5, 0x_EF,
		0x_42, 0x_89, 0x_D2, 0x_FD, 0x_AF, 0x_84, 0x_D0, 0x_65, 0x_1C, 0x_1A, 0x_E3, 0x_55, 0x_62, 0x_D1, 0x_98,
		0x_54, 0x_22, 0x_B2, 0x_B4, 0x_50, 0x_8C, 0x_96, 0x_E7, 0x_D4, 0x_6B, 0x_F6, 0x_90, 0x_69, 0x_E9, 0x_DF,
		0x_C4, 0x_7D, 0x_3A, 0x_B5, 0x_88, 0x_DA, 0x_E0, 0x_A6, 0x_35, 0x_A7, 0x_79, 0x_66, 0x_26,
	];

	helper(S, BASE, 1_576_719);
}
// endregion
// region: s_has_signs_and_zeros_and_38_231_755_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_38_231_755_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_29, 0x_47, 0x_7D,
		0x_94, 0x_DD, 0x_E1, 0x_E8, 0x_C3, 0x_7D, 0x_CD, 0x_9E, 0x_06, 0x_31, 0x_E1, 0x_C6, 0x_1A, 0x_E4, 0x_21,
		0x_D7, 0x_DC, 0x_C1, 0x_13, 0x_F5, 0x_B2, 0x_F0, 0x_E1, 0x_FD, 0x_AF, 0x_28, 0x_E5, 0x_75, 0x_48, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_16, 0x_4A, 0x_38, 0x_E8, 0x_29, 0x_CC, 0x_BC, 0x_E4, 0x_8F, 0x_AE, 0x_CE, 0x_17, 0x_07, 0x_FB,
		0x_6A, 0x_B1, 0x_7B, 0x_79, 0x_6C, 0x_58, 0x_F7, 0x_25, 0x_23, 0x_E1, 0x_91, 0x_5A, 0x_08, 0x_F2, 0x_41,
		0x_CA, 0x_40, 0x_73, 0x_19, 0x_E0, 0x_A1, 0x_DC, 0x_33, 0x_2F, 0x_11, 0x_C6, 0x_FD, 0x_C7, 0x_54, 0x_87,
		0x_26, 0x_31, 0x_53, 0x_1B, 0x_5B, 0x_4E, 0x_F5, 0x_2E, 0x_9E, 0x_97, 0x_61, 0x_6D, 0x_36, 0x_22, 0x_3A,
		0x_59, 0x_47, 0x_51, 0x_E7, 0x_96, 0x_EA, 0x_3D, 0x_84, 0x_03, 0x_5C, 0x_3B, 0x_1D, 0x_AB, 0x_7D, 0x_2C,
		0x_C2, 0x_83, 0x_65, 0x_70, 0x_55, 0x_81, 0x_64, 0x_9C, 0x_89, 0x_F0, 0x_AD, 0x_A3, 0x_E5, 0x_13, 0x_E3,
		0x_C9, 0x_CD, 0x_92, 0x_D4, 0x_D5, 0x_D8, 0x_3E, 0x_A2, 0x_DF, 0x_72, 0x_37, 0x_95, 0x_ED, 0x_06, 0x_63,
		0x_B3, 0x_35, 0x_30, 0x_CB, 0x_EE, 0x_AF, 0x_71, 0x_4D, 0x_86, 0x_4F, 0x_39, 0x_6B, 0x_B5, 0x_3C, 0x_5D,
		0x_48, 0x_A6, 0x_02, 0x_90, 0x_77, 0x_5F, 0x_75, 0x_B0, 0x_18, 0x_04, 0x_D7, 0x_1A, 0x_76, 0x_45, 0x_C5,
		0x_69, 0x_D9, 0x_8E, 0x_F4, 0x_24, 0x_43, 0x_BE, 0x_A5, 0x_7C, 0x_42, 0x_9A, 0x_F6, 0x_F9, 0x_05, 0x_10,
		0x_BF, 0x_34, 0x_B9, 0x_D3, 0x_FF, 0x_9F, 0x_BA, 0x_B8, 0x_68, 0x_B7, 0x_15, 0x_B4, 0x_28, 0x_C8, 0x_B2,
		0x_D0, 0x_F3, 0x_A9, 0x_C3, 0x_98, 0x_8A, 0x_BD, 0x_C0, 0x_49, 0x_80, 0x_5E, 0x_D1, 0x_32, 0x_0E, 0x_1E,
		0x_EB, 0x_E6, 0x_78, 0x_DA, 0x_AC, 0x_C1, 0x_FE, 0x_9B, 0x_14, 0x_BB, 0x_A8, 0x_EF, 0x_94,
	];

	helper(S, BASE, 38_231_755);
}
// endregion
// region: s_has_signs_and_zeros_and_751_569_049_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_751_569_049_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D,
		0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_6D, 0x_25, 0x_25, 0x_7F, 0x_2E, 0x_C0, 0x_14, 0x_83, 0x_D8, 0x_01, 0x_EE,
		0x_A3, 0x_8B, 0x_B9, 0x_D5, 0x_A0, 0x_6E, 0x_E2, 0x_32, 0x_B1, 0x_9E, 0x_8C, 0x_2C, 0x_D6, 0x_B8, 0x_E8,
		0x_3C, 0x_F7, 0x_8A, 0x_F0, 0x_6C,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_92, 0x_58, 0x_27, 0x_E4, 0x_57, 0x_F7, 0x_B4, 0x_A2, 0x_55, 0x_AA, 0x_36, 0x_95, 0x_3E, 0x_D4,
		0x_22, 0x_77, 0x_12, 0x_EA, 0x_F0, 0x_18, 0x_83, 0x_B5, 0x_9F, 0x_7E, 0x_85, 0x_46, 0x_A9, 0x_7D, 0x_2E,
		0x_C2, 0x_EF, 0x_2A, 0x_62, 0x_82, 0x_2F, 0x_6E, 0x_3C, 0x_04, 0x_79, 0x_1A, 0x_86, 0x_67, 0x_5B, 0x_8F,
		0x_8C, 0x_DC, 0x_70, 0x_34, 0x_61, 0x_16, 0x_5A, 0x_D3, 0x_6B, 0x_CD, 0x_69, 0x_44, 0x_30, 0x_3A, 0x_BC,
		0x_C6, 0x_A6, 0x_26, 0x_10, 0x_60, 0x_89, 0x_D2, 0x_B6, 0x_EE, 0x_3B, 0x_DA, 0x_39, 0x_23, 0x_50, 0x_BD,
		0x_29, 0x_A3, 0x_14, 0x_D5, 0x_37, 0x_1C, 0x_5E, 0x_B1, 0x_AC, 0x_7B, 0x_98, 0x_52, 0x_4E, 0x_53, 0x_88,
		0x_AD, 0x_19, 0x_FA, 0x_59, 0x_A0, 0x_E5, 0x_CF, 0x_33, 0x_FB, 0x_DB, 0x_84, 0x_FF, 0x_F4, 0x_DE, 0x_25,
		0x_9B, 0x_FC, 0x_78, 0x_8A, 0x_9D, 0x_A1, 0x_31, 0x_3F, 0x_0E, 0x_F2, 0x_BA, 0x_75, 0x_F5, 0x_65, 0x_E6,
		0x_42, 0x_4D, 0x_5F, 0x_ED, 0x_49, 0x_68, 0x_6F, 0x_B0, 0x_05, 0x_D6, 0x_1E, 0x_9A, 0x_56, 0x_F1, 0x_87,
		0x_FE, 0x_54, 0x_D8, 0x_E2, 0x_21, 0x_38, 0x_01, 0x_99, 0x_F8, 0x_6A, 0x_D0, 0x_45, 0x_03, 0x_1D, 0x_C4,
		0x_8D, 0x_90, 0x_FD, 0x_B7, 0x_CE, 0x_C1, 0x_41, 0x_32, 0x_94, 0x_08, 0x_B9, 0x_E8, 0x_35, 0x_97, 0x_4B,
		0x_F6, 0x_1F, 0x_CA, 0x_D7, 0x_76, 0x_71, 0x_7A, 0x_7F, 0x_E9, 0x_B8, 0x_8B, 0x_EB, 0x_63, 0x_A8, 0x_9C,
		0x_4C, 0x_6C, 0x_06, 0x_2C, 0x_A4, 0x_E7, 0x_11, 0x_3D, 0x_C8, 0x_9E, 0x_02, 0x_D1, 0x_C3,
	];

	helper(S, BASE, 751_569_049);
}
// endregion
// region: s_has_signs_and_zeros_and_5_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_5_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC,
		0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_A3, 0x_0C, 0x_EE, 0x_7F, 0x_64, 0x_4D, 0x_D5, 0x_65, 0x_A5, 0x_15, 0x_32,
		0x_E7, 0x_26, 0x_FA, 0x_D8, 0x_13, 0x_8D, 0x_48, 0x_6F, 0x_44, 0x_8F, 0x_41, 0x_83, 0x_FD, 0x_45, 0x_54,
		0x_DE,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_ED, 0x_11, 0x_34, 0x_53, 0x_A3, 0x_27, 0x_31, 0x_05, 0x_B1, 0x_48, 0x_A9, 0x_A4, 0x_1C, 0x_03,
		0x_7F, 0x_B5, 0x_C7, 0x_22, 0x_39, 0x_DA, 0x_1B, 0x_CF, 0x_37, 0x_D7, 0x_AA, 0x_29, 0x_AE, 0x_DF, 0x_87,
		0x_14, 0x_36, 0x_10, 0x_79, 0x_02, 0x_4D, 0x_E4, 0x_89, 0x_19, 0x_97, 0x_56, 0x_1F, 0x_6A, 0x_EB, 0x_B6,
		0x_2C, 0x_17, 0x_8A, 0x_B3, 0x_64, 0x_9A, 0x_04, 0x_54, 0x_0F, 0x_F0, 0x_75, 0x_5E, 0x_CB, 0x_59, 0x_E6,
		0x_F1, 0x_C5, 0x_DC, 0x_B0, 0x_A7, 0x_EA, 0x_8D, 0x_76, 0x_F2, 0x_DD, 0x_CA, 0x_94, 0x_44, 0x_E3, 0x_51,
		0x_12, 0x_45, 0x_E5, 0x_7E, 0x_CD, 0x_A1, 0x_2F, 0x_57, 0x_13, 0x_DB, 0x_E2, 0x_A0, 0x_1E, 0x_4A, 0x_EE,
		0x_6D, 0x_BA, 0x_B8, 0x_96, 0x_3A, 0x_D8, 0x_98, 0x_FD, 0x_6F, 0x_58, 0x_BD, 0x_3D, 0x_C2, 0x_6B, 0x_5D,
		0x_A2, 0x_32, 0x_71, 0x_B7, 0x_15, 0x_41, 0x_AD, 0x_FF, 0x_9E, 0x_C3, 0x_3F, 0x_C8, 0x_F3, 0x_81, 0x_88,
		0x_7B, 0x_5F, 0x_A6, 0x_92, 0x_C1, 0x_5C, 0x_D4, 0x_84, 0x_DE, 0x_8C, 0x_91, 0x_1D, 0x_16, 0x_F4, 0x_61,
		0x_CC, 0x_4E, 0x_86, 0x_9D, 0x_3E, 0x_E0, 0x_C0, 0x_BF, 0x_2E, 0x_9C, 0x_72, 0x_D2, 0x_93, 0x_5A, 0x_5B,
		0x_A5, 0x_67, 0x_95, 0x_1A, 0x_8E, 0x_BC, 0x_30, 0x_85, 0x_50, 0x_77, 0x_BB, 0x_3B, 0x_D9, 0x_70, 0x_60,
		0x_E9, 0x_46, 0x_D3, 0x_26, 0x_9F, 0x_3C, 0x_08, 0x_EF, 0x_90, 0x_9B, 0x_F7, 0x_40, 0x_7C, 0x_47, 0x_D1,
		0x_73, 0x_AB, 0x_69, 0x_4C, 0x_01, 0x_B2, 0x_62, 0x_E1, 0x_C9, 0x_BE, 0x_B9, 0x_AF, 0x_C6, 0x_80, 0x_06,
		0x_49, 0x_52, 0x_42, 0x_38, 0x_7D, 0x_F8, 0x_FE, 0x_8F, 0x_78, 0x_D5, 0x_99, 0x_43, 0x_55, 0x_B4, 0x_74,
		0x_FA, 0x_CE, 0x_65, 0x_AC, 0x_7A, 0x_66, 0x_28, 0x_21, 0x_8B, 0x_D0, 0x_82, 0x_E7, 0x_EC, 0x_35, 0x_83,
		0x_68, 0x_4B, 0x_63, 0x_33, 0x_A8, 0x_E8, 0x_D6, 0x_C4, 0x_FB, 0x_07, 0x_F9, 0x_25, 0x_6E, 0x_4F, 0x_24,
		0x_F5, 0x_0E, 0x_6C, 0x_F6, 0x_2A, 0x_23, 0x_18,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_signs_and_zeros_and_48_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_48_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31,
		0x_31, 0x_31, 0x_31, 0x_6C, 0x_0D, 0x_33, 0x_2E, 0x_76, 0x_5C, 0x_3A, 0x_FD, 0x_BE, 0x_23, 0x_47, 0x_C5,
		0x_C3, 0x_D2, 0x_48, 0x_A6, 0x_C7, 0x_02, 0x_10, 0x_A8, 0x_90, 0x_6C, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_31, 0x_93, 0x_39, 0x_C0, 0x_B4, 0x_26, 0x_87, 0x_36, 0x_57, 0x_E9, 0x_08, 0x_F9, 0x_FD, 0x_95, 0x_7B,
		0x_D6, 0x_14, 0x_9C, 0x_4E, 0x_C3, 0x_53, 0x_81, 0x_C6, 0x_DD, 0x_CF, 0x_F1, 0x_4C, 0x_99, 0x_CA, 0x_E7,
		0x_66, 0x_DC, 0x_2E, 0x_E1, 0x_B7, 0x_D5, 0x_02, 0x_25, 0x_6F, 0x_83, 0x_03, 0x_D1, 0x_EA, 0x_F0, 0x_6B,
		0x_37, 0x_71, 0x_98, 0x_6C, 0x_DF, 0x_77, 0x_A3, 0x_28, 0x_1A, 0x_55, 0x_06, 0x_8F, 0x_E4, 0x_F5, 0x_23,
		0x_AA, 0x_16, 0x_07, 0x_96, 0x_3B, 0x_F8, 0x_BF, 0x_FB, 0x_AB, 0x_3A, 0x_1F, 0x_BA, 0x_3E, 0x_D2, 0x_33,
		0x_63, 0x_43, 0x_54, 0x_D9, 0x_40, 0x_72, 0x_E6, 0x_1C, 0x_58, 0x_EF, 0x_12, 0x_9A, 0x_B1, 0x_78, 0x_32,
		0x_88, 0x_9F, 0x_6D, 0x_D8, 0x_A0, 0x_6A, 0x_A9, 0x_73, 0x_FA, 0x_5A, 0x_4D, 0x_CC, 0x_7A, 0x_F6, 0x_8B,
		0x_82, 0x_E8, 0x_19, 0x_8A, 0x_2C, 0x_AC, 0x_C4, 0x_DE, 0x_29, 0x_34, 0x_17, 0x_91, 0x_AE, 0x_49, 0x_01,
		0x_E3, 0x_A5, 0x_7E, 0x_44, 0x_C5, 0x_B2, 0x_85, 0x_50, 0x_2A, 0x_61, 0x_A4, 0x_04, 0x_8E, 0x_92, 0x_13,
		0x_B9, 0x_B3, 0x_4A, 0x_65, 0x_70, 0x_C2, 0x_8C, 0x_7D, 0x_BB, 0x_C9, 0x_EB, 0x_90, 0x_1D, 0x_C1, 0x_CD,
		0x_86, 0x_74, 0x_D0, 0x_D4, 0x_A7, 0x_67, 0x_F7, 0x_41, 0x_27, 0x_22, 0x_7F, 0x_3F, 0x_79, 0x_11, 0x_1B,
		0x_51, 0x_DA, 0x_62, 0x_1E, 0x_7C, 0x_94, 0x_52, 0x_69, 0x_D7, 0x_24, 0x_9B, 0x_DB, 0x_D3, 0x_9E, 0x_EC,
		0x_64, 0x_C7, 0x_56, 0x_59, 0x_F4, 0x_3D, 0x_30, 0x_A1, 0x_5E, 0x_E0, 0x_FE, 0x_C8, 0x_FC, 0x_76, 0x_42,
		0x_0F, 0x_5C, 0x_5D, 0x_97, 0x_68, 0x_80, 0x_48, 0x_75, 0x_A2, 0x_21, 0x_15, 0x_B5, 0x_60, 0x_45, 0x_ED,
		0x_38, 0x_FF, 0x_5B, 0x_4B, 0x_AF, 0x_EE, 0x_BD, 0x_4F, 0x_A8, 0x_B6, 0x_AD, 0x_CB, 0x_E2, 0x_F3, 0x_18,
		0x_5F, 0x_BE, 0x_CE, 0x_05, 0x_9D, 0x_B0, 0x_47, 0x_8D, 0x_35, 0x_10, 0x_3C, 0x_89, 0x_84, 0x_BC, 0x_B8,
		0x_F2, 0x_0E, 0x_6E, 0x_A6, 0x_E5, 0x_46, 0x_2F,
	];

	helper(S, BASE, 48);
}
// endregion
// region: s_has_signs_and_zeros_and_687_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_687_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_69,
		0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69,
		0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_40,
		0x_CF, 0x_0D, 0x_8A, 0x_4E, 0x_F2, 0x_F9, 0x_49, 0x_A1, 0x_3F, 0x_5E, 0x_45, 0x_FC, 0x_82, 0x_84, 0x_7D,
		0x_30, 0x_A3, 0x_38, 0x_37, 0x_6B, 0x_7F, 0x_6A, 0x_AB, 0x_F3, 0x_D2, 0x_53, 0x_33, 0x_D5, 0x_02, 0x_C8,
		0x_8F, 0x_DF, 0x_3A, 0x_A7,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_48, 0x_40, 0x_42, 0x_71, 0x_F3, 0x_61, 0x_DC, 0x_98, 0x_B6, 0x_54, 0x_70, 0x_BF, 0x_AA, 0x_18,
		0x_D0, 0x_B0, 0x_24, 0x_6B, 0x_7C, 0x_EC, 0x_E7, 0x_9D, 0x_FA, 0x_66, 0x_1B, 0x_A5, 0x_68, 0x_BE, 0x_F5,
		0x_75, 0x_73, 0x_DB, 0x_B2, 0x_B5, 0x_34, 0x_AC, 0x_AB, 0x_26, 0x_6D, 0x_52, 0x_7B, 0x_9E, 0x_03, 0x_D4,
		0x_94, 0x_59, 0x_2C, 0x_E8, 0x_92, 0x_85, 0x_65, 0x_C3, 0x_A9, 0x_5D, 0x_9A, 0x_29, 0x_87, 0x_63, 0x_C5,
		0x_9C, 0x_97, 0x_CE, 0x_7A, 0x_DA, 0x_D3, 0x_3C, 0x_D1, 0x_CC, 0x_AD, 0x_A4, 0x_DD, 0x_F6, 0x_8E, 0x_5E,
		0x_89, 0x_5B, 0x_12, 0x_58, 0x_CB, 0x_F2, 0x_D6, 0x_B9, 0x_FC, 0x_56, 0x_6A, 0x_F1, 0x_4F, 0x_15, 0x_B3,
		0x_3A, 0x_4D, 0x_78, 0x_D9, 0x_E4, 0x_11, 0x_6C, 0x_F0, 0x_D7, 0x_9B, 0x_62, 0x_44, 0x_35, 0x_22, 0x_E9,
		0x_7F, 0x_47, 0x_53, 0x_93, 0x_BA, 0x_D2, 0x_16, 0x_3F, 0x_3E, 0x_21, 0x_B4, 0x_30, 0x_23, 0x_27, 0x_D5,
		0x_90, 0x_8D, 0x_0F, 0x_50, 0x_33, 0x_82, 0x_7D, 0x_C7, 0x_DE, 0x_5A, 0x_5F, 0x_13, 0x_1A, 0x_FF, 0x_39,
		0x_19, 0x_2E, 0x_46, 0x_77, 0x_E0, 0x_45, 0x_E2, 0x_E5, 0x_49, 0x_04, 0x_02, 0x_8F, 0x_C1, 0x_F4, 0x_C8,
		0x_BC, 0x_1C, 0x_96, 0x_BD, 0x_10, 0x_67, 0x_31, 0x_80, 0x_55, 0x_FD, 0x_57, 0x_E3, 0x_8C, 0x_07, 0x_64,
		0x_DF, 0x_17, 0x_95, 0x_CA, 0x_EA, 0x_A2, 0x_B8, 0x_7E, 0x_AE, 0x_8A, 0x_51, 0x_A6, 0x_E6, 0x_81, 0x_1D,
		0x_F7, 0x_84, 0x_F9, 0x_79, 0x_C9, 0x_05, 0x_1E, 0x_32, 0x_F8, 0x_37, 0x_A3, 0x_6E, 0x_4A, 0x_CF, 0x_2F,
		0x_EB, 0x_B1, 0x_08, 0x_A8, 0x_1F, 0x_C2, 0x_06, 0x_AF, 0x_43, 0x_4C, 0x_D8, 0x_BB, 0x_72, 0x_A0, 0x_01,
		0x_A7, 0x_0E, 0x_FB, 0x_2A, 0x_28, 0x_5C, 0x_25, 0x_86, 0x_A1, 0x_36, 0x_38, 0x_EF, 0x_8B, 0x_83, 0x_ED,
		0x_C4, 0x_76, 0x_FE, 0x_41, 0x_3D, 0x_3B, 0x_99, 0x_E1, 0x_4E, 0x_9F, 0x_C0, 0x_88, 0x_C6, 0x_91, 0x_14,
		0x_4B, 0x_EE, 0x_60, 0x_CD, 0x_B7, 0x_74, 0x_6F,
	];

	helper(S, BASE, 687);
}
// endregion
// region: s_has_signs_and_zeros_and_1_474_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_1_474_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_06, 0x_47, 0x_2D, 0x_F8, 0x_88, 0x_9E, 0x_3E, 0x_31, 0x_5F, 0x_2C, 0x_64, 0x_B2,
		0x_B5, 0x_9B, 0x_B6, 0x_57, 0x_49, 0x_EF, 0x_EC, 0x_A2, 0x_BE, 0x_98, 0x_96, 0x_FD, 0x_12, 0x_C9, 0x_D9,
		0x_1A, 0x_3A, 0x_FD, 0x_A8, 0x_90, 0x_B4, 0x_0F, 0x_71, 0x_6E, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_A3, 0x_87, 0x_DA, 0x_12, 0x_06, 0x_AB, 0x_78, 0x_D5, 0x_C5, 0x_97, 0x_5F, 0x_F2, 0x_B6, 0x_96,
		0x_60, 0x_19, 0x_CA, 0x_57, 0x_0F, 0x_11, 0x_E6, 0x_7F, 0x_18, 0x_91, 0x_DC, 0x_54, 0x_D8, 0x_EF, 0x_A2,
		0x_9A, 0x_34, 0x_EA, 0x_1E, 0x_6F, 0x_84, 0x_23, 0x_5B, 0x_26, 0x_B5, 0x_83, 0x_62, 0x_DF, 0x_25, 0x_E5,
		0x_A9, 0x_DB, 0x_CC, 0x_1C, 0x_6D, 0x_B9, 0x_4C, 0x_53, 0x_BB, 0x_72, 0x_ED, 0x_5A, 0x_CE, 0x_37, 0x_D2,
		0x_9F, 0x_BF, 0x_8A, 0x_E8, 0x_74, 0x_13, 0x_DD, 0x_76, 0x_D6, 0x_80, 0x_9B, 0x_8D, 0x_64, 0x_9D, 0x_AA,
		0x_1F, 0x_D9, 0x_29, 0x_15, 0x_31, 0x_E7, 0x_F7, 0x_45, 0x_3B, 0x_AE, 0x_DE, 0x_B3, 0x_22, 0x_2A, 0x_1B,
		0x_EE, 0x_89, 0x_01, 0x_0E, 0x_04, 0x_C8, 0x_66, 0x_55, 0x_21, 0x_D3, 0x_C1, 0x_30, 0x_2E, 0x_44, 0x_2F,
		0x_27, 0x_07, 0x_B1, 0x_5C, 0x_B2, 0x_7E, 0x_5E, 0x_61, 0x_9C, 0x_C6, 0x_4A, 0x_E0, 0x_92, 0x_CB, 0x_AD,
		0x_59, 0x_A7, 0x_BE, 0x_99, 0x_B0, 0x_D1, 0x_3A, 0x_24, 0x_52, 0x_68, 0x_69, 0x_8F, 0x_D0, 0x_A0, 0x_35,
		0x_3D, 0x_F0, 0x_71, 0x_56, 0x_C0, 0x_36, 0x_C2, 0x_5D, 0x_3C, 0x_CF, 0x_EC, 0x_B8, 0x_98, 0x_05, 0x_50,
		0x_6C, 0x_65, 0x_41, 0x_8E, 0x_FF, 0x_2C, 0x_4F, 0x_7C, 0x_B7, 0x_F8, 0x_A8, 0x_40, 0x_F5, 0x_33, 0x_16,
		0x_32, 0x_FD, 0x_F3, 0x_51, 0x_E4, 0x_8C, 0x_81, 0x_77, 0x_F1, 0x_1D, 0x_95, 0x_C9, 0x_7A, 0x_7D, 0x_6B,
		0x_02, 0x_70, 0x_10, 0x_E2, 0x_75, 0x_E3, 0x_1A, 0x_48, 0x_4B, 0x_FA, 0x_6A, 0x_F9, 0x_38, 0x_C3, 0x_86,
		0x_39, 0x_94, 0x_28, 0x_49, 0x_58, 0x_42, 0x_03, 0x_17, 0x_F4, 0x_A5, 0x_AF, 0x_08, 0x_E1, 0x_B4, 0x_D7,
		0x_73, 0x_E9, 0x_43, 0x_A6, 0x_BA, 0x_8B, 0x_F6, 0x_63, 0x_93, 0x_C7, 0x_85, 0x_CD, 0x_D4, 0x_3F, 0x_A4,
		0x_79, 0x_FE, 0x_C4, 0x_46, 0x_EB, 0x_7B, 0x_BC, 0x_BD, 0x_67, 0x_4E, 0x_AC, 0x_82, 0x_14, 0x_FC, 0x_47,
		0x_FB, 0x_90, 0x_88, 0x_6E, 0x_3E, 0x_4D, 0x_A1,
	];

	helper(S, BASE, 1_474);
}
// endregion
// region: s_has_signs_and_zeros_and_51_155_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_51_155_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_68, 0x_7D, 0x_2D, 0x_59, 0x_45, 0x_EC, 0x_61, 0x_34, 0x_2E,
		0x_55, 0x_6C, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_72, 0x_1B, 0x_71, 0x_90, 0x_DA, 0x_6F, 0x_EF, 0x_03, 0x_42, 0x_26, 0x_17, 0x_41, 0x_F9, 0x_FC,
		0x_E9, 0x_F5, 0x_0F, 0x_F8, 0x_38, 0x_4B, 0x_D8, 0x_91, 0x_3E, 0x_9E, 0x_95, 0x_7D, 0x_4C, 0x_C9, 0x_58,
		0x_5B, 0x_E3, 0x_F4, 0x_A5, 0x_35, 0x_19, 0x_70, 0x_8C, 0x_8A, 0x_96, 0x_55, 0x_F6, 0x_64, 0x_0E, 0x_60,
		0x_52, 0x_FA, 0x_44, 0x_43, 0x_D0, 0x_1A, 0x_DB, 0x_B6, 0x_06, 0x_A8, 0x_92, 0x_C1, 0x_07, 0x_CC, 0x_8E,
		0x_46, 0x_6D, 0x_A2, 0x_12, 0x_39, 0x_73, 0x_AD, 0x_87, 0x_50, 0x_2E, 0x_23, 0x_EC, 0x_14, 0x_88, 0x_3A,
		0x_E2, 0x_66, 0x_C4, 0x_32, 0x_9B, 0x_EA, 0x_BD, 0x_62, 0x_9A, 0x_54, 0x_67, 0x_CE, 0x_B1, 0x_6C, 0x_48,
		0x_A4, 0x_BF, 0x_E1, 0x_25, 0x_1E, 0x_76, 0x_97, 0x_CF, 0x_B0, 0x_13, 0x_CA, 0x_8B, 0x_B7, 0x_18, 0x_D9,
		0x_82, 0x_F7, 0x_A9, 0x_98, 0x_D7, 0x_FD, 0x_36, 0x_29, 0x_7F, 0x_EE, 0x_9D, 0x_FB, 0x_C2, 0x_DD, 0x_D5,
		0x_E6, 0x_E8, 0x_7A, 0x_16, 0x_A1, 0x_C5, 0x_CB, 0x_69, 0x_6A, 0x_47, 0x_3C, 0x_8F, 0x_05, 0x_2A, 0x_C0,
		0x_83, 0x_51, 0x_99, 0x_B2, 0x_F1, 0x_BB, 0x_89, 0x_4E, 0x_93, 0x_BE, 0x_3D, 0x_75, 0x_8D, 0x_F3, 0x_C6,
		0x_AF, 0x_B4, 0x_5F, 0x_86, 0x_77, 0x_1C, 0x_7B, 0x_6E, 0x_A6, 0x_02, 0x_22, 0x_A3, 0x_84, 0x_C3, 0x_DC,
		0x_49, 0x_9F, 0x_4D, 0x_15, 0x_63, 0x_CD, 0x_5D, 0x_D1, 0x_5E, 0x_61, 0x_31, 0x_4F, 0x_45, 0x_01, 0x_5A,
		0x_C8, 0x_37, 0x_04, 0x_27, 0x_3F, 0x_94, 0x_4A, 0x_30, 0x_ED, 0x_D4, 0x_28, 0x_65, 0x_EB, 0x_A0, 0x_79,
		0x_1F, 0x_57, 0x_7C, 0x_11, 0x_53, 0x_24, 0x_AC, 0x_B8, 0x_BA, 0x_C7, 0x_AA, 0x_59, 0x_68, 0x_3B, 0x_08,
		0x_10, 0x_AE, 0x_E0, 0x_E4, 0x_40, 0x_D3, 0x_B9, 0x_7E, 0x_FE, 0x_74, 0x_A7, 0x_2F, 0x_F0, 0x_80, 0x_D6,
		0x_BC, 0x_78, 0x_56, 0x_DF, 0x_81, 0x_D2, 0x_1D, 0x_21, 0x_E5, 0x_B5, 0x_E7, 0x_34, 0x_DE, 0x_2C, 0x_6B,
		0x_5C, 0x_FF, 0x_B3, 0x_33, 0x_85, 0x_AB, 0x_9C,
	];

	helper(S, BASE, 51_155);
}
// endregion
// region: s_has_signs_and_zeros_and_494_883_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_494_883_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_6E, 0x_1E, 0x_EE, 0x_2D, 0x_99, 0x_40, 0x_C5, 0x_1D, 0x_90, 0x_DA, 0x_F7, 0x_79, 0x_EA, 0x_85, 0x_FD,
		0x_1E, 0x_54, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_F3, 0x_C2, 0x_F9, 0x_CC, 0x_76, 0x_E8, 0x_3C, 0x_6E, 0x_91, 0x_70, 0x_B3, 0x_6F, 0x_14, 0x_C1,
		0x_90, 0x_C5, 0x_07, 0x_80, 0x_55, 0x_1B, 0x_44, 0x_D5, 0x_C0, 0x_05, 0x_E6, 0x_F5, 0x_1E, 0x_25, 0x_7A,
		0x_9F, 0x_1C, 0x_3B, 0x_71, 0x_0E, 0x_32, 0x_B4, 0x_B0, 0x_3A, 0x_93, 0x_CF, 0x_2F, 0x_54, 0x_6C, 0x_2A,
		0x_5F, 0x_DB, 0x_B5, 0x_5E, 0x_CD, 0x_86, 0x_FC, 0x_10, 0x_35, 0x_46, 0x_40, 0x_C6, 0x_F8, 0x_88, 0x_99,
		0x_FF, 0x_3F, 0x_BD, 0x_4E, 0x_E7, 0x_BC, 0x_1F, 0x_2C, 0x_BF, 0x_39, 0x_A6, 0x_77, 0x_02, 0x_74, 0x_2E,
		0x_1D, 0x_22, 0x_AE, 0x_53, 0x_EB, 0x_79, 0x_21, 0x_7D, 0x_03, 0x_FE, 0x_F7, 0x_F2, 0x_A0, 0x_97, 0x_D9,
		0x_B8, 0x_4A, 0x_82, 0x_78, 0x_60, 0x_ED, 0x_11, 0x_D8, 0x_33, 0x_EC, 0x_AD, 0x_29, 0x_FA, 0x_41, 0x_85,
		0x_9B, 0x_DA, 0x_E5, 0x_75, 0x_81, 0x_17, 0x_CE, 0x_42, 0x_47, 0x_50, 0x_65, 0x_01, 0x_19, 0x_3D, 0x_72,
		0x_13, 0x_23, 0x_95, 0x_8E, 0x_08, 0x_04, 0x_3E, 0x_F0, 0x_5A, 0x_DD, 0x_7E, 0x_15, 0x_A3, 0x_8D, 0x_B6,
		0x_4F, 0x_56, 0x_C9, 0x_F4, 0x_C4, 0x_6B, 0x_BE, 0x_EE, 0x_38, 0x_D4, 0x_9D, 0x_C3, 0x_87, 0x_27, 0x_8F,
		0x_F1, 0x_A1, 0x_52, 0x_31, 0x_C7, 0x_E4, 0x_B1, 0x_C8, 0x_CA, 0x_4D, 0x_57, 0x_4B, 0x_24, 0x_A8, 0x_D7,
		0x_45, 0x_30, 0x_A5, 0x_26, 0x_7B, 0x_6A, 0x_4C, 0x_68, 0x_98, 0x_34, 0x_8B, 0x_DF, 0x_8A, 0x_67, 0x_CB,
		0x_AC, 0x_06, 0x_9A, 0x_E9, 0x_94, 0x_D3, 0x_DC, 0x_37, 0x_D6, 0x_EF, 0x_66, 0x_E0, 0x_F6, 0x_D0, 0x_9C,
		0x_8C, 0x_BA, 0x_5C, 0x_7C, 0x_AA, 0x_B9, 0x_D2, 0x_18, 0x_63, 0x_FB, 0x_89, 0x_36, 0x_48, 0x_9E, 0x_58,
		0x_AF, 0x_73, 0x_A2, 0x_B2, 0x_5D, 0x_A7, 0x_43, 0x_B7, 0x_16, 0x_A4, 0x_DE, 0x_6D, 0x_92, 0x_83, 0x_59,
		0x_E1, 0x_69, 0x_D1, 0x_0F, 0x_FD, 0x_64, 0x_5B, 0x_51, 0x_7F, 0x_AB, 0x_96, 0x_A9, 0x_E3, 0x_49, 0x_1A,
		0x_BB, 0x_28, 0x_E2, 0x_EA, 0x_84, 0x_62, 0x_12,
	];

	helper(S, BASE, 494_883);
}
// endregion
// region: s_has_signs_and_zeros_and_5_806_767_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_5_806_767_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36,
		0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_3F, 0x_C7, 0x_C7, 0x_0C,
		0x_FD, 0x_4D, 0x_ED, 0x_C6, 0x_DA, 0x_B0, 0x_6A, 0x_A6, 0x_55, 0x_0F, 0x_F9, 0x_C2, 0x_DE, 0x_10, 0x_C2,
		0x_19, 0x_AC, 0x_23, 0x_78, 0x_25, 0x_BA, 0x_48, 0x_4F, 0x_65, 0x_DB, 0x_47, 0x_43, 0x_63, 0x_D7, 0x_05,
		0x_75, 0x_7E, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_36, 0x_94, 0x_2C, 0x_5C, 0x_DC, 0x_9C, 0x_EF, 0x_3B, 0x_65, 0x_73, 0x_A0, 0x_F2, 0x_E2, 0x_F3, 0x_F7,
		0x_E7, 0x_C4, 0x_86, 0x_FD, 0x_6A, 0x_D6, 0x_55, 0x_AD, 0x_9B, 0x_4E, 0x_67, 0x_DB, 0x_AA, 0x_F6, 0x_6B,
		0x_48, 0x_9E, 0x_BD, 0x_C6, 0x_82, 0x_59, 0x_E8, 0x_BC, 0x_A7, 0x_BE, 0x_50, 0x_3E, 0x_CD, 0x_A1, 0x_C7,
		0x_CA, 0x_EA, 0x_62, 0x_52, 0x_28, 0x_DF, 0x_8D, 0x_70, 0x_A9, 0x_76, 0x_E9, 0x_11, 0x_B9, 0x_87, 0x_D3,
		0x_8A, 0x_64, 0x_4F, 0x_75, 0x_74, 0x_63, 0x_96, 0x_3C, 0x_E4, 0x_21, 0x_1C, 0x_37, 0x_7B, 0x_C1, 0x_8F,
		0x_43, 0x_AC, 0x_D4, 0x_D1, 0x_7E, 0x_13, 0x_40, 0x_68, 0x_CE, 0x_AE, 0x_B0, 0x_A5, 0x_33, 0x_66, 0x_DE,
		0x_04, 0x_42, 0x_69, 0x_05, 0x_14, 0x_3F, 0x_47, 0x_F8, 0x_D2, 0x_8C, 0x_72, 0x_31, 0x_C5, 0x_49, 0x_4A,
		0x_CB, 0x_D0, 0x_F4, 0x_98, 0x_1D, 0x_51, 0x_E1, 0x_FE, 0x_E5, 0x_10, 0x_61, 0x_79, 0x_CC, 0x_DA, 0x_2F,
		0x_6F, 0x_2E, 0x_D8, 0x_88, 0x_6C, 0x_A2, 0x_FA, 0x_AB, 0x_89, 0x_7A, 0x_60, 0x_07, 0x_CF, 0x_BF, 0x_22,
		0x_08, 0x_4C, 0x_93, 0x_58, 0x_83, 0x_FB, 0x_71, 0x_16, 0x_8B, 0x_6E, 0x_A8, 0x_44, 0x_A3, 0x_EC, 0x_5A,
		0x_02, 0x_BA, 0x_A6, 0x_26, 0x_6D, 0x_B1, 0x_F1, 0x_1A, 0x_12, 0x_4D, 0x_30, 0x_7F, 0x_B2, 0x_25, 0x_03,
		0x_46, 0x_D5, 0x_E3, 0x_7D, 0x_5F, 0x_F9, 0x_34, 0x_1F, 0x_1E, 0x_06, 0x_C9, 0x_17, 0x_29, 0x_57, 0x_91,
		0x_95, 0x_45, 0x_F0, 0x_53, 0x_5E, 0x_DD, 0x_32, 0x_4B, 0x_97, 0x_D7, 0x_7C, 0x_18, 0x_E0, 0x_B5, 0x_77,
		0x_FF, 0x_5B, 0x_19, 0x_3D, 0x_24, 0x_B8, 0x_92, 0x_78, 0x_FC, 0x_35, 0x_27, 0x_B7, 0x_2A, 0x_15, 0x_9A,
		0x_F5, 0x_B6, 0x_C0, 0x_5D, 0x_1B, 0x_39, 0x_3A, 0x_9D, 0x_54, 0x_38, 0x_C2, 0x_ED, 0x_23, 0x_A4, 0x_EE,
		0x_AF, 0x_B3, 0x_C3, 0x_99, 0x_84, 0x_80, 0x_0E, 0x_81, 0x_EB, 0x_01, 0x_9F, 0x_0F, 0x_BB, 0x_B4, 0x_E6,
		0x_41, 0x_90, 0x_56, 0x_C8, 0x_D9, 0x_85, 0x_8E,
	];

	helper(S, BASE, 5_806_767);
}
// endregion
// region: s_has_signs_and_zeros_and_10_017_376_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_10_017_376_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE,
		0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE,
		0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE,
		0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_C5, 0x_E9, 0x_FF, 0x_2B, 0x_8F, 0x_BC, 0x_BA, 0x_E2, 0x_51, 0x_97, 0x_64,
		0x_80,
	];
	const BASE: &[u8] = &[
		0x_FE, 0x_D4, 0x_F5, 0x_B0, 0x_EA, 0x_9E, 0x_65, 0x_B1, 0x_32, 0x_92, 0x_93, 0x_23, 0x_1E, 0x_1D, 0x_37,
		0x_66, 0x_F9, 0x_48, 0x_AA, 0x_3C, 0x_B4, 0x_E2, 0x_2F, 0x_B7, 0x_91, 0x_F1, 0x_13, 0x_EC, 0x_52, 0x_A2,
		0x_17, 0x_C2, 0x_B5, 0x_4A, 0x_12, 0x_C6, 0x_6C, 0x_75, 0x_8F, 0x_51, 0x_F8, 0x_36, 0x_D5, 0x_AE, 0x_FF,
		0x_40, 0x_CB, 0x_5E, 0x_E9, 0x_15, 0x_81, 0x_DF, 0x_80, 0x_FA, 0x_8A, 0x_3D, 0x_21, 0x_83, 0x_43, 0x_CD,
		0x_29, 0x_B6, 0x_BE, 0x_9D, 0x_6E, 0x_22, 0x_D2, 0x_67, 0x_DE, 0x_06, 0x_C3, 0x_85, 0x_2C, 0x_C7, 0x_EB,
		0x_FD, 0x_34, 0x_42, 0x_BA, 0x_1B, 0x_76, 0x_5C, 0x_9A, 0x_8D, 0x_B9, 0x_B8, 0x_AF, 0x_88, 0x_DB, 0x_FC,
		0x_11, 0x_F0, 0x_0F, 0x_59, 0x_7E, 0x_9B, 0x_F2, 0x_A8, 0x_56, 0x_A7, 0x_8C, 0x_50, 0x_61, 0x_8B, 0x_3A,
		0x_E3, 0x_70, 0x_57, 0x_24, 0x_77, 0x_10, 0x_C1, 0x_74, 0x_97, 0x_84, 0x_F3, 0x_1A, 0x_58, 0x_E0, 0x_55,
		0x_6B, 0x_4F, 0x_6D, 0x_35, 0x_46, 0x_26, 0x_5D, 0x_64, 0x_14, 0x_DC, 0x_4D, 0x_C9, 0x_4E, 0x_5B, 0x_73,
		0x_C4, 0x_A5, 0x_A0, 0x_EF, 0x_94, 0x_79, 0x_A4, 0x_03, 0x_49, 0x_D1, 0x_E5, 0x_3E, 0x_B3, 0x_7B, 0x_68,
		0x_05, 0x_F6, 0x_7D, 0x_AC, 0x_18, 0x_E4, 0x_CC, 0x_D7, 0x_95, 0x_5F, 0x_A9, 0x_B2, 0x_96, 0x_DD, 0x_C5,
		0x_25, 0x_47, 0x_7A, 0x_AB, 0x_AD, 0x_FB, 0x_54, 0x_3F, 0x_53, 0x_D8, 0x_D6, 0x_EE, 0x_41, 0x_78, 0x_C8,
		0x_5A, 0x_BB, 0x_1F, 0x_31, 0x_6F, 0x_16, 0x_19, 0x_90, 0x_9F, 0x_98, 0x_27, 0x_9C, 0x_F7, 0x_8E, 0x_60,
		0x_89, 0x_07, 0x_99, 0x_CA, 0x_62, 0x_2E, 0x_D0, 0x_39, 0x_69, 0x_30, 0x_7F, 0x_BF, 0x_2A, 0x_28, 0x_0E,
		0x_A3, 0x_E6, 0x_E1, 0x_63, 0x_33, 0x_71, 0x_7C, 0x_CF, 0x_3B, 0x_87, 0x_D3, 0x_38, 0x_44, 0x_CE, 0x_C0,
		0x_02, 0x_D9, 0x_BD, 0x_ED, 0x_A1, 0x_E8, 0x_DA, 0x_01, 0x_82, 0x_E7, 0x_BC, 0x_45, 0x_4B, 0x_A6, 0x_6A,
		0x_72, 0x_4C, 0x_1C, 0x_04, 0x_F4, 0x_86, 0x_08,
	];

	helper(S, BASE, 10_017_376);
}
// endregion
// region: s_has_signs_and_zeros_and_538_896_783_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_538_896_783_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A,
		0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_B9, 0x_FD, 0x_AB, 0x_48, 0x_0B, 0x_EB, 0x_5E, 0x_74, 0x_4D, 0x_C6, 0x_FB,
		0x_6B, 0x_B9, 0x_8E, 0x_4F, 0x_53, 0x_0F, 0x_7C, 0x_17, 0x_BD, 0x_AA, 0x_2C, 0x_B9,
	];
	const BASE: &[u8] = &[
		0x_6A, 0x_D5, 0x_F3, 0x_A8, 0x_CF, 0x_28, 0x_88, 0x_90, 0x_69, 0x_32, 0x_E8, 0x_9B, 0x_91, 0x_84, 0x_FE,
		0x_F8, 0x_62, 0x_AB, 0x_A3, 0x_0E, 0x_16, 0x_5B, 0x_37, 0x_30, 0x_97, 0x_92, 0x_8D, 0x_87, 0x_CB, 0x_DC,
		0x_21, 0x_96, 0x_63, 0x_A4, 0x_35, 0x_B9, 0x_6B, 0x_E1, 0x_F7, 0x_BD, 0x_10, 0x_BA, 0x_94, 0x_7C, 0x_D4,
		0x_E9, 0x_F6, 0x_71, 0x_07, 0x_EE, 0x_A7, 0x_47, 0x_5C, 0x_14, 0x_4C, 0x_ED, 0x_61, 0x_01, 0x_3A, 0x_05,
		0x_B8, 0x_E0, 0x_B5, 0x_46, 0x_54, 0x_D1, 0x_E4, 0x_40, 0x_E6, 0x_7D, 0x_83, 0x_5D, 0x_D6, 0x_8F, 0x_F9,
		0x_2E, 0x_98, 0x_53, 0x_F0, 0x_23, 0x_C9, 0x_72, 0x_9E, 0x_78, 0x_B6, 0x_5F, 0x_E7, 0x_48, 0x_3F, 0x_AD,
		0x_E2, 0x_BF, 0x_A0, 0x_D7, 0x_50, 0x_51, 0x_04, 0x_C1, 0x_1D, 0x_9C, 0x_AF, 0x_52, 0x_1F, 0x_75, 0x_60,
		0x_E3, 0x_73, 0x_89, 0x_AE, 0x_6C, 0x_59, 0x_74, 0x_F5, 0x_49, 0x_4F, 0x_85, 0x_12, 0x_1C, 0x_31, 0x_DB,
		0x_D2, 0x_56, 0x_BC, 0x_8C, 0x_25, 0x_C6, 0x_3C, 0x_2F, 0x_A2, 0x_7A, 0x_C8, 0x_6E, 0x_58, 0x_FA, 0x_22,
		0x_8E, 0x_6F, 0x_65, 0x_18, 0x_DA, 0x_9D, 0x_42, 0x_1E, 0x_A5, 0x_F4, 0x_11, 0x_FB, 0x_70, 0x_A6, 0x_99,
		0x_B0, 0x_FC, 0x_81, 0x_68, 0x_3D, 0x_C0, 0x_BB, 0x_7B, 0x_B3, 0x_39, 0x_45, 0x_27, 0x_24, 0x_5A, 0x_CD,
		0x_29, 0x_06, 0x_4E, 0x_B1, 0x_D3, 0x_B7, 0x_02, 0x_7F, 0x_8A, 0x_CA, 0x_67, 0x_4D, 0x_9A, 0x_8B, 0x_36,
		0x_B2, 0x_EB, 0x_D0, 0x_17, 0x_C4, 0x_86, 0x_EC, 0x_A1, 0x_FD, 0x_6D, 0x_AC, 0x_79, 0x_1A, 0x_77, 0x_57,
		0x_5E, 0x_44, 0x_B4, 0x_4B, 0x_BE, 0x_34, 0x_CC, 0x_55, 0x_F2, 0x_82, 0x_64, 0x_DD, 0x_15, 0x_95, 0x_3E,
		0x_C7, 0x_0F, 0x_A9, 0x_33, 0x_EF, 0x_C5, 0x_3B, 0x_D8, 0x_2A, 0x_13, 0x_4A, 0x_F1, 0x_AA, 0x_2C, 0x_41,
		0x_80, 0x_1B, 0x_93, 0x_7E, 0x_DE, 0x_26, 0x_FF, 0x_43, 0x_76, 0x_DF, 0x_D9, 0x_9F, 0x_19, 0x_E5, 0x_66,
		0x_38, 0x_C3, 0x_CE, 0x_C2, 0x_EA, 0x_03, 0x_08,
	];

	helper(S, BASE, 538_896_783);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_4_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_4_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_0B,
		0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0A,
		0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55,
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55,
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_DB, 0x_55, 0x_55, 0x_83,
		0x_DB, 0x_DB, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_DB, 0x_55, 0x_DB, 0x_55, 0x_55, 0x_DB, 0x_55, 0x_55,
		0x_DB, 0x_55, 0x_55, 0x_55, 0x_55, 0x_DB, 0x_DB, 0x_DB, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_DB,
	];

	helper(S, BASE, 4);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_74_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_74_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_49, 0x_68, 0x_68, 0x_49, 0x_68, 0x_49, 0x_68,
		0x_FF, 0x_49, 0x_49, 0x_68, 0x_68, 0x_49, 0x_68, 0x_68, 0x_49, 0x_49, 0x_68, 0x_68, 0x_49, 0x_49, 0x_68,
		0x_49, 0x_49, 0x_49, 0x_68, 0x_49, 0x_49, 0x_49, 0x_68, 0x_49, 0x_49, 0x_68, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_49,
	];

	helper(S, BASE, 74);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_510_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_510_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25,
		0x_25, 0x_25, 0x_25, 0x_25, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_25, 0x_FF, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_C1,
	];

	helper(S, BASE, 510);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_1_112_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_1_112_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0C,
		0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5,
		0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_CB, 0x_F5, 0x_F5, 0x_F5, 0x_CB, 0x_F5, 0x_CB, 0x_CB, 0x_F5, 0x_F5,
		0x_F5, 0x_67, 0x_CB, 0x_CB, 0x_F5, 0x_CB, 0x_F5, 0x_CB, 0x_F5, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_F5, 0x_CB,
		0x_F5, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_F5, 0x_CB, 0x_CB, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_CB,
	];

	helper(S, BASE, 1_112);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_77_451_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_77_451_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B,
		0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B,
		0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B,
		0x_8B, 0x_8B, 0x_D3, 0x_8B, 0x_8B, 0x_D3, 0x_8B, 0x_D3, 0x_D3, 0x_D3, 0x_8B, 0x_D3, 0x_8B, 0x_8B, 0x_8B,
		0x_D3, 0x_8B, 0x_D3, 0x_D3, 0x_1C, 0x_D3, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_D3, 0x_8B, 0x_D3, 0x_8B,
		0x_8B, 0x_D3, 0x_8B, 0x_D3, 0x_D3, 0x_8B, 0x_D3, 0x_D3, 0x_8B, 0x_8B, 0x_D3, 0x_8B, 0x_D3, 0x_8B, 0x_8B,
		0x_D3, 0x_D3, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_8B, 0x_D3,
	];

	helper(S, BASE, 77_451);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_610_805_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_610_805_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0D,
		0x_0C, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_5B, 0x_5B, 0x_6F, 0x_5B, 0x_5B, 0x_6F, 0x_5B, 0x_6F, 0x_5B, 0x_6F, 0x_5B, 0x_5B,
		0x_5B, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_5B, 0x_6F, 0x_5B, 0x_6F, 0x_13, 0x_5B, 0x_6F, 0x_6F, 0x_5B,
		0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_6F, 0x_6F, 0x_5B,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_6F,
	];

	helper(S, BASE, 610_805);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_7_328_365_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_7_328_365_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0A,
		0x_0A, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_20,
		0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_67, 0x_67, 0x_CF, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67, 0x_67,
		0x_CF, 0x_67, 0x_CF, 0x_CF, 0x_67, 0x_CF, 0x_CF, 0x_67, 0x_67, 0x_CF, 0x_67, 0x_67, 0x_CF, 0x_67, 0x_14,
		0x_CF, 0x_67, 0x_67, 0x_67, 0x_67, 0x_CF, 0x_67, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_67, 0x_67, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_67,
	];

	helper(S, BASE, 7_328_365);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_25_262_244_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_25_262_244_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_20,
		0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0D,
		0x_20, 0x_0D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53,
		0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_FC, 0x_FC, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_FC,
		0x_53, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_53, 0x_53, 0x_53, 0x_FC, 0x_53, 0x_FC, 0x_53, 0x_53, 0x_FC, 0x_53,
		0x_53, 0x_B4, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_53, 0x_FC,
	];

	helper(S, BASE, 25_262_244);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_600_942_585_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_600_942_585_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0C,
		0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_16, 0x_16, 0x_16, 0x_16,
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16,
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16,
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_0E, 0x_16, 0x_16, 0x_16, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_16,
		0x_0E, 0x_16, 0x_16, 0x_16, 0x_0E, 0x_0E, 0x_16, 0x_0E, 0x_16, 0x_16, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_16, 0x_16, 0x_0E, 0x_09, 0x_0E, 0x_16, 0x_16, 0x_16, 0x_16, 0x_0E, 0x_16, 0x_16,
		0x_16, 0x_0E, 0x_0E, 0x_0E, 0x_16, 0x_16,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_0E,
	];

	helper(S, BASE, 600_942_585);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_1_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_1_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0C,
		0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0B,
		0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_43, 0x_A3, 0x_17, 0x_43, 0x_43, 0x_43, 0x_43, 0x_17, 0x_43,
		0x_50, 0x_17, 0x_50, 0x_17, 0x_50, 0x_43, 0x_50, 0x_50, 0x_17, 0x_50, 0x_17, 0x_50, 0x_43, 0x_17, 0x_43,
		0x_50, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_43, 0x_50,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_15_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_15_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_42, 0x_42,
		0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42,
		0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42,
		0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_F4, 0x_38, 0x_42, 0x_9C, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_F4, 0x_38,
	];

	helper(S, BASE, 15);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_480_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_480_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0C,
		0x_0A, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_20,
		0x_20, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A,
		0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A,
		0x_2A, 0x_2A, 0x_48, 0x_F9, 0x_F9, 0x_F9, 0x_48, 0x_2A, 0x_1F, 0x_F9, 0x_2A, 0x_2A, 0x_48, 0x_2A, 0x_48,
		0x_F9, 0x_48, 0x_F9, 0x_48, 0x_48, 0x_2A, 0x_2A, 0x_F9, 0x_F9, 0x_2A, 0x_F9, 0x_2A, 0x_F9, 0x_2A, 0x_F9,
		0x_2A, 0x_48, 0x_48, 0x_2A, 0x_2A, 0x_F9, 0x_F9, 0x_48, 0x_48, 0x_F9, 0x_48, 0x_F9, 0x_F9, 0x_48, 0x_2A,
		0x_2A, 0x_F9, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_48, 0x_F9,
	];

	helper(S, BASE, 480);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_2_075_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_2_075_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_2B, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_6A, 0x_6A, 0x_F3, 0x_F3, 0x_6A, 0x_F3, 0x_6A, 0x_A6, 0x_6A, 0x_F3, 0x_75, 0x_75, 0x_6A, 0x_75,
		0x_75, 0x_F3, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_F3, 0x_6A,
	];

	helper(S, BASE, 2_075);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_85_637_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_85_637_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0C,
		0x_0C, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_2B, 0x_1D, 0x_1D,
		0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D,
		0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D,
		0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_BB, 0x_BB, 0x_BB, 0x_1D, 0x_1D, 0x_BB, 0x_BB, 0x_1D, 0x_24, 0x_1D,
		0x_24, 0x_37, 0x_BB, 0x_1D, 0x_BB, 0x_1D, 0x_BB, 0x_BB, 0x_24, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_BB, 0x_24,
	];

	helper(S, BASE, 85_637);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_185_061_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_185_061_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1,
		0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1,
		0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_3A, 0x_E1, 0x_E1, 0x_3A,
		0x_E1, 0x_3A, 0x_CE, 0x_3A, 0x_CE, 0x_E1, 0x_3A, 0x_E1, 0x_44, 0x_CE, 0x_E1, 0x_3A, 0x_E1, 0x_CE, 0x_3A,
		0x_E1, 0x_E1, 0x_CE, 0x_3A, 0x_CE, 0x_3A, 0x_3A, 0x_3A, 0x_CE, 0x_CE, 0x_CE,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_3A, 0x_CE,
	];

	helper(S, BASE, 185_061);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_1_632_749_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_1_632_749_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_0D,
		0x_09, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0A,
		0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_8D, 0x_C9, 0x_C9, 0x_C9, 0x_8D, 0x_8F, 0x_8F,
		0x_8D, 0x_8F, 0x_C9, 0x_8D, 0x_C9, 0x_8D, 0x_8F, 0x_50, 0x_8D, 0x_8F, 0x_8F, 0x_8D, 0x_8F, 0x_C9, 0x_8F,
		0x_8D, 0x_C9, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_8D, 0x_8F,
	];

	helper(S, BASE, 1_632_749);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_14_522_038_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_14_522_038_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_73, 0x_73, 0x_73,
		0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73,
		0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_B2, 0x_73, 0x_73, 0x_73, 0x_73, 0x_29, 0x_29, 0x_29, 0x_B2, 0x_73,
		0x_B2, 0x_B2, 0x_B2, 0x_73, 0x_29, 0x_B2, 0x_C5, 0x_73, 0x_B2, 0x_73, 0x_B2, 0x_29, 0x_73, 0x_B2, 0x_73,
		0x_B2, 0x_73, 0x_73, 0x_B2, 0x_29, 0x_29, 0x_73, 0x_29, 0x_73, 0x_73, 0x_73, 0x_29, 0x_B2, 0x_B2, 0x_29,
		0x_B2, 0x_73, 0x_B2, 0x_B2, 0x_B2, 0x_29, 0x_B2, 0x_73, 0x_29, 0x_73, 0x_B2, 0x_73, 0x_B2, 0x_29, 0x_73,
		0x_B2, 0x_B2, 0x_29, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_B2, 0x_29,
	];

	helper(S, BASE, 14_522_038);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_544_993_475_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_544_993_475_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0A,
		0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0C,
		0x_20, 0x_0A, 0x_2B, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3,
		0x_A3, 0x_A3, 0x_A3, 0x_37, 0x_37, 0x_A3, 0x_37, 0x_5A, 0x_5A, 0x_5A, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37,
		0x_5A, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_5A, 0x_A2, 0x_A3, 0x_A3, 0x_5A, 0x_37, 0x_5A, 0x_37, 0x_A3,
		0x_37, 0x_37, 0x_A3, 0x_A3, 0x_37, 0x_A3, 0x_A3, 0x_A3,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_37, 0x_5A,
	];

	helper(S, BASE, 544_993_475);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_3_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_3_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1,
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1,
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_C0, 0x_6A, 0x_C0, 0x_D6, 0x_C0, 0x_AA, 0x_AA, 0x_D6, 0x_C0, 0x_AE, 0x_AA,
		0x_D6, 0x_AA, 0x_F1, 0x_AE, 0x_AE, 0x_AA, 0x_C0, 0x_F1, 0x_C0, 0x_C0, 0x_D6, 0x_F1, 0x_AE, 0x_AE, 0x_C0,
		0x_D6, 0x_AE, 0x_D6, 0x_F1, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_AA, 0x_AE, 0x_C0, 0x_D6,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_29_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_29_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_21,
		0x_59, 0x_12, 0x_23, 0x_59, 0x_83, 0x_60, 0x_59, 0x_60, 0x_60, 0x_83, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_21, 0x_60, 0x_83, 0x_12,
	];

	helper(S, BASE, 29);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_397_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_397_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_49, 0x_1C, 0x_64, 0x_D4, 0x_0E, 0x_D4, 0x_64, 0x_56, 0x_64, 0x_64, 0x_1C, 0x_D4, 0x_D4, 0x_64,
		0x_64, 0x_49, 0x_49, 0x_64, 0x_56, 0x_56, 0x_56, 0x_D4, 0x_64, 0x_1C, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_56, 0x_D4, 0x_49, 0x_64,
	];

	helper(S, BASE, 397);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_6_646_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_6_646_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_10, 0x_41, 0x_4B,
		0x_41, 0x_B1, 0x_64, 0x_74, 0x_10, 0x_B1, 0x_10, 0x_B1, 0x_B1, 0x_10, 0x_64, 0x_4B, 0x_10, 0x_4B, 0x_10,
		0x_41, 0x_41, 0x_B1, 0x_41, 0x_10, 0x_10, 0x_41, 0x_64, 0x_B1, 0x_4B, 0x_41, 0x_10, 0x_B1, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_64, 0x_10, 0x_4B, 0x_B1,
	];

	helper(S, BASE, 6_646);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_15_176_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_15_176_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_EF, 0x_66, 0x_66, 0x_A4, 0x_F4, 0x_EF, 0x_A4, 0x_43, 0x_66, 0x_65, 0x_A4, 0x_EF,
		0x_A4, 0x_F4, 0x_A4, 0x_F4, 0x_EF, 0x_65, 0x_EF, 0x_66, 0x_EF, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_A4, 0x_F4, 0x_65, 0x_66,
	];

	helper(S, BASE, 15_176);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_339_929_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_339_929_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_94, 0x_A1, 0x_FC, 0x_A8, 0x_A8, 0x_A1, 0x_DC, 0x_94, 0x_A1, 0x_A7, 0x_DC,
		0x_A1, 0x_FC, 0x_DC, 0x_94, 0x_A8, 0x_DC, 0x_94, 0x_DC, 0x_94, 0x_FC, 0x_FC, 0x_A8, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_FC, 0x_DC, 0x_A8, 0x_A1,
	];

	helper(S, BASE, 339_929);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_9_777_811_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_9_777_811_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0C,
		0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_D2, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_72, 0x_CC, 0x_A8, 0x_A8, 0x_A8, 0x_D2, 0x_EF, 0x_A8, 0x_A8, 0x_CC, 0x_72, 0x_72, 0x_72, 0x_A8, 0x_D2,
		0x_72, 0x_72, 0x_61, 0x_72, 0x_A8, 0x_D2, 0x_D2, 0x_A8, 0x_CC, 0x_CC, 0x_D2, 0x_72, 0x_61, 0x_A8, 0x_A8,
		0x_D2, 0x_CC, 0x_A8, 0x_D2, 0x_72, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_D2, 0x_A8, 0x_72, 0x_CC,
	];

	helper(S, BASE, 9_777_811);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_18_192_185_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_18_192_185_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_2D, 0x_2D, 0x_2B, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_B0, 0x_52, 0x_B0, 0x_16, 0x_52, 0x_B0, 0x_16, 0x_16, 0x_16, 0x_16, 0x_5C, 0x_B3, 0x_52,
		0x_16, 0x_B0, 0x_5C, 0x_86, 0x_86, 0x_86, 0x_5C, 0x_B0, 0x_B0, 0x_16, 0x_5C, 0x_52, 0x_B0, 0x_B0, 0x_16,
		0x_52, 0x_5C, 0x_16, 0x_52, 0x_52, 0x_86, 0x_5C, 0x_5C, 0x_86, 0x_16, 0x_5C, 0x_5C, 0x_5C, 0x_16, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_B0, 0x_16, 0x_86, 0x_52,
	];

	helper(S, BASE, 18_192_185);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_420_779_926_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_420_779_926_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB,
		0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_EC, 0x_2E, 0x_2E, 0x_DB,
		0x_B6, 0x_DB, 0x_8D, 0x_8D, 0x_B6, 0x_8D, 0x_B6, 0x_DB, 0x_EC, 0x_D0, 0x_8D, 0x_2E, 0x_8D, 0x_2E, 0x_2E,
		0x_8D, 0x_EC, 0x_EC, 0x_8D, 0x_B6, 0x_B6, 0x_8D, 0x_DB, 0x_B6, 0x_2E, 0x_B6, 0x_B6, 0x_8D, 0x_2E, 0x_DB,
		0x_2E, 0x_EC, 0x_B6, 0x_DB, 0x_B6, 0x_DB, 0x_8D, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_EC, 0x_B6, 0x_2E, 0x_8D,
	];

	helper(S, BASE, 420_779_926);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_2_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_2_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_0C,
		0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_73,
		0x_73, 0x_73, 0x_73, 0x_73, 0x_D6, 0x_9E, 0x_AF, 0x_06, 0x_AF, 0x_06, 0x_56, 0x_AF, 0x_06, 0x_06, 0x_56,
		0x_73, 0x_73, 0x_06, 0x_08, 0x_AF, 0x_D0, 0x_56, 0x_06, 0x_D0, 0x_D0, 0x_56, 0x_AF, 0x_08, 0x_AF, 0x_56,
		0x_56, 0x_73, 0x_08, 0x_AF, 0x_08, 0x_D0, 0x_08, 0x_06, 0x_D0, 0x_AF, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_08, 0x_D6, 0x_06, 0x_AF, 0x_56, 0x_D0,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_37_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_37_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0A,
		0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0D,
		0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_8C, 0x_C6, 0x_D2, 0x_82, 0x_C9, 0x_16, 0x_F1, 0x_C6, 0x_D2, 0x_A9, 0x_8C, 0x_C6, 0x_D2,
		0x_F1, 0x_8C, 0x_F1, 0x_C6, 0x_D2, 0x_16, 0x_D2, 0x_C9, 0x_8C, 0x_16, 0x_C9, 0x_D2, 0x_8C, 0x_8C, 0x_C9,
		0x_C6, 0x_C9, 0x_D2, 0x_C6, 0x_8C, 0x_C6, 0x_A9, 0x_C6, 0x_C6, 0x_16, 0x_F1, 0x_A9, 0x_16, 0x_C6, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_C9, 0x_D2, 0x_16, 0x_A9, 0x_C6, 0x_F1,
	];

	helper(S, BASE, 37);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_910_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_910_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_09,
		0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_0A,
		0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_83, 0x_83, 0x_83,
		0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83,
		0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_95, 0x_0E, 0x_0E, 0x_83,
		0x_1B, 0x_E5, 0x_81, 0x_95, 0x_E5, 0x_81, 0x_6B, 0x_83, 0x_95, 0x_95, 0x_0E, 0x_6B, 0x_81, 0x_83, 0x_81,
		0x_1A, 0x_E5, 0x_1A, 0x_83, 0x_81, 0x_E5, 0x_E5, 0x_0E, 0x_81, 0x_95, 0x_6B, 0x_1A, 0x_81, 0x_0E,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_6B, 0x_95, 0x_E5, 0x_0E, 0x_1A, 0x_81,
	];

	helper(S, BASE, 910);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_8_899_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_8_899_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_20,
		0x_0D, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_09,
		0x_0D, 0x_0C, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_53, 0x_53, 0x_53,
		0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53,
		0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_F0, 0x_61, 0x_9F, 0x_61, 0x_F1,
		0x_50, 0x_F0, 0x_F0, 0x_F0, 0x_19, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_53, 0x_19, 0x_F1, 0x_F0, 0x_61, 0x_26, 0x_9F,
	];

	helper(S, BASE, 8_899);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_19_635_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_19_635_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_0D,
		0x_20, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_E0, 0x_C9, 0x_6B, 0x_CF, 0x_43, 0x_E0, 0x_E0, 0x_CF,
		0x_E0, 0x_C9, 0x_E0, 0x_C9, 0x_C9, 0x_43, 0x_43, 0x_C9, 0x_43, 0x_CF, 0x_D2, 0x_41, 0x_CF, 0x_E0, 0x_CA,
		0x_C9, 0x_C9, 0x_CA, 0x_E0, 0x_D2, 0x_D2, 0x_D2, 0x_E0, 0x_CF, 0x_C9, 0x_C9, 0x_E0, 0x_C9, 0x_CF, 0x_C9,
		0x_CF, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_CA, 0x_43, 0x_41, 0x_D2, 0x_E0, 0x_CF,
	];

	helper(S, BASE, 19_635);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_813_588_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_813_588_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_09,
		0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA,
		0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA,
		0x_BA, 0x_BA, 0x_9F, 0x_9F, 0x_0E, 0x_F1, 0x_9F, 0x_F1, 0x_9F, 0x_BC, 0x_6D, 0x_86, 0x_81, 0x_81, 0x_86,
		0x_81, 0x_F1, 0x_9F, 0x_9F, 0x_0E, 0x_6D, 0x_9F, 0x_81, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_6D, 0x_0E, 0x_81, 0x_86, 0x_F1, 0x_9F,
	];

	helper(S, BASE, 813_588);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_5_011_796_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_5_011_796_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0D,
		0x_09, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_20,
		0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D,
		0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D,
		0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D,
		0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_AC, 0x_5D, 0x_B0, 0x_0E, 0x_03, 0x_B0, 0x_D0, 0x_AC, 0x_3B, 0x_AC, 0x_03,
		0x_0E, 0x_B0, 0x_AC, 0x_C5, 0x_0E, 0x_B0, 0x_C5, 0x_0E, 0x_D0, 0x_AC, 0x_C5, 0x_B0, 0x_C5, 0x_B0, 0x_AC,
		0x_D0, 0x_B0, 0x_B0, 0x_C5, 0x_0E, 0x_B0, 0x_C5, 0x_B0, 0x_C5, 0x_D0, 0x_C5, 0x_C5, 0x_B0, 0x_B0, 0x_0E,
		0x_5D,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_0E, 0x_03, 0x_D0, 0x_B0, 0x_C5, 0x_AC,
	];

	helper(S, BASE, 5_011_796);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_19_714_547_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_19_714_547_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_0D, 0x_20,
		0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0A,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65,
		0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65,
		0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_03, 0x_66, 0x_02, 0x_03, 0x_02, 0x_02, 0x_FB, 0x_0E, 0x_02,
		0x_78, 0x_02, 0x_65, 0x_03, 0x_0E, 0x_65, 0x_65, 0x_03, 0x_02, 0x_65, 0x_66, 0x_66, 0x_03, 0x_FB, 0x_03,
		0x_A9, 0x_A9, 0x_FB, 0x_0E, 0x_FB, 0x_02, 0x_02, 0x_0E, 0x_0E, 0x_65, 0x_FB, 0x_02, 0x_FB, 0x_FB, 0x_03,
		0x_66, 0x_02, 0x_03, 0x_65, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_65, 0x_A9, 0x_66, 0x_03, 0x_0E, 0x_FB, 0x_02,
	];

	helper(S, BASE, 19_714_547);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_474_398_953_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_474_398_953_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_20,
		0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0A,
		0x_0A, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32,
		0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_3D, 0x_DF, 0x_4C, 0x_3F, 0x_32, 0x_3F, 0x_3D, 0x_48, 0x_3F,
		0x_3F, 0x_32, 0x_F0, 0x_32, 0x_4C, 0x_48, 0x_32, 0x_3D, 0x_86, 0x_3D, 0x_3F, 0x_3F, 0x_DF, 0x_4C, 0x_32,
		0x_3D, 0x_4C,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_3D, 0x_3F, 0x_86, 0x_DF, 0x_4C, 0x_48,
	];

	helper(S, BASE, 474_398_953);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_2_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_2_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_28, 0x_28,
		0x_28, 0x_28, 0x_28, 0x_28, 0x_28, 0x_28, 0x_28, 0x_28, 0x_28, 0x_28, 0x_0E, 0x_41, 0x_C5, 0x_28, 0x_0E,
		0x_35, 0x_0E, 0x_C5, 0x_D4, 0x_D1, 0x_D8, 0x_E0, 0x_D4, 0x_E0, 0x_DC, 0x_0E, 0x_D4, 0x_C4, 0x_D4, 0x_35,
		0x_D4, 0x_D8, 0x_28, 0x_DC, 0x_DC, 0x_35, 0x_D1, 0x_89, 0x_35, 0x_0E, 0x_D1, 0x_C5, 0x_D1, 0x_D8,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_C4, 0x_0E, 0x_89, 0x_D1, 0x_35, 0x_D8, 0x_D4, 0x_DC, 0x_E0, 0x_C5,
	];

	helper(S, BASE, 2);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_70_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_70_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6,
		0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6,
		0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_8E, 0x_FF, 0x_67, 0x_12, 0x_A6, 0x_12, 0x_0F, 0x_8E,
		0x_FF, 0x_A4, 0x_A4, 0x_A6, 0x_5D, 0x_FF, 0x_0F, 0x_3A, 0x_D8, 0x_2A, 0x_27, 0x_D8, 0x_12, 0x_A6, 0x_A4,
		0x_A6, 0x_8E, 0x_FF, 0x_8E, 0x_0F, 0x_8E, 0x_A4, 0x_A4, 0x_12, 0x_12, 0x_2A, 0x_D8, 0x_0F, 0x_D8, 0x_A4,
		0x_FF,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_27, 0x_D8, 0x_3A, 0x_FF, 0x_2A, 0x_8E, 0x_A4, 0x_0F, 0x_12, 0x_5D,
	];

	helper(S, BASE, 70);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_667_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_667_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_4D, 0x_4D,
		0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_F9, 0x_F9, 0x_19, 0x_BA, 0x_19, 0x_CB, 0x_86, 0x_F9, 0x_19, 0x_4D,
		0x_CD,
	];
	const BASE: &[u8] = &[
		0x_4D, 0x_89, 0x_CB, 0x_AE, 0x_BF, 0x_F9, 0x_CD, 0x_19, 0x_6D, 0x_0F, 0x_86,
	];

	helper(S, BASE, 667);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_9_133_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_9_133_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_C9, 0x_F8, 0x_52, 0x_69, 0x_8C, 0x_A1, 0x_69, 0x_AB, 0x_D8, 0x_A1,
		0x_C9, 0x_25, 0x_52, 0x_C9, 0x_AB, 0x_69, 0x_D8, 0x_C9, 0x_96, 0x_D8, 0x_AB, 0x_D8, 0x_D8, 0x_F8, 0x_D8,
		0x_52, 0x_F8, 0x_AB, 0x_69, 0x_93, 0x_69, 0x_F8, 0x_D8, 0x_A1, 0x_52, 0x_52, 0x_A1, 0x_AB, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_25, 0x_A1, 0x_69, 0x_78, 0x_52, 0x_C9, 0x_D8, 0x_93, 0x_F8, 0x_96,
	];

	helper(S, BASE, 9_133);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_77_604_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_77_604_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_0B,
		0x_20, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0B,
		0x_0B, 0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_A4, 0x_A4, 0x_A4, 0x_A4,
		0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_17, 0x_1E, 0x_1E, 0x_1E, 0x_22, 0x_2B, 0x_FC, 0x_A4, 0x_C2, 0x_F9, 0x_C2,
		0x_F9, 0x_C2, 0x_64, 0x_22, 0x_22, 0x_A1, 0x_22, 0x_A4, 0x_17, 0x_F9, 0x_5F, 0x_FC, 0x_75, 0x_17, 0x_C2,
		0x_A4, 0x_22, 0x_F9, 0x_17, 0x_A1, 0x_A1, 0x_5F, 0x_75, 0x_17, 0x_5F, 0x_17, 0x_75, 0x_17, 0x_F9, 0x_A1,
		0x_22, 0x_F9, 0x_C2, 0x_F9, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_F9, 0x_A1, 0x_1E, 0x_C2, 0x_17, 0x_64, 0x_FC, 0x_5F, 0x_75, 0x_22,
	];

	helper(S, BASE, 77_604);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_781_822_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_781_822_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_20,
		0x_0B, 0x_0A, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_AC, 0x_DB, 0x_AC, 0x_AC, 0x_C7, 0x_BA,
		0x_F4, 0x_C2, 0x_94, 0x_DB, 0x_AC, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_1C, 0x_2A, 0x_C7, 0x_AC, 0x_72, 0x_94, 0x_B1, 0x_BA, 0x_DB, 0x_C2,
	];

	helper(S, BASE, 781_822);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_7_549_266_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_7_549_266_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_09,
		0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_E7, 0x_E7, 0x_E7, 0x_E7,
		0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7,
		0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_C5, 0x_F8, 0x_89, 0x_0E, 0x_89,
		0x_0E, 0x_62, 0x_12, 0x_2E, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_E7, 0x_85, 0x_F8, 0x_5F, 0x_C5, 0x_A2, 0x_0E, 0x_86, 0x_2E, 0x_89, 0x_62,
	];

	helper(S, BASE, 7_549_266);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_96_925_455_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_96_925_455_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0A,
		0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83,
		0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_F4, 0x_B0, 0x_5D, 0x_E6, 0x_B7, 0x_3A,
		0x_E6, 0x_83, 0x_D4, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_B7, 0x_05, 0x_E7, 0x_F4, 0x_3A, 0x_C9, 0x_5D, 0x_14, 0x_E6, 0x_B0,
	];

	helper(S, BASE, 96_925_455);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_970_679_053_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_970_679_053_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78,
		0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_E3, 0x_71,
		0x_8D, 0x_6D, 0x_C1, 0x_6C, 0x_71, 0x_6D, 0x_D1, 0x_95, 0x_D1, 0x_E3, 0x_78, 0x_6C, 0x_6C, 0x_C1, 0x_E3,
		0x_E3, 0x_C1, 0x_26, 0x_8D, 0x_8C, 0x_C1, 0x_D1, 0x_D1, 0x_78, 0x_8D, 0x_71, 0x_78, 0x_8C, 0x_71, 0x_C1,
		0x_8D,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_C1, 0x_97, 0x_D1, 0x_E3, 0x_71, 0x_8C, 0x_6C, 0x_8D, 0x_26, 0x_6D,
	];

	helper(S, BASE, 970_679_053);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_3_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_3_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F,
		0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_58, 0x_BF, 0x_4F, 0x_4A, 0x_35, 0x_CE, 0x_C9, 0x_1F,
		0x_4F, 0x_1A, 0x_58, 0x_C9, 0x_24, 0x_5C, 0x_35, 0x_1F, 0x_4C, 0x_1B, 0x_C9, 0x_CE, 0x_24, 0x_CE, 0x_4A,
		0x_1A, 0x_1F, 0x_25, 0x_58, 0x_4F, 0x_4F, 0x_4A, 0x_25, 0x_1B, 0x_4F, 0x_1B, 0x_4A, 0x_1F, 0x_58, 0x_4A,
		0x_1A, 0x_4F, 0x_25, 0x_CE,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_5C, 0x_24, 0x_58, 0x_CE, 0x_25, 0x_1F, 0x_4A, 0x_1B, 0x_C9, 0x_1A, 0x_4C, 0x_35,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_20_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_20_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_20,
		0x_09, 0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_34, 0x_34,
		0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_40, 0x_EA, 0x_DD,
		0x_21, 0x_15, 0x_31, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_40, 0x_B1, 0x_03, 0x_31, 0x_42, 0x_74, 0x_EA, 0x_28, 0x_15, 0x_94, 0x_77, 0x_21,
	];

	helper(S, BASE, 20);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_837_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_837_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_5A, 0x_70, 0x_81, 0x_1A,
		0x_94, 0x_4A, 0x_5A, 0x_4A, 0x_9D, 0x_70, 0x_81, 0x_12, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_06, 0x_7C, 0x_08, 0x_5A, 0x_81, 0x_F1, 0x_9D, 0x_12, 0x_4C, 0x_F7, 0x_4A, 0x_70,
	];

	helper(S, BASE, 837);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_2_721_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_2_721_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0A, 0x_0B,
		0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_5F, 0x_16,
		0x_5F, 0x_A4, 0x_21, 0x_BD, 0x_5F, 0x_A7, 0x_16, 0x_A4, 0x_99, 0x_16, 0x_63, 0x_99, 0x_A9, 0x_A7, 0x_63,
		0x_63, 0x_5F, 0x_A9, 0x_63, 0x_A9, 0x_A3, 0x_5F, 0x_A3, 0x_A9, 0x_D5, 0x_A9, 0x_BD, 0x_BD, 0x_5F, 0x_A4,
		0x_D5, 0x_69, 0x_BD, 0x_A4, 0x_AE, 0x_AE, 0x_A9, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_5F, 0x_F5, 0x_16, 0x_A4, 0x_69, 0x_63, 0x_A3, 0x_D5, 0x_A7, 0x_A9, 0x_99, 0x_AE,
	];

	helper(S, BASE, 2_721);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_12_526_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_12_526_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0A,
		0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0B,
		0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5,
		0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_06, 0x_92, 0x_CA, 0x_1B, 0x_58, 0x_9F,
		0x_D5, 0x_66, 0x_B8, 0x_03, 0x_CA, 0x_36, 0x_9F, 0x_6E, 0x_36, 0x_92, 0x_EB, 0x_AE, 0x_03, 0x_CA, 0x_EB,
		0x_1B, 0x_92, 0x_D5, 0x_9F, 0x_1B, 0x_06, 0x_9F, 0x_6E, 0x_92, 0x_06, 0x_03, 0x_6E, 0x_06, 0x_06, 0x_36,
		0x_9F, 0x_D5, 0x_03,
	];
	const BASE: &[u8] = &[
		0x_D5, 0x_CA, 0x_AE, 0x_B8, 0x_03, 0x_06, 0x_66, 0x_1B, 0x_6E, 0x_92, 0x_9F, 0x_36, 0x_EB,
	];

	helper(S, BASE, 12_526);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_978_339_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_978_339_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_09,
		0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_5B, 0x_5B, 0x_5B, 0x_5B,
		0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_DA, 0x_EB,
		0x_B1, 0x_B1, 0x_66, 0x_25, 0x_EF, 0x_AC, 0x_98, 0x_FF, 0x_66, 0x_25, 0x_98, 0x_5B, 0x_E6, 0x_D0, 0x_DA,
		0x_FF, 0x_DA, 0x_C3, 0x_D0, 0x_B1, 0x_98, 0x_5B, 0x_C3, 0x_B1, 0x_E6, 0x_FF, 0x_5D, 0x_5D, 0x_5D, 0x_25,
		0x_B1, 0x_E6, 0x_DA, 0x_DA, 0x_E6, 0x_B1, 0x_5B, 0x_DA, 0x_66, 0x_C3, 0x_C3, 0x_98, 0x_25, 0x_98, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_FF, 0x_DA, 0x_B1, 0x_AC, 0x_5D, 0x_E6, 0x_C3, 0x_EB, 0x_D0, 0x_98, 0x_25, 0x_66,
	];

	helper(S, BASE, 978_339);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_4_590_300_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_4_590_300_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F, 0x_1F,
		0x_92, 0x_D8, 0x_50, 0x_D8, 0x_16, 0x_1F, 0x_D4, 0x_16, 0x_16, 0x_61, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_1F, 0x_74, 0x_0E, 0x_EB, 0x_D8, 0x_B3, 0x_AF, 0x_16, 0x_FF, 0x_50, 0x_61, 0x_F7, 0x_92,
	];

	helper(S, BASE, 4_590_300);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_29_072_375_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_29_072_375_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0A,
		0x_0C, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0C,
		0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56,
		0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56,
		0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_4D, 0x_56, 0x_03, 0x_A4, 0x_61, 0x_A4, 0x_C7,
		0x_93, 0x_02, 0x_03, 0x_61, 0x_B8, 0x_68, 0x_56, 0x_CD, 0x_C7, 0x_CD, 0x_4D, 0x_02, 0x_C7, 0x_A9, 0x_03,
		0x_C7, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_38, 0x_A9, 0x_03, 0x_CD, 0x_02, 0x_4D, 0x_C7, 0x_68, 0x_61, 0x_51, 0x_A4, 0x_B8,
	];

	helper(S, BASE, 29_072_375);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_396_207_958_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_396_207_958_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0B,
		0x_09, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_09,
		0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_63, 0x_63, 0x_63, 0x_63,
		0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63,
		0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63,
		0x_63, 0x_04, 0x_23, 0x_57, 0x_57, 0x_23, 0x_AB, 0x_1F, 0x_17, 0x_3F, 0x_17, 0x_95, 0x_93, 0x_AB, 0x_4D,
		0x_4D, 0x_06, 0x_95, 0x_23, 0x_17, 0x_06, 0x_AB, 0x_95, 0x_95, 0x_57, 0x_4D, 0x_92, 0x_06, 0x_93, 0x_57,
		0x_63, 0x_92, 0x_17, 0x_23, 0x_4D, 0x_63, 0x_1F, 0x_65, 0x_1F, 0x_65, 0x_06, 0x_57, 0x_04, 0x_63,
	];
	const BASE: &[u8] = &[
		0x_63, 0x_57, 0x_93, 0x_17, 0x_23, 0x_AB, 0x_04, 0x_06, 0x_92, 0x_65, 0x_1F, 0x_95, 0x_4D,
	];

	helper(S, BASE, 396_207_958);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_3_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_3_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_CE, 0x_CE, 0x_CE,
		0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE,
		0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_FE, 0x_A3, 0x_E5, 0x_CE, 0x_4F, 0x_FE, 0x_37, 0x_6B, 0x_A9, 0x_F9,
		0x_92, 0x_6B, 0x_E5, 0x_96, 0x_E5, 0x_1E, 0x_E3, 0x_E7, 0x_E5,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_A4, 0x_C9, 0x_FE, 0x_6B, 0x_4F, 0x_9F, 0x_92, 0x_E3, 0x_1E, 0x_E5, 0x_37, 0x_4B, 0x_96, 0x_E7,
		0x_AB, 0x_F4, 0x_A9, 0x_F9,
	];

	helper(S, BASE, 3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_86_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_86_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_0A,
		0x_0D, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_20, 0x_20, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_E5, 0x_3B, 0x_B0, 0x_C6, 0x_AA, 0x_AA, 0x_8A, 0x_3B, 0x_BE, 0x_3B,
		0x_78, 0x_2A, 0x_3D, 0x_F9, 0x_44, 0x_23, 0x_78, 0x_D0, 0x_60, 0x_60, 0x_F4, 0x_8A, 0x_D0, 0x_44, 0x_FA,
		0x_23, 0x_2A, 0x_F4, 0x_60, 0x_E5, 0x_44, 0x_74, 0x_A1, 0x_74, 0x_74, 0x_F9, 0x_BE, 0x_2A, 0x_F4, 0x_78,
		0x_87,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_23, 0x_87, 0x_44, 0x_E5, 0x_8A, 0x_BE, 0x_3D, 0x_60, 0x_78, 0x_3B, 0x_FA, 0x_A1, 0x_74, 0x_F9,
		0x_D0, 0x_2A, 0x_AA, 0x_C6,
	];

	helper(S, BASE, 86);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_601_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_601_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_20,
		0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_0A,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B,
		0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_D9, 0x_26, 0x_26, 0x_DE, 0x_AB, 0x_05, 0x_B1, 0x_C1,
		0x_6A, 0x_4B, 0x_76, 0x_FE, 0x_3F, 0x_D9, 0x_3F, 0x_AB, 0x_F7, 0x_BE, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_D9, 0x_F7, 0x_AB, 0x_05, 0x_3F, 0x_C1, 0x_76, 0x_84, 0x_B1, 0x_DD, 0x_46, 0x_26, 0x_4B, 0x_6A,
		0x_FE, 0x_EF, 0x_10, 0x_BE,
	];

	helper(S, BASE, 601);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_6_985_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_6_985_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0C,
		0x_0B, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0A,
		0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_C1, 0x_F2, 0x_FB, 0x_EB, 0x_B2, 0x_9B, 0x_C1, 0x_50, 0x_61,
		0x_7C, 0x_1F, 0x_9F, 0x_A4, 0x_4D, 0x_1F, 0x_9B, 0x_F2, 0x_D8, 0x_88, 0x_9F, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_C1, 0x_61, 0x_04, 0x_A4, 0x_9C, 0x_FB, 0x_48, 0x_B9, 0x_7C, 0x_1F, 0x_D8, 0x_EB, 0x_4D, 0x_9F,
		0x_50, 0x_9B, 0x_88, 0x_28,
	];

	helper(S, BASE, 6_985);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_94_695_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_94_695_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_FA, 0x_AE,
		0x_48, 0x_84, 0x_09, 0x_AE, 0x_10, 0x_CA, 0x_B4, 0x_75, 0x_84, 0x_50, 0x_B1, 0x_72, 0x_B4, 0x_EE, 0x_AE,
		0x_48,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_50, 0x_11, 0x_10, 0x_75, 0x_48, 0x_A9, 0x_72, 0x_B4, 0x_C9, 0x_9A, 0x_B1, 0x_CA, 0x_FA, 0x_66,
		0x_AE, 0x_96, 0x_EE, 0x_84,
	];

	helper(S, BASE, 94_695);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_307_740_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_307_740_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_09, 0x_0C,
		0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0D,
		0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_CE, 0x_57, 0x_6B, 0x_E1, 0x_6B, 0x_55, 0x_57, 0x_C1, 0x_76, 0x_CE, 0x_18, 0x_CE, 0x_A3,
		0x_D9, 0x_6A, 0x_AB, 0x_AB, 0x_57, 0x_76, 0x_94, 0x_78, 0x_76, 0x_CE, 0x_94, 0x_6B, 0x_94, 0x_94, 0x_76,
		0x_CE, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_B9, 0x_CE, 0x_87, 0x_DB, 0x_76, 0x_57, 0x_C1, 0x_E1, 0x_78, 0x_CD, 0x_86, 0x_18, 0x_DE, 0x_A3,
		0x_D9, 0x_6B, 0x_6A, 0x_AB,
	];

	helper(S, BASE, 307_740);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_6_636_046_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_6_636_046_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_0B,
		0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0B,
		0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77,
		0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_A8, 0x_B1,
		0x_57, 0x_CA, 0x_97, 0x_EB, 0x_F7, 0x_9A, 0x_43, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_25, 0x_A8, 0x_9D, 0x_F5, 0x_42, 0x_9A, 0x_97, 0x_FC, 0x_CA, 0x_C0, 0x_EB, 0x_B1, 0x_27, 0x_31,
		0x_43, 0x_E6, 0x_57, 0x_6A,
	];

	helper(S, BASE, 6_636_046);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_50_322_904_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_50_322_904_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_09, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_3D, 0x_3D, 0x_60, 0x_CF, 0x_C0, 0x_C1, 0x_22, 0x_D4, 0x_99, 0x_3D,
		0x_BF, 0x_3D, 0x_C0, 0x_99, 0x_99, 0x_22, 0x_5F, 0x_22, 0x_05, 0x_05, 0x_58, 0x_B4, 0x_5F, 0x_8C, 0x_60,
		0x_58, 0x_3D, 0x_BF, 0x_5F, 0x_22, 0x_36, 0x_22, 0x_AD, 0x_99, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_3D, 0x_CF, 0x_C6, 0x_B4, 0x_42, 0x_60, 0x_AD, 0x_D2, 0x_58, 0x_BF, 0x_C1, 0x_99, 0x_8C, 0x_C0,
		0x_36, 0x_BA, 0x_22, 0x_05,
	];

	helper(S, BASE, 50_322_904);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_787_647_667_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_787_647_667_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_09, 0x_09, 0x_09, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_43, 0x_35, 0x_46, 0x_23, 0x_B5, 0x_F3, 0x_4B, 0x_25, 0x_BA, 0x_B5, 0x_35, 0x_46, 0x_1B,
		0x_43, 0x_1B, 0x_46, 0x_C1, 0x_8C, 0x_1B, 0x_F3, 0x_AF, 0x_BA, 0x_35, 0x_C1, 0x_26, 0x_BA, 0x_26, 0x_23,
		0x_7E, 0x_1F, 0x_F3, 0x_26, 0x_46, 0x_C1, 0x_A9, 0x_7E, 0x_5B, 0x_35, 0x_1F, 0x_B5, 0x_8F, 0x_8F, 0x_7E,
		0x_BA, 0x_BA, 0x_01, 0x_7E, 0x_F3, 0x_01, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_46, 0x_5B, 0x_B5, 0x_1B, 0x_8F, 0x_26, 0x_4B, 0x_C1, 0x_F3, 0x_7E, 0x_BA, 0x_01, 0x_AF, 0x_35,
		0x_8C, 0x_43, 0x_23, 0x_1F,
	];

	helper(S, BASE, 787_647_667);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_5_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_5_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0D,
		0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_0D,
		0x_0A, 0x_0A, 0x_20, 0x_09, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_39, 0x_0E, 0x_3E, 0x_7B, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_A8, 0x_79, 0x_F8, 0x_F5, 0x_39, 0x_E0, 0x_52, 0x_87, 0x_9D, 0x_1A, 0x_2F, 0x_94, 0x_44, 0x_54,
		0x_DC, 0x_37, 0x_04, 0x_8A, 0x_14, 0x_EA, 0x_BE, 0x_D8, 0x_60, 0x_F4, 0x_7B, 0x_27, 0x_ED, 0x_5C, 0x_11,
		0x_F2, 0x_57, 0x_1C, 0x_8B, 0x_84, 0x_68, 0x_B7, 0x_C0, 0x_3E, 0x_15, 0x_36, 0x_E1,
	];

	helper(S, BASE, 5);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_76_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_76_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_F0, 0x_ED, 0x_6E, 0x_9A, 0x_AF, 0x_B4, 0x_90,
		0x_64, 0x_F4, 0x_3A, 0x_1A, 0x_D1, 0x_DB, 0x_F9, 0x_8C, 0x_F9, 0x_F0, 0x_ED, 0x_06, 0x_EC, 0x_0E, 0x_8F,
		0x_16, 0x_F0, 0x_53, 0x_D1, 0x_AD, 0x_AD, 0x_19, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_F0, 0x_AF, 0x_F4, 0x_3A, 0x_CF, 0x_93, 0x_62, 0x_64, 0x_92, 0x_C0, 0x_D1, 0x_F9, 0x_DB, 0x_B4,
		0x_1E, 0x_FC, 0x_DA, 0x_8F, 0x_C1, 0x_8C, 0x_9A, 0x_35, 0x_16, 0x_90, 0x_8D, 0x_04, 0x_0E, 0x_53, 0x_2A,
		0x_EC, 0x_81, 0x_AA, 0x_68, 0x_ED, 0x_84, 0x_AD, 0x_1A, 0x_19, 0x_99, 0x_60, 0x_BE,
	];

	helper(S, BASE, 76);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_396_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_396_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_20,
		0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_8E, 0x_75, 0x_7E,
		0x_A6, 0x_B6, 0x_C8, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_A7, 0x_06, 0x_55, 0x_41, 0x_98, 0x_46, 0x_23, 0x_3E, 0x_8E, 0x_E8, 0x_A4, 0x_E1, 0x_78, 0x_66,
		0x_D8, 0x_B6, 0x_51, 0x_75, 0x_1A, 0x_70, 0x_EA, 0x_F4, 0x_CA, 0x_DB, 0x_FB, 0x_18, 0x_28, 0x_5D, 0x_D1,
		0x_15, 0x_DF, 0x_C8, 0x_3B, 0x_C1, 0x_A6, 0x_8D, 0x_19, 0x_B1, 0x_9A, 0x_FF, 0x_BE,
	];

	helper(S, BASE, 396);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_1_101_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_1_101_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0C,
		0x_0B, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_12, 0x_95, 0x_49, 0x_A4,
		0x_CE, 0x_14, 0x_10, 0x_55, 0x_40, 0x_CE, 0x_94, 0x_D0, 0x_8D, 0x_CC, 0x_24, 0x_C4, 0x_40, 0x_8F, 0x_31,
		0x_D9, 0x_B4, 0x_40, 0x_76, 0x_1D, 0x_94, 0x_C9, 0x_AA, 0x_94, 0x_CE, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_F6, 0x_8F, 0x_82, 0x_CE, 0x_31, 0x_60, 0x_8B, 0x_88, 0x_95, 0x_40, 0x_B4, 0x_5F, 0x_D1, 0x_EB,
		0x_94, 0x_8D, 0x_C4, 0x_D9, 0x_CD, 0x_E2, 0x_2C, 0x_7F, 0x_14, 0x_1C, 0x_1D, 0x_12, 0x_A4, 0x_24, 0x_55,
		0x_76, 0x_E4, 0x_81, 0x_AA, 0x_FD, 0x_D0, 0x_1F, 0x_10, 0x_50, 0x_C9, 0x_FC, 0x_B9,
	];

	helper(S, BASE, 1_101);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_55_435_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_55_435_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_10, 0x_AA, 0x_2A, 0x_11, 0x_AA, 0x_7C, 0x_5E, 0x_10, 0x_33, 0x_7C, 0x_72, 0x_02, 0x_35, 0x_AA, 0x_A7,
		0x_47, 0x_E2, 0x_9E, 0x_47, 0x_63, 0x_A3, 0x_A3, 0x_EE, 0x_61, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_FA, 0x_02, 0x_5C, 0x_B3, 0x_B5, 0x_A0, 0x_67, 0x_9E, 0x_EE, 0x_63, 0x_72, 0x_C6, 0x_AD, 0x_AC,
		0x_A3, 0x_C3, 0x_AA, 0x_A7, 0x_04, 0x_5E, 0x_3B, 0x_35, 0x_F6, 0x_42, 0x_7C, 0x_8D, 0x_47, 0x_1D, 0x_1F,
		0x_DA, 0x_10, 0x_40, 0x_E2, 0x_53, 0x_22, 0x_98, 0x_2A, 0x_CF, 0x_A9, 0x_85, 0x_33,
	];

	helper(S, BASE, 55_435);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_402_090_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_402_090_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_09,
		0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F,
		0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_F7, 0x_FE, 0x_47, 0x_44, 0x_F0, 0x_CD, 0x_1E, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_69, 0x_05, 0x_99, 0x_B8, 0x_F7, 0x_70, 0x_31, 0x_BE, 0x_A1, 0x_73, 0x_EE, 0x_E2, 0x_96, 0x_C9,
		0x_07, 0x_8D, 0x_FE, 0x_78, 0x_A0, 0x_58, 0x_30, 0x_4A, 0x_01, 0x_44, 0x_4B, 0x_62, 0x_6C, 0x_2E, 0x_25,
		0x_E4, 0x_D4, 0x_1E, 0x_94, 0x_B2, 0x_CE, 0x_DE, 0x_ED, 0x_9E, 0x_47, 0x_E9, 0x_CD,
	];

	helper(S, BASE, 402_090);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_8_615_299_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_8_615_299_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CE, 0x_08, 0x_5E, 0x_C0, 0x_EA, 0x_1A, 0x_E6, 0x_8D, 0x_26, 0x_B3, 0x_F0, 0x_EA, 0x_86, 0x_53,
		0x_F2, 0x_EA, 0x_F2, 0x_24, 0x_33, 0x_C6, 0x_5E, 0x_F4, 0x_E6, 0x_C0, 0x_C9, 0x_C2, 0x_24, 0x_C9, 0x_6B,
		0x_B3, 0x_9A, 0x_E7, 0x_E7, 0x_33, 0x_CF, 0x_03, 0x_E6, 0x_F2, 0x_B7, 0x_8D, 0x_C9, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_C2, 0x_CE, 0x_9C, 0x_CF, 0x_F2, 0x_DF, 0x_EA, 0x_5F, 0x_24, 0x_9A, 0x_5E, 0x_C9, 0x_31, 0x_26,
		0x_B7, 0x_75, 0x_95, 0x_F0, 0x_EC, 0x_53, 0x_B0, 0x_E7, 0x_F4, 0x_6B, 0x_C6, 0x_BB, 0x_B3, 0x_AE, 0x_45,
		0x_D7, 0x_11, 0x_08, 0x_03, 0x_86, 0x_15, 0x_E6, 0x_33, 0x_54, 0x_19, 0x_C0, 0x_8D,
	];

	helper(S, BASE, 8_615_299);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_97_618_928_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_97_618_928_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51,
		0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51,
		0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_94, 0x_B7, 0x_78,
		0x_3A, 0x_B1, 0x_48, 0x_BE, 0x_B7, 0x_BE, 0x_51, 0x_79, 0x_58, 0x_72, 0x_9B, 0x_75, 0x_E3, 0x_F0, 0x_4F,
		0x_B7, 0x_A9, 0x_AB, 0x_B1, 0x_5D, 0x_78, 0x_C8, 0x_02, 0x_F2, 0x_5D, 0x_75, 0x_A3, 0x_B7, 0x_51, 0x_79,
		0x_23, 0x_79, 0x_23, 0x_3A, 0x_25, 0x_95, 0x_3A, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_60, 0x_95, 0x_EF, 0x_28, 0x_A9, 0x_C8, 0x_5D, 0x_B1, 0x_D7, 0x_5F, 0x_23, 0x_25, 0x_4F, 0x_D2,
		0x_B7, 0x_F2, 0x_BE, 0x_F3, 0x_AB, 0x_41, 0x_FD, 0x_3A, 0x_F0, 0x_58, 0x_78, 0x_AC, 0x_4A, 0x_02, 0x_43,
		0x_FC, 0x_94, 0x_A3, 0x_9B, 0x_A4, 0x_B2, 0x_1C, 0x_E3, 0x_75, 0x_C1, 0x_72, 0x_79,
	];

	helper(S, BASE, 97_618_928);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_455_572_479_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_455_572_479_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_0B,
		0x_0A, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_8A, 0x_EA, 0x_42, 0x_8A, 0x_D5,
		0x_CC, 0x_D0, 0x_06, 0x_74, 0x_CA, 0x_EA, 0x_42, 0x_CA, 0x_7D, 0x_42, 0x_7D, 0x_7E, 0x_6C, 0x_8A, 0x_6F,
		0x_BA, 0x_50, 0x_E6, 0x_CC, 0x_CC, 0x_49, 0x_71, 0x_7D, 0x_EA, 0x_8A, 0x_8C, 0x_CF, 0x_77, 0x_02, 0x_98,
		0x_6C, 0x_10, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_D5, 0x_6F, 0x_8A, 0x_71, 0x_6C, 0x_8C, 0x_1A, 0x_FA, 0x_A7, 0x_BA, 0x_CA, 0x_25, 0x_D9, 0x_49,
		0x_EC, 0x_48, 0x_42, 0x_E9, 0x_50, 0x_EA, 0x_24, 0x_77, 0x_B2, 0x_7E, 0x_C7, 0x_02, 0x_01, 0x_10, 0x_98,
		0x_A5, 0x_F8, 0x_06, 0x_CC, 0x_74, 0x_E8, 0x_7D, 0x_B3, 0x_9E, 0x_CF, 0x_D8, 0x_62,
	];

	helper(S, BASE, 455_572_479);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_7_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_7_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_20, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_76, 0x_C9, 0x_EB, 0x_11,
		0x_28, 0x_EB, 0x_B7, 0x_B9, 0x_17, 0x_CB, 0x_A3, 0x_2F, 0x_A3, 0x_47, 0x_F9, 0x_B7, 0x_EB, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_AA, 0x_B7, 0x_5E, 0x_11, 0x_DA, 0x_98, 0x_76, 0x_19, 0x_B9, 0x_91, 0x_A8, 0x_E7, 0x_32, 0x_CE,
		0x_6A, 0x_6B, 0x_ED, 0x_E4, 0x_A3, 0x_93, 0x_2F, 0x_CB, 0x_B6, 0x_C4, 0x_28, 0x_6E, 0x_36, 0x_68, 0x_5D,
		0x_C5, 0x_FC, 0x_84, 0x_F9, 0x_50, 0x_6C, 0x_26, 0x_D3, 0x_EB, 0x_14, 0x_D1, 0x_63, 0x_55, 0x_47, 0x_37,
		0x_FD, 0x_BC, 0x_B8, 0x_33, 0x_92, 0x_70, 0x_FF, 0x_30, 0x_66, 0x_44, 0x_EA, 0x_80, 0x_83, 0x_F1, 0x_03,
		0x_8B, 0x_4A, 0x_9B, 0x_EF, 0x_D0, 0x_4B, 0x_02, 0x_BF, 0x_23, 0x_05, 0x_F8, 0x_9E, 0x_60,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_46_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_46_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0D,
		0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0C,
		0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_57, 0x_ED, 0x_8A, 0x_B3, 0x_C8, 0x_02, 0x_75, 0x_7B, 0x_27,
		0x_7B, 0x_39, 0x_69, 0x_64, 0x_C6, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_7F, 0x_1B, 0x_2C, 0x_26, 0x_75, 0x_CC, 0x_5C, 0x_C8, 0x_16, 0x_CB, 0x_7B, 0x_51, 0x_82, 0x_C7, 0x_5B,
		0x_4C, 0x_32, 0x_4A, 0x_74, 0x_5E, 0x_69, 0x_CD, 0x_13, 0x_22, 0x_1E, 0x_D5, 0x_65, 0x_96, 0x_39, 0x_92,
		0x_64, 0x_B8, 0x_8A, 0x_58, 0x_02, 0x_36, 0x_91, 0x_30, 0x_27, 0x_46, 0x_B3, 0x_EE, 0x_85, 0x_5F, 0x_A8,
		0x_1F, 0x_57, 0x_81, 0x_73, 0x_CF, 0x_40, 0x_98, 0x_D4, 0x_BB, 0x_79, 0x_9C, 0x_56, 0x_78, 0x_6B, 0x_EC,
		0x_C3, 0x_B9, 0x_C6, 0x_A7, 0x_F8, 0x_8F, 0x_52, 0x_08, 0x_F7, 0x_F9, 0x_EF, 0x_03, 0x_72,
	];

	helper(S, BASE, 46);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_774_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_774_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_0A,
		0x_0D, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_2B, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_52,
		0x_3E, 0x_7D, 0x_33, 0x_86, 0x_E0, 0x_8A, 0x_F6, 0x_2A, 0x_8C, 0x_97, 0x_65, 0x_1F, 0x_2C, 0x_E9, 0x_3C,
		0x_B9, 0x_D7, 0x_E3, 0x_68, 0x_88,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_55, 0x_AF, 0x_10, 0x_21, 0x_97, 0x_A0, 0x_54, 0x_02, 0x_E0, 0x_52, 0x_A9, 0x_37, 0x_E6, 0x_2A,
		0x_44, 0x_CC, 0x_F2, 0x_4E, 0x_D7, 0x_27, 0x_E9, 0x_90, 0x_A2, 0x_42, 0x_1F, 0x_81, 0x_58, 0x_B4, 0x_65,
		0x_04, 0x_2C, 0x_EE, 0x_7C, 0x_8A, 0x_D9, 0x_33, 0x_68, 0x_C9, 0x_8C, 0x_71, 0x_F8, 0x_84, 0x_FB, 0x_3E,
		0x_F6, 0x_A8, 0x_46, 0x_E3, 0x_7E, 0x_80, 0x_D6, 0x_C0, 0x_FC, 0x_88, 0x_D4, 0x_BE, 0x_56, 0x_B9, 0x_69,
		0x_86, 0x_DB, 0x_96, 0x_0F, 0x_87, 0x_32, 0x_91, 0x_9E, 0x_1E, 0x_3C, 0x_A5, 0x_53, 0x_19,
	];

	helper(S, BASE, 774);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_5_794_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_5_794_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0C,
		0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_8B,
		0x_AB, 0x_97, 0x_02, 0x_1F, 0x_FF, 0x_2F, 0x_66, 0x_92, 0x_3F, 0x_3F, 0x_78, 0x_E1, 0x_2F, 0x_37, 0x_A8,
		0x_37, 0x_3F, 0x_DA, 0x_A5, 0x_10, 0x_EB, 0x_E7, 0x_A1, 0x_99, 0x_E9, 0x_37, 0x_46, 0x_61, 0x_C5, 0x_AD,
		0x_78, 0x_95, 0x_21, 0x_EB, 0x_86, 0x_46, 0x_11, 0x_3F, 0x_C5,
	];
	const BASE: &[u8] = &[
		0x_9D, 0x_8B, 0x_83, 0x_51, 0x_E2, 0x_61, 0x_AB, 0x_1F, 0x_21, 0x_17, 0x_99, 0x_E0, 0x_1B, 0x_58, 0x_92,
		0x_54, 0x_A9, 0x_88, 0x_15, 0x_72, 0x_B2, 0x_42, 0x_34, 0x_F1, 0x_53, 0x_41, 0x_79, 0x_97, 0x_C1, 0x_D9,
		0x_EB, 0x_69, 0x_DB, 0x_A5, 0x_89, 0x_BC, 0x_46, 0x_8A, 0x_A2, 0x_76, 0x_FF, 0x_5F, 0x_F0, 0x_66, 0x_A8,
		0x_37, 0x_3F, 0x_E7, 0x_E9, 0x_C5, 0x_D0, 0x_2F, 0x_05, 0x_B4, 0x_C3, 0x_27, 0x_16, 0x_40, 0x_10, 0x_8D,
		0x_AD, 0x_91, 0x_14, 0x_E1, 0x_C6, 0x_DA, 0x_78, 0x_44, 0x_DD, 0x_A1, 0x_95, 0x_86, 0x_11,
	];

	helper(S, BASE, 5_794);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_37_640_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_37_640_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED,
		0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_ED,
		0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_C3, 0x_83, 0x_62, 0x_AA, 0x_51, 0x_53, 0x_BA, 0x_4D, 0x_46, 0x_7D, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_ED, 0x_55, 0x_E1, 0x_B8, 0x_83, 0x_3A, 0x_28, 0x_C3, 0x_FC, 0x_BA, 0x_65, 0x_36, 0x_A3, 0x_42, 0x_4A,
		0x_8C, 0x_76, 0x_58, 0x_EE, 0x_DA, 0x_48, 0x_B1, 0x_9A, 0x_B4, 0x_CA, 0x_B0, 0x_98, 0x_F0, 0x_31, 0x_63,
		0x_9E, 0x_87, 0x_6C, 0x_CF, 0x_AE, 0x_43, 0x_CC, 0x_2F, 0x_04, 0x_B5, 0x_9B, 0x_67, 0x_82, 0x_6D, 0x_D2,
		0x_62, 0x_3D, 0x_DB, 0x_73, 0x_F7, 0x_D7, 0x_12, 0x_1D, 0x_13, 0x_7D, 0x_79, 0x_51, 0x_C0, 0x_C4, 0x_74,
		0x_46, 0x_6E, 0x_9D, 0x_3E, 0x_53, 0x_92, 0x_1A, 0x_14, 0x_B9, 0x_4D, 0x_C2, 0x_C8, 0x_95,
	];

	helper(S, BASE, 37_640);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_115_014_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_115_014_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0C,
		0x_0C, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_9D, 0x_EE, 0x_55, 0x_71, 0x_68,
		0x_45, 0x_A7, 0x_53, 0x_D8, 0x_23, 0x_45, 0x_F4, 0x_DA, 0x_25, 0x_EE, 0x_51, 0x_02, 0x_DA, 0x_64, 0x_84,
		0x_22, 0x_DA, 0x_53, 0x_73, 0x_27, 0x_04, 0x_2C, 0x_A3, 0x_19, 0x_E9, 0x_E4, 0x_2C, 0x_25, 0x_51, 0x_D9,
		0x_8E, 0x_2C, 0x_A6, 0x_45, 0x_EE, 0x_55, 0x_85, 0x_DA, 0x_F0, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_B4, 0x_54, 0x_6A, 0x_32, 0x_DA, 0x_53, 0x_D7, 0x_7B, 0x_7F, 0x_EF, 0x_84, 0x_A3, 0x_C5, 0x_F4,
		0x_DB, 0x_25, 0x_19, 0x_D8, 0x_8A, 0x_11, 0x_9D, 0x_02, 0x_FD, 0x_E9, 0x_49, 0x_A7, 0x_9C, 0x_27, 0x_CF,
		0x_D3, 0x_51, 0x_60, 0x_30, 0x_E4, 0x_81, 0x_F3, 0x_23, 0x_04, 0x_55, 0x_21, 0x_C6, 0x_EE, 0x_C1, 0x_78,
		0x_A6, 0x_1A, 0x_2C, 0x_45, 0x_95, 0x_64, 0x_AE, 0x_73, 0x_4B, 0x_99, 0x_AD, 0x_03, 0x_CD, 0x_9A, 0x_D9,
		0x_4E, 0x_F0, 0x_8E, 0x_B0, 0x_39, 0x_FB, 0x_68, 0x_3A, 0x_FC, 0x_38, 0x_22, 0x_44, 0x_0E,
	];

	helper(S, BASE, 115_014);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_3_501_434_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_3_501_434_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_09,
		0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_5B, 0x_A2,
		0x_9E, 0x_5A, 0x_EB, 0x_DD, 0x_64, 0x_B9, 0x_E9, 0x_80, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_A2, 0x_3F, 0x_6C, 0x_9E, 0x_F1, 0x_32, 0x_1D, 0x_C7, 0x_FF, 0x_5B, 0x_AE, 0x_1E, 0x_6E, 0x_1F, 0x_34,
		0x_14, 0x_E0, 0x_5D, 0x_99, 0x_EC, 0x_74, 0x_7B, 0x_D5, 0x_AD, 0x_A5, 0x_51, 0x_67, 0x_BA, 0x_CC, 0x_B8,
		0x_B5, 0x_E9, 0x_4B, 0x_AC, 0x_64, 0x_1C, 0x_B3, 0x_F0, 0x_39, 0x_C9, 0x_CA, 0x_6A, 0x_59, 0x_80, 0x_D7,
		0x_81, 0x_EF, 0x_FB, 0x_B9, 0x_17, 0x_37, 0x_86, 0x_DD, 0x_55, 0x_44, 0x_5E, 0x_FA, 0x_28, 0x_6B, 0x_2F,
		0x_9D, 0x_54, 0x_5A, 0x_38, 0x_15, 0x_04, 0x_89, 0x_4E, 0x_90, 0x_A9, 0x_18, 0x_C8, 0x_41,
	];

	helper(S, BASE, 3_501_434);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_14_484_390_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_14_484_390_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0A,
		0x_0D, 0x_0D, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70,
		0x_70, 0x_8D, 0x_89, 0x_13, 0x_64, 0x_8B, 0x_53, 0x_71, 0x_39, 0x_45, 0x_17, 0x_3D, 0x_59, 0x_BA, 0x_06,
		0x_A2, 0x_3F, 0x_70, 0x_64, 0x_97, 0x_3F, 0x_BF, 0x_AB, 0x_57, 0x_69, 0x_FA, 0x_17, 0x_10, 0x_DD, 0x_D7,
		0x_AB, 0x_10, 0x_71, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_70, 0x_B4, 0x_13, 0x_8A, 0x_CA, 0x_28, 0x_71, 0x_42, 0x_AB, 0x_5C, 0x_3D, 0x_10, 0x_54, 0x_B2, 0x_A8,
		0x_50, 0x_53, 0x_89, 0x_67, 0x_98, 0x_A2, 0x_6D, 0x_64, 0x_BE, 0x_DD, 0x_1E, 0x_BF, 0x_A1, 0x_59, 0x_A5,
		0x_3A, 0x_06, 0x_F1, 0x_D4, 0x_22, 0x_D7, 0x_85, 0x_8D, 0x_7A, 0x_1A, 0x_45, 0x_E6, 0x_82, 0x_3F, 0x_12,
		0x_EB, 0x_C9, 0x_57, 0x_E7, 0x_6F, 0x_5D, 0x_4D, 0x_E4, 0x_ED, 0x_4F, 0x_8E, 0x_FB, 0x_84, 0x_BA, 0x_FA,
		0x_D0, 0x_97, 0x_95, 0x_0E, 0x_69, 0x_1F, 0x_39, 0x_9D, 0x_31, 0x_9C, 0x_01, 0x_17, 0x_16,
	];

	helper(S, BASE, 14_484_390);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_525_841_407_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_525_841_407_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_67, 0x_18, 0x_22, 0x_5B, 0x_D5, 0x_3F, 0x_35, 0x_CB, 0x_F6, 0x_6F, 0x_85, 0x_5C, 0x_93, 0x_CC, 0x_32,
		0x_73, 0x_D5, 0x_C5, 0x_DB, 0x_A1, 0x_2C, 0x_07, 0x_B5, 0x_9B, 0x_F9, 0x_22, 0x_7D, 0x_1D, 0x_18, 0x_A5,
		0x_A8, 0x_26, 0x_7D, 0x_33, 0x_22, 0x_29, 0x_96, 0x_84, 0x_F5, 0x_5B, 0x_21, 0x_18, 0x_1D, 0x_6A,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_32, 0x_7F, 0x_1E, 0x_29, 0x_85, 0x_7D, 0x_B8, 0x_E3, 0x_A1, 0x_33, 0x_DB, 0x_D4, 0x_5A, 0x_B5,
		0x_87, 0x_10, 0x_99, 0x_67, 0x_38, 0x_64, 0x_CB, 0x_D1, 0x_9B, 0x_30, 0x_6F, 0x_73, 0x_71, 0x_EC, 0x_9E,
		0x_1D, 0x_5B, 0x_A0, 0x_58, 0x_F8, 0x_C8, 0x_ED, 0x_18, 0x_DC, 0x_C9, 0x_93, 0x_07, 0x_A8, 0x_35, 0x_84,
		0x_04, 0x_9A, 0x_C5, 0x_3C, 0x_BC, 0x_96, 0x_1B, 0x_22, 0x_5C, 0x_2C, 0x_E4, 0x_8B, 0x_21, 0x_F6, 0x_CC,
		0x_CF, 0x_F5, 0x_6A, 0x_A5, 0x_24, 0x_F9, 0x_1A, 0x_FD, 0x_BF, 0x_D5, 0x_26, 0x_59, 0x_98,
	];

	helper(S, BASE, 525_841_407);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_1_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_1_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_20,
		0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_0A,
		0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_55, 0x_09, 0x_95,
		0x_85, 0x_65, 0x_96, 0x_EA, 0x_95, 0x_AC, 0x_9E, 0x_D4, 0x_8A, 0x_F3, 0x_32, 0x_23, 0x_E3, 0x_E0, 0x_C0,
		0x_0F, 0x_D4, 0x_34, 0x_19, 0x_A0, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_55, 0x_04, 0x_67, 0x_EA, 0x_4D, 0x_30, 0x_5A, 0x_BD, 0x_56, 0x_93, 0x_52, 0x_FC, 0x_7E, 0x_FD,
		0x_4E, 0x_AC, 0x_74, 0x_A0, 0x_72, 0x_AF, 0x_B2, 0x_06, 0x_BE, 0x_C4, 0x_EB, 0x_C7, 0x_E6, 0x_17, 0x_5E,
		0x_EC, 0x_48, 0x_C9, 0x_E0, 0x_82, 0x_33, 0x_B3, 0x_23, 0x_7C, 0x_D0, 0x_1F, 0x_A5, 0x_C6, 0x_4A, 0x_36,
		0x_CB, 0x_60, 0x_34, 0x_A9, 0x_87, 0x_6D, 0x_77, 0x_8D, 0x_E2, 0x_95, 0x_D4, 0x_19, 0x_DC, 0x_70, 0x_4B,
		0x_CD, 0x_6C, 0x_8A, 0x_43, 0x_40, 0x_B0, 0x_3A, 0x_7B, 0x_B1, 0x_DD, 0x_2A, 0x_1B, 0x_E4, 0x_C5, 0x_5D,
		0x_6A, 0x_91, 0x_7F, 0x_E3, 0x_07, 0x_8E, 0x_AA, 0x_F3, 0x_59, 0x_F2, 0x_96, 0x_71, 0x_F1, 0x_02, 0x_65,
		0x_85, 0x_54, 0x_50, 0x_A1, 0x_86, 0x_0F, 0x_9D, 0x_39, 0x_B9, 0x_C0, 0x_1C, 0x_DF, 0x_9E, 0x_73, 0x_32,
		0x_35, 0x_11, 0x_B4, 0x_A7, 0x_28, 0x_62, 0x_63, 0x_AD,
	];

	helper(S, BASE, 1);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_75_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_75_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_20,
		0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_09,
		0x_20, 0x_0C, 0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_39,
		0x_AB, 0x_A1, 0x_94, 0x_F0, 0x_25, 0x_AF, 0x_E8, 0x_DC, 0x_6E, 0x_10, 0x_45, 0x_DE, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_2F, 0x_2A, 0x_50, 0x_5E, 0x_DE, 0x_05, 0x_79, 0x_03, 0x_D4, 0x_67, 0x_35, 0x_C7, 0x_18, 0x_D2,
		0x_4B, 0x_DF, 0x_52, 0x_B7, 0x_40, 0x_99, 0x_AF, 0x_A6, 0x_0F, 0x_8A, 0x_A4, 0x_32, 0x_6F, 0x_66, 0x_C6,
		0x_BC, 0x_5F, 0x_94, 0x_A0, 0x_48, 0x_F0, 0x_56, 0x_9C, 0x_04, 0x_86, 0x_0E, 0x_F6, 0x_8F, 0x_17, 0x_36,
		0x_EE, 0x_41, 0x_E4, 0x_84, 0x_F3, 0x_B6, 0x_A1, 0x_14, 0x_97, 0x_69, 0x_3F, 0x_10, 0x_5C, 0x_E8, 0x_5A,
		0x_DD, 0x_53, 0x_1C, 0x_F2, 0x_72, 0x_4A, 0x_8E, 0x_83, 0x_95, 0x_D7, 0x_AE, 0x_16, 0x_11, 0x_70, 0x_C4,
		0x_39, 0x_64, 0x_31, 0x_55, 0x_7B, 0x_FA, 0x_6B, 0x_71, 0x_DC, 0x_07, 0x_E9, 0x_57, 0x_C0, 0x_FF, 0x_B8,
		0x_45, 0x_7D, 0x_AD, 0x_46, 0x_E0, 0x_9F, 0x_F4, 0x_A8, 0x_25, 0x_EF, 0x_B0, 0x_C2, 0x_DA, 0x_13, 0x_6E,
		0x_24, 0x_AA, 0x_28, 0x_B5, 0x_4F, 0x_26, 0x_FD, 0x_34,
	];

	helper(S, BASE, 75);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_556_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_556_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_2B, 0x_2B, 0x_BB, 0x_BB, 0x_BB, 0x_BB,
		0x_BB, 0x_87, 0x_D4, 0x_38, 0x_7D, 0x_7A, 0x_3E, 0x_EC, 0x_7D, 0x_E8, 0x_A9, 0x_31, 0x_71, 0x_80,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_7D, 0x_D7, 0x_96, 0x_87, 0x_E1, 0x_B6, 0x_A1, 0x_15, 0x_95, 0x_AC, 0x_35, 0x_E8, 0x_77, 0x_46,
		0x_7A, 0x_80, 0x_D2, 0x_06, 0x_C5, 0x_EA, 0x_B4, 0x_4F, 0x_41, 0x_1D, 0x_01, 0x_82, 0x_B3, 0x_76, 0x_5F,
		0x_C7, 0x_F9, 0x_DE, 0x_EF, 0x_58, 0x_EC, 0x_D1, 0x_03, 0x_23, 0x_91, 0x_2C, 0x_9A, 0x_B9, 0x_34, 0x_AF,
		0x_D5, 0x_92, 0x_68, 0x_AE, 0x_DA, 0x_6F, 0x_FB, 0x_16, 0x_6D, 0x_E7, 0x_0F, 0x_04, 0x_B1, 0x_E2, 0x_A9,
		0x_8D, 0x_D8, 0x_4B, 0x_A7, 0x_A8, 0x_CA, 0x_97, 0x_49, 0x_A5, 0x_31, 0x_B7, 0x_C2, 0x_48, 0x_F2, 0x_4E,
		0x_29, 0x_8C, 0x_99, 0x_FD, 0x_9F, 0x_3E, 0x_83, 0x_1A, 0x_7E, 0x_27, 0x_A4, 0x_19, 0x_D3, 0x_13, 0x_CE,
		0x_71, 0x_DC, 0x_44, 0x_C1, 0x_AA, 0x_A6, 0x_BA, 0x_6B, 0x_12, 0x_F4, 0x_7C, 0x_67, 0x_E6, 0x_53, 0x_D4,
		0x_9E, 0x_B2, 0x_FA, 0x_45, 0x_ED, 0x_8B, 0x_28, 0x_88,
	];

	helper(S, BASE, 556);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_8_234_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_8_234_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_3D, 0x_B8, 0x_43, 0x_F7, 0x_43, 0x_E3, 0x_49, 0x_DE, 0x_EA, 0x_CD, 0x_E5, 0x_E1, 0x_C8, 0x_93,
		0x_32, 0x_06, 0x_24, 0x_9C, 0x_34, 0x_B2, 0x_55, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_C0, 0x_68, 0x_6C, 0x_C5, 0x_DE, 0x_8C, 0x_22, 0x_95, 0x_7B, 0x_EC, 0x_89, 0x_F2, 0x_E2, 0x_A4,
		0x_C9, 0x_EE, 0x_EA, 0x_AA, 0x_71, 0x_BD, 0x_9C, 0x_A9, 0x_D0, 0x_FE, 0x_73, 0x_7F, 0x_6D, 0x_92, 0x_31,
		0x_02, 0x_06, 0x_11, 0x_08, 0x_8D, 0x_ED, 0x_B7, 0x_88, 0x_63, 0x_D7, 0x_8B, 0x_BC, 0x_32, 0x_55, 0x_5B,
		0x_17, 0x_E3, 0x_3C, 0x_44, 0x_83, 0x_5A, 0x_49, 0x_52, 0x_C8, 0x_87, 0x_FA, 0x_E1, 0x_B4, 0x_34, 0x_33,
		0x_F0, 0x_F9, 0x_69, 0x_BB, 0x_0F, 0x_9A, 0x_7D, 0x_BF, 0x_1F, 0x_AF, 0x_F1, 0x_3B, 0x_B8, 0x_8E, 0x_74,
		0x_41, 0x_70, 0x_1B, 0x_7E, 0x_59, 0x_03, 0x_B1, 0x_A8, 0x_FD, 0x_27, 0x_61, 0x_C1, 0x_B2, 0x_E5, 0x_19,
		0x_5D, 0x_BE, 0x_CB, 0x_07, 0x_81, 0x_A6, 0x_1A, 0x_CD, 0x_43, 0x_90, 0x_A2, 0x_24, 0x_A0, 0x_15, 0x_CE,
		0x_30, 0x_93, 0x_8F, 0x_C2, 0x_5F, 0x_B9, 0x_D8, 0x_77,
	];

	helper(S, BASE, 8_234);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_28_763_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_28_763_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD,
		0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD,
		0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_B9, 0x_21, 0x_A1, 0x_1C, 0x_04, 0x_80, 0x_90, 0x_87,
		0x_10, 0x_88, 0x_BA, 0x_F1, 0x_ED, 0x_0F, 0x_AE, 0x_D6, 0x_8D, 0x_BA, 0x_59, 0x_03, 0x_7D, 0x_C4, 0x_26,
		0x_43, 0x_BB, 0x_B7, 0x_79, 0x_41, 0x_7E, 0x_90, 0x_FC, 0x_03, 0x_35, 0x_15, 0x_2E, 0x_96, 0x_13, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_C4, 0x_B9, 0x_FE, 0x_D6, 0x_3D, 0x_43, 0x_6F, 0x_54, 0x_80, 0x_03, 0x_29, 0x_8F, 0x_B6, 0x_B7,
		0x_2E, 0x_BA, 0x_B5, 0x_87, 0x_47, 0x_79, 0x_4B, 0x_BF, 0x_64, 0x_E5, 0x_70, 0x_1B, 0x_75, 0x_21, 0x_CB,
		0x_88, 0x_22, 0x_6C, 0x_D0, 0x_E9, 0x_23, 0x_34, 0x_C8, 0x_41, 0x_BB, 0x_59, 0x_A9, 0x_BD, 0x_5C, 0x_51,
		0x_EA, 0x_DC, 0x_04, 0x_9E, 0x_25, 0x_E3, 0x_9C, 0x_30, 0x_8B, 0x_5A, 0x_D7, 0x_F0, 0x_DB, 0x_82, 0x_48,
		0x_84, 0x_A1, 0x_A6, 0x_7E, 0x_39, 0x_F7, 0x_E1, 0x_93, 0x_74, 0x_D2, 0x_33, 0x_86, 0x_4A, 0x_10, 0x_13,
		0x_26, 0x_7A, 0x_D5, 0x_ED, 0x_35, 0x_2F, 0x_57, 0x_F1, 0x_73, 0x_96, 0x_2A, 0x_27, 0x_8D, 0x_28, 0x_90,
		0x_7B, 0x_AC, 0x_E7, 0x_FC, 0x_38, 0x_05, 0x_99, 0x_15, 0x_D8, 0x_76, 0x_CF, 0x_92, 0x_A3, 0x_0F, 0x_68,
		0x_7D, 0x_3A, 0x_62, 0x_AD, 0x_AE, 0x_1F, 0x_6D, 0x_58,
	];

	helper(S, BASE, 28_763);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_404_423_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_404_423_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0D,
		0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_D8, 0x_99, 0x_61,
		0x_93, 0x_7A, 0x_84, 0x_05, 0x_DA, 0x_27, 0x_97, 0x_61,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_86, 0x_06, 0x_53, 0x_55, 0x_6F, 0x_72, 0x_6C, 0x_FC, 0x_BB, 0x_EF, 0x_58, 0x_36, 0x_AC, 0x_5C,
		0x_DF, 0x_7A, 0x_5F, 0x_F4, 0x_F1, 0x_21, 0x_C6, 0x_AD, 0x_6D, 0x_7E, 0x_65, 0x_EE, 0x_42, 0x_67, 0x_38,
		0x_BA, 0x_D8, 0x_E9, 0x_9C, 0x_CB, 0x_28, 0x_62, 0x_C0, 0x_CC, 0x_52, 0x_3D, 0x_C3, 0x_82, 0x_75, 0x_B2,
		0x_C4, 0x_94, 0x_7D, 0x_D3, 0x_08, 0x_84, 0x_4A, 0x_EC, 0x_D0, 0x_DC, 0x_74, 0x_19, 0x_16, 0x_CD, 0x_A2,
		0x_D1, 0x_B8, 0x_27, 0x_05, 0x_F5, 0x_AF, 0x_50, 0x_3F, 0x_3C, 0x_CE, 0x_33, 0x_6B, 0x_46, 0x_DA, 0x_87,
		0x_99, 0x_95, 0x_C5, 0x_D6, 0x_49, 0x_E3, 0x_97, 0x_12, 0x_6A, 0x_1A, 0x_FB, 0x_D7, 0x_B9, 0x_AE, 0x_37,
		0x_E8, 0x_90, 0x_FD, 0x_24, 0x_2A, 0x_EB, 0x_F2, 0x_F3, 0x_4E, 0x_2F, 0x_35, 0x_F0, 0x_3E, 0x_88, 0x_8A,
		0x_4C, 0x_9D, 0x_4B, 0x_CA, 0x_61, 0x_1B, 0x_9E, 0x_8F,
	];

	helper(S, BASE, 404_423);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_9_417_287_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_9_417_287_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0A,
		0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_09, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_F5, 0x_29, 0x_B2, 0x_D1, 0x_B6, 0x_4B, 0x_16, 0x_D1, 0x_93, 0x_11, 0x_12, 0x_A0, 0x_44, 0x_D9, 0x_91,
		0x_FB, 0x_39, 0x_8A, 0x_D1, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_65, 0x_CD, 0x_13, 0x_50, 0x_FA, 0x_F5, 0x_DD, 0x_83, 0x_AF, 0x_6E, 0x_E7, 0x_EC, 0x_8A, 0x_C4,
		0x_4A, 0x_61, 0x_A5, 0x_D4, 0x_5D, 0x_F1, 0x_A3, 0x_EB, 0x_2E, 0x_66, 0x_07, 0x_DA, 0x_FB, 0x_D9, 0x_EA,
		0x_25, 0x_67, 0x_9D, 0x_BE, 0x_2C, 0x_91, 0x_C8, 0x_19, 0x_11, 0x_A9, 0x_99, 0x_E6, 0x_5E, 0x_BF, 0x_77,
		0x_68, 0x_23, 0x_E1, 0x_1C, 0x_BD, 0x_92, 0x_A1, 0x_0E, 0x_17, 0x_FD, 0x_7C, 0x_15, 0x_B2, 0x_38, 0x_29,
		0x_C7, 0x_C3, 0x_53, 0x_81, 0x_AC, 0x_8C, 0x_45, 0x_CA, 0x_39, 0x_49, 0x_84, 0x_B5, 0x_BB, 0x_74, 0x_6D,
		0x_71, 0x_85, 0x_C9, 0x_5B, 0x_8E, 0x_4F, 0x_A0, 0x_89, 0x_76, 0x_43, 0x_93, 0x_4B, 0x_02, 0x_E3, 0x_E9,
		0x_D5, 0x_34, 0x_28, 0x_D1, 0x_AB, 0x_CB, 0x_36, 0x_5F, 0x_40, 0x_64, 0x_01, 0x_F4, 0x_96, 0x_16, 0x_78,
		0x_C1, 0x_A7, 0x_B4, 0x_08, 0x_44, 0x_12, 0x_DB, 0x_90,
	];

	helper(S, BASE, 9_417_287);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_44_705_201_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_44_705_201_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_09,
		0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50,
		0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50,
		0x_50, 0x_50, 0x_50, 0x_6C, 0x_E6, 0x_73, 0x_6F, 0x_D2, 0x_D9, 0x_71, 0x_CC, 0x_65, 0x_F2, 0x_DA, 0x_6C,
		0x_D9, 0x_8B, 0x_DE, 0x_B6, 0x_B6, 0x_26, 0x_F8, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_52, 0x_04, 0x_BF, 0x_EB, 0x_8F, 0x_A0, 0x_3A, 0x_73, 0x_90, 0x_76, 0x_84, 0x_EA, 0x_F8, 0x_4D,
		0x_EE, 0x_81, 0x_26, 0x_DF, 0x_AE, 0x_B7, 0x_7A, 0x_E4, 0x_C9, 0x_C1, 0x_F5, 0x_2F, 0x_4B, 0x_6F, 0x_32,
		0x_6C, 0x_95, 0x_79, 0x_86, 0x_37, 0x_E9, 0x_1A, 0x_A2, 0x_D5, 0x_7E, 0x_B9, 0x_A8, 0x_D1, 0x_DE, 0x_5D,
		0x_5E, 0x_DB, 0x_25, 0x_CD, 0x_BA, 0x_41, 0x_BD, 0x_75, 0x_C8, 0x_94, 0x_8E, 0x_72, 0x_AC, 0x_CC, 0x_D7,
		0x_A6, 0x_71, 0x_93, 0x_69, 0x_B8, 0x_8D, 0x_A4, 0x_60, 0x_BC, 0x_57, 0x_36, 0x_4F, 0x_88, 0x_C6, 0x_65,
		0x_B6, 0x_F2, 0x_55, 0x_44, 0x_AF, 0x_39, 0x_05, 0x_2C, 0x_34, 0x_06, 0x_EC, 0x_B3, 0x_0F, 0x_61, 0x_9B,
		0x_83, 0x_98, 0x_A1, 0x_DA, 0x_F3, 0x_9F, 0x_DC, 0x_3D, 0x_F6, 0x_33, 0x_4C, 0x_03, 0x_E5, 0x_D9, 0x_7B,
		0x_2A, 0x_99, 0x_0E, 0x_8B, 0x_AA, 0x_E1, 0x_E6, 0x_48,
	];

	helper(S, BASE, 44_705_201);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_454_010_221_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_454_010_221_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_F8, 0x_73, 0x_C4, 0x_FD, 0x_34, 0x_BD, 0x_11, 0x_8C,
		0x_27, 0x_73, 0x_D6, 0x_7B, 0x_B8, 0x_E5, 0x_F8, 0x_C4, 0x_B9, 0x_21, 0x_51, 0x_F8, 0x_65, 0x_D3, 0x_E8,
		0x_52, 0x_36, 0x_75, 0x_D3, 0x_C4, 0x_4B, 0x_90, 0x_76, 0x_4B, 0x_30, 0x_D6, 0x_D6, 0x_B8, 0x_04, 0x_7D,
		0x_FF, 0x_1B, 0x_31, 0x_87, 0x_AF, 0x_C4, 0x_BB, 0x_27, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_6B, 0x_F8, 0x_60, 0x_E5, 0x_ED, 0x_10, 0x_76, 0x_42, 0x_4E, 0x_5F, 0x_51, 0x_7D, 0x_94, 0x_7B,
		0x_E3, 0x_8A, 0x_FF, 0x_E8, 0x_E2, 0x_2C, 0x_B9, 0x_31, 0x_15, 0x_C1, 0x_26, 0x_36, 0x_37, 0x_F1, 0x_8C,
		0x_8B, 0x_1D, 0x_8D, 0x_18, 0x_55, 0x_11, 0x_05, 0x_B7, 0x_F3, 0x_06, 0x_13, 0x_A1, 0x_C7, 0x_7E, 0x_4B,
		0x_4C, 0x_D8, 0x_21, 0x_6C, 0x_04, 0x_62, 0x_4D, 0x_2A, 0x_E0, 0x_75, 0x_D3, 0x_B3, 0x_70, 0x_EF, 0x_9E,
		0x_FA, 0x_67, 0x_89, 0x_40, 0x_34, 0x_4F, 0x_BB, 0x_CC, 0x_01, 0x_02, 0x_6A, 0x_3D, 0x_BC, 0x_C4, 0x_FD,
		0x_91, 0x_9B, 0x_57, 0x_1B, 0x_F5, 0x_BA, 0x_52, 0x_30, 0x_B8, 0x_B5, 0x_EC, 0x_3C, 0x_72, 0x_73, 0x_0E,
		0x_3E, 0x_93, 0x_F7, 0x_6F, 0x_AF, 0x_58, 0x_90, 0x_C6, 0x_27, 0x_9D, 0x_F2, 0x_A6, 0x_1C, 0x_9C, 0x_B4,
		0x_38, 0x_74, 0x_87, 0x_65, 0x_78, 0x_D6, 0x_8E, 0x_3A,
	];

	helper(S, BASE, 454_010_221);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_7_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_7_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0B,
		0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_20,
		0x_09, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_EE, 0x_19, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_69, 0x_D0, 0x_C2, 0x_C0, 0x_1F, 0x_B5, 0x_EE, 0x_ED, 0x_F6, 0x_2F, 0x_9D, 0x_C6, 0x_76, 0x_06,
		0x_F5, 0x_5F, 0x_56, 0x_8D, 0x_4A, 0x_F7, 0x_D5, 0x_7A, 0x_40, 0x_2A, 0x_58, 0x_7D, 0x_AF, 0x_15, 0x_D1,
		0x_38, 0x_25, 0x_12, 0x_63, 0x_D2, 0x_D9, 0x_02, 0x_26, 0x_93, 0x_E7, 0x_CF, 0x_2E, 0x_67, 0x_9A, 0x_7E,
		0x_01, 0x_B1, 0x_45, 0x_4D, 0x_AC, 0x_B3, 0x_34, 0x_3B, 0x_E3, 0x_BF, 0x_22, 0x_50, 0x_1C, 0x_E8, 0x_5B,
		0x_BB, 0x_F3, 0x_BE, 0x_72, 0x_55, 0x_CA, 0x_4F, 0x_6E, 0x_91, 0x_F8, 0x_28, 0x_CC, 0x_2C, 0x_46, 0x_39,
		0x_05, 0x_E5, 0x_54, 0x_80, 0x_1A, 0x_8E, 0x_BC, 0x_A3, 0x_EF, 0x_3F, 0x_5D, 0x_8F, 0x_48, 0x_5C, 0x_68,
		0x_3D, 0x_84, 0x_77, 0x_8B, 0x_B6, 0x_CB, 0x_A0, 0x_3A, 0x_53, 0x_9E, 0x_6C, 0x_95, 0x_16, 0x_5A, 0x_0F,
		0x_FE, 0x_F0, 0x_AB, 0x_89, 0x_32, 0x_DE, 0x_C4, 0x_96, 0x_51, 0x_23, 0x_B0, 0x_8A, 0x_70, 0x_F2, 0x_B7,
		0x_F1, 0x_AD, 0x_C1, 0x_F4, 0x_A6, 0x_A9, 0x_6A, 0x_36, 0x_92, 0x_74, 0x_81, 0x_7C, 0x_57, 0x_E9, 0x_A7,
		0x_14, 0x_52, 0x_75, 0x_C5, 0x_98, 0x_87, 0x_24, 0x_A5, 0x_1E, 0x_64, 0x_6F, 0x_E6, 0x_FC, 0x_D7, 0x_D3,
		0x_C9, 0x_6D, 0x_E2, 0x_35, 0x_EB, 0x_A2, 0x_EA, 0x_B4, 0x_04, 0x_6B, 0x_29, 0x_4E, 0x_71, 0x_1B, 0x_D4,
		0x_DB, 0x_17, 0x_37, 0x_FF, 0x_7B, 0x_7F, 0x_18, 0x_DD, 0x_CD, 0x_FB, 0x_A8, 0x_30, 0x_E4, 0x_85, 0x_A1,
		0x_DC, 0x_90, 0x_94, 0x_49, 0x_78, 0x_DA, 0x_07, 0x_FA, 0x_E1, 0x_BA, 0x_E0, 0x_08, 0x_B8,
	];

	helper(S, BASE, 7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_52_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_52_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_D4,
		0x_7C, 0x_D8, 0x_B3, 0x_58, 0x_C9, 0x_95, 0x_24, 0x_29, 0x_9B, 0x_E5, 0x_04, 0x_EA, 0x_C7, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_E3, 0x_E9, 0x_37, 0x_FE, 0x_4B, 0x_D9, 0x_ED, 0x_AB, 0x_3B, 0x_94, 0x_A9, 0x_03, 0x_88, 0x_9A,
		0x_C9, 0x_7D, 0x_1D, 0x_90, 0x_A3, 0x_F3, 0x_6A, 0x_39, 0x_CE, 0x_D6, 0x_C4, 0x_C7, 0x_51, 0x_29, 0x_A4,
		0x_BA, 0x_05, 0x_5F, 0x_DF, 0x_70, 0x_D8, 0x_DE, 0x_4D, 0x_AE, 0x_5E, 0x_28, 0x_C6, 0x_F8, 0x_B4, 0x_73,
		0x_9C, 0x_8B, 0x_24, 0x_3D, 0x_52, 0x_8E, 0x_C2, 0x_D4, 0x_AC, 0x_3F, 0x_EF, 0x_B6, 0x_58, 0x_64, 0x_6B,
		0x_C3, 0x_3A, 0x_A6, 0x_15, 0x_B3, 0x_F4, 0x_FB, 0x_C5, 0x_1A, 0x_50, 0x_EE, 0x_F1, 0x_7A, 0x_27, 0x_8C,
		0x_59, 0x_67, 0x_EC, 0x_BB, 0x_04, 0x_A1, 0x_1C, 0x_CB, 0x_E4, 0x_CA, 0x_D3, 0x_14, 0x_9E, 0x_06, 0x_BD,
		0x_78, 0x_6D, 0x_BC, 0x_11, 0x_F2, 0x_76, 0x_A0, 0x_CC, 0x_F6, 0x_E6, 0x_5B, 0x_8A, 0x_5A, 0x_9F, 0x_79,
		0x_34, 0x_96, 0x_FA, 0x_48, 0x_A8, 0x_92, 0x_2C, 0x_9B, 0x_56, 0x_22, 0x_5C, 0x_30, 0x_4E, 0x_3E, 0x_77,
		0x_35, 0x_2A, 0x_4C, 0x_43, 0x_E5, 0x_DD, 0x_81, 0x_32, 0x_93, 0x_33, 0x_80, 0x_3C, 0x_7B, 0x_0F, 0x_7E,
		0x_0E, 0x_82, 0x_8F, 0x_99, 0x_01, 0x_10, 0x_12, 0x_CD, 0x_B0, 0x_FC, 0x_46, 0x_BE, 0x_B8, 0x_4F, 0x_C1,
		0x_54, 0x_6C, 0x_C0, 0x_71, 0x_A7, 0x_41, 0x_DC, 0x_49, 0x_D0, 0x_F9, 0x_85, 0x_26, 0x_69, 0x_E7, 0x_61,
		0x_B7, 0x_36, 0x_D1, 0x_4A, 0x_A2, 0x_53, 0x_17, 0x_44, 0x_EA, 0x_CF, 0x_07, 0x_F0, 0x_13, 0x_31, 0x_8D,
		0x_DB, 0x_84, 0x_95, 0x_6E, 0x_98, 0x_B9, 0x_5D, 0x_55, 0x_AD, 0x_97, 0x_E2, 0x_42, 0x_7F,
	];

	helper(S, BASE, 52);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_318_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_318_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_6F, 0x_9C, 0x_A1, 0x_58, 0x_EE, 0x_EB, 0x_58, 0x_81, 0x_B0, 0x_0F, 0x_21, 0x_08, 0x_A3, 0x_B8, 0x_89,
		0x_5F, 0x_89, 0x_B3, 0x_AB, 0x_C9, 0x_31, 0x_E2, 0x_C9, 0x_B2, 0x_E0, 0x_44, 0x_9D, 0x_91, 0x_97, 0x_2E,
		0x_64, 0x_9A, 0x_77, 0x_51, 0x_17, 0x_49, 0x_28, 0x_14, 0x_4D, 0x_B7, 0x_C4, 0x_2E, 0x_89, 0x_8C, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_6F, 0x_A6, 0x_BD, 0x_F6, 0x_67, 0x_8C, 0x_4D, 0x_EF, 0x_42, 0x_7C, 0x_F5, 0x_CC, 0x_55, 0x_D5,
		0x_E0, 0x_68, 0x_9D, 0x_C9, 0x_16, 0x_33, 0x_0E, 0x_97, 0x_5A, 0x_08, 0x_CB, 0x_F3, 0x_38, 0x_AF, 0x_CF,
		0x_F7, 0x_45, 0x_B3, 0x_BA, 0x_77, 0x_74, 0x_35, 0x_65, 0x_7D, 0x_58, 0x_8E, 0x_5F, 0x_91, 0x_83, 0x_49,
		0x_50, 0x_94, 0x_17, 0x_BB, 0x_27, 0x_63, 0x_3A, 0x_3C, 0x_54, 0x_B6, 0x_70, 0x_2A, 0x_DB, 0x_FA, 0x_B7,
		0x_69, 0x_24, 0x_FB, 0x_72, 0x_C2, 0x_7E, 0x_C3, 0x_9F, 0x_22, 0x_B5, 0x_A3, 0x_A2, 0x_AE, 0x_F4, 0x_C4,
		0x_28, 0x_75, 0x_7B, 0x_92, 0x_32, 0x_FF, 0x_80, 0x_F2, 0x_4A, 0x_64, 0x_ED, 0x_E3, 0x_96, 0x_25, 0x_9B,
		0x_07, 0x_FE, 0x_2E, 0x_D1, 0x_82, 0x_93, 0x_A4, 0x_99, 0x_78, 0x_F8, 0x_48, 0x_DA, 0x_11, 0x_EE, 0x_1B,
		0x_61, 0x_FD, 0x_AA, 0x_13, 0x_0F, 0x_E5, 0x_6C, 0x_EC, 0x_B4, 0x_89, 0x_15, 0x_F1, 0x_18, 0x_D2, 0x_3E,
		0x_C5, 0x_21, 0x_8A, 0x_E2, 0x_29, 0x_9C, 0x_3D, 0x_D0, 0x_41, 0x_46, 0x_AC, 0x_90, 0x_3B, 0x_23, 0x_2C,
		0x_71, 0x_E8, 0x_05, 0x_C1, 0x_8D, 0x_8F, 0x_57, 0x_86, 0x_9A, 0x_06, 0x_79, 0x_8B, 0x_B0, 0x_44, 0x_BC,
		0x_81, 0x_10, 0x_14, 0x_D3, 0x_AB, 0x_D7, 0x_F0, 0x_EB, 0x_E4, 0x_1A, 0x_B8, 0x_5B, 0x_36, 0x_26, 0x_EA,
		0x_03, 0x_53, 0x_34, 0x_88, 0x_2F, 0x_98, 0x_5E, 0x_FC, 0x_A0, 0x_CD, 0x_95, 0x_C6, 0x_E7, 0x_7F, 0x_51,
		0x_87, 0x_C0, 0x_B2, 0x_DC, 0x_12, 0x_AD, 0x_D8, 0x_43, 0x_40, 0x_31, 0x_B9, 0x_DD, 0x_84,
	];

	helper(S, BASE, 318);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_6_319_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_6_319_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_34,
		0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34,
		0x_34, 0x_FA, 0x_DA, 0x_88, 0x_B7, 0x_95, 0x_4C, 0x_E0, 0x_51, 0x_5A, 0x_05, 0x_1B, 0x_BF, 0x_33, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_F2, 0x_38, 0x_22, 0x_0E, 0x_AD, 0x_FE, 0x_71, 0x_52, 0x_BF, 0x_51, 0x_66, 0x_94, 0x_95, 0x_26,
		0x_30, 0x_FB, 0x_04, 0x_87, 0x_67, 0x_85, 0x_31, 0x_BA, 0x_9D, 0x_39, 0x_11, 0x_9C, 0x_DF, 0x_4C, 0x_E2,
		0x_D1, 0x_6D, 0x_FA, 0x_C1, 0x_A1, 0x_63, 0x_23, 0x_8F, 0x_72, 0x_AA, 0x_9A, 0x_EA, 0x_47, 0x_B8, 0x_50,
		0x_C3, 0x_CC, 0x_B0, 0x_92, 0x_F8, 0x_13, 0x_C6, 0x_A6, 0x_27, 0x_FD, 0x_79, 0x_A3, 0x_80, 0x_DE, 0x_18,
		0x_43, 0x_14, 0x_6B, 0x_05, 0x_83, 0x_B3, 0x_C4, 0x_82, 0x_73, 0x_19, 0x_A8, 0x_54, 0x_8A, 0x_EE, 0x_60,
		0x_5D, 0x_7B, 0x_4E, 0x_D0, 0x_CA, 0x_07, 0x_DD, 0x_56, 0x_B4, 0x_1E, 0x_01, 0x_7A, 0x_D7, 0x_1F, 0x_8D,
		0x_BD, 0x_65, 0x_48, 0x_BC, 0x_45, 0x_8E, 0x_A5, 0x_D8, 0x_FF, 0x_A7, 0x_21, 0x_49, 0x_C7, 0x_29, 0x_2F,
		0x_A2, 0x_D3, 0x_06, 0x_36, 0x_1D, 0x_33, 0x_5E, 0x_46, 0x_5F, 0x_EB, 0x_CD, 0x_7D, 0x_3B, 0x_B1, 0x_F5,
		0x_D4, 0x_F7, 0x_8B, 0x_58, 0x_02, 0x_0F, 0x_E8, 0x_E1, 0x_89, 0x_32, 0x_C0, 0x_AE, 0x_D2, 0x_EF, 0x_A9,
		0x_68, 0x_3D, 0x_17, 0x_59, 0x_DC, 0x_4F, 0x_1A, 0x_3A, 0x_DA, 0x_BE, 0x_91, 0x_74, 0x_F0, 0x_AC, 0x_9F,
		0x_57, 0x_D9, 0x_4A, 0x_C9, 0x_5B, 0x_AF, 0x_98, 0x_90, 0x_1C, 0x_6F, 0x_C8, 0x_40, 0x_61, 0x_A4, 0x_ED,
		0x_AB, 0x_7E, 0x_E9, 0x_F4, 0x_16, 0x_55, 0x_B7, 0x_E0, 0x_64, 0x_1B, 0x_78, 0x_93, 0x_8C, 0x_7F, 0x_44,
		0x_F9, 0x_E3, 0x_5A, 0x_E7, 0x_84, 0x_62, 0x_97, 0x_2E, 0x_28, 0x_77, 0x_E4, 0x_D6, 0x_CF,
	];

	helper(S, BASE, 6_319);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_73_165_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_73_165_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_CF, 0x_21, 0x_80, 0x_64, 0x_1D, 0x_02, 0x_E2, 0x_45,
		0x_87, 0x_7E, 0x_DE, 0x_1F, 0x_E7, 0x_6E, 0x_E7, 0x_E0, 0x_17, 0x_B0, 0x_BA, 0x_0E, 0x_65, 0x_F2, 0x_82,
		0x_6F, 0x_8B, 0x_3A, 0x_DF, 0x_E0, 0x_9B, 0x_9A, 0x_97, 0x_68, 0x_96, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_CF, 0x_D9, 0x_68, 0x_31, 0x_E7, 0x_EF, 0x_51, 0x_92, 0x_C5, 0x_2A, 0x_65, 0x_1F, 0x_BD, 0x_69,
		0x_02, 0x_55, 0x_98, 0x_80, 0x_C4, 0x_B9, 0x_AC, 0x_B6, 0x_D0, 0x_46, 0x_7E, 0x_F3, 0x_A3, 0x_17, 0x_70,
		0x_BA, 0x_6F, 0x_25, 0x_DD, 0x_5C, 0x_77, 0x_8C, 0x_54, 0x_1E, 0x_B8, 0x_40, 0x_9A, 0x_35, 0x_4D, 0x_4B,
		0x_2E, 0x_CC, 0x_B7, 0x_76, 0x_CE, 0x_42, 0x_D7, 0x_06, 0x_7D, 0x_44, 0x_E4, 0x_3A, 0x_26, 0x_86, 0x_C7,
		0x_47, 0x_72, 0x_EA, 0x_C8, 0x_8B, 0x_3B, 0x_4A, 0x_3F, 0x_27, 0x_81, 0x_EE, 0x_AB, 0x_EB, 0x_75, 0x_8E,
		0x_B1, 0x_DB, 0x_E5, 0x_63, 0x_F1, 0x_E1, 0x_71, 0x_9E, 0x_96, 0x_57, 0x_C6, 0x_D2, 0x_7C, 0x_36, 0x_23,
		0x_52, 0x_49, 0x_28, 0x_A0, 0x_87, 0x_BF, 0x_FB, 0x_C0, 0x_18, 0x_22, 0x_32, 0x_D1, 0x_24, 0x_D4, 0x_F9,
		0x_43, 0x_DF, 0x_61, 0x_37, 0x_59, 0x_83, 0x_08, 0x_58, 0x_14, 0x_A9, 0x_F5, 0x_0F, 0x_F2, 0x_E0, 0x_56,
		0x_3C, 0x_FF, 0x_3E, 0x_03, 0x_84, 0x_66, 0x_41, 0x_6A, 0x_82, 0x_CB, 0x_F0, 0x_B0, 0x_6E, 0x_B4, 0x_A1,
		0x_8F, 0x_CA, 0x_D6, 0x_99, 0x_12, 0x_B5, 0x_5A, 0x_FE, 0x_50, 0x_67, 0x_FC, 0x_D8, 0x_9F, 0x_BC, 0x_C9,
		0x_11, 0x_0E, 0x_15, 0x_6B, 0x_3D, 0x_5D, 0x_5E, 0x_6C, 0x_E9, 0x_8D, 0x_6D, 0x_F7, 0x_EC, 0x_94, 0x_85,
		0x_2F, 0x_DC, 0x_D3, 0x_60, 0x_91, 0x_78, 0x_A6, 0x_C1, 0x_9B, 0x_E2, 0x_05, 0x_38, 0x_1D, 0x_97, 0x_B2,
		0x_DA, 0x_F8, 0x_E3, 0x_BB, 0x_FD, 0x_AE, 0x_21, 0x_45, 0x_E6, 0x_DE, 0x_16, 0x_07, 0x_F6,
	];

	helper(S, BASE, 73_165);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_192_405_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_192_405_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0D,
		0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_07, 0x_28, 0x_AB, 0x_73, 0x_70, 0x_6A, 0x_B9, 0x_B9, 0x_A2, 0x_DC, 0x_5B, 0x_A6, 0x_B3,
		0x_30, 0x_72, 0x_E7, 0x_74, 0x_46, 0x_7C, 0x_E7, 0x_EA, 0x_C8, 0x_97, 0x_F1, 0x_4F, 0x_D7, 0x_8F, 0x_2A,
		0x_95, 0x_4C, 0x_71, 0x_BA, 0x_C1, 0x_3B, 0x_D5, 0x_51, 0x_F0, 0x_D2, 0x_B5, 0x_03, 0x_E7,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_04, 0x_F4, 0x_8E, 0x_8B, 0x_07, 0x_87, 0x_35, 0x_E7, 0x_22, 0x_34, 0x_B1, 0x_D3, 0x_F6, 0x_DF,
		0x_BC, 0x_B9, 0x_2F, 0x_7A, 0x_EF, 0x_08, 0x_3A, 0x_82, 0x_83, 0x_33, 0x_EA, 0x_BA, 0x_F5, 0x_AE, 0x_D2,
		0x_38, 0x_28, 0x_F7, 0x_23, 0x_95, 0x_4C, 0x_6E, 0x_48, 0x_4F, 0x_8D, 0x_7E, 0x_EC, 0x_9C, 0x_98, 0x_41,
		0x_AA, 0x_49, 0x_D4, 0x_32, 0x_C2, 0x_A6, 0x_3C, 0x_B4, 0x_D9, 0x_16, 0x_1F, 0x_FC, 0x_37, 0x_BE, 0x_D5,
		0x_52, 0x_DB, 0x_42, 0x_9A, 0x_17, 0x_2E, 0x_BB, 0x_7C, 0x_C6, 0x_5D, 0x_8A, 0x_96, 0x_8F, 0x_71, 0x_6D,
		0x_50, 0x_AC, 0x_40, 0x_30, 0x_FA, 0x_1C, 0x_39, 0x_89, 0x_CE, 0x_14, 0x_79, 0x_93, 0x_9D, 0x_26, 0x_3B,
		0x_A3, 0x_45, 0x_43, 0x_55, 0x_4D, 0x_A5, 0x_3F, 0x_51, 0x_B5, 0x_B0, 0x_46, 0x_C4, 0x_77, 0x_A8, 0x_61,
		0x_4E, 0x_3D, 0x_5E, 0x_54, 0x_DD, 0x_B7, 0x_CB, 0x_A4, 0x_6A, 0x_E2, 0x_18, 0x_72, 0x_B3, 0x_5A, 0x_0E,
		0x_5B, 0x_E5, 0x_88, 0x_A2, 0x_A7, 0x_D0, 0x_9F, 0x_25, 0x_DC, 0x_F1, 0x_F8, 0x_ED, 0x_64, 0x_92, 0x_EB,
		0x_BF, 0x_9B, 0x_FD, 0x_7D, 0x_E3, 0x_A9, 0x_5F, 0x_69, 0x_F3, 0x_27, 0x_FE, 0x_8C, 0x_D8, 0x_FB, 0x_24,
		0x_1D, 0x_E1, 0x_F9, 0x_E6, 0x_13, 0x_11, 0x_DE, 0x_21, 0x_D6, 0x_68, 0x_97, 0x_57, 0x_15, 0x_29, 0x_06,
		0x_59, 0x_44, 0x_5C, 0x_76, 0x_4B, 0x_0F, 0x_12, 0x_D7, 0x_C5, 0x_F2, 0x_C8, 0x_70, 0x_AB, 0x_74, 0x_66,
		0x_63, 0x_47, 0x_C3, 0x_6B, 0x_7F, 0x_81, 0x_03, 0x_C1, 0x_F0, 0x_10, 0x_C7, 0x_86, 0x_2A,
	];

	helper(S, BASE, 192_405);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_9_508_492_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_9_508_492_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_0E, 0x_E9, 0x_74, 0x_02, 0x_A5, 0x_80, 0x_33, 0x_AA, 0x_DA, 0x_76, 0x_47, 0x_E5, 0x_C7,
		0x_99, 0x_6E, 0x_D4, 0x_E6, 0x_F8, 0x_5A, 0x_21, 0x_BB, 0x_60, 0x_F7, 0x_05, 0x_3A, 0x_9E, 0x_D0, 0x_3C,
		0x_3C, 0x_64, 0x_8E, 0x_34, 0x_94, 0x_D7, 0x_93, 0x_A4, 0x_59, 0x_A6, 0x_D0, 0x_7E,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_0E, 0x_FD, 0x_BB, 0x_CD, 0x_F6, 0x_2E, 0x_94, 0x_B8, 0x_71, 0x_93, 0x_60, 0x_29, 0x_8F, 0x_25,
		0x_3E, 0x_6B, 0x_CC, 0x_8E, 0x_58, 0x_76, 0x_4C, 0x_F5, 0x_43, 0x_72, 0x_18, 0x_E7, 0x_A0, 0x_41, 0x_62,
		0x_1B, 0x_EE, 0x_E3, 0x_9B, 0x_52, 0x_7D, 0x_D1, 0x_7A, 0x_54, 0x_B9, 0x_D9, 0x_D6, 0x_E4, 0x_EB, 0x_47,
		0x_38, 0x_D5, 0x_69, 0x_BE, 0x_D4, 0x_DB, 0x_74, 0x_A2, 0x_11, 0x_6F, 0x_FA, 0x_44, 0x_49, 0x_87, 0x_64,
		0x_F2, 0x_BF, 0x_E9, 0x_34, 0x_B7, 0x_04, 0x_D0, 0x_26, 0x_50, 0x_F9, 0x_01, 0x_D2, 0x_B2, 0x_5B, 0x_C7,
		0x_FC, 0x_42, 0x_FF, 0x_BD, 0x_B6, 0x_9D, 0x_65, 0x_19, 0x_86, 0x_7B, 0x_4A, 0x_12, 0x_5F, 0x_03, 0x_8A,
		0x_4F, 0x_FB, 0x_C5, 0x_F8, 0x_66, 0x_28, 0x_27, 0x_C0, 0x_88, 0x_82, 0x_D3, 0x_6D, 0x_C1, 0x_AC, 0x_3F,
		0x_46, 0x_A1, 0x_EC, 0x_53, 0x_DA, 0x_40, 0x_75, 0x_99, 0x_7E, 0x_AB, 0x_A4, 0x_F1, 0x_3A, 0x_A7, 0x_2F,
		0x_AA, 0x_48, 0x_3B, 0x_C4, 0x_21, 0x_7F, 0x_E5, 0x_CE, 0x_31, 0x_9E, 0x_FE, 0x_E6, 0x_83, 0x_08, 0x_D7,
		0x_DE, 0x_16, 0x_22, 0x_A6, 0x_57, 0x_8B, 0x_80, 0x_55, 0x_06, 0x_8C, 0x_1D, 0x_C3, 0x_9A, 0x_F4, 0x_E0,
		0x_95, 0x_F7, 0x_C2, 0x_6C, 0x_02, 0x_10, 0x_9C, 0x_7C, 0x_05, 0x_97, 0x_ED, 0x_C8, 0x_23, 0x_91, 0x_2A,
		0x_59, 0x_A3, 0x_CB, 0x_5A, 0x_3C, 0x_0F, 0x_2C, 0x_07, 0x_BC, 0x_79, 0x_15, 0x_6A, 0x_67, 0x_14, 0x_70,
		0x_56, 0x_1E, 0x_1F, 0x_4D, 0x_33, 0x_8D, 0x_98, 0x_24, 0x_96, 0x_68, 0x_6E, 0x_B4, 0x_37,
	];

	helper(S, BASE, 9_508_492);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_37_841_563_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_37_841_563_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_20,
		0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_2B, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49,
		0x_49, 0x_49, 0x_16, 0x_FB, 0x_9C, 0x_BD, 0x_EB, 0x_6F, 0x_43, 0x_61, 0x_6E, 0x_6C, 0x_D6, 0x_F2, 0x_AF,
		0x_7C, 0x_60, 0x_01, 0x_AB, 0x_3C, 0x_93, 0x_D4, 0x_26, 0x_C9, 0x_7D, 0x_E3, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_97, 0x_5B, 0x_FC, 0x_04, 0x_16, 0x_6B, 0x_26, 0x_E7, 0x_90, 0x_3C, 0x_DF, 0x_31, 0x_EA, 0x_7B,
		0x_F6, 0x_77, 0x_EE, 0x_92, 0x_DA, 0x_9F, 0x_A5, 0x_A8, 0x_F7, 0x_81, 0x_A3, 0x_47, 0x_1C, 0x_AD, 0x_6E,
		0x_0F, 0x_6C, 0x_E0, 0x_F4, 0x_32, 0x_39, 0x_A9, 0x_73, 0x_51, 0x_D2, 0x_50, 0x_E6, 0x_BB, 0x_8E, 0x_8C,
		0x_E8, 0x_B4, 0x_06, 0x_E3, 0x_03, 0x_FB, 0x_99, 0x_0E, 0x_BD, 0x_7C, 0x_36, 0x_48, 0x_4C, 0x_78, 0x_01,
		0x_B9, 0x_F3, 0x_D3, 0x_D0, 0x_21, 0x_7A, 0x_C7, 0x_35, 0x_CB, 0x_27, 0x_08, 0x_17, 0x_25, 0x_24, 0x_BA,
		0x_93, 0x_62, 0x_3A, 0x_43, 0x_FE, 0x_F0, 0x_E1, 0x_5F, 0x_11, 0x_52, 0x_74, 0x_18, 0x_53, 0x_8F, 0x_23,
		0x_82, 0x_3D, 0x_AF, 0x_CE, 0x_40, 0x_D1, 0x_C6, 0x_1A, 0x_56, 0x_14, 0x_BF, 0x_D6, 0x_1F, 0x_F5, 0x_1B,
		0x_7D, 0x_9E, 0x_8A, 0x_D8, 0x_1D, 0x_B7, 0x_02, 0x_95, 0x_C4, 0x_B0, 0x_58, 0x_55, 0x_85, 0x_59, 0x_C3,
		0x_05, 0x_CF, 0x_10, 0x_F2, 0x_57, 0x_65, 0x_91, 0x_C8, 0x_12, 0x_8B, 0x_C9, 0x_98, 0x_6F, 0x_AB, 0x_30,
		0x_2C, 0x_66, 0x_BC, 0x_70, 0x_4A, 0x_29, 0x_13, 0x_2E, 0x_61, 0x_EC, 0x_ED, 0x_B5, 0x_94, 0x_D4, 0x_C5,
		0x_E2, 0x_DD, 0x_2A, 0x_76, 0x_3B, 0x_45, 0x_68, 0x_60, 0x_86, 0x_4F, 0x_41, 0x_B6, 0x_5D, 0x_9D, 0x_1E,
		0x_C2, 0x_E4, 0x_5A, 0x_A4, 0x_AA, 0x_F9, 0x_FD, 0x_75, 0x_44, 0x_2F, 0x_9C, 0x_89, 0x_19, 0x_C0, 0x_E5,
		0x_6D, 0x_79, 0x_5E, 0x_34, 0x_A0, 0x_B8, 0x_07, 0x_83, 0x_D5, 0x_A2, 0x_84, 0x_AE, 0x_9A,
	];

	helper(S, BASE, 37_841_563);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_655_550_900_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_655_550_900_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_0B,
		0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_57, 0x_57, 0x_57,
		0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57,
		0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57,
		0x_57, 0x_57, 0x_57, 0x_58, 0x_AE, 0x_E4, 0x_8D, 0x_D0, 0x_1E, 0x_89, 0x_01, 0x_8D, 0x_CF, 0x_1E, 0x_19,
		0x_CF, 0x_E6, 0x_AE, 0x_77, 0x_B5, 0x_81, 0x_1D, 0x_3A, 0x_91, 0x_6F, 0x_39, 0x_E5, 0x_13, 0x_53, 0x_42,
		0x_08, 0x_F4, 0x_DD, 0x_83, 0x_85, 0x_39, 0x_FC, 0x_EC, 0x_16, 0x_FF, 0x_78, 0x_01, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_57, 0x_D2, 0x_CB, 0x_3F, 0x_42, 0x_B2, 0x_F7, 0x_28, 0x_CE, 0x_DD, 0x_9F, 0x_30, 0x_E8, 0x_08, 0x_DA,
		0x_DC, 0x_AA, 0x_F8, 0x_A5, 0x_40, 0x_9A, 0x_82, 0x_B0, 0x_CF, 0x_5D, 0x_8C, 0x_A3, 0x_EF, 0x_54, 0x_E4,
		0x_75, 0x_10, 0x_9D, 0x_F4, 0x_AB, 0x_BB, 0x_AE, 0x_22, 0x_B3, 0x_68, 0x_35, 0x_D3, 0x_43, 0x_7B, 0x_6A,
		0x_69, 0x_B9, 0x_BE, 0x_53, 0x_65, 0x_A8, 0x_FD, 0x_16, 0x_94, 0x_A7, 0x_C5, 0x_4B, 0x_05, 0x_BD, 0x_91,
		0x_07, 0x_B7, 0x_88, 0x_5C, 0x_34, 0x_02, 0x_AC, 0x_5B, 0x_37, 0x_E6, 0x_2E, 0x_23, 0x_6D, 0x_45, 0x_8A,
		0x_4E, 0x_DB, 0x_FA, 0x_98, 0x_21, 0x_1A, 0x_46, 0x_27, 0x_56, 0x_73, 0x_A0, 0x_84, 0x_71, 0x_93, 0x_BF,
		0x_E7, 0x_58, 0x_44, 0x_85, 0x_12, 0x_51, 0x_6B, 0x_FF, 0x_A6, 0x_3A, 0x_8B, 0x_5F, 0x_E5, 0x_F9, 0x_BA,
		0x_8F, 0x_13, 0x_D7, 0x_C8, 0x_D9, 0x_B6, 0x_9B, 0x_3C, 0x_62, 0x_2A, 0x_5A, 0x_EC, 0x_4C, 0x_26, 0x_FC,
		0x_4A, 0x_0F, 0x_86, 0x_59, 0x_1E, 0x_90, 0x_17, 0x_06, 0x_4F, 0x_DE, 0x_E3, 0x_FE, 0x_A9, 0x_64, 0x_49,
		0x_E1, 0x_D1, 0x_03, 0x_CC, 0x_EA, 0x_89, 0x_E9, 0x_95, 0x_D5, 0x_1D, 0x_F5, 0x_C0, 0x_66, 0x_F2, 0x_C9,
		0x_DF, 0x_C4, 0x_8D, 0x_39, 0x_92, 0x_1F, 0x_60, 0x_D6, 0x_79, 0x_97, 0x_CD, 0x_EE, 0x_81, 0x_3E, 0x_6F,
		0x_47, 0x_F0, 0x_83, 0x_FB, 0x_C2, 0x_0E, 0x_61, 0x_19, 0x_96, 0x_F3, 0x_11, 0x_D4, 0x_AD, 0x_15, 0x_77,
		0x_78, 0x_B5, 0x_C6, 0x_3D, 0x_33, 0x_74, 0x_EB, 0x_1B, 0x_76, 0x_01, 0x_9E, 0x_F1, 0x_E2,
	];

	helper(S, BASE, 655_550_900);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_9_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_9_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0B,
		0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_FC, 0x_2D, 0x_DB,
		0x_2C, 0x_23, 0x_AB, 0x_BE, 0x_8F, 0x_40, 0x_3B, 0x_16, 0x_47, 0x_3F, 0x_01, 0x_2A, 0x_50, 0x_56, 0x_AF,
		0x_4E, 0x_7A, 0x_56, 0x_D8, 0x_ED, 0x_DC, 0x_7D, 0x_10, 0x_A7, 0x_2C, 0x_02, 0x_4A, 0x_70, 0x_61, 0x_29,
		0x_5E, 0x_27, 0x_DB, 0x_2E, 0x_A1, 0x_9F, 0x_B9, 0x_CE,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_66, 0x_3F, 0x_45, 0x_6C, 0x_D8, 0x_4B, 0x_48, 0x_9A, 0x_FC, 0x_A7, 0x_72, 0x_C6, 0x_E5, 0x_11,
		0x_94, 0x_46, 0x_07, 0x_8B, 0x_99, 0x_2C, 0x_16, 0x_85, 0x_37, 0x_8F, 0x_89, 0x_F3, 0x_6F, 0x_03, 0x_2F,
		0x_EA, 0x_5D, 0x_AB, 0x_A1, 0x_1E, 0x_B6, 0x_7F, 0x_14, 0x_F1, 0x_70, 0x_FF, 0x_BD, 0x_30, 0x_BB, 0x_1A,
		0x_57, 0x_9F, 0x_DC, 0x_AF, 0x_17, 0x_24, 0x_F0, 0x_69, 0x_3A, 0x_2A, 0x_18, 0x_E6, 0x_CE, 0x_35, 0x_29,
		0x_A6, 0x_38, 0x_77, 0x_DE, 0x_B3, 0x_34, 0x_DD, 0x_B8, 0x_97, 0x_B7, 0x_7E, 0x_01, 0x_51, 0x_3D, 0x_6A,
		0x_CB, 0x_95, 0x_BC, 0x_25, 0x_79, 0x_2E, 0x_4D, 0x_A8, 0x_78, 0x_E0, 0x_A4, 0x_36, 0x_87, 0x_E9, 0x_63,
		0x_9D, 0x_75, 0x_D5, 0x_D0, 0x_F6, 0x_C4, 0x_10, 0x_5B, 0x_4E, 0x_3B, 0x_6D, 0x_31, 0x_E2, 0x_90, 0x_A0,
		0x_E1, 0x_7D, 0x_33, 0x_52, 0x_67, 0x_7C, 0x_D4, 0x_74, 0x_86, 0x_D2, 0x_41, 0x_0E, 0x_88, 0x_F8, 0x_CF,
		0x_9C, 0x_8D, 0x_44, 0x_3E, 0x_C0, 0x_DB, 0x_73, 0x_DA, 0x_81, 0x_C7, 0x_22, 0x_80, 0x_B4, 0x_96, 0x_E7,
		0x_7A, 0x_39, 0x_02, 0x_C3, 0x_93, 0x_50, 0x_CA, 0x_54, 0x_56, 0x_4A, 0x_98, 0x_8A, 0x_9B, 0x_D3, 0x_A5,
		0x_B9, 0x_CC, 0x_08, 0x_27, 0x_7B, 0x_1D, 0x_BE, 0x_D6, 0x_5E, 0x_4F, 0x_21, 0x_F2, 0x_BF, 0x_4C, 0x_C8,
		0x_A9, 0x_ED, 0x_82, 0x_84, 0x_60, 0x_E3, 0x_64, 0x_DF, 0x_8E, 0x_42, 0x_B2, 0x_13, 0x_FB, 0x_04, 0x_FD,
		0x_AE, 0x_61, 0x_AC, 0x_65, 0x_32, 0x_F5, 0x_0F, 0x_92, 0x_55, 0x_A2, 0x_C2, 0x_B1, 0x_5F, 0x_91, 0x_26,
		0x_62, 0x_B0, 0x_C5, 0x_AA, 0x_49, 0x_3C, 0x_F7, 0x_47, 0x_EE, 0x_05, 0x_5A, 0x_40, 0x_BA, 0x_E4, 0x_D7,
		0x_A3, 0x_06, 0x_1C, 0x_B5, 0x_D1, 0x_EF, 0x_1F, 0x_43, 0x_E8, 0x_8C, 0x_68, 0x_1B, 0x_59, 0x_76, 0x_5C,
		0x_C9, 0x_6E, 0x_D9, 0x_71, 0x_83, 0x_FE, 0x_EC, 0x_28, 0x_F9, 0x_FA, 0x_23, 0x_19, 0x_F4, 0x_9E, 0x_EB,
		0x_AD, 0x_C1, 0x_CD, 0x_6B, 0x_58, 0x_12, 0x_53,
	];

	helper(S, BASE, 9);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_45_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_45_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_69, 0x_2D, 0x_A5, 0x_16, 0x_07, 0x_C5, 0x_48,
		0x_A7, 0x_8F, 0x_38, 0x_3E, 0x_36, 0x_3F, 0x_33, 0x_26, 0x_D2, 0x_E1, 0x_B3, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_A0, 0x_34, 0x_CF, 0x_13, 0x_BB, 0x_17, 0x_47, 0x_A9, 0x_DC, 0x_8B, 0x_48, 0x_F7, 0x_87, 0x_39,
		0x_E4, 0x_C7, 0x_9E, 0x_C5, 0x_1E, 0x_FC, 0x_4A, 0x_D0, 0x_D7, 0x_29, 0x_4D, 0x_99, 0x_D3, 0x_FF, 0x_7E,
		0x_FE, 0x_25, 0x_86, 0x_31, 0x_A3, 0x_5D, 0x_2C, 0x_E3, 0x_57, 0x_CA, 0x_4C, 0x_81, 0x_21, 0x_23, 0x_58,
		0x_69, 0x_E5, 0x_5E, 0x_76, 0x_04, 0x_A8, 0x_32, 0x_35, 0x_63, 0x_18, 0x_DE, 0x_F8, 0x_A1, 0x_A7, 0x_A5,
		0x_C4, 0x_B0, 0x_9F, 0x_D8, 0x_38, 0x_05, 0x_9D, 0x_BE, 0x_27, 0x_BD, 0x_B4, 0x_8D, 0x_07, 0x_3D, 0x_88,
		0x_71, 0x_EA, 0x_7A, 0x_72, 0x_70, 0x_F5, 0x_5A, 0x_55, 0x_A4, 0x_8E, 0x_11, 0x_D5, 0x_80, 0x_DA, 0x_DD,
		0x_44, 0x_C0, 0x_B7, 0x_2E, 0x_64, 0x_F9, 0x_6E, 0x_54, 0x_DF, 0x_F3, 0x_AF, 0x_F0, 0x_41, 0x_F2, 0x_D1,
		0x_E6, 0x_8C, 0x_4E, 0x_08, 0x_1A, 0x_42, 0x_CD, 0x_EC, 0x_E0, 0x_97, 0x_AE, 0x_83, 0x_AD, 0x_B8, 0x_9B,
		0x_40, 0x_6C, 0x_D2, 0x_3C, 0x_B1, 0x_F1, 0x_52, 0x_2F, 0x_92, 0x_BF, 0x_EE, 0x_1D, 0x_61, 0x_EB, 0x_8A,
		0x_7B, 0x_C3, 0x_7F, 0x_ED, 0x_C9, 0x_1B, 0x_E7, 0x_15, 0x_C2, 0x_74, 0x_78, 0x_33, 0x_43, 0x_45, 0x_90,
		0x_56, 0x_5B, 0x_E8, 0x_B2, 0x_59, 0x_0F, 0x_C8, 0x_1F, 0x_73, 0x_0E, 0x_75, 0x_DB, 0x_94, 0x_A6, 0x_77,
		0x_6B, 0x_FD, 0x_D6, 0x_19, 0x_AC, 0x_6F, 0x_95, 0x_93, 0x_2A, 0x_6D, 0x_10, 0x_B3, 0x_D9, 0x_B5, 0x_36,
		0x_3F, 0x_E2, 0x_89, 0x_AB, 0x_3A, 0x_01, 0x_50, 0x_24, 0x_B6, 0x_53, 0x_16, 0x_CE, 0x_28, 0x_AA, 0x_B9,
		0x_60, 0x_7D, 0x_9A, 0x_37, 0x_1C, 0x_4B, 0x_F6, 0x_A2, 0x_82, 0x_02, 0x_85, 0x_6A, 0x_3E, 0x_67, 0x_14,
		0x_5F, 0x_12, 0x_4F, 0x_9C, 0x_EF, 0x_03, 0x_F4, 0x_96, 0x_E1, 0x_62, 0x_5C, 0x_30, 0x_68, 0x_C1, 0x_65,
		0x_FA, 0x_E9, 0x_FB, 0x_91, 0x_BC, 0x_BA, 0x_CB, 0x_79, 0x_22, 0x_51, 0x_66, 0x_98, 0x_CC, 0x_C6, 0x_3B,
		0x_46, 0x_84, 0x_26, 0x_49, 0x_8F, 0x_D4, 0x_7C,
	];

	helper(S, BASE, 45);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_526_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_526_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0B,
		0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0C,
		0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_AA, 0x_E0, 0x_09, 0x_C2, 0x_91, 0x_CE, 0x_A9, 0x_FF,
		0x_B8, 0x_F6, 0x_AB, 0x_F6, 0x_C7, 0x_C3, 0x_E5, 0x_3C, 0x_6D,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_E3, 0x_AA, 0x_25, 0x_52, 0x_70, 0x_AD, 0x_5C, 0x_A0, 0x_63, 0x_EE, 0x_C7, 0x_56, 0x_75, 0x_4F,
		0x_48, 0x_90, 0x_3D, 0x_2A, 0x_60, 0x_73, 0x_D7, 0x_C1, 0x_7B, 0x_05, 0x_BB, 0x_8A, 0x_FE, 0x_B1, 0x_D2,
		0x_7F, 0x_55, 0x_E0, 0x_CA, 0x_14, 0x_42, 0x_F0, 0x_67, 0x_7D, 0x_80, 0x_C0, 0x_29, 0x_08, 0x_A9, 0x_58,
		0x_F7, 0x_3E, 0x_68, 0x_19, 0x_4B, 0x_9D, 0x_5E, 0x_A7, 0x_D6, 0x_46, 0x_0E, 0x_D0, 0x_74, 0x_4A, 0x_A4,
		0x_A1, 0x_5F, 0x_8B, 0x_BA, 0x_9B, 0x_1C, 0x_93, 0x_E6, 0x_DF, 0x_B0, 0x_64, 0x_8E, 0x_C2, 0x_CF, 0x_78,
		0x_BE, 0x_B9, 0x_DD, 0x_FB, 0x_B2, 0x_A6, 0x_71, 0x_6F, 0x_34, 0x_10, 0x_AE, 0x_53, 0x_44, 0x_7C, 0x_1A,
		0x_16, 0x_04, 0x_50, 0x_D3, 0x_41, 0x_15, 0x_57, 0x_E2, 0x_62, 0x_23, 0x_6D, 0x_66, 0x_30, 0x_BF, 0x_85,
		0x_39, 0x_33, 0x_7A, 0x_F8, 0x_F2, 0x_61, 0x_DC, 0x_9F, 0x_A8, 0x_07, 0x_22, 0x_A3, 0x_98, 0x_AF, 0x_11,
		0x_37, 0x_03, 0x_21, 0x_D5, 0x_9C, 0x_3F, 0x_C3, 0x_ED, 0x_DE, 0x_EA, 0x_72, 0x_51, 0x_96, 0x_02, 0x_A5,
		0x_89, 0x_4C, 0x_1F, 0x_CC, 0x_8D, 0x_84, 0x_81, 0x_C5, 0x_F3, 0x_3A, 0x_DB, 0x_E9, 0x_28, 0x_43, 0x_5D,
		0x_2E, 0x_12, 0x_47, 0x_40, 0x_1D, 0x_2C, 0x_8F, 0x_91, 0x_92, 0x_4D, 0x_E7, 0x_59, 0x_79, 0x_B6, 0x_FA,
		0x_FF, 0x_F6, 0x_83, 0x_EC, 0x_5B, 0x_82, 0x_9E, 0x_18, 0x_BC, 0x_54, 0x_77, 0x_26, 0x_C4, 0x_F9, 0x_69,
		0x_99, 0x_95, 0x_EB, 0x_3B, 0x_01, 0x_32, 0x_88, 0x_D9, 0x_87, 0x_76, 0x_45, 0x_35, 0x_E4, 0x_F1, 0x_24,
		0x_27, 0x_C8, 0x_BD, 0x_F5, 0x_7E, 0x_E1, 0x_B8, 0x_8C, 0x_17, 0x_49, 0x_DA, 0x_B3, 0x_1B, 0x_B4, 0x_6E,
		0x_31, 0x_AB, 0x_6C, 0x_B7, 0x_65, 0x_1E, 0x_4E, 0x_B5, 0x_EF, 0x_5A, 0x_97, 0x_13, 0x_A2, 0x_F4, 0x_3C,
		0x_6B, 0x_CE, 0x_D1, 0x_CD, 0x_E8, 0x_6A, 0x_C6, 0x_9A, 0x_D4, 0x_E5, 0x_FC, 0x_AC, 0x_CB, 0x_86, 0x_D8,
		0x_C9, 0x_0F, 0x_2F, 0x_36, 0x_94, 0x_FD, 0x_06,
	];

	helper(S, BASE, 526);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_3_965_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_3_965_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_0B,
		0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C1, 0x_61, 0x_2B, 0x_5A, 0x_05, 0x_19,
		0x_8F, 0x_E8, 0x_95, 0x_B6, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_1B, 0x_15, 0x_DC, 0x_57, 0x_6A, 0x_05, 0x_4D, 0x_FF, 0x_AC, 0x_CC, 0x_68, 0x_E2, 0x_61, 0x_F0,
		0x_33, 0x_C1, 0x_BF, 0x_4C, 0x_48, 0x_56, 0x_42, 0x_EF, 0x_5D, 0x_1D, 0x_19, 0x_C5, 0x_97, 0x_F3, 0x_46,
		0x_96, 0x_B8, 0x_9B, 0x_A7, 0x_70, 0x_2F, 0x_4B, 0x_C2, 0x_65, 0x_49, 0x_98, 0x_78, 0x_D8, 0x_D6, 0x_CB,
		0x_A3, 0x_93, 0x_13, 0x_79, 0x_0F, 0x_4A, 0x_14, 0x_66, 0x_21, 0x_24, 0x_76, 0x_5F, 0x_0E, 0x_3F, 0x_07,
		0x_17, 0x_9F, 0x_BB, 0x_5B, 0x_DB, 0x_CD, 0x_EB, 0x_67, 0x_12, 0x_8D, 0x_C6, 0x_A6, 0x_58, 0x_FA, 0x_55,
		0x_5A, 0x_2A, 0x_E8, 0x_45, 0x_39, 0x_AF, 0x_AE, 0x_47, 0x_1F, 0x_38, 0x_C8, 0x_89, 0x_37, 0x_B1, 0x_F2,
		0x_44, 0x_BE, 0x_9A, 0x_88, 0x_AA, 0x_01, 0x_E7, 0x_84, 0x_28, 0x_5E, 0x_53, 0x_60, 0x_D9, 0x_EE, 0x_62,
		0x_1C, 0x_8F, 0x_3D, 0x_29, 0x_B5, 0x_26, 0x_F4, 0x_E1, 0x_06, 0x_7F, 0x_7D, 0x_BA, 0x_02, 0x_3C, 0x_E0,
		0x_36, 0x_F5, 0x_DD, 0x_F1, 0x_81, 0x_FB, 0x_AB, 0x_C3, 0x_D4, 0x_23, 0x_AD, 0x_90, 0x_F7, 0x_B0, 0x_32,
		0x_A5, 0x_C0, 0x_E3, 0x_75, 0x_64, 0x_52, 0x_EA, 0x_A9, 0x_DE, 0x_F8, 0x_FD, 0x_4F, 0x_69, 0x_1A, 0x_25,
		0x_DA, 0x_B9, 0x_7B, 0x_85, 0x_D3, 0x_A0, 0x_C9, 0x_87, 0x_2E, 0x_D1, 0x_35, 0x_8A, 0x_54, 0x_9C, 0x_83,
		0x_D0, 0x_73, 0x_B7, 0x_18, 0x_8C, 0x_ED, 0x_71, 0x_41, 0x_D5, 0x_B6, 0x_1E, 0x_9D, 0x_B3, 0x_22, 0x_A1,
		0x_BC, 0x_F6, 0x_E4, 0x_3A, 0x_11, 0x_7C, 0x_92, 0x_6C, 0x_34, 0x_A2, 0x_31, 0x_B4, 0x_8E, 0x_99, 0x_5C,
		0x_E6, 0x_3B, 0x_2C, 0x_27, 0x_E9, 0x_82, 0x_CA, 0x_63, 0x_80, 0x_7E, 0x_C4, 0x_CE, 0x_16, 0x_74, 0x_A8,
		0x_D2, 0x_CF, 0x_DF, 0x_A4, 0x_08, 0x_72, 0x_04, 0x_43, 0x_6D, 0x_3E, 0x_9E, 0x_BD, 0x_40, 0x_77, 0x_91,
		0x_FC, 0x_95, 0x_51, 0x_6B, 0x_8B, 0x_E5, 0x_10, 0x_50, 0x_6E, 0x_94, 0x_6F, 0x_F9, 0x_86, 0x_FE, 0x_D7,
		0x_7A, 0x_EC, 0x_59, 0x_03, 0x_30, 0x_B2, 0x_4E,
	];

	helper(S, BASE, 3_965);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_28_287_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_28_287_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0B,
		0x_09, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0C,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_F0, 0x_F0, 0x_F0,
		0x_F0, 0x_AB, 0x_2E, 0x_2D, 0x_7C, 0x_79, 0x_8D, 0x_13, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_F0, 0x_BE, 0x_63, 0x_4C, 0x_EE, 0x_F2, 0x_6D, 0x_B5, 0x_26, 0x_07, 0x_51, 0x_73, 0x_B7, 0x_5E, 0x_58,
		0x_08, 0x_4E, 0x_62, 0x_D9, 0x_BF, 0x_AC, 0x_D4, 0x_38, 0x_D6, 0x_29, 0x_6E, 0x_C6, 0x_35, 0x_46, 0x_EF,
		0x_65, 0x_C5, 0x_C7, 0x_13, 0x_9C, 0x_F4, 0x_8B, 0x_1C, 0x_70, 0x_82, 0x_E7, 0x_5B, 0x_E3, 0x_BC, 0x_25,
		0x_22, 0x_A9, 0x_30, 0x_CD, 0x_2A, 0x_5F, 0x_E9, 0x_AF, 0x_ED, 0x_3B, 0x_59, 0x_15, 0x_42, 0x_69, 0x_FC,
		0x_DA, 0x_04, 0x_F1, 0x_7B, 0x_9E, 0x_AA, 0x_87, 0x_61, 0x_BA, 0x_75, 0x_2F, 0x_8A, 0x_BB, 0x_88, 0x_D1,
		0x_CE, 0x_E1, 0x_45, 0x_7E, 0x_7D, 0x_C0, 0x_CC, 0x_9B, 0x_6F, 0x_DB, 0x_74, 0x_C2, 0x_85, 0x_F8, 0x_33,
		0x_FB, 0x_55, 0x_AE, 0x_8C, 0x_A2, 0x_19, 0x_E2, 0x_5D, 0x_B8, 0x_C3, 0x_DE, 0x_3A, 0x_E8, 0x_52, 0x_03,
		0x_B2, 0x_1F, 0x_EA, 0x_D3, 0x_66, 0x_F6, 0x_5C, 0x_27, 0x_DC, 0x_AB, 0x_F7, 0x_23, 0x_34, 0x_7C, 0x_C9,
		0x_17, 0x_01, 0x_D5, 0x_4F, 0x_B0, 0x_24, 0x_CB, 0x_81, 0x_A1, 0x_2E, 0x_21, 0x_1D, 0x_76, 0x_4A, 0x_EB,
		0x_49, 0x_E4, 0x_79, 0x_43, 0x_8E, 0x_CF, 0x_12, 0x_6A, 0x_68, 0x_71, 0x_64, 0x_7A, 0x_C8, 0x_4D, 0x_1E,
		0x_E5, 0x_B1, 0x_11, 0x_41, 0x_3C, 0x_37, 0x_96, 0x_A3, 0x_C1, 0x_92, 0x_97, 0x_B3, 0x_FF, 0x_4B, 0x_67,
		0x_B6, 0x_8D, 0x_40, 0x_E0, 0x_89, 0x_39, 0x_48, 0x_3D, 0x_54, 0x_3E, 0x_A8, 0x_9D, 0x_5A, 0x_14, 0x_80,
		0x_D0, 0x_3F, 0x_93, 0x_FD, 0x_72, 0x_6B, 0x_1A, 0x_F9, 0x_9A, 0x_31, 0x_B4, 0x_9F, 0x_0F, 0x_56, 0x_91,
		0x_EC, 0x_78, 0x_84, 0x_86, 0x_C4, 0x_FA, 0x_DF, 0x_32, 0x_CA, 0x_0E, 0x_98, 0x_57, 0x_BD, 0x_47, 0x_99,
		0x_1B, 0x_50, 0x_A5, 0x_53, 0x_D8, 0x_8F, 0x_60, 0x_2C, 0x_B9, 0x_D7, 0x_16, 0x_FE, 0x_6C, 0x_83, 0x_18,
		0x_7F, 0x_06, 0x_F5, 0x_02, 0x_05, 0x_A6, 0x_10, 0x_A7, 0x_95, 0x_A4, 0x_DD, 0x_90, 0x_36, 0x_D2, 0x_28,
		0x_A0, 0x_94, 0x_AD, 0x_44, 0x_77, 0x_E6, 0x_F3,
	];

	helper(S, BASE, 28_287);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_834_088_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_834_088_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0A,
		0x_09, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_0B,
		0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE,
		0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE,
		0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE,
		0x_FE, 0x_A5, 0x_C4, 0x_6B, 0x_2B, 0x_66, 0x_FE, 0x_24, 0x_DF, 0x_82, 0x_80, 0x_67, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_FE, 0x_C7, 0x_E5, 0x_A9, 0x_34, 0x_F6, 0x_88, 0x_21, 0x_16, 0x_18, 0x_26, 0x_DE, 0x_AF, 0x_A5, 0x_B5,
		0x_49, 0x_80, 0x_AE, 0x_D6, 0x_EE, 0x_64, 0x_73, 0x_F2, 0x_BC, 0x_AA, 0x_60, 0x_A4, 0x_A6, 0x_23, 0x_48,
		0x_32, 0x_41, 0x_E7, 0x_53, 0x_A7, 0x_59, 0x_B2, 0x_11, 0x_83, 0x_D0, 0x_99, 0x_44, 0x_01, 0x_FB, 0x_72,
		0x_22, 0x_91, 0x_D7, 0x_D2, 0x_B6, 0x_77, 0x_6D, 0x_9E, 0x_3A, 0x_E1, 0x_45, 0x_9F, 0x_CC, 0x_DD, 0x_10,
		0x_E4, 0x_50, 0x_D4, 0x_24, 0x_5A, 0x_6E, 0x_4F, 0x_3D, 0x_31, 0x_CF, 0x_8E, 0x_84, 0x_12, 0x_5E, 0x_F9,
		0x_F3, 0x_BA, 0x_5C, 0x_2C, 0x_4D, 0x_06, 0x_E3, 0x_79, 0x_1D, 0x_7C, 0x_58, 0x_E0, 0x_FA, 0x_C6, 0x_E6,
		0x_B0, 0x_96, 0x_C9, 0x_4C, 0x_F8, 0x_74, 0x_02, 0x_1F, 0x_57, 0x_9D, 0x_4B, 0x_F4, 0x_4A, 0x_68, 0x_7F,
		0x_DC, 0x_90, 0x_55, 0x_FD, 0x_65, 0x_A8, 0x_AC, 0x_3F, 0x_BE, 0x_CE, 0x_B1, 0x_F0, 0x_76, 0x_CD, 0x_3E,
		0x_F7, 0x_13, 0x_3B, 0x_54, 0x_25, 0x_FF, 0x_97, 0x_2A, 0x_92, 0x_B3, 0x_BD, 0x_9B, 0x_29, 0x_63, 0x_52,
		0x_7E, 0x_8F, 0x_BF, 0x_C3, 0x_B7, 0x_6C, 0x_82, 0x_6F, 0x_04, 0x_E9, 0x_87, 0x_9C, 0x_1A, 0x_35, 0x_D9,
		0x_C8, 0x_CA, 0x_0E, 0x_93, 0x_7D, 0x_75, 0x_DF, 0x_78, 0x_CB, 0x_D8, 0x_B8, 0x_28, 0x_E8, 0x_8D, 0x_69,
		0x_C4, 0x_2F, 0x_F1, 0x_1B, 0x_40, 0x_62, 0x_95, 0x_9A, 0x_15, 0x_C0, 0x_37, 0x_7A, 0x_3C, 0x_AD, 0x_14,
		0x_03, 0x_0F, 0x_56, 0x_EC, 0x_46, 0x_AB, 0x_D5, 0x_A1, 0x_5D, 0x_51, 0x_DB, 0x_36, 0x_42, 0x_1C, 0x_D1,
		0x_B4, 0x_38, 0x_E2, 0x_ED, 0x_85, 0x_8A, 0x_2E, 0x_EB, 0x_07, 0x_BB, 0x_05, 0x_B9, 0x_71, 0x_33, 0x_43,
		0x_A0, 0x_5B, 0x_C2, 0x_67, 0x_C5, 0x_8C, 0x_6B, 0x_94, 0x_89, 0x_A3, 0x_8B, 0x_C1, 0x_7B, 0x_70, 0x_F5,
		0x_98, 0x_19, 0x_D3, 0x_A2, 0x_86, 0x_47, 0x_5F, 0x_DA, 0x_FC, 0x_27, 0x_61, 0x_EA, 0x_6A, 0x_08, 0x_30,
		0x_66, 0x_EF, 0x_17, 0x_1E, 0x_39, 0x_4E, 0x_81,
	];

	helper(S, BASE, 834_088);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_8_944_587_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_8_944_587_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0A,
		0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0A,
		0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_2D, 0x_2D, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_5D, 0x_8C, 0x_E1, 0x_2B, 0x_99, 0x_A1, 0x_BC, 0x_7F, 0x_DF, 0x_C6, 0x_16, 0x_E4, 0x_65,
		0x_BF, 0x_42, 0x_43, 0x_3F, 0x_03, 0x_66, 0x_9E, 0x_FC, 0x_AE, 0x_57, 0x_1F, 0x_39, 0x_97, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_1C, 0x_40, 0x_A4, 0x_D2, 0x_12, 0x_C3, 0x_89, 0x_24, 0x_CC, 0x_EB, 0x_60, 0x_82, 0x_36, 0x_29,
		0x_33, 0x_9C, 0x_34, 0x_E6, 0x_15, 0x_1E, 0x_5E, 0x_BF, 0x_F1, 0x_32, 0x_03, 0x_93, 0x_C0, 0x_35, 0x_CF,
		0x_ED, 0x_51, 0x_D9, 0x_D1, 0x_D0, 0x_A0, 0x_3F, 0x_5F, 0x_63, 0x_5B, 0x_2C, 0x_97, 0x_AC, 0x_88, 0x_86,
		0x_2E, 0x_47, 0x_7C, 0x_BA, 0x_8A, 0x_3D, 0x_84, 0x_4A, 0x_BB, 0x_A7, 0x_8E, 0x_22, 0x_6F, 0x_1B, 0x_E5,
		0x_9D, 0x_74, 0x_7F, 0x_37, 0x_31, 0x_06, 0x_FC, 0x_55, 0x_3A, 0x_6B, 0x_8D, 0x_EA, 0x_C7, 0x_68, 0x_AF,
		0x_83, 0x_14, 0x_F3, 0x_E3, 0x_F0, 0x_E0, 0x_DD, 0x_B9, 0x_49, 0x_8F, 0x_FB, 0x_67, 0x_0E, 0x_E8, 0x_5C,
		0x_53, 0x_30, 0x_C8, 0x_CD, 0x_45, 0x_72, 0x_11, 0x_66, 0x_02, 0x_2A, 0x_79, 0x_38, 0x_1F, 0x_41, 0x_10,
		0x_99, 0x_F9, 0x_7D, 0x_CA, 0x_C6, 0x_91, 0x_3B, 0x_CB, 0x_D8, 0x_AA, 0x_CE, 0x_6A, 0x_AB, 0x_DA, 0x_EC,
		0x_9A, 0x_A2, 0x_43, 0x_39, 0x_D4, 0x_EF, 0x_8B, 0x_27, 0x_6E, 0x_E9, 0x_D7, 0x_05, 0x_C5, 0x_76, 0x_BD,
		0x_DB, 0x_6D, 0x_C9, 0x_A3, 0x_3E, 0x_A5, 0x_4E, 0x_0F, 0x_44, 0x_56, 0x_B8, 0x_5D, 0x_7A, 0x_73, 0x_F2,
		0x_8C, 0x_5A, 0x_F6, 0x_52, 0x_A6, 0x_61, 0x_F5, 0x_C4, 0x_FF, 0x_1D, 0x_B2, 0x_17, 0x_4B, 0x_95, 0x_19,
		0x_64, 0x_77, 0x_70, 0x_D5, 0x_80, 0x_4F, 0x_DE, 0x_26, 0x_16, 0x_2F, 0x_E2, 0x_94, 0x_C2, 0x_A1, 0x_A8,
		0x_F7, 0x_9F, 0x_21, 0x_E4, 0x_FE, 0x_07, 0x_62, 0x_01, 0x_6C, 0x_B1, 0x_F8, 0x_87, 0x_69, 0x_B5, 0x_81,
		0x_4D, 0x_04, 0x_C1, 0x_9B, 0x_E7, 0x_48, 0x_B3, 0x_08, 0x_DC, 0x_9E, 0x_54, 0x_FA, 0x_7B, 0x_42, 0x_98,
		0x_58, 0x_A9, 0x_B0, 0x_75, 0x_F4, 0x_DF, 0x_13, 0x_92, 0x_28, 0x_B4, 0x_7E, 0x_46, 0x_65, 0x_E1, 0x_D6,
		0x_85, 0x_3C, 0x_25, 0x_1A, 0x_96, 0x_AD, 0x_57, 0x_B7, 0x_90, 0x_18, 0x_FD, 0x_B6, 0x_50, 0x_71, 0x_78,
		0x_59, 0x_23, 0x_BC, 0x_AE, 0x_BE, 0x_D3, 0x_EE,
	];

	helper(S, BASE, 8_944_587);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_61_297_999_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_61_297_999_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_A8, 0x_C0, 0x_8F, 0x_C5, 0x_2B, 0x_1C, 0x_F4, 0x_88,
		0x_C0, 0x_A7, 0x_3B, 0x_30, 0x_EB, 0x_70, 0x_EC, 0x_CA, 0x_33, 0x_15, 0x_9B, 0x_8A, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_80, 0x_3A, 0x_E4, 0x_A8, 0x_CD, 0x_AB, 0x_31, 0x_7D, 0x_C5, 0x_70, 0x_F7, 0x_AA, 0x_61, 0x_2E,
		0x_37, 0x_C0, 0x_3B, 0x_6A, 0x_47, 0x_D5, 0x_18, 0x_CB, 0x_B8, 0x_7B, 0x_DD, 0x_1D, 0x_A3, 0x_D4, 0x_C1,
		0x_44, 0x_EC, 0x_7E, 0x_1F, 0x_77, 0x_8D, 0x_D6, 0x_A1, 0x_5A, 0x_17, 0x_42, 0x_F9, 0x_3F, 0x_21, 0x_13,
		0x_C3, 0x_94, 0x_D9, 0x_AD, 0x_78, 0x_F0, 0x_23, 0x_73, 0x_9D, 0x_67, 0x_A6, 0x_FD, 0x_93, 0x_FA, 0x_2C,
		0x_33, 0x_BF, 0x_50, 0x_2F, 0x_5B, 0x_43, 0x_6C, 0x_DF, 0x_07, 0x_25, 0x_1A, 0x_75, 0x_D8, 0x_8E, 0x_69,
		0x_5D, 0x_E8, 0x_EF, 0x_32, 0x_E2, 0x_A5, 0x_06, 0x_C2, 0x_8A, 0x_1C, 0x_52, 0x_D0, 0x_66, 0x_F8, 0x_04,
		0x_30, 0x_B7, 0x_6F, 0x_3C, 0x_EB, 0x_14, 0x_63, 0x_29, 0x_02, 0x_FE, 0x_55, 0x_BB, 0x_E1, 0x_B4, 0x_A0,
		0x_A2, 0x_AE, 0x_74, 0x_26, 0x_4B, 0x_48, 0x_F3, 0x_DA, 0x_4E, 0x_3D, 0x_53, 0x_05, 0x_34, 0x_BE, 0x_5F,
		0x_E9, 0x_F6, 0x_8B, 0x_9B, 0x_FF, 0x_C8, 0x_F5, 0x_9C, 0x_F2, 0x_9A, 0x_9E, 0x_86, 0x_99, 0x_0F, 0x_62,
		0x_BD, 0x_B3, 0x_C7, 0x_4A, 0x_A7, 0x_B1, 0x_E7, 0x_BC, 0x_57, 0x_92, 0x_41, 0x_28, 0x_81, 0x_54, 0x_89,
		0x_85, 0x_D7, 0x_96, 0x_6B, 0x_1B, 0x_B0, 0x_22, 0x_B9, 0x_84, 0x_FB, 0x_82, 0x_40, 0x_1E, 0x_15, 0x_DC,
		0x_DE, 0x_A9, 0x_59, 0x_58, 0x_16, 0x_98, 0x_4D, 0x_D3, 0x_7C, 0x_EA, 0x_72, 0x_EE, 0x_97, 0x_35, 0x_CF,
		0x_71, 0x_CC, 0x_8F, 0x_D2, 0x_B2, 0x_76, 0x_ED, 0x_4C, 0x_7A, 0x_C6, 0x_FC, 0x_90, 0x_46, 0x_C9, 0x_12,
		0x_B6, 0x_9F, 0x_0E, 0x_5E, 0x_64, 0x_91, 0x_6D, 0x_51, 0x_49, 0x_36, 0x_CA, 0x_F4, 0x_95, 0x_2A, 0x_5C,
		0x_79, 0x_38, 0x_4F, 0x_E6, 0x_D1, 0x_19, 0x_3E, 0x_56, 0x_24, 0x_03, 0x_CE, 0x_F1, 0x_08, 0x_6E, 0x_AF,
		0x_8C, 0x_65, 0x_45, 0x_11, 0x_27, 0x_88, 0x_39, 0x_01, 0x_A4, 0x_AC, 0x_87, 0x_83, 0x_BA, 0x_E3, 0x_60,
		0x_DB, 0x_C4, 0x_68, 0x_E0, 0x_E5, 0x_7F, 0x_10,
	];

	helper(S, BASE, 61_297_999);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_832_719_882_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_832_719_882_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_20,
		0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0C,
		0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_CB, 0x_FD,
		0x_CF, 0x_A7, 0x_0A, 0x_73, 0x_16, 0x_EA, 0x_CE, 0x_26, 0x_FB, 0x_C1, 0x_08, 0x_44, 0x_4B, 0x_57, 0x_F7,
		0x_43, 0x_3E, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_4E, 0x_B7, 0x_39, 0x_32, 0x_69, 0x_03, 0x_96, 0x_EB, 0x_CE, 0x_36, 0x_9A, 0x_9F, 0x_1F, 0x_18,
		0x_52, 0x_BE, 0x_71, 0x_5B, 0x_A4, 0x_13, 0x_D2, 0x_99, 0x_93, 0x_56, 0x_BC, 0x_AB, 0x_D8, 0x_49, 0x_DF,
		0x_84, 0x_62, 0x_CF, 0x_72, 0x_9D, 0x_7E, 0x_2F, 0x_48, 0x_B6, 0x_E9, 0x_C4, 0x_23, 0x_8D, 0x_76, 0x_7C,
		0x_26, 0x_86, 0x_66, 0x_34, 0x_7A, 0x_AA, 0x_61, 0x_63, 0x_80, 0x_FC, 0x_CB, 0x_F6, 0x_4C, 0x_DE, 0x_1E,
		0x_73, 0x_F2, 0x_16, 0x_DA, 0x_FD, 0x_4F, 0x_05, 0x_8E, 0x_E8, 0x_35, 0x_74, 0x_E4, 0x_3C, 0x_1A, 0x_F7,
		0x_68, 0x_3F, 0x_91, 0x_D7, 0x_3D, 0x_AD, 0x_BD, 0x_4A, 0x_11, 0x_C7, 0x_F5, 0x_79, 0x_10, 0x_8A, 0x_33,
		0x_A0, 0x_E5, 0x_53, 0x_5C, 0x_31, 0x_EE, 0x_3E, 0x_A9, 0x_6D, 0x_A8, 0x_8F, 0x_70, 0x_1B, 0x_C8, 0x_F8,
		0x_0F, 0x_E2, 0x_4B, 0x_67, 0x_65, 0x_C2, 0x_85, 0x_42, 0x_C5, 0x_04, 0x_F0, 0x_ED, 0x_B8, 0x_02, 0x_D5,
		0x_D3, 0x_D4, 0x_29, 0x_E1, 0x_06, 0x_17, 0x_07, 0x_F1, 0x_6B, 0x_BF, 0x_08, 0x_9E, 0x_47, 0x_9B, 0x_A5,
		0x_9C, 0x_F3, 0x_A7, 0x_B9, 0x_51, 0x_E0, 0x_CC, 0x_95, 0x_2E, 0x_4D, 0x_E7, 0x_94, 0x_7F, 0x_12, 0x_A2,
		0x_AC, 0x_BA, 0x_6A, 0x_90, 0x_28, 0x_A3, 0x_44, 0x_C6, 0x_54, 0x_FB, 0x_89, 0x_5E, 0x_BB, 0x_D0, 0x_88,
		0x_EF, 0x_01, 0x_64, 0x_B3, 0x_82, 0x_B5, 0x_19, 0x_5D, 0x_A6, 0x_EC, 0x_7B, 0x_D9, 0x_43, 0x_DB, 0x_AF,
		0x_25, 0x_98, 0x_B4, 0x_59, 0x_1C, 0x_C1, 0x_C0, 0x_41, 0x_45, 0x_92, 0x_B1, 0x_97, 0x_FA, 0x_37, 0x_22,
		0x_DD, 0x_A1, 0x_55, 0x_CD, 0x_8B, 0x_87, 0x_CA, 0x_5A, 0x_7D, 0x_F9, 0x_83, 0x_8C, 0x_F4, 0x_2A, 0x_40,
		0x_5F, 0x_21, 0x_FF, 0x_D1, 0x_6F, 0x_78, 0x_6C, 0x_AE, 0x_3A, 0x_58, 0x_D6, 0x_E6, 0x_DC, 0x_E3, 0x_C9,
		0x_C3, 0x_14, 0x_30, 0x_3B, 0x_6E, 0x_27, 0x_57, 0x_38, 0x_EA, 0x_60, 0x_81, 0x_0E, 0x_B0, 0x_15, 0x_2C,
		0x_24, 0x_46, 0x_FE, 0x_50, 0x_77, 0x_75, 0x_B2,
	];

	helper(S, BASE, 832_719_882);
}
// endregion
