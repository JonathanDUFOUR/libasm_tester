use super::shared::helper;

// region: s_has_minus_5_in_base_2
#[test]
fn s_has_minus_5_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_99, 0x_BD, 0x_99,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_99,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_minus_15_in_base_2
#[test]
fn s_has_minus_15_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_5A, 0x_5A, 0x_5A, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_5A,
	];

	helper(S, BASE, -15);
}
// endregion
// region: s_has_minus_167_in_base_2
#[test]
fn s_has_minus_167_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_F8, 0x_CC, 0x_F8, 0x_CC, 0x_CC, 0x_F8, 0x_F8, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_F8,
	];

	helper(S, BASE, -167);
}
// endregion
// region: s_has_minus_4_501_in_base_2
#[test]
fn s_has_minus_4_501_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_04, 0x_55, 0x_55, 0x_55, 0x_04, 0x_04, 0x_55, 0x_55, 0x_04, 0x_55, 0x_04, 0x_55, 0x_04,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_04,
	];

	helper(S, BASE, -4_501);
}
// endregion
// region: s_has_minus_79_431_in_base_2
#[test]
fn s_has_minus_79_431_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_9E, 0x_6F, 0x_6F, 0x_9E, 0x_9E, 0x_6F, 0x_9E, 0x_9E, 0x_6F, 0x_6F, 0x_9E, 0x_6F, 0x_6F, 0x_6F,
		0x_9E, 0x_9E, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_9E,
	];

	helper(S, BASE, -79_431);
}
// endregion
// region: s_has_minus_967_562_in_base_2
#[test]
fn s_has_minus_967_562_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_5D, 0x_5D, 0x_5D, 0x_55, 0x_5D, 0x_5D, 0x_55, 0x_55, 0x_55, 0x_55, 0x_5D, 0x_5D, 0x_5D, 0x_55,
		0x_55, 0x_55, 0x_5D, 0x_55, 0x_5D, 0x_55,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_5D,
	];

	helper(S, BASE, -967_562);
}
// endregion
// region: s_has_minus_4_623_096_in_base_2
#[test]
fn s_has_minus_4_623_096_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_16, 0x_C3, 0x_C3, 0x_C3, 0x_16, 0x_16, 0x_C3, 0x_16, 0x_C3, 0x_C3, 0x_C3, 0x_16, 0x_C3, 0x_16,
		0x_C3, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_C3, 0x_C3, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_16,
	];

	helper(S, BASE, -4_623_096);
}
// endregion
// region: s_has_minus_71_048_580_in_base_2
#[test]
fn s_has_minus_71_048_580_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_11, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_11, 0x_11, 0x_11, 0x_11, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9,
		0x_11, 0x_11, 0x_11, 0x_F9, 0x_11, 0x_11, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_11, 0x_F9, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_11,
	];

	helper(S, BASE, -71_048_580);
}
// endregion
// region: s_has_minus_808_488_763_in_base_2
#[test]
fn s_has_minus_808_488_763_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_D7, 0x_D7, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_D7, 0x_D7, 0x_78, 0x_78, 0x_78, 0x_78,
		0x_D7, 0x_78, 0x_78, 0x_78, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_78, 0x_78, 0x_D7, 0x_D7, 0x_D7, 0x_78, 0x_D7,
		0x_D7,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_D7,
	];

	helper(S, BASE, -808_488_763);
}
// endregion
// region: s_has_minus_6_in_base_3
#[test]
fn s_has_minus_6_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_EE, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_DA, 0x_EE,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_minus_68_in_base_3
#[test]
fn s_has_minus_68_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_1D, 0x_18, 0x_18, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_18, 0x_1D,
	];

	helper(S, BASE, -68);
}
// endregion
// region: s_has_minus_859_in_base_3
#[test]
fn s_has_minus_859_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_23, 0x_19, 0x_23, 0x_23, 0x_BC, 0x_23, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_23, 0x_BC,
	];

	helper(S, BASE, -859);
}
// endregion
// region: s_has_minus_5_087_in_base_3
#[test]
fn s_has_minus_5_087_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_8A, 0x_34, 0x_8A, 0x_8A, 0x_8A, 0x_02, 0x_34, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_02, 0x_8A,
	];

	helper(S, BASE, -5_087);
}
// endregion
// region: s_has_minus_42_127_in_base_3
#[test]
fn s_has_minus_42_127_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_BB, 0x_59, 0x_24, 0x_59, 0x_BB, 0x_24, 0x_59, 0x_59, 0x_BB, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_24, 0x_BB,
	];

	helper(S, BASE, -42_127);
}
// endregion
// region: s_has_minus_532_451_in_base_3
#[test]
fn s_has_minus_532_451_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_1C, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_1C, 0x_1C, 0x_A0, 0x_1C, 0x_1C, 0x_A0, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_1C, 0x_17,
	];

	helper(S, BASE, -532_451);
}
// endregion
// region: s_has_minus_4_454_391_in_base_3
#[test]
fn s_has_minus_4_454_391_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_8A, 0x_8A, 0x_48, 0x_07, 0x_48, 0x_07, 0x_8A, 0x_8A, 0x_07, 0x_8A, 0x_48, 0x_48, 0x_48, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_48, 0x_8A,
	];

	helper(S, BASE, -4_454_391);
}
// endregion
// region: s_has_minus_21_892_991_in_base_3
#[test]
fn s_has_minus_21_892_991_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_56, 0x_56, 0x_56, 0x_0F, 0x_F3, 0x_56, 0x_0F, 0x_F3, 0x_0F, 0x_56, 0x_56, 0x_56, 0x_0F, 0x_56,
		0x_56, 0x_0F,
	];
	const BASE: &[u8] = &[
		0x_F3, 0x_56, 0x_0F,
	];

	helper(S, BASE, -21_892_991);
}
// endregion
// region: s_has_minus_731_169_605_in_base_3
#[test]
fn s_has_minus_731_169_605_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_5E, 0x_03, 0x_5E, 0x_03, 0x_03, 0x_03, 0x_5E, 0x_03, 0x_5E, 0x_5E, 0x_8D, 0x_03, 0x_5E, 0x_8D,
		0x_5E, 0x_8D, 0x_03, 0x_8D, 0x_03,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_5E, 0x_03,
	];

	helper(S, BASE, -731_169_605);
}
// endregion
// region: s_has_minus_5_in_base_5
#[test]
fn s_has_minus_5_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_89, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_67, 0x_89, 0x_8E, 0x_6B, 0x_56,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_minus_41_in_base_5
#[test]
fn s_has_minus_41_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_62, 0x_88, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_62, 0x_DF, 0x_88, 0x_55,
	];

	helper(S, BASE, -41);
}
// endregion
// region: s_has_minus_435_in_base_5
#[test]
fn s_has_minus_435_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_65, 0x_E0, 0x_E0, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_D8, 0x_E0, 0x_65, 0x_9D,
	];

	helper(S, BASE, -435);
}
// endregion
// region: s_has_minus_8_124_in_base_5
#[test]
fn s_has_minus_8_124_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_D7, 0x_D7, 0x_27, 0x_27, 0x_27, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_65, 0x_D7, 0x_43, 0x_27,
	];

	helper(S, BASE, -8_124);
}
// endregion
// region: s_has_minus_72_271_in_base_5
#[test]
fn s_has_minus_72_271_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_E5, 0x_A2, 0x_E4, 0x_A2, 0x_E4, 0x_E5, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_37, 0x_D3, 0x_A2, 0x_E5,
	];

	helper(S, BASE, -72_271);
}
// endregion
// region: s_has_minus_597_000_in_base_5
#[test]
fn s_has_minus_597_000_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_F8, 0x_01, 0x_F1, 0x_F8, 0x_72, 0x_F8, 0x_72, 0x_72, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_F8, 0x_01, 0x_F1, 0x_42,
	];

	helper(S, BASE, -597_000);
}
// endregion
// region: s_has_minus_3_607_869_in_base_5
#[test]
fn s_has_minus_3_607_869_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_CF, 0x_BD, 0x_CF, 0x_A7, 0x_BD, 0x_1D, 0x_1D, 0x_BD, 0x_72, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_CF, 0x_1D, 0x_72, 0x_BD,
	];

	helper(S, BASE, -3_607_869);
}
// endregion
// region: s_has_minus_51_491_319_in_base_5
#[test]
fn s_has_minus_51_491_319_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_4D, 0x_89, 0x_4D, 0x_4D, 0x_42, 0x_89, 0x_71, 0x_4D, 0x_89, 0x_71, 0x_36, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_4D, 0x_71, 0x_36, 0x_42,
	];

	helper(S, BASE, -51_491_319);
}
// endregion
// region: s_has_minus_853_814_401_in_base_5
#[test]
fn s_has_minus_853_814_401_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_AE, 0x_5C, 0x_5C, 0x_5C, 0x_5A, 0x_AE, 0x_A7, 0x_5A, 0x_AE, 0x_5A, 0x_D4, 0x_5A, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_D4, 0x_5C, 0x_AE, 0x_A7,
	];

	helper(S, BASE, -853_814_401);
}
// endregion
// region: s_has_minus_4_in_base_7
#[test]
fn s_has_minus_4_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_1D, 0x_4F, 0x_92, 0x_C4, 0x_15, 0x_81,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_minus_45_in_base_7
#[test]
fn s_has_minus_45_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_BF, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_AD, 0x_E8, 0x_81, 0x_B3, 0x_AB, 0x_F7, 0x_BF,
	];

	helper(S, BASE, -45);
}
// endregion
// region: s_has_minus_456_in_base_7
#[test]
fn s_has_minus_456_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_2F, 0x_47, 0x_47, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_2F, 0x_47, 0x_9E, 0x_6B, 0x_37, 0x_C7,
	];

	helper(S, BASE, -456);
}
// endregion
// region: s_has_minus_6_552_in_base_7
#[test]
fn s_has_minus_6_552_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_D9, 0x_83, 0x_C4, 0x_83, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_9E, 0x_D9, 0x_9B, 0x_7A, 0x_83, 0x_CF,
	];

	helper(S, BASE, -6_552);
}
// endregion
// region: s_has_minus_32_931_in_base_7
#[test]
fn s_has_minus_32_931_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_9D, 0x_6A, 0x_EF, 0x_5B, 0x_5B, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_9D, 0x_A4, 0x_66, 0x_34, 0x_EF, 0x_6A,
	];

	helper(S, BASE, -32_931);
}
// endregion
// region: s_has_minus_969_141_in_base_7
#[test]
fn s_has_minus_969_141_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_1F, 0x_1F, 0x_1F, 0x_8B, 0x_8B, 0x_69, 0x_A3, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_1F, 0x_A3, 0x_69, 0x_8B, 0x_98, 0x_AF,
	];

	helper(S, BASE, -969_141);
}
// endregion
// region: s_has_minus_2_075_079_in_base_7
#[test]
fn s_has_minus_2_075_079_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_B6, 0x_46, 0x_83, 0x_46, 0x_52, 0x_80, 0x_46, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_52, 0x_B6, 0x_46, 0x_83, 0x_80, 0x_74,
	];

	helper(S, BASE, -2_075_079);
}
// endregion
// region: s_has_minus_48_016_652_in_base_7
#[test]
fn s_has_minus_48_016_652_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_C4, 0x_C4, 0x_5A, 0x_5A, 0x_B2, 0x_E6, 0x_31, 0x_C4, 0x_31, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_B2, 0x_C4, 0x_5A, 0x_93, 0x_31, 0x_C8, 0x_E6,
	];

	helper(S, BASE, -48_016_652);
}
// endregion
// region: s_has_minus_449_097_430_in_base_7
#[test]
fn s_has_minus_449_097_430_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_C0, 0x_43, 0x_49, 0x_41, 0x_A2, 0x_C0, 0x_8A, 0x_41, 0x_41, 0x_43, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_C0, 0x_A2, 0x_96, 0x_43, 0x_8A, 0x_41,
	];

	helper(S, BASE, -449_097_430);
}
// endregion
// region: s_has_minus_5_in_base_11
#[test]
fn s_has_minus_5_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_FC, 0x_12, 0x_38, 0x_35, 0x_FD, 0x_75, 0x_26, 0x_C0, 0x_EB, 0x_05,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_minus_59_in_base_11
#[test]
fn s_has_minus_59_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_10, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_71, 0x_E2, 0x_32, 0x_27, 0x_10, 0x_FD, 0x_E7, 0x_50, 0x_EB, 0x_66,
	];

	helper(S, BASE, -59);
}
// endregion
// region: s_has_minus_615_in_base_11
#[test]
fn s_has_minus_615_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_9C, 0x_77, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_73, 0x_6D, 0x_FD, 0x_05, 0x_9C, 0x_0F, 0x_D2, 0x_67, 0x_55, 0x_EE,
	];

	helper(S, BASE, -615);
}
// endregion
// region: s_has_minus_9_129_in_base_11
#[test]
fn s_has_minus_9_129_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_19, 0x_1C, 0x_61, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_2A, 0x_7B, 0x_C5, 0x_61, 0x_74, 0x_19, 0x_D4, 0x_66, 0x_1C, 0x_EB,
	];

	helper(S, BASE, -9_129);
}
// endregion
// region: s_has_minus_13_048_in_base_11
#[test]
fn s_has_minus_13_048_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_4C, 0x_31, 0x_4C, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_11, 0x_E8, 0x_A3, 0x_A8, 0x_10, 0x_59, 0x_01, 0x_31, 0x_4C, 0x_BA,
	];

	helper(S, BASE, -13_048);
}
// endregion
// region: s_has_minus_971_162_in_base_11
#[test]
fn s_has_minus_971_162_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_68, 0x_DF, 0x_E5, 0x_AA, 0x_45, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_45, 0x_59, 0x_E5, 0x_5D, 0x_8E, 0x_68, 0x_AA, 0x_6F, 0x_8D, 0x_C3,
	];

	helper(S, BASE, -971_162);
}
// endregion
// region: s_has_minus_5_685_952_in_base_11
#[test]
fn s_has_minus_5_685_952_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_29, 0x_C8, 0x_29, 0x_29, 0x_B2, 0x_29, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_36, 0x_C8, 0x_29, 0x_3C, 0x_AD, 0x_33, 0x_06, 0x_FC, 0x_A3, 0x_B2,
	];

	helper(S, BASE, -5_685_952);
}
// endregion
// region: s_has_minus_72_430_853_in_base_11
#[test]
fn s_has_minus_72_430_853_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_1A, 0x_E3, 0x_D4, 0x_85, 0x_F5, 0x_34, 0x_F5, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_F5, 0x_84, 0x_1A, 0x_34, 0x_57, 0x_4B, 0x_E3, 0x_85, 0x_D4, 0x_54,
	];

	helper(S, BASE, -72_430_853);
}
// endregion
// region: s_has_minus_405_538_223_in_base_11
#[test]
fn s_has_minus_405_538_223_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_04, 0x_98, 0x_AA, 0x_56, 0x_9C, 0x_AA, 0x_98, 0x_6F, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_04, 0x_DD, 0x_BD, 0x_6A, 0x_A2, 0x_6F, 0x_40, 0x_AA, 0x_98, 0x_56,
	];

	helper(S, BASE, -405_538_223);
}
// endregion
// region: s_has_minus_1_in_base_13
#[test]
fn s_has_minus_1_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_33, 0x_B1, 0x_41, 0x_E3, 0x_1F, 0x_30, 0x_84, 0x_F1, 0x_D0, 0x_53, 0x_66, 0x_69,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_minus_60_in_base_13
#[test]
fn s_has_minus_60_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_A1, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_72, 0x_C2, 0x_7C, 0x_A1, 0x_B8, 0x_BD, 0x_8C, 0x_E8, 0x_E3, 0x_D5, 0x_95, 0x_BA,
	];

	helper(S, BASE, -60);
}
// endregion
// region: s_has_minus_334_in_base_13
#[test]
fn s_has_minus_334_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_E4, 0x_87, 0x_03,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_E4, 0x_85, 0x_CB, 0x_78, 0x_16, 0x_55, 0x_36, 0x_12, 0x_03, 0x_AC, 0x_68, 0x_87,
	];

	helper(S, BASE, -334);
}
// endregion
// region: s_has_minus_1_382_in_base_13
#[test]
fn s_has_minus_1_382_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_6A, 0x_51, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_9E, 0x_51, 0x_39, 0x_2E, 0x_4E, 0x_35, 0x_07, 0x_6A, 0x_05, 0x_A5, 0x_BB, 0x_62,
	];

	helper(S, BASE, -1_382);
}
// endregion
// region: s_has_minus_27_711_in_base_13
#[test]
fn s_has_minus_27_711_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_71, 0x_9A, 0x_71, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_BF, 0x_7A, 0x_8D, 0x_74, 0x_D7, 0x_29, 0x_9A, 0x_87, 0x_80, 0x_2C, 0x_95, 0x_71,
	];

	helper(S, BASE, -27_711);
}
// endregion
// region: s_has_minus_102_005_in_base_13
#[test]
fn s_has_minus_102_005_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_62, 0x_DF, 0x_6C, 0x_DF, 0x_DF,
	];
	const BASE: &[u8] = &[
		0x_D5, 0x_1D, 0x_19, 0x_62, 0x_80, 0x_6C, 0x_96, 0x_DF, 0x_B1, 0x_C6, 0x_5C, 0x_0E, 0x_31,
	];

	helper(S, BASE, -102_005);
}
// endregion
// region: s_has_minus_6_030_622_in_base_13
#[test]
fn s_has_minus_6_030_622_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_16, 0x_55, 0x_55, 0x_16, 0x_BB, 0x_D4, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_16, 0x_D4, 0x_55, 0x_E5, 0x_0E, 0x_8F, 0x_90, 0x_B0, 0x_8C, 0x_7B, 0x_5E, 0x_BB,
	];

	helper(S, BASE, -6_030_622);
}
// endregion
// region: s_has_minus_62_755_990_in_base_13
#[test]
fn s_has_minus_62_755_990_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_B1, 0x_AF, 0x_AF, 0x_AF, 0x_BF, 0x_F8, 0x_37, 0x_85,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_B1, 0x_37, 0x_BF, 0x_75, 0x_F8, 0x_4C, 0x_67, 0x_A5, 0x_95, 0x_18, 0x_85, 0x_84,
	];

	helper(S, BASE, -62_755_990);
}
// endregion
// region: s_has_minus_586_366_592_in_base_13
#[test]
fn s_has_minus_586_366_592_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_9F, 0x_B9, 0x_77, 0x_01, 0x_B9, 0x_DF, 0x_64, 0x_77,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_52, 0x_DF, 0x_01, 0x_B9, 0x_82, 0x_77, 0x_B0, 0x_F7, 0x_9F, 0x_64, 0x_56, 0x_D2,
	];

	helper(S, BASE, -586_366_592);
}
// endregion
// region: s_has_minus_5_in_base_19
#[test]
fn s_has_minus_5_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_66, 0x_04, 0x_9A, 0x_82, 0x_68, 0x_01, 0x_8C, 0x_77, 0x_A2, 0x_3C, 0x_99, 0x_79, 0x_4D, 0x_B4,
		0x_C5, 0x_A9, 0x_3D, 0x_44,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_minus_56_in_base_19
#[test]
fn s_has_minus_56_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_D4, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_1D, 0x_D4, 0x_0E, 0x_48, 0x_5A, 0x_ED, 0x_B4, 0x_B1, 0x_F7, 0x_58, 0x_02, 0x_E5, 0x_C0, 0x_40,
		0x_83, 0x_E2, 0x_75, 0x_72,
	];

	helper(S, BASE, -56);
}
// endregion
// region: s_has_minus_920_in_base_19
#[test]
fn s_has_minus_920_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_F9, 0x_C9, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_06, 0x_F9, 0x_4B, 0x_E3, 0x_6D, 0x_64, 0x_A9, 0x_62, 0x_4F, 0x_C9, 0x_3D, 0x_BF, 0x_87, 0x_E1,
		0x_D5, 0x_E9, 0x_36, 0x_E7,
	];

	helper(S, BASE, -920);
}
// endregion
// region: s_has_minus_7_370_in_base_19
#[test]
fn s_has_minus_7_370_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_B2, 0x_B2, 0x_4A, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_B2, 0x_C1, 0x_CB, 0x_31, 0x_EB, 0x_B7, 0x_4A, 0x_62, 0x_6F, 0x_F2, 0x_83, 0x_32, 0x_04, 0x_D6,
		0x_39, 0x_55, 0x_5C, 0x_01,
	];

	helper(S, BASE, -7_370);
}
// endregion
// region: s_has_minus_85_000_in_base_19
#[test]
fn s_has_minus_85_000_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_F1, 0x_BA, 0x_79, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_C5, 0x_63, 0x_B2, 0x_B3, 0x_DC, 0x_53, 0x_BA, 0x_79, 0x_30, 0x_36, 0x_8C, 0x_F1, 0x_AF, 0x_75,
		0x_19, 0x_D4, 0x_2F, 0x_FE,
	];

	helper(S, BASE, -85_000);
}
// endregion
// region: s_has_minus_657_536_in_base_19
#[test]
fn s_has_minus_657_536_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_F5, 0x_5B, 0x_3B, 0x_9F, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_07, 0x_5E, 0x_4B, 0x_E8, 0x_F5, 0x_99, 0x_EA, 0x_9F, 0x_8C, 0x_5C, 0x_B4, 0x_16, 0x_CD, 0x_17,
		0x_B1, 0x_3B, 0x_9D, 0x_1E,
	];

	helper(S, BASE, -657_536);
}
// endregion
// region: s_has_minus_1_061_545_in_base_19
#[test]
fn s_has_minus_1_061_545_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_A7, 0x_26, 0x_88, 0x_D7, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_ED, 0x_26, 0x_51, 0x_4F, 0x_5D, 0x_6B, 0x_D3, 0x_A7, 0x_05, 0x_D7, 0x_76, 0x_AE, 0x_3F, 0x_88,
		0x_FE, 0x_82, 0x_31, 0x_E6,
	];

	helper(S, BASE, -1_061_545);
}
// endregion
// region: s_has_minus_33_853_919_in_base_19
#[test]
fn s_has_minus_33_853_919_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_CA, 0x_9C, 0x_49, 0x_CA, 0x_DD, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_3E, 0x_33, 0x_DD, 0x_1B, 0x_D3, 0x_B5, 0x_77, 0x_22, 0x_08, 0x_7C, 0x_1E, 0x_9C, 0x_CA, 0x_49,
		0x_F0, 0x_7B, 0x_C5, 0x_04,
	];

	helper(S, BASE, -33_853_919);
}
// endregion
// region: s_has_minus_420_124_651_in_base_19
#[test]
fn s_has_minus_420_124_651_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_C8, 0x_F5, 0x_A7, 0x_4B, 0x_A8, 0x_3F, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_7B, 0x_67, 0x_3F, 0x_CD, 0x_1A, 0x_12, 0x_75, 0x_C8, 0x_87, 0x_B9, 0x_A8, 0x_A7, 0x_9D, 0x_4B,
		0x_C7, 0x_74, 0x_F5, 0x_CC,
	];

	helper(S, BASE, -420_124_651);
}
// endregion
// region: s_has_minus_7_in_base_42
#[test]
fn s_has_minus_7_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_D8,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_30, 0x_16, 0x_EA, 0x_99, 0x_59, 0x_7E, 0x_D8, 0x_FB, 0x_ED, 0x_F7, 0x_57, 0x_4A, 0x_C8, 0x_F5,
		0x_B9, 0x_A7, 0x_6D, 0x_DA, 0x_7F, 0x_82, 0x_62, 0x_07, 0x_2A, 0x_14, 0x_3C, 0x_17, 0x_93, 0x_71, 0x_C1,
		0x_24, 0x_79, 0x_21, 0x_9B, 0x_A5, 0x_2E, 0x_0F, 0x_E1, 0x_8F, 0x_33, 0x_29, 0x_F3,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_minus_30_in_base_42
#[test]
fn s_has_minus_30_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_77, 0x_D6, 0x_43, 0x_B2, 0x_F7, 0x_15, 0x_B1, 0x_C3, 0x_B9, 0x_F6, 0x_04, 0x_C5, 0x_13, 0x_3C,
		0x_76, 0x_AF, 0x_66, 0x_82, 0x_19, 0x_34, 0x_A6, 0x_A8, 0x_11, 0x_CB, 0x_35, 0x_2E, 0x_6A, 0x_22, 0x_5A,
		0x_1D, 0x_CE, 0x_C1, 0x_A3, 0x_E2, 0x_FB, 0x_BB, 0x_8B, 0x_57, 0x_DB, 0x_94, 0x_D4,
	];

	helper(S, BASE, -30);
}
// endregion
// region: s_has_minus_405_in_base_42
#[test]
fn s_has_minus_405_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_0E, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_79, 0x_88, 0x_38, 0x_86, 0x_F6, 0x_F7, 0x_66, 0x_CB, 0x_53, 0x_0E, 0x_2A, 0x_9D, 0x_CA, 0x_9B, 0x_E2,
		0x_E0, 0x_FA, 0x_E6, 0x_B6, 0x_62, 0x_A2, 0x_83, 0x_EA, 0x_70, 0x_C8, 0x_F3, 0x_AC, 0x_B0, 0x_67, 0x_25,
		0x_C3, 0x_6F, 0x_85, 0x_5A, 0x_B4, 0x_96, 0x_A9, 0x_EE, 0x_C5, 0x_6B, 0x_AF, 0x_18,
	];

	helper(S, BASE, -405);
}
// endregion
// region: s_has_minus_9_154_in_base_42
#[test]
fn s_has_minus_9_154_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_3C, 0x_51, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_ED, 0x_F2, 0x_AD, 0x_48, 0x_EC, 0x_3C, 0x_44, 0x_51, 0x_19, 0x_8B, 0x_A7, 0x_01, 0x_9E, 0x_DF, 0x_6E,
		0x_4F, 0x_2F, 0x_5B, 0x_14, 0x_3A, 0x_16, 0x_82, 0x_85, 0x_CC, 0x_92, 0x_54, 0x_CE, 0x_95, 0x_99, 0x_10,
		0x_BB, 0x_AE, 0x_8A, 0x_29, 0x_6A, 0x_9B, 0x_C2, 0x_53, 0x_C7, 0x_62, 0x_9C, 0x_74,
	];

	helper(S, BASE, -9_154);
}
// endregion
// region: s_has_minus_22_982_in_base_42
#[test]
fn s_has_minus_22_982_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_ED, 0x_F1, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_F1, 0x_CC, 0x_DC, 0x_70, 0x_E8, 0x_32, 0x_98, 0x_9C, 0x_74, 0x_99, 0x_1C, 0x_72, 0x_ED, 0x_BB,
		0x_B6, 0x_96, 0x_D0, 0x_9B, 0x_48, 0x_D9, 0x_1F, 0x_AB, 0x_06, 0x_BA, 0x_6B, 0x_92, 0x_41, 0x_2A, 0x_56,
		0x_3C, 0x_F7, 0x_8A, 0x_B4, 0x_42, 0x_15, 0x_A9, 0x_A5, 0x_36, 0x_BE, 0x_9F, 0x_64,
	];

	helper(S, BASE, -22_982);
}
// endregion
// region: s_has_minus_874_415_in_base_42
#[test]
fn s_has_minus_874_415_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_C0, 0x_39, 0x_A7, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_D8, 0x_BB, 0x_83, 0x_D2, 0x_56, 0x_CC, 0x_7E, 0x_54, 0x_E3, 0x_7A, 0x_C0, 0x_90, 0x_DE, 0x_F1,
		0x_28, 0x_B9, 0x_33, 0x_B5, 0x_F0, 0x_08, 0x_27, 0x_F5, 0x_C2, 0x_A3, 0x_61, 0x_19, 0x_9D, 0x_F7, 0x_A7,
		0x_F9, 0x_24, 0x_8F, 0x_39, 0x_95, 0x_52, 0x_A9, 0x_D3, 0x_4A, 0x_D7, 0x_AE, 0x_1B,
	];

	helper(S, BASE, -874_415);
}
// endregion
// region: s_has_minus_7_395_391_in_base_42
#[test]
fn s_has_minus_7_395_391_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_86, 0x_72, 0x_D9, 0x_CA, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_C1, 0x_86, 0x_A9, 0x_63, 0x_8D, 0x_F2, 0x_DE, 0x_F8, 0x_A1, 0x_6A, 0x_AE, 0x_EA, 0x_D2, 0x_48,
		0x_72, 0x_CA, 0x_F5, 0x_53, 0x_1F, 0x_3C, 0x_FE, 0x_B1, 0x_3D, 0x_D1, 0x_38, 0x_B2, 0x_76, 0x_7E, 0x_74,
		0x_6D, 0x_9A, 0x_30, 0x_D8, 0x_D9, 0x_02, 0x_97, 0x_10, 0x_E7, 0x_22, 0x_C2, 0x_AD,
	];

	helper(S, BASE, -7_395_391);
}
// endregion
// region: s_has_minus_78_895_085_in_base_42
#[test]
fn s_has_minus_78_895_085_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_05, 0x_A9, 0x_03, 0x_17, 0x_C7,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_08, 0x_F0, 0x_76, 0x_17, 0x_4C, 0x_64, 0x_25, 0x_13, 0x_83, 0x_5A, 0x_73, 0x_A5, 0x_F3, 0x_A9,
		0x_D3, 0x_F2, 0x_C7, 0x_70, 0x_51, 0x_43, 0x_65, 0x_68, 0x_A8, 0x_2E, 0x_05, 0x_85, 0x_A2, 0x_DF, 0x_32,
		0x_88, 0x_75, 0x_99, 0x_53, 0x_4E, 0x_C3, 0x_EF, 0x_03, 0x_50, 0x_45, 0x_D6, 0x_60,
	];

	helper(S, BASE, -78_895_085);
}
// endregion
// region: s_has_minus_362_520_876_in_base_42
#[test]
fn s_has_minus_362_520_876_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_36, 0x_90, 0x_FF, 0x_38, 0x_74, 0x_61,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_5B, 0x_36, 0x_80, 0x_38, 0x_59, 0x_25, 0x_AC, 0x_95, 0x_E7, 0x_49, 0x_7D, 0x_56, 0x_B5, 0x_B2,
		0x_B4, 0x_0F, 0x_DA, 0x_61, 0x_64, 0x_EE, 0x_FF, 0x_A7, 0x_D4, 0x_F0, 0x_D8, 0x_EA, 0x_DF, 0x_C1, 0x_74,
		0x_5A, 0x_6F, 0x_90, 0x_A6, 0x_6E, 0x_CB, 0x_2C, 0x_60, 0x_66, 0x_D5, 0x_B9, 0x_9D,
	];

	helper(S, BASE, -362_520_876);
}
// endregion
// region: s_has_minus_7_in_base_73
#[test]
fn s_has_minus_7_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_F9, 0x_F0, 0x_88, 0x_63, 0x_48, 0x_6C, 0x_D1, 0x_A4, 0x_60, 0x_A5, 0x_7D, 0x_44, 0x_75, 0x_E1,
		0x_18, 0x_1B, 0x_5C, 0x_68, 0x_2A, 0x_FB, 0x_9C, 0x_34, 0x_55, 0x_D9, 0x_1E, 0x_1F, 0x_AF, 0x_3F, 0x_C0,
		0x_C5, 0x_E6, 0x_8A, 0x_BA, 0x_52, 0x_EF, 0x_CC, 0x_07, 0x_0F, 0x_37, 0x_EE, 0x_F1, 0x_77, 0x_49, 0x_6E,
		0x_32, 0x_93, 0x_DA, 0x_3A, 0x_79, 0x_6A, 0x_C9, 0x_DB, 0x_65, 0x_62, 0x_5F, 0x_29, 0x_9F, 0x_D6, 0x_AE,
		0x_2F, 0x_89, 0x_E7, 0x_57, 0x_E0, 0x_54, 0x_AB, 0x_81, 0x_5B, 0x_D2, 0x_9E, 0x_45, 0x_7E,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_minus_71_in_base_73
#[test]
fn s_has_minus_71_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_FA,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_46, 0x_83, 0x_C9, 0x_60, 0x_B3, 0x_22, 0x_F6, 0x_E2, 0x_5F, 0x_CB, 0x_1E, 0x_7D, 0x_8E, 0x_D3,
		0x_50, 0x_7F, 0x_AF, 0x_EE, 0x_4D, 0x_68, 0x_B2, 0x_88, 0x_95, 0x_42, 0x_05, 0x_7E, 0x_75, 0x_56, 0x_A3,
		0x_21, 0x_9D, 0x_63, 0x_11, 0x_8C, 0x_40, 0x_B5, 0x_92, 0x_66, 0x_A6, 0x_9E, 0x_D2, 0x_86, 0x_73, 0x_8B,
		0x_4B, 0x_18, 0x_B7, 0x_FD, 0x_26, 0x_6D, 0x_C2, 0x_E5, 0x_CD, 0x_AE, 0x_B4, 0x_E9, 0x_E8, 0x_DA, 0x_A7,
		0x_34, 0x_07, 0x_5D, 0x_F9, 0x_6E, 0x_A4, 0x_24, 0x_31, 0x_55, 0x_76, 0x_79, 0x_FA, 0x_4E,
	];

	helper(S, BASE, -71);
}
// endregion
// region: s_has_minus_866_in_base_73
#[test]
fn s_has_minus_866_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_F5, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_CD, 0x_84, 0x_BB, 0x_C9, 0x_31, 0x_A5, 0x_50, 0x_98, 0x_E1, 0x_C2, 0x_F5, 0x_32, 0x_27, 0x_7F,
		0x_36, 0x_75, 0x_6E, 0x_A7, 0x_2C, 0x_E5, 0x_44, 0x_4F, 0x_03, 0x_82, 0x_35, 0x_52, 0x_77, 0x_66, 0x_B1,
		0x_58, 0x_72, 0x_65, 0x_3B, 0x_1C, 0x_43, 0x_17, 0x_DA, 0x_4A, 0x_6D, 0x_A1, 0x_B2, 0x_3C, 0x_74, 0x_AF,
		0x_22, 0x_1B, 0x_4E, 0x_C1, 0x_2E, 0x_A3, 0x_2A, 0x_91, 0x_10, 0x_D5, 0x_F8, 0x_CB, 0x_19, 0x_C3, 0x_7A,
		0x_46, 0x_AD, 0x_FF, 0x_38, 0x_69, 0x_E6, 0x_61, 0x_EF, 0x_B4, 0x_ED, 0x_8E, 0x_87, 0x_8D,
	];

	helper(S, BASE, -866);
}
// endregion
// region: s_has_minus_3_963_in_base_73
#[test]
fn s_has_minus_3_963_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_7A, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_B6, 0x_32, 0x_B8, 0x_3F, 0x_BF, 0x_07, 0x_54, 0x_3B, 0x_5E, 0x_2F, 0x_6C, 0x_2A, 0x_B4, 0x_BE,
		0x_A3, 0x_A7, 0x_AD, 0x_F6, 0x_1E, 0x_D1, 0x_35, 0x_9F, 0x_7C, 0x_29, 0x_6B, 0x_8F, 0x_87, 0x_14, 0x_8E,
		0x_62, 0x_B0, 0x_B1, 0x_6E, 0x_73, 0x_CE, 0x_E7, 0x_21, 0x_24, 0x_C3, 0x_15, 0x_53, 0x_99, 0x_5F, 0x_16,
		0x_92, 0x_7F, 0x_BB, 0x_F4, 0x_4D, 0x_D6, 0x_06, 0x_80, 0x_FF, 0x_7A, 0x_04, 0x_BD, 0x_A8, 0x_DF, 0x_52,
		0x_82, 0x_47, 0x_D5, 0x_A5, 0x_1F, 0x_EA, 0x_C1, 0x_05, 0x_A0, 0x_A4, 0x_1D, 0x_AA, 0x_56,
	];

	helper(S, BASE, -3_963);
}
// endregion
// region: s_has_minus_69_197_in_base_73
#[test]
fn s_has_minus_69_197_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_64, 0x_33, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_C9, 0x_D3, 0x_DF, 0x_35, 0x_13, 0x_B8, 0x_E2, 0x_2C, 0x_CD, 0x_78, 0x_7C, 0x_64, 0x_99, 0x_4F,
		0x_D5, 0x_A0, 0x_30, 0x_52, 0x_4C, 0x_47, 0x_E0, 0x_8B, 0x_F3, 0x_63, 0x_B6, 0x_AA, 0x_DC, 0x_38, 0x_FD,
		0x_EA, 0x_1D, 0x_45, 0x_DB, 0x_41, 0x_53, 0x_8D, 0x_80, 0x_94, 0x_3A, 0x_54, 0x_77, 0x_86, 0x_04, 0x_5E,
		0x_1F, 0x_39, 0x_BA, 0x_F4, 0x_C8, 0x_84, 0x_2E, 0x_DA, 0x_B1, 0x_2A, 0x_5A, 0x_AE, 0x_6D, 0x_73, 0x_62,
		0x_E4, 0x_11, 0x_1E, 0x_23, 0x_5F, 0x_72, 0x_01, 0x_A1, 0x_1C, 0x_6B, 0x_69, 0x_33, 0x_D0,
	];

	helper(S, BASE, -69_197);
}
// endregion
// region: s_has_minus_949_991_in_base_73
#[test]
fn s_has_minus_949_991_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_29, 0x_A2, 0x_D7, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_42, 0x_29, 0x_15, 0x_E8, 0x_DD, 0x_DC, 0x_EF, 0x_17, 0x_3E, 0x_1A, 0x_DF, 0x_77, 0x_7B, 0x_06,
		0x_5F, 0x_F6, 0x_C1, 0x_BF, 0x_D7, 0x_4B, 0x_95, 0x_13, 0x_36, 0x_7D, 0x_82, 0x_52, 0x_A8, 0x_FE, 0x_3C,
		0x_E2, 0x_19, 0x_A2, 0x_84, 0x_54, 0x_33, 0x_51, 0x_CB, 0x_25, 0x_94, 0x_1B, 0x_71, 0x_05, 0x_7E, 0x_F4,
		0x_DA, 0x_10, 0x_9F, 0x_9B, 0x_F8, 0x_D0, 0x_90, 0x_35, 0x_AE, 0x_0E, 0x_46, 0x_3D, 0x_92, 0x_45, 0x_F5,
		0x_EA, 0x_E1, 0x_5B, 0x_61, 0x_AC, 0x_21, 0x_41, 0x_6E, 0x_80, 0x_27, 0x_F9, 0x_CD, 0x_CA,
	];

	helper(S, BASE, -949_991);
}
// endregion
// region: s_has_minus_1_533_819_in_base_73
#[test]
fn s_has_minus_1_533_819_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_9C, 0x_0E, 0x_A4, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_04, 0x_29, 0x_9C, 0x_CB, 0x_2A, 0x_15, 0x_BC, 0x_1C, 0x_73, 0x_60, 0x_E9, 0x_59, 0x_5A, 0x_FE,
		0x_8F, 0x_E1, 0x_F6, 0x_CD, 0x_B5, 0x_F5, 0x_BF, 0x_BA, 0x_A5, 0x_E4, 0x_45, 0x_FB, 0x_86, 0x_FD, 0x_1E,
		0x_63, 0x_6F, 0x_64, 0x_AC, 0x_75, 0x_D5, 0x_5E, 0x_E7, 0x_30, 0x_5B, 0x_6C, 0x_8D, 0x_52, 0x_EA, 0x_97,
		0x_91, 0x_37, 0x_C2, 0x_90, 0x_5D, 0x_F7, 0x_7F, 0x_4C, 0x_ED, 0x_C4, 0x_EB, 0x_E8, 0x_2E, 0x_E0, 0x_DB,
		0x_A4, 0x_F0, 0x_69, 0x_22, 0x_8C, 0x_26, 0x_A1, 0x_1D, 0x_0E, 0x_8A, 0x_D4, 0x_A9, 0x_7A,
	];

	helper(S, BASE, -1_533_819);
}
// endregion
// region: s_has_minus_84_563_931_in_base_73
#[test]
fn s_has_minus_84_563_931_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_60, 0x_69, 0x_E4, 0x_D9, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_17, 0x_60, 0x_26, 0x_C2, 0x_62, 0x_78, 0x_B3, 0x_05, 0x_F3, 0x_8E, 0x_66, 0x_3A, 0x_23, 0x_99,
		0x_72, 0x_28, 0x_34, 0x_F8, 0x_BC, 0x_47, 0x_C8, 0x_C4, 0x_9B, 0x_E7, 0x_12, 0x_DC, 0x_E4, 0x_75, 0x_A9,
		0x_A8, 0x_02, 0x_18, 0x_D2, 0x_D7, 0x_EC, 0x_AF, 0x_9E, 0x_94, 0x_0E, 0x_76, 0x_81, 0x_31, 0x_93, 0x_30,
		0x_6A, 0x_D9, 0x_8C, 0x_D0, 0x_BA, 0x_15, 0x_32, 0x_87, 0x_2A, 0x_24, 0x_E2, 0x_65, 0x_B0, 0x_46, 0x_E3,
		0x_CE, 0x_B4, 0x_BE, 0x_F2, 0x_F0, 0x_5E, 0x_CD, 0x_2F, 0x_CA, 0x_58, 0x_06, 0x_69, 0x_FC,
	];

	helper(S, BASE, -84_563_931);
}
// endregion
// region: s_has_minus_648_727_008_in_base_73
#[test]
fn s_has_minus_648_727_008_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_9A, 0x_6C, 0x_30, 0x_62, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_A2, 0x_E9, 0x_5A, 0x_A6, 0x_DC, 0x_95, 0x_5D, 0x_48, 0x_18, 0x_54, 0x_75, 0x_E4, 0x_5B, 0x_B8,
		0x_2F, 0x_62, 0x_C1, 0x_2C, 0x_40, 0x_FD, 0x_4A, 0x_9A, 0x_E0, 0x_39, 0x_74, 0x_64, 0x_28, 0x_63, 0x_81,
		0x_CC, 0x_96, 0x_3B, 0x_F1, 0x_8E, 0x_BC, 0x_B9, 0x_E3, 0x_B3, 0x_CE, 0x_7F, 0x_58, 0x_A8, 0x_23, 0x_30,
		0x_59, 0x_F6, 0x_3A, 0x_91, 0x_79, 0x_15, 0x_5C, 0x_56, 0x_21, 0x_F7, 0x_8B, 0x_C5, 0x_D9, 0x_43, 0x_DF,
		0x_D0, 0x_6C, 0x_D8, 0x_F2, 0x_FC, 0x_10, 0x_29, 0x_78, 0x_2A, 0x_F8, 0x_6B, 0x_33, 0x_4D,
	];

	helper(S, BASE, -648_727_008);
}
// endregion
// region: s_has_minus_9_in_base_113
#[test]
fn s_has_minus_9_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_54, 0x_1F, 0x_18, 0x_E7, 0x_E9, 0x_3A, 0x_93, 0x_3E, 0x_A4, 0x_F3, 0x_8F, 0x_2A, 0x_32, 0x_2C,
		0x_A3, 0x_36, 0x_8A, 0x_E4, 0x_A8, 0x_A0, 0x_F9, 0x_A9, 0x_BD, 0x_56, 0x_D8, 0x_59, 0x_8B, 0x_04, 0x_58,
		0x_EF, 0x_DB, 0x_86, 0x_78, 0x_1B, 0x_95, 0x_5B, 0x_21, 0x_D3, 0x_63, 0x_16, 0x_3D, 0x_B9, 0x_9B, 0x_5E,
		0x_60, 0x_4B, 0x_E3, 0x_D4, 0x_13, 0x_C7, 0x_AE, 0x_27, 0x_4A, 0x_71, 0x_94, 0x_6A, 0x_B6, 0x_77, 0x_BA,
		0x_39, 0x_52, 0x_6B, 0x_CF, 0x_17, 0x_DD, 0x_B4, 0x_91, 0x_83, 0x_69, 0x_9F, 0x_DC, 0x_4D, 0x_F1, 0x_89,
		0x_68, 0x_2F, 0x_B7, 0x_F4, 0x_33, 0x_19, 0x_74, 0x_7D, 0x_4E, 0x_34, 0x_3F, 0x_A7, 0x_49, 0x_A5, 0x_88,
		0x_70, 0x_D5, 0x_CD, 0x_51, 0x_23, 0x_7E, 0x_14, 0x_7B, 0x_10, 0x_31, 0x_61, 0x_F5, 0x_CB, 0x_62, 0x_08,
		0x_CE, 0x_FA, 0x_05, 0x_4F, 0x_A1, 0x_5D, 0x_24, 0x_9C,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_minus_76_in_base_113
#[test]
fn s_has_minus_76_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_CC, 0x_9A, 0x_F7, 0x_10, 0x_94, 0x_BD, 0x_4B, 0x_84, 0x_62, 0x_59, 0x_F4, 0x_F1, 0x_B7, 0x_46,
		0x_06, 0x_9C, 0x_26, 0x_5B, 0x_8D, 0x_1F, 0x_4C, 0x_42, 0x_3C, 0x_2F, 0x_8B, 0x_DD, 0x_24, 0x_95, 0x_75,
		0x_81, 0x_04, 0x_B5, 0x_32, 0x_6C, 0x_C9, 0x_60, 0x_E5, 0x_A9, 0x_FB, 0x_29, 0x_65, 0x_A3, 0x_83, 0x_D7,
		0x_E8, 0x_79, 0x_44, 0x_14, 0x_A2, 0x_F3, 0x_80, 0x_33, 0x_D0, 0x_FA, 0x_86, 0x_76, 0x_F6, 0x_AE, 0x_69,
		0x_31, 0x_CD, 0x_AB, 0x_23, 0x_D4, 0x_BF, 0x_F5, 0x_37, 0x_E0, 0x_B8, 0x_90, 0x_AF, 0x_51, 0x_DC, 0x_08,
		0x_A4, 0x_91, 0x_3D, 0x_61, 0x_17, 0x_E3, 0x_40, 0x_5A, 0x_53, 0x_D1, 0x_36, 0x_45, 0x_B6, 0x_2E, 0x_4E,
		0x_F9, 0x_A8, 0x_4D, 0x_6A, 0x_3B, 0x_A7, 0x_71, 0x_1E, 0x_B2, 0x_D5, 0x_99, 0x_8C, 0x_A0, 0x_A1, 0x_48,
		0x_ED, 0x_66, 0x_55, 0x_D3, 0x_EF, 0x_16, 0x_9F, 0x_8E,
	];

	helper(S, BASE, -76);
}
// endregion
// region: s_has_minus_540_in_base_113
#[test]
fn s_has_minus_540_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_4B, 0x_89,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_7E, 0x_1B, 0x_DF, 0x_4B, 0x_92, 0x_40, 0x_8D, 0x_9F, 0x_75, 0x_46, 0x_C8, 0x_24, 0x_D3, 0x_82,
		0x_21, 0x_35, 0x_D7, 0x_93, 0x_BA, 0x_B6, 0x_4F, 0x_68, 0x_3A, 0x_E2, 0x_FD, 0x_63, 0x_CB, 0x_56, 0x_AB,
		0x_7A, 0x_78, 0x_17, 0x_E6, 0x_F3, 0x_B7, 0x_A1, 0x_CA, 0x_53, 0x_6A, 0x_72, 0x_D4, 0x_7F, 0x_5F, 0x_AC,
		0x_31, 0x_7D, 0x_62, 0x_F0, 0x_10, 0x_C1, 0x_01, 0x_37, 0x_95, 0x_E0, 0x_B9, 0x_DA, 0x_45, 0x_83, 0x_81,
		0x_26, 0x_C7, 0x_B3, 0x_EF, 0x_42, 0x_B5, 0x_4A, 0x_B4, 0x_11, 0x_B1, 0x_5E, 0x_02, 0x_F9, 0x_18, 0x_EA,
		0x_E3, 0x_22, 0x_67, 0x_A2, 0x_50, 0x_32, 0x_60, 0x_6D, 0x_F1, 0x_97, 0x_4C, 0x_3C, 0x_98, 0x_89, 0x_8F,
		0x_B2, 0x_DB, 0x_2A, 0x_65, 0x_CC, 0x_41, 0x_EC, 0x_44, 0x_9B, 0x_51, 0x_BB, 0x_AD, 0x_57, 0x_5B, 0x_7C,
		0x_AA, 0x_DD, 0x_3D, 0x_C5, 0x_36, 0x_ED, 0x_74, 0x_C0,
	];

	helper(S, BASE, -540);
}
// endregion
// region: s_has_minus_4_964_in_base_113
#[test]
fn s_has_minus_4_964_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_10, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_EC, 0x_F2, 0x_F0, 0x_9E, 0x_91, 0x_36, 0x_3E, 0x_60, 0x_5B, 0x_7C, 0x_63, 0x_3A, 0x_26, 0x_38, 0x_57,
		0x_F7, 0x_EA, 0x_BB, 0x_1F, 0x_BC, 0x_19, 0x_70, 0x_16, 0x_80, 0x_1A, 0x_B2, 0x_02, 0x_37, 0x_52, 0x_56,
		0x_28, 0x_D1, 0x_C6, 0x_66, 0x_9C, 0x_5C, 0x_71, 0x_EF, 0x_3B, 0x_98, 0x_2F, 0x_8D, 0x_CB, 0x_10, 0x_B3,
		0x_93, 0x_14, 0x_DA, 0x_C2, 0x_95, 0x_CC, 0x_4B, 0x_68, 0x_FE, 0x_C0, 0x_E6, 0x_45, 0x_D0, 0x_6D, 0x_F8,
		0x_D4, 0x_7A, 0x_DC, 0x_51, 0x_D7, 0x_25, 0x_8E, 0x_4D, 0x_59, 0x_9A, 0x_64, 0x_FF, 0x_2C, 0x_F9, 0x_B9,
		0x_8C, 0x_B1, 0x_C7, 0x_F3, 0x_7B, 0x_A4, 0x_97, 0x_B0, 0x_CF, 0x_46, 0x_83, 0x_AA, 0x_01, 0x_1D, 0x_A6,
		0x_33, 0x_E5, 0x_3C, 0x_C9, 0x_FA, 0x_18, 0x_6B, 0x_21, 0x_03, 0x_E4, 0x_E0, 0x_A1, 0x_E8, 0x_E3, 0x_5A,
		0x_B8, 0x_31, 0x_8F, 0x_96, 0x_6F, 0x_DF, 0x_9F, 0x_E1,
	];

	helper(S, BASE, -4_964);
}
// endregion
// region: s_has_minus_30_744_in_base_113
#[test]
fn s_has_minus_30_744_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_9C, 0x_27, 0x_E6,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_32, 0x_9C, 0x_B7, 0x_94, 0x_E9, 0x_9A, 0x_FD, 0x_E6, 0x_C8, 0x_63, 0x_B3, 0x_A2, 0x_08, 0x_10,
		0x_B2, 0x_5E, 0x_F8, 0x_CB, 0x_42, 0x_51, 0x_1E, 0x_7D, 0x_14, 0x_8F, 0x_80, 0x_E7, 0x_3F, 0x_EA, 0x_CC,
		0x_95, 0x_A7, 0x_19, 0x_EE, 0x_1F, 0x_86, 0x_55, 0x_66, 0x_F1, 0x_78, 0x_A0, 0x_D6, 0x_D8, 0x_3B, 0x_C0,
		0x_8D, 0x_27, 0x_03, 0x_BF, 0x_1C, 0x_4D, 0x_60, 0x_52, 0x_E0, 0x_D2, 0x_11, 0x_CE, 0x_AA, 0x_6E, 0x_D9,
		0x_EC, 0x_BD, 0x_99, 0x_3E, 0x_57, 0x_73, 0x_EB, 0x_B6, 0x_A3, 0x_65, 0x_E4, 0x_E1, 0x_C9, 0x_5D, 0x_62,
		0x_22, 0x_83, 0x_DC, 0x_82, 0x_B1, 0x_CD, 0x_34, 0x_C6, 0x_B4, 0x_8C, 0x_15, 0x_C3, 0x_E3, 0x_CF, 0x_2E,
		0x_DD, 0x_9E, 0x_D4, 0x_5F, 0x_C4, 0x_49, 0x_DA, 0x_43, 0x_8A, 0x_01, 0x_DB, 0x_D5, 0x_85, 0x_07, 0x_FB,
		0x_CA, 0x_FF, 0x_84, 0x_A8, 0x_1A, 0x_F7, 0x_37, 0x_30,
	];

	helper(S, BASE, -30_744);
}
// endregion
// region: s_has_minus_771_659_in_base_113
#[test]
fn s_has_minus_771_659_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_AD, 0x_B1, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_6F, 0x_99, 0x_97, 0x_B6, 0x_1C, 0x_42, 0x_12, 0x_FC, 0x_49, 0x_0F, 0x_1E, 0x_7E, 0x_E8, 0x_08,
		0x_A5, 0x_CB, 0x_F1, 0x_2C, 0x_3A, 0x_E9, 0x_E5, 0x_37, 0x_44, 0x_17, 0x_41, 0x_4D, 0x_F9, 0x_B4, 0x_9D,
		0x_9A, 0x_7C, 0x_90, 0x_5A, 0x_8E, 0x_98, 0x_5E, 0x_69, 0x_7D, 0x_48, 0x_7F, 0x_96, 0x_CC, 0x_F3, 0x_70,
		0x_4E, 0x_38, 0x_87, 0x_B1, 0x_E2, 0x_7A, 0x_B5, 0x_71, 0x_91, 0x_B8, 0x_A1, 0x_D2, 0x_50, 0x_39, 0x_CA,
		0x_AD, 0x_03, 0x_E6, 0x_EF, 0x_18, 0x_BD, 0x_23, 0x_10, 0x_11, 0x_72, 0x_D7, 0x_B9, 0x_EA, 0x_92, 0x_27,
		0x_C4, 0x_56, 0x_D9, 0x_4A, 0x_B7, 0x_F5, 0x_D8, 0x_65, 0x_78, 0x_32, 0x_15, 0x_4B, 0x_1F, 0x_DD, 0x_ED,
		0x_82, 0x_AA, 0x_61, 0x_64, 0x_3F, 0x_BC, 0x_58, 0x_C2, 0x_E3, 0x_89, 0x_C9, 0x_CF, 0x_75, 0x_35, 0x_2F,
		0x_51, 0x_3D, 0x_BB, 0x_14, 0x_FB, 0x_3C, 0x_A0, 0x_86,
	];

	helper(S, BASE, -771_659);
}
// endregion
// region: s_has_minus_7_134_374_in_base_113
#[test]
fn s_has_minus_7_134_374_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_53, 0x_07, 0x_08, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_A2, 0x_7C, 0x_C2, 0x_53, 0x_2A, 0x_FF, 0x_9C, 0x_5A, 0x_ED, 0x_70, 0x_B0, 0x_47, 0x_30, 0x_35,
		0x_E5, 0x_D0, 0x_AB, 0x_D7, 0x_FA, 0x_BF, 0x_81, 0x_96, 0x_B2, 0x_6D, 0x_C8, 0x_4E, 0x_FD, 0x_CB, 0x_80,
		0x_4A, 0x_84, 0x_FB, 0x_3B, 0x_E3, 0x_B8, 0x_E7, 0x_60, 0x_29, 0x_E9, 0x_7D, 0x_EA, 0x_49, 0x_34, 0x_F9,
		0x_C6, 0x_99, 0x_38, 0x_CC, 0x_CA, 0x_9E, 0x_B1, 0x_A0, 0x_2E, 0x_EC, 0x_1C, 0x_BB, 0x_19, 0x_14, 0x_7F,
		0x_9D, 0x_D5, 0x_F4, 0x_93, 0x_1F, 0x_D3, 0x_BA, 0x_88, 0x_17, 0x_9F, 0x_40, 0x_68, 0x_BC, 0x_5C, 0x_13,
		0x_D4, 0x_B9, 0x_67, 0x_0E, 0x_18, 0x_3E, 0x_B7, 0x_08, 0x_48, 0x_6E, 0x_E6, 0x_E0, 0x_D1, 0x_9B, 0x_CF,
		0x_03, 0x_B4, 0x_71, 0x_DF, 0x_FC, 0x_1B, 0x_A9, 0x_12, 0x_DD, 0x_A6, 0x_24, 0x_43, 0x_79, 0x_AC, 0x_31,
		0x_01, 0x_07, 0x_D2, 0x_83, 0x_8C, 0x_7E, 0x_5E, 0x_CD,
	];

	helper(S, BASE, -7_134_374);
}
// endregion
// region: s_has_minus_43_867_757_in_base_113
#[test]
fn s_has_minus_43_867_757_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_19, 0x_11, 0x_B8, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_C6, 0x_88, 0x_8D, 0x_4C, 0x_6A, 0x_97, 0x_D2, 0x_70, 0x_EF, 0x_68, 0x_A6, 0x_9F, 0x_F0, 0x_1F,
		0x_B9, 0x_2F, 0x_9B, 0x_BD, 0x_DE, 0x_80, 0x_BF, 0x_E2, 0x_A4, 0x_3A, 0x_75, 0x_7E, 0x_23, 0x_14, 0x_55,
		0x_19, 0x_38, 0x_BE, 0x_C8, 0x_8A, 0x_92, 0x_E8, 0x_94, 0x_F6, 0x_9D, 0x_66, 0x_EC, 0x_0F, 0x_9A, 0x_CA,
		0x_11, 0x_5D, 0x_AE, 0x_3E, 0x_21, 0x_D9, 0x_37, 0x_45, 0x_95, 0x_F5, 0x_B8, 0x_6B, 0x_7C, 0x_D6, 0x_FC,
		0x_1E, 0x_A3, 0x_CB, 0x_D5, 0x_57, 0x_C5, 0x_7D, 0x_73, 0x_AA, 0x_AD, 0x_4D, 0x_01, 0x_08, 0x_96, 0x_51,
		0x_DD, 0x_24, 0x_AB, 0x_AC, 0x_F1, 0x_84, 0x_42, 0x_F4, 0x_D0, 0x_A9, 0x_89, 0x_26, 0x_DA, 0x_E1, 0x_54,
		0x_7B, 0x_FE, 0x_6E, 0x_12, 0x_FB, 0x_B6, 0x_32, 0x_35, 0x_C2, 0x_18, 0x_93, 0x_6F, 0x_15, 0x_BC, 0x_98,
		0x_86, 0x_C7, 0x_A5, 0x_3D, 0x_B2, 0x_91, 0x_34, 0x_B3,
	];

	helper(S, BASE, -43_867_757);
}
// endregion
// region: s_has_minus_505_478_925_in_base_113
#[test]
fn s_has_minus_505_478_925_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_3F, 0x_EE, 0x_66, 0x_F5, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_BD, 0x_4F, 0x_3F, 0x_5D, 0x_02, 0x_85, 0x_8C, 0x_53, 0x_6D, 0x_90, 0x_EE, 0x_6C, 0x_40, 0x_C3,
		0x_7A, 0x_05, 0x_28, 0x_B7, 0x_E9, 0x_C8, 0x_C1, 0x_F9, 0x_1B, 0x_48, 0x_10, 0x_A5, 0x_36, 0x_E1, 0x_63,
		0x_BC, 0x_5C, 0x_69, 0x_8A, 0x_5B, 0x_74, 0x_66, 0x_71, 0x_BF, 0x_0E, 0x_A7, 0x_43, 0x_3A, 0x_CC, 0x_57,
		0x_D6, 0x_F5, 0x_A4, 0x_3D, 0x_56, 0x_D4, 0x_59, 0x_AB, 0x_C0, 0x_4B, 0x_44, 0x_37, 0x_EB, 0x_25, 0x_D1,
		0x_81, 0x_19, 0x_76, 0x_78, 0x_52, 0x_B0, 0x_AE, 0x_1E, 0x_31, 0x_91, 0x_E8, 0x_08, 0x_1D, 0x_B6, 0x_22,
		0x_11, 0x_D7, 0x_73, 0x_93, 0x_B3, 0x_DF, 0x_C9, 0x_27, 0x_D8, 0x_BA, 0x_FB, 0x_8D, 0x_5F, 0x_04, 0x_26,
		0x_75, 0x_7D, 0x_CE, 0x_62, 0x_61, 0x_55, 0x_70, 0x_C7, 0x_24, 0x_DB, 0x_EC, 0x_6F, 0x_7F, 0x_BE, 0x_2F,
		0x_E3, 0x_FC, 0x_F8, 0x_67, 0x_C2, 0x_8F, 0x_15, 0x_FF,
	];

	helper(S, BASE, -505_478_925);
}
// endregion
// region: s_has_minus_9_in_base_193
#[test]
fn s_has_minus_9_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_EE, 0x_A5, 0x_55, 0x_F4, 0x_90, 0x_83, 0x_AA, 0x_37, 0x_68, 0x_B2, 0x_99, 0x_EA, 0x_0E, 0x_11,
		0x_45, 0x_82, 0x_AF, 0x_15, 0x_38, 0x_DC, 0x_28, 0x_E3, 0x_3D, 0x_92, 0x_BF, 0x_DD, 0x_DF, 0x_71, 0x_58,
		0x_94, 0x_AD, 0x_E8, 0x_2A, 0x_77, 0x_A1, 0x_BE, 0x_C2, 0x_CD, 0x_D0, 0x_69, 0x_E7, 0x_B7, 0x_C1, 0x_9C,
		0x_ED, 0x_02, 0x_10, 0x_35, 0x_1C, 0x_9D, 0x_4A, 0x_D1, 0x_DB, 0x_D5, 0x_B0, 0x_A2, 0x_88, 0x_39, 0x_AB,
		0x_C7, 0x_C9, 0x_1A, 0x_70, 0x_FB, 0x_85, 0x_27, 0x_79, 0x_19, 0x_9B, 0x_EB, 0x_D7, 0x_2E, 0x_21, 0x_FD,
		0x_C6, 0x_FE, 0x_93, 0x_F8, 0x_9A, 0x_FC, 0x_D9, 0x_4D, 0x_87, 0x_6F, 0x_50, 0x_46, 0x_6E, 0x_BD, 0x_30,
		0x_D4, 0x_6B, 0x_3A, 0x_2F, 0x_26, 0x_29, 0x_F2, 0x_3B, 0x_5D, 0x_95, 0x_96, 0x_13, 0x_5C, 0x_07, 0x_4F,
		0x_1E, 0x_48, 0x_B6, 0x_2C, 0x_E1, 0x_A3, 0x_7D, 0x_C5, 0x_A9, 0x_3C, 0x_8A, 0x_9E, 0x_CA, 0x_4E, 0x_18,
		0x_DE, 0x_40, 0x_75, 0x_1B, 0x_B3, 0x_7C, 0x_C0, 0x_65, 0x_4B, 0x_63, 0x_CC, 0x_E6, 0x_C3, 0x_E4, 0x_59,
		0x_67, 0x_04, 0x_89, 0x_31, 0x_DA, 0x_56, 0x_57, 0x_FF, 0x_76, 0x_33, 0x_25, 0x_60, 0x_A4, 0x_53, 0x_B9,
		0x_F5, 0x_5E, 0x_B8, 0x_8E, 0x_8F, 0x_73, 0x_B4, 0x_43, 0x_61, 0x_05, 0x_AE, 0x_49, 0x_81, 0x_08, 0x_36,
		0x_BA, 0x_52, 0x_66, 0x_22, 0x_EF, 0x_8C, 0x_06, 0x_7A, 0x_E5, 0x_D3, 0x_5A, 0x_01, 0x_42, 0x_BC, 0x_E2,
		0x_41, 0x_44, 0x_E9, 0x_6D, 0x_23, 0x_C4, 0x_B5, 0x_14, 0x_B1, 0x_F3, 0x_D6, 0x_62, 0x_F9,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_minus_90_in_base_193
#[test]
fn s_has_minus_90_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_4D,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_B6, 0x_EE, 0x_48, 0x_6D, 0x_61, 0x_47, 0x_F8, 0x_6A, 0x_7C, 0x_BF, 0x_E1, 0x_28, 0x_7A, 0x_D7,
		0x_ED, 0x_67, 0x_D9, 0x_2A, 0x_C6, 0x_E6, 0x_FB, 0x_8D, 0x_6C, 0x_89, 0x_1D, 0x_71, 0x_2F, 0x_5C, 0x_07,
		0x_75, 0x_FF, 0x_76, 0x_C7, 0x_BB, 0x_39, 0x_EA, 0x_35, 0x_3C, 0x_BD, 0x_DC, 0x_F0, 0x_86, 0x_58, 0x_79,
		0x_24, 0x_BC, 0x_65, 0x_36, 0x_C0, 0x_94, 0x_40, 0x_F6, 0x_AD, 0x_63, 0x_54, 0x_E0, 0x_1C, 0x_42, 0x_81,
		0x_AC, 0x_B3, 0x_DF, 0x_23, 0x_95, 0x_B8, 0x_37, 0x_BA, 0x_80, 0x_4C, 0x_6B, 0x_01, 0x_26, 0x_13, 0x_46,
		0x_9D, 0x_50, 0x_A4, 0x_52, 0x_88, 0x_17, 0x_AF, 0x_A1, 0x_7D, 0x_5A, 0x_E8, 0x_5E, 0x_33, 0x_DE, 0x_3A,
		0x_4D, 0x_64, 0x_AB, 0x_C3, 0x_21, 0x_3E, 0x_B1, 0x_EC, 0x_6E, 0x_62, 0x_E7, 0x_41, 0x_A9, 0x_F5, 0x_C9,
		0x_BE, 0x_9F, 0x_F2, 0x_D3, 0x_87, 0x_F3, 0x_57, 0x_60, 0x_D2, 0x_78, 0x_E2, 0x_1B, 0x_1A, 0x_9E, 0x_A2,
		0x_D1, 0x_43, 0x_C1, 0x_92, 0x_14, 0x_93, 0x_59, 0x_44, 0x_D4, 0x_11, 0x_55, 0x_15, 0x_D6, 0x_CB, 0x_49,
		0x_B0, 0x_E9, 0x_CE, 0x_7B, 0x_84, 0x_8C, 0x_EF, 0x_CC, 0x_03, 0x_CA, 0x_2C, 0x_8F, 0x_0F, 0x_53, 0x_4B,
		0x_B7, 0x_85, 0x_56, 0x_EB, 0x_A0, 0x_4E, 0x_3D, 0x_5F, 0x_27, 0x_19, 0x_32, 0x_68, 0x_DB, 0x_7F, 0x_2E,
		0x_5B, 0x_70, 0x_8B, 0x_B5, 0x_F1, 0x_FA, 0x_3B, 0x_DD, 0x_B9, 0x_FD, 0x_A7, 0x_F4, 0x_D8, 0x_25, 0x_5D,
		0x_38, 0x_3F, 0x_74, 0x_1E, 0x_6F, 0x_12, 0x_99, 0x_DA, 0x_9B, 0x_C8, 0x_73, 0x_22, 0x_69,
	];

	helper(S, BASE, -90);
}
// endregion
// region: s_has_minus_495_in_base_193
#[test]
fn s_has_minus_495_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_2E, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_02, 0x_2E, 0x_38, 0x_BD, 0x_90, 0x_B2, 0x_9C, 0x_1D, 0x_17, 0x_57, 0x_91, 0x_26, 0x_DD, 0x_A0,
		0x_85, 0x_18, 0x_A9, 0x_3E, 0x_3B, 0x_CD, 0x_32, 0x_AA, 0x_8C, 0x_D7, 0x_C6, 0x_36, 0x_9B, 0x_D0, 0x_2C,
		0x_DB, 0x_62, 0x_3C, 0x_A2, 0x_B7, 0x_5C, 0x_AE, 0x_5F, 0x_F7, 0x_C1, 0x_BC, 0x_6F, 0x_46, 0x_51, 0x_BF,
		0x_80, 0x_16, 0x_5E, 0x_8B, 0x_76, 0x_B9, 0x_52, 0x_AF, 0x_40, 0x_14, 0x_84, 0x_1C, 0x_F4, 0x_C3, 0x_FD,
		0x_0E, 0x_0F, 0x_92, 0x_6D, 0x_B1, 0x_E5, 0x_83, 0x_79, 0x_37, 0x_47, 0x_7A, 0x_B3, 0x_A7, 0x_12, 0x_43,
		0x_60, 0x_E1, 0x_F5, 0x_7B, 0x_E7, 0x_F6, 0x_E9, 0x_55, 0x_1E, 0x_FF, 0x_59, 0x_30, 0x_D3, 0x_8E, 0x_AC,
		0x_28, 0x_3F, 0x_41, 0x_2A, 0x_8F, 0x_DF, 0x_E8, 0x_04, 0x_B4, 0x_9A, 0x_13, 0x_65, 0x_A4, 0x_9F, 0x_48,
		0x_EF, 0x_F3, 0x_4C, 0x_F2, 0x_9D, 0x_F1, 0x_53, 0x_68, 0x_A6, 0x_DC, 0x_3A, 0x_B5, 0x_22, 0x_39, 0x_31,
		0x_78, 0x_4F, 0x_E6, 0x_EB, 0x_71, 0x_AD, 0x_FE, 0x_61, 0x_2F, 0x_7C, 0x_C2, 0x_7E, 0x_88, 0x_C5, 0x_07,
		0x_5D, 0x_29, 0x_75, 0x_19, 0x_89, 0x_64, 0x_E3, 0x_11, 0x_CF, 0x_A1, 0x_A3, 0x_F8, 0x_74, 0x_FA, 0x_73,
		0x_CB, 0x_01, 0x_1B, 0x_B0, 0x_AB, 0x_FC, 0x_ED, 0x_6E, 0x_D2, 0x_E4, 0x_82, 0x_BE, 0x_08, 0x_98, 0x_EA,
		0x_4D, 0x_D5, 0x_D8, 0x_D1, 0x_05, 0x_66, 0x_C0, 0x_DE, 0x_9E, 0x_87, 0x_44, 0x_E0, 0x_45, 0x_63, 0x_97,
		0x_23, 0x_94, 0x_1A, 0x_5B, 0x_C7, 0x_5A, 0x_86, 0x_21, 0x_EC, 0x_F9, 0x_1F, 0x_3D, 0x_BA,
	];

	helper(S, BASE, -495);
}
// endregion
// region: s_has_minus_7_400_in_base_193
#[test]
fn s_has_minus_7_400_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_C0, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_AD, 0x_99, 0x_D1, 0x_1D, 0x_22, 0x_A7, 0x_2A, 0x_BC, 0x_04, 0x_9A, 0x_9E, 0x_50, 0x_A6, 0x_BB, 0x_37,
		0x_79, 0x_76, 0x_08, 0x_2E, 0x_56, 0x_23, 0x_54, 0x_B0, 0x_B6, 0x_A5, 0x_5C, 0x_5B, 0x_FA, 0x_55, 0x_72,
		0x_61, 0x_DB, 0x_88, 0x_8F, 0x_46, 0x_CA, 0x_1C, 0x_11, 0x_C0, 0x_FF, 0x_AC, 0x_47, 0x_D5, 0x_63, 0x_38,
		0x_AE, 0x_6C, 0x_42, 0x_44, 0x_70, 0x_A4, 0x_94, 0x_E2, 0x_F4, 0x_85, 0x_60, 0x_E6, 0x_B5, 0x_BD, 0x_18,
		0x_9D, 0x_0E, 0x_1B, 0x_E8, 0x_59, 0x_B9, 0x_7C, 0x_A9, 0x_D6, 0x_1E, 0x_98, 0x_B8, 0x_02, 0x_86, 0x_D4,
		0x_75, 0x_52, 0x_CF, 0x_AB, 0x_7F, 0x_7A, 0x_57, 0x_05, 0x_48, 0x_E0, 0x_24, 0x_13, 0x_D2, 0x_C7, 0x_66,
		0x_E4, 0x_74, 0x_8A, 0x_96, 0x_4E, 0x_03, 0x_34, 0x_3F, 0x_C9, 0x_FD, 0x_CD, 0x_6A, 0x_BF, 0x_C5, 0x_77,
		0x_ED, 0x_C2, 0x_8B, 0x_F7, 0x_EF, 0x_4B, 0x_B1, 0x_DE, 0x_BA, 0x_E9, 0x_D0, 0x_4C, 0x_06, 0x_F0, 0x_12,
		0x_F6, 0x_2C, 0x_6F, 0x_6B, 0x_40, 0x_45, 0x_93, 0x_80, 0x_B3, 0x_51, 0x_9F, 0x_F3, 0x_81, 0x_C1, 0x_35,
		0x_8E, 0x_E1, 0x_A0, 0x_C4, 0x_F5, 0x_5E, 0x_5A, 0x_3E, 0x_D8, 0x_A8, 0x_EB, 0x_53, 0x_33, 0x_89, 0x_E5,
		0x_A1, 0x_F9, 0x_E3, 0x_FE, 0x_8C, 0x_1F, 0x_F8, 0x_19, 0x_AF, 0x_CB, 0x_FB, 0x_A2, 0x_CC, 0x_8D, 0x_DD,
		0x_84, 0x_67, 0x_6D, 0x_7E, 0x_43, 0x_41, 0x_87, 0x_10, 0x_EA, 0x_73, 0x_5D, 0x_95, 0x_25, 0x_BE, 0x_3A,
		0x_71, 0x_27, 0x_D3, 0x_B2, 0x_4D, 0x_17, 0x_B4, 0x_2F, 0x_58, 0x_91, 0x_9C, 0x_C8, 0x_D7,
	];

	helper(S, BASE, -7_400);
}
// endregion
// region: s_has_minus_38_567_in_base_193
#[test]
fn s_has_minus_38_567_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_F6, 0x_42, 0x_83,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_F6, 0x_89, 0x_D0, 0x_DF, 0x_AD, 0x_42, 0x_AF, 0x_03, 0x_AE, 0x_72, 0x_54, 0x_AB, 0x_99, 0x_DE,
		0x_CF, 0x_7B, 0x_02, 0x_F1, 0x_79, 0x_A3, 0x_C4, 0x_B8, 0x_C3, 0x_81, 0x_B2, 0x_B6, 0x_9E, 0x_63, 0x_E5,
		0x_5E, 0x_8E, 0x_86, 0x_05, 0x_C5, 0x_45, 0x_EB, 0x_FA, 0x_37, 0x_49, 0x_C0, 0x_E8, 0x_9D, 0x_58, 0x_FB,
		0x_BF, 0x_6E, 0x_55, 0x_34, 0x_66, 0x_33, 0x_E4, 0x_BD, 0x_28, 0x_C2, 0x_38, 0x_80, 0x_82, 0x_EE, 0x_88,
		0x_24, 0x_73, 0x_70, 0x_78, 0x_C7, 0x_C6, 0x_25, 0x_A6, 0x_AC, 0x_5B, 0x_65, 0x_6A, 0x_69, 0x_6D, 0x_95,
		0x_1E, 0x_A4, 0x_ED, 0x_F8, 0x_D6, 0x_53, 0x_A5, 0x_3E, 0x_7D, 0x_D5, 0x_64, 0x_13, 0x_11, 0x_39, 0x_AA,
		0x_E7, 0x_10, 0x_D9, 0x_40, 0x_67, 0x_BE, 0x_98, 0x_B4, 0x_16, 0x_CE, 0x_E2, 0x_1A, 0x_4D, 0x_12, 0x_5C,
		0x_32, 0x_DD, 0x_41, 0x_90, 0x_1F, 0x_7F, 0x_D2, 0x_92, 0x_56, 0x_97, 0x_A0, 0x_31, 0x_08, 0x_FE, 0x_1C,
		0x_71, 0x_CB, 0x_E1, 0x_93, 0x_F9, 0x_E0, 0x_B9, 0x_22, 0x_30, 0x_61, 0x_75, 0x_D8, 0x_85, 0x_B0, 0x_1B,
		0x_D4, 0x_4C, 0x_06, 0x_46, 0x_18, 0x_B7, 0x_F4, 0x_8C, 0x_14, 0x_52, 0x_CC, 0x_4E, 0x_F0, 0x_6C, 0x_9C,
		0x_C9, 0x_96, 0x_6B, 0x_35, 0x_CA, 0x_94, 0x_8B, 0x_E6, 0x_A7, 0x_D3, 0x_83, 0x_2E, 0x_B1, 0x_E9, 0x_7E,
		0x_F2, 0x_07, 0x_27, 0x_8F, 0x_21, 0x_FD, 0x_87, 0x_3F, 0x_62, 0x_FC, 0x_4B, 0x_60, 0x_77, 0x_17, 0x_D1,
		0x_BA, 0x_2F, 0x_48, 0x_47, 0x_3D, 0x_E3, 0x_26, 0x_4F, 0x_15, 0x_68, 0x_F3, 0x_5A, 0x_3A,
	];

	helper(S, BASE, -38_567);
}
// endregion
// region: s_has_minus_500_575_in_base_193
#[test]
fn s_has_minus_500_575_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_17, 0x_BB, 0x_D8,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_2A, 0x_A3, 0x_14, 0x_0E, 0x_7D, 0x_18, 0x_0F, 0x_B3, 0x_7E, 0x_66, 0x_EE, 0x_2E, 0x_17, 0x_62,
		0x_EC, 0x_55, 0x_DB, 0x_F6, 0x_C5, 0x_4C, 0x_99, 0x_B2, 0x_95, 0x_E2, 0x_CD, 0x_3D, 0x_07, 0x_37, 0x_75,
		0x_4D, 0x_10, 0x_FA, 0x_E6, 0x_83, 0x_FE, 0x_D6, 0x_53, 0x_A5, 0x_8A, 0x_F7, 0x_59, 0x_46, 0x_7C, 0x_5F,
		0x_1C, 0x_98, 0x_38, 0x_7B, 0x_E3, 0x_70, 0x_61, 0x_A1, 0x_41, 0x_28, 0x_F9, 0x_40, 0x_C7, 0x_AE, 0x_33,
		0x_7F, 0x_68, 0x_A9, 0x_5C, 0x_8D, 0x_9F, 0x_87, 0x_78, 0x_65, 0x_B4, 0x_F3, 0x_C6, 0x_02, 0x_88, 0x_05,
		0x_8F, 0x_ED, 0x_36, 0x_13, 0x_49, 0x_85, 0x_35, 0x_82, 0x_8C, 0x_BB, 0x_21, 0x_92, 0x_03, 0x_BF, 0x_C3,
		0x_CA, 0x_FB, 0x_D1, 0x_AA, 0x_D9, 0x_51, 0x_6F, 0x_32, 0x_3E, 0x_26, 0x_D3, 0x_5E, 0x_56, 0x_9A, 0x_C9,
		0x_74, 0x_CE, 0x_79, 0x_F8, 0x_64, 0x_3F, 0x_A6, 0x_DA, 0x_6B, 0x_04, 0x_BE, 0x_B6, 0x_D0, 0x_69, 0x_B5,
		0x_6E, 0x_8E, 0x_B9, 0x_93, 0x_DD, 0x_1B, 0x_D8, 0x_2C, 0x_11, 0x_F0, 0x_C0, 0x_54, 0x_29, 0x_EF, 0x_E4,
		0x_9B, 0x_90, 0x_DE, 0x_BA, 0x_3A, 0x_42, 0x_D5, 0x_4F, 0x_FD, 0x_57, 0x_C4, 0x_E5, 0x_F4, 0x_73, 0x_77,
		0x_91, 0x_86, 0x_44, 0x_D4, 0x_4E, 0x_F2, 0x_52, 0x_AB, 0x_31, 0x_BC, 0x_B0, 0x_71, 0x_8B, 0x_27, 0x_15,
		0x_A8, 0x_F5, 0x_CF, 0x_EB, 0x_BD, 0x_AC, 0x_24, 0x_DF, 0x_CC, 0x_19, 0x_25, 0x_1D, 0x_9C, 0x_EA, 0x_89,
		0x_1A, 0x_47, 0x_B1, 0x_A0, 0x_4A, 0x_60, 0x_6A, 0x_80, 0x_F1, 0x_CB, 0x_43, 0x_48, 0x_E0,
	];

	helper(S, BASE, -500_575);
}
// endregion
// region: s_has_minus_8_486_725_in_base_193
#[test]
fn s_has_minus_8_486_725_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_23, 0x_10, 0x_7C, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_23, 0x_24, 0x_01, 0x_4F, 0x_83, 0x_93, 0x_B1, 0x_D1, 0x_2C, 0x_51, 0x_91, 0x_B5, 0x_3E, 0x_AF,
		0x_D8, 0x_1D, 0x_C5, 0x_69, 0x_6D, 0x_A0, 0x_5C, 0x_E3, 0x_FF, 0x_64, 0x_90, 0x_33, 0x_27, 0x_BA, 0x_8A,
		0x_C7, 0x_E2, 0x_AC, 0x_8C, 0x_10, 0x_6B, 0x_E5, 0x_C2, 0x_18, 0x_13, 0x_81, 0x_7B, 0x_63, 0x_E6, 0x_EA,
		0x_A4, 0x_1A, 0x_87, 0x_3B, 0x_56, 0x_EE, 0x_68, 0x_8E, 0x_14, 0x_FD, 0x_A6, 0x_34, 0x_B6, 0x_58, 0x_42,
		0x_4D, 0x_4E, 0x_88, 0x_78, 0x_D6, 0x_62, 0x_26, 0x_46, 0x_48, 0x_47, 0x_12, 0x_CF, 0x_61, 0x_2F, 0x_28,
		0x_CB, 0x_5D, 0x_F9, 0x_F3, 0x_6E, 0x_8D, 0x_C8, 0x_72, 0x_EF, 0x_A5, 0x_E1, 0x_19, 0x_F2, 0x_74, 0x_29,
		0x_05, 0x_84, 0x_97, 0x_B8, 0x_A3, 0x_79, 0x_92, 0x_50, 0x_75, 0x_A8, 0x_D3, 0x_82, 0x_E9, 0x_6F, 0x_9F,
		0x_E0, 0x_3D, 0x_2E, 0x_A9, 0x_25, 0x_3A, 0x_F6, 0x_15, 0x_DB, 0x_52, 0x_16, 0x_F4, 0x_08, 0x_76, 0x_55,
		0x_9E, 0x_85, 0x_7F, 0x_94, 0x_70, 0x_B7, 0x_F7, 0x_11, 0x_1E, 0x_21, 0x_65, 0x_B3, 0x_9B, 0x_6C, 0x_89,
		0x_B9, 0x_FB, 0x_E7, 0x_39, 0x_04, 0x_37, 0x_49, 0x_1B, 0x_BD, 0x_BB, 0x_07, 0x_BC, 0x_CC, 0x_67, 0x_2A,
		0x_7A, 0x_9D, 0x_D5, 0x_5F, 0x_5A, 0x_80, 0x_7E, 0x_22, 0x_DC, 0x_38, 0x_D4, 0x_7C, 0x_6A, 0x_5B, 0x_D9,
		0x_30, 0x_86, 0x_AD, 0x_41, 0x_02, 0x_17, 0x_40, 0x_4C, 0x_9C, 0x_45, 0x_06, 0x_FA, 0x_32, 0x_95, 0x_ED,
		0x_F8, 0x_36, 0x_F5, 0x_3F, 0x_1F, 0x_1C, 0x_DF, 0x_DE, 0x_9A, 0x_3C, 0x_EC, 0x_4B, 0x_C1,
	];

	helper(S, BASE, -8_486_725);
}
// endregion
// region: s_has_minus_19_513_039_in_base_193
#[test]
fn s_has_minus_19_513_039_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_53, 0x_62, 0x_EF, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_E6, 0x_53, 0x_30, 0x_B0, 0x_48, 0x_7B, 0x_61, 0x_9D, 0x_94, 0x_8D, 0x_47, 0x_08, 0x_E5, 0x_ED,
		0x_16, 0x_19, 0x_7A, 0x_CC, 0x_15, 0x_55, 0x_18, 0x_CD, 0x_8B, 0x_C0, 0x_7E, 0x_5D, 0x_A3, 0x_4D, 0x_D5,
		0x_AC, 0x_F6, 0x_E1, 0x_BF, 0x_F9, 0x_C5, 0x_37, 0x_78, 0x_67, 0x_70, 0x_DB, 0x_64, 0x_D7, 0x_43, 0x_6B,
		0x_DD, 0x_23, 0x_D9, 0x_1A, 0x_FC, 0x_9A, 0x_01, 0x_F3, 0x_AE, 0x_04, 0x_4A, 0x_AF, 0x_E7, 0x_D4, 0x_A5,
		0x_82, 0x_6F, 0x_CF, 0x_99, 0x_3C, 0x_7C, 0x_0F, 0x_A1, 0x_65, 0x_FD, 0x_91, 0x_2E, 0x_FE, 0x_BB, 0x_AB,
		0x_54, 0x_14, 0x_B8, 0x_75, 0x_33, 0x_E4, 0x_69, 0x_1D, 0x_6D, 0x_39, 0x_C1, 0x_BE, 0x_B4, 0x_9F, 0x_2A,
		0x_DF, 0x_36, 0x_6A, 0x_89, 0x_D1, 0x_60, 0x_2F, 0x_B5, 0x_EB, 0x_A7, 0x_AA, 0x_86, 0x_1C, 0x_46, 0x_6C,
		0x_1F, 0x_FB, 0x_F8, 0x_3E, 0x_93, 0x_E9, 0x_E2, 0x_B3, 0x_D8, 0x_4E, 0x_CB, 0x_96, 0x_E3, 0x_EC, 0x_EA,
		0x_C3, 0x_3A, 0x_85, 0x_3D, 0x_32, 0x_E0, 0x_88, 0x_F1, 0x_63, 0x_74, 0x_F2, 0x_A4, 0x_A0, 0x_FA, 0x_58,
		0x_F5, 0x_52, 0x_62, 0x_DE, 0x_8E, 0x_40, 0x_A8, 0x_5E, 0x_34, 0x_D0, 0x_87, 0x_3F, 0x_5F, 0x_CA, 0x_B2,
		0x_B7, 0x_8C, 0x_45, 0x_FF, 0x_83, 0x_7D, 0x_DA, 0x_17, 0x_5C, 0x_72, 0x_25, 0x_D2, 0x_07, 0x_90, 0x_EF,
		0x_F7, 0x_BC, 0x_68, 0x_B9, 0x_9B, 0x_7F, 0x_A6, 0x_EE, 0x_42, 0x_8A, 0x_C2, 0x_97, 0x_76, 0x_22, 0x_12,
		0x_41, 0x_C9, 0x_50, 0x_84, 0x_51, 0x_2C, 0x_13, 0x_56, 0x_21, 0x_C6, 0x_6E, 0x_79, 0x_05,
	];

	helper(S, BASE, -19_513_039);
}
// endregion
// region: s_has_minus_283_060_509_in_base_193
#[test]
fn s_has_minus_283_060_509_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_38, 0x_D6, 0x_87, 0x_56,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_AD, 0x_BD, 0x_47, 0x_2E, 0x_AB, 0x_5B, 0x_9A, 0x_4C, 0x_43, 0x_A1, 0x_C0, 0x_E5, 0x_C7, 0x_F3,
		0x_F6, 0x_F1, 0x_A8, 0x_CF, 0x_BB, 0x_79, 0x_AE, 0x_6A, 0x_66, 0x_6C, 0x_E8, 0x_86, 0x_87, 0x_7F, 0x_24,
		0x_7A, 0x_95, 0x_16, 0x_DF, 0x_89, 0x_5C, 0x_FD, 0x_1E, 0x_FE, 0x_38, 0x_60, 0x_BC, 0x_FB, 0x_6B, 0x_80,
		0x_F7, 0x_EB, 0x_50, 0x_99, 0x_05, 0x_82, 0x_8C, 0x_5D, 0x_B2, 0x_D0, 0x_1A, 0x_26, 0x_A5, 0x_22, 0x_0E,
		0x_40, 0x_88, 0x_15, 0x_D9, 0x_B4, 0x_02, 0x_DC, 0x_E2, 0x_A7, 0x_CD, 0x_C2, 0x_F9, 0x_D6, 0x_F4, 0x_E7,
		0x_69, 0x_54, 0x_CC, 0x_A4, 0x_65, 0x_72, 0x_D7, 0x_3D, 0x_CB, 0x_61, 0x_B3, 0x_DD, 0x_75, 0x_3E, 0x_4D,
		0x_D4, 0x_51, 0x_FA, 0x_A0, 0x_F0, 0x_58, 0x_B9, 0x_41, 0x_EE, 0x_84, 0x_98, 0x_AA, 0x_BE, 0x_9E, 0x_0F,
		0x_37, 0x_C6, 0x_29, 0x_B8, 0x_49, 0x_2F, 0x_52, 0x_9C, 0x_25, 0x_45, 0x_07, 0x_68, 0x_81, 0x_7E, 0x_76,
		0x_D3, 0x_83, 0x_C4, 0x_3F, 0x_90, 0x_91, 0x_DB, 0x_7B, 0x_A2, 0x_93, 0x_3A, 0x_AF, 0x_57, 0x_A9, 0x_78,
		0x_19, 0x_64, 0x_F2, 0x_30, 0x_E6, 0x_12, 0x_21, 0x_63, 0x_7D, 0x_C8, 0x_8B, 0x_6D, 0x_56, 0x_59, 0x_04,
		0x_C1, 0x_44, 0x_74, 0x_92, 0x_77, 0x_8D, 0x_33, 0x_B5, 0x_E1, 0x_35, 0x_D1, 0x_6F, 0x_14, 0x_42, 0x_B6,
		0x_C9, 0x_5E, 0x_4B, 0x_8A, 0x_1D, 0x_EA, 0x_7C, 0x_4A, 0x_4E, 0x_9D, 0x_62, 0x_ED, 0x_FC, 0x_32, 0x_B7,
		0x_F5, 0x_53, 0x_06, 0x_1F, 0x_4F, 0x_C3, 0x_E3, 0x_CA, 0x_23, 0x_67, 0x_D5, 0x_18, 0x_8F,
	];

	helper(S, BASE, -283_060_509);
}
// endregion
// region: s_has_minus_4_in_base_247
#[test]
fn s_has_minus_4_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_2F, 0x_04, 0x_CC, 0x_73, 0x_77, 0x_55, 0x_C2, 0x_E9, 0x_42, 0x_17, 0x_E3, 0x_0E, 0x_53, 0x_7E,
		0x_B0, 0x_22, 0x_A7, 0x_83, 0x_88, 0x_89, 0x_3F, 0x_C4, 0x_47, 0x_3A, 0x_4B, 0x_3D, 0x_7C, 0x_9D, 0x_F4,
		0x_FE, 0x_2A, 0x_74, 0x_1B, 0x_56, 0x_52, 0x_D9, 0x_6B, 0x_99, 0x_5F, 0x_AA, 0x_9C, 0x_26, 0x_E2, 0x_DE,
		0x_76, 0x_C1, 0x_EB, 0x_82, 0x_A3, 0x_28, 0x_FC, 0x_4C, 0x_59, 0x_F7, 0x_5D, 0x_1D, 0x_DA, 0x_F0, 0x_02,
		0x_21, 0x_A9, 0x_08, 0x_35, 0x_93, 0x_5E, 0x_1A, 0x_27, 0x_B1, 0x_B9, 0x_03, 0x_97, 0x_80, 0x_A6, 0x_6C,
		0x_2C, 0x_40, 0x_C0, 0x_ED, 0x_2E, 0x_B2, 0x_EA, 0x_A4, 0x_68, 0x_24, 0x_23, 0x_D5, 0x_CA, 0x_84, 0x_4A,
		0x_91, 0x_01, 0x_54, 0x_5C, 0x_D0, 0x_37, 0x_11, 0x_79, 0x_72, 0x_58, 0x_6E, 0x_D4, 0x_E7, 0x_CE, 0x_AB,
		0x_8F, 0x_45, 0x_61, 0x_13, 0x_F3, 0x_BC, 0x_E4, 0x_4E, 0x_78, 0x_DF, 0x_E1, 0x_3B, 0x_32, 0x_E0, 0x_8D,
		0x_71, 0x_70, 0x_F1, 0x_63, 0x_94, 0x_B5, 0x_1C, 0x_BD, 0x_6F, 0x_AF, 0x_81, 0x_8C, 0x_D2, 0x_DC, 0x_15,
		0x_8A, 0x_50, 0x_85, 0x_E8, 0x_C5, 0x_14, 0x_7B, 0x_4F, 0x_9B, 0x_DD, 0x_B6, 0x_B7, 0x_86, 0x_7D, 0x_64,
		0x_5B, 0x_D8, 0x_C9, 0x_57, 0x_05, 0x_D1, 0x_EF, 0x_44, 0x_92, 0x_A0, 0x_0F, 0x_9A, 0x_C8, 0x_CB, 0x_90,
		0x_39, 0x_38, 0x_F8, 0x_19, 0x_A8, 0x_96, 0x_16, 0x_AD, 0x_A1, 0x_B3, 0x_8B, 0x_D6, 0x_F6, 0x_29, 0x_07,
		0x_BF, 0x_B8, 0x_75, 0x_10, 0x_7F, 0x_E6, 0x_06, 0x_65, 0x_66, 0x_12, 0x_CF, 0x_25, 0x_1E, 0x_34, 0x_51,
		0x_A2, 0x_FA, 0x_6A, 0x_3E, 0x_62, 0x_FB, 0x_30, 0x_31, 0x_CD, 0x_C6, 0x_1F, 0x_87, 0x_33, 0x_BB, 0x_49,
		0x_AC, 0x_3C, 0x_F9, 0x_4D, 0x_D3, 0x_8E, 0x_DB, 0x_98, 0x_A5, 0x_43, 0x_69, 0x_67, 0x_48, 0x_EC, 0x_18,
		0x_6D, 0x_FF, 0x_F5, 0x_BE, 0x_B4, 0x_C7, 0x_BA, 0x_F2, 0x_95, 0x_FD, 0x_EE, 0x_36, 0x_E5, 0x_60, 0x_41,
		0x_D7, 0x_46, 0x_9F, 0x_5A, 0x_C3, 0x_9E, 0x_AE,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_minus_99_in_base_247
#[test]
fn s_has_minus_99_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_78, 0x_D2, 0x_94, 0x_4B, 0x_60, 0x_50, 0x_90, 0x_05, 0x_57, 0x_4E, 0x_86, 0x_68, 0x_93, 0x_9F,
		0x_33, 0x_3B, 0x_8B, 0x_5B, 0x_A5, 0x_59, 0x_DC, 0x_A0, 0x_F0, 0x_8D, 0x_E4, 0x_6F, 0x_D8, 0x_42, 0x_3C,
		0x_5A, 0x_02, 0x_E6, 0x_7E, 0x_56, 0x_7F, 0x_6A, 0x_B7, 0x_67, 0x_14, 0x_A3, 0x_7A, 0x_E3, 0x_1A, 0x_EE,
		0x_A9, 0x_63, 0x_98, 0x_97, 0x_9E, 0x_BC, 0x_CE, 0x_4A, 0x_1F, 0x_83, 0x_D7, 0x_1B, 0x_08, 0x_38, 0x_F5,
		0x_12, 0x_79, 0x_53, 0x_44, 0x_74, 0x_C6, 0x_7D, 0x_64, 0x_AD, 0x_71, 0x_A1, 0x_27, 0x_4C, 0x_62, 0x_37,
		0x_DD, 0x_9B, 0x_2A, 0x_95, 0x_E0, 0x_7B, 0x_3A, 0x_DA, 0x_D0, 0x_5C, 0x_77, 0x_FC, 0x_FA, 0x_5E, 0x_8C,
		0x_75, 0x_39, 0x_18, 0x_F6, 0x_6B, 0x_61, 0x_81, 0x_4F, 0x_B3, 0x_F7, 0x_EA, 0x_A4, 0x_F4, 0x_5D, 0x_D5,
		0x_C0, 0x_55, 0x_EC, 0x_69, 0x_85, 0x_72, 0x_47, 0x_FD, 0x_2F, 0x_10, 0x_3D, 0x_15, 0x_51, 0x_FE, 0x_8A,
		0x_BF, 0x_D6, 0x_1E, 0x_DE, 0x_C7, 0x_32, 0x_49, 0x_6C, 0x_E8, 0x_9C, 0x_23, 0x_AB, 0x_DB, 0x_D4, 0x_35,
		0x_A2, 0x_26, 0x_F8, 0x_21, 0x_C8, 0x_48, 0x_BE, 0x_BD, 0x_1C, 0x_AC, 0x_45, 0x_36, 0x_11, 0x_66, 0x_30,
		0x_8E, 0x_2C, 0x_A7, 0x_29, 0x_70, 0x_B9, 0x_CD, 0x_3F, 0x_ED, 0x_40, 0x_A8, 0x_41, 0x_DF, 0x_17, 0x_A6,
		0x_B4, 0x_13, 0x_8F, 0x_01, 0x_EB, 0x_6D, 0x_FB, 0x_07, 0x_CF, 0x_D1, 0x_E2, 0x_46, 0x_D9, 0x_82, 0x_C2,
		0x_B8, 0x_65, 0x_C3, 0x_2E, 0x_9A, 0x_AF, 0x_AA, 0x_92, 0x_E5, 0x_80, 0x_3E, 0x_F1, 0x_E7, 0x_C1, 0x_28,
		0x_C5, 0x_B2, 0x_B0, 0x_34, 0x_CB, 0x_96, 0x_0F, 0x_EF, 0x_6E, 0x_5F, 0x_F2, 0x_B1, 0x_9D, 0x_FF, 0x_87,
		0x_F3, 0x_88, 0x_91, 0x_03, 0x_E1, 0x_7C, 0x_D3, 0x_E9, 0x_22, 0x_06, 0x_84, 0x_16, 0x_CC, 0x_76, 0x_99,
		0x_52, 0x_54, 0x_C4, 0x_1D, 0x_31, 0x_B6, 0x_04, 0x_C9, 0x_19, 0x_4D, 0x_73, 0x_F9, 0x_BB, 0x_0E, 0x_58,
		0x_BA, 0x_24, 0x_AE, 0x_CA, 0x_B5, 0x_43, 0x_89,
	];

	helper(S, BASE, -99);
}
// endregion
// region: s_has_minus_250_in_base_247
#[test]
fn s_has_minus_250_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_12, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_F3, 0x_12, 0x_9C, 0x_FF, 0x_DD, 0x_CC, 0x_99, 0x_78, 0x_B7, 0x_D9, 0x_BE, 0x_D2, 0x_EB, 0x_17, 0x_53,
		0x_A4, 0x_58, 0x_23, 0x_9F, 0x_7B, 0x_A5, 0x_B4, 0x_6D, 0x_AA, 0x_D7, 0x_71, 0x_CE, 0x_6B, 0x_E8, 0x_CB,
		0x_73, 0x_59, 0x_6C, 0x_81, 0x_C1, 0x_DE, 0x_90, 0x_5E, 0x_AD, 0x_C6, 0x_07, 0x_EF, 0x_45, 0x_14, 0x_E7,
		0x_B9, 0x_D0, 0x_28, 0x_E1, 0x_2A, 0x_60, 0x_BD, 0x_9D, 0x_69, 0x_8B, 0x_1E, 0x_40, 0x_47, 0x_B0, 0x_9A,
		0x_95, 0x_ED, 0x_4F, 0x_46, 0x_FE, 0x_3B, 0x_A2, 0x_D8, 0x_FA, 0x_B1, 0x_DF, 0x_77, 0x_BF, 0x_B3, 0x_1A,
		0x_DB, 0x_88, 0x_38, 0x_A6, 0x_E2, 0x_F9, 0x_25, 0x_7A, 0x_43, 0x_11, 0x_06, 0x_C3, 0x_F4, 0x_41, 0x_BB,
		0x_FD, 0x_85, 0x_DC, 0x_0E, 0x_F2, 0x_1C, 0x_98, 0x_22, 0x_03, 0x_49, 0x_75, 0x_32, 0x_21, 0x_55, 0x_36,
		0x_08, 0x_61, 0x_5B, 0x_93, 0x_DA, 0x_1B, 0x_4E, 0x_1D, 0x_57, 0x_94, 0x_4C, 0x_6A, 0x_65, 0x_7C, 0x_8A,
		0x_D1, 0x_86, 0x_C5, 0x_66, 0x_4A, 0x_6E, 0x_C7, 0x_50, 0x_4D, 0x_2F, 0x_29, 0x_39, 0x_F8, 0x_44, 0x_0F,
		0x_74, 0x_C2, 0x_16, 0x_3E, 0x_A0, 0x_A8, 0x_52, 0x_A3, 0x_26, 0x_AB, 0x_EA, 0x_F0, 0x_84, 0x_37, 0x_A7,
		0x_3A, 0x_3C, 0x_B2, 0x_92, 0x_FC, 0x_E5, 0x_91, 0x_3F, 0x_04, 0x_33, 0x_68, 0x_79, 0x_80, 0x_C9, 0x_96,
		0x_89, 0x_63, 0x_97, 0x_9E, 0x_82, 0x_3D, 0x_1F, 0x_5C, 0x_F6, 0x_F7, 0x_8D, 0x_30, 0x_7D, 0x_D5, 0x_5A,
		0x_18, 0x_CD, 0x_35, 0x_7F, 0x_C4, 0x_BA, 0x_BC, 0x_FB, 0x_C8, 0x_A9, 0x_E0, 0x_54, 0x_70, 0x_C0, 0x_19,
		0x_D4, 0x_15, 0x_5D, 0x_05, 0x_42, 0x_E6, 0x_67, 0x_8E, 0x_A1, 0x_AC, 0x_F5, 0x_64, 0x_8C, 0x_E3, 0x_9B,
		0x_27, 0x_2E, 0x_24, 0x_76, 0x_AF, 0x_5F, 0x_13, 0x_B8, 0x_34, 0x_B6, 0x_6F, 0x_83, 0x_D3, 0x_8F, 0x_4B,
		0x_51, 0x_E9, 0x_B5, 0x_02, 0x_CA, 0x_62, 0x_56, 0x_87, 0x_EE, 0x_48, 0x_2C, 0x_EC, 0x_E4, 0x_10, 0x_F1,
		0x_01, 0x_31, 0x_D6, 0x_7E, 0x_72, 0x_AE, 0x_CF,
	];

	helper(S, BASE, -250);
}
// endregion
// region: s_has_minus_3_596_in_base_247
#[test]
fn s_has_minus_3_596_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_60, 0x_DA,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_ED, 0x_36, 0x_25, 0x_A1, 0x_59, 0x_E4, 0x_D2, 0x_A6, 0x_7E, 0x_57, 0x_C9, 0x_A0, 0x_C2, 0x_60,
		0x_1A, 0x_7B, 0x_C6, 0x_9B, 0x_44, 0x_E2, 0x_2A, 0x_CD, 0x_86, 0x_05, 0x_42, 0x_66, 0x_CB, 0x_BB, 0x_CF,
		0x_EB, 0x_AE, 0x_EC, 0x_B8, 0x_B1, 0x_88, 0x_02, 0x_A2, 0x_64, 0x_08, 0x_24, 0x_61, 0x_6E, 0x_CE, 0x_C5,
		0x_5B, 0x_B0, 0x_A8, 0x_7C, 0x_71, 0x_B5, 0x_32, 0x_2C, 0x_19, 0x_46, 0x_C4, 0x_73, 0x_84, 0x_2F, 0x_0F,
		0x_C1, 0x_AF, 0x_4C, 0x_E8, 0x_07, 0x_D5, 0x_F1, 0x_37, 0x_1E, 0x_29, 0x_BF, 0x_D1, 0x_C3, 0x_F6, 0x_E7,
		0x_F3, 0x_23, 0x_01, 0x_68, 0x_CC, 0x_1B, 0x_97, 0x_5C, 0x_6F, 0x_58, 0x_92, 0x_E0, 0x_55, 0x_6B, 0x_F7,
		0x_8B, 0x_A3, 0x_4E, 0x_17, 0x_28, 0x_0E, 0x_DF, 0x_69, 0x_9C, 0x_8F, 0x_9A, 0x_3D, 0x_E3, 0x_5F, 0x_21,
		0x_2E, 0x_38, 0x_EF, 0x_11, 0x_27, 0x_8E, 0x_B7, 0x_98, 0x_4B, 0x_65, 0x_F0, 0x_A7, 0x_3E, 0x_90, 0x_48,
		0x_52, 0x_7A, 0x_FA, 0x_35, 0x_96, 0x_22, 0x_80, 0x_E6, 0x_85, 0x_82, 0x_5D, 0x_51, 0x_F5, 0x_45, 0x_C0,
		0x_40, 0x_3F, 0x_B6, 0x_DA, 0x_FD, 0x_8C, 0x_D6, 0x_87, 0x_33, 0x_B3, 0x_F9, 0x_99, 0x_9D, 0x_EE, 0x_06,
		0x_B2, 0x_3C, 0x_39, 0x_D7, 0x_13, 0x_C8, 0x_BE, 0x_49, 0x_63, 0x_DE, 0x_F2, 0x_D8, 0x_B4, 0x_8D, 0x_DC,
		0x_3A, 0x_12, 0x_A9, 0x_4D, 0x_79, 0x_F4, 0x_DB, 0x_BC, 0x_04, 0x_89, 0x_D3, 0x_6A, 0x_1C, 0x_A4, 0x_10,
		0x_41, 0x_7D, 0x_C7, 0x_AD, 0x_AB, 0x_4F, 0x_18, 0x_B9, 0x_47, 0x_AA, 0x_9E, 0x_91, 0x_34, 0x_FF, 0x_53,
		0x_D0, 0x_03, 0x_14, 0x_81, 0x_56, 0x_4A, 0x_BD, 0x_30, 0x_FB, 0x_BA, 0x_95, 0x_15, 0x_67, 0x_8A, 0x_F8,
		0x_E9, 0x_16, 0x_31, 0x_CA, 0x_54, 0x_E1, 0x_D9, 0x_93, 0x_76, 0x_6D, 0x_1D, 0x_77, 0x_75, 0x_1F, 0x_5E,
		0x_83, 0x_62, 0x_9F, 0x_6C, 0x_FE, 0x_74, 0x_E5, 0x_3B, 0x_43, 0x_5A, 0x_94, 0x_70, 0x_DD, 0x_EA, 0x_FC,
		0x_78, 0x_7F, 0x_AC, 0x_A5, 0x_72, 0x_26, 0x_50,
	];

	helper(S, BASE, -3_596);
}
// endregion
// region: s_has_minus_58_275_in_base_247
#[test]
fn s_has_minus_58_275_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_EF, 0x_16,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_B9, 0x_A7, 0x_80, 0x_32, 0x_E1, 0x_E9, 0x_07, 0x_BC, 0x_A9, 0x_24, 0x_13, 0x_EE, 0x_79, 0x_EA,
		0x_E0, 0x_3D, 0x_BE, 0x_85, 0x_CC, 0x_5B, 0x_4C, 0x_5F, 0x_84, 0x_04, 0x_45, 0x_FE, 0x_FA, 0x_87, 0x_7B,
		0x_53, 0x_7C, 0x_AF, 0x_A3, 0x_DC, 0x_B4, 0x_5E, 0x_C2, 0x_35, 0x_F8, 0x_06, 0x_D5, 0x_FC, 0x_8A, 0x_AE,
		0x_C5, 0x_41, 0x_0F, 0x_8F, 0x_F0, 0x_EC, 0x_3C, 0x_B8, 0x_1A, 0x_6F, 0x_17, 0x_52, 0x_62, 0x_A8, 0x_2A,
		0x_E7, 0x_19, 0x_21, 0x_1C, 0x_10, 0x_9C, 0x_54, 0x_B2, 0x_9B, 0x_1E, 0x_22, 0x_4E, 0x_E3, 0x_27, 0x_B7,
		0x_C4, 0x_29, 0x_F9, 0x_8E, 0x_33, 0x_97, 0x_D7, 0x_AC, 0x_CB, 0x_70, 0x_F3, 0x_73, 0x_49, 0x_95, 0x_F4,
		0x_43, 0x_0E, 0x_B1, 0x_3A, 0x_88, 0x_76, 0x_61, 0x_E8, 0x_65, 0x_D2, 0x_57, 0x_AB, 0x_90, 0x_7D, 0x_D8,
		0x_47, 0x_59, 0x_30, 0x_1D, 0x_CE, 0x_7E, 0x_D0, 0x_74, 0x_05, 0x_31, 0x_A6, 0x_96, 0x_14, 0x_F2, 0x_E2,
		0x_EB, 0x_F6, 0x_68, 0x_67, 0x_03, 0x_3B, 0x_6C, 0x_9F, 0x_F5, 0x_26, 0x_15, 0x_40, 0x_C9, 0x_A0, 0x_36,
		0x_99, 0x_E4, 0x_9D, 0x_50, 0x_9E, 0x_DD, 0x_4F, 0x_DB, 0x_44, 0x_C7, 0x_B5, 0x_C1, 0x_D9, 0x_91, 0x_D3,
		0x_AA, 0x_C6, 0x_DA, 0x_82, 0x_F1, 0x_66, 0x_69, 0x_4B, 0x_89, 0x_D4, 0x_C3, 0x_BB, 0x_60, 0x_DF, 0x_9A,
		0x_4D, 0x_83, 0x_CA, 0x_11, 0x_7F, 0x_A5, 0x_98, 0x_77, 0x_5C, 0x_7A, 0x_F7, 0x_4A, 0x_BF, 0x_C8, 0x_8D,
		0x_6B, 0x_2F, 0x_FB, 0x_ED, 0x_BD, 0x_5D, 0x_1F, 0x_48, 0x_A2, 0x_DE, 0x_51, 0x_12, 0x_1B, 0x_34, 0x_46,
		0x_08, 0x_71, 0x_28, 0x_58, 0x_D6, 0x_B0, 0x_E6, 0x_3F, 0x_55, 0x_8B, 0x_93, 0x_42, 0x_B6, 0x_18, 0x_25,
		0x_B3, 0x_AD, 0x_BA, 0x_A4, 0x_63, 0x_FD, 0x_86, 0x_2E, 0x_E5, 0x_6A, 0x_5A, 0x_64, 0x_C0, 0x_8C, 0x_94,
		0x_81, 0x_A1, 0x_02, 0x_6D, 0x_23, 0x_16, 0x_D1, 0x_92, 0x_39, 0x_01, 0x_EF, 0x_2C, 0x_CD, 0x_72, 0x_37,
		0x_6E, 0x_FF, 0x_78, 0x_75, 0x_CF, 0x_38, 0x_3E,
	];

	helper(S, BASE, -58_275);
}
// endregion
// region: s_has_minus_394_357_in_base_247
#[test]
fn s_has_minus_394_357_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_44, 0x_6A, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_C8, 0x_F8, 0x_19, 0x_16, 0x_61, 0x_44, 0x_29, 0x_55, 0x_F1, 0x_79, 0x_52, 0x_07, 0x_12, 0x_30,
		0x_E7, 0x_FB, 0x_54, 0x_8A, 0x_96, 0x_EC, 0x_EE, 0x_45, 0x_A8, 0x_5B, 0x_F0, 0x_25, 0x_A4, 0x_95, 0x_4A,
		0x_80, 0x_FF, 0x_B8, 0x_A2, 0x_F9, 0x_73, 0x_CB, 0x_C9, 0x_F2, 0x_C0, 0x_47, 0x_EB, 0x_B1, 0x_40, 0x_E5,
		0x_1C, 0x_23, 0x_14, 0x_06, 0x_2F, 0x_3A, 0x_6D, 0x_84, 0x_94, 0x_0F, 0x_74, 0x_81, 0x_57, 0x_66, 0x_E1,
		0x_B9, 0x_59, 0x_9C, 0x_A1, 0x_B7, 0x_67, 0x_1D, 0x_8C, 0x_68, 0x_48, 0x_C4, 0x_83, 0x_88, 0x_9B, 0x_D3,
		0x_FA, 0x_49, 0x_10, 0x_0E, 0x_04, 0x_28, 0x_C1, 0x_60, 0x_4B, 0x_BA, 0x_E9, 0x_DB, 0x_03, 0x_5E, 0x_50,
		0x_AE, 0x_D8, 0x_7B, 0x_37, 0x_BD, 0x_C2, 0x_2E, 0x_46, 0x_EF, 0x_AB, 0x_4C, 0x_A9, 0x_18, 0x_5A, 0x_76,
		0x_E2, 0x_1E, 0x_9A, 0x_E3, 0x_26, 0x_6B, 0x_D5, 0x_56, 0x_34, 0x_6A, 0x_85, 0x_3B, 0x_43, 0x_A7, 0x_5D,
		0x_8B, 0x_63, 0x_65, 0x_AC, 0x_5C, 0x_E0, 0x_BF, 0x_C6, 0x_97, 0x_8E, 0x_8D, 0x_1A, 0x_24, 0x_2C, 0x_7D,
		0x_9D, 0x_86, 0x_ED, 0x_72, 0x_B3, 0x_31, 0x_01, 0x_F6, 0x_02, 0x_35, 0x_7F, 0x_98, 0x_90, 0x_FC, 0x_6F,
		0x_13, 0x_7C, 0x_DD, 0x_BC, 0x_E6, 0x_89, 0x_E4, 0x_D2, 0x_D1, 0x_05, 0x_D6, 0x_42, 0x_4F, 0x_D4, 0x_B2,
		0x_1B, 0x_1F, 0x_F3, 0x_36, 0x_17, 0x_F7, 0x_64, 0x_58, 0x_3C, 0x_CA, 0x_4D, 0x_77, 0x_DC, 0x_3E, 0x_B5,
		0x_D7, 0x_CD, 0x_AA, 0x_BE, 0x_AD, 0x_3D, 0x_A6, 0x_4E, 0x_27, 0x_78, 0x_C7, 0x_93, 0x_EA, 0x_9F, 0x_8F,
		0x_FD, 0x_AF, 0x_DE, 0x_3F, 0x_7E, 0x_A0, 0x_CE, 0x_D0, 0x_82, 0x_9E, 0x_15, 0x_51, 0x_B0, 0x_6E, 0x_21,
		0x_E8, 0x_6C, 0x_FE, 0x_B4, 0x_A5, 0x_69, 0x_75, 0x_11, 0x_22, 0x_38, 0x_53, 0x_99, 0x_CF, 0x_DA, 0x_32,
		0x_71, 0x_92, 0x_39, 0x_08, 0x_B6, 0x_2A, 0x_91, 0x_DF, 0x_87, 0x_5F, 0x_BB, 0x_C3, 0x_F5, 0x_41, 0x_33,
		0x_CC, 0x_D9, 0x_A3, 0x_F4, 0x_7A, 0x_C5, 0x_70,
	];

	helper(S, BASE, -394_357);
}
// endregion
// region: s_has_minus_1_893_694_in_base_247
#[test]
fn s_has_minus_1_893_694_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_60, 0x_1F, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_BA, 0x_16, 0x_9F, 0x_8A, 0x_BB, 0x_F4, 0x_08, 0x_81, 0x_1F, 0x_77, 0x_E4, 0x_46, 0x_9B, 0x_FC,
		0x_6C, 0x_FA, 0x_57, 0x_27, 0x_0F, 0x_45, 0x_B3, 0x_E9, 0x_87, 0x_F9, 0x_72, 0x_A4, 0x_65, 0x_2F, 0x_25,
		0x_94, 0x_60, 0x_34, 0x_DA, 0x_A1, 0x_30, 0x_9A, 0x_D7, 0x_97, 0x_D4, 0x_89, 0x_E8, 0x_53, 0x_CA, 0x_13,
		0x_7B, 0x_CE, 0x_9E, 0x_ED, 0x_91, 0x_D1, 0x_07, 0x_92, 0x_CD, 0x_51, 0x_C3, 0x_96, 0x_05, 0x_36, 0x_EC,
		0x_AC, 0x_BD, 0x_2A, 0x_80, 0x_F8, 0x_F5, 0x_1D, 0x_85, 0x_5F, 0x_DD, 0x_35, 0x_C7, 0x_EA, 0x_DC, 0x_8E,
		0x_1C, 0x_B1, 0x_01, 0x_BF, 0x_C2, 0x_33, 0x_F0, 0x_50, 0x_AB, 0x_8D, 0x_D0, 0x_B4, 0x_28, 0x_C4, 0x_19,
		0x_93, 0x_D9, 0x_5C, 0x_3D, 0x_CB, 0x_43, 0x_10, 0x_75, 0x_5A, 0x_52, 0x_18, 0x_78, 0x_68, 0x_3A, 0x_E0,
		0x_E3, 0x_E1, 0x_AA, 0x_69, 0x_26, 0x_E2, 0x_C5, 0x_DB, 0x_82, 0x_37, 0x_FE, 0x_2E, 0x_4D, 0x_71, 0x_47,
		0x_B0, 0x_63, 0x_BC, 0x_8C, 0x_FF, 0x_84, 0x_4F, 0x_FB, 0x_70, 0x_4E, 0x_2C, 0x_04, 0x_8F, 0x_D5, 0x_F1,
		0x_76, 0x_DF, 0x_DE, 0x_7C, 0x_44, 0x_EF, 0x_7F, 0x_3B, 0x_41, 0x_B7, 0x_F2, 0x_58, 0x_C0, 0x_6F, 0x_A2,
		0x_A3, 0x_15, 0x_22, 0x_0E, 0x_7D, 0x_42, 0x_6B, 0x_AF, 0x_D6, 0x_67, 0x_66, 0x_21, 0x_3E, 0x_03, 0x_AE,
		0x_B6, 0x_C6, 0x_74, 0x_B2, 0x_FD, 0x_1A, 0x_B5, 0x_64, 0x_88, 0x_79, 0x_B9, 0x_CF, 0x_EB, 0x_9C, 0x_E7,
		0x_D8, 0x_11, 0x_29, 0x_5E, 0x_59, 0x_1B, 0x_C9, 0x_9D, 0x_95, 0x_AD, 0x_4A, 0x_40, 0x_12, 0x_06, 0x_62,
		0x_B8, 0x_5B, 0x_49, 0x_73, 0x_E6, 0x_A9, 0x_F3, 0x_7E, 0x_98, 0x_5D, 0x_14, 0x_4C, 0x_C1, 0x_61, 0x_54,
		0x_8B, 0x_A0, 0x_38, 0x_3F, 0x_A7, 0x_55, 0x_83, 0x_31, 0x_4B, 0x_24, 0x_3C, 0x_D3, 0x_6A, 0x_F7, 0x_32,
		0x_90, 0x_F6, 0x_A6, 0x_23, 0x_99, 0x_A5, 0x_6E, 0x_6D, 0x_E5, 0x_86, 0x_CC, 0x_BE, 0x_C8, 0x_02, 0x_56,
		0x_A8, 0x_D2, 0x_7A, 0x_48, 0x_17, 0x_39, 0x_1E,
	];

	helper(S, BASE, -1_893_694);
}
// endregion
// region: s_has_minus_13_988_330_in_base_247
#[test]
fn s_has_minus_13_988_330_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_A4, 0x_EF, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_89, 0x_BF, 0x_98, 0x_6D, 0x_BB, 0x_02, 0x_95, 0x_BC, 0x_71, 0x_72, 0x_E1, 0x_E3, 0x_FC, 0x_BA,
		0x_4A, 0x_6A, 0x_B0, 0x_E4, 0x_9A, 0x_63, 0x_2A, 0x_9E, 0x_36, 0x_A2, 0x_57, 0x_18, 0x_10, 0x_05, 0x_C4,
		0x_73, 0x_7A, 0x_8A, 0x_5F, 0x_8D, 0x_AE, 0x_84, 0x_2F, 0x_85, 0x_52, 0x_FD, 0x_75, 0x_F8, 0x_D9, 0x_F1,
		0x_03, 0x_E8, 0x_B7, 0x_C0, 0x_C9, 0x_9B, 0x_F5, 0x_7F, 0x_3D, 0x_21, 0x_AA, 0x_E6, 0x_F2, 0x_DA, 0x_AD,
		0x_0F, 0x_F0, 0x_CA, 0x_CF, 0x_BD, 0x_FE, 0x_8E, 0x_31, 0x_91, 0x_EF, 0x_E2, 0x_68, 0x_96, 0x_4C, 0x_DB,
		0x_01, 0x_6E, 0x_EA, 0x_FF, 0x_3B, 0x_94, 0x_F4, 0x_1B, 0x_B8, 0x_9F, 0x_3C, 0x_C8, 0x_04, 0x_16, 0x_DC,
		0x_93, 0x_4F, 0x_D6, 0x_7E, 0x_8F, 0x_83, 0x_97, 0x_6F, 0x_A0, 0x_F7, 0x_65, 0x_69, 0x_EE, 0x_CD, 0x_5E,
		0x_1C, 0x_E9, 0x_A5, 0x_64, 0x_47, 0x_28, 0x_5D, 0x_60, 0x_08, 0x_9C, 0x_D3, 0x_C5, 0x_92, 0x_5A, 0x_41,
		0x_1F, 0x_C2, 0x_D4, 0x_46, 0x_77, 0x_67, 0x_79, 0x_27, 0x_C6, 0x_D0, 0x_78, 0x_38, 0x_48, 0x_43, 0x_DF,
		0x_35, 0x_4B, 0x_33, 0x_CC, 0x_E7, 0x_82, 0x_50, 0x_22, 0x_B2, 0x_ED, 0x_4D, 0x_D2, 0x_3A, 0x_D8, 0x_81,
		0x_C1, 0x_12, 0x_23, 0x_F6, 0x_D5, 0x_B1, 0x_4E, 0x_61, 0x_06, 0x_2C, 0x_B5, 0x_76, 0x_66, 0x_44, 0x_F3,
		0x_7D, 0x_87, 0x_15, 0x_2E, 0x_DD, 0x_39, 0x_AB, 0x_A6, 0x_C3, 0x_58, 0x_3F, 0x_AC, 0x_49, 0x_17, 0x_1A,
		0x_24, 0x_99, 0x_CE, 0x_07, 0x_B9, 0x_0E, 0x_8B, 0x_B3, 0x_25, 0x_A8, 0x_13, 0x_74, 0x_5B, 0x_6C, 0x_40,
		0x_70, 0x_C7, 0x_11, 0x_56, 0x_AF, 0x_A9, 0x_EB, 0x_B4, 0x_62, 0x_3E, 0x_FB, 0x_E0, 0x_32, 0x_CB, 0x_90,
		0x_1E, 0x_42, 0x_D1, 0x_37, 0x_FA, 0x_9D, 0x_7B, 0x_BE, 0x_26, 0x_E5, 0x_34, 0x_6B, 0x_45, 0x_A1, 0x_30,
		0x_80, 0x_19, 0x_A7, 0x_A3, 0x_A4, 0x_D7, 0x_8C, 0x_14, 0x_7C, 0x_54, 0x_88, 0x_59, 0x_B6, 0x_51, 0x_F9,
		0x_55, 0x_DE, 0x_86, 0x_EC, 0x_53, 0x_5C, 0x_1D,
	];

	helper(S, BASE, -13_988_330);
}
// endregion
// region: s_has_minus_413_651_145_in_base_247
#[test]
fn s_has_minus_413_651_145_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_B2, 0x_13, 0x_A8, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_25, 0x_CA, 0x_04, 0x_02, 0x_50, 0x_94, 0x_79, 0x_76, 0x_4A, 0x_AE, 0x_8D, 0x_83, 0x_6A, 0x_5E,
		0x_73, 0x_28, 0x_08, 0x_72, 0x_C4, 0x_3E, 0x_2A, 0x_C2, 0x_9C, 0x_CD, 0x_F9, 0x_B8, 0x_B2, 0x_69, 0x_AB,
		0x_A2, 0x_B5, 0x_68, 0x_0F, 0x_E3, 0x_38, 0x_6E, 0x_BD, 0x_65, 0x_BC, 0x_A8, 0x_DC, 0x_15, 0x_B3, 0x_CB,
		0x_BA, 0x_F7, 0x_36, 0x_4E, 0x_DE, 0x_29, 0x_C3, 0x_3B, 0x_5F, 0x_32, 0x_30, 0x_1E, 0x_46, 0x_80, 0x_EA,
		0x_B6, 0x_9B, 0x_41, 0x_FD, 0x_F6, 0x_AD, 0x_22, 0x_49, 0x_A5, 0x_24, 0x_31, 0x_C0, 0x_1B, 0x_F3, 0x_E1,
		0x_55, 0x_99, 0x_E9, 0x_D3, 0x_01, 0x_CC, 0x_DF, 0x_77, 0x_87, 0x_51, 0x_D2, 0x_67, 0x_40, 0x_1C, 0x_37,
		0x_11, 0x_BF, 0x_12, 0x_10, 0x_9F, 0x_06, 0x_57, 0x_7C, 0x_44, 0x_03, 0x_70, 0x_D9, 0x_61, 0x_E7, 0x_FC,
		0x_4C, 0x_F0, 0x_B0, 0x_E4, 0x_F4, 0x_D1, 0x_13, 0x_7A, 0x_D4, 0x_8F, 0x_AF, 0x_C9, 0x_7F, 0x_A7, 0x_6F,
		0x_AC, 0x_81, 0x_9D, 0x_C7, 0x_8B, 0x_97, 0x_C6, 0x_D8, 0x_42, 0x_9E, 0x_A6, 0x_5B, 0x_78, 0x_39, 0x_2E,
		0x_B9, 0x_C5, 0x_F1, 0x_7E, 0x_23, 0x_EC, 0x_4D, 0x_1A, 0x_60, 0x_FE, 0x_A1, 0x_B7, 0x_43, 0x_16, 0x_5C,
		0x_DD, 0x_27, 0x_AA, 0x_90, 0x_17, 0x_E2, 0x_DA, 0x_4F, 0x_6B, 0x_26, 0x_2C, 0x_53, 0x_A0, 0x_92, 0x_4B,
		0x_ED, 0x_B4, 0x_FA, 0x_6C, 0x_71, 0x_96, 0x_EB, 0x_3A, 0x_FB, 0x_48, 0x_E0, 0x_95, 0x_18, 0x_7D, 0x_F5,
		0x_62, 0x_8E, 0x_05, 0x_9A, 0x_84, 0x_D7, 0x_66, 0x_BB, 0x_CF, 0x_93, 0x_CE, 0x_47, 0x_D0, 0x_52, 0x_86,
		0x_EE, 0x_58, 0x_2F, 0x_5D, 0x_EF, 0x_A3, 0x_82, 0x_D5, 0x_7B, 0x_56, 0x_C8, 0x_89, 0x_98, 0x_07, 0x_E6,
		0x_D6, 0x_8A, 0x_BE, 0x_91, 0x_75, 0x_A4, 0x_A9, 0x_14, 0x_1D, 0x_8C, 0x_DB, 0x_34, 0x_C1, 0x_3C, 0x_35,
		0x_59, 0x_E5, 0x_74, 0x_64, 0x_B1, 0x_6D, 0x_85, 0x_0E, 0x_63, 0x_88, 0x_1F, 0x_33, 0x_FF, 0x_19, 0x_3D,
		0x_54, 0x_45, 0x_5A, 0x_F8, 0x_F2, 0x_E8, 0x_21,
	];

	helper(S, BASE, -413_651_145);
}
// endregion
// region: s_has_whitespaces_and_minus_6_in_base_2
#[test]
fn s_has_whitespaces_and_minus_6_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_2D, 0x_57, 0x_57, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_57,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_whitespaces_and_minus_12_in_base_2
#[test]
fn s_has_whitespaces_and_minus_12_in_base_2() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0D,
		0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_2D, 0x_26, 0x_26, 0x_DE, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_26,
	];

	helper(S, BASE, -12);
}
// endregion
// region: s_has_whitespaces_and_minus_516_in_base_2
#[test]
fn s_has_whitespaces_and_minus_516_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_2D, 0x_F5, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB,
		0x_F5, 0x_AB, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_F5,
	];

	helper(S, BASE, -516);
}
// endregion
// region: s_has_whitespaces_and_minus_5_691_in_base_2
#[test]
fn s_has_whitespaces_and_minus_5_691_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_2D, 0x_3D, 0x_BC, 0x_3D, 0x_3D, 0x_BC, 0x_BC, 0x_BC, 0x_3D, 0x_3D,
		0x_3D, 0x_BC, 0x_3D, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_3D,
	];

	helper(S, BASE, -5_691);
}
// endregion
// region: s_has_whitespaces_and_minus_43_913_in_base_2
#[test]
fn s_has_whitespaces_and_minus_43_913_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_20,
		0x_20, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_2D, 0x_DD, 0x_9F,
		0x_DD, 0x_9F, 0x_DD, 0x_9F, 0x_DD, 0x_DD, 0x_DD, 0x_9F, 0x_9F, 0x_9F, 0x_DD, 0x_9F, 0x_9F, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_DD,
	];

	helper(S, BASE, -43_913);
}
// endregion
// region: s_has_whitespaces_and_minus_672_986_in_base_2
#[test]
fn s_has_whitespaces_and_minus_672_986_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_2D, 0x_29, 0x_7A, 0x_29, 0x_7A, 0x_7A,
		0x_29, 0x_7A, 0x_7A, 0x_7A, 0x_29, 0x_7A, 0x_7A, 0x_29, 0x_29, 0x_7A, 0x_29, 0x_29, 0x_7A, 0x_29, 0x_7A,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_29,
	];

	helper(S, BASE, -672_986);
}
// endregion
// region: s_has_whitespaces_and_minus_6_475_543_in_base_2
#[test]
fn s_has_whitespaces_and_minus_6_475_543_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_2D, 0x_F9,
		0x_F9, 0x_7D, 0x_7D, 0x_7D, 0x_F9, 0x_7D, 0x_F9, 0x_F9, 0x_7D, 0x_7D, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_7D,
		0x_7D, 0x_7D, 0x_F9, 0x_7D, 0x_F9, 0x_F9, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_7D, 0x_F9,
	];

	helper(S, BASE, -6_475_543);
}
// endregion
// region: s_has_whitespaces_and_minus_83_041_169_in_base_2
#[test]
fn s_has_whitespaces_and_minus_83_041_169_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0A,
		0x_0A, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_2D, 0x_65, 0x_A6, 0x_A6, 0x_65, 0x_65, 0x_65, 0x_65,
		0x_A6, 0x_A6, 0x_65, 0x_65, 0x_A6, 0x_A6, 0x_A6, 0x_65, 0x_65, 0x_A6, 0x_65, 0x_65, 0x_65, 0x_A6, 0x_A6,
		0x_65, 0x_A6, 0x_A6, 0x_A6, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_65,
	];

	helper(S, BASE, -83_041_169);
}
// endregion
// region: s_has_whitespaces_and_minus_893_576_714_in_base_2
#[test]
fn s_has_whitespaces_and_minus_893_576_714_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_09, 0x_09,
		0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0D,
		0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_2D, 0x_F9, 0x_F9, 0x_DB, 0x_F9, 0x_DB, 0x_F9, 0x_DB, 0x_F9, 0x_DB,
		0x_DB, 0x_DB, 0x_DB, 0x_F9, 0x_DB, 0x_F9, 0x_F9, 0x_F9, 0x_DB, 0x_DB, 0x_F9, 0x_F9, 0x_DB, 0x_DB, 0x_DB,
		0x_DB, 0x_DB, 0x_F9, 0x_DB, 0x_F9, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_F9,
	];

	helper(S, BASE, -893_576_714);
}
// endregion
// region: s_has_whitespaces_and_minus_8_in_base_3
#[test]
fn s_has_whitespaces_and_minus_8_in_base_3() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0C,
		0x_0C, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0D,
		0x_09, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_2D, 0x_6E, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_CB, 0x_6E,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_minus_63_in_base_3
#[test]
fn s_has_whitespaces_and_minus_63_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0C,
		0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_0C,
		0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_2D, 0x_E2, 0x_9A, 0x_A3, 0x_A3,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_9A, 0x_E2,
	];

	helper(S, BASE, -63);
}
// endregion
// region: s_has_whitespaces_and_minus_188_in_base_3
#[test]
fn s_has_whitespaces_and_minus_188_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_09,
		0x_20, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_20,
		0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_2D, 0x_69, 0x_7A, 0x_69, 0x_69, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_63, 0x_69,
	];

	helper(S, BASE, -188);
}
// endregion
// region: s_has_whitespaces_and_minus_3_250_in_base_3
#[test]
fn s_has_whitespaces_and_minus_3_250_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_20, 0x_2D, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_5A, 0x_DC, 0x_5A, 0x_DC,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_DC, 0x_06,
	];

	helper(S, BASE, -3_250);
}
// endregion
// region: s_has_whitespaces_and_minus_37_607_in_base_3
#[test]
fn s_has_whitespaces_and_minus_37_607_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_2D, 0x_69, 0x_58, 0x_58, 0x_B4, 0x_69, 0x_58, 0x_B4,
		0x_58, 0x_69, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_69, 0x_58,
	];

	helper(S, BASE, -37_607);
}
// endregion
// region: s_has_whitespaces_and_minus_506_953_in_base_3
#[test]
fn s_has_whitespaces_and_minus_506_953_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_0A,
		0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0A,
		0x_2D, 0x_14, 0x_14, 0x_E7, 0x_14, 0x_97, 0x_14, 0x_E7, 0x_97, 0x_14, 0x_97, 0x_97, 0x_E7,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_E7, 0x_14,
	];

	helper(S, BASE, -506_953);
}
// endregion
// region: s_has_whitespaces_and_minus_9_130_457_in_base_3
#[test]
fn s_has_whitespaces_and_minus_9_130_457_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_2D, 0x_7B, 0x_06, 0x_06, 0x_C3, 0x_7B, 0x_7B,
		0x_06, 0x_7B, 0x_06, 0x_7B, 0x_06, 0x_06, 0x_C3, 0x_C3, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_7B, 0x_06,
	];

	helper(S, BASE, -9_130_457);
}
// endregion
// region: s_has_whitespaces_and_minus_94_592_412_in_base_3
#[test]
fn s_has_whitespaces_and_minus_94_592_412_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_2D, 0x_D5, 0x_D2, 0x_78, 0x_D5, 0x_D2, 0x_D5,
		0x_D5, 0x_D5, 0x_D5, 0x_78, 0x_D2, 0x_78, 0x_D2, 0x_78, 0x_D5, 0x_D2, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_78, 0x_D5,
	];

	helper(S, BASE, -94_592_412);
}
// endregion
// region: s_has_whitespaces_and_minus_792_943_311_in_base_3
#[test]
fn s_has_whitespaces_and_minus_792_943_311_in_base_3() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_2D, 0x_E4, 0x_F1, 0x_F1, 0x_9C, 0x_F1, 0x_E4, 0x_9C, 0x_F1,
		0x_F1, 0x_9C, 0x_E4, 0x_F1, 0x_F1, 0x_E4, 0x_F1, 0x_9C, 0x_E4, 0x_9C, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_9C, 0x_E4,
	];

	helper(S, BASE, -792_943_311);
}
// endregion
// region: s_has_whitespaces_and_minus_4_in_base_5
#[test]
fn s_has_whitespaces_and_minus_4_in_base_5() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_20,
		0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0D,
		0x_2D, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_D0, 0x_F8, 0x_C8, 0x_21, 0x_22,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_whitespaces_and_minus_76_in_base_5
#[test]
fn s_has_whitespaces_and_minus_76_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_2D, 0x_61, 0x_85, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_79, 0x_6D, 0x_61, 0x_E9,
	];

	helper(S, BASE, -76);
}
// endregion
// region: s_has_whitespaces_and_minus_810_in_base_5
#[test]
fn s_has_whitespaces_and_minus_810_in_base_5() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_2D, 0x_70,
		0x_70, 0x_C7, 0x_C7, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_70, 0x_C7, 0x_06, 0x_C0,
	];

	helper(S, BASE, -810);
}
// endregion
// region: s_has_whitespaces_and_minus_3_585_in_base_5
#[test]
fn s_has_whitespaces_and_minus_3_585_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_09,
		0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_20,
		0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_2D, 0x_53, 0x_7F, 0x_E0, 0x_E0, 0x_35, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_7F, 0x_53, 0x_35, 0x_E0, 0x_33,
	];

	helper(S, BASE, -3_585);
}
// endregion
// region: s_has_whitespaces_and_minus_36_693_in_base_5
#[test]
fn s_has_whitespaces_and_minus_36_693_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0D,
		0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_2D, 0x_EE, 0x_32, 0x_E0, 0x_E0, 0x_EE, 0x_E0, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_32, 0x_EE, 0x_E0, 0x_9D,
	];

	helper(S, BASE, -36_693);
}
// endregion
// region: s_has_whitespaces_and_minus_500_429_in_base_5
#[test]
fn s_has_whitespaces_and_minus_500_429_in_base_5() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_2D, 0x_8B, 0x_8B,
		0x_21, 0x_73, 0x_73, 0x_6D, 0x_21, 0x_73, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_8B, 0x_21, 0x_6D, 0x_1B,
	];

	helper(S, BASE, -500_429);
}
// endregion
// region: s_has_whitespaces_and_minus_9_858_101_in_base_5
#[test]
fn s_has_whitespaces_and_minus_9_858_101_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_20,
		0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_09,
		0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_2D, 0x_EA, 0x_E4, 0x_E4,
		0x_EA, 0x_E4, 0x_A4, 0x_76, 0x_A4, 0x_A4, 0x_E4, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_EA, 0x_76, 0x_C1, 0x_A4,
	];

	helper(S, BASE, -9_858_101);
}
// endregion
// region: s_has_whitespaces_and_minus_67_654_832_in_base_5
#[test]
fn s_has_whitespaces_and_minus_67_654_832_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_09,
		0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_09,
		0x_2D, 0x_96, 0x_96, 0x_9B, 0x_63, 0x_B0, 0x_9B, 0x_9B, 0x_EB, 0x_63, 0x_63, 0x_96, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_96, 0x_EB, 0x_63, 0x_9B,
	];

	helper(S, BASE, -67_654_832);
}
// endregion
// region: s_has_whitespaces_and_minus_226_497_573_in_base_5
#[test]
fn s_has_whitespaces_and_minus_226_497_573_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_20,
		0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0D,
		0x_20, 0x_0D, 0x_0D, 0x_2D, 0x_6A, 0x_BA, 0x_FF, 0x_6A, 0x_6A, 0x_FF, 0x_6A, 0x_AD, 0x_FF, 0x_8F, 0x_6A,
		0x_BA,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_AD, 0x_8F, 0x_BA, 0x_6A,
	];

	helper(S, BASE, -226_497_573);
}
// endregion
// region: s_has_whitespaces_and_minus_8_in_base_7
#[test]
fn s_has_whitespaces_and_minus_8_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_09, 0x_0B,
		0x_0C, 0x_0D, 0x_2D, 0x_C6, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_C6, 0x_35, 0x_5B, 0x_56, 0x_06, 0x_4B,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_minus_35_in_base_7
#[test]
fn s_has_whitespaces_and_minus_35_in_base_7() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_0C,
		0x_0A, 0x_20, 0x_0D, 0x_09, 0x_2D, 0x_AC, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_7C, 0x_41, 0x_75, 0x_42, 0x_AC, 0x_1A,
	];

	helper(S, BASE, -35);
}
// endregion
// region: s_has_whitespaces_and_minus_956_in_base_7
#[test]
fn s_has_whitespaces_and_minus_956_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0C,
		0x_2D, 0x_91, 0x_98, 0x_3A, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_7D, 0x_8F, 0x_91, 0x_3A, 0x_D4, 0x_98, 0x_AA,
	];

	helper(S, BASE, -956);
}
// endregion
// region: s_has_whitespaces_and_minus_5_127_in_base_7
#[test]
fn s_has_whitespaces_and_minus_5_127_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0C,
		0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0A,
		0x_0D, 0x_2D, 0x_94, 0x_A9, 0x_57, 0x_6F, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_62, 0x_94, 0x_B0, 0x_6F, 0x_E5, 0x_57,
	];

	helper(S, BASE, -5_127);
}
// endregion
// region: s_has_whitespaces_and_minus_12_389_in_base_7
#[test]
fn s_has_whitespaces_and_minus_12_389_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_2D, 0x_4A, 0x_BB, 0x_E3, 0x_4A, 0x_F4,
	];
	const BASE: &[u8] = &[
		0x_E3, 0x_BB, 0x_C8, 0x_06, 0x_31, 0x_4A, 0x_F4,
	];

	helper(S, BASE, -12_389);
}
// endregion
// region: s_has_whitespaces_and_minus_700_025_in_base_7
#[test]
fn s_has_whitespaces_and_minus_700_025_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0C,
		0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0D,
		0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_2D, 0x_F8, 0x_B5, 0x_15, 0x_9F,
		0x_B5, 0x_D8, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_D8, 0x_6E, 0x_9F, 0x_15, 0x_F8, 0x_B5,
	];

	helper(S, BASE, -700_025);
}
// endregion
// region: s_has_whitespaces_and_minus_7_845_973_in_base_7
#[test]
fn s_has_whitespaces_and_minus_7_845_973_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_2D,
		0x_AE, 0x_24, 0x_B9, 0x_10, 0x_D7, 0x_D7, 0x_B9, 0x_3C, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_AE, 0x_24, 0x_B9, 0x_10, 0x_D7, 0x_3C,
	];

	helper(S, BASE, -7_845_973);
}
// endregion
// region: s_has_whitespaces_and_minus_32_055_907_in_base_7
#[test]
fn s_has_whitespaces_and_minus_32_055_907_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0D,
		0x_20, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_2D, 0x_8D, 0x_E3, 0x_B1, 0x_E3, 0x_60, 0x_25, 0x_E3, 0x_D6,
		0x_60,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_D6, 0x_60, 0x_E3, 0x_1C, 0x_8D, 0x_B1,
	];

	helper(S, BASE, -32_055_907);
}
// endregion
// region: s_has_whitespaces_and_minus_893_892_108_in_base_7
#[test]
fn s_has_whitespaces_and_minus_893_892_108_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_2D, 0x_9D, 0x_1E,
		0x_1E, 0x_E2, 0x_16, 0x_F9, 0x_C1, 0x_F9, 0x_9D, 0x_E2, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_1E, 0x_16, 0x_9D, 0x_C1, 0x_7A, 0x_F9,
	];

	helper(S, BASE, -893_892_108);
}
// endregion
// region: s_has_whitespaces_and_minus_9_in_base_11
#[test]
fn s_has_whitespaces_and_minus_9_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_20,
		0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0B,
		0x_20, 0x_0D, 0x_20, 0x_0C, 0x_2D, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_38, 0x_16, 0x_9D, 0x_C3, 0x_92, 0x_AF, 0x_05, 0x_3C, 0x_90, 0x_1D,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_whitespaces_and_minus_87_in_base_11
#[test]
fn s_has_whitespaces_and_minus_87_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_2D, 0x_AF, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_05, 0x_15, 0x_28, 0x_98, 0x_85, 0x_66, 0x_AF, 0x_DD, 0x_94, 0x_F7,
	];

	helper(S, BASE, -87);
}
// endregion
// region: s_has_whitespaces_and_minus_266_in_base_11
#[test]
fn s_has_whitespaces_and_minus_266_in_base_11() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_09,
		0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_2D, 0x_D9, 0x_D9, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_E5, 0x_D9, 0x_8B, 0x_48, 0x_6B, 0x_26, 0x_61, 0x_10, 0x_C0, 0x_CD,
	];

	helper(S, BASE, -266);
}
// endregion
// region: s_has_whitespaces_and_minus_7_781_in_base_11
#[test]
fn s_has_whitespaces_and_minus_7_781_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_09,
		0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_2D, 0x_89, 0x_E4, 0x_77, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_D0, 0x_5F, 0x_77, 0x_6F, 0x_89, 0x_81, 0x_44, 0x_66, 0x_E4, 0x_DE,
	];

	helper(S, BASE, -7_781);
}
// endregion
// region: s_has_whitespaces_and_minus_82_562_in_base_11
#[test]
fn s_has_whitespaces_and_minus_82_562_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_2D, 0x_21, 0x_D9, 0x_73, 0x_2A, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_18, 0x_4C, 0x_2A, 0x_FB, 0x_21, 0x_96, 0x_D9, 0x_86, 0x_4E, 0x_05,
	];

	helper(S, BASE, -82_562);
}
// endregion
// region: s_has_whitespaces_and_minus_743_580_in_base_11
#[test]
fn s_has_whitespaces_and_minus_743_580_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_2D, 0x_24,
		0x_A4, 0x_19, 0x_A7, 0x_7E, 0x_B9,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_67, 0x_B9, 0x_7E, 0x_24, 0x_B0, 0x_A4, 0x_A7, 0x_19, 0x_F3, 0x_F1,
	];

	helper(S, BASE, -743_580);
}
// endregion
// region: s_has_whitespaces_and_minus_7_869_400_in_base_11
#[test]
fn s_has_whitespaces_and_minus_7_869_400_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_0B,
		0x_20, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_2D, 0x_83,
		0x_83, 0x_D3, 0x_7C, 0x_83, 0x_83, 0x_A5,
	];
	const BASE: &[u8] = &[
		0x_A5, 0x_DF, 0x_28, 0x_8F, 0x_83, 0x_7C, 0x_F3, 0x_1E, 0x_68, 0x_D3, 0x_53,
	];

	helper(S, BASE, -7_869_400);
}
// endregion
// region: s_has_whitespaces_and_minus_63_132_353_in_base_11
#[test]
fn s_has_whitespaces_and_minus_63_132_353_in_base_11() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_2D,
		0x_2F, 0x_D7, 0x_93, 0x_51, 0x_51, 0x_D7, 0x_79, 0x_AC,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_D4, 0x_D7, 0x_2F, 0x_77, 0x_D0, 0x_14, 0x_93, 0x_75, 0x_AC, 0x_79,
	];

	helper(S, BASE, -63_132_353);
}
// endregion
// region: s_has_whitespaces_and_minus_132_022_299_in_base_11
#[test]
fn s_has_whitespaces_and_minus_132_022_299_in_base_11() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0C,
		0x_0C, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_20, 0x_2D, 0x_8E,
		0x_B2, 0x_66, 0x_B2, 0x_26, 0x_26, 0x_17, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_D0, 0x_C3, 0x_DE, 0x_26, 0x_17, 0x_66, 0x_8E, 0x_3A, 0x_B2, 0x_BA, 0x_88,
	];

	helper(S, BASE, -132_022_299);
}
// endregion
// region: s_has_whitespaces_and_minus_9_in_base_13
#[test]
fn s_has_whitespaces_and_minus_9_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_2D,
		0x_C6,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_BE, 0x_F9, 0x_8C, 0x_C7, 0x_11, 0x_74, 0x_F6, 0x_F7, 0x_C6, 0x_C1, 0x_2A, 0x_F0,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_whitespaces_and_minus_48_in_base_13
#[test]
fn s_has_whitespaces_and_minus_48_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0B,
		0x_09, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0B,
		0x_0D, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_2D, 0x_97, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_35, 0x_AF, 0x_97, 0x_85, 0x_E3, 0x_D4, 0x_54, 0x_14, 0x_D0, 0x_CF, 0x_67, 0x_69,
	];

	helper(S, BASE, -48);
}
// endregion
// region: s_has_whitespaces_and_minus_855_in_base_13
#[test]
fn s_has_whitespaces_and_minus_855_in_base_13() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0B,
		0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_2D, 0x_92,
		0x_81, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_81, 0x_CB, 0x_6B, 0x_CF, 0x_B4, 0x_92, 0x_50, 0x_60, 0x_ED, 0x_BB, 0x_33, 0x_47, 0x_29,
	];

	helper(S, BASE, -855);
}
// endregion
// region: s_has_whitespaces_and_minus_3_140_in_base_13
#[test]
fn s_has_whitespaces_and_minus_3_140_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_2D, 0x_8F,
		0x_29, 0x_AF, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_8F, 0x_35, 0x_41, 0x_5E, 0x_29, 0x_C7, 0x_AF, 0x_FE, 0x_6D, 0x_7E, 0x_D4, 0x_C3,
	];

	helper(S, BASE, -3_140);
}
// endregion
// region: s_has_whitespaces_and_minus_96_716_in_base_13
#[test]
fn s_has_whitespaces_and_minus_96_716_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0C,
		0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_2D, 0x_DB, 0x_A6,
		0x_E0, 0x_DB, 0x_85,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_83, 0x_1E, 0x_DB, 0x_1C, 0x_A6, 0x_A8, 0x_B1, 0x_4E, 0x_85, 0x_E7, 0x_08, 0x_AB,
	];

	helper(S, BASE, -96_716);
}
// endregion
// region: s_has_whitespaces_and_minus_423_980_in_base_13
#[test]
fn s_has_whitespaces_and_minus_423_980_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_2D, 0x_CA, 0x_CA, 0x_56, 0x_7F, 0x_7B, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_CA, 0x_62, 0x_C2, 0x_C6, 0x_BB, 0x_1A, 0x_3A, 0x_11, 0x_7B, 0x_56, 0x_D0, 0x_7F,
	];

	helper(S, BASE, -423_980);
}
// endregion
// region: s_has_whitespaces_and_minus_8_788_980_in_base_13
#[test]
fn s_has_whitespaces_and_minus_8_788_980_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_09,
		0x_0A, 0x_0B, 0x_2D, 0x_AD, 0x_FE, 0x_2F, 0x_54, 0x_D1, 0x_FE, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_AD, 0x_98, 0x_F5, 0x_53, 0x_D1, 0x_BB, 0x_65, 0x_2F, 0x_54, 0x_FE, 0x_FA, 0x_73,
	];

	helper(S, BASE, -8_788_980);
}
// endregion
// region: s_has_whitespaces_and_minus_18_155_447_in_base_13
#[test]
fn s_has_whitespaces_and_minus_18_155_447_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_2D, 0x_7E, 0x_5C, 0x_AB,
		0x_3D, 0x_5C, 0x_3D, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_4D, 0x_73, 0x_0E, 0x_7E, 0x_1D, 0x_95, 0x_83, 0x_98, 0x_3D, 0x_5C, 0x_11, 0x_AB, 0x_17,
	];

	helper(S, BASE, -18_155_447);
}
// endregion
// region: s_has_whitespaces_and_minus_427_859_783_in_base_13
#[test]
fn s_has_whitespaces_and_minus_427_859_783_in_base_13() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_20,
		0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_2D, 0x_9F, 0x_A1, 0x_BF, 0x_5A, 0x_91, 0x_53, 0x_13,
		0x_1A,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_77, 0x_D5, 0x_53, 0x_5A, 0x_05, 0x_9F, 0x_91, 0x_BF, 0x_13, 0x_A1, 0x_BB, 0x_D6,
	];

	helper(S, BASE, -427_859_783);
}
// endregion
// region: s_has_whitespaces_and_minus_3_in_base_19
#[test]
fn s_has_whitespaces_and_minus_3_in_base_19() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0A,
		0x_09, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_20,
		0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_2D, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_36, 0x_14, 0x_15, 0x_D1, 0x_B3, 0x_6E, 0x_83, 0x_96, 0x_30, 0x_82, 0x_F4, 0x_2E, 0x_68, 0x_37,
		0x_BD, 0x_4B, 0x_C7, 0x_F3,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_minus_91_in_base_19
#[test]
fn s_has_whitespaces_and_minus_91_in_base_19() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0A,
		0x_0B, 0x_2D, 0x_54, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_52, 0x_D2, 0x_21, 0x_54, 0x_C6, 0x_6E, 0x_D3, 0x_FE, 0x_34, 0x_51, 0x_3C, 0x_E8, 0x_CA, 0x_A4,
		0x_DB, 0x_E3, 0x_45, 0x_BD,
	];

	helper(S, BASE, -91);
}
// endregion
// region: s_has_whitespaces_and_minus_709_in_base_19
#[test]
fn s_has_whitespaces_and_minus_709_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0B,
		0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_2D,
		0x_EF, 0x_5B, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_EF, 0x_13, 0x_F7, 0x_91, 0x_D6, 0x_CB, 0x_C6, 0x_B7, 0x_F6, 0x_81, 0x_F8, 0x_93, 0x_B0, 0x_B8,
		0x_B5, 0x_39, 0x_84, 0x_5B,
	];

	helper(S, BASE, -709);
}
// endregion
// region: s_has_whitespaces_and_minus_2_082_in_base_19
#[test]
fn s_has_whitespaces_and_minus_2_082_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_2D, 0x_B0, 0x_66, 0x_7D,
	];
	const BASE: &[u8] = &[
		0x_D1, 0x_02, 0x_5A, 0x_76, 0x_8F, 0x_B0, 0x_38, 0x_73, 0x_D8, 0x_D4, 0x_EE, 0x_7D, 0x_84, 0x_8D, 0x_66,
		0x_80, 0x_AE, 0x_D7, 0x_FB,
	];

	helper(S, BASE, -2_082);
}
// endregion
// region: s_has_whitespaces_and_minus_49_944_in_base_19
#[test]
fn s_has_whitespaces_and_minus_49_944_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0A,
		0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0D,
		0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_2D, 0x_96, 0x_98, 0x_0F, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_F3, 0x_B7, 0x_6C, 0x_B6, 0x_63, 0x_98, 0x_0F, 0x_96, 0x_40, 0x_F5, 0x_C5, 0x_34, 0x_71, 0x_56, 0x_36,
		0x_A1, 0x_4B, 0x_11, 0x_4C,
	];

	helper(S, BASE, -49_944);
}
// endregion
// region: s_has_whitespaces_and_minus_296_938_in_base_19
#[test]
fn s_has_whitespaces_and_minus_296_938_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_2D, 0x_E5, 0x_41, 0x_41, 0x_22,
		0x_AE,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_37, 0x_E5, 0x_61, 0x_F1, 0x_41, 0x_AE, 0x_87, 0x_C3, 0x_B1, 0x_22, 0x_97, 0x_68, 0x_3D, 0x_8A,
		0x_07, 0x_2C, 0x_59, 0x_D6,
	];

	helper(S, BASE, -296_938);
}
// endregion
// region: s_has_whitespaces_and_minus_3_246_483_in_base_19
#[test]
fn s_has_whitespaces_and_minus_3_246_483_in_base_19() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_20,
		0x_2D, 0x_F8, 0x_41, 0x_07, 0x_81, 0x_CD, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_CD, 0x_F8, 0x_4F, 0x_1B, 0x_48, 0x_41, 0x_81, 0x_B2, 0x_27, 0x_47, 0x_CC, 0x_F7, 0x_1A, 0x_FE, 0x_A0,
		0x_0F, 0x_EE, 0x_07, 0x_F0,
	];

	helper(S, BASE, -3_246_483);
}
// endregion
// region: s_has_whitespaces_and_minus_21_231_933_in_base_19
#[test]
fn s_has_whitespaces_and_minus_21_231_933_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0A,
		0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_2D, 0x_68, 0x_17, 0x_0E, 0x_62, 0x_E8, 0x_77,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_CA, 0x_8A, 0x_77, 0x_E8, 0x_39, 0x_82, 0x_73, 0x_68, 0x_62, 0x_17, 0x_B7, 0x_C2, 0x_D5, 0x_50,
		0x_BD, 0x_A8, 0x_0E, 0x_66,
	];

	helper(S, BASE, -21_231_933);
}
// endregion
// region: s_has_whitespaces_and_minus_986_718_256_in_base_19
#[test]
fn s_has_whitespaces_and_minus_986_718_256_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0A,
		0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_09,
		0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_2D, 0x_4C, 0x_4C, 0x_11,
		0x_93, 0x_22, 0x_22, 0x_4E, 0x_AC,
	];
	const BASE: &[u8] = &[
		0x_F3, 0x_4C, 0x_4A, 0x_43, 0x_EC, 0x_48, 0x_D9, 0x_BC, 0x_22, 0x_93, 0x_4E, 0x_74, 0x_A5, 0x_5B, 0x_4B,
		0x_AC, 0x_A0, 0x_82, 0x_11,
	];

	helper(S, BASE, -986_718_256);
}
// endregion
// region: s_has_whitespaces_and_minus_2_in_base_42
#[test]
fn s_has_whitespaces_and_minus_2_in_base_42() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_20, 0x_09,
		0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_09,
		0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_2D, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_B2, 0x_A0, 0x_D8, 0x_9E, 0x_6C, 0x_40, 0x_AE, 0x_E9, 0x_B5, 0x_E2, 0x_56, 0x_8C, 0x_C2, 0x_6D,
		0x_46, 0x_95, 0x_6F, 0x_71, 0x_84, 0x_28, 0x_08, 0x_4E, 0x_59, 0x_5C, 0x_06, 0x_DB, 0x_B9, 0x_F0, 0x_4B,
		0x_39, 0x_7B, 0x_DF, 0x_EF, 0x_73, 0x_82, 0x_96, 0x_A4, 0x_FD, 0x_3E, 0x_7F, 0x_4F,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_whitespaces_and_minus_20_in_base_42
#[test]
fn s_has_whitespaces_and_minus_20_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0D,
		0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0B,
		0x_0C, 0x_2D, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_BE, 0x_40, 0x_A6, 0x_DF, 0x_5C, 0x_9D, 0x_CC, 0x_48, 0x_C7, 0x_BC, 0x_C0, 0x_3D, 0x_84, 0x_1B,
		0x_92, 0x_AC, 0x_FA, 0x_76, 0x_21, 0x_10, 0x_A4, 0x_B4, 0x_37, 0x_58, 0x_65, 0x_B1, 0x_8D, 0x_2F, 0x_B5,
		0x_50, 0x_5F, 0x_43, 0x_C9, 0x_05, 0x_C2, 0x_36, 0x_79, 0x_2A, 0x_4C, 0x_B9, 0x_3B,
	];

	helper(S, BASE, -20);
}
// endregion
// region: s_has_whitespaces_and_minus_444_in_base_42
#[test]
fn s_has_whitespaces_and_minus_444_in_base_42() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0B,
		0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_2D, 0x_8C,
		0x_F3,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_E2, 0x_6F, 0x_A0, 0x_61, 0x_B3, 0x_39, 0x_30, 0x_A9, 0x_21, 0x_8C, 0x_45, 0x_D5, 0x_A5, 0x_2C,
		0x_05, 0x_9B, 0x_88, 0x_7F, 0x_F1, 0x_3C, 0x_EF, 0x_B5, 0x_74, 0x_F3, 0x_7C, 0x_6A, 0x_1B, 0x_34, 0x_80,
		0x_C1, 0x_EE, 0x_49, 0x_A1, 0x_B1, 0x_9F, 0x_FE, 0x_94, 0x_EA, 0x_92, 0x_C7, 0x_19,
	];

	helper(S, BASE, -444);
}
// endregion
// region: s_has_whitespaces_and_minus_3_176_in_base_42
#[test]
fn s_has_whitespaces_and_minus_3_176_in_base_42() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0B,
		0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_2D, 0x_B4, 0x_29, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_B4, 0x_B6, 0x_66, 0x_9C, 0x_4A, 0x_3D, 0x_32, 0x_51, 0x_8C, 0x_94, 0x_6C, 0x_FC, 0x_C9, 0x_42,
		0x_37, 0x_A2, 0x_DA, 0x_96, 0x_7E, 0x_9A, 0x_DE, 0x_8B, 0x_44, 0x_F6, 0x_70, 0x_C2, 0x_A9, 0x_D8, 0x_58,
		0x_D7, 0x_D0, 0x_97, 0x_29, 0x_9E, 0x_81, 0x_05, 0x_C3, 0x_DC, 0x_E4, 0x_9F, 0x_06,
	];

	helper(S, BASE, -3_176);
}
// endregion
// region: s_has_whitespaces_and_minus_14_827_in_base_42
#[test]
fn s_has_whitespaces_and_minus_14_827_in_base_42() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_20,
		0x_0B, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_2D, 0x_87, 0x_EC, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_14, 0x_DD, 0x_3C, 0x_EF, 0x_8E, 0x_93, 0x_16, 0x_87, 0x_95, 0x_43, 0x_BD, 0x_7F, 0x_A6, 0x_60,
		0x_F4, 0x_29, 0x_EC, 0x_52, 0x_3F, 0x_10, 0x_84, 0x_21, 0x_9E, 0x_D2, 0x_2C, 0x_DC, 0x_3E, 0x_62, 0x_4B,
		0x_41, 0x_C2, 0x_46, 0x_AE, 0x_98, 0x_90, 0x_1B, 0x_48, 0x_D5, 0x_BC, 0x_32, 0x_80,
	];

	helper(S, BASE, -14_827);
}
// endregion
// region: s_has_whitespaces_and_minus_943_928_in_base_42
#[test]
fn s_has_whitespaces_and_minus_943_928_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0B,
		0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_0A,
		0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_2D, 0x_C8, 0x_1C,
		0x_8F, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_6D, 0x_5A, 0x_BE, 0x_8F, 0x_71, 0x_C6, 0x_90, 0x_7B, 0x_4F, 0x_85, 0x_D1, 0x_C8, 0x_8B, 0x_07,
		0x_E4, 0x_C4, 0x_F5, 0x_E1, 0x_78, 0x_82, 0x_53, 0x_FF, 0x_A3, 0x_3B, 0x_0E, 0x_14, 0x_73, 0x_35, 0x_60,
		0x_96, 0x_1C, 0x_17, 0x_95, 0x_29, 0x_61, 0x_F6, 0x_D8, 0x_B6, 0x_A8, 0x_5B, 0x_DB,
	];

	helper(S, BASE, -943_928);
}
// endregion
// region: s_has_whitespaces_and_minus_8_893_717_in_base_42
#[test]
fn s_has_whitespaces_and_minus_8_893_717_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_09,
		0x_20, 0x_09, 0x_20, 0x_2D, 0x_B1, 0x_D0, 0x_7E, 0x_7D, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_7E, 0x_B1, 0x_05, 0x_6A, 0x_78, 0x_32, 0x_E9, 0x_C9, 0x_33, 0x_EC, 0x_07, 0x_4F, 0x_85, 0x_59,
		0x_80, 0x_5D, 0x_A1, 0x_C1, 0x_21, 0x_FA, 0x_7B, 0x_D9, 0x_BA, 0x_98, 0x_9B, 0x_9A, 0x_41, 0x_38, 0x_D8,
		0x_26, 0x_E3, 0x_69, 0x_7D, 0x_7F, 0x_A3, 0x_D0, 0x_72, 0x_BB, 0x_35, 0x_56, 0x_11,
	];

	helper(S, BASE, -8_893_717);
}
// endregion
// region: s_has_whitespaces_and_minus_48_055_276_in_base_42
#[test]
fn s_has_whitespaces_and_minus_48_055_276_in_base_42() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0D,
		0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_20,
		0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_2D, 0x_B5, 0x_3A, 0x_50, 0x_F1, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_D0, 0x_D9, 0x_9D, 0x_08, 0x_C9, 0x_A7, 0x_D5, 0x_77, 0x_54, 0x_F1, 0x_31, 0x_C5, 0x_C1, 0x_90, 0x_27,
		0x_B5, 0x_19, 0x_E6, 0x_3A, 0x_FC, 0x_89, 0x_C2, 0x_79, 0x_D8, 0x_57, 0x_5E, 0x_50, 0x_D3, 0x_F7, 0x_26,
		0x_4F, 0x_25, 0x_EE, 0x_E8, 0x_DF, 0x_12, 0x_9B, 0x_D1, 0x_03, 0x_36, 0x_BF, 0x_60,
	];

	helper(S, BASE, -48_055_276);
}
// endregion
// region: s_has_whitespaces_and_minus_415_153_063_in_base_42
#[test]
fn s_has_whitespaces_and_minus_415_153_063_in_base_42() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0B,
		0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_2D, 0x_62, 0x_B0, 0x_C0, 0x_38, 0x_97,
		0x_52,
	];
	const BASE: &[u8] = &[
		0x_9D, 0x_D2, 0x_ED, 0x_62, 0x_F5, 0x_E6, 0x_49, 0x_B0, 0x_C2, 0x_B9, 0x_BF, 0x_2E, 0x_27, 0x_98, 0x_AD,
		0x_7D, 0x_4E, 0x_C0, 0x_74, 0x_28, 0x_23, 0x_38, 0x_97, 0x_A2, 0x_1D, 0x_53, 0x_CF, 0x_82, 0x_48, 0x_22,
		0x_8D, 0x_52, 0x_FE, 0x_D5, 0x_AB, 0x_B7, 0x_D4, 0x_85, 0x_24, 0x_5F, 0x_E1, 0x_BA,
	];

	helper(S, BASE, -415_153_063);
}
// endregion
// region: s_has_whitespaces_and_minus_6_in_base_73
#[test]
fn s_has_whitespaces_and_minus_6_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_2D, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_86, 0x_F4, 0x_41, 0x_FF, 0x_47, 0x_C6, 0x_E3, 0x_3E, 0x_FC, 0x_EA, 0x_4D, 0x_16, 0x_71, 0x_CE,
		0x_CA, 0x_73, 0x_E8, 0x_A4, 0x_78, 0x_82, 0x_A5, 0x_5F, 0x_3F, 0x_2E, 0x_E1, 0x_67, 0x_A2, 0x_96, 0x_97,
		0x_84, 0x_9D, 0x_51, 0x_31, 0x_79, 0x_38, 0x_9A, 0x_C9, 0x_61, 0x_02, 0x_40, 0x_77, 0x_1E, 0x_2C, 0x_8B,
		0x_8F, 0x_F1, 0x_6D, 0x_A3, 0x_A7, 0x_94, 0x_A6, 0x_91, 0x_9B, 0x_6C, 0x_AF, 0x_2F, 0x_B5, 0x_FA, 0x_B9,
		0x_7B, 0x_6B, 0x_5A, 0x_50, 0x_07, 0x_F0, 0x_12, 0x_DB, 0x_13, 0x_7F, 0x_E6, 0x_27, 0x_D9,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_whitespaces_and_minus_12_in_base_73
#[test]
fn s_has_whitespaces_and_minus_12_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_20, 0x_2D, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_3D, 0x_69, 0x_76, 0x_18, 0x_F4, 0x_E4, 0x_CC, 0x_95, 0x_9A, 0x_22, 0x_04, 0x_8F, 0x_2F, 0x_9B,
		0x_4A, 0x_56, 0x_A4, 0x_78, 0x_74, 0x_C3, 0x_B0, 0x_B6, 0x_3C, 0x_90, 0x_A5, 0x_CE, 0x_B8, 0x_FA, 0x_93,
		0x_9C, 0x_19, 0x_40, 0x_EE, 0x_1C, 0x_C1, 0x_54, 0x_BE, 0x_44, 0x_DB, 0x_A3, 0x_6D, 0x_D5, 0x_51, 0x_94,
		0x_47, 0x_A6, 0x_D1, 0x_85, 0x_BF, 0x_DC, 0x_2C, 0x_A7, 0x_64, 0x_7E, 0x_E6, 0x_7D, 0x_C2, 0x_37, 0x_21,
		0x_36, 0x_A0, 0x_8E, 0x_92, 0x_24, 0x_F6, 0x_F3, 0x_07, 0x_2E, 0x_84, 0x_57, 0x_4D, 0x_FD,
	];

	helper(S, BASE, -12);
}
// endregion
// region: s_has_whitespaces_and_minus_991_in_base_73
#[test]
fn s_has_whitespaces_and_minus_991_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_0D,
		0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_2D, 0x_C3, 0x_4D,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_12, 0x_58, 0x_03, 0x_60, 0x_47, 0x_E9, 0x_CC, 0x_E3, 0x_BB, 0x_E6, 0x_D5, 0x_81, 0x_C3, 0x_BE,
		0x_2E, 0x_46, 0x_38, 0x_48, 0x_8F, 0x_F6, 0x_AE, 0x_D2, 0x_FE, 0x_7C, 0x_93, 0x_28, 0x_40, 0x_BA, 0x_77,
		0x_A0, 0x_06, 0x_ED, 0x_AA, 0x_24, 0x_6B, 0x_96, 0x_F8, 0x_17, 0x_62, 0x_44, 0x_3A, 0x_4D, 0x_E5, 0x_4A,
		0x_99, 0x_D6, 0x_79, 0x_A8, 0x_FC, 0x_61, 0x_D9, 0x_39, 0x_23, 0x_51, 0x_5C, 0x_2C, 0x_1F, 0x_84, 0x_97,
		0x_BF, 0x_27, 0x_2A, 0x_55, 0x_73, 0x_A6, 0x_34, 0x_4E, 0x_36, 0x_54, 0x_35, 0x_C9, 0x_90,
	];

	helper(S, BASE, -991);
}
// endregion
// region: s_has_whitespaces_and_minus_3_283_in_base_73
#[test]
fn s_has_whitespaces_and_minus_3_283_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0C,
		0x_09, 0x_0B, 0x_2D, 0x_E7, 0x_CE,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_7B, 0x_03, 0x_31, 0x_27, 0x_77, 0x_C7, 0x_C5, 0x_B8, 0x_4E, 0x_79, 0x_14, 0x_32, 0x_E9, 0x_3E,
		0x_CC, 0x_45, 0x_25, 0x_22, 0x_AB, 0x_30, 0x_92, 0x_A1, 0x_76, 0x_66, 0x_FE, 0x_E3, 0x_C6, 0x_81, 0x_29,
		0x_5E, 0x_3D, 0x_D5, 0x_42, 0x_38, 0x_10, 0x_E5, 0x_AA, 0x_6D, 0x_6E, 0x_B0, 0x_3C, 0x_37, 0x_5A, 0x_E7,
		0x_90, 0x_93, 0x_68, 0x_4F, 0x_7E, 0x_48, 0x_59, 0x_F2, 0x_FD, 0x_24, 0x_75, 0x_46, 0x_23, 0x_69, 0x_89,
		0x_CD, 0x_52, 0x_8B, 0x_D3, 0x_A4, 0x_5D, 0x_FC, 0x_B7, 0x_6C, 0x_FF, 0x_F0, 0x_CE, 0x_4D,
	];

	helper(S, BASE, -3_283);
}
// endregion
// region: s_has_whitespaces_and_minus_89_348_in_base_73
#[test]
fn s_has_whitespaces_and_minus_89_348_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_09,
		0x_0C, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0A,
		0x_09, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_2D, 0x_16, 0x_ED, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_17, 0x_79, 0x_CD, 0x_44, 0x_38, 0x_B7, 0x_D7, 0x_8C, 0x_DF, 0x_CA, 0x_8D, 0x_39, 0x_CF, 0x_E5,
		0x_53, 0x_16, 0x_0F, 0x_F6, 0x_3D, 0x_4E, 0x_B6, 0x_F5, 0x_E2, 0x_A4, 0x_70, 0x_7A, 0x_B9, 0x_74, 0x_59,
		0x_EE, 0x_EA, 0x_D4, 0x_77, 0x_AA, 0x_C2, 0x_41, 0x_EB, 0x_82, 0x_BE, 0x_1F, 0x_80, 0x_E8, 0x_1D, 0x_63,
		0x_A6, 0x_9C, 0x_14, 0x_99, 0x_10, 0x_27, 0x_D5, 0x_0E, 0x_5B, 0x_8F, 0x_ED, 0x_B8, 0x_37, 0x_E7, 0x_55,
		0x_DD, 0x_87, 0x_3F, 0x_4A, 0x_BA, 0x_D2, 0x_85, 0x_76, 0x_93, 0x_60, 0x_E6, 0x_EC, 0x_71,
	];

	helper(S, BASE, -89_348);
}
// endregion
// region: s_has_whitespaces_and_minus_696_557_in_base_73
#[test]
fn s_has_whitespaces_and_minus_696_557_in_base_73() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_09,
		0x_09, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0D,
		0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_2D, 0x_89, 0x_5C, 0x_69,
		0x_21,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_89, 0x_07, 0x_44, 0x_43, 0x_91, 0x_5D, 0x_96, 0x_79, 0x_75, 0x_53, 0x_7C, 0x_11, 0x_65, 0x_E8,
		0x_F7, 0x_4E, 0x_82, 0x_0F, 0x_EF, 0x_F0, 0x_08, 0x_55, 0x_77, 0x_30, 0x_5A, 0x_D4, 0x_B4, 0x_6C, 0x_16,
		0x_B1, 0x_F1, 0x_B5, 0x_36, 0x_4F, 0x_40, 0x_6A, 0x_57, 0x_23, 0x_C6, 0x_CF, 0x_1A, 0x_1E, 0x_FE, 0x_D6,
		0x_DB, 0x_26, 0x_2F, 0x_4A, 0x_27, 0x_17, 0x_69, 0x_DF, 0x_1C, 0x_BF, 0x_C1, 0x_CB, 0x_5C, 0x_F9, 0x_AD,
		0x_35, 0x_84, 0x_ED, 0x_34, 0x_21, 0x_24, 0x_EA, 0x_92, 0x_C4, 0x_60, 0x_FC, 0x_CC, 0x_03,
	];

	helper(S, BASE, -696_557);
}
// endregion
// region: s_has_whitespaces_and_minus_8_300_510_in_base_73
#[test]
fn s_has_whitespaces_and_minus_8_300_510_in_base_73() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_0A,
		0x_20, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0A,
		0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_2D, 0x_45, 0x_30, 0x_BF, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_34, 0x_77, 0x_6C, 0x_9F, 0x_B4, 0x_D8, 0x_D1, 0x_48, 0x_71, 0x_F8, 0x_D3, 0x_DE, 0x_8B, 0x_4E,
		0x_FE, 0x_04, 0x_C8, 0x_4C, 0x_69, 0x_5C, 0x_45, 0x_7A, 0x_02, 0x_30, 0x_0E, 0x_9E, 0x_6D, 0x_C6, 0x_E2,
		0x_98, 0x_35, 0x_8A, 0x_8F, 0x_8D, 0x_66, 0x_E5, 0x_D2, 0x_EE, 0x_87, 0x_AB, 0x_5E, 0x_95, 0x_B0, 0x_BF,
		0x_52, 0x_88, 0x_50, 0x_B2, 0x_EA, 0x_76, 0x_16, 0x_AD, 0x_06, 0x_F6, 0x_4F, 0x_21, 0x_D4, 0x_5B, 0x_3C,
		0x_9C, 0x_BB, 0x_26, 0x_BD, 0x_F9, 0x_07, 0x_EF, 0x_78, 0x_64, 0x_D7, 0x_E8, 0x_75, 0x_A7,
	];

	helper(S, BASE, -8_300_510);
}
// endregion
// region: s_has_whitespaces_and_minus_93_974_632_in_base_73
#[test]
fn s_has_whitespaces_and_minus_93_974_632_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0B,
		0x_0A, 0x_0A, 0x_20, 0x_2D, 0x_07, 0x_FA, 0x_A7, 0x_A7, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_22, 0x_97, 0x_07, 0x_CA, 0x_E8, 0x_56, 0x_D6, 0x_2C, 0x_E5, 0x_F8, 0x_1D, 0x_31, 0x_89, 0x_E4,
		0x_96, 0x_41, 0x_4F, 0x_54, 0x_82, 0x_2E, 0x_13, 0x_FA, 0x_4E, 0x_C8, 0x_49, 0x_37, 0x_8C, 0x_CB, 0x_AC,
		0x_FF, 0x_BD, 0x_BC, 0x_03, 0x_12, 0x_76, 0x_D2, 0x_EB, 0x_2F, 0x_B5, 0x_4A, 0x_A7, 0x_15, 0x_B4, 0x_5F,
		0x_AF, 0x_34, 0x_A1, 0x_EE, 0x_02, 0x_28, 0x_E0, 0x_3D, 0x_DE, 0x_83, 0x_74, 0x_88, 0x_19, 0x_CC, 0x_70,
		0x_D7, 0x_C4, 0x_77, 0x_08, 0x_79, 0x_C6, 0x_50, 0x_4C, 0x_B1, 0x_92, 0x_E9, 0x_86, 0x_AD,
	];

	helper(S, BASE, -93_974_632);
}
// endregion
// region: s_has_whitespaces_and_minus_376_786_044_in_base_73
#[test]
fn s_has_whitespaces_and_minus_376_786_044_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_09,
		0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_2D, 0x_9F, 0x_58, 0x_1E, 0x_65, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_78, 0x_F2, 0x_ED, 0x_E0, 0x_98, 0x_EC, 0x_D5, 0x_56, 0x_5B, 0x_AA, 0x_83, 0x_57, 0x_9F, 0x_B7,
		0x_16, 0x_AC, 0x_A6, 0x_33, 0x_58, 0x_D2, 0x_8F, 0x_4E, 0x_BA, 0x_BE, 0x_BC, 0x_32, 0x_28, 0x_0F, 0x_77,
		0x_81, 0x_38, 0x_C2, 0x_37, 0x_40, 0x_8E, 0x_29, 0x_DA, 0x_05, 0x_44, 0x_1E, 0x_E4, 0x_1D, 0x_60, 0x_BB,
		0x_70, 0x_48, 0x_C3, 0x_68, 0x_01, 0x_8C, 0x_39, 0x_A4, 0x_A9, 0x_0E, 0x_DD, 0x_C1, 0x_64, 0x_A7, 0x_3D,
		0x_65, 0x_10, 0x_97, 0x_04, 0x_F1, 0x_5F, 0x_72, 0x_22, 0x_47, 0x_51, 0x_59, 0x_3A, 0x_79,
	];

	helper(S, BASE, -376_786_044);
}
// endregion
// region: s_has_whitespaces_and_minus_8_in_base_113
#[test]
fn s_has_whitespaces_and_minus_8_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0B,
		0x_0D, 0x_0C, 0x_2D, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_67, 0x_C5, 0x_41, 0x_69, 0x_1C, 0x_FA, 0x_B9, 0x_38, 0x_8A, 0x_17, 0x_60, 0x_9A, 0x_C9, 0x_A7,
		0x_8B, 0x_02, 0x_83, 0x_A9, 0x_F6, 0x_F5, 0x_40, 0x_24, 0x_E7, 0x_54, 0x_D1, 0x_23, 0x_F9, 0x_26, 0x_98,
		0x_B7, 0x_7B, 0x_D3, 0x_8E, 0x_10, 0x_07, 0x_B8, 0x_F3, 0x_D0, 0x_1E, 0x_95, 0x_6C, 0x_57, 0x_EB, 0x_99,
		0x_4D, 0x_D6, 0x_1B, 0x_06, 0x_AC, 0x_AD, 0x_FE, 0x_D8, 0x_86, 0x_94, 0x_A6, 0x_65, 0x_14, 0x_43, 0x_28,
		0x_29, 0x_2F, 0x_4E, 0x_4C, 0x_97, 0x_5F, 0x_7C, 0x_1D, 0x_7F, 0x_3C, 0x_12, 0x_AF, 0x_82, 0x_BE, 0x_E1,
		0x_6B, 0x_B6, 0x_FD, 0x_34, 0x_36, 0x_C2, 0x_AB, 0x_8C, 0x_75, 0x_A0, 0x_F1, 0x_A4, 0x_49, 0x_55, 0x_DA,
		0x_79, 0x_EE, 0x_5D, 0x_F8, 0x_72, 0x_53, 0x_CB, 0x_C0, 0x_31, 0x_EC, 0x_59, 0x_F2, 0x_CC, 0x_7D, 0x_16,
		0x_7A, 0x_E4, 0x_58, 0x_5B, 0x_50, 0x_61, 0x_71, 0x_A1,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_minus_37_in_base_113
#[test]
fn s_has_whitespaces_and_minus_37_in_base_113() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_09,
		0x_0B, 0x_0D, 0x_2D, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_B3, 0x_9E, 0x_39, 0x_C5, 0x_C0, 0x_02, 0x_15, 0x_43, 0x_E4, 0x_F4, 0x_44, 0x_97, 0x_BD, 0x_C6,
		0x_0F, 0x_4E, 0x_77, 0x_BE, 0x_60, 0x_AF, 0x_63, 0x_E1, 0x_F8, 0x_A9, 0x_3F, 0x_46, 0x_64, 0x_FC, 0x_6C,
		0x_19, 0x_75, 0x_D5, 0x_3B, 0x_23, 0x_BC, 0x_94, 0x_76, 0x_7F, 0x_1B, 0x_4A, 0x_10, 0x_22, 0x_8E, 0x_CF,
		0x_DF, 0x_91, 0x_C7, 0x_D8, 0x_53, 0x_AA, 0x_8F, 0x_92, 0x_C2, 0x_8D, 0x_5C, 0x_70, 0x_1E, 0x_80, 0x_FE,
		0x_51, 0x_88, 0x_6A, 0x_DA, 0x_D0, 0x_32, 0x_9A, 0x_6E, 0x_BF, 0x_86, 0x_62, 0x_EB, 0x_F0, 0x_95, 0x_89,
		0x_18, 0x_7A, 0x_67, 0x_8C, 0x_A1, 0x_B5, 0x_A0, 0x_8A, 0x_35, 0x_B4, 0x_56, 0x_01, 0x_55, 0x_24, 0x_4C,
		0x_2A, 0x_72, 0x_7C, 0x_7B, 0x_59, 0x_DD, 0x_C1, 0x_14, 0x_9D, 0x_D9, 0x_AE, 0x_AC, 0x_E8, 0x_98, 0x_2F,
		0x_C3, 0x_B2, 0x_FB, 0x_3D, 0x_93, 0x_AD, 0x_E7, 0x_57,
	];

	helper(S, BASE, -37);
}
// endregion
// region: s_has_whitespaces_and_minus_653_in_base_113
#[test]
fn s_has_whitespaces_and_minus_653_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0D,
		0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0D,
		0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_2D, 0x_5B, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_AB, 0x_51, 0x_70, 0x_A8, 0x_5B, 0x_95, 0x_3D, 0x_DC, 0x_D3, 0x_67, 0x_AA, 0x_1F, 0x_50, 0x_CE,
		0x_C5, 0x_75, 0x_8E, 0x_41, 0x_79, 0x_36, 0x_5C, 0x_FD, 0x_C7, 0x_25, 0x_E1, 0x_85, 0x_18, 0x_FE, 0x_90,
		0x_65, 0x_69, 0x_6D, 0x_66, 0x_BD, 0x_14, 0x_68, 0x_4C, 0x_ED, 0x_39, 0x_3B, 0x_1A, 0x_06, 0x_4B, 0x_62,
		0x_DA, 0x_BE, 0x_10, 0x_9B, 0x_EE, 0x_C1, 0x_27, 0x_2A, 0x_1E, 0x_94, 0x_9A, 0x_5E, 0x_0E, 0x_7C, 0x_04,
		0x_74, 0x_E5, 0x_1D, 0x_59, 0x_7A, 0x_C6, 0x_FB, 0x_34, 0x_C3, 0x_03, 0x_97, 0x_73, 0x_F3, 0x_92, 0x_21,
		0x_AE, 0x_AC, 0x_9E, 0x_1C, 0x_E4, 0x_C0, 0x_7E, 0x_8F, 0x_64, 0x_11, 0x_BA, 0x_DD, 0x_FA, 0x_35, 0x_F6,
		0x_93, 0x_45, 0x_B8, 0x_E9, 0x_07, 0x_3C, 0x_A1, 0x_43, 0x_12, 0x_B3, 0x_E7, 0x_D5, 0x_77, 0x_2C, 0x_81,
		0x_8D, 0x_B9, 0x_72, 0x_F1, 0x_A6, 0x_28, 0x_F4, 0x_3F,
	];

	helper(S, BASE, -653);
}
// endregion
// region: s_has_whitespaces_and_minus_5_573_in_base_113
#[test]
fn s_has_whitespaces_and_minus_5_573_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_20,
		0x_0B, 0x_20, 0x_09, 0x_09, 0x_2D, 0x_F5, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_02, 0x_CD, 0x_0E, 0x_BC, 0x_75, 0x_36, 0x_D9, 0x_74, 0x_33, 0x_F0, 0x_43, 0x_DD, 0x_01, 0x_91,
		0x_BA, 0x_83, 0x_97, 0x_9E, 0x_71, 0x_FB, 0x_CF, 0x_68, 0x_34, 0x_E1, 0x_9D, 0x_C8, 0x_18, 0x_DC, 0x_DB,
		0x_21, 0x_1C, 0x_F6, 0x_C2, 0x_E9, 0x_88, 0x_BD, 0x_1D, 0x_D8, 0x_92, 0x_3B, 0x_E3, 0x_44, 0x_23, 0x_95,
		0x_42, 0x_29, 0x_99, 0x_80, 0x_F5, 0x_49, 0x_35, 0x_A1, 0x_69, 0x_7A, 0x_B6, 0x_13, 0x_E5, 0x_D2, 0x_C5,
		0x_08, 0x_F1, 0x_72, 0x_46, 0x_E2, 0x_94, 0x_26, 0x_E0, 0x_AA, 0x_BE, 0x_22, 0x_45, 0x_32, 0x_89, 0x_CE,
		0x_CC, 0x_6E, 0x_C1, 0x_73, 0x_C4, 0x_4C, 0x_1A, 0x_47, 0x_B8, 0x_FC, 0x_AB, 0x_E7, 0x_66, 0x_24, 0x_05,
		0x_A5, 0x_51, 0x_2A, 0x_11, 0x_4F, 0x_90, 0x_03, 0x_2E, 0x_C7, 0x_06, 0x_C0, 0x_81, 0x_61, 0x_67, 0x_19,
		0x_D0, 0x_1E, 0x_8E, 0x_64, 0x_3D, 0x_E8, 0x_8C, 0x_ED,
	];

	helper(S, BASE, -5_573);
}
// endregion
// region: s_has_whitespaces_and_minus_87_680_in_base_113
#[test]
fn s_has_whitespaces_and_minus_87_680_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_2D, 0x_50, 0x_30, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_86, 0x_8E, 0x_54, 0x_59, 0x_AB, 0x_50, 0x_F3, 0x_93, 0x_C2, 0x_76, 0x_21, 0x_82, 0x_FD, 0x_7E,
		0x_CE, 0x_89, 0x_81, 0x_B2, 0x_63, 0x_6C, 0x_3D, 0x_4F, 0x_C6, 0x_5F, 0x_9E, 0x_8C, 0x_14, 0x_D7, 0x_70,
		0x_27, 0x_22, 0x_39, 0x_94, 0x_75, 0x_A7, 0x_91, 0x_35, 0x_64, 0x_31, 0x_0E, 0x_6E, 0x_C3, 0x_BD, 0x_AE,
		0x_B9, 0x_42, 0x_ED, 0x_DB, 0x_8F, 0x_6F, 0x_53, 0x_2A, 0x_74, 0x_60, 0x_4A, 0x_4D, 0x_B6, 0x_83, 0x_F8,
		0x_04, 0x_10, 0x_7A, 0x_11, 0x_9B, 0x_56, 0x_97, 0x_DE, 0x_65, 0x_E4, 0x_77, 0x_1E, 0x_80, 0x_0F, 0x_43,
		0x_88, 0x_47, 0x_EC, 0x_3E, 0x_3C, 0x_3F, 0x_C4, 0x_68, 0x_EA, 0x_71, 0x_C7, 0x_D1, 0x_AC, 0x_58, 0x_24,
		0x_7D, 0x_BC, 0x_01, 0x_13, 0x_BB, 0x_36, 0x_C8, 0x_30, 0x_D3, 0x_45, 0x_92, 0x_FE, 0x_EB, 0x_34, 0x_16,
		0x_FF, 0x_66, 0x_1B, 0x_41, 0x_3A, 0x_CD, 0x_A6, 0x_E2,
	];

	helper(S, BASE, -87_680);
}
// endregion
// region: s_has_whitespaces_and_minus_788_487_in_base_113
#[test]
fn s_has_whitespaces_and_minus_788_487_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_2D, 0x_36, 0x_D6, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_18, 0x_52, 0x_32, 0x_FB, 0x_7D, 0x_D1, 0x_DA, 0x_E1, 0x_22, 0x_93, 0x_63, 0x_A3, 0x_FF, 0x_8D,
		0x_EC, 0x_E6, 0x_19, 0x_4E, 0x_40, 0x_DD, 0x_C2, 0x_15, 0x_9D, 0x_B3, 0x_29, 0x_EB, 0x_E5, 0x_E0, 0x_88,
		0x_37, 0x_26, 0x_7F, 0x_42, 0x_AF, 0x_C3, 0x_D3, 0x_F1, 0x_95, 0x_EA, 0x_60, 0x_3F, 0x_01, 0x_35, 0x_28,
		0x_9E, 0x_CF, 0x_F0, 0x_AE, 0x_2E, 0x_38, 0x_1B, 0x_6D, 0x_78, 0x_BA, 0x_2F, 0x_75, 0x_8A, 0x_33, 0x_5E,
		0x_DF, 0x_36, 0x_9B, 0x_FC, 0x_1C, 0x_90, 0x_9F, 0x_F3, 0x_54, 0x_AA, 0x_F2, 0x_F6, 0x_64, 0x_D5, 0x_67,
		0x_9A, 0x_44, 0x_21, 0x_CC, 0x_17, 0x_BC, 0x_43, 0x_1A, 0x_6E, 0x_D6, 0x_A1, 0x_59, 0x_41, 0x_13, 0x_3E,
		0x_E7, 0x_FE, 0x_77, 0x_03, 0x_A7, 0x_E8, 0x_05, 0x_83, 0x_16, 0x_E2, 0x_4F, 0x_B8, 0x_4A, 0x_3C, 0x_6A,
		0x_25, 0x_0F, 0x_48, 0x_B7, 0x_45, 0x_14, 0x_85, 0x_80,
	];

	helper(S, BASE, -788_487);
}
// endregion
// region: s_has_whitespaces_and_minus_2_982_747_in_base_113
#[test]
fn s_has_whitespaces_and_minus_2_982_747_in_base_113() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0A,
		0x_2D, 0x_8A, 0x_82, 0x_72, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_8C, 0x_8A, 0x_35, 0x_23, 0x_EB, 0x_54, 0x_82, 0x_F4, 0x_C2, 0x_67, 0x_13, 0x_DD, 0x_79, 0x_AD,
		0x_F1, 0x_A2, 0x_51, 0x_43, 0x_1D, 0x_A5, 0x_63, 0x_93, 0x_46, 0x_E0, 0x_06, 0x_3D, 0x_96, 0x_71, 0x_4A,
		0x_E5, 0x_C6, 0x_33, 0x_69, 0x_D3, 0x_28, 0x_7C, 0x_76, 0x_FB, 0x_74, 0x_87, 0x_86, 0x_5D, 0x_6A, 0x_A4,
		0x_D2, 0x_26, 0x_F9, 0x_60, 0x_F3, 0x_FF, 0x_97, 0x_ED, 0x_80, 0x_AB, 0x_38, 0x_A0, 0x_55, 0x_8E, 0x_75,
		0x_3C, 0x_CA, 0x_95, 0x_36, 0x_8B, 0x_52, 0x_72, 0x_F6, 0x_BD, 0x_A8, 0x_03, 0x_9A, 0x_2F, 0x_19, 0x_D6,
		0x_8F, 0x_F5, 0x_88, 0x_10, 0x_81, 0x_4B, 0x_24, 0x_89, 0x_B2, 0x_DF, 0x_C7, 0x_4C, 0x_21, 0x_47, 0x_E4,
		0x_E6, 0x_D5, 0x_B5, 0x_6E, 0x_B0, 0x_66, 0x_F2, 0x_D7, 0x_D1, 0x_6B, 0x_92, 0x_45, 0x_83, 0x_E7, 0x_C3,
		0x_11, 0x_61, 0x_5F, 0x_01, 0x_58, 0x_04, 0x_0E, 0x_49,
	];

	helper(S, BASE, -2_982_747);
}
// endregion
// region: s_has_whitespaces_and_minus_28_590_859_in_base_113
#[test]
fn s_has_whitespaces_and_minus_28_590_859_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_20,
		0x_0C, 0x_0C, 0x_2D, 0x_7F, 0x_7D, 0x_9B, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_46, 0x_E1, 0x_EF, 0x_F8, 0x_E9, 0x_57, 0x_A6, 0x_96, 0x_9B, 0x_52, 0x_AD, 0x_5B, 0x_15, 0x_E6,
		0x_59, 0x_64, 0x_BC, 0x_AE, 0x_7F, 0x_F6, 0x_1E, 0x_2F, 0x_83, 0x_6E, 0x_02, 0x_ED, 0x_CB, 0x_43, 0x_93,
		0x_BB, 0x_24, 0x_B7, 0x_97, 0x_AC, 0x_3F, 0x_3C, 0x_26, 0x_41, 0x_F3, 0x_0F, 0x_BD, 0x_61, 0x_87, 0x_9E,
		0x_E5, 0x_75, 0x_4B, 0x_B6, 0x_C0, 0x_8B, 0x_8A, 0x_CC, 0x_78, 0x_AA, 0x_C6, 0x_38, 0x_DF, 0x_3D, 0x_34,
		0x_60, 0x_30, 0x_72, 0x_F1, 0x_56, 0x_5C, 0x_4F, 0x_91, 0x_AF, 0x_9F, 0x_D4, 0x_27, 0x_23, 0x_1D, 0x_BF,
		0x_FD, 0x_F5, 0x_71, 0x_F9, 0x_76, 0x_FF, 0x_EB, 0x_9D, 0x_7A, 0x_A4, 0x_C7, 0x_DE, 0x_47, 0x_C1, 0x_8F,
		0x_22, 0x_14, 0x_7D, 0x_3A, 0x_10, 0x_55, 0x_A1, 0x_42, 0x_CA, 0x_16, 0x_3B, 0x_70, 0x_6A, 0x_B9, 0x_94,
		0x_86, 0x_1A, 0x_EE, 0x_58, 0x_98, 0x_C2, 0x_6B, 0x_A2,
	];

	helper(S, BASE, -28_590_859);
}
// endregion
// region: s_has_whitespaces_and_minus_460_035_092_in_base_113
#[test]
fn s_has_whitespaces_and_minus_460_035_092_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_2D, 0x_19, 0x_AE, 0x_8C, 0x_B6, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_51, 0x_19, 0x_07, 0x_59, 0x_55, 0x_B2, 0x_E3, 0x_D7, 0x_CD, 0x_EF, 0x_93, 0x_4D, 0x_04, 0x_7E,
		0x_CE, 0x_38, 0x_F1, 0x_8F, 0x_2A, 0x_95, 0x_CB, 0x_89, 0x_03, 0x_63, 0x_AF, 0x_67, 0x_6B, 0x_A1, 0x_ED,
		0x_12, 0x_CA, 0x_87, 0x_80, 0x_1E, 0x_76, 0x_5D, 0x_6C, 0x_46, 0x_DE, 0x_26, 0x_AC, 0x_28, 0x_D3, 0x_4B,
		0x_2E, 0x_4F, 0x_A6, 0x_FB, 0x_D8, 0x_45, 0x_24, 0x_31, 0x_39, 0x_15, 0x_B3, 0x_B6, 0x_30, 0x_9C, 0x_47,
		0x_50, 0x_F2, 0x_B5, 0x_D4, 0x_8B, 0x_F6, 0x_40, 0x_65, 0x_58, 0x_34, 0x_13, 0x_A2, 0x_84, 0x_21, 0x_DB,
		0x_71, 0x_D0, 0x_01, 0x_64, 0x_7C, 0x_36, 0x_D5, 0x_D6, 0x_DA, 0x_E1, 0x_5F, 0x_9A, 0x_32, 0x_79, 0x_5E,
		0x_F7, 0x_62, 0x_AE, 0x_8C, 0x_94, 0x_BF, 0x_85, 0x_E7, 0x_77, 0x_C2, 0x_FD, 0x_B7, 0x_A8, 0x_B8, 0x_43,
		0x_81, 0x_53, 0x_3D, 0x_6F, 0x_F3, 0x_7F, 0x_D2, 0x_96,
	];

	helper(S, BASE, -460_035_092);
}
// endregion
// region: s_has_whitespaces_and_minus_3_in_base_193
#[test]
fn s_has_whitespaces_and_minus_3_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_2D, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_02, 0x_EF, 0x_82, 0x_61, 0x_C1, 0x_48, 0x_60, 0x_1B, 0x_21, 0x_4D, 0x_F7, 0x_0F, 0x_D0, 0x_59,
		0x_5B, 0x_F4, 0x_DC, 0x_5D, 0x_3B, 0x_84, 0x_71, 0x_1C, 0x_75, 0x_A0, 0x_58, 0x_E0, 0x_E2, 0x_27, 0x_AC,
		0x_65, 0x_51, 0x_87, 0x_1D, 0x_E4, 0x_45, 0x_A7, 0x_89, 0x_D6, 0x_BD, 0x_90, 0x_B7, 0x_8E, 0x_9E, 0x_ED,
		0x_CB, 0x_C8, 0x_88, 0x_86, 0x_7A, 0x_CA, 0x_44, 0x_7E, 0x_A4, 0x_4F, 0x_08, 0x_F1, 0x_37, 0x_BA, 0x_E6,
		0x_41, 0x_6D, 0x_29, 0x_4E, 0x_23, 0x_69, 0x_3C, 0x_BC, 0x_74, 0x_10, 0x_4B, 0x_05, 0x_16, 0x_B2, 0x_8A,
		0x_5C, 0x_93, 0x_E9, 0x_AE, 0x_39, 0x_43, 0x_AB, 0x_68, 0x_8D, 0x_D4, 0x_E3, 0x_DB, 0x_80, 0x_DE, 0x_56,
		0x_92, 0x_17, 0x_50, 0x_94, 0x_32, 0x_FB, 0x_BF, 0x_AF, 0x_2C, 0x_E8, 0x_A2, 0x_D1, 0x_40, 0x_DA, 0x_A9,
		0x_6A, 0x_76, 0x_12, 0x_0E, 0x_EE, 0x_7D, 0x_25, 0x_70, 0x_24, 0x_1E, 0x_D2, 0x_15, 0x_66, 0x_CC, 0x_5A,
		0x_C3, 0x_A6, 0x_96, 0x_C0, 0x_B3, 0x_36, 0x_D5, 0x_28, 0x_B9, 0x_46, 0x_67, 0x_06, 0x_CE, 0x_8B, 0x_38,
		0x_B8, 0x_D9, 0x_6F, 0x_42, 0x_E1, 0x_FE, 0x_35, 0x_F0, 0x_99, 0x_F9, 0x_B4, 0x_E7, 0x_FF, 0x_DD, 0x_9B,
		0x_DF, 0x_EA, 0x_F8, 0x_A1, 0x_97, 0x_8F, 0x_C9, 0x_BB, 0x_83, 0x_78, 0x_30, 0x_79, 0x_55, 0x_2E, 0x_07,
		0x_73, 0x_9D, 0x_5E, 0x_3E, 0x_4A, 0x_91, 0x_1F, 0x_CD, 0x_77, 0x_04, 0x_22, 0x_19, 0x_31, 0x_EB, 0x_49,
		0x_4C, 0x_63, 0x_C4, 0x_11, 0x_03, 0x_6C, 0x_54, 0x_18, 0x_64, 0x_1A, 0x_7C, 0x_8C, 0x_FC,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_minus_94_in_base_193
#[test]
fn s_has_whitespaces_and_minus_94_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_2D, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_58, 0x_54, 0x_77, 0x_AD, 0x_F1, 0x_B2, 0x_1E, 0x_22, 0x_44, 0x_57, 0x_C5, 0x_DA, 0x_9C, 0x_87, 0x_93,
		0x_17, 0x_72, 0x_F2, 0x_83, 0x_38, 0x_BE, 0x_7E, 0x_08, 0x_AE, 0x_13, 0x_FE, 0x_C7, 0x_18, 0x_E0, 0x_8E,
		0x_BA, 0x_3D, 0x_A3, 0x_40, 0x_C3, 0x_1A, 0x_03, 0x_7C, 0x_7F, 0x_52, 0x_82, 0x_29, 0x_33, 0x_E7, 0x_A5,
		0x_AB, 0x_61, 0x_2A, 0x_C6, 0x_45, 0x_3F, 0x_CE, 0x_0E, 0x_BD, 0x_BC, 0x_84, 0x_14, 0x_9E, 0x_C4, 0x_85,
		0x_D0, 0x_6C, 0x_DF, 0x_E3, 0x_DC, 0x_E4, 0x_C0, 0x_CB, 0x_73, 0x_23, 0x_49, 0x_2E, 0x_D3, 0x_35, 0x_92,
		0x_46, 0x_AC, 0x_6D, 0x_15, 0x_CA, 0x_F7, 0x_30, 0x_11, 0x_E5, 0x_8C, 0x_53, 0x_80, 0x_97, 0x_BB, 0x_10,
		0x_7B, 0x_47, 0x_75, 0x_05, 0x_CC, 0x_F3, 0x_48, 0x_2F, 0x_04, 0x_A9, 0x_B5, 0x_5B, 0x_1D, 0x_FC, 0x_41,
		0x_89, 0x_A7, 0x_3B, 0x_4D, 0x_24, 0x_51, 0x_19, 0x_E1, 0x_25, 0x_AF, 0x_EA, 0x_4B, 0x_4F, 0x_9A, 0x_66,
		0x_68, 0x_26, 0x_E9, 0x_9D, 0x_A1, 0x_A8, 0x_B6, 0x_B1, 0x_B3, 0x_B9, 0x_27, 0x_6E, 0x_A2, 0x_5C, 0x_C1,
		0x_9F, 0x_D7, 0x_1C, 0x_F8, 0x_70, 0x_60, 0x_F5, 0x_43, 0x_21, 0x_42, 0x_56, 0x_8A, 0x_2C, 0x_BF, 0x_EF,
		0x_91, 0x_6B, 0x_59, 0x_DE, 0x_9B, 0x_8D, 0x_C8, 0x_67, 0x_90, 0x_4E, 0x_A0, 0x_02, 0x_C9, 0x_B8, 0x_D5,
		0x_78, 0x_98, 0x_B4, 0x_63, 0x_B7, 0x_32, 0x_E2, 0x_DB, 0x_74, 0x_A4, 0x_62, 0x_8B, 0x_D2, 0x_D1, 0x_F6,
		0x_3E, 0x_99, 0x_5F, 0x_4C, 0x_31, 0x_94, 0x_34, 0x_07, 0x_FA, 0x_4A, 0x_5E, 0x_F9, 0x_FF,
	];

	helper(S, BASE, -94);
}
// endregion
// region: s_has_whitespaces_and_minus_724_in_base_193
#[test]
fn s_has_whitespaces_and_minus_724_in_base_193() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_2D, 0x_CB, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_B7, 0x_1F, 0x_CB, 0x_65, 0x_8A, 0x_05, 0x_C3, 0x_4D, 0x_5D, 0x_88, 0x_30, 0x_F9, 0x_32, 0x_38,
		0x_34, 0x_03, 0x_5C, 0x_C6, 0x_8D, 0x_AA, 0x_24, 0x_6C, 0x_93, 0x_21, 0x_19, 0x_F6, 0x_B3, 0x_89, 0x_4B,
		0x_98, 0x_6B, 0x_51, 0x_25, 0x_86, 0x_15, 0x_C5, 0x_7E, 0x_D3, 0x_F1, 0x_DF, 0x_2E, 0x_22, 0x_FA, 0x_68,
		0x_DB, 0x_60, 0x_4F, 0x_B4, 0x_83, 0x_47, 0x_67, 0x_A9, 0x_48, 0x_DD, 0x_B6, 0x_E3, 0x_A1, 0x_9D, 0x_AF,
		0x_64, 0x_87, 0x_B2, 0x_D4, 0x_63, 0x_CE, 0x_C0, 0x_A7, 0x_99, 0x_2F, 0x_FE, 0x_66, 0x_E8, 0x_02, 0x_BF,
		0x_D0, 0x_27, 0x_44, 0x_A3, 0x_FF, 0x_D8, 0x_28, 0x_52, 0x_80, 0x_1E, 0x_40, 0x_D6, 0x_11, 0x_A5, 0x_F5,
		0x_1B, 0x_6E, 0x_D1, 0x_FB, 0x_10, 0x_D5, 0x_55, 0x_CD, 0x_FC, 0x_D2, 0x_9E, 0x_CF, 0x_7A, 0x_A8, 0x_54,
		0x_E7, 0x_C1, 0x_E4, 0x_ED, 0x_77, 0x_F0, 0x_71, 0x_C8, 0x_5F, 0x_5E, 0x_9B, 0x_35, 0x_E9, 0x_7B, 0x_29,
		0x_1D, 0x_B9, 0x_97, 0x_F2, 0x_17, 0x_4A, 0x_BE, 0x_74, 0x_91, 0x_06, 0x_B0, 0x_18, 0x_9C, 0x_59, 0x_73,
		0x_8F, 0x_5A, 0x_0F, 0x_49, 0x_C7, 0x_A2, 0x_12, 0x_DA, 0x_79, 0x_04, 0x_D7, 0x_46, 0x_8C, 0x_AE, 0x_EB,
		0x_41, 0x_3C, 0x_37, 0x_D9, 0x_69, 0x_96, 0x_8B, 0x_3D, 0x_82, 0x_BA, 0x_07, 0x_B8, 0x_31, 0x_6D, 0x_9F,
		0x_16, 0x_85, 0x_E1, 0x_0E, 0x_4E, 0x_72, 0x_56, 0x_39, 0x_3A, 0x_01, 0x_BD, 0x_92, 0x_58, 0x_EC, 0x_EF,
		0x_7D, 0x_AD, 0x_6F, 0x_1C, 0x_FD, 0x_7C, 0x_42, 0x_61, 0x_84, 0x_A0, 0x_BB, 0x_F4, 0x_F3,
	];

	helper(S, BASE, -724);
}
// endregion
// region: s_has_whitespaces_and_minus_3_361_in_base_193
#[test]
fn s_has_whitespaces_and_minus_3_361_in_base_193() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_0A,
		0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_2D, 0x_5E, 0x_83,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_39, 0x_03, 0x_AA, 0x_05, 0x_EB, 0x_A6, 0x_58, 0x_82, 0x_BD, 0x_98, 0x_5D, 0x_01, 0x_AF, 0x_77,
		0x_A4, 0x_AD, 0x_5E, 0x_16, 0x_56, 0x_21, 0x_CF, 0x_FF, 0x_A3, 0x_34, 0x_BA, 0x_3C, 0x_D9, 0x_29, 0x_8F,
		0x_A8, 0x_D0, 0x_75, 0x_31, 0x_BB, 0x_F9, 0x_61, 0x_35, 0x_C4, 0x_6A, 0x_6F, 0x_F0, 0x_E6, 0x_DC, 0x_27,
		0x_38, 0x_91, 0x_96, 0x_F7, 0x_46, 0x_D7, 0x_9E, 0x_A9, 0x_62, 0x_E1, 0x_2A, 0x_DB, 0x_6B, 0x_67, 0x_D5,
		0x_95, 0x_3E, 0x_54, 0x_A7, 0x_D4, 0x_55, 0x_6C, 0x_4A, 0x_43, 0x_FD, 0x_4F, 0x_86, 0x_3B, 0x_DF, 0x_65,
		0x_B3, 0x_AE, 0x_63, 0x_81, 0x_B2, 0x_83, 0x_4D, 0x_EF, 0x_D3, 0x_37, 0x_A5, 0x_99, 0x_28, 0x_AC, 0x_76,
		0x_F8, 0x_06, 0x_8C, 0x_1E, 0x_B6, 0x_23, 0x_1A, 0x_C8, 0x_51, 0x_24, 0x_7A, 0x_73, 0x_47, 0x_42, 0x_A1,
		0x_70, 0x_88, 0x_1D, 0x_7B, 0x_9C, 0x_D1, 0x_9D, 0x_40, 0x_E4, 0x_D6, 0x_11, 0x_4C, 0x_1C, 0x_1B, 0x_2E,
		0x_C3, 0x_33, 0x_04, 0x_9B, 0x_52, 0x_BE, 0x_E3, 0x_EE, 0x_7D, 0x_C0, 0x_AB, 0x_A0, 0x_80, 0x_C6, 0x_69,
		0x_E9, 0x_92, 0x_F1, 0x_26, 0x_FA, 0x_49, 0x_E7, 0x_FB, 0x_41, 0x_2F, 0x_74, 0x_68, 0x_57, 0x_E8, 0x_94,
		0x_36, 0x_F5, 0x_1F, 0x_DD, 0x_89, 0x_E0, 0x_EC, 0x_12, 0x_CB, 0x_07, 0x_7F, 0x_18, 0x_F2, 0x_A2, 0x_19,
		0x_3F, 0x_59, 0x_8D, 0x_97, 0x_93, 0x_48, 0x_8B, 0x_8E, 0x_6E, 0x_4E, 0x_9F, 0x_D2, 0x_7E, 0x_22, 0x_5B,
		0x_C5, 0x_BF, 0x_F4, 0x_4B, 0x_3D, 0x_CC, 0x_B5, 0x_30, 0x_13, 0x_85, 0x_9A, 0x_10, 0x_66,
	];

	helper(S, BASE, -3_361);
}
// endregion
// region: s_has_whitespaces_and_minus_64_745_in_base_193
#[test]
fn s_has_whitespaces_and_minus_64_745_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_2D, 0x_EF, 0x_06, 0x_D3,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_EF, 0x_8A, 0x_EC, 0x_47, 0x_CA, 0x_36, 0x_E9, 0x_D7, 0x_F5, 0x_63, 0x_67, 0x_49, 0x_86, 0x_F3,
		0x_D5, 0x_CF, 0x_A9, 0x_3B, 0x_30, 0x_51, 0x_B0, 0x_79, 0x_F6, 0x_C8, 0x_E2, 0x_0F, 0x_1E, 0x_B3, 0x_94,
		0x_B8, 0x_D2, 0x_0E, 0x_DB, 0x_B9, 0x_90, 0x_65, 0x_3C, 0x_4B, 0x_81, 0x_1C, 0x_9D, 0x_AE, 0x_E8, 0x_70,
		0x_C0, 0x_34, 0x_17, 0x_C2, 0x_45, 0x_19, 0x_58, 0x_4A, 0x_96, 0x_44, 0x_2F, 0x_84, 0x_5D, 0x_14, 0x_04,
		0x_43, 0x_4D, 0x_A8, 0x_BE, 0x_42, 0x_41, 0x_A6, 0x_92, 0x_03, 0x_22, 0x_FE, 0x_29, 0x_8E, 0x_4C, 0x_BB,
		0x_AB, 0x_80, 0x_B4, 0x_F2, 0x_35, 0x_3E, 0x_74, 0x_E0, 0x_8B, 0x_CE, 0x_A4, 0x_AC, 0x_12, 0x_95, 0x_60,
		0x_D3, 0x_FA, 0x_DF, 0x_D1, 0x_B6, 0x_10, 0x_7A, 0x_64, 0x_C9, 0x_6A, 0x_EA, 0x_AF, 0x_7D, 0x_93, 0x_F8,
		0x_9B, 0x_21, 0x_59, 0x_46, 0x_55, 0x_5C, 0x_C5, 0x_6B, 0x_11, 0x_98, 0x_57, 0x_B2, 0x_89, 0x_B5, 0x_97,
		0x_31, 0x_A0, 0x_B1, 0x_7C, 0x_6D, 0x_9C, 0x_48, 0x_26, 0x_50, 0x_40, 0x_5A, 0x_75, 0x_AA, 0x_D9, 0x_B7,
		0x_23, 0x_01, 0x_78, 0x_5F, 0x_FF, 0x_54, 0x_69, 0x_06, 0x_9A, 0x_CC, 0x_E4, 0x_6E, 0x_38, 0x_D0, 0x_BD,
		0x_DE, 0x_1A, 0x_66, 0x_BA, 0x_15, 0x_AD, 0x_3F, 0x_C3, 0x_7E, 0x_87, 0x_2A, 0x_83, 0x_71, 0x_BC, 0x_DC,
		0x_E5, 0x_1F, 0x_1B, 0x_BF, 0x_E7, 0x_91, 0x_2E, 0x_68, 0x_13, 0x_A7, 0x_F0, 0x_5E, 0x_08, 0x_72, 0x_73,
		0x_4F, 0x_5B, 0x_F7, 0x_4E, 0x_2C, 0x_DD, 0x_8C, 0x_1D, 0x_8D, 0x_EE, 0x_E1, 0x_CB, 0x_C7,
	];

	helper(S, BASE, -64_745);
}
// endregion
// region: s_has_whitespaces_and_minus_201_610_in_base_193
#[test]
fn s_has_whitespaces_and_minus_201_610_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_09,
		0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_2D, 0x_2E, 0x_FE, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_6E, 0x_EA, 0x_8C, 0x_76, 0x_2E, 0x_38, 0x_A2, 0x_CE, 0x_32, 0x_C6, 0x_06, 0x_4B, 0x_C3, 0x_99,
		0x_CF, 0x_BC, 0x_7E, 0x_3D, 0x_19, 0x_C7, 0x_F2, 0x_66, 0x_92, 0x_1F, 0x_A1, 0x_97, 0x_FF, 0x_5E, 0x_9B,
		0x_50, 0x_CD, 0x_6A, 0x_BD, 0x_91, 0x_78, 0x_B6, 0x_AF, 0x_E2, 0x_11, 0x_F6, 0x_44, 0x_6B, 0x_5C, 0x_6D,
		0x_22, 0x_A8, 0x_49, 0x_73, 0x_D3, 0x_7D, 0x_E7, 0x_E1, 0x_9F, 0x_ED, 0x_60, 0x_D8, 0x_C5, 0x_12, 0x_2F,
		0x_10, 0x_54, 0x_45, 0x_21, 0x_DF, 0x_81, 0x_8D, 0x_1A, 0x_2C, 0x_C2, 0x_65, 0x_27, 0x_5F, 0x_7A, 0x_C0,
		0x_7B, 0x_D7, 0x_A6, 0x_82, 0x_FE, 0x_F3, 0x_41, 0x_85, 0x_E3, 0x_63, 0x_84, 0x_E0, 0x_2A, 0x_F5, 0x_01,
		0x_4A, 0x_15, 0x_B1, 0x_58, 0x_4D, 0x_D1, 0x_4C, 0x_8F, 0x_EC, 0x_07, 0x_31, 0x_C8, 0x_A3, 0x_B2, 0x_04,
		0x_C9, 0x_4F, 0x_6C, 0x_17, 0x_DE, 0x_9C, 0x_3F, 0x_D9, 0x_9E, 0x_62, 0x_55, 0x_48, 0x_A0, 0x_18, 0x_0E,
		0x_CC, 0x_87, 0x_57, 0x_E4, 0x_B7, 0x_35, 0x_E6, 0x_86, 0x_47, 0x_1B, 0x_59, 0x_51, 0x_30, 0x_DC, 0x_C1,
		0x_16, 0x_61, 0x_56, 0x_46, 0x_3C, 0x_64, 0x_F1, 0x_90, 0x_F0, 0x_40, 0x_33, 0x_52, 0x_6F, 0x_FC, 0x_26,
		0x_34, 0x_AD, 0x_FB, 0x_AA, 0x_D6, 0x_DD, 0x_36, 0x_77, 0x_BB, 0x_D4, 0x_80, 0x_13, 0x_0F, 0x_4E, 0x_68,
		0x_39, 0x_72, 0x_F4, 0x_5B, 0x_B4, 0x_88, 0x_5A, 0x_83, 0x_B5, 0x_24, 0x_42, 0x_DB, 0x_F9, 0x_CA, 0x_43,
		0x_8A, 0x_9D, 0x_EB, 0x_14, 0x_DA, 0x_1E, 0x_B3, 0x_C4, 0x_1D, 0x_BF, 0x_CB, 0x_67, 0x_3B,
	];

	helper(S, BASE, -201_610);
}
// endregion
// region: s_has_whitespaces_and_minus_6_649_595_in_base_193
#[test]
fn s_has_whitespaces_and_minus_6_649_595_in_base_193() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0D,
		0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_2D,
		0x_11, 0x_3A, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_05, 0x_34, 0x_13, 0x_BC, 0x_93, 0x_22, 0x_E2, 0x_3D, 0x_F7, 0x_A9, 0x_9D, 0x_C2, 0x_1C, 0x_06,
		0x_7B, 0x_95, 0x_23, 0x_56, 0x_6D, 0x_C6, 0x_62, 0x_6A, 0x_87, 0x_FD, 0x_C7, 0x_5E, 0x_EC, 0x_A5, 0x_F6,
		0x_7F, 0x_F0, 0x_E3, 0x_A3, 0x_ED, 0x_18, 0x_52, 0x_7C, 0x_36, 0x_5B, 0x_43, 0x_45, 0x_67, 0x_FE, 0x_85,
		0x_53, 0x_1F, 0x_82, 0x_D8, 0x_D0, 0x_AF, 0x_10, 0x_54, 0x_C5, 0x_75, 0x_CC, 0x_94, 0x_EB, 0x_9E, 0x_7E,
		0x_B8, 0x_EF, 0x_E6, 0x_D9, 0x_0F, 0x_24, 0x_4E, 0x_BE, 0x_76, 0x_9A, 0x_39, 0x_DC, 0x_97, 0x_16, 0x_8B,
		0x_2E, 0x_99, 0x_CE, 0x_C0, 0x_42, 0x_32, 0x_79, 0x_A1, 0x_A0, 0x_61, 0x_74, 0x_80, 0x_51, 0x_CA, 0x_8C,
		0x_84, 0x_E0, 0x_BA, 0x_81, 0x_86, 0x_98, 0x_DA, 0x_01, 0x_78, 0x_3A, 0x_41, 0x_90, 0x_A7, 0x_28, 0x_1D,
		0x_FC, 0x_65, 0x_A8, 0x_03, 0x_8F, 0x_4D, 0x_2A, 0x_49, 0x_07, 0x_F5, 0x_C3, 0x_5C, 0x_B4, 0x_96, 0x_5D,
		0x_7D, 0x_57, 0x_1B, 0x_D5, 0x_F1, 0x_50, 0x_C1, 0x_55, 0x_C4, 0x_1E, 0x_47, 0x_DE, 0x_4F, 0x_25, 0x_FF,
		0x_9F, 0x_3C, 0x_CF, 0x_F2, 0x_B7, 0x_AC, 0x_77, 0x_AD, 0x_72, 0x_70, 0x_7A, 0x_AE, 0x_73, 0x_0E, 0x_5F,
		0x_A6, 0x_9B, 0x_6F, 0x_3B, 0x_BF, 0x_B5, 0x_14, 0x_6E, 0x_15, 0x_59, 0x_C8, 0x_A2, 0x_46, 0x_6B, 0x_40,
		0x_63, 0x_08, 0x_D7, 0x_64, 0x_B1, 0x_89, 0x_58, 0x_04, 0x_EA, 0x_E5, 0x_AA, 0x_E8, 0x_5A, 0x_11, 0x_B3,
		0x_91, 0x_21, 0x_29, 0x_D6, 0x_3E, 0x_92, 0x_9C, 0x_4B, 0x_3F, 0x_2F, 0x_35, 0x_E1, 0x_F3,
	];

	helper(S, BASE, -6_649_595);
}
// endregion
// region: s_has_whitespaces_and_minus_95_347_008_in_base_193
#[test]
fn s_has_whitespaces_and_minus_95_347_008_in_base_193() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_2D, 0x_56, 0x_13, 0x_B9, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_24, 0x_4C, 0x_A1, 0x_54, 0x_CA, 0x_B0, 0x_EC, 0x_5C, 0x_53, 0x_1F, 0x_14, 0x_35, 0x_E7, 0x_56, 0x_A2,
		0x_F6, 0x_B2, 0x_4B, 0x_AB, 0x_F2, 0x_91, 0x_AF, 0x_64, 0x_9E, 0x_2A, 0x_DF, 0x_DA, 0x_83, 0x_9F, 0x_F8,
		0x_E2, 0x_69, 0x_65, 0x_FE, 0x_CB, 0x_26, 0x_C7, 0x_D8, 0x_7E, 0x_1E, 0x_C4, 0x_CC, 0x_57, 0x_51, 0x_80,
		0x_19, 0x_40, 0x_BC, 0x_58, 0x_28, 0x_13, 0x_97, 0x_04, 0x_B6, 0x_EA, 0x_77, 0x_C1, 0x_5F, 0x_FF, 0x_89,
		0x_42, 0x_72, 0x_6D, 0x_8C, 0x_D5, 0x_25, 0x_E4, 0x_FA, 0x_DE, 0x_27, 0x_17, 0x_AD, 0x_10, 0x_6E, 0x_A7,
		0x_3B, 0x_21, 0x_5E, 0x_82, 0x_C9, 0x_61, 0x_0F, 0x_CE, 0x_34, 0x_39, 0x_5B, 0x_7D, 0x_1A, 0x_D2, 0x_78,
		0x_F7, 0x_22, 0x_C8, 0x_E1, 0x_CD, 0x_ED, 0x_4F, 0x_6B, 0x_7B, 0x_07, 0x_D1, 0x_8A, 0x_79, 0x_36, 0x_16,
		0x_31, 0x_7C, 0x_D0, 0x_7F, 0x_DD, 0x_A4, 0x_48, 0x_74, 0x_B3, 0x_86, 0x_63, 0x_A8, 0x_F1, 0x_D4, 0x_06,
		0x_EE, 0x_4E, 0x_EB, 0x_45, 0x_9C, 0x_43, 0x_D3, 0x_03, 0x_A9, 0x_F4, 0x_8F, 0x_C6, 0x_B5, 0x_23, 0x_DC,
		0x_95, 0x_A0, 0x_81, 0x_B9, 0x_49, 0x_1D, 0x_AE, 0x_88, 0x_D7, 0x_5A, 0x_F5, 0x_2C, 0x_BD, 0x_7A, 0x_4A,
		0x_B7, 0x_46, 0x_52, 0x_37, 0x_FD, 0x_92, 0x_50, 0x_B4, 0x_1B, 0x_67, 0x_BA, 0x_B1, 0x_AA, 0x_75, 0x_C5,
		0x_F9, 0x_BE, 0x_70, 0x_E0, 0x_FB, 0x_6F, 0x_73, 0x_D6, 0x_3C, 0x_9D, 0x_9A, 0x_59, 0x_66, 0x_DB, 0x_F3,
		0x_A5, 0x_8B, 0x_AC, 0x_68, 0x_BB, 0x_4D, 0x_2E, 0x_30, 0x_CF, 0x_02, 0x_98, 0x_99, 0x_94,
	];

	helper(S, BASE, -95_347_008);
}
// endregion
// region: s_has_whitespaces_and_minus_922_201_902_in_base_193
#[test]
fn s_has_whitespaces_and_minus_922_201_902_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0B,
		0x_20, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0B,
		0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_2D, 0x_F7, 0x_57,
		0x_F5, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_3C, 0x_B7, 0x_F4, 0x_12, 0x_96, 0x_35, 0x_A5, 0x_44, 0x_FF, 0x_94, 0x_18, 0x_45, 0x_68, 0x_C7,
		0x_06, 0x_4A, 0x_8A, 0x_97, 0x_27, 0x_07, 0x_30, 0x_87, 0x_E6, 0x_E0, 0x_93, 0x_01, 0x_EC, 0x_69, 0x_DE,
		0x_D5, 0x_5E, 0x_E1, 0x_A9, 0x_79, 0x_31, 0x_AF, 0x_AD, 0x_C9, 0x_90, 0x_BC, 0x_24, 0x_76, 0x_4C, 0x_36,
		0x_E2, 0x_7A, 0x_85, 0x_9D, 0x_7B, 0x_8E, 0x_98, 0x_55, 0x_57, 0x_D7, 0x_B0, 0x_89, 0x_84, 0x_08, 0x_F2,
		0x_B4, 0x_61, 0x_82, 0x_AC, 0x_65, 0x_9B, 0x_19, 0x_5D, 0x_FD, 0x_A1, 0x_03, 0x_81, 0x_FB, 0x_1D, 0x_D0,
		0x_BF, 0x_22, 0x_6A, 0x_33, 0x_4E, 0x_A4, 0x_CD, 0x_21, 0x_BD, 0x_02, 0x_A7, 0x_D9, 0x_FE, 0x_72, 0x_5C,
		0x_EF, 0x_F0, 0x_04, 0x_1C, 0x_AB, 0x_1F, 0x_CF, 0x_BA, 0x_A0, 0x_52, 0x_DA, 0x_3A, 0x_29, 0x_7E, 0x_2C,
		0x_15, 0x_92, 0x_28, 0x_6E, 0x_05, 0x_B8, 0x_C4, 0x_8F, 0x_9A, 0x_E4, 0x_BB, 0x_F8, 0x_25, 0x_E5, 0x_3D,
		0x_2A, 0x_83, 0x_66, 0x_3F, 0x_51, 0x_26, 0x_49, 0x_37, 0x_F7, 0x_F3, 0x_80, 0x_88, 0x_42, 0x_1A, 0x_71,
		0x_3E, 0x_D3, 0x_59, 0x_95, 0x_FA, 0x_DF, 0x_53, 0x_77, 0x_9C, 0x_6D, 0x_6B, 0x_14, 0x_F5, 0x_B1, 0x_5B,
		0x_17, 0x_58, 0x_B2, 0x_C1, 0x_75, 0x_AE, 0x_2E, 0x_9F, 0x_7D, 0x_8D, 0x_0E, 0x_D1, 0x_78, 0x_C6, 0x_B5,
		0x_4F, 0x_91, 0x_DD, 0x_A6, 0x_63, 0x_1E, 0x_70, 0x_8B, 0x_A3, 0x_62, 0x_34, 0x_E7, 0x_46, 0x_50, 0x_C2,
		0x_DC, 0x_60, 0x_CA, 0x_C3, 0x_11, 0x_D4, 0x_4D, 0x_64, 0x_86, 0x_9E, 0x_2F, 0x_F6, 0x_BE,
	];

	helper(S, BASE, -922_201_902);
}
// endregion
// region: s_has_whitespaces_and_minus_3_in_base_247
#[test]
fn s_has_whitespaces_and_minus_3_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0B,
		0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0B,
		0x_0C, 0x_0C, 0x_0B, 0x_2D, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_F0, 0x_B0, 0x_52, 0x_D1, 0x_57, 0x_DF, 0x_69, 0x_3F, 0x_B5, 0x_A8, 0x_34, 0x_40, 0x_AB, 0x_B7,
		0x_68, 0x_21, 0x_C1, 0x_EF, 0x_13, 0x_08, 0x_8C, 0x_62, 0x_DB, 0x_35, 0x_42, 0x_60, 0x_1C, 0x_1F, 0x_41,
		0x_D9, 0x_45, 0x_BB, 0x_54, 0x_70, 0x_5E, 0x_8A, 0x_80, 0x_9B, 0x_DA, 0x_5A, 0x_12, 0x_DD, 0x_1A, 0x_F9,
		0x_29, 0x_36, 0x_1D, 0x_B3, 0x_3A, 0x_A3, 0x_90, 0x_9D, 0x_6A, 0x_FF, 0x_16, 0x_2C, 0x_5B, 0x_B2, 0x_CB,
		0x_2F, 0x_31, 0x_79, 0x_03, 0x_59, 0x_A2, 0x_C7, 0x_C5, 0x_4F, 0x_46, 0x_51, 0x_3B, 0x_30, 0x_5D, 0x_CE,
		0x_38, 0x_FB, 0x_BD, 0x_8B, 0x_33, 0x_9F, 0x_76, 0x_50, 0x_4A, 0x_F7, 0x_C9, 0x_66, 0x_CC, 0x_9E, 0x_97,
		0x_C0, 0x_3C, 0x_44, 0x_F5, 0x_4B, 0x_87, 0x_4C, 0x_23, 0x_AC, 0x_F1, 0x_B6, 0x_5C, 0x_B4, 0x_58, 0x_DC,
		0x_DE, 0x_7D, 0x_EB, 0x_19, 0x_15, 0x_28, 0x_CD, 0x_AE, 0x_39, 0x_E7, 0x_A1, 0x_C4, 0x_E9, 0x_F4, 0x_D6,
		0x_04, 0x_CF, 0x_E6, 0x_91, 0x_FD, 0x_4E, 0x_94, 0x_E0, 0x_98, 0x_86, 0x_B1, 0x_8E, 0x_11, 0x_0E, 0x_3E,
		0x_AD, 0x_71, 0x_61, 0x_C8, 0x_22, 0x_1B, 0x_FA, 0x_CA, 0x_AA, 0x_F3, 0x_56, 0x_05, 0x_5F, 0x_E5, 0x_49,
		0x_75, 0x_A9, 0x_D3, 0x_7E, 0x_43, 0x_1E, 0x_C2, 0x_7C, 0x_8F, 0x_84, 0x_37, 0x_02, 0x_85, 0x_55, 0x_67,
		0x_96, 0x_88, 0x_EA, 0x_E2, 0x_6F, 0x_26, 0x_6D, 0x_06, 0x_72, 0x_A6, 0x_01, 0x_0F, 0x_99, 0x_D8, 0x_EC,
		0x_E1, 0x_2A, 0x_A5, 0x_77, 0x_25, 0x_D4, 0x_E8, 0x_83, 0x_7A, 0x_BE, 0x_32, 0x_D2, 0x_B8, 0x_BA, 0x_18,
		0x_14, 0x_10, 0x_C3, 0x_A7, 0x_48, 0x_F8, 0x_AF, 0x_4D, 0x_FE, 0x_81, 0x_F6, 0x_2E, 0x_6C, 0x_27, 0x_64,
		0x_82, 0x_95, 0x_D0, 0x_FC, 0x_EE, 0x_93, 0x_A4, 0x_D5, 0x_47, 0x_9C, 0x_65, 0x_73, 0x_9A, 0x_74, 0x_BC,
		0x_E4, 0x_D7, 0x_24, 0x_53, 0x_8D, 0x_ED, 0x_F2, 0x_7B, 0x_7F, 0x_A0, 0x_B9, 0x_92, 0x_78, 0x_89, 0x_3D,
		0x_C6, 0x_6B, 0x_63, 0x_6E, 0x_17, 0x_E3, 0x_07,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_minus_99_in_base_247
#[test]
fn s_has_whitespaces_and_minus_99_in_base_247() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0C,
		0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_2D, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_3A, 0x_35, 0x_83, 0x_33, 0x_1E, 0x_F1, 0x_AF, 0x_40, 0x_31, 0x_6F, 0x_1B, 0x_3E, 0x_11, 0x_68,
		0x_47, 0x_B6, 0x_D4, 0x_22, 0x_DC, 0x_DF, 0x_77, 0x_34, 0x_7A, 0x_E8, 0x_96, 0x_21, 0x_5C, 0x_64, 0x_7F,
		0x_24, 0x_19, 0x_CB, 0x_C6, 0x_9B, 0x_4E, 0x_D0, 0x_DA, 0x_CC, 0x_8D, 0x_BB, 0x_98, 0x_A3, 0x_72, 0x_D9,
		0x_8E, 0x_29, 0x_EA, 0x_C3, 0x_E5, 0x_6D, 0x_88, 0x_FE, 0x_9D, 0x_84, 0x_92, 0x_53, 0x_A2, 0x_4D, 0x_2E,
		0x_E7, 0x_FA, 0x_EC, 0x_50, 0x_23, 0x_A9, 0x_F5, 0x_7E, 0x_B5, 0x_26, 0x_73, 0x_13, 0x_CD, 0x_9A, 0x_66,
		0x_E4, 0x_D5, 0x_41, 0x_AE, 0x_C1, 0x_6A, 0x_39, 0x_67, 0x_94, 0x_CF, 0x_74, 0x_F4, 0x_AB, 0x_55, 0x_90,
		0x_BA, 0x_9E, 0x_80, 0x_5D, 0x_B3, 0x_FF, 0x_37, 0x_43, 0x_2C, 0x_32, 0x_CA, 0x_15, 0x_A0, 0x_0E, 0x_59,
		0x_F8, 0x_8A, 0x_27, 0x_BD, 0x_B9, 0x_8F, 0x_14, 0x_B1, 0x_3F, 0x_E2, 0x_93, 0x_12, 0x_B4, 0x_30, 0x_95,
		0x_C0, 0x_99, 0x_28, 0x_DE, 0x_38, 0x_3B, 0x_5F, 0x_91, 0x_6B, 0x_AD, 0x_81, 0x_5B, 0x_61, 0x_1F, 0x_70,
		0x_ED, 0x_E3, 0x_D1, 0x_B0, 0x_7B, 0x_0F, 0x_B7, 0x_F3, 0x_EE, 0x_42, 0x_62, 0x_02, 0x_82, 0x_1C, 0x_6C,
		0x_79, 0x_03, 0x_4A, 0x_A6, 0x_EB, 0x_B8, 0x_C4, 0x_BE, 0x_C8, 0x_D3, 0x_C7, 0x_D2, 0x_A8, 0x_54, 0x_CE,
		0x_4C, 0x_08, 0x_9C, 0x_D6, 0x_45, 0x_36, 0x_E9, 0x_F9, 0x_6E, 0x_44, 0x_5A, 0x_56, 0x_25, 0x_76, 0x_06,
		0x_F7, 0x_89, 0x_1D, 0x_04, 0x_DD, 0x_85, 0x_F2, 0x_2F, 0x_8B, 0x_E6, 0x_4B, 0x_E0, 0x_C9, 0x_B2, 0x_65,
		0x_3D, 0x_10, 0x_AA, 0x_57, 0x_7D, 0x_A1, 0x_87, 0x_4F, 0x_05, 0x_FD, 0x_48, 0x_52, 0x_78, 0x_5E, 0x_2A,
		0x_49, 0x_D8, 0x_7C, 0x_18, 0x_01, 0x_58, 0x_9F, 0x_BF, 0x_AC, 0x_51, 0x_F6, 0x_BC, 0x_17, 0x_F0, 0x_FC,
		0x_3C, 0x_FB, 0x_C5, 0x_D7, 0x_71, 0x_C2, 0x_46, 0x_A4, 0x_69, 0x_A5, 0x_DB, 0x_97, 0x_63, 0x_1A, 0x_07,
		0x_8C, 0x_86, 0x_A7, 0x_E1, 0x_16, 0x_EF, 0x_60,
	];

	helper(S, BASE, -99);
}
// endregion
// region: s_has_whitespaces_and_minus_702_in_base_247
#[test]
fn s_has_whitespaces_and_minus_702_in_base_247() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_2D, 0x_9D, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_39, 0x_9D, 0x_24, 0x_DB, 0x_AA, 0x_94, 0x_76, 0x_96, 0x_78, 0x_FB, 0x_59, 0x_6C, 0x_63, 0x_51,
		0x_B7, 0x_B4, 0x_81, 0x_D2, 0x_34, 0x_02, 0x_73, 0x_12, 0x_D1, 0x_2A, 0x_84, 0x_49, 0x_85, 0x_1C, 0x_18,
		0x_8C, 0x_9F, 0x_21, 0x_3F, 0x_4A, 0x_4D, 0x_A2, 0x_08, 0x_BB, 0x_F9, 0x_31, 0x_8D, 0x_7F, 0x_C3, 0x_50,
		0x_A1, 0x_E0, 0x_90, 0x_FA, 0x_42, 0x_6D, 0x_64, 0x_7C, 0x_5F, 0x_3A, 0x_FD, 0x_0F, 0x_28, 0x_A3, 0x_95,
		0x_80, 0x_91, 0x_71, 0x_32, 0x_C7, 0x_A0, 0x_BC, 0x_8E, 0x_CB, 0x_C0, 0x_33, 0x_52, 0x_07, 0x_CF, 0x_F6,
		0x_AD, 0x_25, 0x_40, 0x_F1, 0x_72, 0x_57, 0x_10, 0x_1B, 0x_5B, 0x_2E, 0x_60, 0x_DC, 0x_CC, 0x_04, 0x_D5,
		0x_89, 0x_A7, 0x_8A, 0x_45, 0x_E9, 0x_5A, 0x_05, 0x_26, 0x_C6, 0x_9C, 0x_47, 0x_75, 0x_03, 0x_58, 0x_4C,
		0x_D9, 0x_B8, 0x_7B, 0x_3E, 0x_36, 0x_65, 0x_5D, 0x_D6, 0x_E3, 0x_98, 0x_F4, 0x_B0, 0x_E5, 0x_F3, 0x_F8,
		0x_6F, 0x_B6, 0x_E7, 0x_48, 0x_F0, 0x_67, 0x_55, 0x_BE, 0x_C5, 0x_37, 0x_DD, 0x_74, 0x_CA, 0x_1A, 0x_AE,
		0x_F5, 0x_AF, 0x_92, 0x_29, 0x_70, 0x_CD, 0x_7E, 0x_44, 0x_DE, 0x_FF, 0x_2C, 0x_87, 0x_61, 0x_7D, 0x_1D,
		0x_A9, 0x_16, 0x_23, 0x_DA, 0x_9E, 0x_EF, 0x_56, 0x_FC, 0x_13, 0x_93, 0x_82, 0x_E2, 0x_88, 0x_35, 0x_79,
		0x_43, 0x_E1, 0x_0E, 0x_A4, 0x_38, 0x_4E, 0x_77, 0x_22, 0x_D8, 0x_53, 0x_B3, 0x_EC, 0x_66, 0x_41, 0x_E4,
		0x_D3, 0x_19, 0x_1F, 0x_B1, 0x_C4, 0x_4F, 0x_BF, 0x_E6, 0x_15, 0x_E8, 0x_97, 0x_A5, 0x_FE, 0x_5E, 0x_B2,
		0x_C9, 0x_30, 0x_EE, 0x_14, 0x_99, 0x_8B, 0x_11, 0x_6B, 0x_06, 0x_3D, 0x_BA, 0x_B5, 0x_01, 0x_F7, 0x_6A,
		0x_EB, 0x_9A, 0x_7A, 0x_BD, 0x_83, 0x_3B, 0x_4B, 0x_9B, 0x_EA, 0x_AB, 0x_AC, 0x_D0, 0x_DF, 0x_8F, 0x_F2,
		0x_B9, 0x_86, 0x_17, 0x_5C, 0x_46, 0x_54, 0x_C1, 0x_2F, 0x_C8, 0x_69, 0x_D4, 0x_CE, 0x_D7, 0x_27, 0x_3C,
		0x_6E, 0x_A8, 0x_ED, 0x_62, 0x_68, 0x_C2, 0x_1E,
	];

	helper(S, BASE, -702);
}
// endregion
// region: s_has_whitespaces_and_minus_1_790_in_base_247
#[test]
fn s_has_whitespaces_and_minus_1_790_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_20,
		0x_09, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0A,
		0x_0C, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_2D, 0x_75, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_F3, 0x_A5, 0x_A8, 0x_FD, 0x_78, 0x_AB, 0x_75, 0x_FF, 0x_84, 0x_2F, 0x_E7, 0x_74, 0x_24, 0x_9A,
		0x_F2, 0x_C8, 0x_49, 0x_E0, 0x_BA, 0x_BD, 0x_18, 0x_EF, 0x_44, 0x_CB, 0x_36, 0x_A6, 0x_A3, 0x_5B, 0x_3D,
		0x_31, 0x_94, 0x_E8, 0x_F0, 0x_6E, 0x_C5, 0x_C0, 0x_B0, 0x_CD, 0x_B2, 0x_6F, 0x_51, 0x_4B, 0x_58, 0x_DF,
		0x_97, 0x_D3, 0x_A1, 0x_29, 0x_8B, 0x_E1, 0x_55, 0x_59, 0x_0E, 0x_9C, 0x_01, 0x_6D, 0x_05, 0x_0F, 0x_34,
		0x_91, 0x_D5, 0x_4C, 0x_C3, 0x_CA, 0x_A7, 0x_8E, 0x_D9, 0x_41, 0x_AA, 0x_12, 0x_EB, 0x_B5, 0x_96, 0x_16,
		0x_C9, 0x_FA, 0x_7B, 0x_B3, 0x_45, 0x_63, 0x_4E, 0x_7F, 0x_EA, 0x_76, 0x_86, 0x_83, 0x_B7, 0x_E6, 0x_3C,
		0x_B4, 0x_6C, 0x_56, 0x_C1, 0x_28, 0x_D7, 0x_FB, 0x_71, 0x_ED, 0x_E5, 0x_14, 0x_7D, 0x_40, 0x_D6, 0x_79,
		0x_B8, 0x_EC, 0x_52, 0x_39, 0x_A2, 0x_3E, 0x_C4, 0x_9B, 0x_70, 0x_8D, 0x_35, 0x_93, 0x_A9, 0x_2E, 0x_F4,
		0x_98, 0x_CF, 0x_D4, 0x_81, 0x_95, 0x_FE, 0x_E2, 0x_9F, 0x_A0, 0x_22, 0x_4D, 0x_F7, 0x_48, 0x_4F, 0x_DA,
		0x_82, 0x_64, 0x_80, 0x_60, 0x_53, 0x_6A, 0x_3F, 0x_CC, 0x_DB, 0x_BC, 0x_9D, 0x_3A, 0x_D8, 0x_02, 0x_90,
		0x_1E, 0x_BB, 0x_69, 0x_1B, 0x_68, 0x_B9, 0x_87, 0x_EE, 0x_50, 0x_32, 0x_10, 0x_F8, 0x_57, 0x_5E, 0x_33,
		0x_6B, 0x_DE, 0x_65, 0x_27, 0x_AD, 0x_C7, 0x_17, 0x_5D, 0x_C2, 0x_7A, 0x_8A, 0x_AE, 0x_D1, 0x_62, 0x_F9,
		0x_13, 0x_8C, 0x_5A, 0x_72, 0x_3B, 0x_1D, 0x_07, 0x_FC, 0x_CE, 0x_73, 0x_E9, 0x_DC, 0x_8F, 0x_77, 0x_7C,
		0x_D0, 0x_F1, 0x_21, 0x_15, 0x_DD, 0x_B1, 0x_67, 0x_26, 0x_38, 0x_85, 0x_43, 0x_19, 0x_E3, 0x_2A, 0x_F6,
		0x_F5, 0x_AC, 0x_04, 0x_61, 0x_C6, 0x_23, 0x_A4, 0x_25, 0x_4A, 0x_42, 0x_1A, 0x_46, 0x_92, 0x_66, 0x_08,
		0x_11, 0x_1C, 0x_47, 0x_30, 0x_89, 0x_37, 0x_D2, 0x_1F, 0x_BE, 0x_7E, 0x_99, 0x_2C, 0x_E4, 0x_AF, 0x_88,
		0x_B6, 0x_9E, 0x_5F, 0x_5C, 0x_06, 0x_54, 0x_BF,
	];

	helper(S, BASE, -1_790);
}
// endregion
// region: s_has_whitespaces_and_minus_56_056_in_base_247
#[test]
fn s_has_whitespaces_and_minus_56_056_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_2D, 0x_8D, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_4C, 0x_53, 0x_EF, 0x_8C, 0x_2E, 0x_54, 0x_80, 0x_A9, 0x_34, 0x_BA, 0x_62, 0x_7E, 0x_B3, 0x_FE,
		0x_98, 0x_23, 0x_45, 0x_AC, 0x_37, 0x_40, 0x_5A, 0x_9F, 0x_42, 0x_74, 0x_BC, 0x_13, 0x_C6, 0x_FD, 0x_59,
		0x_F3, 0x_35, 0x_CB, 0x_16, 0x_83, 0x_D6, 0x_31, 0x_49, 0x_1A, 0x_69, 0x_6F, 0x_27, 0x_D4, 0x_1C, 0x_84,
		0x_E8, 0x_06, 0x_75, 0x_C2, 0x_60, 0x_91, 0x_14, 0x_AA, 0x_02, 0x_3C, 0x_08, 0x_6A, 0x_8F, 0x_F5, 0x_52,
		0x_2F, 0x_58, 0x_28, 0x_B9, 0x_F4, 0x_4F, 0x_0F, 0x_7D, 0x_81, 0x_FF, 0x_5B, 0x_43, 0x_82, 0x_B2, 0x_94,
		0x_6D, 0x_4E, 0x_AB, 0x_85, 0x_03, 0x_F2, 0x_EA, 0x_3D, 0x_AF, 0x_9B, 0x_DD, 0x_C5, 0x_3E, 0x_8E, 0x_99,
		0x_90, 0x_B5, 0x_36, 0x_C1, 0x_EC, 0x_E4, 0x_3B, 0x_9C, 0x_E3, 0x_DA, 0x_63, 0x_97, 0x_87, 0x_B1, 0x_A2,
		0x_BB, 0x_71, 0x_1D, 0x_12, 0x_A0, 0x_79, 0x_26, 0x_CD, 0x_67, 0x_30, 0x_1B, 0x_3F, 0x_5D, 0x_CA, 0x_78,
		0x_C0, 0x_6E, 0x_70, 0x_15, 0x_56, 0x_FC, 0x_EB, 0x_A4, 0x_F1, 0x_46, 0x_32, 0x_10, 0x_A1, 0x_E1, 0x_5F,
		0x_66, 0x_E0, 0x_FA, 0x_77, 0x_E9, 0x_A6, 0x_F9, 0x_7B, 0x_4A, 0x_72, 0x_89, 0x_F7, 0x_57, 0x_29, 0x_65,
		0x_92, 0x_25, 0x_9E, 0x_6B, 0x_44, 0x_A8, 0x_B8, 0x_6C, 0x_51, 0x_07, 0x_24, 0x_38, 0x_4D, 0x_88, 0x_7A,
		0x_61, 0x_C9, 0x_FB, 0x_DF, 0x_55, 0x_E6, 0x_D2, 0x_05, 0x_0E, 0x_17, 0x_2A, 0x_76, 0x_2C, 0x_73, 0x_7C,
		0x_E7, 0x_DC, 0x_C4, 0x_9D, 0x_A3, 0x_B7, 0x_4B, 0x_BE, 0x_04, 0x_ED, 0x_AE, 0x_D9, 0x_E2, 0x_95, 0x_C8,
		0x_68, 0x_BD, 0x_A5, 0x_B6, 0x_50, 0x_C7, 0x_21, 0x_93, 0x_EE, 0x_7F, 0x_1F, 0x_DE, 0x_F0, 0x_01, 0x_8A,
		0x_41, 0x_48, 0x_C3, 0x_18, 0x_3A, 0x_F8, 0x_33, 0x_D0, 0x_CC, 0x_CE, 0x_11, 0x_8B, 0x_D7, 0x_D1, 0x_22,
		0x_D8, 0x_8D, 0x_CF, 0x_19, 0x_9A, 0x_D3, 0x_5C, 0x_96, 0x_F6, 0x_64, 0x_E5, 0x_BF, 0x_B0, 0x_D5, 0x_1E,
		0x_AD, 0x_5E, 0x_86, 0x_39, 0x_DB, 0x_A7, 0x_B4,
	];

	helper(S, BASE, -56_056);
}
// endregion
// region: s_has_whitespaces_and_minus_317_617_in_base_247
#[test]
fn s_has_whitespaces_and_minus_317_617_in_base_247() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_2D, 0x_76, 0x_B3, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_E9, 0x_62, 0x_63, 0x_19, 0x_FA, 0x_76, 0x_23, 0x_91, 0x_D2, 0x_93, 0x_04, 0x_89, 0x_A6, 0x_2A, 0x_70,
		0x_AF, 0x_2F, 0x_64, 0x_7C, 0x_24, 0x_A4, 0x_9A, 0x_28, 0x_F3, 0x_F7, 0x_C6, 0x_3E, 0x_69, 0x_02, 0x_21,
		0x_51, 0x_98, 0x_BE, 0x_85, 0x_41, 0x_AE, 0x_AB, 0x_22, 0x_DE, 0x_DF, 0x_08, 0x_87, 0x_C5, 0x_AA, 0x_01,
		0x_F6, 0x_D3, 0x_EC, 0x_C0, 0x_16, 0x_B3, 0x_4F, 0x_B1, 0x_6B, 0x_A2, 0x_47, 0x_84, 0x_EF, 0x_42, 0x_A5,
		0x_9B, 0x_95, 0x_BB, 0x_F0, 0x_3C, 0x_17, 0x_2C, 0x_D8, 0x_F5, 0x_CB, 0x_48, 0x_53, 0x_D0, 0x_8A, 0x_5C,
		0x_5B, 0x_77, 0x_F2, 0x_B2, 0x_AD, 0x_C4, 0x_27, 0x_1F, 0x_25, 0x_3A, 0x_E6, 0x_12, 0x_3B, 0x_72, 0x_80,
		0x_E8, 0x_F9, 0x_83, 0x_4C, 0x_30, 0x_0F, 0x_79, 0x_FB, 0x_82, 0x_44, 0x_BF, 0x_74, 0x_58, 0x_86, 0x_71,
		0x_B4, 0x_5E, 0x_61, 0x_E0, 0x_A8, 0x_8C, 0x_9E, 0x_A1, 0x_EA, 0x_1A, 0x_FF, 0x_66, 0x_B8, 0x_E4, 0x_A7,
		0x_D5, 0x_A3, 0x_1B, 0x_4E, 0x_C1, 0x_9F, 0x_90, 0x_65, 0x_BD, 0x_D1, 0x_9C, 0x_31, 0x_33, 0x_92, 0x_B0,
		0x_C3, 0x_6F, 0x_50, 0x_60, 0x_3D, 0x_59, 0x_26, 0x_DD, 0x_05, 0x_3F, 0x_E5, 0x_0E, 0x_1C, 0x_11, 0x_FE,
		0x_49, 0x_7B, 0x_14, 0x_4B, 0x_B6, 0x_43, 0x_6E, 0x_52, 0x_37, 0x_2E, 0x_7F, 0x_D4, 0x_81, 0x_E7, 0x_39,
		0x_EB, 0x_54, 0x_1D, 0x_A9, 0x_97, 0x_C2, 0x_36, 0x_F1, 0x_C9, 0x_68, 0x_D6, 0x_CA, 0x_75, 0x_D9, 0x_F4,
		0x_CE, 0x_CF, 0x_F8, 0x_6C, 0x_29, 0x_8B, 0x_1E, 0x_DA, 0x_E2, 0x_EE, 0x_4A, 0x_5F, 0x_DB, 0x_DC, 0x_D7,
		0x_78, 0x_13, 0x_03, 0x_8F, 0x_B9, 0x_E3, 0x_34, 0x_CD, 0x_73, 0x_88, 0x_38, 0x_5A, 0x_E1, 0x_8E, 0x_15,
		0x_8D, 0x_40, 0x_06, 0x_7D, 0x_6A, 0x_18, 0x_35, 0x_07, 0x_B5, 0x_9D, 0x_BA, 0x_C7, 0x_CC, 0x_BC, 0x_7A,
		0x_57, 0x_A0, 0x_56, 0x_4D, 0x_7E, 0x_55, 0x_10, 0x_FC, 0x_32, 0x_5D, 0x_ED, 0x_C8, 0x_B7, 0x_99, 0x_46,
		0x_FD, 0x_67, 0x_6D, 0x_AC, 0x_45, 0x_94, 0x_96,
	];

	helper(S, BASE, -317_617);
}
// endregion
// region: s_has_whitespaces_and_minus_4_132_988_in_base_247
#[test]
fn s_has_whitespaces_and_minus_4_132_988_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0A,
		0x_0C, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_2D, 0x_7C, 0x_5C, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_49, 0x_84, 0x_91, 0x_58, 0x_66, 0x_34, 0x_A9, 0x_3C, 0x_F2, 0x_DC, 0x_C4, 0x_E7, 0x_EB, 0x_CF,
		0x_0E, 0x_B7, 0x_50, 0x_62, 0x_31, 0x_BC, 0x_AA, 0x_10, 0x_FF, 0x_70, 0x_89, 0x_43, 0x_23, 0x_DE, 0x_44,
		0x_76, 0x_C1, 0x_B8, 0x_AF, 0x_14, 0x_33, 0x_24, 0x_7E, 0x_22, 0x_AB, 0x_B6, 0x_CD, 0x_9A, 0x_A5, 0x_D4,
		0x_88, 0x_73, 0x_C7, 0x_80, 0x_96, 0x_16, 0x_93, 0x_3F, 0x_9D, 0x_42, 0x_FD, 0x_1B, 0x_4D, 0x_5D, 0x_90,
		0x_A1, 0x_DF, 0x_B1, 0x_E3, 0x_85, 0x_B3, 0x_81, 0x_7C, 0x_B0, 0x_F0, 0x_E1, 0x_40, 0x_B9, 0x_CA, 0x_A7,
		0x_52, 0x_1C, 0x_08, 0x_30, 0x_E8, 0x_C2, 0x_AC, 0x_12, 0x_A6, 0x_5B, 0x_13, 0x_17, 0x_F6, 0x_8B, 0x_68,
		0x_36, 0x_CB, 0x_BF, 0x_6E, 0x_92, 0x_FE, 0x_11, 0x_E9, 0x_3A, 0x_A2, 0x_45, 0x_D2, 0x_CE, 0x_AD, 0x_1F,
		0x_6D, 0x_5F, 0x_4E, 0x_9C, 0x_9B, 0x_78, 0x_8D, 0x_29, 0x_D9, 0x_EA, 0x_D0, 0x_39, 0x_E4, 0x_72, 0x_A8,
		0x_5A, 0x_86, 0x_C5, 0x_EE, 0x_BE, 0x_9E, 0x_F5, 0x_F3, 0x_26, 0x_27, 0x_AE, 0x_15, 0x_6B, 0x_E5, 0x_3B,
		0x_98, 0x_1D, 0x_B5, 0x_5E, 0x_59, 0x_21, 0x_02, 0x_DB, 0x_ED, 0x_2A, 0x_37, 0x_B4, 0x_06, 0x_2C, 0x_D1,
		0x_69, 0x_03, 0x_D7, 0x_BA, 0x_71, 0x_83, 0x_6A, 0x_8C, 0x_6C, 0x_7D, 0x_77, 0x_56, 0x_F4, 0x_64, 0x_8F,
		0x_6F, 0x_7A, 0x_FA, 0x_D5, 0x_04, 0x_01, 0x_EC, 0x_61, 0x_4A, 0x_D6, 0x_3E, 0x_2E, 0x_C9, 0x_65, 0x_95,
		0x_B2, 0x_C6, 0x_46, 0x_5C, 0x_C8, 0x_A0, 0x_55, 0x_A4, 0x_60, 0x_18, 0x_2F, 0x_7B, 0x_D8, 0x_1E, 0x_51,
		0x_1A, 0x_19, 0x_25, 0x_BB, 0x_CC, 0x_F1, 0x_E6, 0x_3D, 0x_DA, 0x_A3, 0x_4C, 0x_41, 0x_8E, 0x_99, 0x_38,
		0x_BD, 0x_28, 0x_54, 0x_47, 0x_8A, 0x_53, 0x_9F, 0x_94, 0x_05, 0x_79, 0x_32, 0x_4B, 0x_97, 0x_75, 0x_48,
		0x_F9, 0x_FB, 0x_C3, 0x_63, 0x_82, 0x_C0, 0x_FC, 0x_E0, 0x_74, 0x_4F, 0x_67, 0x_F7, 0x_57, 0x_F8, 0x_0F,
		0x_87, 0x_D3, 0x_35, 0x_EF, 0x_07, 0x_7F, 0x_DD,
	];

	helper(S, BASE, -4_132_988);
}
// endregion
// region: s_has_whitespaces_and_minus_75_291_449_in_base_247
#[test]
fn s_has_whitespaces_and_minus_75_291_449_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_09,
		0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0B,
		0x_2D, 0x_D2, 0x_5C, 0x_55, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_D1, 0x_17, 0x_F9, 0x_D2, 0x_D3, 0x_E6, 0x_48, 0x_60, 0x_B7, 0x_3C, 0x_B0, 0x_84, 0x_57, 0x_DA,
		0x_75, 0x_8F, 0x_9E, 0x_33, 0x_EF, 0x_25, 0x_3F, 0x_E1, 0x_E3, 0x_CD, 0x_55, 0x_34, 0x_F1, 0x_EB, 0x_C2,
		0x_05, 0x_C9, 0x_51, 0x_69, 0x_68, 0x_BE, 0x_1D, 0x_4E, 0x_6E, 0x_5B, 0x_49, 0x_D0, 0x_15, 0x_BD, 0x_92,
		0x_91, 0x_9A, 0x_61, 0x_94, 0x_5A, 0x_A2, 0x_71, 0x_C5, 0x_6C, 0x_22, 0x_C1, 0x_1F, 0x_5D, 0x_A9, 0x_E5,
		0x_3E, 0x_FE, 0x_A7, 0x_C0, 0x_90, 0x_BA, 0x_12, 0x_44, 0x_DB, 0x_D5, 0x_1E, 0x_B3, 0x_EA, 0x_7A, 0x_DC,
		0x_1A, 0x_CA, 0x_AD, 0x_D9, 0x_AA, 0x_5F, 0x_43, 0x_0E, 0x_2F, 0x_CB, 0x_4D, 0x_46, 0x_8A, 0x_47, 0x_2C,
		0x_93, 0x_7F, 0x_89, 0x_7E, 0x_42, 0x_E4, 0x_8C, 0x_97, 0x_D8, 0x_EE, 0x_2E, 0x_02, 0x_8E, 0x_53, 0x_50,
		0x_FF, 0x_18, 0x_10, 0x_78, 0x_5E, 0x_E9, 0x_4C, 0x_BB, 0x_F5, 0x_01, 0x_73, 0x_F2, 0x_C7, 0x_F6, 0x_38,
		0x_A6, 0x_72, 0x_35, 0x_9F, 0x_3B, 0x_62, 0x_F8, 0x_63, 0x_29, 0x_76, 0x_9D, 0x_96, 0x_64, 0x_F4, 0x_AE,
		0x_58, 0x_E2, 0x_D6, 0x_E8, 0x_36, 0x_30, 0x_13, 0x_BF, 0x_CC, 0x_21, 0x_06, 0x_B9, 0x_9C, 0x_E7, 0x_6F,
		0x_6B, 0x_80, 0x_24, 0x_56, 0x_FD, 0x_D7, 0x_23, 0x_26, 0x_40, 0x_FA, 0x_B6, 0x_66, 0x_70, 0x_19, 0x_4A,
		0x_DD, 0x_A0, 0x_C4, 0x_95, 0x_4B, 0x_BC, 0x_67, 0x_37, 0x_C8, 0x_6A, 0x_16, 0x_E0, 0x_DF, 0x_F7, 0x_45,
		0x_77, 0x_A5, 0x_8B, 0x_2A, 0x_8D, 0x_28, 0x_1C, 0x_B8, 0x_98, 0x_59, 0x_81, 0x_C3, 0x_79, 0x_08, 0x_9B,
		0x_65, 0x_39, 0x_AC, 0x_A8, 0x_C6, 0x_7B, 0x_F0, 0x_CE, 0x_7C, 0x_A4, 0x_86, 0x_FC, 0x_99, 0x_1B, 0x_54,
		0x_4F, 0x_03, 0x_AB, 0x_52, 0x_32, 0x_07, 0x_3D, 0x_87, 0x_AF, 0x_B4, 0x_31, 0x_11, 0x_B1, 0x_88, 0x_74,
		0x_0F, 0x_3A, 0x_85, 0x_41, 0x_14, 0x_EC, 0x_F3, 0x_83, 0x_D4, 0x_6D, 0x_27, 0x_DE, 0x_B2, 0x_04, 0x_ED,
		0x_A3, 0x_FB, 0x_B5, 0x_82, 0x_A1, 0x_7D, 0x_5C,
	];

	helper(S, BASE, -75_291_449);
}
// endregion
// region: s_has_whitespaces_and_minus_305_951_682_in_base_247
#[test]
fn s_has_whitespaces_and_minus_305_951_682_in_base_247() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_09,
		0x_0C, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_2D, 0x_BD, 0x_5F, 0x_B6, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_72, 0x_DB, 0x_DC, 0x_67, 0x_46, 0x_FF, 0x_C7, 0x_05, 0x_84, 0x_DD, 0x_E0, 0x_0F, 0x_4B, 0x_86,
		0x_CD, 0x_EB, 0x_A7, 0x_1F, 0x_97, 0x_BD, 0x_19, 0x_A9, 0x_5C, 0x_BB, 0x_D3, 0x_AA, 0x_85, 0x_C3, 0x_B1,
		0x_53, 0x_B7, 0x_62, 0x_A0, 0x_48, 0x_ED, 0x_3D, 0x_73, 0x_4F, 0x_02, 0x_7E, 0x_E6, 0x_3B, 0x_1A, 0x_8A,
		0x_12, 0x_75, 0x_42, 0x_A8, 0x_5E, 0x_5D, 0x_13, 0x_2E, 0x_EF, 0x_96, 0x_1C, 0x_CB, 0x_92, 0x_44, 0x_8B,
		0x_11, 0x_51, 0x_CA, 0x_65, 0x_A2, 0x_6C, 0x_A1, 0x_21, 0x_80, 0x_FD, 0x_AE, 0x_AC, 0x_59, 0x_D7, 0x_5F,
		0x_F2, 0x_A5, 0x_7D, 0x_E2, 0x_EA, 0x_33, 0x_81, 0x_B2, 0x_6F, 0x_E1, 0x_AB, 0x_C4, 0x_9A, 0x_8E, 0x_64,
		0x_06, 0x_37, 0x_D0, 0x_FC, 0x_49, 0x_76, 0x_52, 0x_F7, 0x_C0, 0x_DA, 0x_CC, 0x_68, 0x_1D, 0x_07, 0x_B0,
		0x_F9, 0x_18, 0x_4E, 0x_F4, 0x_26, 0x_E4, 0x_AF, 0x_9E, 0x_D4, 0x_5B, 0x_43, 0x_7C, 0x_6B, 0x_35, 0x_34,
		0x_77, 0x_4A, 0x_C8, 0x_57, 0x_60, 0x_4D, 0x_3E, 0x_99, 0x_F8, 0x_24, 0x_30, 0x_E7, 0x_FE, 0x_F1, 0x_0E,
		0x_50, 0x_1E, 0x_91, 0x_B4, 0x_27, 0x_88, 0x_CE, 0x_10, 0x_23, 0x_38, 0x_3F, 0x_F3, 0x_01, 0x_14, 0x_36,
		0x_29, 0x_6D, 0x_90, 0x_28, 0x_E8, 0x_03, 0x_15, 0x_7B, 0x_CF, 0x_FB, 0x_95, 0x_EE, 0x_87, 0x_D5, 0x_B3,
		0x_58, 0x_F5, 0x_82, 0x_6E, 0x_41, 0x_56, 0x_D1, 0x_89, 0x_BC, 0x_D9, 0x_9D, 0x_2F, 0x_61, 0x_D2, 0x_4C,
		0x_54, 0x_5A, 0x_D6, 0x_74, 0x_8C, 0x_94, 0x_25, 0x_3A, 0x_3C, 0x_31, 0x_83, 0x_A4, 0x_C9, 0x_9C, 0x_70,
		0x_9F, 0x_40, 0x_C1, 0x_71, 0x_39, 0x_69, 0x_08, 0x_B8, 0x_6A, 0x_A3, 0x_79, 0x_A6, 0x_E9, 0x_16, 0x_2C,
		0x_32, 0x_F6, 0x_B6, 0x_BF, 0x_7F, 0x_47, 0x_8F, 0x_D8, 0x_93, 0x_8D, 0x_17, 0x_EC, 0x_BE, 0x_55, 0x_DE,
		0x_AD, 0x_9B, 0x_B5, 0x_BA, 0x_E3, 0x_B9, 0x_DF, 0x_7A, 0x_1B, 0x_45, 0x_E5, 0x_2A, 0x_C5, 0x_78, 0x_22,
		0x_FA, 0x_F0, 0x_98, 0x_C6, 0x_04, 0x_66, 0x_63,
	];

	helper(S, BASE, -305_951_682);
}
// endregion
// region: s_has_signs_and_minus_5_in_base_2
#[test]
fn s_has_signs_and_minus_5_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_8C, 0x_82, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_8C,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_signs_and_minus_68_in_base_2
#[test]
fn s_has_signs_and_minus_68_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_C5, 0x_E0, 0x_E0, 0x_E0, 0x_C5, 0x_E0,
		0x_E0,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_C5,
	];

	helper(S, BASE, -68);
}
// endregion
// region: s_has_signs_and_minus_488_in_base_2
#[test]
fn s_has_signs_and_minus_488_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_36, 0x_36, 0x_36, 0x_36,
		0x_2F, 0x_36, 0x_2F, 0x_2F, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_36,
	];

	helper(S, BASE, -488);
}
// endregion
// region: s_has_signs_and_minus_6_958_in_base_2
#[test]
fn s_has_signs_and_minus_6_958_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2E, 0x_2E, 0x_3A, 0x_2E, 0x_2E, 0x_3A, 0x_3A, 0x_2E, 0x_3A, 0x_2E, 0x_2E, 0x_2E, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_3A, 0x_2E,
	];

	helper(S, BASE, -6_958);
}
// endregion
// region: s_has_signs_and_minus_42_144_in_base_2
#[test]
fn s_has_signs_and_minus_42_144_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_07, 0x_B1, 0x_07, 0x_B1, 0x_B1,
		0x_07, 0x_B1, 0x_B1, 0x_07, 0x_B1, 0x_07, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_07,
	];

	helper(S, BASE, -42_144);
}
// endregion
// region: s_has_signs_and_minus_827_911_in_base_2
#[test]
fn s_has_signs_and_minus_827_911_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_F3, 0x_F3, 0x_17, 0x_17, 0x_F3, 0x_17, 0x_F3, 0x_17, 0x_17, 0x_17, 0x_F3, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_F3, 0x_F3, 0x_F3,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_F3,
	];

	helper(S, BASE, -827_911);
}
// endregion
// region: s_has_signs_and_minus_6_360_934_in_base_2
#[test]
fn s_has_signs_and_minus_6_360_934_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_74, 0x_74, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_74, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_74,
		0x_74, 0x_74, 0x_74, 0x_EC, 0x_74, 0x_74, 0x_EC, 0x_EC, 0x_74, 0x_74, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_EC, 0x_74,
	];

	helper(S, BASE, -6_360_934);
}
// endregion
// region: s_has_signs_and_minus_71_112_281_in_base_2
#[test]
fn s_has_signs_and_minus_71_112_281_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_1B, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_FD, 0x_1B, 0x_FD,
		0x_FD, 0x_FD, 0x_1B, 0x_FD, 0x_1B, 0x_1B, 0x_FD, 0x_FD, 0x_1B, 0x_FD, 0x_1B, 0x_1B, 0x_FD, 0x_FD, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_FD, 0x_1B,
	];

	helper(S, BASE, -71_112_281);
}
// endregion
// region: s_has_signs_and_minus_736_701_974_in_base_2
#[test]
fn s_has_signs_and_minus_736_701_974_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_8D, 0x_8C, 0x_8D, 0x_8C, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8C, 0x_8D, 0x_8C,
		0x_8C, 0x_8D, 0x_8C, 0x_8C, 0x_8D, 0x_8C, 0x_8D, 0x_8D, 0x_8D, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8D, 0x_8C,
		0x_8D, 0x_8D, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_8D,
	];

	helper(S, BASE, -736_701_974);
}
// endregion
// region: s_has_signs_and_minus_8_in_base_3
#[test]
fn s_has_signs_and_minus_8_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_C4, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_68, 0x_C4,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_signs_and_minus_70_in_base_3
#[test]
fn s_has_signs_and_minus_70_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_DE, 0x_CD, 0x_DE, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_CD, 0x_DE,
	];

	helper(S, BASE, -70);
}
// endregion
// region: s_has_signs_and_minus_913_in_base_3
#[test]
fn s_has_signs_and_minus_913_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_F9, 0x_19, 0x_B3,
		0x_19, 0x_B3, 0x_F9, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_F9, 0x_B3,
	];

	helper(S, BASE, -913);
}
// endregion
// region: s_has_signs_and_minus_1_895_in_base_3
#[test]
fn s_has_signs_and_minus_1_895_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_41, 0x_CD, 0x_41, 0x_CD, 0x_98, 0x_CD, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_CD, 0x_41,
	];

	helper(S, BASE, -1_895);
}
// endregion
// region: s_has_signs_and_minus_96_748_in_base_3
#[test]
fn s_has_signs_and_minus_96_748_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_0F, 0x_0F, 0x_2C, 0x_2C, 0x_02, 0x_2C, 0x_02, 0x_0F, 0x_02, 0x_2C, 0x_0F,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_0F, 0x_2C,
	];

	helper(S, BASE, -96_748);
}
// endregion
// region: s_has_signs_and_minus_135_038_in_base_3
#[test]
fn s_has_signs_and_minus_135_038_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_C6, 0x_F1, 0x_C6, 0x_37, 0x_C6, 0x_F1, 0x_C6, 0x_F1, 0x_37,
		0x_F1, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_37, 0x_C6,
	];

	helper(S, BASE, -135_038);
}
// endregion
// region: s_has_signs_and_minus_2_948_828_in_base_3
#[test]
fn s_has_signs_and_minus_2_948_828_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_E8, 0x_87, 0x_E8, 0x_E8, 0x_87,
		0x_87, 0x_E8, 0x_E8, 0x_5C, 0x_5C, 0x_5C, 0x_87, 0x_E8, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_E8, 0x_87,
	];

	helper(S, BASE, -2_948_828);
}
// endregion
// region: s_has_signs_and_minus_79_165_887_in_base_3
#[test]
fn s_has_signs_and_minus_79_165_887_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_AB, 0x_EA, 0x_AB, 0x_AB, 0x_AB, 0x_EA, 0x_EA,
		0x_EA, 0x_5B, 0x_5B, 0x_AB, 0x_5B, 0x_AB, 0x_AB, 0x_EA, 0x_EA, 0x_5B,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_AB, 0x_EA,
	];

	helper(S, BASE, -79_165_887);
}
// endregion
// region: s_has_signs_and_minus_365_324_019_in_base_3
#[test]
fn s_has_signs_and_minus_365_324_019_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_D2, 0x_D2, 0x_B9, 0x_B9, 0x_B9, 0x_F6, 0x_B9,
		0x_F6, 0x_D2, 0x_B9, 0x_F6, 0x_B9, 0x_B9, 0x_F6, 0x_F6, 0x_F6, 0x_D2, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_B9, 0x_D2,
	];

	helper(S, BASE, -365_324_019);
}
// endregion
// region: s_has_signs_and_minus_5_in_base_5
#[test]
fn s_has_signs_and_minus_5_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_05, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_05, 0x_A5, 0x_B8, 0x_82,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_signs_and_minus_23_in_base_5
#[test]
fn s_has_signs_and_minus_23_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_DD,
		0x_E1,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_5E, 0x_E6, 0x_E1, 0x_DD,
	];

	helper(S, BASE, -23);
}
// endregion
// region: s_has_signs_and_minus_704_in_base_5
#[test]
fn s_has_signs_and_minus_704_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_DA, 0x_8D, 0x_FC, 0x_8D, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_DA, 0x_EB, 0x_FC, 0x_54,
	];

	helper(S, BASE, -704);
}
// endregion
// region: s_has_signs_and_minus_5_573_in_base_5
#[test]
fn s_has_signs_and_minus_5_573_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_31, 0x_11, 0x_E6, 0x_F6,
		0x_E6, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_31, 0x_F6, 0x_11, 0x_E6,
	];

	helper(S, BASE, -5_573);
}
// endregion
// region: s_has_signs_and_minus_19_748_in_base_5
#[test]
fn s_has_signs_and_minus_19_748_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_A2, 0x_A2, 0x_A2, 0x_3D, 0x_10,
		0x_10, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_A2, 0x_3D, 0x_86, 0x_10,
	];

	helper(S, BASE, -19_748);
}
// endregion
// region: s_has_signs_and_minus_453_330_in_base_5
#[test]
fn s_has_signs_and_minus_453_330_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_3B, 0x_BC, 0x_32, 0x_BC, 0x_BC, 0x_3B, 0x_D9,
		0x_3B, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_3B, 0x_3A, 0x_D9, 0x_32,
	];

	helper(S, BASE, -453_330);
}
// endregion
// region: s_has_signs_and_minus_9_584_268_in_base_5
#[test]
fn s_has_signs_and_minus_9_584_268_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_05, 0x_05, 0x_1B,
		0x_EA, 0x_C6, 0x_05, 0x_05, 0x_D0, 0x_EA, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_D0, 0x_C6, 0x_1B, 0x_EA, 0x_05,
	];

	helper(S, BASE, -9_584_268);
}
// endregion
// region: s_has_signs_and_minus_73_550_522_in_base_5
#[test]
fn s_has_signs_and_minus_73_550_522_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_A6, 0x_03, 0x_03, 0x_67, 0x_A6, 0x_03, 0x_A6,
		0x_47, 0x_D2, 0x_47, 0x_D2, 0x_03,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_A6, 0x_03, 0x_67, 0x_D2,
	];

	helper(S, BASE, -73_550_522);
}
// endregion
// region: s_has_signs_and_minus_256_000_210_in_base_5
#[test]
fn s_has_signs_and_minus_256_000_210_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_B1, 0x_BC, 0x_B1, 0x_B1,
		0x_BC, 0x_B1, 0x_60, 0x_BC, 0x_BC, 0x_B1, 0x_95, 0x_8F, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_B1, 0x_8F, 0x_95, 0x_60,
	];

	helper(S, BASE, -256_000_210);
}
// endregion
// region: s_has_signs_and_minus_3_in_base_7
#[test]
fn s_has_signs_and_minus_3_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_D7, 0x_8D, 0x_BC, 0x_D3, 0x_3F, 0x_54,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_signs_and_minus_38_in_base_7
#[test]
fn s_has_signs_and_minus_38_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_FC, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_55, 0x_54, 0x_A6, 0x_73, 0x_FC, 0x_04,
	];

	helper(S, BASE, -38);
}
// endregion
// region: s_has_signs_and_minus_492_in_base_7
#[test]
fn s_has_signs_and_minus_492_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_E3, 0x_F5, 0x_E8, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_E8, 0x_E3, 0x_6E, 0x_F5, 0x_9B, 0x_CA, 0x_53,
	];

	helper(S, BASE, -492);
}
// endregion
// region: s_has_signs_and_minus_3_831_in_base_7
#[test]
fn s_has_signs_and_minus_3_831_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_96, 0x_03, 0x_96, 0x_96, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_96, 0x_49, 0x_E5, 0x_03, 0x_95, 0x_01,
	];

	helper(S, BASE, -3_831);
}
// endregion
// region: s_has_signs_and_minus_74_216_in_base_7
#[test]
fn s_has_signs_and_minus_74_216_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_39, 0x_D5, 0x_A8, 0x_D5, 0x_39, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_AD, 0x_6C, 0x_D5, 0x_07, 0x_39, 0x_D0, 0x_A8,
	];

	helper(S, BASE, -74_216);
}
// endregion
// region: s_has_signs_and_minus_913_686_in_base_7
#[test]
fn s_has_signs_and_minus_913_686_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_19,
		0x_C5, 0x_49, 0x_BF, 0x_E1, 0x_49, 0x_43, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_19, 0x_BF, 0x_E1, 0x_43, 0x_49, 0x_95,
	];

	helper(S, BASE, -913_686);
}
// endregion
// region: s_has_signs_and_minus_9_179_736_in_base_7
#[test]
fn s_has_signs_and_minus_9_179_736_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_7B, 0x_3F, 0x_7B,
		0x_B7, 0x_7B, 0x_E3, 0x_B7, 0x_97, 0x_9B,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_7B, 0x_E3, 0x_97, 0x_3F, 0x_96, 0x_9B,
	];

	helper(S, BASE, -9_179_736);
}
// endregion
// region: s_has_signs_and_minus_59_905_313_in_base_7
#[test]
fn s_has_signs_and_minus_59_905_313_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_8B, 0x_4D, 0x_91, 0x_92, 0x_8B, 0x_91, 0x_8B, 0x_46, 0x_91, 0x_77,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_8B, 0x_91, 0x_4D, 0x_38, 0x_92, 0x_77,
	];

	helper(S, BASE, -59_905_313);
}
// endregion
// region: s_has_signs_and_minus_824_120_374_in_base_7
#[test]
fn s_has_signs_and_minus_824_120_374_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_A4, 0x_12, 0x_A4, 0x_12, 0x_3F, 0x_12, 0x_A4, 0x_9C, 0x_A4,
		0x_17, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_17, 0x_A4, 0x_9C, 0x_3F, 0x_1A, 0x_12,
	];

	helper(S, BASE, -824_120_374);
}
// endregion
// region: s_has_signs_and_minus_6_in_base_11
#[test]
fn s_has_signs_and_minus_6_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_CD,
	];
	const BASE: &[u8] = &[
		0x_FD, 0x_98, 0x_41, 0x_82, 0x_3F, 0x_05, 0x_CD, 0x_DE, 0x_97, 0x_21, 0x_B6,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_signs_and_minus_29_in_base_11
#[test]
fn s_has_signs_and_minus_29_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2C, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_18, 0x_2C, 0x_9C, 0x_95, 0x_71, 0x_3D, 0x_B7, 0x_6E, 0x_61, 0x_93,
	];

	helper(S, BASE, -29);
}
// endregion
// region: s_has_signs_and_minus_755_in_base_11
#[test]
fn s_has_signs_and_minus_755_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_08, 0x_67,
		0x_91,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_A2, 0x_67, 0x_FE, 0x_D4, 0x_FD, 0x_08, 0x_91, 0x_97, 0x_7D, 0x_37,
	];

	helper(S, BASE, -755);
}
// endregion
// region: s_has_signs_and_minus_7_719_in_base_11
#[test]
fn s_has_signs_and_minus_7_719_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_EB,
		0x_1B, 0x_1B, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_94, 0x_C4, 0x_CF, 0x_5E, 0x_EB, 0x_A5, 0x_97, 0x_1B, 0x_81, 0x_6F,
	];

	helper(S, BASE, -7_719);
}
// endregion
// region: s_has_signs_and_minus_68_567_in_base_11
#[test]
fn s_has_signs_and_minus_68_567_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2F, 0x_73, 0x_3B, 0x_73, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_36, 0x_30, 0x_AF, 0x_A4, 0x_2F, 0x_3B, 0x_8E, 0x_73, 0x_D8, 0x_B5, 0x_9D,
	];

	helper(S, BASE, -68_567);
}
// endregion
// region: s_has_signs_and_minus_883_448_in_base_11
#[test]
fn s_has_signs_and_minus_883_448_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_64, 0x_64, 0x_CB, 0x_69, 0x_8E, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_B6, 0x_8E, 0x_CB, 0x_5A, 0x_64, 0x_E0, 0x_1A, 0x_69, 0x_17, 0x_07,
	];

	helper(S, BASE, -883_448);
}
// endregion
// region: s_has_signs_and_minus_2_540_271_in_base_11
#[test]
fn s_has_signs_and_minus_2_540_271_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_DE, 0x_07, 0x_7B, 0x_D8, 0x_D8, 0x_13,
		0x_7B,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_DE, 0x_10, 0x_4B, 0x_07, 0x_D8, 0x_63, 0x_27, 0x_7B, 0x_45, 0x_13,
	];

	helper(S, BASE, -2_540_271);
}
// endregion
// region: s_has_signs_and_minus_16_255_881_in_base_11
#[test]
fn s_has_signs_and_minus_16_255_881_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_51, 0x_12,
		0x_D6, 0x_C2, 0x_C2, 0x_12, 0x_AC,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_12, 0x_FD, 0x_C2, 0x_AC, 0x_40, 0x_48, 0x_5C, 0x_17, 0x_51, 0x_D6,
	];

	helper(S, BASE, -16_255_881);
}
// endregion
// region: s_has_signs_and_minus_361_901_021_in_base_11
#[test]
fn s_has_signs_and_minus_361_901_021_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_11, 0x_30,
		0x_D6, 0x_F5, 0x_11, 0x_F5, 0x_D6, 0x_B8, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_11, 0x_46, 0x_F5, 0x_A8, 0x_B8, 0x_D6, 0x_30, 0x_28, 0x_BC, 0x_42,
	];

	helper(S, BASE, -361_901_021);
}
// endregion
// region: s_has_signs_and_minus_2_in_base_13
#[test]
fn s_has_signs_and_minus_2_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_1E, 0x_1B, 0x_81, 0x_8F, 0x_3D, 0x_E0, 0x_78, 0x_E3, 0x_6E, 0x_E5, 0x_7A, 0x_72,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_signs_and_minus_17_in_base_13
#[test]
fn s_has_signs_and_minus_17_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_3C,
		0x_E6,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_3C, 0x_A2, 0x_3F, 0x_E6, 0x_90, 0x_DB, 0x_FF, 0x_8B, 0x_22, 0x_2F, 0x_3D, 0x_8E,
	];

	helper(S, BASE, -17);
}
// endregion
// region: s_has_signs_and_minus_675_in_base_13
#[test]
fn s_has_signs_and_minus_675_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_5E, 0x_41, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_F9, 0x_7F, 0x_5E, 0x_E4, 0x_99, 0x_D8, 0x_04, 0x_70, 0x_64, 0x_5D, 0x_48, 0x_41,
	];

	helper(S, BASE, -675);
}
// endregion
// region: s_has_signs_and_minus_1_222_in_base_13
#[test]
fn s_has_signs_and_minus_1_222_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_E7, 0x_CD, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_A7, 0x_A3, 0x_CD, 0x_D5, 0x_25, 0x_74, 0x_E7, 0x_9D, 0x_92, 0x_19, 0x_76, 0x_1B,
	];

	helper(S, BASE, -1_222);
}
// endregion
// region: s_has_signs_and_minus_27_249_in_base_13
#[test]
fn s_has_signs_and_minus_27_249_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_E5, 0x_14, 0x_1F,
		0x_BA,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_BA, 0x_6B, 0x_1F, 0x_9C, 0x_14, 0x_89, 0x_31, 0x_B2, 0x_1D, 0x_C0, 0x_49, 0x_E5,
	];

	helper(S, BASE, -27_249);
}
// endregion
// region: s_has_signs_and_minus_220_608_in_base_13
#[test]
fn s_has_signs_and_minus_220_608_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_13, 0x_99, 0x_D6, 0x_73, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_60, 0x_17, 0x_64, 0x_73, 0x_D6, 0x_EE, 0x_13, 0x_95, 0x_99, 0x_F9, 0x_30, 0x_94,
	];

	helper(S, BASE, -220_608);
}
// endregion
// region: s_has_signs_and_minus_5_692_135_in_base_13
#[test]
fn s_has_signs_and_minus_5_692_135_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_4E, 0x_63, 0x_AD, 0x_06, 0x_8D, 0x_06, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_4E, 0x_63, 0x_06, 0x_AD, 0x_5D, 0x_44, 0x_6F, 0x_6E, 0x_CA, 0x_D6, 0x_8D, 0x_BE,
	];

	helper(S, BASE, -5_692_135);
}
// endregion
// region: s_has_signs_and_minus_79_473_542_in_base_13
#[test]
fn s_has_signs_and_minus_79_473_542_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_31, 0x_1D, 0x_CC, 0x_B5, 0x_82, 0x_6C, 0x_6C,
		0x_49,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_31, 0x_AD, 0x_1D, 0x_26, 0x_49, 0x_CC, 0x_82, 0x_6C, 0x_FE, 0x_25, 0x_A3, 0x_38,
	];

	helper(S, BASE, -79_473_542);
}
// endregion
// region: s_has_signs_and_minus_424_523_670_in_base_13
#[test]
fn s_has_signs_and_minus_424_523_670_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_39,
		0x_EF, 0x_F0, 0x_AF, 0x_EF, 0x_5E, 0x_AF, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_81, 0x_28, 0x_02, 0x_AF, 0x_FD, 0x_39, 0x_BE, 0x_CB, 0x_EF, 0x_5E, 0x_BD, 0x_F0,
	];

	helper(S, BASE, -424_523_670);
}
// endregion
// region: s_has_signs_and_minus_6_in_base_19
#[test]
fn s_has_signs_and_minus_6_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_8A, 0x_52, 0x_66, 0x_3B, 0x_25, 0x_6E, 0x_9F, 0x_92, 0x_83, 0x_80, 0x_16, 0x_C3, 0x_EA, 0x_96,
		0x_1D, 0x_F1, 0x_99, 0x_22,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_signs_and_minus_25_in_base_19
#[test]
fn s_has_signs_and_minus_25_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_56,
		0x_CB,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_56, 0x_9C, 0x_C4, 0x_FD, 0x_F5, 0x_CB, 0x_D7, 0x_AA, 0x_96, 0x_62, 0x_78, 0x_26, 0x_9B, 0x_54,
		0x_34, 0x_48, 0x_77, 0x_DD,
	];

	helper(S, BASE, -25);
}
// endregion
// region: s_has_signs_and_minus_585_in_base_19
#[test]
fn s_has_signs_and_minus_585_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_D4, 0x_35, 0x_C0,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_D4, 0x_9D, 0x_E6, 0x_E5, 0x_01, 0x_E1, 0x_39, 0x_54, 0x_BE, 0x_B0, 0x_35, 0x_5B, 0x_05, 0x_F4,
		0x_C0, 0x_B6, 0x_A9, 0x_B2,
	];

	helper(S, BASE, -585);
}
// endregion
// region: s_has_signs_and_minus_7_814_in_base_19
#[test]
fn s_has_signs_and_minus_7_814_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_9D, 0x_4E, 0x_14, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_9D, 0x_4E, 0x_4C, 0x_BA, 0x_7C, 0x_36, 0x_71, 0x_78, 0x_73, 0x_11, 0x_77, 0x_14, 0x_F8, 0x_81,
		0x_1D, 0x_9A, 0x_A8, 0x_D7,
	];

	helper(S, BASE, -7_814);
}
// endregion
// region: s_has_signs_and_minus_18_613_in_base_19
#[test]
fn s_has_signs_and_minus_18_613_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_A7,
		0x_90, 0x_32, 0x_F3,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_1E, 0x_A7, 0x_A5, 0x_03, 0x_11, 0x_1C, 0x_5F, 0x_48, 0x_C7, 0x_32, 0x_60, 0x_F3, 0x_90, 0x_23,
		0x_B6, 0x_F4, 0x_E0, 0x_C0,
	];

	helper(S, BASE, -18_613);
}
// endregion
// region: s_has_signs_and_minus_548_150_in_base_19
#[test]
fn s_has_signs_and_minus_548_150_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_5C, 0x_76, 0x_BE, 0x_EA, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_3A, 0x_B1, 0x_76, 0x_5C, 0x_F7, 0x_ED, 0x_AB, 0x_EA, 0x_9F, 0x_F4, 0x_98, 0x_48, 0x_B8, 0x_47,
		0x_8D, 0x_D4, 0x_BE, 0x_6C,
	];

	helper(S, BASE, -548_150);
}
// endregion
// region: s_has_signs_and_minus_4_349_272_in_base_19
#[test]
fn s_has_signs_and_minus_4_349_272_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_51, 0x_26, 0x_FA, 0x_51, 0x_3C, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_51, 0x_41, 0x_E9, 0x_E3, 0x_99, 0x_EF, 0x_FA, 0x_E8, 0x_96, 0x_28, 0x_DD, 0x_A9, 0x_9B, 0x_26,
		0x_66, 0x_3C, 0x_35, 0x_89,
	];

	helper(S, BASE, -4_349_272);
}
// endregion
// region: s_has_signs_and_minus_81_574_088_in_base_19
#[test]
fn s_has_signs_and_minus_81_574_088_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_F7, 0x_19, 0x_DD, 0x_A1, 0x_9D, 0x_9D, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_9D, 0x_F7, 0x_D8, 0x_C5, 0x_81, 0x_74, 0x_01, 0x_49, 0x_02, 0x_06, 0x_99, 0x_4C, 0x_6E, 0x_19, 0x_A8,
		0x_31, 0x_78, 0x_DD, 0x_A1,
	];

	helper(S, BASE, -81_574_088);
}
// endregion
// region: s_has_signs_and_minus_388_719_365_in_base_19
#[test]
fn s_has_signs_and_minus_388_719_365_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_C6, 0x_B9, 0x_21, 0x_F7,
		0x_8E, 0x_D8, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_EC, 0x_F6, 0x_B0, 0x_B9, 0x_46, 0x_26, 0x_F9, 0x_C6, 0x_4D, 0x_68, 0x_5D, 0x_3F, 0x_99, 0x_F7,
		0x_85, 0x_8E, 0x_D8, 0x_21,
	];

	helper(S, BASE, -388_719_365);
}
// endregion
// region: s_has_signs_and_minus_8_in_base_42
#[test]
fn s_has_signs_and_minus_8_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_81,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_E8, 0x_AE, 0x_45, 0x_C7, 0x_43, 0x_57, 0x_E5, 0x_81, 0x_54, 0x_14, 0x_49, 0x_FD, 0x_6E, 0x_A3,
		0x_EB, 0x_D5, 0x_D1, 0x_62, 0x_F9, 0x_4A, 0x_B9, 0x_AF, 0x_CD, 0x_6D, 0x_DE, 0x_26, 0x_7E, 0x_C6, 0x_31,
		0x_70, 0x_27, 0x_AB, 0x_A8, 0x_5E, 0x_B0, 0x_68, 0x_8E, 0x_CA, 0x_ED, 0x_40, 0x_76,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_signs_and_minus_35_in_base_42
#[test]
fn s_has_signs_and_minus_35_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_C7,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_D3, 0x_04, 0x_5A, 0x_97, 0x_CE, 0x_D7, 0x_B0, 0x_3C, 0x_D9, 0x_BE, 0x_95, 0x_54, 0x_A2, 0x_DA,
		0x_F1, 0x_E6, 0x_74, 0x_33, 0x_AF, 0x_82, 0x_89, 0x_17, 0x_FF, 0x_E5, 0x_85, 0x_1C, 0x_F8, 0x_8D, 0x_71,
		0x_F4, 0x_28, 0x_61, 0x_49, 0x_13, 0x_C7, 0x_99, 0x_67, 0x_BD, 0x_19, 0x_EB, 0x_AD,
	];

	helper(S, BASE, -35);
}
// endregion
// region: s_has_signs_and_minus_960_in_base_42
#[test]
fn s_has_signs_and_minus_960_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_6C, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_E1, 0x_70, 0x_56, 0x_28, 0x_17, 0x_CF, 0x_79, 0x_85, 0x_46, 0x_CE, 0x_66, 0x_73, 0x_9A, 0x_FD,
		0x_67, 0x_95, 0x_1C, 0x_3F, 0x_C7, 0x_F9, 0x_59, 0x_6C, 0x_D4, 0x_EF, 0x_19, 0x_38, 0x_18, 0x_DF, 0x_BD,
		0x_5F, 0x_B0, 0x_14, 0x_4E, 0x_C3, 0x_7D, 0x_25, 0x_BE, 0x_3B, 0x_8F, 0x_27, 0x_01,
	];

	helper(S, BASE, -960);
}
// endregion
// region: s_has_signs_and_minus_9_547_in_base_42
#[test]
fn s_has_signs_and_minus_9_547_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_D3, 0x_87, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_97, 0x_B4, 0x_C1, 0x_13, 0x_D3, 0x_8B, 0x_D5, 0x_4A, 0x_2E, 0x_F9, 0x_5B, 0x_95, 0x_CF, 0x_1E,
		0x_46, 0x_74, 0x_87, 0x_68, 0x_40, 0x_07, 0x_D4, 0x_D7, 0x_5E, 0x_65, 0x_D8, 0x_3E, 0x_8D, 0x_A3, 0x_FC,
		0x_F5, 0x_81, 0x_F1, 0x_32, 0x_71, 0x_30, 0x_B8, 0x_A1, 0x_83, 0x_2C, 0x_6B, 0x_9C,
	];

	helper(S, BASE, -9_547);
}
// endregion
// region: s_has_signs_and_minus_86_936_in_base_42
#[test]
fn s_has_signs_and_minus_86_936_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_AF, 0x_D9, 0x_9C, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_AF, 0x_D8, 0x_E0, 0x_A7, 0x_33, 0x_25, 0x_D9, 0x_98, 0x_C7, 0x_10, 0x_9C, 0x_66, 0x_1A, 0x_A6,
		0x_3C, 0x_47, 0x_F8, 0x_B2, 0x_BC, 0x_7A, 0x_DF, 0x_84, 0x_9B, 0x_EA, 0x_19, 0x_AE, 0x_27, 0x_EC, 0x_78,
		0x_E2, 0x_55, 0x_6B, 0x_ED, 0x_3E, 0x_49, 0x_C6, 0x_2C, 0x_08, 0x_06, 0x_34, 0x_5E,
	];

	helper(S, BASE, -86_936);
}
// endregion
// region: s_has_signs_and_minus_834_919_in_base_42
#[test]
fn s_has_signs_and_minus_834_919_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_AA, 0x_AA, 0x_6D, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_28, 0x_8D, 0x_C5, 0x_71, 0x_FC, 0x_11, 0x_E6, 0x_D2, 0x_83, 0x_17, 0x_AA, 0x_08, 0x_6D, 0x_92,
		0x_F8, 0x_7A, 0x_2F, 0x_2A, 0x_60, 0x_9E, 0x_35, 0x_D7, 0x_6A, 0x_01, 0x_70, 0x_B2, 0x_89, 0x_8A, 0x_2C,
		0x_B3, 0x_AE, 0x_A2, 0x_24, 0x_9A, 0x_DD, 0x_78, 0x_61, 0x_36, 0x_C7, 0x_6E, 0x_FE,
	];

	helper(S, BASE, -834_919);
}
// endregion
// region: s_has_signs_and_minus_5_267_033_in_base_42
#[test]
fn s_has_signs_and_minus_5_267_033_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_A5, 0x_56, 0x_2F, 0x_BE, 0x_7A,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_A5, 0x_F6, 0x_2F, 0x_2E, 0x_C5, 0x_F7, 0x_31, 0x_B6, 0x_3E, 0x_51, 0x_5A, 0x_96, 0x_30, 0x_BF,
		0x_B4, 0x_FC, 0x_EC, 0x_1F, 0x_42, 0x_26, 0x_33, 0x_4B, 0x_7A, 0x_12, 0x_CF, 0x_75, 0x_D0, 0x_37, 0x_56,
		0x_B9, 0x_A7, 0x_91, 0x_8D, 0x_62, 0x_BE, 0x_C2, 0x_6D, 0x_90, 0x_FE, 0x_6C, 0x_9B,
	];

	helper(S, BASE, -5_267_033);
}
// endregion
// region: s_has_signs_and_minus_62_102_537_in_base_42
#[test]
fn s_has_signs_and_minus_62_102_537_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_8D, 0x_EB,
		0x_47, 0x_F8, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_5A, 0x_48, 0x_C7, 0x_D2, 0x_AE, 0x_24, 0x_99, 0x_D8, 0x_47, 0x_3F, 0x_28, 0x_D1, 0x_EC, 0x_D7,
		0x_AF, 0x_81, 0x_FF, 0x_FD, 0x_8D, 0x_75, 0x_F8, 0x_1B, 0x_12, 0x_BF, 0x_B8, 0x_C3, 0x_E8, 0x_35, 0x_C0,
		0x_34, 0x_7D, 0x_8C, 0x_E4, 0x_7F, 0x_67, 0x_10, 0x_F9, 0x_5F, 0x_23, 0x_EB, 0x_A0,
	];

	helper(S, BASE, -62_102_537);
}
// endregion
// region: s_has_signs_and_minus_768_681_338_in_base_42
#[test]
fn s_has_signs_and_minus_768_681_338_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_85, 0x_ED, 0x_9F, 0x_9A, 0x_82, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_9F, 0x_A7, 0x_02, 0x_B7, 0x_85, 0x_CD, 0x_3B, 0x_15, 0x_72, 0x_9A, 0x_05, 0x_57, 0x_6F, 0x_46,
		0x_21, 0x_82, 0x_C4, 0x_D9, 0x_23, 0x_A4, 0x_FA, 0x_38, 0x_4E, 0x_7C, 0x_65, 0x_33, 0x_5A, 0x_32, 0x_F5,
		0x_E2, 0x_49, 0x_4F, 0x_D2, 0x_28, 0x_3F, 0x_AF, 0x_ED, 0x_C0, 0x_CE, 0x_45, 0x_84,
	];

	helper(S, BASE, -768_681_338);
}
// endregion
// region: s_has_signs_and_minus_4_in_base_73
#[test]
fn s_has_signs_and_minus_4_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_A1, 0x_D3, 0x_CE, 0x_70, 0x_F0, 0x_DF, 0x_BA, 0x_48, 0x_75, 0x_01, 0x_FF, 0x_78, 0x_A5, 0x_55, 0x_06,
		0x_F6, 0x_05, 0x_B9, 0x_25, 0x_7C, 0x_41, 0x_6B, 0x_57, 0x_3A, 0x_E6, 0x_74, 0x_56, 0x_B7, 0x_31, 0x_D1,
		0x_0F, 0x_9A, 0x_AD, 0x_8F, 0x_E5, 0x_AE, 0x_0E, 0x_93, 0x_AF, 0x_4A, 0x_CB, 0x_C1, 0x_3F, 0x_4E, 0x_82,
		0x_B3, 0x_C4, 0x_B2, 0x_29, 0x_A8, 0x_F1, 0x_83, 0x_14, 0x_F7, 0x_16, 0x_D0, 0x_07, 0x_B6, 0x_EA, 0x_C8,
		0x_80, 0x_88, 0x_C6, 0x_C0, 0x_E8, 0x_32, 0x_9D, 0x_66, 0x_1C, 0x_96, 0x_8C, 0x_4C, 0x_F9,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_signs_and_minus_67_in_base_73
#[test]
fn s_has_signs_and_minus_67_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_D9, 0x_27, 0x_BE, 0x_0F, 0x_2A, 0x_70, 0x_EE, 0x_CB, 0x_D7, 0x_44, 0x_B5, 0x_26, 0x_7E, 0x_B4,
		0x_47, 0x_5C, 0x_F8, 0x_29, 0x_AD, 0x_7F, 0x_4E, 0x_B0, 0x_A3, 0x_7B, 0x_6B, 0x_DE, 0x_8B, 0x_63, 0x_05,
		0x_52, 0x_99, 0x_34, 0x_6D, 0x_B9, 0x_4B, 0x_60, 0x_D5, 0x_32, 0x_C1, 0x_CC, 0x_4D, 0x_5F, 0x_A8, 0x_EA,
		0x_97, 0x_7C, 0x_A9, 0x_DB, 0x_2E, 0x_72, 0x_77, 0x_5B, 0x_CD, 0x_FD, 0x_B2, 0x_07, 0x_EC, 0x_38, 0x_3C,
		0x_2F, 0x_E5, 0x_E6, 0x_AB, 0x_D4, 0x_D6, 0x_F0, 0x_4A, 0x_E9, 0x_BD, 0x_C3, 0x_5D, 0x_43,
	];

	helper(S, BASE, -67);
}
// endregion
// region: s_has_signs_and_minus_218_in_base_73
#[test]
fn s_has_signs_and_minus_218_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_7B, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_F3, 0x_D5, 0x_7B, 0x_84, 0x_62, 0x_EF, 0x_81, 0x_B6, 0x_4A, 0x_69, 0x_98, 0x_65, 0x_54, 0x_53, 0x_86,
		0x_6A, 0x_A0, 0x_60, 0x_3E, 0x_A1, 0x_5A, 0x_6F, 0x_90, 0x_C2, 0x_16, 0x_4F, 0x_34, 0x_15, 0x_CC, 0x_41,
		0x_14, 0x_E2, 0x_59, 0x_B4, 0x_C0, 0x_1F, 0x_BE, 0x_66, 0x_7D, 0x_1D, 0x_05, 0x_8B, 0x_06, 0x_E4, 0x_27,
		0x_29, 0x_3B, 0x_3C, 0x_50, 0x_76, 0x_30, 0x_04, 0x_3D, 0x_BB, 0x_01, 0x_6C, 0x_E0, 0x_B5, 0x_B9, 0x_61,
		0x_39, 0x_C4, 0x_4C, 0x_44, 0x_92, 0x_64, 0x_9F, 0x_78, 0x_07, 0x_93, 0x_48, 0x_FD, 0x_C6,
	];

	helper(S, BASE, -218);
}
// endregion
// region: s_has_signs_and_minus_4_285_in_base_73
#[test]
fn s_has_signs_and_minus_4_285_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_BD, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_F9, 0x_41, 0x_17, 0x_C9, 0x_28, 0x_C6, 0x_2A, 0x_3F, 0x_8D, 0x_CE, 0x_4E, 0x_26, 0x_36, 0x_D9,
		0x_E0, 0x_B2, 0x_1A, 0x_DD, 0x_66, 0x_6C, 0x_B0, 0x_ED, 0x_61, 0x_C1, 0x_E6, 0x_96, 0x_AC, 0x_70, 0x_AE,
		0x_F3, 0x_D1, 0x_8E, 0x_DA, 0x_19, 0x_82, 0x_31, 0x_79, 0x_13, 0x_9C, 0x_4C, 0x_56, 0x_64, 0x_74, 0x_18,
		0x_62, 0x_C4, 0x_44, 0x_4F, 0x_4A, 0x_7D, 0x_C3, 0x_5F, 0x_EC, 0x_6B, 0x_7E, 0x_D4, 0x_EB, 0x_BD, 0x_C2,
		0x_8A, 0x_BB, 0x_B1, 0x_E1, 0x_68, 0x_60, 0x_40, 0x_11, 0x_FB, 0x_BC, 0x_FA, 0x_B8, 0x_73,
	];

	helper(S, BASE, -4_285);
}
// endregion
// region: s_has_signs_and_minus_26_963_in_base_73
#[test]
fn s_has_signs_and_minus_26_963_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_87, 0x_F6, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_69, 0x_10, 0x_C5, 0x_F6, 0x_87, 0x_E8, 0x_5D, 0x_17, 0x_DB, 0x_A5, 0x_6B, 0x_66, 0x_1B, 0x_34,
		0x_C3, 0x_D5, 0x_2C, 0x_5A, 0x_56, 0x_67, 0x_E2, 0x_07, 0x_E4, 0x_70, 0x_96, 0x_1F, 0x_97, 0x_0E, 0x_40,
		0x_B3, 0x_12, 0x_24, 0x_65, 0x_4E, 0x_DF, 0x_5C, 0x_42, 0x_FA, 0x_93, 0x_AF, 0x_78, 0x_33, 0x_E7, 0x_BB,
		0x_C7, 0x_C4, 0x_58, 0x_6A, 0x_53, 0x_94, 0x_C2, 0x_9F, 0x_B4, 0x_F5, 0x_23, 0x_D2, 0x_7A, 0x_55, 0x_7F,
		0x_6E, 0x_E9, 0x_29, 0x_89, 0x_B9, 0x_A9, 0x_22, 0x_7D, 0x_FB, 0x_63, 0x_30, 0x_9A, 0x_CA,
	];

	helper(S, BASE, -26_963);
}
// endregion
// region: s_has_signs_and_minus_104_154_in_base_73
#[test]
fn s_has_signs_and_minus_104_154_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_14, 0x_EB,
		0x_EA,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_35, 0x_E2, 0x_12, 0x_A3, 0x_19, 0x_23, 0x_6F, 0x_63, 0x_56, 0x_E4, 0x_92, 0x_1B, 0x_96, 0x_9A,
		0x_ED, 0x_74, 0x_F8, 0x_78, 0x_14, 0x_6E, 0x_38, 0x_13, 0x_7E, 0x_3C, 0x_E0, 0x_89, 0x_FC, 0x_7D, 0x_DB,
		0x_31, 0x_AC, 0x_77, 0x_E7, 0x_0E, 0x_3B, 0x_AD, 0x_6A, 0x_E3, 0x_EB, 0x_5E, 0x_85, 0x_60, 0x_27, 0x_24,
		0x_F6, 0x_95, 0x_6D, 0x_BA, 0x_01, 0x_BF, 0x_B9, 0x_93, 0x_57, 0x_11, 0x_58, 0x_EA, 0x_30, 0x_AA, 0x_15,
		0x_69, 0x_FA, 0x_42, 0x_F5, 0x_39, 0x_8D, 0x_80, 0x_D1, 0x_0F, 0x_1D, 0x_CC, 0x_43, 0x_C7,
	];

	helper(S, BASE, -104_154);
}
// endregion
// region: s_has_signs_and_minus_8_466_259_in_base_73
#[test]
fn s_has_signs_and_minus_8_466_259_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_DA, 0x_C6, 0x_5E,
		0x_98,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_D9, 0x_21, 0x_91, 0x_F6, 0x_8E, 0x_6A, 0x_A3, 0x_7E, 0x_36, 0x_97, 0x_98, 0x_E6, 0x_94, 0x_6C,
		0x_B0, 0x_37, 0x_8F, 0x_33, 0x_03, 0x_66, 0x_DA, 0x_A6, 0x_EC, 0x_2A, 0x_80, 0x_7F, 0x_99, 0x_06, 0x_75,
		0x_FB, 0x_EF, 0x_D6, 0x_92, 0x_61, 0x_4F, 0x_10, 0x_31, 0x_40, 0x_B2, 0x_04, 0x_A4, 0x_50, 0x_47, 0x_17,
		0x_05, 0x_C5, 0x_30, 0x_A8, 0x_D3, 0x_11, 0x_76, 0x_5E, 0x_1D, 0x_82, 0x_C6, 0x_DC, 0x_88, 0x_53, 0x_35,
		0x_18, 0x_70, 0x_BD, 0x_29, 0x_DE, 0x_C2, 0x_23, 0x_46, 0x_43, 0x_3A, 0x_07, 0x_41, 0x_3C,
	];

	helper(S, BASE, -8_466_259);
}
// endregion
// region: s_has_signs_and_minus_67_298_697_in_base_73
#[test]
fn s_has_signs_and_minus_67_298_697_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2F, 0x_CB, 0x_BB, 0x_F0, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_A5, 0x_70, 0x_2F, 0x_29, 0x_75, 0x_66, 0x_AD, 0x_F2, 0x_C8, 0x_FC, 0x_8A, 0x_11, 0x_4C, 0x_D1, 0x_F1,
		0x_6F, 0x_1A, 0x_E9, 0x_98, 0x_64, 0x_D6, 0x_DA, 0x_9E, 0x_E0, 0x_3E, 0x_53, 0x_CB, 0x_8F, 0x_27, 0x_13,
		0x_EE, 0x_C2, 0x_B2, 0x_A2, 0x_3B, 0x_77, 0x_B1, 0x_A7, 0x_68, 0x_91, 0x_1B, 0x_DB, 0x_5E, 0x_6A, 0x_BA,
		0x_62, 0x_7F, 0x_C3, 0x_2C, 0x_28, 0x_26, 0x_FD, 0x_85, 0x_C6, 0x_50, 0x_F0, 0x_BF, 0x_D0, 0x_03, 0x_3D,
		0x_C5, 0x_90, 0x_C9, 0x_25, 0x_04, 0x_83, 0x_76, 0x_7A, 0x_97, 0x_5F, 0x_6E, 0x_6D, 0x_BB,
	];

	helper(S, BASE, -67_298_697);
}
// endregion
// region: s_has_signs_and_minus_973_915_165_in_base_73
#[test]
fn s_has_signs_and_minus_973_915_165_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_F1, 0x_6D, 0x_36, 0x_95, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_31, 0x_80, 0x_6F, 0x_73, 0x_6C, 0x_61, 0x_62, 0x_84, 0x_E7, 0x_DA, 0x_B1, 0x_A8, 0x_A7, 0x_7E,
		0x_A1, 0x_9D, 0x_63, 0x_71, 0x_69, 0x_87, 0x_6D, 0x_12, 0x_33, 0x_3C, 0x_56, 0x_90, 0x_CC, 0x_35, 0x_B7,
		0x_4E, 0x_10, 0x_07, 0x_60, 0x_F1, 0x_54, 0x_A2, 0x_8C, 0x_36, 0x_1A, 0x_8D, 0x_7A, 0x_95, 0x_AF, 0x_53,
		0x_FC, 0x_FD, 0x_C5, 0x_26, 0x_51, 0x_24, 0x_81, 0x_CE, 0x_F7, 0x_AC, 0x_B3, 0x_47, 0x_DC, 0x_E9, 0x_FA,
		0x_13, 0x_D9, 0x_67, 0x_C4, 0x_4C, 0x_C7, 0x_70, 0x_88, 0x_37, 0x_F9, 0x_5E, 0x_9F, 0x_39,
	];

	helper(S, BASE, -973_915_165);
}
// endregion
// region: s_has_signs_and_minus_1_in_base_113
#[test]
fn s_has_signs_and_minus_1_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_04,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_04, 0x_DE, 0x_EC, 0x_3E, 0x_89, 0x_2C, 0x_6A, 0x_CF, 0x_EA, 0x_AA, 0x_96, 0x_FA, 0x_29, 0x_19,
		0x_D6, 0x_B3, 0x_51, 0x_39, 0x_25, 0x_08, 0x_7E, 0x_12, 0x_10, 0x_1D, 0x_76, 0x_7C, 0x_7D, 0x_FF, 0x_A6,
		0x_2A, 0x_59, 0x_FC, 0x_4D, 0x_DD, 0x_9C, 0x_32, 0x_DC, 0x_3D, 0x_26, 0x_87, 0x_67, 0x_0E, 0x_90, 0x_C1,
		0x_23, 0x_31, 0x_8F, 0x_B9, 0x_E2, 0x_61, 0x_1E, 0x_78, 0x_49, 0x_CD, 0x_69, 0x_D2, 0x_7F, 0x_E6, 0x_8B,
		0x_B5, 0x_21, 0x_9D, 0x_1C, 0x_73, 0x_1B, 0x_3B, 0x_E8, 0x_5B, 0x_36, 0x_EE, 0x_E3, 0x_DB, 0x_AD, 0x_06,
		0x_60, 0x_5F, 0x_1F, 0x_75, 0x_99, 0x_3F, 0x_C4, 0x_BF, 0x_DF, 0x_02, 0x_41, 0x_53, 0x_B7, 0x_7B, 0x_4A,
		0x_D7, 0x_35, 0x_5C, 0x_D1, 0x_46, 0x_AB, 0x_9E, 0x_F0, 0x_5A, 0x_17, 0x_4C, 0x_54, 0x_CA, 0x_45, 0x_CB,
		0x_E7, 0x_63, 0x_95, 0x_BD, 0x_64, 0x_88, 0x_83, 0x_2F,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_signs_and_minus_22_in_base_113
#[test]
fn s_has_signs_and_minus_22_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_C1, 0x_8B, 0x_93, 0x_34, 0x_59, 0x_C3, 0x_4C, 0x_22, 0x_52, 0x_ED, 0x_7E, 0x_79, 0x_81, 0x_17,
		0x_EB, 0x_D9, 0x_A0, 0x_42, 0x_88, 0x_B7, 0x_14, 0x_74, 0x_32, 0x_95, 0x_A2, 0x_96, 0x_C9, 0x_24, 0x_89,
		0x_AA, 0x_62, 0x_71, 0x_C8, 0x_B3, 0x_D3, 0x_5A, 0x_A7, 0x_DB, 0x_05, 0x_1C, 0x_60, 0x_9D, 0x_48, 0x_58,
		0x_8E, 0x_50, 0x_82, 0x_0F, 0x_2C, 0x_80, 0x_CD, 0x_07, 0x_03, 0x_EC, 0x_6C, 0x_5E, 0x_5F, 0x_FE, 0x_1F,
		0x_F1, 0x_DF, 0x_7A, 0x_CB, 0x_C6, 0x_EE, 0x_2A, 0x_3D, 0x_87, 0x_BF, 0x_8F, 0x_E9, 0x_92, 0x_D2, 0x_61,
		0x_B0, 0x_66, 0x_38, 0x_E2, 0x_CF, 0x_F3, 0x_DE, 0x_FB, 0x_45, 0x_31, 0x_1A, 0x_65, 0x_E8, 0x_7D, 0x_15,
		0x_AC, 0x_25, 0x_7C, 0x_10, 0x_68, 0x_47, 0x_76, 0x_02, 0x_77, 0x_A3, 0x_BA, 0x_1D, 0x_69, 0x_E1, 0x_04,
		0x_44, 0x_FD, 0x_A9, 0x_8A, 0x_85, 0x_F5, 0x_C7, 0x_91,
	];

	helper(S, BASE, -22);
}
// endregion
// region: s_has_signs_and_minus_673_in_base_113
#[test]
fn s_has_signs_and_minus_673_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_95, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_D9, 0x_91, 0x_92, 0x_4D, 0x_95, 0x_A3, 0x_E9, 0x_C3, 0x_59, 0x_43, 0x_6D, 0x_3D, 0x_F8, 0x_DD,
		0x_53, 0x_F1, 0x_37, 0x_96, 0x_31, 0x_19, 0x_FC, 0x_A6, 0x_A7, 0x_46, 0x_29, 0x_84, 0x_93, 0x_C9, 0x_02,
		0x_08, 0x_80, 0x_97, 0x_7B, 0x_FB, 0x_C0, 0x_DE, 0x_F0, 0x_62, 0x_73, 0x_6F, 0x_E7, 0x_30, 0x_EB, 0x_AE,
		0x_26, 0x_27, 0x_23, 0x_12, 0x_B0, 0x_55, 0x_63, 0x_34, 0x_AC, 0x_89, 0x_0E, 0x_D0, 0x_AB, 0x_1C, 0x_EE,
		0x_35, 0x_CB, 0x_BC, 0x_87, 0x_07, 0x_70, 0x_47, 0x_2C, 0x_DF, 0x_86, 0x_A5, 0x_A9, 0x_82, 0x_B4, 0x_1D,
		0x_F5, 0x_56, 0x_CA, 0x_F6, 0x_54, 0x_4B, 0x_C5, 0x_68, 0x_E4, 0x_D1, 0x_38, 0x_14, 0x_69, 0x_99, 0x_E3,
		0x_2F, 0x_44, 0x_B5, 0x_C2, 0x_33, 0x_18, 0x_B3, 0x_88, 0x_3F, 0x_B2, 0x_05, 0x_5B, 0x_36, 0x_65, 0x_9A,
		0x_EA, 0x_D2, 0x_D4, 0x_1E, 0x_01, 0x_41, 0x_FA, 0x_06,
	];

	helper(S, BASE, -673);
}
// endregion
// region: s_has_signs_and_minus_5_905_in_base_113
#[test]
fn s_has_signs_and_minus_5_905_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_18, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_4A, 0x_49, 0x_52, 0x_77, 0x_A3, 0x_C8, 0x_1D, 0x_AF, 0x_9C, 0x_6E, 0x_8C, 0x_D7, 0x_8A, 0x_CA,
		0x_41, 0x_71, 0x_5A, 0x_7C, 0x_8F, 0x_6D, 0x_5F, 0x_A5, 0x_9F, 0x_36, 0x_70, 0x_9D, 0x_4F, 0x_A2, 0x_FF,
		0x_C6, 0x_BD, 0x_F6, 0x_DA, 0x_5B, 0x_65, 0x_94, 0x_01, 0x_33, 0x_86, 0x_98, 0x_51, 0x_D6, 0x_45, 0x_08,
		0x_23, 0x_67, 0x_22, 0x_44, 0x_BF, 0x_3B, 0x_92, 0x_18, 0x_1C, 0x_32, 0x_74, 0x_E1, 0x_CE, 0x_CF, 0x_5D,
		0x_40, 0x_42, 0x_90, 0x_39, 0x_0F, 0x_58, 0x_87, 0x_EA, 0x_6A, 0x_CC, 0x_E4, 0x_84, 0x_A6, 0x_0E, 0x_FA,
		0x_AD, 0x_27, 0x_15, 0x_EC, 0x_48, 0x_FE, 0x_9A, 0x_96, 0x_F0, 0x_47, 0x_64, 0x_E5, 0x_1F, 0x_7A, 0x_99,
		0x_61, 0x_EF, 0x_EB, 0x_D8, 0x_56, 0x_54, 0x_1B, 0x_11, 0x_34, 0x_76, 0x_24, 0x_B0, 0x_79, 0x_50, 0x_A0,
		0x_B2, 0x_85, 0x_C7, 0x_13, 0x_3C, 0x_57, 0x_E3, 0x_C2,
	];

	helper(S, BASE, -5_905);
}
// endregion
// region: s_has_signs_and_minus_25_115_in_base_113
#[test]
fn s_has_signs_and_minus_25_115_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_35, 0x_B0, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_35, 0x_DA, 0x_FF, 0x_B2, 0x_6F, 0x_9C, 0x_61, 0x_C9, 0x_E8, 0x_7D, 0x_8A, 0x_CB, 0x_3E, 0x_73,
		0x_01, 0x_F9, 0x_77, 0x_BF, 0x_75, 0x_08, 0x_F7, 0x_D4, 0x_1D, 0x_5C, 0x_97, 0x_A7, 0x_32, 0x_72, 0x_8E,
		0x_CF, 0x_85, 0x_87, 0x_6B, 0x_5E, 0x_93, 0x_BA, 0x_D1, 0x_9B, 0x_64, 0x_16, 0x_48, 0x_19, 0x_C7, 0x_46,
		0x_62, 0x_2C, 0x_FE, 0x_B3, 0x_E6, 0x_5F, 0x_BB, 0x_3B, 0x_33, 0x_06, 0x_F4, 0x_76, 0x_8F, 0x_1A, 0x_AC,
		0x_AA, 0x_47, 0x_92, 0x_B4, 0x_CE, 0x_36, 0x_59, 0x_C6, 0x_82, 0x_91, 0x_F1, 0x_E5, 0x_F3, 0x_79, 0x_7C,
		0x_3D, 0x_B6, 0x_3C, 0x_0E, 0x_F8, 0x_1F, 0x_DE, 0x_A2, 0x_12, 0x_40, 0x_53, 0x_03, 0x_9A, 0x_45, 0x_D3,
		0x_BE, 0x_4C, 0x_1C, 0x_AF, 0x_1B, 0x_78, 0x_80, 0x_50, 0x_27, 0x_DC, 0x_E0, 0x_18, 0x_FA, 0x_95, 0x_28,
		0x_68, 0x_44, 0x_99, 0x_D5, 0x_B0, 0x_34, 0x_2F, 0x_7B,
	];

	helper(S, BASE, -25_115);
}
// endregion
// region: s_has_signs_and_minus_585_890_in_base_113
#[test]
fn s_has_signs_and_minus_585_890_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_F6, 0x_9E, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_CE, 0x_CF, 0x_50, 0x_B0, 0x_FB, 0x_DF, 0x_1D, 0x_E8, 0x_A7, 0x_78, 0x_7C, 0x_6F, 0x_90, 0x_8D,
		0x_36, 0x_17, 0x_E2, 0x_38, 0x_19, 0x_34, 0x_6B, 0x_6C, 0x_21, 0x_A1, 0x_62, 0x_41, 0x_B2, 0x_30, 0x_CD,
		0x_01, 0x_24, 0x_EB, 0x_28, 0x_7E, 0x_6E, 0x_84, 0x_B8, 0x_55, 0x_A0, 0x_AB, 0x_CC, 0x_A9, 0x_BD, 0x_35,
		0x_F6, 0x_40, 0x_FA, 0x_FE, 0x_47, 0x_DA, 0x_C6, 0x_BC, 0x_F8, 0x_3F, 0x_A4, 0x_E5, 0x_4D, 0x_F4, 0x_73,
		0x_15, 0x_E3, 0x_C2, 0x_BA, 0x_9A, 0x_43, 0x_46, 0x_B1, 0x_D4, 0x_75, 0x_F2, 0x_0E, 0x_4E, 0x_25, 0x_99,
		0x_6A, 0x_AA, 0x_9B, 0x_9F, 0x_63, 0x_D6, 0x_C0, 0x_FC, 0x_95, 0x_C3, 0x_8E, 0x_E4, 0x_D7, 0x_0F, 0x_45,
		0x_C8, 0x_2A, 0x_11, 0x_42, 0x_EC, 0x_8F, 0x_72, 0x_F7, 0x_92, 0x_9E, 0x_51, 0x_67, 0x_77, 0x_5B, 0x_E6,
		0x_DD, 0x_BB, 0x_B9, 0x_BE, 0x_97, 0x_74, 0x_F3, 0x_23,
	];

	helper(S, BASE, -585_890);
}
// endregion
// region: s_has_signs_and_minus_5_143_001_in_base_113
#[test]
fn s_has_signs_and_minus_5_143_001_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_E5, 0x_FA, 0x_33, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_9F, 0x_5E, 0x_E5, 0x_D3, 0x_21, 0x_DC, 0x_5B, 0x_31, 0x_4B, 0x_AF, 0x_F3, 0x_59, 0x_C0, 0x_B6,
		0x_F4, 0x_06, 0x_BE, 0x_D5, 0x_98, 0x_78, 0x_E9, 0x_1E, 0x_BB, 0x_6E, 0x_88, 0x_B8, 0x_89, 0x_EB, 0x_48,
		0x_36, 0x_B7, 0x_32, 0x_12, 0x_3C, 0x_44, 0x_81, 0x_91, 0x_5F, 0x_F1, 0x_85, 0x_5A, 0x_29, 0x_E7, 0x_E2,
		0x_08, 0x_95, 0x_70, 0x_05, 0x_35, 0x_14, 0x_DF, 0x_D7, 0x_CE, 0x_1C, 0x_40, 0x_3E, 0x_1A, 0x_F2, 0x_94,
		0x_F9, 0x_8F, 0x_3F, 0x_FA, 0x_E0, 0x_C8, 0x_DB, 0x_B2, 0x_E4, 0x_A8, 0x_83, 0x_BA, 0x_D0, 0x_B5, 0x_DE,
		0x_11, 0x_C1, 0x_74, 0x_1B, 0x_97, 0x_49, 0x_9D, 0x_63, 0x_C5, 0x_4C, 0x_4F, 0x_90, 0x_33, 0x_04, 0x_75,
		0x_BF, 0x_8A, 0x_62, 0x_99, 0x_39, 0x_47, 0x_67, 0x_10, 0x_64, 0x_02, 0x_38, 0x_A9, 0x_01, 0x_B4, 0x_79,
		0x_24, 0x_FC, 0x_A0, 0x_C2, 0x_F6, 0x_BD, 0x_EE, 0x_86,
	];

	helper(S, BASE, -5_143_001);
}
// endregion
// region: s_has_signs_and_minus_11_822_383_in_base_113
#[test]
fn s_has_signs_and_minus_11_822_383_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_E4, 0x_82, 0x_4A, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_05, 0x_3D, 0x_A2, 0x_E6, 0x_BC, 0x_24, 0x_EB, 0x_E4, 0x_16, 0x_18, 0x_58, 0x_61, 0x_FC, 0x_4C,
		0x_F4, 0x_3E, 0x_ED, 0x_B9, 0x_4F, 0x_37, 0x_82, 0x_03, 0x_56, 0x_36, 0x_90, 0x_68, 0x_E5, 0x_54, 0x_7F,
		0x_39, 0x_04, 0x_60, 0x_DB, 0x_21, 0x_12, 0x_1A, 0x_6A, 0x_B2, 0x_F0, 0x_6C, 0x_8C, 0x_DE, 0x_3F, 0x_46,
		0x_14, 0x_43, 0x_41, 0x_C2, 0x_D5, 0x_FB, 0x_5F, 0x_75, 0x_25, 0x_AE, 0x_49, 0x_74, 0x_6D, 0x_F5, 0x_1C,
		0x_8A, 0x_5B, 0x_1F, 0x_9D, 0x_BD, 0x_1B, 0x_31, 0x_DC, 0x_E3, 0x_7A, 0x_33, 0x_27, 0x_D9, 0x_BB, 0x_8E,
		0x_88, 0x_EA, 0x_19, 0x_96, 0x_E2, 0x_48, 0x_86, 0x_A0, 0x_7D, 0x_13, 0x_D7, 0x_2C, 0x_B1, 0x_C7, 0x_99,
		0x_67, 0x_28, 0x_15, 0x_A3, 0x_CD, 0x_52, 0x_CE, 0x_4A, 0x_1E, 0x_A8, 0x_7C, 0x_5E, 0x_C1, 0x_80, 0x_47,
		0x_8F, 0x_0E, 0x_1D, 0x_A9, 0x_77, 0x_D0, 0x_30, 0x_87,
	];

	helper(S, BASE, -11_822_383);
}
// endregion
// region: s_has_signs_and_minus_270_412_779_in_base_113
#[test]
fn s_has_signs_and_minus_270_412_779_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_59, 0x_E4, 0x_18, 0x_D3, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_59, 0x_79, 0x_FA, 0x_9D, 0x_71, 0x_9B, 0x_E0, 0x_E1, 0x_DA, 0x_B6, 0x_ED, 0x_52, 0x_6E, 0x_51,
		0x_9C, 0x_68, 0x_F5, 0x_F2, 0x_D4, 0x_19, 0x_F3, 0x_2C, 0x_BC, 0x_81, 0x_B0, 0x_82, 0x_AA, 0x_A6, 0x_86,
		0x_D0, 0x_8B, 0x_D3, 0x_EA, 0x_88, 0x_37, 0x_DB, 0x_05, 0x_4F, 0x_39, 0x_7B, 0x_15, 0x_99, 0x_91, 0x_6D,
		0x_4A, 0x_18, 0x_1F, 0x_A1, 0x_50, 0x_D5, 0x_60, 0x_02, 0x_49, 0x_14, 0x_AF, 0x_C3, 0x_78, 0x_80, 0x_C9,
		0x_31, 0x_C6, 0x_92, 0x_35, 0x_1E, 0x_F4, 0x_B8, 0x_F9, 0x_2E, 0x_8D, 0x_57, 0x_D2, 0x_87, 0x_46, 0x_E4,
		0x_A3, 0x_5C, 0x_54, 0x_1D, 0x_3D, 0x_BA, 0x_70, 0x_4E, 0x_D7, 0x_A4, 0x_7E, 0x_10, 0x_0E, 0x_07, 0x_76,
		0x_3E, 0x_6C, 0x_FE, 0x_04, 0x_61, 0x_E2, 0x_DF, 0x_9F, 0x_11, 0x_84, 0x_56, 0x_D6, 0x_FF, 0x_3F, 0x_89,
		0x_DE, 0x_36, 0x_FD, 0x_45, 0x_DD, 0x_29, 0x_5A, 0x_BB,
	];

	helper(S, BASE, -270_412_779);
}
// endregion
// region: s_has_signs_and_minus_2_in_base_193
#[test]
fn s_has_signs_and_minus_2_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_46, 0x_E2, 0x_BA, 0x_8B, 0x_96, 0x_85, 0x_7F, 0x_CA, 0x_70, 0x_65, 0x_37, 0x_DA, 0x_57, 0x_90,
		0x_69, 0x_50, 0x_6D, 0x_41, 0x_59, 0x_92, 0x_BC, 0x_B9, 0x_6E, 0x_AF, 0x_4F, 0x_30, 0x_18, 0x_33, 0x_C5,
		0x_88, 0x_63, 0x_42, 0x_FD, 0x_C6, 0x_7D, 0x_91, 0x_FB, 0x_E6, 0x_E0, 0x_8F, 0x_66, 0x_9A, 0x_A3, 0x_21,
		0x_14, 0x_1F, 0x_F2, 0x_D3, 0x_44, 0x_16, 0x_08, 0x_75, 0x_93, 0x_9F, 0x_2C, 0x_F6, 0x_4A, 0x_95, 0x_07,
		0x_D1, 0x_99, 0x_B2, 0x_A7, 0x_9D, 0x_8A, 0x_5C, 0x_19, 0x_9C, 0x_52, 0x_31, 0x_E3, 0x_45, 0x_76, 0x_77,
		0x_DE, 0x_4D, 0x_68, 0x_2F, 0x_58, 0x_B3, 0x_86, 0x_5A, 0x_9E, 0x_C0, 0x_EC, 0x_47, 0x_A9, 0x_02, 0x_C3,
		0x_78, 0x_7A, 0x_84, 0x_D9, 0x_23, 0x_7B, 0x_A6, 0x_D5, 0x_FC, 0x_43, 0x_6F, 0x_A4, 0x_25, 0x_C2, 0x_54,
		0x_F8, 0x_80, 0x_CC, 0x_2A, 0x_EF, 0x_4B, 0x_82, 0x_34, 0x_F0, 0x_C7, 0x_8D, 0x_1E, 0x_5B, 0x_CF, 0x_27,
		0x_DB, 0x_3C, 0x_E7, 0x_48, 0x_3D, 0x_8E, 0x_83, 0x_3A, 0x_B5, 0x_5D, 0x_B4, 0x_D4, 0x_D6, 0x_15, 0x_3E,
		0x_6A, 0x_1C, 0x_53, 0x_D2, 0x_C1, 0x_11, 0x_94, 0x_24, 0x_38, 0x_BD, 0x_28, 0x_E9, 0x_17, 0x_79, 0x_6B,
		0x_AD, 0x_FF, 0x_EE, 0x_AE, 0x_4C, 0x_CD, 0x_D8, 0x_ED, 0x_1A, 0x_32, 0x_FA, 0x_12, 0x_D7, 0x_22, 0x_E1,
		0x_BB, 0x_BE, 0x_56, 0x_71, 0x_7E, 0x_CE, 0x_55, 0x_03, 0x_A1, 0x_FE, 0x_35, 0x_3F, 0x_60, 0x_04, 0x_10,
		0x_F5, 0x_EB, 0x_C4, 0x_39, 0x_6C, 0x_F1, 0x_05, 0x_0F, 0x_01, 0x_A8, 0x_49, 0x_29, 0x_F4,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_signs_and_minus_89_in_base_193
#[test]
fn s_has_signs_and_minus_89_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_2A, 0x_B0, 0x_16, 0x_DD, 0x_85, 0x_96, 0x_99, 0x_C1, 0x_37, 0x_8C, 0x_A1, 0x_1F, 0x_D2, 0x_2E,
		0x_D3, 0x_6C, 0x_FA, 0x_69, 0x_22, 0x_28, 0x_5C, 0x_FB, 0x_3A, 0x_E8, 0x_F3, 0x_68, 0x_32, 0x_74, 0x_45,
		0x_18, 0x_52, 0x_D9, 0x_D1, 0x_AA, 0x_87, 0x_C6, 0x_43, 0x_FC, 0x_F4, 0x_E7, 0x_12, 0x_A6, 0x_3D, 0x_41,
		0x_65, 0x_88, 0x_4C, 0x_BC, 0x_5B, 0x_98, 0x_A0, 0x_AD, 0x_62, 0x_CF, 0x_38, 0x_BF, 0x_75, 0x_AC, 0x_C5,
		0x_72, 0x_55, 0x_D7, 0x_27, 0x_E2, 0x_3E, 0x_C2, 0x_48, 0x_8B, 0x_9E, 0x_47, 0x_D4, 0x_EB, 0x_31, 0x_3B,
		0x_21, 0x_3F, 0x_A2, 0x_9A, 0x_AE, 0x_C0, 0x_E6, 0x_11, 0x_04, 0x_CB, 0x_A9, 0x_A5, 0x_B4, 0x_DA, 0x_3C,
		0x_BB, 0x_80, 0x_B6, 0x_90, 0x_02, 0x_E5, 0x_9F, 0x_8E, 0x_B1, 0x_63, 0x_49, 0x_56, 0x_F5, 0x_4B, 0x_DB,
		0x_7B, 0x_10, 0x_D8, 0x_42, 0x_51, 0x_94, 0x_66, 0x_77, 0x_93, 0x_9B, 0x_C8, 0x_4F, 0x_6A, 0x_7A, 0x_9C,
		0x_36, 0x_2C, 0x_4D, 0x_6E, 0x_61, 0x_67, 0x_06, 0x_44, 0x_13, 0x_83, 0x_14, 0x_23, 0x_25, 0x_6D, 0x_B2,
		0x_F6, 0x_30, 0x_2F, 0x_DC, 0x_4A, 0x_FE, 0x_5D, 0x_C7, 0x_84, 0x_01, 0x_E3, 0x_B3, 0x_89, 0x_57, 0x_8A,
		0x_FD, 0x_C4, 0x_EA, 0x_4E, 0x_24, 0x_ED, 0x_C3, 0x_71, 0x_F9, 0x_CD, 0x_C9, 0x_F8, 0x_40, 0x_5F, 0x_5A,
		0x_6F, 0x_26, 0x_33, 0x_79, 0x_39, 0x_1E, 0x_05, 0x_58, 0x_50, 0x_D6, 0x_07, 0x_A4, 0x_CC, 0x_BD, 0x_92,
		0x_19, 0x_E0, 0x_B8, 0x_EF, 0x_A3, 0x_EC, 0x_B5, 0x_59, 0x_7C, 0x_B9, 0x_34, 0x_78, 0x_76,
	];

	helper(S, BASE, -89);
}
// endregion
// region: s_has_signs_and_minus_705_in_base_193
#[test]
fn s_has_signs_and_minus_705_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_98, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_B7, 0x_BD, 0x_98, 0x_E5, 0x_CC, 0x_70, 0x_08, 0x_6F, 0x_37, 0x_BC, 0x_66, 0x_8A, 0x_56, 0x_85,
		0x_18, 0x_DE, 0x_59, 0x_EE, 0x_CA, 0x_02, 0x_FD, 0x_6D, 0x_C5, 0x_9F, 0x_07, 0x_8B, 0x_FE, 0x_6E, 0x_5D,
		0x_AC, 0x_D9, 0x_AB, 0x_62, 0x_B6, 0x_B0, 0x_10, 0x_DA, 0x_F1, 0x_F4, 0x_8C, 0x_46, 0x_C3, 0x_1C, 0x_94,
		0x_89, 0x_61, 0x_2E, 0x_A6, 0x_A9, 0x_D7, 0x_FB, 0x_CE, 0x_7A, 0x_BB, 0x_F2, 0x_C4, 0x_14, 0x_C7, 0x_31,
		0x_40, 0x_97, 0x_63, 0x_58, 0x_35, 0x_12, 0x_B3, 0x_FA, 0x_87, 0x_AE, 0x_B4, 0x_7B, 0x_F7, 0x_FC, 0x_60,
		0x_9D, 0x_04, 0x_AD, 0x_4D, 0x_78, 0x_7C, 0x_54, 0x_F8, 0x_3E, 0x_03, 0x_76, 0x_AA, 0x_84, 0x_A1, 0x_79,
		0x_90, 0x_80, 0x_48, 0x_95, 0x_34, 0x_4E, 0x_3C, 0x_92, 0x_3A, 0x_C8, 0x_57, 0x_41, 0x_D0, 0x_67, 0x_16,
		0x_A7, 0x_F9, 0x_6C, 0x_50, 0x_4B, 0x_19, 0x_1A, 0x_D5, 0x_E3, 0x_9B, 0x_B8, 0x_93, 0x_A8, 0x_C6, 0x_3B,
		0x_28, 0x_E1, 0x_5F, 0x_EB, 0x_11, 0x_2A, 0x_2F, 0x_22, 0x_A5, 0x_D2, 0x_38, 0x_9C, 0x_A4, 0x_C9, 0x_13,
		0x_1D, 0x_BF, 0x_B2, 0x_33, 0x_23, 0x_5C, 0x_A2, 0x_01, 0x_DC, 0x_CB, 0x_D6, 0x_7E, 0x_9A, 0x_99, 0x_E6,
		0x_74, 0x_82, 0x_1B, 0x_9E, 0x_FF, 0x_CD, 0x_D3, 0x_4A, 0x_71, 0x_45, 0x_51, 0x_91, 0x_53, 0x_15, 0x_2C,
		0x_7F, 0x_6A, 0x_1E, 0x_F5, 0x_3D, 0x_4F, 0x_DB, 0x_DF, 0x_75, 0x_81, 0x_1F, 0x_27, 0x_F6, 0x_47, 0x_DD,
		0x_25, 0x_24, 0x_E9, 0x_96, 0x_F0, 0x_AF, 0x_A3, 0x_29, 0x_55, 0x_A0, 0x_F3, 0x_68, 0x_ED,
	];

	helper(S, BASE, -705);
}
// endregion
// region: s_has_signs_and_minus_5_699_in_base_193
#[test]
fn s_has_signs_and_minus_5_699_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2F, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_61, 0x_A5, 0x_EB, 0x_F3, 0x_0E, 0x_08, 0x_7D, 0x_02, 0x_D1, 0x_93, 0x_46, 0x_6A, 0x_F8, 0x_8B,
		0x_12, 0x_F0, 0x_84, 0x_73, 0x_CD, 0x_07, 0x_B2, 0x_C2, 0x_D8, 0x_6D, 0x_E6, 0x_F9, 0x_23, 0x_41, 0x_2F,
		0x_9A, 0x_31, 0x_F5, 0x_0F, 0x_1A, 0x_47, 0x_03, 0x_86, 0x_A9, 0x_57, 0x_97, 0x_6C, 0x_82, 0x_27, 0x_05,
		0x_E1, 0x_B9, 0x_FB, 0x_56, 0x_22, 0x_DD, 0x_66, 0x_4B, 0x_1E, 0x_3F, 0x_75, 0x_BE, 0x_C8, 0x_90, 0x_21,
		0x_B5, 0x_38, 0x_E8, 0x_9F, 0x_06, 0x_8D, 0x_FF, 0x_10, 0x_71, 0x_B3, 0x_59, 0x_99, 0x_E2, 0x_BD, 0x_49,
		0x_A8, 0x_43, 0x_AE, 0x_AC, 0x_EC, 0x_7B, 0x_88, 0x_96, 0x_52, 0x_13, 0x_FD, 0x_1B, 0x_50, 0x_14, 0x_DC,
		0x_EF, 0x_DE, 0x_E0, 0x_A3, 0x_7E, 0x_85, 0x_5C, 0x_32, 0x_6B, 0x_37, 0x_A7, 0x_C0, 0x_A6, 0x_AB, 0x_45,
		0x_4C, 0x_C6, 0x_5A, 0x_DF, 0x_BA, 0x_B8, 0x_A4, 0x_E4, 0x_C7, 0x_01, 0x_74, 0x_CC, 0x_6F, 0x_E9, 0x_A2,
		0x_33, 0x_29, 0x_8C, 0x_77, 0x_68, 0x_60, 0x_3D, 0x_55, 0x_1F, 0x_F7, 0x_6E, 0x_D0, 0x_4E, 0x_44, 0x_16,
		0x_A1, 0x_EE, 0x_3B, 0x_42, 0x_65, 0x_9D, 0x_B1, 0x_3E, 0x_F1, 0x_AD, 0x_8A, 0x_34, 0x_5E, 0x_53, 0x_04,
		0x_ED, 0x_4A, 0x_19, 0x_11, 0x_54, 0x_91, 0x_83, 0x_CA, 0x_2E, 0x_DA, 0x_58, 0x_E3, 0x_79, 0x_9C, 0x_9B,
		0x_63, 0x_5B, 0x_B7, 0x_3C, 0x_D5, 0x_76, 0x_EA, 0x_BB, 0x_78, 0x_CF, 0x_CE, 0x_CB, 0x_4D, 0x_89, 0x_4F,
		0x_18, 0x_40, 0x_C4, 0x_26, 0x_17, 0x_D4, 0x_BF, 0x_3A, 0x_B0, 0x_72, 0x_DB, 0x_5D, 0x_C1,
	];

	helper(S, BASE, -5_699);
}
// endregion
// region: s_has_signs_and_minus_74_966_in_base_193
#[test]
fn s_has_signs_and_minus_74_966_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_B9, 0x_B9, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_6C, 0x_B9, 0x_E2, 0x_57, 0x_CA, 0x_70, 0x_48, 0x_CD, 0x_77, 0x_11, 0x_12, 0x_10, 0x_73, 0x_E0,
		0x_EA, 0x_72, 0x_DF, 0x_35, 0x_4E, 0x_78, 0x_BA, 0x_93, 0x_06, 0x_D4, 0x_D0, 0x_85, 0x_5E, 0x_7D, 0x_9B,
		0x_A9, 0x_74, 0x_7F, 0x_BE, 0x_87, 0x_1F, 0x_45, 0x_29, 0x_DE, 0x_43, 0x_23, 0x_6A, 0x_A7, 0x_17, 0x_D5,
		0x_E6, 0x_A3, 0x_A4, 0x_21, 0x_F3, 0x_4A, 0x_D3, 0x_B0, 0x_DC, 0x_4B, 0x_89, 0x_3A, 0x_82, 0x_C1, 0x_7A,
		0x_62, 0x_F0, 0x_FF, 0x_AE, 0x_84, 0x_49, 0x_8C, 0x_4D, 0x_3F, 0x_9D, 0x_D7, 0x_39, 0x_99, 0x_B1, 0x_14,
		0x_79, 0x_C9, 0x_51, 0x_41, 0x_03, 0x_3C, 0x_1E, 0x_26, 0x_D1, 0x_A5, 0x_5A, 0x_D9, 0x_25, 0x_22, 0x_9A,
		0x_56, 0x_61, 0x_38, 0x_30, 0x_B8, 0x_76, 0x_7C, 0x_13, 0x_88, 0x_37, 0x_7E, 0x_94, 0x_1B, 0x_F5, 0x_60,
		0x_B5, 0x_C2, 0x_58, 0x_EC, 0x_AF, 0x_04, 0x_1D, 0x_71, 0x_9C, 0x_D2, 0x_B2, 0x_2A, 0x_5D, 0x_9E, 0x_97,
		0x_A1, 0x_6F, 0x_33, 0x_E9, 0x_1C, 0x_FA, 0x_36, 0x_5B, 0x_D8, 0x_05, 0x_AA, 0x_FB, 0x_C8, 0x_80, 0x_F4,
		0x_EB, 0x_6E, 0x_66, 0x_AD, 0x_65, 0x_15, 0x_69, 0x_ED, 0x_32, 0x_63, 0x_68, 0x_A2, 0x_7B, 0x_19, 0x_53,
		0x_C3, 0x_0F, 0x_9F, 0x_92, 0x_E8, 0x_6D, 0x_75, 0x_F8, 0x_CF, 0x_C6, 0x_A0, 0x_BB, 0x_50, 0x_28, 0x_40,
		0x_F7, 0x_DD, 0x_CC, 0x_52, 0x_59, 0x_EE, 0x_F2, 0x_1A, 0x_C4, 0x_BD, 0x_16, 0x_E4, 0x_6B, 0x_3D, 0x_8A,
		0x_A8, 0x_42, 0x_CB, 0x_8F, 0x_F9, 0x_3E, 0x_64, 0x_BC, 0x_02, 0x_3B, 0x_96, 0x_44, 0x_EF,
	];

	helper(S, BASE, -74_966);
}
// endregion
// region: s_has_signs_and_minus_930_087_in_base_193
#[test]
fn s_has_signs_and_minus_930_087_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_8B, 0x_F0, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_71, 0x_72, 0x_83, 0x_FE, 0x_37, 0x_73, 0x_63, 0x_39, 0x_04, 0x_DE, 0x_A4, 0x_61, 0x_E3, 0x_66, 0x_42,
		0x_E8, 0x_6C, 0x_50, 0x_46, 0x_18, 0x_C8, 0x_CC, 0x_78, 0x_C4, 0x_8B, 0x_4F, 0x_5C, 0x_70, 0x_53, 0x_2C,
		0x_60, 0x_67, 0x_87, 0x_E1, 0x_86, 0x_B8, 0x_BC, 0x_D6, 0x_47, 0x_0F, 0x_CF, 0x_07, 0x_48, 0x_3A, 0x_C5,
		0x_9A, 0x_4C, 0x_9E, 0x_05, 0x_B5, 0x_E6, 0x_E0, 0x_7C, 0x_F9, 0x_B7, 0x_1D, 0x_B4, 0x_DC, 0x_95, 0x_2F,
		0x_55, 0x_65, 0x_8E, 0x_0E, 0x_E4, 0x_6B, 0x_14, 0x_3E, 0x_CE, 0x_90, 0x_3F, 0x_9D, 0x_FF, 0x_AD, 0x_C3,
		0x_AB, 0x_51, 0x_6D, 0x_F4, 0x_3B, 0x_88, 0x_84, 0x_82, 0x_E7, 0x_E9, 0x_D3, 0x_BE, 0x_A8, 0x_15, 0x_D5,
		0x_F5, 0x_7D, 0x_C1, 0x_F7, 0x_44, 0x_98, 0x_A6, 0x_35, 0x_6F, 0x_52, 0x_AA, 0x_92, 0x_4A, 0x_ED, 0x_22,
		0x_13, 0x_A3, 0x_3C, 0x_1B, 0x_34, 0x_57, 0x_B6, 0x_E2, 0x_93, 0x_3D, 0x_F8, 0x_DD, 0x_BB, 0x_B1, 0x_5A,
		0x_DB, 0x_38, 0x_26, 0x_19, 0x_58, 0x_81, 0x_C6, 0x_77, 0x_CD, 0x_C0, 0x_5F, 0x_74, 0x_27, 0x_75, 0x_36,
		0x_8F, 0x_97, 0x_11, 0x_D2, 0x_1F, 0x_F6, 0x_A7, 0x_AE, 0x_99, 0x_C7, 0x_DA, 0x_8C, 0x_41, 0x_F2, 0x_CB,
		0x_EB, 0x_43, 0x_68, 0x_8A, 0x_C2, 0x_FB, 0x_91, 0x_B9, 0x_A9, 0x_85, 0x_D9, 0x_AF, 0x_01, 0x_8D, 0x_16,
		0x_D7, 0x_CA, 0x_32, 0x_FA, 0x_4E, 0x_2A, 0x_F3, 0x_17, 0x_EF, 0x_7E, 0x_56, 0x_DF, 0x_A0, 0x_4D, 0x_40,
		0x_AC, 0x_A5, 0x_C9, 0x_7B, 0x_9C, 0x_03, 0x_94, 0x_F0, 0x_FC, 0x_25, 0x_06, 0x_08, 0x_D0,
	];

	helper(S, BASE, -930_087);
}
// endregion
// region: s_has_signs_and_minus_5_826_937_in_base_193
#[test]
fn s_has_signs_and_minus_5_826_937_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_29, 0x_26, 0x_7A,
	];
	const BASE: &[u8] = &[
		0x_9D, 0x_B3, 0x_14, 0x_E6, 0x_D9, 0x_96, 0x_76, 0x_89, 0x_9F, 0x_88, 0x_85, 0x_0E, 0x_BE, 0x_36, 0x_C1,
		0x_58, 0x_4D, 0x_52, 0x_4C, 0x_62, 0x_3E, 0x_CB, 0x_74, 0x_D3, 0x_CE, 0x_7F, 0x_8E, 0x_97, 0x_E0, 0x_68,
		0x_67, 0x_83, 0x_27, 0x_C8, 0x_0F, 0x_B8, 0x_3F, 0x_DC, 0x_7E, 0x_48, 0x_5D, 0x_C4, 0x_B6, 0x_18, 0x_FF,
		0x_F9, 0x_AE, 0x_A3, 0x_70, 0x_B1, 0x_01, 0x_E7, 0x_5B, 0x_D0, 0x_CA, 0x_DF, 0x_A0, 0x_FE, 0x_56, 0x_AA,
		0x_F5, 0x_EC, 0x_D7, 0x_98, 0x_A7, 0x_F0, 0x_54, 0x_77, 0x_41, 0x_AF, 0x_64, 0x_B2, 0x_49, 0x_91, 0x_7A,
		0x_A1, 0x_E4, 0x_37, 0x_79, 0x_19, 0x_3A, 0x_CF, 0x_47, 0x_26, 0x_53, 0x_E8, 0x_A2, 0x_E9, 0x_F8, 0x_5E,
		0x_87, 0x_F2, 0x_8D, 0x_BF, 0x_28, 0x_B9, 0x_10, 0x_07, 0x_16, 0x_23, 0x_40, 0x_63, 0x_32, 0x_6C, 0x_11,
		0x_AB, 0x_CC, 0x_1A, 0x_82, 0x_EE, 0x_69, 0x_8B, 0x_15, 0x_B4, 0x_05, 0x_78, 0x_06, 0x_93, 0x_EF, 0x_1B,
		0x_AD, 0x_D6, 0x_66, 0x_7B, 0x_73, 0x_13, 0x_02, 0x_75, 0x_51, 0x_A4, 0x_59, 0x_92, 0x_33, 0x_AC, 0x_F7,
		0x_99, 0x_CD, 0x_C3, 0x_6F, 0x_17, 0x_57, 0x_F4, 0x_81, 0x_72, 0x_B7, 0x_F1, 0x_DA, 0x_6B, 0x_2F, 0x_DB,
		0x_BB, 0x_B0, 0x_65, 0x_EA, 0x_9A, 0x_86, 0x_29, 0x_D4, 0x_08, 0x_46, 0x_34, 0x_9B, 0x_7C, 0x_F3, 0x_C5,
		0x_4F, 0x_5F, 0x_8C, 0x_FD, 0x_55, 0x_44, 0x_3D, 0x_9C, 0x_FA, 0x_2A, 0x_60, 0x_38, 0x_25, 0x_90, 0x_A6,
		0x_8F, 0x_8A, 0x_12, 0x_30, 0x_35, 0x_1D, 0x_C2, 0x_C7, 0x_9E, 0x_39, 0x_80, 0x_43, 0x_84,
	];

	helper(S, BASE, -5_826_937);
}
// endregion
// region: s_has_signs_and_minus_94_114_830_in_base_193
#[test]
fn s_has_signs_and_minus_94_114_830_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_44, 0x_53,
		0x_FC, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_71, 0x_9B, 0x_28, 0x_E6, 0x_C7, 0x_AA, 0x_49, 0x_E4, 0x_94, 0x_EE, 0x_6F, 0x_E9, 0x_44, 0x_1B,
		0x_22, 0x_87, 0x_53, 0x_EF, 0x_7B, 0x_66, 0x_78, 0x_1A, 0x_E5, 0x_F6, 0x_A7, 0x_3D, 0x_C0, 0x_85, 0x_93,
		0x_2F, 0x_4C, 0x_1E, 0x_3E, 0x_C6, 0x_26, 0x_27, 0x_B1, 0x_95, 0x_97, 0x_DD, 0x_ED, 0x_50, 0x_A1, 0x_EB,
		0x_E3, 0x_3C, 0x_0E, 0x_A6, 0x_AD, 0x_6B, 0x_1C, 0x_5C, 0x_47, 0x_79, 0x_61, 0x_8F, 0x_D2, 0x_21, 0x_5A,
		0x_9A, 0x_AC, 0x_88, 0x_9D, 0x_23, 0x_A2, 0x_24, 0x_6A, 0x_63, 0x_D9, 0x_36, 0x_F5, 0x_57, 0x_D7, 0x_FB,
		0x_89, 0x_DA, 0x_25, 0x_73, 0x_8A, 0x_4A, 0x_5E, 0x_10, 0x_41, 0x_CB, 0x_82, 0x_9C, 0x_11, 0x_34, 0x_D1,
		0x_75, 0x_F1, 0x_80, 0x_B9, 0x_F4, 0x_54, 0x_B3, 0x_3F, 0x_55, 0x_EA, 0x_7F, 0x_0F, 0x_56, 0x_2E, 0x_83,
		0x_9E, 0x_7C, 0x_F3, 0x_02, 0x_E0, 0x_F7, 0x_CE, 0x_BB, 0x_15, 0x_3B, 0x_37, 0x_B7, 0x_E8, 0x_B6, 0x_F9,
		0x_8E, 0x_52, 0x_3A, 0x_FC, 0x_33, 0x_31, 0x_59, 0x_C9, 0x_38, 0x_BA, 0x_96, 0x_03, 0x_4B, 0x_98, 0x_DB,
		0x_62, 0x_CC, 0x_12, 0x_13, 0x_4F, 0x_42, 0x_C3, 0x_84, 0x_01, 0x_A3, 0x_FE, 0x_B5, 0x_8C, 0x_C5, 0x_04,
		0x_D5, 0x_64, 0x_46, 0x_92, 0x_B2, 0x_BE, 0x_A5, 0x_48, 0x_7D, 0x_CD, 0x_17, 0x_9F, 0x_FD, 0x_E1, 0x_F2,
		0x_14, 0x_77, 0x_70, 0x_65, 0x_69, 0x_F0, 0x_2C, 0x_B0, 0x_A8, 0x_C1, 0x_43, 0x_32, 0x_58, 0x_90, 0x_6D,
		0x_81, 0x_67, 0x_FA, 0x_68, 0x_1D, 0x_EC, 0x_C4, 0x_86, 0x_BD, 0x_E2, 0x_1F, 0x_7A, 0x_39,
	];

	helper(S, BASE, -94_114_830);
}
// endregion
// region: s_has_signs_and_minus_893_549_548_in_base_193
#[test]
fn s_has_signs_and_minus_893_549_548_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_67, 0x_14, 0x_34, 0x_6B,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_4F, 0x_A5, 0x_B5, 0x_3D, 0x_FD, 0x_2A, 0x_F7, 0x_D1, 0x_C8, 0x_E3, 0x_53, 0x_13, 0x_9F, 0x_F8,
		0x_23, 0x_17, 0x_7B, 0x_3E, 0x_7A, 0x_E7, 0x_30, 0x_7D, 0x_1B, 0x_FC, 0x_4E, 0x_BF, 0x_66, 0x_28, 0x_A1,
		0x_B0, 0x_6F, 0x_ED, 0x_D9, 0x_A6, 0x_D7, 0x_EC, 0x_08, 0x_E8, 0x_82, 0x_72, 0x_97, 0x_A9, 0x_05, 0x_8F,
		0x_AD, 0x_98, 0x_EA, 0x_FA, 0x_B9, 0x_AC, 0x_D2, 0x_56, 0x_74, 0x_52, 0x_84, 0x_14, 0x_BB, 0x_CE, 0x_9B,
		0x_A7, 0x_2F, 0x_A0, 0x_60, 0x_DC, 0x_C6, 0x_81, 0x_E0, 0x_18, 0x_E9, 0x_DF, 0x_71, 0x_42, 0x_0F, 0x_65,
		0x_6C, 0x_D3, 0x_79, 0x_6B, 0x_7C, 0x_F5, 0x_B3, 0x_39, 0x_83, 0x_11, 0x_3C, 0x_CB, 0x_5F, 0x_BE, 0x_9E,
		0x_C9, 0x_DD, 0x_33, 0x_59, 0x_6D, 0x_AA, 0x_91, 0x_5C, 0x_51, 0x_F6, 0x_CC, 0x_46, 0x_A8, 0x_36, 0x_31,
		0x_3F, 0x_34, 0x_A3, 0x_A4, 0x_02, 0x_EF, 0x_B1, 0x_50, 0x_E1, 0x_C2, 0x_4B, 0x_01, 0x_40, 0x_DE, 0x_6A,
		0x_2C, 0x_8D, 0x_73, 0x_7F, 0x_67, 0x_B6, 0x_55, 0x_48, 0x_70, 0x_F9, 0x_FB, 0x_8B, 0x_49, 0x_1F, 0x_41,
		0x_5D, 0x_78, 0x_99, 0x_9D, 0x_62, 0x_38, 0x_3A, 0x_29, 0x_58, 0x_4D, 0x_8A, 0x_25, 0x_26, 0x_5A, 0x_77,
		0x_75, 0x_B8, 0x_61, 0x_DB, 0x_BA, 0x_0E, 0x_D0, 0x_80, 0x_45, 0x_BC, 0x_F2, 0x_E2, 0x_8C, 0x_1A, 0x_85,
		0x_F3, 0x_E4, 0x_5B, 0x_D8, 0x_8E, 0x_CD, 0x_22, 0x_90, 0x_B2, 0x_C1, 0x_EE, 0x_94, 0x_24, 0x_12, 0x_54,
		0x_76, 0x_68, 0x_9C, 0x_1D, 0x_88, 0x_63, 0x_04, 0x_B4, 0x_1E, 0x_19, 0x_DA, 0x_E6, 0x_69,
	];

	helper(S, BASE, -893_549_548);
}
// endregion
// region: s_has_signs_and_minus_4_in_base_247
#[test]
fn s_has_signs_and_minus_4_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_07, 0x_D7, 0x_6A, 0x_CD, 0x_DF, 0x_18, 0x_A2, 0x_E5, 0x_05, 0x_7A, 0x_E7, 0x_90, 0x_64, 0x_75,
		0x_98, 0x_A1, 0x_FB, 0x_EF, 0x_E4, 0x_FF, 0x_2F, 0x_FC, 0x_3F, 0x_5D, 0x_AE, 0x_15, 0x_30, 0x_29, 0x_28,
		0x_D1, 0x_01, 0x_69, 0x_42, 0x_11, 0x_52, 0x_1E, 0x_8A, 0x_BF, 0x_17, 0x_A7, 0x_BA, 0x_27, 0x_3E, 0x_B9,
		0x_04, 0x_5C, 0x_71, 0x_50, 0x_B0, 0x_89, 0x_06, 0x_76, 0x_4A, 0x_C5, 0x_37, 0x_5A, 0x_81, 0x_EC, 0x_C4,
		0x_BB, 0x_3B, 0x_03, 0x_85, 0x_C7, 0x_E3, 0x_F5, 0x_4E, 0x_C9, 0x_8C, 0x_22, 0x_92, 0x_83, 0x_D6, 0x_6E,
		0x_D0, 0x_3D, 0x_CF, 0x_1D, 0x_97, 0x_DA, 0x_AF, 0x_8E, 0x_80, 0x_62, 0x_A8, 0x_45, 0x_68, 0x_7D, 0x_D5,
		0x_E2, 0x_93, 0x_AC, 0x_12, 0x_9D, 0x_F0, 0x_B7, 0x_82, 0x_21, 0x_46, 0x_5B, 0x_9C, 0x_DC, 0x_77, 0x_D4,
		0x_C1, 0x_D2, 0x_67, 0x_47, 0x_CA, 0x_E1, 0x_14, 0x_66, 0x_2A, 0x_10, 0x_BE, 0x_33, 0x_F9, 0x_9F, 0x_EA,
		0x_7F, 0x_C2, 0x_87, 0x_4C, 0x_D8, 0x_19, 0x_56, 0x_4F, 0x_02, 0x_E9, 0x_F1, 0x_23, 0x_48, 0x_CE, 0x_5E,
		0x_1C, 0x_94, 0x_35, 0x_CB, 0x_DD, 0x_16, 0x_38, 0x_1F, 0x_95, 0x_7C, 0x_AD, 0x_40, 0x_65, 0x_B3, 0x_51,
		0x_CC, 0x_9E, 0x_A5, 0x_F7, 0x_84, 0x_7E, 0x_54, 0x_34, 0x_FD, 0x_E8, 0x_FE, 0x_AA, 0x_7B, 0x_B5, 0x_A6,
		0x_D3, 0x_4D, 0x_39, 0x_32, 0x_F3, 0x_44, 0x_A9, 0x_8D, 0x_EB, 0x_3C, 0x_55, 0x_4B, 0x_DE, 0x_36, 0x_BD,
		0x_F4, 0x_6B, 0x_6D, 0x_E0, 0x_B2, 0x_43, 0x_AB, 0x_A4, 0x_70, 0x_78, 0x_61, 0x_FA, 0x_41, 0x_73, 0x_99,
		0x_F8, 0x_ED, 0x_B4, 0x_0F, 0x_91, 0x_2C, 0x_9A, 0x_C3, 0x_BC, 0x_63, 0x_57, 0x_B8, 0x_59, 0x_6F, 0x_D9,
		0x_F2, 0x_C6, 0x_53, 0x_72, 0x_2E, 0x_A3, 0x_A0, 0x_6C, 0x_08, 0x_E6, 0x_1B, 0x_F6, 0x_0E, 0x_C8, 0x_86,
		0x_26, 0x_13, 0x_31, 0x_88, 0x_5F, 0x_B1, 0x_DB, 0x_8B, 0x_9B, 0x_3A, 0x_C0, 0x_74, 0x_B6, 0x_25, 0x_79,
		0x_49, 0x_1A, 0x_96, 0x_60, 0x_24, 0x_8F, 0x_58,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_signs_and_minus_80_in_base_247
#[test]
fn s_has_signs_and_minus_80_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_7D, 0x_34, 0x_F1, 0x_DE, 0x_F6, 0x_40, 0x_D7, 0x_31, 0x_FE, 0x_9B, 0x_D9, 0x_F5, 0x_EE, 0x_8A, 0x_69,
		0x_BC, 0x_F4, 0x_D3, 0x_3F, 0x_10, 0x_6B, 0x_17, 0x_61, 0x_41, 0x_D0, 0x_9A, 0x_3E, 0x_8D, 0x_45, 0x_71,
		0x_2E, 0x_DB, 0x_67, 0x_6D, 0x_3A, 0x_4D, 0x_13, 0x_25, 0x_B2, 0x_0E, 0x_32, 0x_C1, 0x_AE, 0x_66, 0x_85,
		0x_DC, 0x_B7, 0x_B1, 0x_6A, 0x_68, 0x_F0, 0x_03, 0x_4F, 0x_06, 0x_9C, 0x_3D, 0x_E6, 0x_16, 0x_4A, 0x_B6,
		0x_6E, 0x_AB, 0x_9E, 0x_D8, 0x_01, 0x_A5, 0x_5E, 0x_E9, 0x_57, 0x_76, 0x_54, 0x_79, 0x_14, 0x_A2, 0x_73,
		0x_A8, 0x_83, 0x_05, 0x_89, 0x_CD, 0x_92, 0x_8E, 0x_BB, 0x_23, 0x_49, 0x_74, 0x_C7, 0x_E5, 0x_84, 0x_07,
		0x_B0, 0x_C3, 0x_E1, 0x_FC, 0x_C0, 0x_35, 0x_2C, 0x_FB, 0x_12, 0x_CE, 0x_C9, 0x_50, 0x_2A, 0x_26, 0x_CB,
		0x_C6, 0x_BE, 0x_97, 0x_C5, 0x_94, 0x_11, 0x_5B, 0x_5F, 0x_1C, 0x_22, 0x_37, 0x_5C, 0x_44, 0x_D5, 0x_8C,
		0x_A9, 0x_B5, 0x_F9, 0x_FF, 0x_29, 0x_82, 0x_65, 0x_27, 0x_63, 0x_D1, 0x_33, 0x_21, 0x_6F, 0x_46, 0x_C4,
		0x_90, 0x_38, 0x_DF, 0x_42, 0x_7E, 0x_DA, 0x_18, 0x_F2, 0x_B8, 0x_2F, 0x_D2, 0x_53, 0x_04, 0x_81, 0x_B3,
		0x_58, 0x_4E, 0x_15, 0x_60, 0x_88, 0x_AD, 0x_30, 0x_1B, 0x_95, 0x_E3, 0x_A6, 0x_96, 0x_CC, 0x_98, 0x_3C,
		0x_BF, 0x_6C, 0x_B4, 0x_1A, 0x_5D, 0x_4C, 0x_08, 0x_51, 0x_36, 0x_99, 0x_F7, 0x_E8, 0x_72, 0x_AC, 0x_A1,
		0x_70, 0x_D6, 0x_E4, 0x_9F, 0x_91, 0x_48, 0x_D4, 0x_93, 0x_80, 0x_C8, 0x_24, 0x_EC, 0x_64, 0x_56, 0x_52,
		0x_B9, 0x_86, 0x_CF, 0x_A4, 0x_8F, 0x_3B, 0x_8B, 0x_1F, 0x_9D, 0x_EA, 0x_A0, 0x_62, 0x_0F, 0x_43, 0x_77,
		0x_CA, 0x_F8, 0x_E0, 0x_1D, 0x_5A, 0x_A7, 0x_59, 0x_FA, 0x_DD, 0x_AF, 0x_87, 0x_78, 0x_E7, 0x_4B, 0x_FD,
		0x_75, 0x_19, 0x_F3, 0x_EB, 0x_E2, 0x_AA, 0x_BD, 0x_1E, 0x_7B, 0x_02, 0x_39, 0x_A3, 0x_C2, 0x_7C, 0x_28,
		0x_BA, 0x_7F, 0x_ED, 0x_7A, 0x_47, 0x_EF, 0x_55,
	];

	helper(S, BASE, -80);
}
// endregion
// region: s_has_signs_and_minus_528_in_base_247
#[test]
fn s_has_signs_and_minus_528_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_DB, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_75, 0x_DB, 0x_98, 0x_CC, 0x_FB, 0x_4D, 0x_2C, 0x_E8, 0x_22, 0x_74, 0x_16, 0x_86, 0x_B9, 0x_BC,
		0x_43, 0x_BE, 0x_1F, 0x_4E, 0x_E5, 0x_0F, 0x_70, 0x_52, 0x_5B, 0x_7E, 0x_76, 0x_6D, 0x_B6, 0x_BB, 0x_5A,
		0x_92, 0x_EF, 0x_EC, 0x_1E, 0x_07, 0x_A2, 0x_24, 0x_1A, 0x_4B, 0x_9F, 0x_7F, 0x_B3, 0x_C9, 0x_79, 0x_05,
		0x_F8, 0x_62, 0x_39, 0x_93, 0x_41, 0x_55, 0x_94, 0x_5F, 0x_BF, 0x_D9, 0x_D4, 0x_3A, 0x_B7, 0x_33, 0x_56,
		0x_9C, 0x_FE, 0x_F6, 0x_D1, 0x_9E, 0x_CA, 0x_47, 0x_53, 0x_19, 0x_DF, 0x_AA, 0x_26, 0x_F4, 0x_A5, 0x_3E,
		0x_DC, 0x_C1, 0x_C7, 0x_A7, 0x_5E, 0x_87, 0x_AE, 0x_8C, 0x_27, 0x_F3, 0x_37, 0x_21, 0x_E6, 0x_B0, 0x_2E,
		0x_3D, 0x_12, 0x_17, 0x_DD, 0x_C0, 0x_6F, 0x_03, 0x_B2, 0x_6E, 0x_28, 0x_E1, 0x_CD, 0x_A0, 0x_2A, 0x_25,
		0x_91, 0x_D2, 0x_60, 0x_14, 0x_A1, 0x_3F, 0x_A6, 0x_EA, 0x_E9, 0x_45, 0x_AB, 0x_F5, 0x_85, 0x_B4, 0x_6A,
		0x_69, 0x_18, 0x_1D, 0x_4A, 0x_34, 0x_D8, 0x_EE, 0x_A3, 0x_32, 0x_90, 0x_6B, 0x_D0, 0x_ED, 0x_57, 0x_A4,
		0x_5D, 0x_64, 0x_73, 0x_DA, 0x_35, 0x_80, 0x_FA, 0x_31, 0x_D6, 0x_8F, 0x_3C, 0x_E0, 0x_44, 0x_06, 0x_63,
		0x_A8, 0x_B1, 0x_2F, 0x_FD, 0x_71, 0x_82, 0x_7C, 0x_54, 0x_C4, 0x_01, 0x_C6, 0x_B5, 0x_A9, 0x_77, 0x_29,
		0x_42, 0x_7A, 0x_13, 0x_D5, 0x_8A, 0x_6C, 0x_AC, 0x_38, 0x_E2, 0x_40, 0x_F1, 0x_30, 0x_BA, 0x_72, 0x_8E,
		0x_F9, 0x_48, 0x_C3, 0x_DE, 0x_8B, 0x_F0, 0x_9A, 0x_51, 0x_50, 0x_49, 0x_36, 0x_BD, 0x_4F, 0x_95, 0x_9B,
		0x_11, 0x_EB, 0x_8D, 0x_B8, 0x_83, 0x_99, 0x_68, 0x_08, 0x_FC, 0x_59, 0x_96, 0x_D7, 0x_CB, 0x_0E, 0x_E3,
		0x_CF, 0x_02, 0x_1B, 0x_61, 0x_F2, 0x_04, 0x_E7, 0x_D3, 0x_7B, 0x_23, 0x_7D, 0x_9D, 0x_89, 0x_3B, 0x_15,
		0x_58, 0x_FF, 0x_81, 0x_5C, 0x_F7, 0x_65, 0x_67, 0x_88, 0x_C8, 0x_10, 0x_78, 0x_97, 0x_66, 0x_C5, 0x_CE,
		0x_E4, 0x_AD, 0x_4C, 0x_46, 0x_84, 0x_AF, 0x_C2,
	];

	helper(S, BASE, -528);
}
// endregion
// region: s_has_signs_and_minus_6_532_in_base_247
#[test]
fn s_has_signs_and_minus_6_532_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_55, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_9C, 0x_4F, 0x_EB, 0x_9D, 0x_D9, 0x_28, 0x_76, 0x_B7, 0x_F1, 0x_EA, 0x_3F, 0x_BF, 0x_6E, 0x_65,
		0x_12, 0x_DA, 0x_06, 0x_75, 0x_CA, 0x_E0, 0x_34, 0x_D2, 0x_9A, 0x_D4, 0x_B6, 0x_55, 0x_74, 0x_82, 0x_A3,
		0x_AA, 0x_E8, 0x_FB, 0x_3D, 0x_0F, 0x_7D, 0x_B4, 0x_36, 0x_5F, 0x_BB, 0x_50, 0x_E5, 0x_CB, 0x_7E, 0x_F4,
		0x_BE, 0x_31, 0x_45, 0x_FC, 0x_2F, 0x_6F, 0x_AD, 0x_CD, 0x_04, 0x_88, 0x_A2, 0x_5C, 0x_44, 0x_22, 0x_52,
		0x_C4, 0x_48, 0x_A4, 0x_A8, 0x_8E, 0x_41, 0x_D0, 0x_43, 0x_AC, 0x_33, 0x_37, 0x_9B, 0x_5B, 0x_E9, 0x_A9,
		0x_D7, 0x_66, 0x_EC, 0x_86, 0x_6A, 0x_FD, 0x_9E, 0x_10, 0x_54, 0x_FE, 0x_77, 0x_D8, 0x_3A, 0x_21, 0x_68,
		0x_26, 0x_D6, 0x_14, 0x_6C, 0x_8B, 0x_DC, 0x_38, 0x_D5, 0x_2E, 0x_42, 0x_AE, 0x_C5, 0x_78, 0x_23, 0x_0E,
		0x_72, 0x_46, 0x_67, 0x_95, 0x_87, 0x_F6, 0x_A0, 0x_DF, 0x_5D, 0x_4E, 0x_FF, 0x_BC, 0x_6D, 0x_B3, 0x_11,
		0x_F9, 0x_4B, 0x_AF, 0x_92, 0x_59, 0x_1D, 0x_7C, 0x_E3, 0x_E6, 0x_1E, 0x_89, 0x_18, 0x_D1, 0x_94, 0x_32,
		0x_7F, 0x_84, 0x_C6, 0x_BD, 0x_97, 0x_40, 0x_70, 0x_EF, 0x_51, 0x_A5, 0x_62, 0x_80, 0x_49, 0x_F0, 0x_EE,
		0x_A1, 0x_53, 0x_81, 0x_13, 0x_C9, 0x_1B, 0x_35, 0x_4D, 0x_7B, 0x_83, 0x_61, 0x_73, 0x_8A, 0x_DD, 0x_DB,
		0x_99, 0x_15, 0x_3B, 0x_91, 0x_C8, 0x_1F, 0x_F8, 0x_F7, 0x_C3, 0x_C1, 0x_CE, 0x_F5, 0x_E4, 0x_3C, 0x_8D,
		0x_B0, 0x_FA, 0x_03, 0x_69, 0x_CF, 0x_C0, 0x_4A, 0x_85, 0x_93, 0x_E2, 0x_B5, 0x_7A, 0x_AB, 0x_DE, 0x_ED,
		0x_F3, 0x_64, 0x_B9, 0x_90, 0x_9F, 0x_30, 0x_A7, 0x_C7, 0x_B2, 0x_39, 0x_19, 0x_24, 0x_60, 0x_A6, 0x_57,
		0x_01, 0x_63, 0x_56, 0x_F2, 0x_E1, 0x_5E, 0x_05, 0x_E7, 0x_29, 0x_3E, 0x_4C, 0x_98, 0x_07, 0x_2C, 0x_17,
		0x_79, 0x_2A, 0x_8C, 0x_16, 0x_96, 0x_B1, 0x_B8, 0x_5A, 0x_58, 0x_D3, 0x_27, 0x_25, 0x_1C, 0x_8F, 0x_1A,
		0x_CC, 0x_02, 0x_C2, 0x_47, 0x_71, 0x_08, 0x_6B,
	];

	helper(S, BASE, -6_532);
}
// endregion
// region: s_has_signs_and_minus_70_277_in_base_247
#[test]
fn s_has_signs_and_minus_70_277_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_B3, 0x_A4, 0x_A5,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_B3, 0x_1F, 0x_7C, 0x_4D, 0x_57, 0x_12, 0x_D3, 0x_50, 0x_99, 0x_36, 0x_6D, 0x_C6, 0x_0E, 0x_E3,
		0x_7E, 0x_91, 0x_DF, 0x_48, 0x_34, 0x_67, 0x_24, 0x_C7, 0x_BB, 0x_19, 0x_C1, 0x_6C, 0x_CD, 0x_F8, 0x_5E,
		0x_59, 0x_F1, 0x_06, 0x_FF, 0x_BF, 0x_B6, 0x_AD, 0x_A4, 0x_D2, 0x_33, 0x_E7, 0x_4A, 0x_EE, 0x_CA, 0x_B2,
		0x_03, 0x_96, 0x_F7, 0x_A1, 0x_42, 0x_90, 0x_9E, 0x_72, 0x_CE, 0x_44, 0x_EA, 0x_88, 0x_51, 0x_37, 0x_04,
		0x_95, 0x_49, 0x_DC, 0x_C8, 0x_CF, 0x_26, 0x_F2, 0x_D5, 0x_1A, 0x_69, 0x_53, 0x_E8, 0x_22, 0x_31, 0x_BA,
		0x_B9, 0x_3D, 0x_9B, 0x_66, 0x_F4, 0x_3F, 0x_11, 0x_F6, 0x_C4, 0x_5A, 0x_3A, 0x_92, 0x_7D, 0x_27, 0x_CC,
		0x_D4, 0x_65, 0x_ED, 0x_8D, 0x_6A, 0x_43, 0x_1D, 0x_D0, 0x_76, 0x_A8, 0x_81, 0x_7B, 0x_F9, 0x_BD, 0x_87,
		0x_14, 0x_85, 0x_21, 0x_5F, 0x_C5, 0x_02, 0x_13, 0x_9A, 0x_8B, 0x_8F, 0x_4E, 0x_83, 0x_74, 0x_3E, 0x_82,
		0x_F3, 0x_EF, 0x_E2, 0x_64, 0x_41, 0x_77, 0x_61, 0x_40, 0x_94, 0x_A5, 0x_9D, 0x_01, 0x_58, 0x_D9, 0x_18,
		0x_E0, 0x_78, 0x_23, 0x_8A, 0x_30, 0x_DB, 0x_DE, 0x_25, 0x_55, 0x_1E, 0x_C2, 0x_46, 0x_D8, 0x_10, 0x_E9,
		0x_B5, 0x_B0, 0x_A3, 0x_3B, 0x_39, 0x_5D, 0x_B8, 0x_F0, 0x_47, 0x_7F, 0x_9C, 0x_75, 0x_89, 0x_BC, 0x_84,
		0x_71, 0x_98, 0x_5B, 0x_EB, 0x_4B, 0x_A9, 0x_35, 0x_E4, 0x_4F, 0x_C0, 0x_FD, 0x_DD, 0x_B7, 0x_C3, 0x_FC,
		0x_B1, 0x_FE, 0x_08, 0x_2C, 0x_29, 0x_5C, 0x_B4, 0x_52, 0x_D6, 0x_E5, 0x_FB, 0x_E1, 0x_2F, 0x_86, 0x_AA,
		0x_07, 0x_AE, 0x_D7, 0x_68, 0x_3C, 0x_05, 0x_C9, 0x_63, 0x_93, 0x_17, 0x_A6, 0x_9F, 0x_62, 0x_DA, 0x_54,
		0x_80, 0x_EC, 0x_AC, 0x_2A, 0x_BE, 0x_73, 0x_8E, 0x_1C, 0x_28, 0x_4C, 0x_7A, 0x_45, 0x_15, 0x_32, 0x_6F,
		0x_D1, 0x_AB, 0x_A2, 0x_8C, 0x_CB, 0x_6E, 0x_A0, 0x_60, 0x_E6, 0x_38, 0x_70, 0x_2E, 0x_0F, 0x_1B, 0x_FA,
		0x_A7, 0x_79, 0x_16, 0x_56, 0x_6B, 0x_AF, 0x_97,
	];

	helper(S, BASE, -70_277);
}
// endregion
// region: s_has_signs_and_minus_312_316_in_base_247
#[test]
fn s_has_signs_and_minus_312_316_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_54, 0x_9D, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_70, 0x_1D, 0x_6F, 0x_3F, 0x_54, 0x_AF, 0x_47, 0x_50, 0x_6E, 0x_F0, 0x_F6, 0x_7D, 0x_1F, 0x_1B,
		0x_55, 0x_0E, 0x_BA, 0x_CF, 0x_29, 0x_7F, 0x_E6, 0x_32, 0x_AD, 0x_7B, 0x_D0, 0x_EE, 0x_45, 0x_1E, 0x_9D,
		0x_5D, 0x_84, 0x_CC, 0x_EA, 0x_FF, 0x_11, 0x_A8, 0x_BB, 0x_12, 0x_24, 0x_BE, 0x_D7, 0x_13, 0x_6C, 0x_19,
		0x_57, 0x_EF, 0x_73, 0x_5F, 0x_80, 0x_B7, 0x_89, 0x_EC, 0x_86, 0x_DF, 0x_BD, 0x_96, 0x_C7, 0x_D9, 0x_36,
		0x_7C, 0x_27, 0x_DE, 0x_77, 0x_53, 0x_41, 0x_D4, 0x_7A, 0x_67, 0x_48, 0x_71, 0x_A6, 0x_3E, 0x_4C, 0x_FC,
		0x_69, 0x_C8, 0x_51, 0x_60, 0x_C2, 0x_33, 0x_8F, 0x_C5, 0x_92, 0x_A3, 0x_43, 0x_A2, 0x_4D, 0x_A5, 0x_52,
		0x_87, 0x_ED, 0x_4A, 0x_02, 0x_FD, 0x_14, 0x_03, 0x_95, 0x_58, 0x_C1, 0x_21, 0x_8E, 0x_98, 0x_D3, 0x_56,
		0x_B5, 0x_18, 0x_D8, 0x_5E, 0x_30, 0x_CA, 0x_9B, 0x_FE, 0x_49, 0x_E2, 0x_F8, 0x_B2, 0x_78, 0x_AB, 0x_66,
		0x_C9, 0x_61, 0x_81, 0x_A9, 0x_97, 0x_F2, 0x_D1, 0x_FB, 0x_85, 0x_AC, 0x_A7, 0x_4E, 0x_CB, 0x_A0, 0x_E8,
		0x_62, 0x_05, 0x_15, 0x_40, 0x_9F, 0x_3C, 0x_38, 0x_90, 0x_D6, 0x_76, 0x_E0, 0x_D5, 0x_C0, 0x_F9, 0x_A1,
		0x_F4, 0x_23, 0x_8A, 0x_8D, 0x_1C, 0x_E1, 0x_5C, 0x_42, 0x_8B, 0x_C6, 0x_3B, 0x_B0, 0x_F7, 0x_B9, 0x_06,
		0x_5B, 0x_BC, 0x_EB, 0x_75, 0x_72, 0x_C3, 0x_63, 0x_39, 0x_01, 0x_E4, 0x_DA, 0x_83, 0x_07, 0x_BF, 0x_9E,
		0x_59, 0x_F1, 0x_5A, 0x_CD, 0x_2C, 0x_E3, 0x_35, 0x_AA, 0x_F3, 0x_6D, 0x_91, 0x_46, 0x_64, 0x_65, 0x_93,
		0x_4B, 0x_E7, 0x_6B, 0x_74, 0x_2F, 0x_6A, 0x_B3, 0x_99, 0x_22, 0x_3D, 0x_37, 0x_2E, 0x_4F, 0x_B8, 0x_3A,
		0x_F5, 0x_AE, 0x_A4, 0x_25, 0x_DB, 0x_04, 0x_08, 0x_17, 0x_31, 0x_9A, 0x_B4, 0x_26, 0x_E5, 0x_79, 0x_28,
		0x_10, 0x_34, 0x_0F, 0x_CE, 0x_C4, 0x_44, 0x_E9, 0x_DD, 0x_88, 0x_DC, 0x_7E, 0x_2A, 0x_16, 0x_1A, 0x_9C,
		0x_82, 0x_B1, 0x_94, 0x_B6, 0x_8C, 0x_D2, 0x_FA,
	];

	helper(S, BASE, -312_316);
}
// endregion
// region: s_has_signs_and_minus_1_083_396_in_base_247
#[test]
fn s_has_signs_and_minus_1_083_396_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_80, 0x_CA, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_96, 0x_07, 0x_48, 0x_82, 0x_19, 0x_4A, 0x_42, 0x_05, 0x_61, 0x_EF, 0x_9B, 0x_81, 0x_A6, 0x_9F,
		0x_B6, 0x_64, 0x_80, 0x_D9, 0x_FF, 0x_13, 0x_7A, 0x_95, 0x_EE, 0x_A7, 0x_85, 0x_F8, 0x_02, 0x_6B, 0x_F2,
		0x_1D, 0x_91, 0x_3C, 0x_E9, 0x_73, 0x_EA, 0x_CE, 0x_F6, 0x_77, 0x_88, 0x_68, 0x_C8, 0x_AA, 0x_18, 0x_15,
		0x_6D, 0x_5E, 0x_6F, 0x_5D, 0x_5F, 0x_EC, 0x_90, 0x_D0, 0x_35, 0x_9E, 0x_BD, 0x_C4, 0x_59, 0x_49, 0x_D8,
		0x_76, 0x_06, 0x_C7, 0x_51, 0x_01, 0x_A3, 0x_55, 0x_A1, 0x_E8, 0x_AD, 0x_B9, 0x_8D, 0x_F0, 0x_DB, 0x_6A,
		0x_84, 0x_6E, 0x_EB, 0x_2C, 0x_E7, 0x_F5, 0x_43, 0x_22, 0x_4F, 0x_D2, 0x_34, 0x_D6, 0x_58, 0x_BA, 0x_C2,
		0x_ED, 0x_FE, 0x_BB, 0x_63, 0x_83, 0x_41, 0x_69, 0x_0E, 0x_CB, 0x_F4, 0x_FB, 0x_16, 0x_26, 0x_67, 0x_DF,
		0x_6C, 0x_A5, 0x_D5, 0x_C9, 0x_B7, 0x_AC, 0x_2F, 0x_24, 0x_B3, 0x_CC, 0x_3B, 0x_14, 0x_AF, 0x_BE, 0x_1E,
		0x_46, 0x_29, 0x_28, 0x_2E, 0x_47, 0x_B1, 0x_57, 0x_10, 0x_5B, 0x_C0, 0x_1A, 0x_25, 0x_8B, 0x_78, 0x_62,
		0x_BF, 0x_30, 0x_D1, 0x_A8, 0x_44, 0x_94, 0x_7F, 0x_71, 0x_B2, 0x_45, 0x_D4, 0x_17, 0x_03, 0x_F3, 0x_D7,
		0x_AB, 0x_38, 0x_E5, 0x_79, 0x_9A, 0x_1F, 0x_99, 0x_40, 0x_BC, 0x_B0, 0x_1C, 0x_54, 0x_60, 0x_FD, 0x_3E,
		0x_87, 0x_C1, 0x_93, 0x_D3, 0x_36, 0x_9C, 0x_5C, 0x_A2, 0x_CF, 0x_33, 0x_A4, 0x_56, 0x_A9, 0x_5A, 0x_8F,
		0x_53, 0x_98, 0x_66, 0x_4E, 0x_52, 0x_E1, 0x_F9, 0x_CA, 0x_C3, 0x_B5, 0x_04, 0x_F7, 0x_3F, 0x_37, 0x_32,
		0x_4C, 0x_DC, 0x_4D, 0x_E0, 0x_08, 0x_8C, 0x_9D, 0x_8E, 0x_27, 0x_E2, 0x_8A, 0x_C5, 0x_E3, 0x_DA, 0x_3D,
		0x_92, 0x_7B, 0x_E6, 0x_97, 0x_2A, 0x_7C, 0x_7E, 0x_FC, 0x_DE, 0x_3A, 0x_C6, 0x_7D, 0x_12, 0x_11, 0x_B8,
		0x_23, 0x_FA, 0x_A0, 0x_31, 0x_21, 0x_AE, 0x_F1, 0x_86, 0x_39, 0x_70, 0x_DD, 0x_0F, 0x_89, 0x_65, 0x_75,
		0x_1B, 0x_74, 0x_E4, 0x_50, 0x_CD, 0x_72, 0x_B4,
	];

	helper(S, BASE, -1_083_396);
}
// endregion
// region: s_has_signs_and_minus_23_915_889_in_base_247
#[test]
fn s_has_signs_and_minus_23_915_889_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2A,
		0x_3C, 0x_2A, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_2A, 0x_C2, 0x_15, 0x_8C, 0x_CF, 0x_4B, 0x_82, 0x_7B, 0x_B0, 0x_39, 0x_7F, 0x_B1, 0x_1A, 0x_23,
		0x_4E, 0x_E5, 0x_A9, 0x_67, 0x_F9, 0x_36, 0x_24, 0x_AB, 0x_46, 0x_FB, 0x_E1, 0x_63, 0x_E3, 0x_11, 0x_AC,
		0x_90, 0x_03, 0x_5A, 0x_BC, 0x_A8, 0x_04, 0x_88, 0x_C1, 0x_77, 0x_4C, 0x_78, 0x_E7, 0x_DC, 0x_76, 0x_7E,
		0x_91, 0x_A4, 0x_D6, 0x_80, 0x_F3, 0x_3A, 0x_DE, 0x_D0, 0x_A1, 0x_32, 0x_6F, 0x_D5, 0x_27, 0x_CA, 0x_29,
		0x_FF, 0x_BD, 0x_E8, 0x_D1, 0x_81, 0x_55, 0x_94, 0x_54, 0x_1C, 0x_D3, 0x_B5, 0x_21, 0x_DD, 0x_F8, 0x_02,
		0x_BA, 0x_BF, 0x_8F, 0x_96, 0x_CC, 0x_BB, 0x_F4, 0x_DB, 0x_4A, 0x_AE, 0x_F2, 0x_E0, 0x_34, 0x_C7, 0x_A6,
		0x_9F, 0x_85, 0x_B2, 0x_B3, 0x_D8, 0x_74, 0x_AD, 0x_37, 0x_49, 0x_93, 0x_70, 0x_F7, 0x_9D, 0x_2E, 0x_5D,
		0x_66, 0x_33, 0x_D2, 0x_47, 0x_10, 0x_BE, 0x_95, 0x_56, 0x_A5, 0x_48, 0x_50, 0x_16, 0x_26, 0x_A7, 0x_B7,
		0x_5C, 0x_C5, 0x_DF, 0x_C0, 0x_30, 0x_FE, 0x_92, 0x_6D, 0x_B9, 0x_E4, 0x_C3, 0x_F5, 0x_99, 0x_EC, 0x_FC,
		0x_F1, 0x_41, 0x_25, 0x_08, 0x_CB, 0x_12, 0x_64, 0x_A3, 0x_75, 0x_3B, 0x_3C, 0x_65, 0x_84, 0x_53, 0x_7C,
		0x_61, 0x_C4, 0x_06, 0x_14, 0x_73, 0x_51, 0x_E6, 0x_3E, 0x_C8, 0x_EA, 0x_1E, 0x_87, 0x_1D, 0x_5F, 0x_DA,
		0x_69, 0x_07, 0x_E2, 0x_B4, 0x_C6, 0x_31, 0x_8B, 0x_E9, 0x_5B, 0x_4D, 0x_9A, 0x_8D, 0x_1B, 0x_6A, 0x_A2,
		0x_22, 0x_7A, 0x_35, 0x_62, 0x_79, 0x_60, 0x_86, 0x_98, 0x_28, 0x_97, 0x_58, 0x_F6, 0x_40, 0x_8E, 0x_FA,
		0x_ED, 0x_2F, 0x_68, 0x_8A, 0x_6B, 0x_83, 0x_43, 0x_6E, 0x_01, 0x_59, 0x_AF, 0x_B6, 0x_F0, 0x_57, 0x_B8,
		0x_0F, 0x_17, 0x_19, 0x_EF, 0x_EB, 0x_1F, 0x_3D, 0x_2C, 0x_0E, 0x_D9, 0x_4F, 0x_18, 0x_EE, 0x_6C, 0x_42,
		0x_AA, 0x_52, 0x_3F, 0x_7D, 0x_9B, 0x_71, 0x_CE, 0x_C9, 0x_D7, 0x_05, 0x_13, 0x_72, 0x_5E, 0x_45, 0x_38,
		0x_A0, 0x_9E, 0x_D4, 0x_44, 0x_CD, 0x_9C, 0x_FD,
	];

	helper(S, BASE, -23_915_889);
}
// endregion
// region: s_has_signs_and_minus_540_941_944_in_base_247
#[test]
fn s_has_signs_and_minus_540_941_944_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_14, 0x_39, 0x_3D, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_1E, 0x_47, 0x_7D, 0x_E7, 0x_86, 0x_B1, 0x_7C, 0x_42, 0x_08, 0x_AE, 0x_BE, 0x_A3, 0x_FA, 0x_FB,
		0x_E3, 0x_99, 0x_52, 0x_E9, 0x_B4, 0x_FD, 0x_F7, 0x_22, 0x_AF, 0x_72, 0x_EC, 0x_A9, 0x_D8, 0x_46, 0x_3B,
		0x_D4, 0x_8F, 0x_A6, 0x_81, 0x_32, 0x_14, 0x_F2, 0x_B5, 0x_E1, 0x_82, 0x_63, 0x_7B, 0x_DF, 0x_10, 0x_E6,
		0x_15, 0x_07, 0x_50, 0x_DC, 0x_C1, 0x_3E, 0x_A7, 0x_65, 0x_B9, 0x_8E, 0x_2A, 0x_89, 0x_5D, 0x_76, 0x_CA,
		0x_5E, 0x_98, 0x_78, 0x_68, 0x_64, 0x_26, 0x_01, 0x_05, 0x_2E, 0x_EF, 0x_C3, 0x_1D, 0x_A8, 0x_7E, 0x_17,
		0x_7F, 0x_96, 0x_EA, 0x_43, 0x_87, 0x_BA, 0x_1C, 0x_F0, 0x_E5, 0x_12, 0x_4C, 0x_B8, 0x_9E, 0x_66, 0x_FF,
		0x_31, 0x_D9, 0x_23, 0x_8B, 0x_5A, 0x_1B, 0x_F4, 0x_F8, 0x_4B, 0x_34, 0x_33, 0x_B2, 0x_4A, 0x_55, 0x_53,
		0x_6D, 0x_11, 0x_EE, 0x_F5, 0x_2F, 0x_57, 0x_5F, 0x_DB, 0x_90, 0x_9C, 0x_DD, 0x_A2, 0x_C5, 0x_1F, 0x_71,
		0x_18, 0x_97, 0x_27, 0x_21, 0x_3F, 0x_25, 0x_03, 0x_02, 0x_D0, 0x_92, 0x_80, 0x_AC, 0x_6A, 0x_6B, 0x_E0,
		0x_49, 0x_BF, 0x_19, 0x_6E, 0x_3A, 0x_3C, 0x_13, 0x_16, 0x_38, 0x_48, 0x_A1, 0x_3D, 0x_54, 0x_D1, 0x_DE,
		0x_5B, 0x_C8, 0x_77, 0x_94, 0x_4E, 0x_6F, 0x_9F, 0x_73, 0x_36, 0x_EB, 0x_62, 0x_5C, 0x_0E, 0x_A0, 0x_C6,
		0x_58, 0x_2C, 0x_D7, 0x_0F, 0x_C0, 0x_BD, 0x_9D, 0x_6C, 0x_8D, 0x_67, 0x_95, 0x_BC, 0x_E4, 0x_D5, 0x_40,
		0x_F9, 0x_CF, 0x_9B, 0x_CE, 0x_AB, 0x_29, 0x_ED, 0x_88, 0x_B7, 0x_CB, 0x_C7, 0x_83, 0x_51, 0x_B3, 0x_59,
		0x_44, 0x_74, 0x_F1, 0x_4F, 0x_84, 0x_AD, 0x_70, 0x_9A, 0x_45, 0x_AA, 0x_8C, 0x_37, 0x_69, 0x_D6, 0x_24,
		0x_56, 0x_60, 0x_B0, 0x_C9, 0x_E8, 0x_F3, 0x_06, 0x_28, 0x_75, 0x_7A, 0x_D2, 0x_39, 0x_4D, 0x_C4, 0x_61,
		0x_30, 0x_1A, 0x_8A, 0x_85, 0x_A4, 0x_04, 0x_A5, 0x_79, 0x_BB, 0x_35, 0x_91, 0x_41, 0x_93, 0x_C2, 0x_CD,
		0x_CC, 0x_D3, 0x_E2, 0x_FE, 0x_F6, 0x_DA, 0x_B6,
	];

	helper(S, BASE, -540_941_944);
}
// endregion
// region: s_has_zeros_and_minus_1_in_base_2
#[test]
fn s_has_zeros_and_minus_1_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_DD,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_zeros_and_minus_73_in_base_2
#[test]
fn s_has_zeros_and_minus_73_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_33, 0x_C5, 0x_C5,
		0x_33, 0x_C5, 0x_C5, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_33,
	];

	helper(S, BASE, -73);
}
// endregion
// region: s_has_zeros_and_minus_827_in_base_2
#[test]
fn s_has_zeros_and_minus_827_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_18, 0x_18, 0x_18, 0x_8E, 0x_8E, 0x_18, 0x_18, 0x_8E, 0x_8E, 0x_8E, 0x_18, 0x_8E, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_8E,
	];

	helper(S, BASE, -827);
}
// endregion
// region: s_has_zeros_and_minus_9_573_in_base_2
#[test]
fn s_has_zeros_and_minus_9_573_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_84, 0x_BC, 0x_BC,
		0x_84, 0x_BC, 0x_84, 0x_BC, 0x_84, 0x_84, 0x_BC, 0x_BC, 0x_84, 0x_BC, 0x_84,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_84,
	];

	helper(S, BASE, -9_573);
}
// endregion
// region: s_has_zeros_and_minus_32_100_in_base_2
#[test]
fn s_has_zeros_and_minus_32_100_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85,
		0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85,
		0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_85, 0x_9F, 0x_85, 0x_9F, 0x_9F, 0x_85, 0x_85, 0x_9F, 0x_85, 0x_85,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_9F,
	];

	helper(S, BASE, -32_100);
}
// endregion
// region: s_has_zeros_and_minus_249_392_in_base_2
#[test]
fn s_has_zeros_and_minus_249_392_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98,
		0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_98, 0x_98, 0x_06, 0x_06, 0x_06, 0x_98, 0x_98, 0x_98, 0x_06, 0x_06, 0x_98, 0x_98, 0x_98,
		0x_98,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_06,
	];

	helper(S, BASE, -249_392);
}
// endregion
// region: s_has_zeros_and_minus_3_551_839_in_base_2
#[test]
fn s_has_zeros_and_minus_3_551_839_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_6F, 0x_6F, 0x_C7, 0x_6F, 0x_6F, 0x_C7, 0x_C7, 0x_C7, 0x_6F,
		0x_6F, 0x_C7, 0x_C7, 0x_6F, 0x_C7, 0x_C7, 0x_6F, 0x_C7, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_6F,
	];

	helper(S, BASE, -3_551_839);
}
// endregion
// region: s_has_zeros_and_minus_75_331_158_in_base_2
#[test]
fn s_has_zeros_and_minus_75_331_158_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_39, 0x_39, 0x_39, 0x_05, 0x_39, 0x_39, 0x_39, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_39, 0x_05,
		0x_39, 0x_05, 0x_05, 0x_05, 0x_39, 0x_05, 0x_05, 0x_39, 0x_39, 0x_05, 0x_39, 0x_05, 0x_39, 0x_05, 0x_05,
		0x_39,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_05,
	];

	helper(S, BASE, -75_331_158);
}
// endregion
// region: s_has_zeros_and_minus_873_850_142_in_base_2
#[test]
fn s_has_zeros_and_minus_873_850_142_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86,
		0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_69, 0x_69, 0x_86, 0x_69, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86,
		0x_69, 0x_86, 0x_69, 0x_86, 0x_69, 0x_69, 0x_69, 0x_69, 0x_86, 0x_86, 0x_69, 0x_86, 0x_69, 0x_86, 0x_86,
		0x_86, 0x_69, 0x_69, 0x_69, 0x_69, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_69,
	];

	helper(S, BASE, -873_850_142);
}
// endregion
// region: s_has_zeros_and_minus_7_in_base_3
#[test]
fn s_has_zeros_and_minus_7_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_40, 0x_56,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_56, 0x_40,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_zeros_and_minus_69_in_base_3
#[test]
fn s_has_zeros_and_minus_69_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_01, 0x_DB, 0x_01,
		0x_87,
	];
	const BASE: &[u8] = &[
		0x_87, 0x_DB, 0x_01,
	];

	helper(S, BASE, -69);
}
// endregion
// region: s_has_zeros_and_minus_284_in_base_3
#[test]
fn s_has_zeros_and_minus_284_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_E8, 0x_E8, 0x_E8, 0x_E8, 0x_71, 0x_E8, 0x_71, 0x_71, 0x_71, 0x_56,
	];
	const BASE: &[u8] = &[
		0x_E8, 0x_71, 0x_56,
	];

	helper(S, BASE, -284);
}
// endregion
// region: s_has_zeros_and_minus_2_257_in_base_3
#[test]
fn s_has_zeros_and_minus_2_257_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52,
		0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_A8, 0x_52, 0x_52, 0x_52, 0x_D6, 0x_A8, 0x_D6,
		0x_A8,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_A8, 0x_D6,
	];

	helper(S, BASE, -2_257);
}
// endregion
// region: s_has_zeros_and_minus_74_575_in_base_3
#[test]
fn s_has_zeros_and_minus_74_575_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_3B, 0x_78, 0x_1D, 0x_3B, 0x_78, 0x_78, 0x_1D,
		0x_1D, 0x_78, 0x_78, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_3B, 0x_1D,
	];

	helper(S, BASE, -74_575);
}
// endregion
// region: s_has_zeros_and_minus_491_940_in_base_3
#[test]
fn s_has_zeros_and_minus_491_940_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_57, 0x_57, 0x_DE, 0x_57, 0x_57, 0x_57, 0x_57, 0x_CC,
		0x_CC, 0x_DE, 0x_DE, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_CC, 0x_57,
	];

	helper(S, BASE, -491_940);
}
// endregion
// region: s_has_zeros_and_minus_7_134_245_in_base_3
#[test]
fn s_has_zeros_and_minus_7_134_245_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_90, 0x_90, 0x_90, 0x_90, 0x_F1, 0x_D8, 0x_90,
		0x_90, 0x_F1, 0x_90, 0x_F1, 0x_F1, 0x_F1, 0x_D8, 0x_D8,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_90, 0x_D8,
	];

	helper(S, BASE, -7_134_245);
}
// endregion
// region: s_has_zeros_and_minus_72_912_356_in_base_3
#[test]
fn s_has_zeros_and_minus_72_912_356_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_D6, 0x_39, 0x_9F, 0x_9F, 0x_39, 0x_9F, 0x_D6, 0x_39, 0x_9F, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_D6, 0x_D6, 0x_39, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_D6, 0x_39,
	];

	helper(S, BASE, -72_912_356);
}
// endregion
// region: s_has_zeros_and_minus_334_180_813_in_base_3
#[test]
fn s_has_zeros_and_minus_334_180_813_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_99, 0x_69, 0x_99, 0x_8C, 0x_99, 0x_69,
		0x_99, 0x_69, 0x_69, 0x_8C, 0x_69, 0x_8C, 0x_99, 0x_99, 0x_8C, 0x_8C, 0x_69, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_69, 0x_99,
	];

	helper(S, BASE, -334_180_813);
}
// endregion
// region: s_has_zeros_and_minus_7_in_base_5
#[test]
fn s_has_zeros_and_minus_7_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_FA, 0x_C7,
	];
	const BASE: &[u8] = &[
		0x_1B, 0x_FA, 0x_C7, 0x_BA, 0x_DA,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_zeros_and_minus_81_in_base_5
#[test]
fn s_has_zeros_and_minus_81_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_6A, 0x_CD, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_CD, 0x_30, 0x_6A, 0x_1F,
	];

	helper(S, BASE, -81);
}
// endregion
// region: s_has_zeros_and_minus_787_in_base_5
#[test]
fn s_has_zeros_and_minus_787_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_D4, 0x_D4, 0x_D4, 0x_41, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_D4, 0x_41, 0x_29, 0x_89,
	];

	helper(S, BASE, -787);
}
// endregion
// region: s_has_zeros_and_minus_6_133_in_base_5
#[test]
fn s_has_zeros_and_minus_6_133_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_C8, 0x_B6, 0x_B6, 0x_DE, 0x_C8, 0x_7A,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_C8, 0x_6C, 0x_7A, 0x_B6,
	];

	helper(S, BASE, -6_133);
}
// endregion
// region: s_has_zeros_and_minus_82_467_in_base_5
#[test]
fn s_has_zeros_and_minus_82_467_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB,
		0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BF, 0x_BB, 0x_BF, 0x_BF, 0x_4E, 0x_A3, 0x_A3, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_BF, 0x_B0, 0x_A3, 0x_4E,
	];

	helper(S, BASE, -82_467);
}
// endregion
// region: s_has_zeros_and_minus_166_322_in_base_5
#[test]
fn s_has_zeros_and_minus_166_322_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31,
		0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_AE, 0x_31, 0x_CB, 0x_D6,
		0x_31, 0x_AE, 0x_DB, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_31, 0x_D6, 0x_AE, 0x_CB, 0x_DB,
	];

	helper(S, BASE, -166_322);
}
// endregion
// region: s_has_zeros_and_minus_1_094_216_in_base_5
#[test]
fn s_has_zeros_and_minus_1_094_216_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D,
		0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_27, 0x_04, 0x_5D, 0x_5D, 0x_5D, 0x_AF, 0x_AF, 0x_AF, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_E0, 0x_27, 0x_AF, 0x_04,
	];

	helper(S, BASE, -1_094_216);
}
// endregion
// region: s_has_zeros_and_minus_13_220_537_in_base_5
#[test]
fn s_has_zeros_and_minus_13_220_537_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_0F, 0x_0F, 0x_3B, 0x_AC, 0x_0F, 0x_9E, 0x_95, 0x_AC, 0x_0F, 0x_95, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_0F, 0x_95, 0x_3B, 0x_AC,
	];

	helper(S, BASE, -13_220_537);
}
// endregion
// region: s_has_zeros_and_minus_502_752_435_in_base_5
#[test]
fn s_has_zeros_and_minus_502_752_435_in_base_5() {
	const S: &[u8] = &[
		0x_2D, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_A1, 0x_23,
		0x_8B, 0x_A1, 0x_A1, 0x_23, 0x_8B, 0x_23, 0x_BC, 0x_9A, 0x_A1, 0x_A1, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_8B, 0x_A1, 0x_BC, 0x_9A,
	];

	helper(S, BASE, -502_752_435);
}
// endregion
// region: s_has_zeros_and_minus_7_in_base_7
#[test]
fn s_has_zeros_and_minus_7_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA,
		0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA,
		0x_BA, 0x_BA, 0x_C2, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_C2, 0x_29, 0x_DC, 0x_1D, 0x_19, 0x_72,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_zeros_and_minus_36_in_base_7
#[test]
fn s_has_zeros_and_minus_36_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2,
		0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_44, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_A2, 0x_D2, 0x_A1, 0x_3D, 0x_47, 0x_44, 0x_B1,
	];

	helper(S, BASE, -36);
}
// endregion
// region: s_has_zeros_and_minus_179_in_base_7
#[test]
fn s_has_zeros_and_minus_179_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2,
		0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2,
		0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_BD, 0x_F6, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_96, 0x_8C, 0x_BD, 0x_F6, 0x_0E, 0x_37,
	];

	helper(S, BASE, -179);
}
// endregion
// region: s_has_zeros_and_minus_1_557_in_base_7
#[test]
fn s_has_zeros_and_minus_1_557_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_E9, 0x_FE, 0x_16, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_1F, 0x_DF, 0x_FE, 0x_E9, 0x_16, 0x_D8,
	];

	helper(S, BASE, -1_557);
}
// endregion
// region: s_has_zeros_and_minus_64_626_in_base_7
#[test]
fn s_has_zeros_and_minus_64_626_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC,
		0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_01, 0x_64, 0x_44, 0x_29, 0x_44, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_9A, 0x_29, 0x_01, 0x_D0, 0x_64, 0x_44,
	];

	helper(S, BASE, -64_626);
}
// endregion
// region: s_has_zeros_and_minus_444_817_in_base_7
#[test]
fn s_has_zeros_and_minus_444_817_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_F8, 0x_90, 0x_F8, 0x_83,
		0x_90, 0x_AF, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_83, 0x_75, 0x_F8, 0x_B6, 0x_90, 0x_AF,
	];

	helper(S, BASE, -444_817);
}
// endregion
// region: s_has_zeros_and_minus_4_165_566_in_base_7
#[test]
fn s_has_zeros_and_minus_4_165_566_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_B9, 0x_82, 0x_EA,
		0x_B9, 0x_F2, 0x_B0, 0x_B0, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_80, 0x_EA, 0x_B0, 0x_88, 0x_B9, 0x_F2,
	];

	helper(S, BASE, -4_165_566);
}
// endregion
// region: s_has_zeros_and_minus_19_225_042_in_base_7
#[test]
fn s_has_zeros_and_minus_19_225_042_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_99, 0x_61, 0x_61, 0x_61, 0x_35, 0x_6E, 0x_C3, 0x_E9, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_96, 0x_61, 0x_99, 0x_C3, 0x_E9, 0x_35,
	];

	helper(S, BASE, -19_225_042);
}
// endregion
// region: s_has_zeros_and_minus_398_464_205_in_base_7
#[test]
fn s_has_zeros_and_minus_398_464_205_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0,
		0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_75, 0x_18, 0x_2E, 0x_C0, 0x_46, 0x_2E, 0x_75, 0x_77, 0x_75,
		0x_9D, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_75, 0x_18, 0x_9D, 0x_77, 0x_46, 0x_2E,
	];

	helper(S, BASE, -398_464_205);
}
// endregion
// region: s_has_zeros_and_minus_6_in_base_11
#[test]
fn s_has_zeros_and_minus_6_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_AA, 0x_64, 0x_BE, 0x_03, 0x_A9, 0x_C2, 0x_C9, 0x_DE, 0x_38, 0x_8F,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_zeros_and_minus_29_in_base_11
#[test]
fn s_has_zeros_and_minus_29_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76,
		0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76,
		0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_B1, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_9F, 0x_B1, 0x_14, 0x_7C, 0x_DE, 0x_5A, 0x_5F, 0x_AF, 0x_CF, 0x_18,
	];

	helper(S, BASE, -29);
}
// endregion
// region: s_has_zeros_and_minus_100_in_base_11
#[test]
fn s_has_zeros_and_minus_100_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B,
		0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B,
		0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_C4, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_7C, 0x_34, 0x_BF, 0x_16, 0x_54, 0x_6A, 0x_E8, 0x_8A, 0x_C4, 0x_66,
	];

	helper(S, BASE, -100);
}
// endregion
// region: s_has_zeros_and_minus_5_300_in_base_11
#[test]
fn s_has_zeros_and_minus_5_300_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_D9, 0x_88, 0x_70, 0x_57,
	];
	const BASE: &[u8] = &[
		0x_CD, 0x_6A, 0x_8A, 0x_D9, 0x_75, 0x_C8, 0x_AB, 0x_97, 0x_70, 0x_57, 0x_88,
	];

	helper(S, BASE, -5_300);
}
// endregion
// region: s_has_zeros_and_minus_45_155_in_base_11
#[test]
fn s_has_zeros_and_minus_45_155_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_3B, 0x_F4, 0x_34, 0x_5D,
		0x_F4,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_9B, 0x_5D, 0x_3B, 0x_22, 0x_14, 0x_1D, 0x_83, 0x_18, 0x_D4, 0x_34,
	];

	helper(S, BASE, -45_155);
}
// endregion
// region: s_has_zeros_and_minus_530_036_in_base_11
#[test]
fn s_has_zeros_and_minus_530_036_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_7B, 0x_7B, 0x_F7, 0x_F7, 0x_8C, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_19, 0x_F7, 0x_7B, 0x_39, 0x_8C, 0x_C2, 0x_2E, 0x_9C, 0x_68, 0x_3C,
	];

	helper(S, BASE, -530_036);
}
// endregion
// region: s_has_zeros_and_minus_8_940_380_in_base_11
#[test]
fn s_has_zeros_and_minus_8_940_380_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB,
		0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB,
		0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_4E, 0x_CB, 0x_4E, 0x_88, 0x_CB, 0x_DC, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_CB, 0x_18, 0x_2A, 0x_49, 0x_DC, 0x_4E, 0x_ED, 0x_88, 0x_57, 0x_50, 0x_A8,
	];

	helper(S, BASE, -8_940_380);
}
// endregion
// region: s_has_zeros_and_minus_13_932_708_in_base_11
#[test]
fn s_has_zeros_and_minus_13_932_708_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C,
		0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_9E, 0x_23, 0x_F7, 0x_C3, 0x_23, 0x_0F, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_6C, 0x_02, 0x_7E, 0x_0F, 0x_71, 0x_F7, 0x_C3, 0x_9E, 0x_EB, 0x_23, 0x_52,
	];

	helper(S, BASE, -13_932_708);
}
// endregion
// region: s_has_zeros_and_minus_294_214_661_in_base_11
#[test]
fn s_has_zeros_and_minus_294_214_661_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_4C, 0x_F2, 0x_4C, 0x_AA, 0x_25, 0x_A9, 0x_25, 0x_4C, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_4C, 0x_A9, 0x_BC, 0x_F2, 0x_A0, 0x_47, 0x_F5, 0x_53, 0x_25, 0x_90,
	];

	helper(S, BASE, -294_214_661);
}
// endregion
// region: s_has_zeros_and_minus_6_in_base_13
#[test]
fn s_has_zeros_and_minus_6_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_50, 0x_E5, 0x_1F, 0x_31, 0x_9D, 0x_43, 0x_C2, 0x_CD, 0x_5F, 0x_E8, 0x_81, 0x_53,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_zeros_and_minus_63_in_base_13
#[test]
fn s_has_zeros_and_minus_63_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_81, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_EA, 0x_26, 0x_A8, 0x_81, 0x_C1, 0x_71, 0x_3E, 0x_74, 0x_EF, 0x_A0, 0x_F1, 0x_72,
	];

	helper(S, BASE, -63);
}
// endregion
// region: s_has_zeros_and_minus_797_in_base_13
#[test]
fn s_has_zeros_and_minus_797_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_6A, 0x_34, 0x_6A,
	];
	const BASE: &[u8] = &[
		0x_A2, 0x_40, 0x_7D, 0x_8C, 0x_6A, 0x_50, 0x_99, 0x_9C, 0x_D7, 0x_34, 0x_F2, 0x_BF, 0x_BB,
	];

	helper(S, BASE, -797);
}
// endregion
// region: s_has_zeros_and_minus_4_068_in_base_13
#[test]
fn s_has_zeros_and_minus_4_068_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_EC, 0x_55, 0x_12, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_EC, 0x_D2, 0x_C0, 0x_80, 0x_EA, 0x_DF, 0x_22, 0x_D8, 0x_6A, 0x_5C, 0x_55, 0x_3C,
	];

	helper(S, BASE, -4_068);
}
// endregion
// region: s_has_zeros_and_minus_41_174_in_base_13
#[test]
fn s_has_zeros_and_minus_41_174_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_A7, 0x_B1, 0x_25, 0x_06, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_A7, 0x_69, 0x_AB, 0x_CD, 0x_B1, 0x_D1, 0x_9B, 0x_06, 0x_25, 0x_F7, 0x_F6, 0x_63,
	];

	helper(S, BASE, -41_174);
}
// endregion
// region: s_has_zeros_and_minus_515_456_in_base_13
#[test]
fn s_has_zeros_and_minus_515_456_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_FE, 0x_FE, 0x_FE, 0x_16, 0x_8A, 0x_FE, 0x_49, 0x_FE, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_FE, 0x_16, 0x_66, 0x_BE, 0x_EE, 0x_8A, 0x_21, 0x_57, 0x_49, 0x_E3, 0x_3C, 0x_6B, 0x_0F,
	];

	helper(S, BASE, -515_456);
}
// endregion
// region: s_has_zeros_and_minus_9_446_428_in_base_13
#[test]
fn s_has_zeros_and_minus_9_446_428_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB,
		0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB,
		0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_4D, 0x_E7, 0x_EC, 0x_42,
		0x_42, 0x_FB, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_4D, 0x_DF, 0x_94, 0x_33, 0x_EC, 0x_D4, 0x_19, 0x_65, 0x_42, 0x_73, 0x_0E, 0x_E7,
	];

	helper(S, BASE, -9_446_428);
}
// endregion
// region: s_has_zeros_and_minus_35_027_947_in_base_13
#[test]
fn s_has_zeros_and_minus_35_027_947_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_FA, 0x_01, 0x_58, 0x_92,
		0x_9A, 0x_55, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_21, 0x_C4, 0x_01, 0x_58, 0x_92, 0x_9A, 0x_FA, 0x_FC, 0x_4C, 0x_13, 0x_91, 0x_55,
	];

	helper(S, BASE, -35_027_947);
}
// endregion
// region: s_has_zeros_and_minus_380_934_829_in_base_13
#[test]
fn s_has_zeros_and_minus_380_934_829_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_E3, 0x_A9, 0x_A4, 0x_10, 0x_6F, 0x_80, 0x_01,
		0x_C4,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_1A, 0x_C4, 0x_01, 0x_3F, 0x_87, 0x_E3, 0x_6F, 0x_80, 0x_E2, 0x_CD, 0x_A4, 0x_10,
	];

	helper(S, BASE, -380_934_829);
}
// endregion
// region: s_has_zeros_and_minus_2_in_base_19
#[test]
fn s_has_zeros_and_minus_2_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_3F, 0x_C8, 0x_D0, 0x_6D, 0x_5D, 0x_21, 0x_30, 0x_34, 0x_E0, 0x_67, 0x_7E, 0x_B5, 0x_63, 0x_56,
		0x_FB, 0x_40, 0x_1B, 0x_78,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_zeros_and_minus_71_in_base_19
#[test]
fn s_has_zeros_and_minus_71_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_05, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_3E, 0x_01, 0x_05, 0x_B2, 0x_F5, 0x_35, 0x_F2, 0x_FB, 0x_8B, 0x_12, 0x_B1, 0x_ED, 0x_FC, 0x_5E,
		0x_AA, 0x_10, 0x_7B, 0x_4E,
	];

	helper(S, BASE, -71);
}
// endregion
// region: s_has_zeros_and_minus_615_in_base_19
#[test]
fn s_has_zeros_and_minus_615_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E,
		0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E,
		0x_6E, 0x_6E, 0x_9F, 0x_1B, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_9F, 0x_6A, 0x_CB, 0x_E5, 0x_06, 0x_5C, 0x_01, 0x_5D, 0x_43, 0x_6F, 0x_39, 0x_64, 0x_1B, 0x_AC,
		0x_6D, 0x_9B, 0x_78, 0x_BC,
	];

	helper(S, BASE, -615);
}
// endregion
// region: s_has_zeros_and_minus_1_650_in_base_19
#[test]
fn s_has_zeros_and_minus_1_650_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_DC, 0x_BE, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_B1, 0x_01, 0x_42, 0x_DC, 0x_10, 0x_5E, 0x_D8, 0x_94, 0x_1F, 0x_BE, 0x_DA, 0x_28, 0x_F6, 0x_FB,
		0x_50, 0x_93, 0x_C3, 0x_34,
	];

	helper(S, BASE, -1_650);
}
// endregion
// region: s_has_zeros_and_minus_50_460_in_base_19
#[test]
fn s_has_zeros_and_minus_50_460_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76,
		0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_DE, 0x_95,
		0x_C0, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_69, 0x_D3, 0x_B2, 0x_E4, 0x_29, 0x_95, 0x_DE, 0x_D7, 0x_53, 0x_4C, 0x_93, 0x_6A, 0x_5C, 0x_C0,
		0x_1D, 0x_12, 0x_43, 0x_3F,
	];

	helper(S, BASE, -50_460);
}
// endregion
// region: s_has_zeros_and_minus_784_737_in_base_19
#[test]
fn s_has_zeros_and_minus_784_737_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9,
		0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9,
		0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_41, 0x_D9, 0x_44, 0x_7F, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_ED, 0x_B2, 0x_4A, 0x_32, 0x_71, 0x_41, 0x_44, 0x_CA, 0x_B8, 0x_50, 0x_F9, 0x_DF, 0x_42, 0x_7F,
		0x_C1, 0x_C9, 0x_F5, 0x_4B,
	];

	helper(S, BASE, -784_737);
}
// endregion
// region: s_has_zeros_and_minus_1_721_039_in_base_19
#[test]
fn s_has_zeros_and_minus_1_721_039_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_0E, 0x_74, 0x_81, 0x_DE, 0x_CA,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_E2, 0x_75, 0x_74, 0x_9A, 0x_8F, 0x_C4, 0x_23, 0x_DE, 0x_71, 0x_65, 0x_F6, 0x_87, 0x_0E, 0x_1A,
		0x_2F, 0x_48, 0x_81, 0x_B0,
	];

	helper(S, BASE, -1_721_039);
}
// endregion
// region: s_has_zeros_and_minus_45_358_317_in_base_19
#[test]
fn s_has_zeros_and_minus_45_358_317_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7,
		0x_D7, 0x_D7, 0x_C5, 0x_5E, 0x_D7, 0x_C5, 0x_EF, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_52, 0x_FD, 0x_3E, 0x_79, 0x_EF, 0x_5E, 0x_CC, 0x_14, 0x_D5, 0x_7A, 0x_2C, 0x_AB, 0x_24, 0x_78,
		0x_6C, 0x_65, 0x_B8, 0x_C5,
	];

	helper(S, BASE, -45_358_317);
}
// endregion
// region: s_has_zeros_and_minus_223_307_874_in_base_19
#[test]
fn s_has_zeros_and_minus_223_307_874_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_23, 0x_DA, 0x_BE, 0x_4D, 0x_FD, 0x_0E, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_C7, 0x_72, 0x_BE, 0x_23, 0x_E6, 0x_9D, 0x_0E, 0x_B1, 0x_4D, 0x_1A, 0x_21, 0x_90, 0x_1B, 0x_DA,
		0x_30, 0x_17, 0x_FD, 0x_C0,
	];

	helper(S, BASE, -223_307_874);
}
// endregion
// region: s_has_zeros_and_minus_5_in_base_42
#[test]
fn s_has_zeros_and_minus_5_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14,
		0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_10, 0x_FB, 0x_53, 0x_BA, 0x_E2, 0x_97, 0x_CC, 0x_81, 0x_A1, 0x_3A, 0x_08, 0x_9E, 0x_22, 0x_6D,
		0x_8E, 0x_A6, 0x_CD, 0x_D3, 0x_71, 0x_84, 0x_04, 0x_8A, 0x_93, 0x_A8, 0x_DE, 0x_5B, 0x_88, 0x_78, 0x_2E,
		0x_CF, 0x_B0, 0x_01, 0x_B2, 0x_3C, 0x_EB, 0x_86, 0x_4A, 0x_AE, 0x_12, 0x_CA, 0x_82,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_zeros_and_minus_84_in_base_42
#[test]
fn s_has_zeros_and_minus_84_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_1D, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_B1, 0x_1D, 0x_4D, 0x_69, 0x_B7, 0x_24, 0x_8A, 0x_1B, 0x_2C, 0x_12, 0x_44, 0x_57, 0x_9B, 0x_73,
		0x_D6, 0x_14, 0x_8C, 0x_F9, 0x_BF, 0x_F7, 0x_E5, 0x_E3, 0x_95, 0x_28, 0x_4F, 0x_02, 0x_F5, 0x_E7, 0x_53,
		0x_4B, 0x_B6, 0x_48, 0x_EE, 0x_DD, 0x_17, 0x_CF, 0x_FE, 0x_62, 0x_3F, 0x_06, 0x_FA,
	];

	helper(S, BASE, -84);
}
// endregion
// region: s_has_zeros_and_minus_195_in_base_42
#[test]
fn s_has_zeros_and_minus_195_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8,
		0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_FF, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_32, 0x_88, 0x_CB, 0x_FF, 0x_48, 0x_14, 0x_DF, 0x_55, 0x_AE, 0x_2C, 0x_4B, 0x_4A, 0x_F4, 0x_CA,
		0x_BF, 0x_7B, 0x_44, 0x_75, 0x_D7, 0x_34, 0x_9B, 0x_90, 0x_E8, 0x_24, 0x_23, 0x_ED, 0x_86, 0x_FB, 0x_30,
		0x_13, 0x_1F, 0x_40, 0x_94, 0x_D9, 0x_64, 0x_22, 0x_A8, 0x_02, 0x_8D, 0x_A2, 0x_C9,
	];

	helper(S, BASE, -195);
}
// endregion
// region: s_has_zeros_and_minus_1_012_in_base_42
#[test]
fn s_has_zeros_and_minus_1_012_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1C, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_F1, 0x_78, 0x_4C, 0x_46, 0x_9B, 0x_E8, 0x_BC, 0x_8E, 0x_CE, 0x_AD, 0x_DD, 0x_89, 0x_D3, 0x_14,
		0x_87, 0x_C5, 0x_FA, 0x_36, 0x_5F, 0x_4E, 0x_5B, 0x_72, 0x_D6, 0x_1C, 0x_8D, 0x_D7, 0x_C8, 0x_11, 0x_27,
		0x_2F, 0x_C6, 0x_EE, 0x_E2, 0x_96, 0x_A1, 0x_7E, 0x_F9, 0x_75, 0x_80, 0x_AF, 0x_88,
	];

	helper(S, BASE, -1_012);
}
// endregion
// region: s_has_zeros_and_minus_34_332_in_base_42
#[test]
fn s_has_zeros_and_minus_34_332_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E,
		0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_47, 0x_47, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_15, 0x_DC, 0x_04, 0x_AF, 0x_10, 0x_7E, 0x_8A, 0x_7B, 0x_1A, 0x_7F, 0x_22, 0x_85, 0x_73, 0x_A8,
		0x_78, 0x_94, 0x_23, 0x_F7, 0x_47, 0x_2C, 0x_5E, 0x_6A, 0x_56, 0x_0E, 0x_71, 0x_E4, 0x_F1, 0x_5F, 0x_B8,
		0x_93, 0x_D1, 0x_37, 0x_A0, 0x_8B, 0x_EA, 0x_34, 0x_07, 0x_14, 0x_3F, 0x_6C, 0x_76,
	];

	helper(S, BASE, -34_332);
}
// endregion
// region: s_has_zeros_and_minus_854_819_in_base_42
#[test]
fn s_has_zeros_and_minus_854_819_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9,
		0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9,
		0x_13, 0x_92, 0x_F3, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_36, 0x_8E, 0x_44, 0x_D6, 0x_B0, 0x_B1, 0x_73, 0x_76, 0x_22, 0x_E2, 0x_13, 0x_33, 0x_61, 0x_BA,
		0x_FD, 0x_94, 0x_BD, 0x_D8, 0x_82, 0x_BF, 0x_C0, 0x_92, 0x_C2, 0x_F3, 0x_D1, 0x_81, 0x_98, 0x_7A, 0x_74,
		0x_66, 0x_2F, 0x_5B, 0x_AD, 0x_56, 0x_59, 0x_5C, 0x_52, 0x_F7, 0x_28, 0x_24, 0x_A9,
	];

	helper(S, BASE, -854_819);
}
// endregion
// region: s_has_zeros_and_minus_7_579_755_in_base_42
#[test]
fn s_has_zeros_and_minus_7_579_755_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_7C, 0x_FF, 0x_E8, 0x_52, 0x_63,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_6E, 0x_7C, 0x_4D, 0x_D6, 0x_C2, 0x_A1, 0x_5A, 0x_AB, 0x_92, 0x_BB, 0x_A3, 0x_E8, 0x_85, 0x_08,
		0x_63, 0x_DA, 0x_56, 0x_FF, 0x_98, 0x_7B, 0x_9A, 0x_04, 0x_47, 0x_05, 0x_19, 0x_02, 0x_B9, 0x_2E, 0x_4A,
		0x_4E, 0x_F3, 0x_16, 0x_62, 0x_36, 0x_2F, 0x_A5, 0x_3E, 0x_52, 0x_DB, 0x_7A, 0x_8F,
	];

	helper(S, BASE, -7_579_755);
}
// endregion
// region: s_has_zeros_and_minus_13_642_138_in_base_42
#[test]
fn s_has_zeros_and_minus_13_642_138_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_79, 0x_65, 0x_C4, 0x_60, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_BF, 0x_9B, 0x_1B, 0x_79, 0x_C4, 0x_87, 0x_29, 0x_B1, 0x_E1, 0x_CB, 0x_FF, 0x_28, 0x_46, 0x_97,
		0x_4F, 0x_65, 0x_63, 0x_98, 0x_2A, 0x_24, 0x_CE, 0x_CA, 0x_61, 0x_6D, 0x_0F, 0x_60, 0x_B3, 0x_30, 0x_C5,
		0x_D3, 0x_AB, 0x_BD, 0x_ED, 0x_3F, 0x_73, 0x_FA, 0x_AA, 0x_10, 0x_A1, 0x_44, 0x_A4,
	];

	helper(S, BASE, -13_642_138);
}
// endregion
// region: s_has_zeros_and_minus_882_323_991_in_base_42
#[test]
fn s_has_zeros_and_minus_882_323_991_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_8E, 0x_62, 0x_B3, 0x_51, 0x_A5, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_D4, 0x_CE, 0x_1D, 0x_F8, 0x_51, 0x_8E, 0x_9E, 0x_8F, 0x_97, 0x_DA, 0x_5F, 0x_A9, 0x_2E, 0x_57,
		0x_47, 0x_87, 0x_12, 0x_65, 0x_6C, 0x_0E, 0x_D9, 0x_C9, 0x_B3, 0x_59, 0x_22, 0x_50, 0x_92, 0x_A5, 0x_DC,
		0x_21, 0x_62, 0x_BA, 0x_CB, 0x_E2, 0x_91, 0x_B6, 0x_A3, 0x_63, 0x_B4, 0x_38, 0x_BB,
	];

	helper(S, BASE, -882_323_991);
}
// endregion
// region: s_has_zeros_and_minus_9_in_base_73
#[test]
fn s_has_zeros_and_minus_9_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_30,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_FB, 0x_04, 0x_B1, 0x_17, 0x_62, 0x_FF, 0x_2E, 0x_C5, 0x_30, 0x_44, 0x_B5, 0x_39, 0x_F0, 0x_FD,
		0x_51, 0x_22, 0x_33, 0x_8C, 0x_BE, 0x_18, 0x_A7, 0x_C9, 0x_10, 0x_B3, 0x_6B, 0x_56, 0x_DF, 0x_48, 0x_5B,
		0x_3A, 0x_15, 0x_C0, 0x_A3, 0x_74, 0x_40, 0x_D5, 0x_BA, 0x_E2, 0x_C6, 0x_E3, 0x_31, 0x_D3, 0x_E1, 0x_68,
		0x_AC, 0x_28, 0x_3D, 0x_54, 0x_CA, 0x_43, 0x_02, 0x_8E, 0x_A1, 0x_B0, 0x_6A, 0x_BF, 0x_53, 0x_13, 0x_5E,
		0x_91, 0x_9A, 0x_58, 0x_D4, 0x_1C, 0x_6F, 0x_1B, 0x_D8, 0x_DD, 0x_23, 0x_4C, 0x_A2, 0x_CD,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_zeros_and_minus_92_in_base_73
#[test]
fn s_has_zeros_and_minus_92_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E,
		0x_6E, 0x_6E, 0x_9F, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_9F, 0x_57, 0x_50, 0x_55, 0x_4C, 0x_B4, 0x_C5, 0x_EC, 0x_9C, 0x_73, 0x_5A, 0x_F3, 0x_E0, 0x_7A,
		0x_EB, 0x_2F, 0x_61, 0x_8A, 0x_8C, 0x_E6, 0x_7E, 0x_97, 0x_93, 0x_36, 0x_05, 0x_3A, 0x_3B, 0x_27, 0x_0F,
		0x_F6, 0x_2C, 0x_42, 0x_16, 0x_F1, 0x_86, 0x_85, 0x_12, 0x_3E, 0x_66, 0x_C3, 0x_A6, 0x_D2, 0x_81, 0x_40,
		0x_F4, 0x_28, 0x_17, 0x_37, 0x_CF, 0x_6B, 0x_88, 0x_69, 0x_FA, 0x_58, 0x_F0, 0x_91, 0x_EA, 0x_74, 0x_B8,
		0x_29, 0x_6F, 0x_F5, 0x_3F, 0x_13, 0x_6C, 0x_BE, 0x_1A, 0x_1B, 0x_E5, 0x_9B, 0x_3C, 0x_65,
	];

	helper(S, BASE, -92);
}
// endregion
// region: s_has_zeros_and_minus_209_in_base_73
#[test]
fn s_has_zeros_and_minus_209_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_95, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_D4, 0x_95, 0x_87, 0x_D8, 0x_1E, 0x_F6, 0x_5B, 0x_A1, 0x_B4, 0x_88, 0x_C7, 0x_17, 0x_39, 0x_70,
		0x_41, 0x_52, 0x_90, 0x_53, 0x_58, 0x_27, 0x_ED, 0x_35, 0x_8A, 0x_86, 0x_D3, 0x_81, 0x_97, 0x_E6, 0x_FF,
		0x_C1, 0x_CC, 0x_F7, 0x_67, 0x_A0, 0x_19, 0x_E7, 0x_A5, 0x_F9, 0x_EE, 0x_08, 0x_91, 0x_7B, 0x_31, 0x_06,
		0x_28, 0x_A4, 0x_57, 0x_0F, 0x_68, 0x_07, 0x_BB, 0x_9F, 0x_4D, 0x_89, 0x_DD, 0x_3C, 0x_E5, 0x_36, 0x_B9,
		0x_42, 0x_5D, 0x_48, 0x_F0, 0x_FD, 0x_DE, 0x_37, 0x_9B, 0x_E0, 0x_FB, 0x_A9, 0x_55, 0x_14,
	];

	helper(S, BASE, -209);
}
// endregion
// region: s_has_zeros_and_minus_7_824_in_base_73
#[test]
fn s_has_zeros_and_minus_7_824_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE,
		0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_51, 0x_93, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_BE, 0x_51, 0x_5F, 0x_5B, 0x_E2, 0x_EE, 0x_E9, 0x_2A, 0x_61, 0x_AB, 0x_7E, 0x_B7, 0x_6A, 0x_36, 0x_02,
		0x_54, 0x_67, 0x_71, 0x_2C, 0x_74, 0x_13, 0x_4B, 0x_89, 0x_DC, 0x_F0, 0x_BD, 0x_EA, 0x_6B, 0x_F1, 0x_C1,
		0x_D1, 0x_0E, 0x_9F, 0x_55, 0x_93, 0x_34, 0x_45, 0x_A5, 0x_22, 0x_5E, 0x_ED, 0x_B3, 0x_D5, 0x_C8, 0x_5D,
		0x_FE, 0x_D8, 0x_4C, 0x_44, 0x_18, 0x_CE, 0x_97, 0x_32, 0x_3C, 0x_53, 0x_94, 0x_78, 0x_1D, 0x_43, 0x_E7,
		0x_7F, 0x_30, 0x_41, 0x_9A, 0x_FD, 0x_23, 0x_4D, 0x_79, 0x_19, 0x_F6, 0x_8A, 0x_E1, 0x_21,
	];

	helper(S, BASE, -7_824);
}
// endregion
// region: s_has_zeros_and_minus_45_785_in_base_73
#[test]
fn s_has_zeros_and_minus_45_785_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92,
		0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92,
		0x_92, 0x_92, 0x_92, 0x_82, 0x_B3, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_9B, 0x_0F, 0x_E5, 0x_E3, 0x_67, 0x_E2, 0x_3A, 0x_82, 0x_B5, 0x_DD, 0x_25, 0x_77, 0x_F6, 0x_1E,
		0x_CC, 0x_6C, 0x_C2, 0x_26, 0x_E7, 0x_64, 0x_8A, 0x_CF, 0x_7B, 0x_41, 0x_44, 0x_95, 0x_62, 0x_10, 0x_AF,
		0x_13, 0x_84, 0x_2E, 0x_85, 0x_99, 0x_DC, 0x_23, 0x_36, 0x_B9, 0x_1B, 0x_4D, 0x_ED, 0x_E8, 0x_B3, 0x_E4,
		0x_E9, 0x_D0, 0x_BE, 0x_48, 0x_DF, 0x_EA, 0x_54, 0x_C3, 0x_43, 0x_5A, 0x_BA, 0x_81, 0x_E1, 0x_4C, 0x_6F,
		0x_CE, 0x_2A, 0x_39, 0x_D4, 0x_EF, 0x_A3, 0x_A1, 0x_DA, 0x_B4, 0x_2F, 0x_A6, 0x_07, 0x_60,
	];

	helper(S, BASE, -45_785);
}
// endregion
// region: s_has_zeros_and_minus_667_327_in_base_73
#[test]
fn s_has_zeros_and_minus_667_327_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0,
		0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0,
		0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_13, 0x_D8, 0x_A2, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_13, 0x_B8, 0x_14, 0x_94, 0x_56, 0x_06, 0x_4A, 0x_4E, 0x_17, 0x_21, 0x_76, 0x_8E, 0x_B9, 0x_44,
		0x_67, 0x_A2, 0x_D0, 0x_5F, 0x_B1, 0x_1C, 0x_FE, 0x_E4, 0x_DA, 0x_CD, 0x_F6, 0x_FD, 0x_CE, 0x_9F, 0x_D3,
		0x_8D, 0x_F0, 0x_61, 0x_A7, 0x_EF, 0x_DF, 0x_5E, 0x_59, 0x_C8, 0x_D2, 0x_95, 0x_BC, 0x_35, 0x_80, 0x_11,
		0x_A6, 0x_7A, 0x_83, 0x_DC, 0x_9C, 0x_AF, 0x_C1, 0x_D8, 0x_22, 0x_6F, 0x_2F, 0x_DB, 0x_6E, 0x_2A, 0x_BA,
		0x_0F, 0x_9E, 0x_B6, 0x_37, 0x_8B, 0x_5A, 0x_02, 0x_7C, 0x_58, 0x_ED, 0x_F3, 0x_48, 0x_CA,
	];

	helper(S, BASE, -667_327);
}
// endregion
// region: s_has_zeros_and_minus_2_145_418_in_base_73
#[test]
fn s_has_zeros_and_minus_2_145_418_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_97, 0x_1D, 0x_66, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_94, 0x_0F, 0x_DA, 0x_56, 0x_97, 0x_49, 0x_5A, 0x_55, 0x_7E, 0x_C8, 0x_18, 0x_A3, 0x_71, 0x_C0,
		0x_98, 0x_AE, 0x_EB, 0x_58, 0x_E5, 0x_DE, 0x_96, 0x_FB, 0x_B0, 0x_C3, 0x_C2, 0x_5F, 0x_2C, 0x_FE, 0x_CD,
		0x_2A, 0x_89, 0x_C5, 0x_C7, 0x_39, 0x_D1, 0x_C1, 0x_1D, 0x_DD, 0x_67, 0x_46, 0x_8F, 0x_4A, 0x_66, 0x_37,
		0x_C6, 0x_1A, 0x_40, 0x_4C, 0x_D7, 0x_93, 0x_13, 0x_76, 0x_8E, 0x_7D, 0x_A9, 0x_F5, 0x_14, 0x_FA, 0x_A2,
		0x_DB, 0x_04, 0x_51, 0x_AA, 0x_B3, 0x_73, 0x_AC, 0x_99, 0x_91, 0x_8A, 0x_E8, 0x_12, 0x_D4,
	];

	helper(S, BASE, -2_145_418);
}
// endregion
// region: s_has_zeros_and_minus_75_710_614_in_base_73
#[test]
fn s_has_zeros_and_minus_75_710_614_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_99, 0x_99, 0x_F8, 0x_69, 0x_9E, 0x_BD, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_FF, 0x_F8, 0x_D9, 0x_62, 0x_4B, 0x_02, 0x_24, 0x_D0, 0x_9B, 0x_CB, 0x_7C, 0x_C7, 0x_0F, 0x_4D,
		0x_F1, 0x_AD, 0x_D3, 0x_6A, 0x_A6, 0x_BD, 0x_5A, 0x_35, 0x_29, 0x_77, 0x_BC, 0x_A9, 0x_19, 0x_1E, 0x_B6,
		0x_94, 0x_C1, 0x_1D, 0x_E4, 0x_B4, 0x_28, 0x_27, 0x_3E, 0x_55, 0x_91, 0x_BE, 0x_6B, 0x_B8, 0x_9F, 0x_4E,
		0x_9E, 0x_2F, 0x_B5, 0x_69, 0x_DD, 0x_E3, 0x_66, 0x_F2, 0x_CD, 0x_50, 0x_63, 0x_EA, 0x_BB, 0x_FC, 0x_A4,
		0x_79, 0x_EF, 0x_7A, 0x_6E, 0x_80, 0x_E0, 0x_87, 0x_A2, 0x_B7, 0x_F9, 0x_25, 0x_9D, 0x_3D,
	];

	helper(S, BASE, -75_710_614);
}
// endregion
// region: s_has_zeros_and_minus_693_558_000_in_base_73
#[test]
fn s_has_zeros_and_minus_693_558_000_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_E2, 0x_CA, 0x_C9, 0x_AC, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_24, 0x_05, 0x_A4, 0x_90, 0x_19, 0x_25, 0x_E1, 0x_18, 0x_29, 0x_72, 0x_BB, 0x_D0, 0x_37, 0x_6A,
		0x_2F, 0x_88, 0x_4F, 0x_6C, 0x_ED, 0x_A6, 0x_93, 0x_38, 0x_1B, 0x_E2, 0x_F6, 0x_39, 0x_CF, 0x_FA, 0x_01,
		0x_CA, 0x_F3, 0x_6D, 0x_22, 0x_E8, 0x_AB, 0x_8E, 0x_58, 0x_5C, 0x_A8, 0x_85, 0x_2A, 0x_35, 0x_70, 0x_47,
		0x_B3, 0x_8A, 0x_84, 0x_FB, 0x_02, 0x_86, 0x_C7, 0x_51, 0x_77, 0x_5F, 0x_D4, 0x_36, 0x_E5, 0x_A5, 0x_34,
		0x_73, 0x_C9, 0x_B2, 0x_AC, 0x_5E, 0x_33, 0x_8F, 0x_C6, 0x_50, 0x_F0, 0x_2C, 0x_6F, 0x_81,
	];

	helper(S, BASE, -693_558_000);
}
// endregion
// region: s_has_zeros_and_minus_4_in_base_113
#[test]
fn s_has_zeros_and_minus_4_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2,
		0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2,
		0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_89, 0x_30, 0x_6C, 0x_FE, 0x_80, 0x_83, 0x_7B, 0x_49, 0x_0E, 0x_05, 0x_29, 0x_57, 0x_6F, 0x_AF,
		0x_51, 0x_A1, 0x_1C, 0x_A0, 0x_2C, 0x_86, 0x_5F, 0x_9C, 0x_3A, 0x_4E, 0x_43, 0x_5B, 0x_F6, 0x_9F, 0x_94,
		0x_F8, 0x_DD, 0x_E5, 0x_A9, 0x_19, 0x_39, 0x_ED, 0x_2F, 0x_9E, 0x_3E, 0x_3D, 0x_BD, 0x_E0, 0x_92, 0x_AE,
		0x_C1, 0x_C3, 0x_23, 0x_2E, 0x_DB, 0x_16, 0x_45, 0x_E8, 0x_AA, 0x_75, 0x_B5, 0x_C8, 0x_40, 0x_EA, 0x_15,
		0x_1E, 0x_31, 0x_CF, 0x_01, 0x_F4, 0x_07, 0x_1A, 0x_54, 0x_DC, 0x_CA, 0x_12, 0x_7D, 0x_98, 0x_6B, 0x_5C,
		0x_0F, 0x_96, 0x_91, 0x_70, 0x_55, 0x_A8, 0x_C9, 0x_FB, 0x_DE, 0x_C7, 0x_B7, 0x_D7, 0x_99, 0x_24, 0x_1F,
		0x_11, 0x_35, 0x_8C, 0x_CC, 0x_7C, 0x_56, 0x_6E, 0x_44, 0x_90, 0x_4A, 0x_2A, 0x_9A, 0x_1B, 0x_41, 0x_F1,
		0x_B6, 0x_6A, 0x_4C, 0x_79, 0x_3C, 0x_B3, 0x_32, 0x_C2,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_zeros_and_minus_15_in_base_113
#[test]
fn s_has_zeros_and_minus_15_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC,
		0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_EC, 0x_2E, 0x_55, 0x_02, 0x_2C, 0x_9D, 0x_9C, 0x_71, 0x_B1, 0x_C0, 0x_4E, 0x_34, 0x_6F, 0x_C3,
		0x_FB, 0x_88, 0x_C4, 0x_D3, 0x_94, 0x_BB, 0x_85, 0x_DC, 0x_15, 0x_E0, 0x_E1, 0x_70, 0x_DF, 0x_84, 0x_35,
		0x_61, 0x_C6, 0x_81, 0x_DA, 0x_A1, 0x_CD, 0x_0F, 0x_44, 0x_F0, 0x_60, 0x_91, 0x_63, 0x_48, 0x_5A, 0x_82,
		0x_31, 0x_83, 0x_E5, 0x_7B, 0x_37, 0x_27, 0x_A8, 0x_E4, 0x_7A, 0x_24, 0x_29, 0x_B5, 0x_CE, 0x_BA, 0x_87,
		0x_74, 0x_19, 0x_5F, 0x_23, 0x_EB, 0x_D2, 0x_DD, 0x_D1, 0x_EE, 0x_AF, 0x_1B, 0x_22, 0x_25, 0x_79, 0x_7D,
		0x_9A, 0x_EA, 0x_67, 0x_4F, 0x_CA, 0x_1A, 0x_AC, 0x_08, 0x_FC, 0x_4B, 0x_E3, 0x_F1, 0x_F7, 0x_56, 0x_E7,
		0x_2A, 0x_4C, 0x_33, 0x_F5, 0x_B6, 0x_47, 0x_97, 0x_F8, 0x_C2, 0x_D8, 0x_6D, 0x_B9, 0x_A5, 0x_B0, 0x_EF,
		0x_A9, 0x_D6, 0x_4A, 0x_2F, 0x_DE, 0x_43, 0x_58, 0x_C9,
	];

	helper(S, BASE, -15);
}
// endregion
// region: s_has_zeros_and_minus_706_in_base_113
#[test]
fn s_has_zeros_and_minus_706_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0,
		0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0,
		0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_04, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_AA, 0x_07, 0x_1E, 0x_B6, 0x_D5, 0x_04, 0x_BD, 0x_7A, 0x_FE, 0x_CA, 0x_AE, 0x_55, 0x_E3, 0x_ED,
		0x_89, 0x_19, 0x_0E, 0x_42, 0x_8E, 0x_70, 0x_13, 0x_43, 0x_A2, 0x_79, 0x_F6, 0x_D0, 0x_7C, 0x_9A, 0x_73,
		0x_30, 0x_18, 0x_54, 0x_DD, 0x_C2, 0x_78, 0x_40, 0x_6C, 0x_87, 0x_E8, 0x_A7, 0x_E9, 0x_F7, 0x_83, 0x_F1,
		0x_E2, 0x_DF, 0x_48, 0x_7E, 0x_1A, 0x_FD, 0x_CC, 0x_06, 0x_7F, 0x_57, 0x_9C, 0x_A1, 0x_FB, 0x_74, 0x_41,
		0x_F5, 0x_5A, 0x_EA, 0x_EE, 0x_5B, 0x_6B, 0x_69, 0x_76, 0x_10, 0x_9E, 0x_45, 0x_11, 0x_98, 0x_21, 0x_65,
		0x_52, 0x_1B, 0x_C1, 0x_15, 0x_93, 0x_4F, 0x_E4, 0x_26, 0x_2A, 0x_66, 0x_D4, 0x_3E, 0x_61, 0x_29, 0x_BA,
		0x_B5, 0x_47, 0x_94, 0x_4E, 0x_C9, 0x_5D, 0x_8B, 0x_59, 0x_9F, 0x_05, 0x_BB, 0x_8A, 0x_03, 0x_A0, 0x_1C,
		0x_BC, 0x_92, 0x_FF, 0x_4B, 0x_31, 0x_64, 0x_D9, 0x_9D,
	];

	helper(S, BASE, -706);
}
// endregion
// region: s_has_zeros_and_minus_2_129_in_base_113
#[test]
fn s_has_zeros_and_minus_2_129_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93,
		0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93,
		0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_82, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_81, 0x_6B, 0x_22, 0x_5A, 0x_A9, 0x_6D, 0x_DA, 0x_B7, 0x_84, 0x_B8, 0x_95, 0x_4A, 0x_C2, 0x_07,
		0x_C0, 0x_46, 0x_15, 0x_82, 0x_6F, 0x_61, 0x_99, 0x_FF, 0x_EF, 0x_AE, 0x_87, 0x_72, 0x_76, 0x_1E, 0x_1D,
		0x_CD, 0x_F6, 0x_AC, 0x_37, 0x_BE, 0x_E3, 0x_BF, 0x_C8, 0x_E2, 0x_7B, 0x_94, 0x_3F, 0x_B9, 0x_06, 0x_12,
		0x_29, 0x_B3, 0x_F9, 0x_54, 0x_4E, 0x_67, 0x_A5, 0x_34, 0x_BB, 0x_CC, 0x_F5, 0x_B6, 0x_36, 0x_55, 0x_24,
		0x_42, 0x_7D, 0x_83, 0x_BD, 0x_DC, 0x_32, 0x_F1, 0x_40, 0x_9D, 0x_9E, 0x_AB, 0x_63, 0x_65, 0x_25, 0x_80,
		0x_35, 0x_AA, 0x_59, 0x_E5, 0x_FA, 0x_A1, 0x_52, 0x_13, 0x_C4, 0x_04, 0x_02, 0x_6A, 0x_5C, 0x_86, 0x_0F,
		0x_CA, 0x_68, 0x_D1, 0x_1F, 0x_2F, 0x_5D, 0x_27, 0x_70, 0x_E9, 0x_23, 0x_5B, 0x_E1, 0x_77, 0x_E7, 0x_2A,
		0x_3C, 0x_F4, 0x_16, 0x_69, 0x_62, 0x_3E, 0x_2C, 0x_B5,
	];

	helper(S, BASE, -2_129);
}
// endregion
// region: s_has_zeros_and_minus_97_020_in_base_113
#[test]
fn s_has_zeros_and_minus_97_020_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52,
		0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_7F, 0x_58, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_B5, 0x_F7, 0x_A8, 0x_C0, 0x_60, 0x_38, 0x_7F, 0x_72, 0x_E2, 0x_26, 0x_14, 0x_19, 0x_75, 0x_D5,
		0x_C7, 0x_37, 0x_68, 0x_FD, 0x_4E, 0x_B8, 0x_10, 0x_46, 0x_01, 0x_87, 0x_EA, 0x_25, 0x_77, 0x_D3, 0x_CC,
		0x_D0, 0x_DF, 0x_91, 0x_C4, 0x_B4, 0x_D1, 0x_EF, 0x_93, 0x_B2, 0x_2E, 0x_F4, 0x_B9, 0x_1C, 0x_6D, 0x_E0,
		0x_53, 0x_E1, 0x_AF, 0x_3C, 0x_13, 0x_0F, 0x_B0, 0x_5F, 0x_03, 0x_90, 0x_AD, 0x_B7, 0x_97, 0x_50, 0x_28,
		0x_5E, 0x_A7, 0x_02, 0x_65, 0x_DC, 0x_54, 0x_BA, 0x_58, 0x_E7, 0x_BF, 0x_04, 0x_DD, 0x_41, 0x_82, 0x_89,
		0x_3E, 0x_69, 0x_BD, 0x_F0, 0x_64, 0x_FE, 0x_1E, 0x_96, 0x_E4, 0x_35, 0x_39, 0x_CB, 0x_A6, 0x_7C, 0x_61,
		0x_9E, 0x_62, 0x_15, 0x_47, 0x_34, 0x_3F, 0x_C8, 0x_31, 0x_21, 0x_F2, 0x_C1, 0x_AC, 0x_43, 0x_4A, 0x_29,
		0x_16, 0x_C6, 0x_BE, 0x_9B, 0x_EB, 0x_B1, 0x_86, 0x_5D,
	];

	helper(S, BASE, -97_020);
}
// endregion
// region: s_has_zeros_and_minus_966_930_in_base_113
#[test]
fn s_has_zeros_and_minus_966_930_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_96, 0x_BB, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_C4, 0x_54, 0x_A0, 0x_E0, 0x_08, 0x_FF, 0x_85, 0x_BD, 0x_7F, 0x_93, 0x_D9, 0x_74, 0x_7E, 0x_43,
		0x_D0, 0x_52, 0x_E9, 0x_CE, 0x_04, 0x_44, 0x_27, 0x_40, 0x_29, 0x_C9, 0x_56, 0x_9B, 0x_F6, 0x_F9, 0x_98,
		0x_45, 0x_B5, 0x_9A, 0x_39, 0x_DE, 0x_79, 0x_67, 0x_37, 0x_83, 0x_0F, 0x_A1, 0x_EF, 0x_82, 0x_D1, 0x_3A,
		0x_3D, 0x_70, 0x_6B, 0x_97, 0x_A3, 0x_5B, 0x_B1, 0x_BE, 0x_0E, 0x_2A, 0x_C0, 0x_63, 0x_18, 0x_3F, 0x_95,
		0x_47, 0x_9C, 0x_88, 0x_8A, 0x_32, 0x_A7, 0x_3B, 0x_16, 0x_DB, 0x_5E, 0x_7D, 0x_65, 0x_1E, 0x_51, 0x_2F,
		0x_96, 0x_21, 0x_E4, 0x_77, 0x_F1, 0x_FE, 0x_BB, 0x_5A, 0x_ED, 0x_24, 0x_AF, 0x_02, 0x_14, 0x_6A, 0x_81,
		0x_1F, 0x_22, 0x_D6, 0x_8F, 0x_6F, 0x_89, 0x_75, 0x_6E, 0x_46, 0x_9D, 0x_35, 0x_9F, 0x_36, 0x_50, 0x_AB,
		0x_DD, 0x_6D, 0x_B8, 0x_4D, 0x_12, 0x_AE, 0x_30, 0x_B4,
	];

	helper(S, BASE, -966_930);
}
// endregion
// region: s_has_zeros_and_minus_5_712_315_in_base_113
#[test]
fn s_has_zeros_and_minus_5_712_315_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2,
		0x_E2, 0x_E2, 0x_AB, 0x_58, 0x_45, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_C8, 0x_F8, 0x_AB, 0x_CF, 0x_2C, 0x_DA, 0x_F0, 0x_19, 0x_FF, 0x_9A, 0x_A7, 0x_50, 0x_71, 0x_11,
		0x_60, 0x_49, 0x_E7, 0x_82, 0x_2A, 0x_39, 0x_1B, 0x_06, 0x_F7, 0x_78, 0x_83, 0x_61, 0x_AC, 0x_8F, 0x_BA,
		0x_16, 0x_4A, 0x_54, 0x_47, 0x_D3, 0x_43, 0x_72, 0x_D6, 0x_1E, 0x_AE, 0x_45, 0x_23, 0x_FC, 0x_35, 0x_E8,
		0x_1D, 0x_FD, 0x_D4, 0x_24, 0x_63, 0x_28, 0x_10, 0x_95, 0x_5B, 0x_F4, 0x_70, 0x_6D, 0x_C1, 0x_04, 0x_01,
		0x_18, 0x_BE, 0x_42, 0x_BC, 0x_EF, 0x_0F, 0x_46, 0x_38, 0x_3E, 0x_B1, 0x_8E, 0x_02, 0x_DF, 0x_7D, 0x_DB,
		0x_03, 0x_A3, 0x_CC, 0x_D5, 0x_A5, 0x_A6, 0x_27, 0x_8D, 0x_93, 0x_89, 0x_E3, 0x_B4, 0x_73, 0x_3A, 0x_77,
		0x_6C, 0x_F9, 0x_26, 0x_59, 0x_B3, 0x_2F, 0x_80, 0x_FE, 0x_7C, 0x_48, 0x_A9, 0x_6F, 0x_92, 0x_8A, 0x_0E,
		0x_7A, 0x_9F, 0x_B7, 0x_58, 0x_A4, 0x_17, 0x_E0, 0x_5C,
	];

	helper(S, BASE, -5_712_315);
}
// endregion
// region: s_has_zeros_and_minus_75_891_823_in_base_113
#[test]
fn s_has_zeros_and_minus_75_891_823_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52,
		0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52,
		0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_CB, 0x_25, 0x_1A,
		0x_64,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_2C, 0x_A8, 0x_65, 0x_55, 0x_28, 0x_64, 0x_66, 0x_78, 0x_6B, 0x_49, 0x_35, 0x_FD, 0x_7A, 0x_3B,
		0x_24, 0x_9B, 0x_F2, 0x_59, 0x_E8, 0x_5C, 0x_A3, 0x_4F, 0x_E4, 0x_F1, 0x_19, 0x_45, 0x_DC, 0x_18, 0x_37,
		0x_B6, 0x_7B, 0x_1D, 0x_A6, 0x_13, 0x_5F, 0x_5A, 0x_A1, 0x_F5, 0x_EB, 0x_7E, 0x_30, 0x_9C, 0x_4C, 0x_D5,
		0x_40, 0x_42, 0x_C5, 0x_EF, 0x_E2, 0x_1A, 0x_60, 0x_CB, 0x_2A, 0x_D9, 0x_C0, 0x_D3, 0x_EA, 0x_77, 0x_CF,
		0x_AD, 0x_4B, 0x_94, 0x_02, 0x_4E, 0x_73, 0x_1B, 0x_25, 0x_9F, 0x_DA, 0x_EE, 0x_B4, 0x_06, 0x_CD, 0x_43,
		0x_A0, 0x_76, 0x_47, 0x_74, 0x_D8, 0x_2F, 0x_84, 0x_82, 0x_BF, 0x_88, 0x_71, 0x_E7, 0x_5B, 0x_BE, 0x_90,
		0x_26, 0x_04, 0x_58, 0x_AF, 0x_16, 0x_56, 0x_87, 0x_01, 0x_CA, 0x_B5, 0x_38, 0x_F8, 0x_3C, 0x_4A, 0x_DF,
		0x_FE, 0x_6E, 0x_05, 0x_F6, 0x_67, 0x_E1, 0x_A5, 0x_E5,
	];

	helper(S, BASE, -75_891_823);
}
// endregion
// region: s_has_zeros_and_minus_723_451_697_in_base_113
#[test]
fn s_has_zeros_and_minus_723_451_697_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_9D, 0x_ED, 0x_02, 0x_81, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_16, 0x_4E, 0x_46, 0x_9D, 0x_BD, 0x_C3, 0x_31, 0x_A5, 0x_17, 0x_BE, 0x_F4, 0x_5D, 0x_63, 0x_A6,
		0x_06, 0x_64, 0x_7F, 0x_BB, 0x_CC, 0x_0F, 0x_0E, 0x_01, 0x_B4, 0x_B3, 0x_C5, 0x_A1, 0x_DB, 0x_B9, 0x_8E,
		0x_8B, 0x_89, 0x_DF, 0x_14, 0x_36, 0x_76, 0x_51, 0x_61, 0x_AB, 0x_AC, 0x_56, 0x_E0, 0x_4A, 0x_02, 0x_93,
		0x_5E, 0x_72, 0x_78, 0x_D0, 0x_ED, 0x_95, 0x_E3, 0x_F3, 0x_6B, 0x_D7, 0x_9E, 0x_87, 0x_D6, 0x_FD, 0x_B6,
		0x_60, 0x_E6, 0x_8F, 0x_41, 0x_5F, 0x_15, 0x_DA, 0x_77, 0x_FC, 0x_9B, 0x_80, 0x_28, 0x_9A, 0x_79, 0x_E5,
		0x_99, 0x_7C, 0x_EA, 0x_07, 0x_FF, 0x_40, 0x_69, 0x_F7, 0x_04, 0x_A3, 0x_C8, 0x_5C, 0x_B0, 0x_A2, 0x_CD,
		0x_27, 0x_18, 0x_21, 0x_5B, 0x_C2, 0x_1A, 0x_26, 0x_D3, 0x_49, 0x_81, 0x_BA, 0x_37, 0x_D4, 0x_FA, 0x_1D,
		0x_AE, 0x_85, 0x_3D, 0x_13, 0x_E7, 0x_94, 0x_4B, 0x_90,
	];

	helper(S, BASE, -723_451_697);
}
// endregion
// region: s_has_zeros_and_minus_7_in_base_193
#[test]
fn s_has_zeros_and_minus_7_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5,
		0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5,
		0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_C5, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_77, 0x_AD, 0x_2F, 0x_D9, 0x_A2, 0x_28, 0x_BA, 0x_F2, 0x_D6, 0x_EB, 0x_AA, 0x_42, 0x_AE, 0x_4F,
		0x_38, 0x_4C, 0x_17, 0x_3A, 0x_54, 0x_71, 0x_A5, 0x_BF, 0x_F5, 0x_57, 0x_8F, 0x_6A, 0x_AC, 0x_FC, 0x_86,
		0x_11, 0x_DE, 0x_E8, 0x_5F, 0x_CA, 0x_1C, 0x_63, 0x_C3, 0x_4D, 0x_2A, 0x_AF, 0x_75, 0x_E1, 0x_E3, 0x_78,
		0x_66, 0x_BB, 0x_33, 0x_DC, 0x_69, 0x_99, 0x_45, 0x_F9, 0x_6C, 0x_67, 0x_92, 0x_F0, 0x_6B, 0x_3D, 0x_81,
		0x_76, 0x_7C, 0x_8A, 0x_DA, 0x_7E, 0x_21, 0x_39, 0x_72, 0x_5E, 0x_B2, 0x_89, 0x_5A, 0x_2E, 0x_36, 0x_A3,
		0x_B6, 0x_EE, 0x_FB, 0x_82, 0x_4E, 0x_98, 0x_1A, 0x_A6, 0x_E9, 0x_C7, 0x_CB, 0x_F3, 0x_7B, 0x_7F, 0x_90,
		0x_F6, 0x_B7, 0x_85, 0x_AB, 0x_0E, 0x_60, 0x_49, 0x_79, 0x_E4, 0x_9A, 0x_46, 0x_DF, 0x_7A, 0x_96, 0x_47,
		0x_C2, 0x_1F, 0x_10, 0x_12, 0x_52, 0x_44, 0x_32, 0x_01, 0x_35, 0x_73, 0x_5C, 0x_24, 0x_14, 0x_48, 0x_FA,
		0x_56, 0x_41, 0x_C9, 0x_40, 0x_1B, 0x_15, 0x_EF, 0x_93, 0x_B1, 0x_D7, 0x_E2, 0x_FF, 0x_05, 0x_A4, 0x_C0,
		0x_8C, 0x_9E, 0x_6D, 0x_62, 0x_F8, 0x_55, 0x_D8, 0x_19, 0x_DB, 0x_B5, 0x_9D, 0x_53, 0x_08, 0x_6F, 0x_B4,
		0x_1E, 0x_DD, 0x_29, 0x_58, 0x_07, 0x_D4, 0x_3F, 0x_68, 0x_64, 0x_18, 0x_13, 0x_03, 0x_6E, 0x_D0, 0x_A7,
		0x_F7, 0x_2C, 0x_F1, 0x_4A, 0x_02, 0x_8D, 0x_D1, 0x_31, 0x_4B, 0x_65, 0x_A9, 0x_83, 0x_84, 0x_A1, 0x_1D,
		0x_A0, 0x_5B, 0x_8B, 0x_A8, 0x_22, 0x_C4, 0x_3B, 0x_C6, 0x_C1, 0x_3E, 0x_04, 0x_95, 0x_F4,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_zeros_and_minus_12_in_base_193
#[test]
fn s_has_zeros_and_minus_12_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A,
		0x_8A, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_F6, 0x_45, 0x_A8, 0x_C5, 0x_34, 0x_CB, 0x_B3, 0x_63, 0x_22, 0x_83, 0x_B9, 0x_11, 0x_06, 0x_66,
		0x_32, 0x_6C, 0x_73, 0x_70, 0x_2C, 0x_A1, 0x_9C, 0x_BD, 0x_91, 0x_79, 0x_39, 0x_37, 0x_9F, 0x_74, 0x_BE,
		0x_21, 0x_C2, 0x_17, 0x_6F, 0x_1C, 0x_D9, 0x_77, 0x_5E, 0x_93, 0x_52, 0x_DD, 0x_E0, 0x_D6, 0x_58, 0x_4A,
		0x_86, 0x_23, 0x_CC, 0x_46, 0x_81, 0x_1E, 0x_62, 0x_E1, 0x_9D, 0x_DB, 0x_28, 0x_EB, 0x_4E, 0x_B6, 0x_02,
		0x_2F, 0x_B1, 0x_CF, 0x_E4, 0x_49, 0x_25, 0x_04, 0x_98, 0x_D8, 0x_29, 0x_1A, 0x_F2, 0x_54, 0x_72, 0x_DF,
		0x_90, 0x_CA, 0x_C6, 0x_30, 0x_12, 0x_68, 0x_6A, 0x_27, 0x_1B, 0x_BA, 0x_5B, 0x_D7, 0x_BC, 0x_C3, 0x_6E,
		0x_EC, 0x_92, 0x_ED, 0x_42, 0x_C9, 0x_31, 0x_F4, 0x_3F, 0x_5D, 0x_14, 0x_89, 0x_56, 0x_C8, 0x_D3, 0x_8D,
		0x_1F, 0x_DC, 0x_80, 0x_AB, 0x_88, 0x_AF, 0x_A9, 0x_85, 0x_CE, 0x_96, 0x_24, 0x_65, 0x_F7, 0x_4B, 0x_F1,
		0x_2A, 0x_7A, 0x_FA, 0x_99, 0x_C1, 0x_7D, 0x_43, 0x_FB, 0x_38, 0x_B0, 0x_A4, 0x_47, 0x_F8, 0x_7F, 0x_8E,
		0x_13, 0x_CD, 0x_7E, 0x_F0, 0x_AE, 0x_FC, 0x_A7, 0x_A3, 0x_A6, 0x_EF, 0x_76, 0x_DE, 0x_1D, 0x_75, 0x_5F,
		0x_BB, 0x_08, 0x_5C, 0x_16, 0x_D0, 0x_F3, 0x_F9, 0x_33, 0x_69, 0x_AC, 0x_01, 0x_3E, 0x_87, 0x_26, 0x_19,
		0x_A0, 0x_78, 0x_F5, 0x_B7, 0x_B2, 0x_51, 0x_0E, 0x_05, 0x_18, 0x_EE, 0x_2E, 0x_A2, 0x_44, 0x_4F, 0x_3D,
		0x_D5, 0x_10, 0x_8C, 0x_7C, 0x_C7, 0x_61, 0x_82, 0x_FE, 0x_C0, 0x_64, 0x_A5, 0x_50, 0x_E3,
	];

	helper(S, BASE, -12);
}
// endregion
// region: s_has_zeros_and_minus_271_in_base_193
#[test]
fn s_has_zeros_and_minus_271_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_CD, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_63, 0x_CD, 0x_34, 0x_CE, 0x_D5, 0x_23, 0x_BB, 0x_CF, 0x_35, 0x_B6, 0x_32, 0x_7D, 0x_DD, 0x_40, 0x_92,
		0x_4F, 0x_77, 0x_1A, 0x_6C, 0x_D9, 0x_D0, 0x_F1, 0x_94, 0x_D2, 0x_B4, 0x_E0, 0x_49, 0x_EF, 0x_84, 0x_EB,
		0x_6F, 0x_68, 0x_62, 0x_BF, 0x_BA, 0x_D6, 0x_99, 0x_FD, 0x_8F, 0x_CA, 0x_7A, 0x_E1, 0x_36, 0x_4B, 0x_02,
		0x_43, 0x_C5, 0x_AB, 0x_FA, 0x_A5, 0x_14, 0x_2A, 0x_0E, 0x_F0, 0x_33, 0x_91, 0x_E9, 0x_B2, 0x_9C, 0x_53,
		0x_9E, 0x_FF, 0x_25, 0x_3D, 0x_C9, 0x_11, 0x_8E, 0x_7B, 0x_B7, 0x_3E, 0x_5B, 0x_E5, 0x_1B, 0x_D8, 0x_AD,
		0x_44, 0x_CB, 0x_B8, 0x_8D, 0x_89, 0x_FE, 0x_B9, 0x_64, 0x_3B, 0x_15, 0x_71, 0x_97, 0x_66, 0x_80, 0x_F4,
		0x_0F, 0x_1C, 0x_59, 0x_54, 0x_D7, 0x_EA, 0x_B3, 0x_D3, 0x_2E, 0x_88, 0x_08, 0x_FB, 0x_06, 0x_04, 0x_39,
		0x_87, 0x_DE, 0x_05, 0x_81, 0x_19, 0x_22, 0x_F6, 0x_3C, 0x_9F, 0x_CC, 0x_03, 0x_85, 0x_30, 0x_18, 0x_A2,
		0x_EE, 0x_60, 0x_56, 0x_12, 0x_FC, 0x_A3, 0x_F5, 0x_BC, 0x_17, 0x_26, 0x_46, 0x_C7, 0x_BE, 0x_29, 0x_E6,
		0x_48, 0x_D4, 0x_AA, 0x_67, 0x_76, 0x_82, 0x_9D, 0x_A7, 0x_83, 0x_42, 0x_F7, 0x_69, 0x_4C, 0x_F3, 0x_75,
		0x_90, 0x_1D, 0x_5A, 0x_8C, 0x_86, 0x_5C, 0x_50, 0x_3A, 0x_C0, 0x_7C, 0x_A0, 0x_38, 0x_A8, 0x_2F, 0x_C2,
		0x_74, 0x_55, 0x_51, 0x_D1, 0x_72, 0x_B5, 0x_37, 0x_F8, 0x_F2, 0x_DA, 0x_B0, 0x_96, 0x_9A, 0x_B1, 0x_24,
		0x_1E, 0x_C1, 0x_4D, 0x_8B, 0x_45, 0x_28, 0x_3F, 0x_78, 0x_21, 0x_01, 0x_5D, 0x_E3, 0x_1F,
	];

	helper(S, BASE, -271);
}
// endregion
// region: s_has_zeros_and_minus_3_322_in_base_193
#[test]
fn s_has_zeros_and_minus_3_322_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC,
		0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC,
		0x_CC, 0x_CC, 0x_CC, 0x_AD, 0x_73,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_D0, 0x_E2, 0x_B5, 0x_01, 0x_98, 0x_36, 0x_EF, 0x_5F, 0x_ED, 0x_60, 0x_1D, 0x_8C, 0x_99, 0x_AB,
		0x_46, 0x_88, 0x_AD, 0x_67, 0x_BD, 0x_D9, 0x_26, 0x_15, 0x_7E, 0x_4A, 0x_AF, 0x_5B, 0x_D2, 0x_CF, 0x_E1,
		0x_81, 0x_66, 0x_B8, 0x_22, 0x_C2, 0x_71, 0x_6C, 0x_3B, 0x_1A, 0x_B6, 0x_69, 0x_73, 0x_55, 0x_61, 0x_C8,
		0x_21, 0x_54, 0x_B1, 0x_92, 0x_BE, 0x_C5, 0x_12, 0x_90, 0x_CB, 0x_08, 0x_6B, 0x_06, 0x_42, 0x_29, 0x_AC,
		0x_E3, 0x_0E, 0x_3F, 0x_A7, 0x_E8, 0x_D1, 0x_E4, 0x_5A, 0x_93, 0x_B2, 0x_27, 0x_02, 0x_52, 0x_C0, 0x_F8,
		0x_39, 0x_D8, 0x_4D, 0x_5D, 0x_9A, 0x_D3, 0x_B7, 0x_E0, 0x_DD, 0x_F4, 0x_6D, 0x_A2, 0x_B9, 0x_A0, 0x_2E,
		0x_40, 0x_F1, 0x_04, 0x_8A, 0x_7D, 0x_A3, 0x_FB, 0x_62, 0x_45, 0x_9F, 0x_49, 0x_91, 0x_8D, 0x_FC, 0x_F2,
		0x_56, 0x_3C, 0x_95, 0x_D4, 0x_2F, 0x_F9, 0x_78, 0x_C1, 0x_F5, 0x_77, 0x_41, 0x_9E, 0x_4C, 0x_1E, 0x_9C,
		0x_70, 0x_59, 0x_EA, 0x_3E, 0x_44, 0x_7F, 0x_A6, 0x_85, 0x_84, 0x_5E, 0x_DF, 0x_38, 0x_E6, 0x_D7, 0x_4F,
		0x_BA, 0x_82, 0x_E9, 0x_1C, 0x_11, 0x_43, 0x_E7, 0x_14, 0x_6A, 0x_C3, 0x_7C, 0x_87, 0x_B4, 0x_3D, 0x_A1,
		0x_96, 0x_68, 0x_4B, 0x_16, 0x_DB, 0x_63, 0x_A8, 0x_30, 0x_75, 0x_64, 0x_DE, 0x_19, 0x_BB, 0x_EC, 0x_80,
		0x_FD, 0x_33, 0x_83, 0x_8F, 0x_1F, 0x_FA, 0x_24, 0x_8B, 0x_F0, 0x_31, 0x_BC, 0x_6E, 0x_CD, 0x_EE, 0x_5C,
		0x_79, 0x_C4, 0x_B0, 0x_05, 0x_74, 0x_E5, 0x_23, 0x_4E, 0x_17, 0x_51, 0x_A4, 0x_10, 0x_89,
	];

	helper(S, BASE, -3_322);
}
// endregion
// region: s_has_zeros_and_minus_86_158_in_base_193
#[test]
fn s_has_zeros_and_minus_86_158_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_30, 0x_55, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_8E, 0x_30, 0x_95, 0x_70, 0x_25, 0x_34, 0x_F3, 0x_89, 0x_CB, 0x_B7, 0x_4D, 0x_83, 0x_3F, 0x_B4,
		0x_23, 0x_5C, 0x_51, 0x_03, 0x_36, 0x_9C, 0x_BE, 0x_A9, 0x_AF, 0x_FD, 0x_BB, 0x_A7, 0x_1A, 0x_F2, 0x_F5,
		0x_1C, 0x_B9, 0x_84, 0x_17, 0x_93, 0x_AE, 0x_35, 0x_DE, 0x_22, 0x_07, 0x_FF, 0x_71, 0x_BD, 0x_1B, 0x_64,
		0x_01, 0x_2C, 0x_A2, 0x_EA, 0x_92, 0x_90, 0x_29, 0x_2F, 0x_7E, 0x_58, 0x_60, 0x_0F, 0x_4C, 0x_F7, 0x_CE,
		0x_55, 0x_6C, 0x_D2, 0x_0E, 0x_B5, 0x_6E, 0x_F9, 0x_27, 0x_8C, 0x_E1, 0x_EB, 0x_53, 0x_ED, 0x_67, 0x_57,
		0x_47, 0x_16, 0x_3A, 0x_DD, 0x_7B, 0x_E0, 0x_06, 0x_63, 0x_7C, 0x_C7, 0x_7F, 0x_AD, 0x_85, 0x_59, 0x_A0,
		0x_1F, 0x_BA, 0x_AC, 0x_6B, 0x_DF, 0x_EC, 0x_DA, 0x_40, 0x_C9, 0x_5F, 0x_BF, 0x_52, 0x_50, 0x_8A, 0x_FA,
		0x_FC, 0x_DB, 0x_C6, 0x_37, 0x_C3, 0x_04, 0x_B3, 0x_B2, 0x_C5, 0x_48, 0x_9B, 0x_6F, 0x_D0, 0x_4F, 0x_B6,
		0x_BC, 0x_28, 0x_21, 0x_98, 0x_E8, 0x_86, 0x_E2, 0x_24, 0x_33, 0x_61, 0x_2E, 0x_8D, 0x_94, 0x_C2, 0x_9A,
		0x_38, 0x_44, 0x_05, 0x_56, 0x_15, 0x_3E, 0x_CC, 0x_41, 0x_FE, 0x_F0, 0x_D8, 0x_FB, 0x_A8, 0x_32, 0x_A5,
		0x_F1, 0x_91, 0x_2A, 0x_49, 0x_31, 0x_AB, 0x_97, 0x_D3, 0x_F6, 0x_78, 0x_13, 0x_CA, 0x_A3, 0x_F8, 0x_69,
		0x_D7, 0x_73, 0x_9E, 0x_12, 0x_42, 0x_E9, 0x_10, 0x_B1, 0x_C0, 0x_EE, 0x_4B, 0x_82, 0x_6A, 0x_5B, 0x_E5,
		0x_54, 0x_5A, 0x_74, 0x_7D, 0x_4A, 0x_79, 0x_45, 0x_5E, 0x_1E, 0x_1D, 0x_62, 0x_14, 0x_46,
	];

	helper(S, BASE, -86_158);
}
// endregion
// region: s_has_zeros_and_minus_817_872_in_base_193
#[test]
fn s_has_zeros_and_minus_817_872_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E,
		0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_9C, 0x_AC, 0x_47,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_06, 0x_98, 0x_96, 0x_53, 0x_B0, 0x_75, 0x_15, 0x_39, 0x_25, 0x_BD, 0x_8B, 0x_54, 0x_55, 0x_41,
		0x_D1, 0x_17, 0x_7B, 0x_0E, 0x_E1, 0x_83, 0x_9C, 0x_2A, 0x_9F, 0x_93, 0x_DA, 0x_56, 0x_08, 0x_7E, 0x_C1,
		0x_7D, 0x_5B, 0x_4E, 0x_D7, 0x_C6, 0x_12, 0x_60, 0x_62, 0x_E2, 0x_59, 0x_30, 0x_29, 0x_74, 0x_B4, 0x_1F,
		0x_D3, 0x_71, 0x_E7, 0x_18, 0x_3E, 0x_E4, 0x_90, 0x_44, 0x_70, 0x_3A, 0x_76, 0x_69, 0x_A2, 0x_A7, 0x_9A,
		0x_3C, 0x_19, 0x_27, 0x_4D, 0x_D0, 0x_F6, 0x_B9, 0x_97, 0x_40, 0x_E8, 0x_D5, 0x_67, 0x_9E, 0x_E3, 0x_B2,
		0x_35, 0x_EA, 0x_A8, 0x_68, 0x_2C, 0x_79, 0x_63, 0x_6F, 0x_6C, 0x_A4, 0x_85, 0x_5A, 0x_34, 0x_82, 0x_3D,
		0x_86, 0x_26, 0x_D6, 0x_42, 0x_F7, 0x_88, 0x_CD, 0x_A1, 0x_8C, 0x_C5, 0x_51, 0x_89, 0x_AF, 0x_7F, 0x_CA,
		0x_07, 0x_E6, 0x_F0, 0x_5C, 0x_1A, 0x_E0, 0x_73, 0x_DB, 0x_66, 0x_4B, 0x_23, 0x_22, 0x_7C, 0x_24, 0x_AB,
		0x_CE, 0x_DF, 0x_8A, 0x_C2, 0x_57, 0x_BA, 0x_32, 0x_CF, 0x_21, 0x_BC, 0x_48, 0x_47, 0x_EC, 0x_65, 0x_0F,
		0x_91, 0x_49, 0x_6A, 0x_84, 0x_36, 0x_C0, 0x_1C, 0x_2F, 0x_3B, 0x_C9, 0x_BB, 0x_AA, 0x_DD, 0x_EB, 0x_81,
		0x_C3, 0x_6B, 0x_4A, 0x_46, 0x_78, 0x_9D, 0x_02, 0x_5E, 0x_FD, 0x_D4, 0x_31, 0x_5D, 0x_28, 0x_FF, 0x_CC,
		0x_F3, 0x_87, 0x_92, 0x_B5, 0x_14, 0x_6E, 0x_A6, 0x_8E, 0x_38, 0x_16, 0x_04, 0x_4F, 0x_05, 0x_5F, 0x_01,
		0x_61, 0x_FB, 0x_58, 0x_BE, 0x_AC, 0x_37, 0x_77, 0x_B6, 0x_C4, 0x_FC, 0x_52, 0x_A5, 0x_EE,
	];

	helper(S, BASE, -817_872);
}
// endregion
// region: s_has_zeros_and_minus_2_664_326_in_base_193
#[test]
fn s_has_zeros_and_minus_2_664_326_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_53, 0x_53, 0x_53, 0x_53, 0x_8D, 0x_A8, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_53, 0x_9B, 0x_61, 0x_AB, 0x_8B, 0x_47, 0x_88, 0x_E6, 0x_4D, 0x_31, 0x_13, 0x_59, 0x_EC, 0x_E5, 0x_86,
		0x_1D, 0x_D4, 0x_D3, 0x_4A, 0x_05, 0x_57, 0x_0E, 0x_F8, 0x_51, 0x_2F, 0x_BF, 0x_99, 0x_24, 0x_7E, 0x_37,
		0x_1E, 0x_B6, 0x_8F, 0x_6E, 0x_7A, 0x_70, 0x_3B, 0x_83, 0x_4F, 0x_93, 0x_DF, 0x_BB, 0x_44, 0x_6D, 0x_08,
		0x_40, 0x_C0, 0x_65, 0x_35, 0x_21, 0x_A7, 0x_03, 0x_27, 0x_78, 0x_50, 0x_54, 0x_E3, 0x_CA, 0x_AD, 0x_46,
		0x_85, 0x_BA, 0x_B7, 0x_63, 0x_04, 0x_A3, 0x_C2, 0x_A6, 0x_B0, 0x_7D, 0x_A1, 0x_8D, 0x_39, 0x_3F, 0x_1A,
		0x_58, 0x_64, 0x_06, 0x_3D, 0x_3C, 0x_94, 0x_66, 0x_5A, 0x_18, 0x_E7, 0x_F1, 0x_4B, 0x_10, 0x_F5, 0x_01,
		0x_75, 0x_23, 0x_2E, 0x_84, 0x_A4, 0x_6B, 0x_80, 0x_AF, 0x_45, 0x_5D, 0x_B3, 0x_A8, 0x_E0, 0x_FB, 0x_69,
		0x_E2, 0x_F0, 0x_EB, 0x_FC, 0x_F2, 0x_EA, 0x_1C, 0x_2A, 0x_60, 0x_5F, 0x_D7, 0x_52, 0x_E9, 0x_BC, 0x_DA,
		0x_98, 0x_16, 0x_C9, 0x_68, 0x_26, 0x_34, 0x_B2, 0x_02, 0x_74, 0x_95, 0x_F3, 0x_BD, 0x_62, 0x_4C, 0x_D2,
		0x_32, 0x_72, 0x_B8, 0x_F7, 0x_71, 0x_AE, 0x_76, 0x_3E, 0x_12, 0x_22, 0x_9C, 0x_6F, 0x_A9, 0x_73, 0x_25,
		0x_FE, 0x_C4, 0x_30, 0x_D0, 0x_82, 0x_7F, 0x_E4, 0x_4E, 0x_B9, 0x_90, 0x_E1, 0x_67, 0x_6A, 0x_FA, 0x_17,
		0x_AA, 0x_ED, 0x_11, 0x_92, 0x_89, 0x_55, 0x_D9, 0x_C5, 0x_97, 0x_A0, 0x_43, 0x_48, 0x_8A, 0x_9F, 0x_38,
		0x_D6, 0x_B1, 0x_41, 0x_EF, 0x_14, 0x_CF, 0x_D5, 0x_DE, 0x_42, 0x_EE, 0x_F6, 0x_49, 0x_CE,
	];

	helper(S, BASE, -2_664_326);
}
// endregion
// region: s_has_zeros_and_minus_77_825_153_in_base_193
#[test]
fn s_has_zeros_and_minus_77_825_153_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26,
		0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26,
		0x_26, 0x_26, 0x_26, 0x_3A, 0x_71, 0x_D8, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_78, 0x_EA, 0x_4E, 0x_E5, 0x_70, 0x_7B, 0x_D6, 0x_A6, 0x_37, 0x_3A, 0x_98, 0x_9A, 0x_AE, 0x_E6,
		0x_DB, 0x_1E, 0x_68, 0x_83, 0x_4B, 0x_F9, 0x_C5, 0x_CD, 0x_9C, 0x_F7, 0x_AF, 0x_CB, 0x_ED, 0x_8D, 0x_2A,
		0x_27, 0x_AA, 0x_F0, 0x_42, 0x_5B, 0x_D7, 0x_F8, 0x_34, 0x_15, 0x_9E, 0x_3E, 0x_73, 0x_5C, 0x_97, 0x_2F,
		0x_51, 0x_55, 0x_6F, 0x_3D, 0x_BA, 0x_99, 0x_F5, 0x_47, 0x_92, 0x_A5, 0x_F1, 0x_FD, 0x_1D, 0x_8A, 0x_53,
		0x_36, 0x_58, 0x_D8, 0x_D1, 0x_16, 0x_A0, 0x_60, 0x_B0, 0x_E1, 0x_89, 0x_DC, 0x_07, 0x_45, 0x_30, 0x_EE,
		0x_6D, 0x_9D, 0x_4D, 0x_29, 0x_59, 0x_4A, 0x_32, 0x_E7, 0x_90, 0x_F6, 0x_B4, 0x_56, 0x_C8, 0x_14, 0x_3F,
		0x_CA, 0x_7D, 0x_49, 0x_96, 0x_BE, 0x_05, 0x_87, 0x_A8, 0x_E0, 0x_CE, 0x_BC, 0x_35, 0x_A9, 0x_DF, 0x_B9,
		0x_7A, 0x_48, 0x_79, 0x_B8, 0x_0F, 0x_3C, 0x_3B, 0x_1F, 0x_65, 0x_D2, 0x_AD, 0x_4F, 0x_EF, 0x_86, 0x_63,
		0x_9B, 0x_1B, 0x_FA, 0x_D4, 0x_22, 0x_E2, 0x_28, 0x_B2, 0x_23, 0x_66, 0x_F4, 0x_F3, 0x_81, 0x_0E, 0x_72,
		0x_D9, 0x_19, 0x_DA, 0x_39, 0x_33, 0x_AB, 0x_2E, 0x_D3, 0x_31, 0x_BB, 0x_B1, 0x_46, 0x_11, 0x_C0, 0x_9F,
		0x_C2, 0x_7E, 0x_03, 0x_BF, 0x_41, 0x_21, 0x_A3, 0x_FF, 0x_5F, 0x_71, 0x_7C, 0x_C9, 0x_BD, 0x_69, 0x_54,
		0x_B7, 0x_DE, 0x_EC, 0x_D5, 0x_E9, 0x_E4, 0x_5A, 0x_18, 0x_06, 0x_E3, 0x_C1, 0x_62, 0x_02, 0x_17, 0x_08,
		0x_FE, 0x_A4, 0x_50, 0x_F2, 0x_10, 0x_1C, 0x_57, 0x_DD, 0x_82, 0x_84, 0x_38, 0x_EB, 0x_64,
	];

	helper(S, BASE, -77_825_153);
}
// endregion
// region: s_has_zeros_and_minus_204_697_380_in_base_193
#[test]
fn s_has_zeros_and_minus_204_697_380_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_08, 0x_B4, 0x_75, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_47, 0x_83, 0x_CC, 0x_34, 0x_D7, 0x_01, 0x_BF, 0x_91, 0x_17, 0x_43, 0x_D8, 0x_3A, 0x_23, 0x_8A,
		0x_C5, 0x_DC, 0x_61, 0x_5E, 0x_F0, 0x_4C, 0x_60, 0x_C2, 0x_C7, 0x_86, 0x_25, 0x_6B, 0x_79, 0x_08, 0x_FB,
		0x_B3, 0x_50, 0x_21, 0x_D3, 0x_FD, 0x_A5, 0x_D9, 0x_99, 0x_B1, 0x_81, 0x_8E, 0x_7E, 0x_80, 0x_E3, 0x_AC,
		0x_5B, 0x_44, 0x_9C, 0x_70, 0x_51, 0x_15, 0x_19, 0x_CF, 0x_C4, 0x_69, 0x_6F, 0x_F9, 0x_66, 0x_ED, 0x_82,
		0x_7B, 0x_B0, 0x_E6, 0x_7F, 0x_12, 0x_CD, 0x_2F, 0x_92, 0x_B7, 0x_30, 0x_D2, 0x_18, 0x_E9, 0x_75, 0x_C9,
		0x_8B, 0x_EC, 0x_28, 0x_42, 0x_AE, 0x_A8, 0x_1C, 0x_A9, 0x_E5, 0x_FC, 0x_A2, 0x_9F, 0x_EB, 0x_1D, 0x_5F,
		0x_F1, 0x_B4, 0x_93, 0x_A1, 0x_D1, 0x_62, 0x_CE, 0x_8F, 0x_4D, 0x_D5, 0x_7A, 0x_36, 0x_BB, 0x_BC, 0x_02,
		0x_AF, 0x_B6, 0x_27, 0x_DD, 0x_FE, 0x_EA, 0x_6A, 0x_38, 0x_CA, 0x_04, 0x_8D, 0x_4B, 0x_72, 0x_1B, 0x_B8,
		0x_32, 0x_52, 0x_4F, 0x_77, 0x_FF, 0x_E0, 0x_49, 0x_35, 0x_22, 0x_B5, 0x_C0, 0x_5A, 0x_71, 0x_56, 0x_BA,
		0x_3C, 0x_87, 0x_A4, 0x_C6, 0x_48, 0x_2E, 0x_13, 0x_45, 0x_FA, 0x_55, 0x_29, 0x_9B, 0x_3F, 0x_1A, 0x_4A,
		0x_96, 0x_4E, 0x_8C, 0x_6E, 0x_1E, 0x_E4, 0x_AD, 0x_BD, 0x_A6, 0x_54, 0x_E7, 0x_37, 0x_9D, 0x_53, 0x_14,
		0x_F3, 0x_3E, 0x_B2, 0x_10, 0x_90, 0x_1F, 0x_78, 0x_59, 0x_5C, 0x_E1, 0x_6D, 0x_97, 0x_74, 0x_05, 0x_68,
		0x_D0, 0x_88, 0x_0E, 0x_A0, 0x_06, 0x_F8, 0x_AB, 0x_3B, 0x_2C, 0x_7D, 0x_33, 0x_16, 0x_E2,
	];

	helper(S, BASE, -204_697_380);
}
// endregion
// region: s_has_zeros_and_minus_9_in_base_247
#[test]
fn s_has_zeros_and_minus_9_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81,
		0x_81, 0x_81, 0x_81, 0x_81, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_81, 0x_B7, 0x_04, 0x_57, 0x_11, 0x_71, 0x_FE, 0x_9C, 0x_A1, 0x_B3, 0x_AA, 0x_D8, 0x_E0, 0x_C1, 0x_C4,
		0x_22, 0x_37, 0x_CC, 0x_5C, 0x_6B, 0x_67, 0x_51, 0x_BA, 0x_EE, 0x_49, 0x_38, 0x_94, 0x_C2, 0x_7A, 0x_98,
		0x_46, 0x_F5, 0x_C5, 0x_82, 0x_C8, 0x_E5, 0x_5D, 0x_30, 0x_18, 0x_5E, 0x_EA, 0x_26, 0x_AB, 0x_7C, 0x_50,
		0x_66, 0x_BF, 0x_A3, 0x_B9, 0x_79, 0x_75, 0x_D4, 0x_17, 0x_19, 0x_2C, 0x_54, 0x_10, 0x_D1, 0x_76, 0x_44,
		0x_95, 0x_AC, 0x_03, 0x_B2, 0x_DF, 0x_AF, 0x_FC, 0x_CD, 0x_41, 0x_F8, 0x_60, 0x_3A, 0x_B5, 0x_1D, 0x_DC,
		0x_3D, 0x_CA, 0x_9E, 0x_9D, 0x_B6, 0x_4A, 0x_2E, 0x_BE, 0x_01, 0x_88, 0x_70, 0x_C7, 0x_72, 0x_DE, 0x_8D,
		0x_13, 0x_8A, 0x_62, 0x_E8, 0x_4D, 0x_BC, 0x_83, 0x_45, 0x_31, 0x_16, 0x_8C, 0x_A7, 0x_0E, 0x_8B, 0x_8F,
		0x_9A, 0x_61, 0x_A5, 0x_74, 0x_A0, 0x_B1, 0x_4B, 0x_4F, 0x_A6, 0x_90, 0x_D9, 0x_DA, 0x_23, 0x_65, 0x_7E,
		0x_D2, 0x_02, 0x_A9, 0x_6D, 0x_7F, 0x_36, 0x_52, 0x_40, 0x_15, 0x_27, 0x_7D, 0x_0F, 0x_EC, 0x_BB, 0x_ED,
		0x_24, 0x_4E, 0x_1E, 0x_89, 0x_EF, 0x_28, 0x_42, 0x_1B, 0x_F7, 0x_E6, 0x_6F, 0x_F4, 0x_9B, 0x_59, 0x_69,
		0x_6C, 0x_FD, 0x_AD, 0x_77, 0x_12, 0x_07, 0x_92, 0x_63, 0x_A8, 0x_BD, 0x_58, 0x_DD, 0x_6A, 0x_1A, 0x_D6,
		0x_FF, 0x_53, 0x_E2, 0x_2A, 0x_3E, 0x_C6, 0x_C0, 0x_97, 0x_08, 0x_E9, 0x_1C, 0x_F6, 0x_35, 0x_93, 0x_CE,
		0x_55, 0x_96, 0x_EB, 0x_CB, 0x_D0, 0x_25, 0x_29, 0x_99, 0x_3F, 0x_84, 0x_5A, 0x_80, 0x_32, 0x_87, 0x_14,
		0x_21, 0x_F0, 0x_C9, 0x_5F, 0x_AE, 0x_7B, 0x_05, 0x_6E, 0x_D5, 0x_48, 0x_A4, 0x_56, 0x_D7, 0x_64, 0x_4C,
		0x_D3, 0x_C3, 0x_9F, 0x_DB, 0x_06, 0x_2F, 0x_85, 0x_8E, 0x_F9, 0x_3B, 0x_86, 0x_1F, 0x_5B, 0x_A2, 0x_F1,
		0x_73, 0x_34, 0x_91, 0x_FA, 0x_B4, 0x_F2, 0x_33, 0x_B8, 0x_CF, 0x_F3, 0x_68, 0x_FB, 0x_39, 0x_78, 0x_43,
		0x_E7, 0x_3C, 0x_B0, 0x_47, 0x_E1, 0x_E4, 0x_E3,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_zeros_and_minus_93_in_base_247
#[test]
fn s_has_zeros_and_minus_93_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_7E, 0x_7E, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_30, 0x_65, 0x_29, 0x_FF, 0x_BD, 0x_B0, 0x_26, 0x_5F, 0x_6E, 0x_12, 0x_98, 0x_ED, 0x_4D, 0x_1D,
		0x_18, 0x_9F, 0x_87, 0x_BF, 0x_E1, 0x_F5, 0x_C9, 0x_41, 0x_55, 0x_8E, 0x_CD, 0x_A6, 0x_6A, 0x_A2, 0x_4F,
		0x_77, 0x_E8, 0x_90, 0x_FD, 0x_4B, 0x_D0, 0x_F1, 0x_22, 0x_62, 0x_A1, 0x_C3, 0x_64, 0x_10, 0x_A0, 0x_71,
		0x_E2, 0x_B9, 0x_CE, 0x_16, 0x_56, 0x_D4, 0x_74, 0x_03, 0x_13, 0x_9B, 0x_7C, 0x_88, 0x_94, 0x_68, 0x_32,
		0x_D3, 0x_61, 0x_E5, 0x_DD, 0x_5C, 0x_48, 0x_78, 0x_36, 0x_C7, 0x_C0, 0x_B8, 0x_D6, 0x_AD, 0x_58, 0x_84,
		0x_E0, 0x_B2, 0x_25, 0x_A5, 0x_D8, 0x_5D, 0x_21, 0x_A7, 0x_70, 0x_7B, 0x_AE, 0x_8F, 0x_6D, 0x_80, 0x_2A,
		0x_86, 0x_E4, 0x_83, 0x_19, 0x_EE, 0x_79, 0x_FA, 0x_93, 0x_DA, 0x_11, 0x_CB, 0x_37, 0x_CC, 0x_B1, 0x_14,
		0x_F2, 0x_F8, 0x_96, 0x_DF, 0x_0F, 0x_C8, 0x_01, 0x_72, 0x_C6, 0x_08, 0x_49, 0x_FE, 0x_AF, 0x_9D, 0x_73,
		0x_B6, 0x_81, 0x_E6, 0x_60, 0x_5E, 0x_F6, 0x_24, 0x_E7, 0x_BB, 0x_A4, 0x_A3, 0x_4C, 0x_EA, 0x_A9, 0x_B3,
		0x_35, 0x_2C, 0x_95, 0x_27, 0x_1C, 0x_7F, 0x_1B, 0x_C4, 0x_E9, 0x_FC, 0x_3C, 0x_43, 0x_39, 0x_EF, 0x_47,
		0x_0E, 0x_1E, 0x_8A, 0x_6F, 0x_05, 0x_C5, 0x_D1, 0x_07, 0x_85, 0x_23, 0x_5A, 0x_B5, 0x_99, 0x_75, 0x_91,
		0x_92, 0x_2E, 0x_DE, 0x_4A, 0x_DB, 0x_F9, 0x_6C, 0x_15, 0x_BC, 0x_3B, 0x_BA, 0x_51, 0x_57, 0x_C2, 0x_8C,
		0x_BE, 0x_7A, 0x_76, 0x_6B, 0x_CA, 0x_AC, 0x_28, 0x_F0, 0x_89, 0x_06, 0x_AB, 0x_3F, 0x_9A, 0x_9C, 0x_46,
		0x_D9, 0x_34, 0x_54, 0x_EB, 0x_1A, 0x_4E, 0x_A8, 0x_3D, 0x_3E, 0x_04, 0x_E3, 0x_DC, 0x_69, 0x_67, 0x_8D,
		0x_63, 0x_9E, 0x_B7, 0x_44, 0x_66, 0x_97, 0x_2F, 0x_EC, 0x_59, 0x_1F, 0x_5B, 0x_AA, 0x_31, 0x_D7, 0x_33,
		0x_45, 0x_F4, 0x_C1, 0x_3A, 0x_7D, 0x_D2, 0x_02, 0x_42, 0x_B4, 0x_53, 0x_F7, 0x_50, 0x_40, 0x_FB, 0x_F3,
		0x_82, 0x_CF, 0x_52, 0x_17, 0x_38, 0x_D5, 0x_8B,
	];

	helper(S, BASE, -93);
}
// endregion
// region: s_has_zeros_and_minus_935_in_base_247
#[test]
fn s_has_zeros_and_minus_935_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_9B, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_CD, 0x_A5, 0x_9B, 0x_49, 0x_AA, 0x_95, 0x_A6, 0x_33, 0x_FD, 0x_16, 0x_63, 0x_DE, 0x_E9, 0x_7B,
		0x_FA, 0x_4B, 0x_AE, 0x_F3, 0x_9E, 0x_E0, 0x_32, 0x_BE, 0x_64, 0x_60, 0x_A2, 0x_D5, 0x_B7, 0x_E6, 0x_65,
		0x_89, 0x_35, 0x_D8, 0x_E5, 0x_5C, 0x_96, 0x_CB, 0x_D9, 0x_6C, 0x_6A, 0x_80, 0x_12, 0x_B9, 0x_90, 0x_3C,
		0x_B2, 0x_18, 0x_69, 0x_57, 0x_C0, 0x_48, 0x_EB, 0x_4F, 0x_31, 0x_08, 0x_AF, 0x_92, 0x_14, 0x_70, 0x_84,
		0x_B6, 0x_D3, 0x_DA, 0x_9F, 0x_E4, 0x_38, 0x_74, 0x_B5, 0x_1E, 0x_07, 0x_A9, 0x_81, 0x_5B, 0x_56, 0x_4C,
		0x_0E, 0x_A8, 0x_98, 0x_73, 0x_97, 0x_9D, 0x_F2, 0x_C1, 0x_25, 0x_F0, 0x_6B, 0x_37, 0x_66, 0x_DD, 0x_8C,
		0x_B3, 0x_7A, 0x_0F, 0x_52, 0x_2C, 0x_F9, 0x_24, 0x_B4, 0x_A3, 0x_71, 0x_2E, 0x_3E, 0x_8A, 0x_BF, 0x_F1,
		0x_01, 0x_F5, 0x_28, 0x_A4, 0x_5D, 0x_1B, 0x_B8, 0x_AC, 0x_C5, 0x_83, 0x_3A, 0x_26, 0x_75, 0x_1C, 0x_FF,
		0x_6E, 0x_FB, 0x_51, 0x_1F, 0x_E2, 0x_3D, 0x_77, 0x_22, 0x_CC, 0x_3F, 0x_36, 0x_50, 0x_EE, 0x_91, 0x_DB,
		0x_E3, 0x_05, 0x_34, 0x_4A, 0x_03, 0x_44, 0x_CF, 0x_5A, 0x_13, 0x_8F, 0x_6F, 0x_C8, 0x_F6, 0x_A7, 0x_39,
		0x_BD, 0x_A1, 0x_29, 0x_D1, 0x_D7, 0x_15, 0x_8E, 0x_F7, 0x_E7, 0x_87, 0x_5E, 0x_EA, 0x_85, 0x_2A, 0x_6D,
		0x_78, 0x_93, 0x_21, 0x_68, 0x_43, 0x_C6, 0x_ED, 0x_19, 0x_B0, 0x_59, 0x_F4, 0x_D6, 0x_C4, 0x_82, 0x_54,
		0x_DC, 0x_EF, 0x_79, 0x_D2, 0x_76, 0x_1A, 0x_5F, 0x_17, 0x_72, 0x_CE, 0x_FC, 0x_C9, 0x_3B, 0x_AB, 0x_53,
		0x_62, 0x_23, 0x_D0, 0x_42, 0x_9C, 0x_99, 0x_E8, 0x_61, 0x_27, 0x_2F, 0x_46, 0x_B1, 0x_06, 0x_EC, 0x_7F,
		0x_1D, 0x_4D, 0x_BB, 0x_CA, 0x_F8, 0x_C2, 0x_BC, 0x_A0, 0x_DF, 0x_C7, 0x_7C, 0x_C3, 0x_7E, 0x_47, 0x_10,
		0x_88, 0x_7D, 0x_02, 0x_8B, 0x_58, 0x_AD, 0x_40, 0x_55, 0x_FE, 0x_4E, 0x_BA, 0x_8D, 0x_86, 0x_94, 0x_E1,
		0x_D4, 0x_04, 0x_9A, 0x_67, 0x_11, 0x_45, 0x_30,
	];

	helper(S, BASE, -935);
}
// endregion
// region: s_has_zeros_and_minus_6_495_in_base_247
#[test]
fn s_has_zeros_and_minus_6_495_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_6A, 0x_6A, 0x_6A, 0x_3C, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_6A, 0x_7D, 0x_9C, 0x_1F, 0x_0E, 0x_47, 0x_BC, 0x_31, 0x_D6, 0x_2C, 0x_CD, 0x_17, 0x_29, 0x_3F, 0x_34,
		0x_18, 0x_6B, 0x_6D, 0x_1A, 0x_C4, 0x_02, 0x_9D, 0x_41, 0x_99, 0x_4E, 0x_8D, 0x_3C, 0x_45, 0x_A9, 0x_5A,
		0x_90, 0x_79, 0x_49, 0x_AE, 0x_ED, 0x_83, 0x_D8, 0x_75, 0x_68, 0x_A2, 0x_4A, 0x_70, 0x_4C, 0x_F5, 0x_E5,
		0x_A6, 0x_A4, 0x_B8, 0x_E7, 0x_7E, 0x_A8, 0x_8F, 0x_FE, 0x_BF, 0x_B7, 0x_84, 0x_D9, 0x_3D, 0x_D2, 0x_CF,
		0x_07, 0x_BB, 0x_B9, 0x_58, 0x_C2, 0x_57, 0x_AC, 0x_54, 0x_FB, 0x_46, 0x_C7, 0x_CA, 0x_55, 0x_C6, 0x_DB,
		0x_E6, 0x_9F, 0x_EB, 0x_F0, 0x_85, 0x_88, 0x_A3, 0x_72, 0x_AB, 0x_67, 0x_A1, 0x_80, 0x_16, 0x_E9, 0x_1B,
		0x_27, 0x_FC, 0x_CE, 0x_7B, 0x_8B, 0x_C0, 0x_53, 0x_59, 0x_50, 0x_61, 0x_96, 0x_10, 0x_4F, 0x_37, 0x_48,
		0x_87, 0x_AF, 0x_FD, 0x_F1, 0x_AD, 0x_1E, 0x_D3, 0x_A7, 0x_F9, 0x_2F, 0x_E1, 0x_4B, 0x_51, 0x_9A, 0x_11,
		0x_C5, 0x_BA, 0x_C9, 0x_91, 0x_E2, 0x_32, 0x_52, 0x_7F, 0x_3A, 0x_D0, 0x_19, 0x_C1, 0x_EC, 0x_2E, 0x_FF,
		0x_1C, 0x_74, 0x_63, 0x_89, 0x_40, 0x_97, 0x_82, 0x_77, 0x_93, 0x_35, 0x_43, 0x_D4, 0x_DD, 0x_F2, 0x_8E,
		0x_C3, 0x_05, 0x_F3, 0x_E8, 0x_FA, 0x_5C, 0x_6F, 0x_B4, 0x_DA, 0x_23, 0x_03, 0x_39, 0x_2A, 0x_92, 0x_3E,
		0x_66, 0x_81, 0x_25, 0x_01, 0x_0F, 0x_CC, 0x_A5, 0x_65, 0x_12, 0x_5D, 0x_08, 0x_86, 0x_B6, 0x_15, 0x_95,
		0x_E3, 0x_06, 0x_28, 0x_F6, 0x_33, 0x_44, 0x_CB, 0x_69, 0x_30, 0x_71, 0x_6E, 0x_DC, 0x_A0, 0x_BE, 0x_C8,
		0x_22, 0x_F7, 0x_64, 0x_13, 0x_94, 0x_B3, 0x_7A, 0x_B5, 0x_8A, 0x_42, 0x_04, 0x_EF, 0x_EE, 0x_36, 0x_4D,
		0x_AA, 0x_EA, 0x_B2, 0x_F8, 0x_60, 0x_5B, 0x_D5, 0x_5E, 0x_6C, 0x_1D, 0x_D1, 0x_73, 0x_E4, 0x_56, 0x_D7,
		0x_DE, 0x_B1, 0x_B0, 0x_14, 0x_78, 0x_24, 0x_F4, 0x_9B, 0x_21, 0x_8C, 0x_7C, 0x_E0, 0x_26, 0x_DF, 0x_62,
		0x_38, 0x_98, 0x_3B, 0x_5F, 0x_9E, 0x_76, 0x_BD,
	];

	helper(S, BASE, -6_495);
}
// endregion
// region: s_has_zeros_and_minus_30_668_in_base_247
#[test]
fn s_has_zeros_and_minus_30_668_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE,
		0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE,
		0x_EE, 0x_F9, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_9E, 0x_44, 0x_CD, 0x_74, 0x_43, 0x_AB, 0x_66, 0x_E8, 0x_83, 0x_7F, 0x_91, 0x_8C, 0x_DE, 0x_15,
		0x_37, 0x_87, 0x_92, 0x_F3, 0x_21, 0x_23, 0x_D6, 0x_70, 0x_10, 0x_BC, 0x_E4, 0x_FD, 0x_E2, 0x_65, 0x_2A,
		0x_2C, 0x_FC, 0x_86, 0x_C6, 0x_EC, 0x_39, 0x_06, 0x_E6, 0x_07, 0x_7A, 0x_71, 0x_3D, 0x_7C, 0x_BD, 0x_5A,
		0x_D5, 0x_3B, 0x_24, 0x_55, 0x_45, 0x_A8, 0x_1E, 0x_68, 0x_F0, 0x_EA, 0x_D1, 0x_18, 0x_4C, 0x_72, 0x_3F,
		0x_35, 0x_CC, 0x_CB, 0x_8F, 0x_63, 0x_3C, 0x_27, 0x_2E, 0x_AE, 0x_4A, 0x_DC, 0x_F4, 0x_C9, 0x_56, 0x_08,
		0x_5F, 0x_6C, 0x_5D, 0x_C4, 0x_5E, 0x_F6, 0x_CF, 0x_7D, 0x_B1, 0x_A1, 0x_1F, 0x_B5, 0x_1A, 0x_A2, 0x_FB,
		0x_2F, 0x_47, 0x_64, 0x_50, 0x_C0, 0x_E9, 0x_33, 0x_8E, 0x_48, 0x_C2, 0x_A4, 0x_36, 0x_EB, 0x_E7, 0x_A5,
		0x_4B, 0x_90, 0x_9F, 0x_F1, 0x_04, 0x_61, 0x_88, 0x_DA, 0x_8D, 0x_58, 0x_05, 0x_01, 0x_F5, 0x_31, 0x_ED,
		0x_85, 0x_FF, 0x_51, 0x_42, 0x_F9, 0x_4F, 0x_0F, 0x_B3, 0x_6A, 0x_93, 0x_52, 0x_D8, 0x_30, 0x_CA, 0x_4D,
		0x_22, 0x_7B, 0x_76, 0x_98, 0x_B6, 0x_AD, 0x_B4, 0x_D9, 0x_89, 0x_02, 0x_DD, 0x_26, 0x_49, 0x_19, 0x_AA,
		0x_F2, 0x_77, 0x_D3, 0x_9D, 0x_C1, 0x_96, 0x_99, 0x_F7, 0x_5B, 0x_75, 0x_9C, 0x_67, 0x_D7, 0x_6E, 0x_E0,
		0x_B2, 0x_7E, 0x_D0, 0x_69, 0x_28, 0x_8B, 0x_94, 0x_B9, 0x_EF, 0x_BA, 0x_C5, 0x_34, 0x_29, 0x_AC, 0x_73,
		0x_1B, 0x_14, 0x_FE, 0x_17, 0x_A3, 0x_3A, 0x_B7, 0x_4E, 0x_DB, 0x_57, 0x_CE, 0x_38, 0x_A6, 0x_13, 0x_60,
		0x_6D, 0x_78, 0x_59, 0x_16, 0x_BE, 0x_8A, 0x_C8, 0x_12, 0x_A7, 0x_80, 0x_03, 0x_25, 0x_97, 0x_B8, 0x_DF,
		0x_9B, 0x_79, 0x_6F, 0x_46, 0x_AF, 0x_1D, 0x_E1, 0x_32, 0x_11, 0x_5C, 0x_A0, 0x_C3, 0x_BF, 0x_FA, 0x_84,
		0x_A9, 0x_0E, 0x_D2, 0x_54, 0x_9A, 0x_95, 0x_40, 0x_D4, 0x_53, 0x_62, 0x_82, 0x_E5, 0x_1C, 0x_B0, 0x_BB,
		0x_F8, 0x_41, 0x_81, 0x_E3, 0x_6B, 0x_C7, 0x_3E,
	];

	helper(S, BASE, -30_668);
}
// endregion
// region: s_has_zeros_and_minus_329_549_in_base_247
#[test]
fn s_has_zeros_and_minus_329_549_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4,
		0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4,
		0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_7F, 0x_6F, 0x_89,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_D4, 0x_DB, 0x_9D, 0x_14, 0x_7F, 0x_E6, 0x_C9, 0x_69, 0x_40, 0x_D1, 0x_B5, 0x_1A, 0x_3D, 0x_58,
		0x_02, 0x_5A, 0x_F8, 0x_9F, 0x_5E, 0x_18, 0x_7C, 0x_DD, 0x_AD, 0x_24, 0x_08, 0x_AF, 0x_01, 0x_66, 0x_DF,
		0x_95, 0x_4A, 0x_62, 0x_27, 0x_5F, 0x_36, 0x_87, 0x_BF, 0x_28, 0x_3E, 0x_2C, 0x_A3, 0x_2E, 0x_55, 0x_16,
		0x_1F, 0x_D2, 0x_EF, 0x_05, 0x_E2, 0x_94, 0x_89, 0x_C6, 0x_37, 0x_8A, 0x_44, 0x_64, 0x_57, 0x_13, 0x_4E,
		0x_D8, 0x_D7, 0x_C3, 0x_75, 0x_5D, 0x_E9, 0x_C0, 0x_C1, 0x_51, 0x_9A, 0x_CD, 0x_90, 0x_7B, 0x_68, 0x_8E,
		0x_AE, 0x_03, 0x_12, 0x_9C, 0x_5B, 0x_9B, 0x_BD, 0x_8C, 0x_11, 0x_72, 0x_70, 0x_85, 0x_AC, 0x_31, 0x_F7,
		0x_FE, 0x_6E, 0x_86, 0x_92, 0x_30, 0x_CF, 0x_0E, 0x_FD, 0x_B3, 0x_6F, 0x_EE, 0x_81, 0x_DE, 0x_73, 0x_29,
		0x_2F, 0x_D9, 0x_23, 0x_CC, 0x_C8, 0x_E7, 0x_46, 0x_54, 0x_76, 0x_D5, 0x_67, 0x_DA, 0x_A8, 0x_25, 0x_B8,
		0x_F2, 0x_BA, 0x_59, 0x_C4, 0x_E5, 0x_96, 0x_71, 0x_78, 0x_CA, 0x_1E, 0x_C2, 0x_17, 0x_34, 0x_53, 0x_7A,
		0x_43, 0x_99, 0x_A0, 0x_E1, 0x_45, 0x_B7, 0x_4F, 0x_ED, 0x_65, 0x_1D, 0x_3C, 0x_E0, 0x_63, 0x_A9, 0x_8B,
		0x_4B, 0x_6C, 0x_D6, 0x_74, 0x_F3, 0x_EB, 0x_CB, 0x_E3, 0x_93, 0x_D0, 0x_83, 0x_3F, 0x_52, 0x_C5, 0x_F6,
		0x_B2, 0x_91, 0x_AA, 0x_A6, 0x_B0, 0x_15, 0x_1B, 0x_97, 0x_22, 0x_6D, 0x_0F, 0x_F4, 0x_F5, 0x_79, 0x_41,
		0x_6B, 0x_88, 0x_7E, 0x_3B, 0x_A2, 0x_FF, 0x_CE, 0x_8F, 0x_60, 0x_A1, 0x_56, 0x_B9, 0x_C7, 0x_42, 0x_33,
		0x_84, 0x_4D, 0x_FA, 0x_49, 0x_EC, 0x_80, 0x_1C, 0x_D3, 0x_4C, 0x_B6, 0x_48, 0x_04, 0x_E8, 0x_3A, 0x_8D,
		0x_FC, 0x_2A, 0x_06, 0x_A5, 0x_98, 0x_FB, 0x_82, 0x_9E, 0x_EA, 0x_BC, 0x_26, 0x_21, 0x_F9, 0x_77, 0x_35,
		0x_50, 0x_5C, 0x_61, 0x_E4, 0x_B4, 0x_07, 0x_B1, 0x_BB, 0x_BE, 0x_DC, 0x_38, 0x_F0, 0x_39, 0x_A7, 0x_47,
		0x_7D, 0x_19, 0x_6A, 0x_32, 0x_AB, 0x_10, 0x_F1,
	];

	helper(S, BASE, -329_549);
}
// endregion
// region: s_has_zeros_and_minus_3_406_881_in_base_247
#[test]
fn s_has_zeros_and_minus_3_406_881_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14,
		0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_F4, 0x_FC, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_3C, 0x_28, 0x_2A, 0x_B4, 0x_B9, 0x_E0, 0x_0F, 0x_85, 0x_F7, 0x_E3, 0x_5C, 0x_A1, 0x_86, 0x_9D,
		0x_E5, 0x_AA, 0x_A5, 0x_31, 0x_8E, 0x_E1, 0x_C5, 0x_02, 0x_38, 0x_CC, 0x_72, 0x_5B, 0x_B6, 0x_7C, 0x_7D,
		0x_6B, 0x_BE, 0x_97, 0x_B1, 0x_46, 0x_FE, 0x_BA, 0x_ED, 0x_55, 0x_B8, 0x_CE, 0x_CA, 0x_6D, 0x_33, 0x_FF,
		0x_BB, 0x_59, 0x_58, 0x_3D, 0x_F1, 0x_B0, 0x_8F, 0x_2E, 0x_22, 0x_81, 0x_F4, 0x_D9, 0x_8B, 0x_15, 0x_F8,
		0x_5E, 0x_F2, 0x_26, 0x_9B, 0x_92, 0x_29, 0x_CB, 0x_C7, 0x_F6, 0x_95, 0x_F5, 0x_17, 0x_91, 0x_99, 0x_9A,
		0x_9C, 0x_E2, 0x_10, 0x_36, 0x_A4, 0x_1A, 0x_76, 0x_A3, 0x_08, 0x_16, 0x_1D, 0x_35, 0x_2F, 0x_98, 0x_12,
		0x_1C, 0x_E8, 0x_DF, 0x_D6, 0x_B5, 0x_4C, 0x_94, 0x_7E, 0x_E6, 0x_54, 0x_7B, 0x_74, 0x_71, 0x_FA, 0x_19,
		0x_2C, 0x_CD, 0x_7A, 0x_3F, 0x_89, 0x_AE, 0x_F9, 0x_E4, 0x_5D, 0x_30, 0x_8C, 0x_EC, 0x_87, 0x_96, 0x_1B,
		0x_68, 0x_BD, 0x_11, 0x_9E, 0x_C6, 0x_EF, 0x_FD, 0x_56, 0x_BC, 0x_C8, 0x_70, 0x_24, 0x_93, 0x_4E, 0x_34,
		0x_D2, 0x_A6, 0x_37, 0x_48, 0x_42, 0x_57, 0x_AC, 0x_03, 0x_41, 0x_E7, 0x_5F, 0x_6E, 0x_DA, 0x_66, 0x_73,
		0x_DE, 0x_4D, 0x_7F, 0x_4A, 0x_43, 0x_DD, 0x_44, 0x_8D, 0x_63, 0x_D5, 0x_01, 0x_F3, 0x_AD, 0x_53, 0x_9F,
		0x_C4, 0x_C9, 0x_3B, 0x_B7, 0x_3E, 0x_FB, 0x_4F, 0x_05, 0x_F0, 0x_49, 0x_50, 0x_75, 0x_80, 0x_88, 0x_D1,
		0x_47, 0x_AB, 0x_04, 0x_CF, 0x_1F, 0x_A2, 0x_C1, 0x_64, 0x_0E, 0x_C2, 0x_18, 0x_83, 0x_06, 0x_D7, 0x_BF,
		0x_40, 0x_62, 0x_32, 0x_A9, 0x_39, 0x_65, 0x_77, 0x_6C, 0x_D4, 0x_1E, 0x_25, 0x_45, 0x_EA, 0x_FC, 0x_5A,
		0x_A7, 0x_EE, 0x_B2, 0x_3A, 0x_8A, 0x_13, 0x_84, 0x_4B, 0x_D0, 0x_DC, 0x_C3, 0x_27, 0x_EB, 0x_78, 0x_A0,
		0x_AF, 0x_79, 0x_51, 0x_DB, 0x_A8, 0x_6F, 0x_D8, 0x_E9, 0x_B3, 0x_21, 0x_67, 0x_82, 0x_60, 0x_07, 0x_90,
		0x_69, 0x_23, 0x_61, 0x_6A, 0x_C0, 0x_52, 0x_D3,
	];

	helper(S, BASE, -3_406_881);
}
// endregion
// region: s_has_zeros_and_minus_29_791_817_in_base_247
#[test]
fn s_has_zeros_and_minus_29_791_817_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_AF, 0x_BA, 0x_31,
		0x_22,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_AF, 0x_88, 0x_77, 0x_34, 0x_F9, 0x_5C, 0x_E6, 0x_8D, 0x_F4, 0x_BD, 0x_78, 0x_AA, 0x_D4, 0x_B3,
		0x_E5, 0x_3C, 0x_37, 0x_90, 0x_6B, 0x_10, 0x_06, 0x_5A, 0x_29, 0x_3D, 0x_38, 0x_C7, 0x_1A, 0x_08, 0x_66,
		0x_ED, 0x_16, 0x_8F, 0x_E3, 0x_1D, 0x_8E, 0x_26, 0x_F8, 0x_13, 0x_92, 0x_CA, 0x_62, 0x_7C, 0x_4F, 0x_18,
		0x_B4, 0x_27, 0x_DF, 0x_DC, 0x_39, 0x_4E, 0x_2C, 0x_0F, 0x_E4, 0x_C9, 0x_43, 0x_6A, 0x_BE, 0x_AB, 0x_17,
		0x_1B, 0x_EF, 0x_A2, 0x_A8, 0x_A0, 0x_30, 0x_FF, 0x_9F, 0x_58, 0x_B8, 0x_3E, 0x_51, 0x_D1, 0x_41, 0x_F2,
		0x_BB, 0x_A1, 0x_55, 0x_31, 0x_25, 0x_D2, 0x_74, 0x_9D, 0x_F7, 0x_47, 0x_6C, 0x_23, 0x_3F, 0x_6E, 0x_87,
		0x_05, 0x_2E, 0x_86, 0x_53, 0x_B1, 0x_D6, 0x_44, 0x_E7, 0x_B6, 0x_7F, 0x_FA, 0x_0E, 0x_89, 0x_36, 0x_70,
		0x_CD, 0x_C1, 0x_1C, 0x_80, 0x_12, 0x_99, 0x_C2, 0x_E0, 0x_8A, 0x_E9, 0x_76, 0x_B7, 0x_01, 0x_A9, 0x_DB,
		0x_AC, 0x_68, 0x_59, 0x_DD, 0x_D9, 0x_50, 0x_C6, 0x_4D, 0x_02, 0x_BF, 0x_7E, 0x_1F, 0x_5F, 0x_9B, 0x_71,
		0x_03, 0x_A4, 0x_64, 0x_CC, 0x_E2, 0x_45, 0x_57, 0x_52, 0x_2A, 0x_9E, 0x_4A, 0x_93, 0x_61, 0x_FC, 0x_F3,
		0x_3B, 0x_AD, 0x_24, 0x_95, 0x_A3, 0x_FB, 0x_33, 0x_96, 0x_CF, 0x_22, 0x_F6, 0x_04, 0x_15, 0x_69, 0x_EC,
		0x_75, 0x_91, 0x_21, 0x_83, 0x_19, 0x_B0, 0x_6F, 0x_F0, 0x_C5, 0x_F1, 0x_56, 0x_2F, 0x_07, 0x_E1, 0x_46,
		0x_97, 0x_65, 0x_4C, 0x_4B, 0x_35, 0x_AE, 0x_D8, 0x_94, 0x_82, 0x_DA, 0x_5B, 0x_B5, 0x_D5, 0x_8B, 0x_49,
		0x_7B, 0x_60, 0x_D7, 0x_BC, 0x_32, 0x_84, 0x_5D, 0x_48, 0x_EE, 0x_CE, 0x_67, 0x_E8, 0x_73, 0x_6D, 0x_7A,
		0x_C8, 0x_28, 0x_98, 0x_1E, 0x_79, 0x_FE, 0x_8C, 0x_63, 0x_81, 0x_A6, 0x_C3, 0x_85, 0x_EB, 0x_B2, 0x_40,
		0x_C4, 0x_11, 0x_D3, 0x_42, 0x_D0, 0x_7D, 0x_B9, 0x_EA, 0x_3A, 0x_F5, 0x_CB, 0x_5E, 0x_A5, 0x_FD, 0x_C0,
		0x_9A, 0x_BA, 0x_A7, 0x_54, 0x_72, 0x_DE, 0x_9C,
	];

	helper(S, BASE, -29_791_817);
}
// endregion
// region: s_has_zeros_and_minus_338_133_254_in_base_247
#[test]
fn s_has_zeros_and_minus_338_133_254_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_7E, 0x_37, 0x_78,
		0x_84,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_F9, 0x_F0, 0x_D7, 0x_F8, 0x_62, 0x_5B, 0x_E8, 0x_1B, 0x_13, 0x_70, 0x_69, 0x_B3, 0x_90, 0x_A3,
		0x_6C, 0x_7C, 0x_26, 0x_56, 0x_66, 0x_30, 0x_B5, 0x_7E, 0x_EB, 0x_43, 0x_71, 0x_DA, 0x_40, 0x_AE, 0x_F5,
		0x_5D, 0x_DE, 0x_50, 0x_1E, 0x_04, 0x_5E, 0x_83, 0x_0E, 0x_F4, 0x_93, 0x_CD, 0x_D1, 0x_FD, 0x_BB, 0x_C9,
		0x_FF, 0x_E5, 0x_6A, 0x_DD, 0x_A4, 0x_4A, 0x_6E, 0x_AC, 0x_14, 0x_95, 0x_AA, 0x_BD, 0x_F6, 0x_55, 0x_41,
		0x_99, 0x_5F, 0x_03, 0x_5A, 0x_A7, 0x_8A, 0x_FC, 0x_9C, 0x_67, 0x_5C, 0x_F2, 0x_54, 0x_EF, 0x_F1, 0x_B0,
		0x_2E, 0x_B9, 0x_C3, 0x_01, 0x_38, 0x_CC, 0x_88, 0x_E0, 0x_86, 0x_4D, 0x_23, 0x_78, 0x_DB, 0x_BA, 0x_44,
		0x_73, 0x_C1, 0x_17, 0x_B2, 0x_63, 0x_ED, 0x_E1, 0x_FE, 0x_D9, 0x_29, 0x_25, 0x_46, 0x_D2, 0x_CB, 0x_B7,
		0x_AB, 0x_0F, 0x_05, 0x_37, 0x_D0, 0x_B1, 0x_8F, 0x_7D, 0x_72, 0x_77, 0x_B6, 0x_42, 0x_9D, 0x_06, 0x_D6,
		0x_94, 0x_1F, 0x_F3, 0x_12, 0x_39, 0x_4C, 0x_BE, 0x_EE, 0x_33, 0x_18, 0x_65, 0x_64, 0x_B8, 0x_75, 0x_84,
		0x_24, 0x_19, 0x_9F, 0x_9A, 0x_16, 0x_15, 0x_36, 0x_58, 0x_85, 0x_07, 0x_4F, 0x_96, 0x_52, 0x_C7, 0x_53,
		0x_2F, 0x_C4, 0x_02, 0x_32, 0x_DF, 0x_A9, 0x_3C, 0x_A2, 0x_4E, 0x_89, 0x_A6, 0x_27, 0x_28, 0x_2A, 0x_22,
		0x_47, 0x_B4, 0x_68, 0x_8B, 0x_F7, 0x_21, 0x_74, 0x_61, 0x_4B, 0x_EC, 0x_D5, 0x_35, 0x_7B, 0x_8E, 0x_51,
		0x_D8, 0x_C2, 0x_9E, 0x_8D, 0x_76, 0x_E9, 0x_EA, 0x_59, 0x_91, 0x_9B, 0x_08, 0x_92, 0x_31, 0x_60, 0x_6B,
		0x_CE, 0x_82, 0x_7F, 0x_34, 0x_C5, 0x_A8, 0x_C8, 0x_97, 0x_E2, 0x_3A, 0x_BC, 0x_57, 0x_6D, 0x_D3, 0x_80,
		0x_DC, 0x_AF, 0x_E3, 0x_79, 0x_E7, 0x_CF, 0x_1A, 0x_BF, 0x_3E, 0x_45, 0x_10, 0x_CA, 0x_81, 0x_1C, 0x_E4,
		0x_7A, 0x_8C, 0x_3D, 0x_98, 0x_3F, 0x_A5, 0x_E6, 0x_48, 0x_6F, 0x_A1, 0x_C0, 0x_AD, 0x_11, 0x_1D, 0x_2C,
		0x_FB, 0x_49, 0x_FA, 0x_87, 0x_D4, 0x_3B, 0x_C6,
	];

	helper(S, BASE, -338_133_254);
}
// endregion
// region: s_has_minus_1_in_base_2_and_insignificant_bytes
#[test]
fn s_has_minus_1_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2C, 0x_42, 0x_62, 0x_2C, 0x_62, 0x_2C, 0x_62, 0x_62, 0x_62, 0x_62, 0x_2C, 0x_62, 0x_62, 0x_62,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_62, 0x_62, 0x_2C, 0x_62, 0x_2C, 0x_62, 0x_62, 0x_62, 0x_62, 0x_2C, 0x_2C,
		0x_2C, 0x_62, 0x_62, 0x_2C, 0x_62, 0x_62, 0x_62, 0x_62, 0x_2C, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_2C,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_minus_10_in_base_2_and_insignificant_bytes
#[test]
fn s_has_minus_10_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_28, 0x_C2, 0x_28, 0x_C2, 0x_6F, 0x_C2, 0x_C2, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_28,
	];

	helper(S, BASE, -10);
}
// endregion
// region: s_has_minus_369_in_base_2_and_insignificant_bytes
#[test]
fn s_has_minus_369_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_30, 0x_E9, 0x_30, 0x_30, 0x_30, 0x_E9, 0x_E9, 0x_E9, 0x_30, 0x_BF, 0x_E9, 0x_30, 0x_E9, 0x_30,
		0x_30, 0x_30, 0x_30, 0x_E9, 0x_30, 0x_E9, 0x_30, 0x_30, 0x_30, 0x_E9, 0x_E9, 0x_E9, 0x_30, 0x_E9, 0x_30,
		0x_30, 0x_E9, 0x_30, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_E9, 0x_30,
	];

	helper(S, BASE, -369);
}
// endregion
// region: s_has_minus_9_123_in_base_2_and_insignificant_bytes
#[test]
fn s_has_minus_9_123_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_43, 0x_F7, 0x_F7, 0x_F7, 0x_43, 0x_43, 0x_43, 0x_F7, 0x_43, 0x_F7, 0x_F7, 0x_F7, 0x_43, 0x_43,
		0x_4C, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_43, 0x_F7, 0x_43, 0x_F7, 0x_43, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7,
		0x_F7, 0x_43, 0x_43, 0x_F7, 0x_F7, 0x_43, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_43,
	];

	helper(S, BASE, -9_123);
}
// endregion
// region: s_has_minus_81_609_in_base_2_and_insignificant_bytes
#[test]
fn s_has_minus_81_609_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_32, 0x_39, 0x_39, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_39, 0x_32, 0x_32, 0x_39, 0x_39, 0x_32,
		0x_39, 0x_39, 0x_32, 0x_73, 0x_39, 0x_32, 0x_32, 0x_39, 0x_32, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_32,
	];

	helper(S, BASE, -81_609);
}
// endregion
// region: s_has_minus_916_696_in_base_2_and_insignificant_bytes
#[test]
fn s_has_minus_916_696_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_7E, 0x_7E, 0x_0E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_0E, 0x_0E, 0x_7E, 0x_7E,
		0x_0E, 0x_7E, 0x_7E, 0x_0E, 0x_0E, 0x_0E, 0x_91, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_7E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_7E, 0x_0E, 0x_0E, 0x_7E, 0x_0E, 0x_0E, 0x_0E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_7E, 0x_0E, 0x_7E, 0x_0E, 0x_0E, 0x_7E, 0x_0E, 0x_0E, 0x_7E, 0x_7E,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_7E,
	];

	helper(S, BASE, -916_696);
}
// endregion
// region: s_has_minus_4_288_868_in_base_2_and_insignificant_bytes
#[test]
fn s_has_minus_4_288_868_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_73, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_73, 0x_31, 0x_73, 0x_73, 0x_73, 0x_31, 0x_31, 0x_31,
		0x_73, 0x_31, 0x_73, 0x_73, 0x_31, 0x_31, 0x_73, 0x_31, 0x_31, 0x_15, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_31, 0x_73,
	];

	helper(S, BASE, -4_288_868);
}
// endregion
// region: s_has_minus_67_904_463_in_base_2_and_insignificant_bytes
#[test]
fn s_has_minus_67_904_463_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_40, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_40, 0x_40, 0x_94, 0x_94, 0x_94, 0x_94, 0x_40,
		0x_94, 0x_94, 0x_94, 0x_40, 0x_40, 0x_40, 0x_40, 0x_94, 0x_94, 0x_40, 0x_40, 0x_40, 0x_40, 0x_7F, 0x_40,
		0x_94,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_40,
	];

	helper(S, BASE, -67_904_463);
}
// endregion
// region: s_has_minus_287_703_185_in_base_2_and_insignificant_bytes
#[test]
fn s_has_minus_287_703_185_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_15, 0x_57, 0x_57, 0x_57, 0x_15, 0x_57, 0x_57, 0x_15, 0x_57, 0x_57, 0x_15, 0x_15, 0x_57, 0x_57,
		0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_57, 0x_15, 0x_57, 0x_57, 0x_15, 0x_57, 0x_57, 0x_57, 0x_15,
		0x_A2, 0x_57, 0x_57, 0x_15, 0x_57, 0x_15, 0x_15, 0x_57, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_57, 0x_15,
	];

	helper(S, BASE, -287_703_185);
}
// endregion
// region: s_has_minus_3_in_base_3_and_insignificant_bytes
#[test]
fn s_has_minus_3_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_65, 0x_9B, 0x_9F, 0x_9B, 0x_F2, 0x_9B, 0x_65, 0x_65, 0x_65, 0x_9B, 0x_65, 0x_F2, 0x_65, 0x_F2,
		0x_9B, 0x_9B, 0x_9B, 0x_65, 0x_F2, 0x_65, 0x_9B, 0x_F2, 0x_9B, 0x_9B, 0x_9B, 0x_F2, 0x_F2, 0x_9B, 0x_65,
		0x_65, 0x_F2, 0x_65, 0x_65, 0x_9B, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_65, 0x_F2,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_minus_49_in_base_3_and_insignificant_bytes
#[test]
fn s_has_minus_49_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_21, 0x_81, 0x_21, 0x_21, 0x_90, 0x_81, 0x_30, 0x_81, 0x_81, 0x_81, 0x_21, 0x_81, 0x_30, 0x_21,
		0x_30, 0x_30, 0x_30, 0x_30, 0x_81, 0x_21, 0x_30, 0x_30, 0x_30, 0x_21, 0x_30, 0x_21, 0x_81, 0x_21, 0x_30,
		0x_81, 0x_30, 0x_21, 0x_21, 0x_81, 0x_21, 0x_30, 0x_30, 0x_81, 0x_81,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_21, 0x_81,
	];

	helper(S, BASE, -49);
}
// endregion
// region: s_has_minus_256_in_base_3_and_insignificant_bytes
#[test]
fn s_has_minus_256_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_15, 0x_5E, 0x_5E, 0x_15, 0x_15, 0x_15, 0x_3B, 0x_15, 0x_5E, 0x_AC, 0x_15, 0x_15, 0x_AC, 0x_AC,
		0x_AC, 0x_AC, 0x_AC, 0x_5E, 0x_AC, 0x_5E, 0x_5E, 0x_AC, 0x_15, 0x_5E, 0x_15, 0x_5E, 0x_AC, 0x_AC, 0x_15,
		0x_5E, 0x_15, 0x_15, 0x_5E, 0x_AC, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_15, 0x_AC,
	];

	helper(S, BASE, -256);
}
// endregion
// region: s_has_minus_9_645_in_base_3_and_insignificant_bytes
#[test]
fn s_has_minus_9_645_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_18, 0x_18, 0x_18, 0x_E4, 0x_DB, 0x_E4, 0x_E4, 0x_DB, 0x_E4, 0x_81, 0x_DB, 0x_E4, 0x_E4, 0x_DB,
		0x_DB, 0x_DB, 0x_18, 0x_18, 0x_18, 0x_18, 0x_DB, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_18, 0x_DB,
	];

	helper(S, BASE, -9_645);
}
// endregion
// region: s_has_minus_39_361_in_base_3_and_insignificant_bytes
#[test]
fn s_has_minus_39_361_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_33, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_33, 0x_33, 0x_06, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_33, 0x_CE,
	];

	helper(S, BASE, -39_361);
}
// endregion
// region: s_has_minus_236_764_in_base_3_and_insignificant_bytes
#[test]
fn s_has_minus_236_764_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_14, 0x_14, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_21, 0x_14, 0x_B3, 0x_B3, 0x_B3, 0x_14, 0x_EF, 0x_B3,
		0x_14, 0x_14, 0x_14, 0x_14, 0x_B3, 0x_21, 0x_B3, 0x_21, 0x_21, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_14, 0x_21,
	];

	helper(S, BASE, -236_764);
}
// endregion
// region: s_has_minus_1_091_168_in_base_3_and_insignificant_bytes
#[test]
fn s_has_minus_1_091_168_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_63, 0x_B8, 0x_B8, 0x_B2, 0x_B2, 0x_B8, 0x_63, 0x_63, 0x_B2, 0x_B8, 0x_B2, 0x_63, 0x_63, 0x_C5,
		0x_63, 0x_63, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_63, 0x_63, 0x_B2, 0x_63, 0x_63, 0x_B2, 0x_63, 0x_B8, 0x_B8,
		0x_B8, 0x_B8, 0x_63, 0x_63, 0x_B2, 0x_B8, 0x_B8, 0x_63,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_B2, 0x_63,
	];

	helper(S, BASE, -1_091_168);
}
// endregion
// region: s_has_minus_78_063_595_in_base_3_and_insignificant_bytes
#[test]
fn s_has_minus_78_063_595_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_4D, 0x_5A, 0x_4D, 0x_AE, 0x_5A, 0x_5A, 0x_5A, 0x_AE, 0x_AE, 0x_AE, 0x_4D, 0x_AE, 0x_4D, 0x_AE,
		0x_AE, 0x_5A, 0x_4D, 0x_07, 0x_4D, 0x_4D, 0x_4D, 0x_AE, 0x_AE, 0x_4D, 0x_5A, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_4D, 0x_5A,
	];

	helper(S, BASE, -78_063_595);
}
// endregion
// region: s_has_minus_497_758_802_in_base_3_and_insignificant_bytes
#[test]
fn s_has_minus_497_758_802_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_DD, 0x_FF, 0x_56, 0x_DD, 0x_56, 0x_FF, 0x_FF, 0x_DD, 0x_56, 0x_DD, 0x_56, 0x_FF, 0x_56, 0x_56,
		0x_FF, 0x_DD, 0x_FF, 0x_DD, 0x_56, 0x_A8, 0x_FF, 0x_FF, 0x_DD, 0x_DD, 0x_DD, 0x_FF, 0x_FF, 0x_FF, 0x_56,
		0x_56, 0x_56,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_DD, 0x_56,
	];

	helper(S, BASE, -497_758_802);
}
// endregion
// region: s_has_minus_1_in_base_5_and_insignificant_bytes
#[test]
fn s_has_minus_1_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2C, 0x_51, 0x_02, 0x_02, 0x_02, 0x_EB, 0x_02, 0x_2C, 0x_7E,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_2C, 0x_C9, 0x_02, 0x_EB,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_minus_82_in_base_5_and_insignificant_bytes
#[test]
fn s_has_minus_82_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_08, 0x_F6, 0x_9B, 0x_26, 0x_08, 0x_9B, 0x_08, 0x_B9, 0x_08, 0x_9B, 0x_E2, 0x_B9, 0x_F6, 0x_B9,
		0x_E2, 0x_9B, 0x_E2, 0x_08, 0x_E2, 0x_F6, 0x_9B, 0x_E2, 0x_E2, 0x_F6, 0x_9B, 0x_B9, 0x_F6, 0x_E2, 0x_B9,
		0x_9B, 0x_B9, 0x_9B, 0x_E2, 0x_08, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_B9, 0x_F6, 0x_9B, 0x_08, 0x_E2,
	];

	helper(S, BASE, -82);
}
// endregion
// region: s_has_minus_114_in_base_5_and_insignificant_bytes
#[test]
fn s_has_minus_114_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C4, 0x_40, 0x_C4, 0x_DA, 0x_C4, 0x_BA, 0x_F4, 0x_F4, 0x_40, 0x_F4, 0x_40, 0x_C4, 0x_BA, 0x_CE,
		0x_F4, 0x_C4, 0x_CE, 0x_CE, 0x_CE, 0x_BA, 0x_C4, 0x_BA, 0x_BA, 0x_BA, 0x_CE, 0x_C4, 0x_40, 0x_40, 0x_40,
		0x_C4,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_BA, 0x_40, 0x_F4, 0x_C4,
	];

	helper(S, BASE, -114);
}
// endregion
// region: s_has_minus_1_068_in_base_5_and_insignificant_bytes
#[test]
fn s_has_minus_1_068_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_7F, 0x_EA, 0x_BD, 0x_EA, 0x_EA, 0x_71, 0x_7F, 0x_16, 0x_7F, 0x_BD, 0x_EA, 0x_16, 0x_7F, 0x_AA,
		0x_AA, 0x_EA, 0x_AA, 0x_BD, 0x_16, 0x_16, 0x_AA, 0x_7F, 0x_BD, 0x_7F, 0x_AA, 0x_EA, 0x_16, 0x_AA, 0x_BD,
		0x_AA, 0x_16, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_7F, 0x_BD, 0x_EA, 0x_16,
	];

	helper(S, BASE, -1_068);
}
// endregion
// region: s_has_minus_38_171_in_base_5_and_insignificant_bytes
#[test]
fn s_has_minus_38_171_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C5, 0x_C5, 0x_F0, 0x_C1, 0x_F0, 0x_A4, 0x_F0, 0x_B7, 0x_A4, 0x_90, 0x_C5, 0x_A4, 0x_C1, 0x_C5,
		0x_A4, 0x_A4, 0x_F0, 0x_C5, 0x_C5, 0x_C1, 0x_C1, 0x_90, 0x_C1, 0x_A4, 0x_C5, 0x_90, 0x_A4, 0x_90, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_F0, 0x_C5, 0x_90, 0x_A4,
	];

	helper(S, BASE, -38_171);
}
// endregion
// region: s_has_minus_323_189_in_base_5_and_insignificant_bytes
#[test]
fn s_has_minus_323_189_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_8C, 0x_CE, 0x_93, 0x_30, 0x_CE, 0x_30, 0x_30, 0x_8C, 0x_B7, 0x_8C, 0x_5B, 0x_CE, 0x_5B, 0x_30,
		0x_30, 0x_CE, 0x_30, 0x_CE, 0x_8C, 0x_CE, 0x_30, 0x_8C, 0x_5B, 0x_CE, 0x_30, 0x_8C, 0x_30, 0x_93, 0x_30,
		0x_30, 0x_93, 0x_CE, 0x_CE, 0x_CE, 0x_30, 0x_5B, 0x_CE, 0x_CE, 0x_5B, 0x_93, 0x_5B, 0x_CE, 0x_93, 0x_8C,
		0x_30, 0x_8C, 0x_CE, 0x_30, 0x_CE, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_5B, 0x_30, 0x_93, 0x_8C,
	];

	helper(S, BASE, -323_189);
}
// endregion
// region: s_has_minus_2_687_889_in_base_5_and_insignificant_bytes
#[test]
fn s_has_minus_2_687_889_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C4, 0x_C4, 0x_3A, 0x_7D, 0x_11, 0x_11, 0x_86, 0x_11, 0x_7D, 0x_3A, 0x_50, 0x_3A, 0x_7D, 0x_C4,
		0x_3A, 0x_3A, 0x_3A, 0x_86, 0x_3A, 0x_3A, 0x_11, 0x_86, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_C4, 0x_7D, 0x_86, 0x_3A,
	];

	helper(S, BASE, -2_687_889);
}
// endregion
// region: s_has_minus_83_240_168_in_base_5_and_insignificant_bytes
#[test]
fn s_has_minus_83_240_168_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_6F, 0x_EB, 0x_AB, 0x_EB, 0x_F4, 0x_AB, 0x_6F, 0x_B4, 0x_6F, 0x_6F, 0x_EB, 0x_EB, 0x_B0, 0x_EB,
		0x_EB, 0x_EB, 0x_6F, 0x_EB, 0x_EB, 0x_F4, 0x_B4, 0x_6F, 0x_EB, 0x_F4, 0x_B4, 0x_6F, 0x_B4, 0x_F4, 0x_AB,
		0x_AB, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_6F, 0x_AB, 0x_EB, 0x_B4,
	];

	helper(S, BASE, -83_240_168);
}
// endregion
// region: s_has_minus_765_507_651_in_base_5_and_insignificant_bytes
#[test]
fn s_has_minus_765_507_651_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_A7, 0x_BB, 0x_A7, 0x_79, 0x_14, 0x_A7, 0x_C3, 0x_C3, 0x_C3, 0x_79, 0x_79, 0x_BB, 0x_79, 0x_DC,
		0x_14, 0x_C3, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_79, 0x_C3, 0x_A7, 0x_14,
	];

	helper(S, BASE, -765_507_651);
}
// endregion
// region: s_has_minus_4_in_base_7_and_insignificant_bytes
#[test]
fn s_has_minus_4_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2C, 0x_FC, 0x_D1, 0x_15, 0x_2C, 0x_D1, 0x_DD, 0x_B8, 0x_15, 0x_15, 0x_D1, 0x_D1, 0x_D1, 0x_D1,
		0x_DD, 0x_DD, 0x_B8, 0x_B8, 0x_5E, 0x_A9, 0x_A9, 0x_15, 0x_15, 0x_D1, 0x_2C, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_15, 0x_5E, 0x_A9, 0x_2C, 0x_D1, 0x_DD,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_minus_79_in_base_7_and_insignificant_bytes
#[test]
fn s_has_minus_79_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_9E, 0x_79, 0x_FC, 0x_15, 0x_FC, 0x_79, 0x_FC, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_9E, 0x_FC, 0x_6D, 0x_79, 0x_D9, 0x_88,
	];

	helper(S, BASE, -79);
}
// endregion
// region: s_has_minus_986_in_base_7_and_insignificant_bytes
#[test]
fn s_has_minus_986_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B9, 0x_55, 0x_77, 0x_55, 0x_71, 0x_9F, 0x_55, 0x_B9, 0x_FD, 0x_42, 0x_42, 0x_77, 0x_77, 0x_77,
		0x_55, 0x_55, 0x_55, 0x_C8, 0x_42, 0x_42, 0x_FD, 0x_55, 0x_42, 0x_9F, 0x_9F, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_9F, 0x_B9, 0x_C8, 0x_FD, 0x_42, 0x_55,
	];

	helper(S, BASE, -986);
}
// endregion
// region: s_has_minus_5_179_in_base_7_and_insignificant_bytes
#[test]
fn s_has_minus_5_179_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_27, 0x_9A, 0x_7C, 0x_9F, 0x_17, 0x_A5, 0x_27, 0x_17, 0x_17, 0x_CA, 0x_17, 0x_96, 0x_9A, 0x_7C,
		0x_17, 0x_27, 0x_9A, 0x_17, 0x_CA, 0x_17, 0x_9F, 0x_CA, 0x_9A, 0x_17, 0x_9A, 0x_96, 0x_27, 0x_7C, 0x_96,
		0x_9A, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_9A, 0x_27, 0x_96, 0x_9F, 0x_CA, 0x_17,
	];

	helper(S, BASE, -5_179);
}
// endregion
// region: s_has_minus_11_990_in_base_7_and_insignificant_bytes
#[test]
fn s_has_minus_11_990_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_75, 0x_13, 0x_13, 0x_75, 0x_13, 0x_1D, 0x_1C, 0x_D7, 0x_75, 0x_49, 0x_49, 0x_1C, 0x_C8, 0x_1C,
		0x_49, 0x_75, 0x_87, 0x_C8, 0x_1C, 0x_D7, 0x_1C, 0x_87, 0x_1C, 0x_1C, 0x_D7, 0x_87, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_C8, 0x_87, 0x_1C, 0x_75, 0x_49, 0x_13,
	];

	helper(S, BASE, -11_990);
}
// endregion
// region: s_has_minus_361_906_in_base_7_and_insignificant_bytes
#[test]
fn s_has_minus_361_906_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_A4, 0x_49, 0x_A4, 0x_AA, 0x_49, 0x_AA, 0x_D2, 0x_F0, 0x_D2, 0x_A4, 0x_49, 0x_A4, 0x_6C, 0x_AA,
		0x_49, 0x_39, 0x_E8, 0x_39, 0x_6C, 0x_6C, 0x_39, 0x_49, 0x_AA, 0x_6C, 0x_A4, 0x_D2, 0x_A4, 0x_49, 0x_E8,
		0x_39, 0x_A4, 0x_39, 0x_D2, 0x_49, 0x_D2, 0x_D2, 0x_49, 0x_AA, 0x_E8, 0x_6C, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_6C, 0x_39, 0x_A4, 0x_E8, 0x_AA, 0x_D2,
	];

	helper(S, BASE, -361_906);
}
// endregion
// region: s_has_minus_7_190_238_in_base_7_and_insignificant_bytes
#[test]
fn s_has_minus_7_190_238_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_44, 0x_44, 0x_68, 0x_07, 0x_68, 0x_79, 0x_68, 0x_4F, 0x_99, 0x_92, 0x_07, 0x_4F, 0x_F4, 0x_99,
		0x_4F, 0x_44, 0x_79, 0x_44, 0x_F4, 0x_68, 0x_79, 0x_44, 0x_F4, 0x_4F, 0x_79, 0x_68, 0x_68, 0x_4F, 0x_07,
		0x_44,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_44, 0x_F4, 0x_4F, 0x_79, 0x_68, 0x_99,
	];

	helper(S, BASE, -7_190_238);
}
// endregion
// region: s_has_minus_30_811_387_in_base_7_and_insignificant_bytes
#[test]
fn s_has_minus_30_811_387_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_29, 0x_F9, 0x_F9, 0x_35, 0x_17, 0x_29, 0x_61, 0x_29, 0x_29, 0x_3D, 0x_29, 0x_35, 0x_17, 0x_35,
		0x_35, 0x_33, 0x_61, 0x_F9, 0x_C4, 0x_C4, 0x_33, 0x_29, 0x_F9, 0x_61, 0x_17, 0x_C4, 0x_17, 0x_C4, 0x_35,
		0x_61, 0x_F9, 0x_C4, 0x_17, 0x_61, 0x_33, 0x_17, 0x_C4, 0x_61, 0x_61, 0x_35, 0x_29, 0x_17, 0x_33, 0x_35,
		0x_29, 0x_61,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_17, 0x_F9, 0x_33, 0x_C4, 0x_29, 0x_35,
	];

	helper(S, BASE, -30_811_387);
}
// endregion
// region: s_has_minus_456_587_665_in_base_7_and_insignificant_bytes
#[test]
fn s_has_minus_456_587_665_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_1A, 0x_66, 0x_A4, 0x_1A, 0x_A4, 0x_F5, 0x_CF, 0x_66, 0x_A4, 0x_66, 0x_A4, 0x_91, 0x_A4, 0x_36,
		0x_66, 0x_66, 0x_F5, 0x_A1, 0x_1A, 0x_CF, 0x_66, 0x_36, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_A1, 0x_1A, 0x_A4, 0x_CF, 0x_66, 0x_36, 0x_F5,
	];

	helper(S, BASE, -456_587_665);
}
// endregion
// region: s_has_minus_3_in_base_11_and_insignificant_bytes
#[test]
fn s_has_minus_3_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B2, 0x_CC, 0x_02, 0x_F6, 0x_B1, 0x_EA, 0x_EA, 0x_C2, 0x_02, 0x_B1, 0x_F6, 0x_EA, 0x_F6, 0x_F6,
		0x_F6, 0x_C2, 0x_EA, 0x_02, 0x_EA, 0x_D6, 0x_02, 0x_39, 0x_EA, 0x_C2, 0x_B1, 0x_C2, 0x_D6, 0x_C7, 0x_B2,
		0x_D6, 0x_DD, 0x_D6, 0x_DD, 0x_02, 0x_C2, 0x_D6, 0x_39, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_39, 0x_D6, 0x_B2, 0x_EA, 0x_B1, 0x_C7, 0x_C2, 0x_54, 0x_DD, 0x_F6,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_minus_44_in_base_11_and_insignificant_bytes
#[test]
fn s_has_minus_44_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_35, 0x_F7, 0x_87, 0x_01, 0x_68, 0x_BF,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_CD, 0x_71, 0x_4E, 0x_35, 0x_C4, 0x_01, 0x_F6, 0x_BF, 0x_68, 0x_3E,
	];

	helper(S, BASE, -44);
}
// endregion
// region: s_has_minus_720_in_base_11_and_insignificant_bytes
#[test]
fn s_has_minus_720_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_DA, 0x_78, 0x_DA, 0x_A4, 0x_66, 0x_52, 0x_4D, 0x_3E, 0x_E5, 0x_DA, 0x_52, 0x_E5, 0x_52, 0x_3E,
		0x_7F, 0x_E5, 0x_3E, 0x_70, 0x_7F, 0x_78, 0x_15, 0x_78, 0x_15, 0x_70, 0x_3E, 0x_15, 0x_3E, 0x_E5, 0x_15,
		0x_15, 0x_DA, 0x_DA, 0x_66, 0x_15, 0x_6B, 0x_4D, 0x_6B, 0x_E5, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_4D, 0x_70, 0x_52, 0x_66, 0x_DA, 0x_6B, 0x_7F, 0x_3E, 0x_15, 0x_78,
	];

	helper(S, BASE, -720);
}
// endregion
// region: s_has_minus_3_205_in_base_11_and_insignificant_bytes
#[test]
fn s_has_minus_3_205_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_35, 0x_87, 0x_8A, 0x_87, 0x_A7, 0x_1C, 0x_87, 0x_35, 0x_CF, 0x_6E, 0x_38, 0x_CF, 0x_8A, 0x_CF,
		0x_6E, 0x_59, 0x_87, 0x_FB, 0x_6A, 0x_CF, 0x_35, 0x_87, 0x_38, 0x_87, 0x_6A, 0x_FB, 0x_38, 0x_87, 0x_8A,
		0x_38, 0x_85, 0x_59, 0x_CF, 0x_1C, 0x_FB, 0x_FB, 0x_FB, 0x_87, 0x_85, 0x_59, 0x_FB, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_85, 0x_35, 0x_6E, 0x_87, 0x_8A, 0x_6A, 0x_1C, 0x_38, 0x_FB, 0x_CF,
	];

	helper(S, BASE, -3_205);
}
// endregion
// region: s_has_minus_69_195_in_base_11_and_insignificant_bytes
#[test]
fn s_has_minus_69_195_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_AE, 0x_08, 0x_96, 0x_93, 0x_E6, 0x_2A, 0x_4E, 0x_B3, 0x_93, 0x_8E, 0x_B8, 0x_87, 0x_93, 0x_AE,
		0x_93, 0x_8E, 0x_4E, 0x_4E, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_A5, 0x_4E, 0x_B8, 0x_B3, 0x_AE, 0x_E6, 0x_87, 0x_08, 0x_8E, 0x_93, 0x_96,
	];

	helper(S, BASE, -69_195);
}
// endregion
// region: s_has_minus_135_878_in_base_11_and_insignificant_bytes
#[test]
fn s_has_minus_135_878_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_76, 0x_75, 0x_79, 0x_70, 0x_02, 0x_9C, 0x_24, 0x_75, 0x_76, 0x_B9, 0x_42, 0x_94, 0x_AC, 0x_76,
		0x_B9, 0x_AC, 0x_24, 0x_70, 0x_79, 0x_94, 0x_AC, 0x_B9, 0x_3D, 0x_02, 0x_24, 0x_42, 0x_42, 0x_02,
	];
	const BASE: &[u8] = &[
		0x_79, 0x_24, 0x_3D, 0x_75, 0x_AC, 0x_B9, 0x_02, 0x_42, 0x_94, 0x_76, 0x_70,
	];

	helper(S, BASE, -135_878);
}
// endregion
// region: s_has_minus_3_421_565_in_base_11_and_insignificant_bytes
#[test]
fn s_has_minus_3_421_565_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_40, 0x_15, 0x_A9, 0x_D1, 0x_D1, 0x_E5, 0x_E5, 0x_E2, 0x_4E, 0x_E5, 0x_E5, 0x_A9, 0x_8F, 0x_E5,
		0x_A9, 0x_D1, 0x_E5,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_40, 0x_A9, 0x_8F, 0x_E5, 0x_49, 0x_B8, 0x_D1, 0x_72, 0x_4E, 0x_15,
	];

	helper(S, BASE, -3_421_565);
}
// endregion
// region: s_has_minus_81_745_071_in_base_11_and_insignificant_bytes
#[test]
fn s_has_minus_81_745_071_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_48, 0x_AD, 0x_D7, 0x_11, 0x_B6, 0x_B6, 0x_D7, 0x_D7, 0x_CB, 0x_CD, 0x_FB, 0x_48, 0x_97, 0x_AD,
		0x_97, 0x_D7, 0x_D7, 0x_7A, 0x_48, 0x_48, 0x_13, 0x_97, 0x_D7, 0x_AD, 0x_D7, 0x_F6, 0x_FB, 0x_D7, 0x_AD,
		0x_FB, 0x_7A, 0x_CD, 0x_7A, 0x_13, 0x_D7, 0x_B6, 0x_CD, 0x_F6, 0x_CD, 0x_97, 0x_CD, 0x_97, 0x_97, 0x_FB,
		0x_97, 0x_D7, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_D7, 0x_AD, 0x_B6, 0x_48, 0x_97, 0x_11, 0x_FB, 0x_13, 0x_CD, 0x_7A,
	];

	helper(S, BASE, -81_745_071);
}
// endregion
// region: s_has_minus_814_923_416_in_base_11_and_insignificant_bytes
#[test]
fn s_has_minus_814_923_416_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_4C, 0x_33, 0x_7D, 0x_6C, 0x_6C, 0x_EE, 0x_6C, 0x_DA, 0x_E8, 0x_C0, 0x_E8, 0x_EE, 0x_33, 0x_DA,
		0x_71, 0x_71, 0x_60, 0x_4C, 0x_33, 0x_33, 0x_60, 0x_71, 0x_64, 0x_DA,
	];
	const BASE: &[u8] = &[
		0x_6C, 0x_64, 0x_DA, 0x_4C, 0x_EE, 0x_60, 0x_D0, 0x_71, 0x_33, 0x_7D, 0x_E8,
	];

	helper(S, BASE, -814_923_416);
}
// endregion
// region: s_has_minus_1_in_base_13_and_insignificant_bytes
#[test]
fn s_has_minus_1_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_1E, 0x_A0, 0x_28, 0x_F3, 0x_08, 0x_53, 0x_92, 0x_28, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_53, 0x_1E, 0x_76, 0x_66, 0x_EF, 0x_F3, 0x_28, 0x_04, 0x_23, 0x_92, 0x_D1, 0x_08, 0x_F8,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_minus_34_in_base_13_and_insignificant_bytes
#[test]
fn s_has_minus_34_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_BB, 0x_8D, 0x_46, 0x_BB, 0x_8B, 0x_8B, 0x_43, 0x_F5, 0x_1B, 0x_6C, 0x_6C, 0x_F5, 0x_57, 0x_57,
		0x_1D, 0x_79, 0x_F5, 0x_8D, 0x_8B, 0x_BB, 0x_8B, 0x_57, 0x_1D, 0x_F5, 0x_BB, 0x_57, 0x_6C,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_1D, 0x_BB, 0x_79, 0x_37, 0x_AC, 0x_43, 0x_6C, 0x_8D, 0x_8B, 0x_DF, 0x_57, 0x_1B,
	];

	helper(S, BASE, -34);
}
// endregion
// region: s_has_minus_206_in_base_13_and_insignificant_bytes
#[test]
fn s_has_minus_206_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_08, 0x_89, 0x_42, 0x_33, 0x_66, 0x_1C, 0x_EE, 0x_C9, 0x_D4, 0x_D4, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_08, 0x_89, 0x_37, 0x_75, 0x_EE, 0x_D5, 0x_1C, 0x_D4, 0x_66, 0x_4B, 0x_42, 0x_FB,
	];

	helper(S, BASE, -206);
}
// endregion
// region: s_has_minus_2_584_in_base_13_and_insignificant_bytes
#[test]
fn s_has_minus_2_584_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_70, 0x_CE, 0x_A1, 0x_BC, 0x_FA, 0x_51, 0x_7A, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_70, 0x_CE, 0x_A1, 0x_7A, 0x_E7, 0x_A0, 0x_51, 0x_F7, 0x_39, 0x_BC, 0x_D9, 0x_98,
	];

	helper(S, BASE, -2_584);
}
// endregion
// region: s_has_minus_14_819_in_base_13_and_insignificant_bytes
#[test]
fn s_has_minus_14_819_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_7E, 0x_A5, 0x_63, 0x_F7, 0x_48, 0x_A5, 0x_A5, 0x_F7, 0x_B8, 0x_BC, 0x_81, 0x_36, 0x_8C, 0x_81,
		0x_B8, 0x_F7, 0x_36, 0x_BC, 0x_FB, 0x_A5, 0x_36, 0x_A5, 0x_FB, 0x_FB, 0x_36, 0x_A8, 0x_A8, 0x_B8, 0x_BC,
		0x_63, 0x_A5,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_55, 0x_8C, 0x_81, 0x_22, 0x_BC, 0x_7E, 0x_36, 0x_63, 0x_A5, 0x_FB, 0x_B8, 0x_F7,
	];

	helper(S, BASE, -14_819);
}
// endregion
// region: s_has_minus_154_400_in_base_13_and_insignificant_bytes
#[test]
fn s_has_minus_154_400_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_71, 0x_71, 0x_D1, 0x_E2, 0x_39, 0x_47, 0x_D0, 0x_ED, 0x_71, 0x_66, 0x_E2, 0x_ED, 0x_71, 0x_D1,
		0x_39, 0x_54, 0x_54, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_44, 0x_ED, 0x_D1, 0x_D0, 0x_71, 0x_D2, 0x_E2, 0x_31, 0x_DD, 0x_66, 0x_54, 0x_39,
	];

	helper(S, BASE, -154_400);
}
// endregion
// region: s_has_minus_6_663_648_in_base_13_and_insignificant_bytes
#[test]
fn s_has_minus_6_663_648_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_36, 0x_73, 0x_99, 0x_73, 0x_B9, 0x_04, 0x_73, 0x_AB, 0x_73, 0x_36, 0x_FA, 0x_1C, 0x_B9, 0x_C8,
		0x_FA, 0x_A0, 0x_B9, 0x_73, 0x_04, 0x_FA, 0x_76, 0x_1C, 0x_1C, 0x_FA, 0x_C8, 0x_76, 0x_36, 0x_B2, 0x_73,
		0x_73, 0x_99, 0x_C8, 0x_C8, 0x_1C, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_B9, 0x_36, 0x_AC, 0x_FA, 0x_73, 0x_C8, 0x_1C, 0x_B2, 0x_6C, 0x_76, 0x_A0, 0x_04, 0x_99,
	];

	helper(S, BASE, -6_663_648);
}
// endregion
// region: s_has_minus_19_027_721_in_base_13_and_insignificant_bytes
#[test]
fn s_has_minus_19_027_721_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_58, 0x_3B, 0x_58, 0x_D9, 0x_30, 0x_90, 0x_15, 0x_17, 0x_30, 0x_3B, 0x_30, 0x_43, 0x_2A, 0x_87,
		0x_43, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_87, 0x_D9, 0x_58, 0x_D0, 0x_2A, 0x_43, 0x_B5, 0x_78, 0x_16, 0x_30, 0x_15, 0x_3B,
	];

	helper(S, BASE, -19_027_721);
}
// endregion
// region: s_has_minus_383_818_357_in_base_13_and_insignificant_bytes
#[test]
fn s_has_minus_383_818_357_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F5, 0x_91, 0x_F5, 0x_A3, 0x_6F, 0x_91, 0x_6F, 0x_9E, 0x_4A, 0x_64, 0x_F6, 0x_F5, 0x_91, 0x_9E,
		0x_AD, 0x_65, 0x_9E, 0x_33, 0x_65, 0x_D2, 0x_47, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_91, 0x_65, 0x_F6, 0x_D2, 0x_33, 0x_F5, 0x_6F, 0x_64, 0x_A3, 0x_4B, 0x_47, 0x_AD,
	];

	helper(S, BASE, -383_818_357);
}
// endregion
// region: s_has_minus_3_in_base_19_and_insignificant_bytes
#[test]
fn s_has_minus_3_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B0, 0x_3D, 0x_B0, 0x_78, 0x_C9, 0x_DA, 0x_10, 0x_21, 0x_33, 0x_EE, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_D2, 0x_80, 0x_B0, 0x_ED, 0x_31, 0x_78, 0x_03, 0x_4F, 0x_DA, 0x_EE, 0x_21, 0x_C9, 0x_F2, 0x_33,
		0x_1F, 0x_30, 0x_10, 0x_93,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_minus_81_in_base_19_and_insignificant_bytes
#[test]
fn s_has_minus_81_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_FE, 0x_71, 0x_F3, 0x_78, 0x_DD, 0x_9F, 0x_43, 0x_71, 0x_43, 0x_D1, 0x_81, 0x_06, 0x_8E, 0x_06,
		0x_43, 0x_DD, 0x_44, 0x_14, 0x_3D, 0x_9F, 0x_34, 0x_44, 0x_3D, 0x_95, 0x_D1, 0x_78, 0x_06, 0x_8E, 0x_25,
		0x_44, 0x_81, 0x_95, 0x_DD, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_DD, 0x_81, 0x_8E, 0x_FE, 0x_71, 0x_D1, 0x_44, 0x_34, 0x_95, 0x_43, 0x_55, 0x_78, 0x_E1, 0x_3D,
		0x_06, 0x_31, 0x_25, 0x_9F,
	];

	helper(S, BASE, -81);
}
// endregion
// region: s_has_minus_396_in_base_19_and_insignificant_bytes
#[test]
fn s_has_minus_396_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_57, 0x_57, 0x_C2, 0x_FB, 0x_26, 0x_9A, 0x_DF, 0x_C4, 0x_D2, 0x_26, 0x_21, 0x_9C, 0x_C2, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_57, 0x_D7, 0x_85, 0x_E0, 0x_21, 0x_84, 0x_D2, 0x_26, 0x_8F, 0x_BE, 0x_9A, 0x_9C, 0x_C4, 0x_3C,
		0x_AB, 0x_C2, 0x_DF, 0x_9E,
	];

	helper(S, BASE, -396);
}
// endregion
// region: s_has_minus_4_752_in_base_19_and_insignificant_bytes
#[test]
fn s_has_minus_4_752_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_38, 0x_29, 0x_5F, 0x_15, 0x_49, 0x_2F, 0x_5F, 0x_41, 0x_7F, 0x_C1, 0x_4A, 0x_4A, 0x_C7, 0x_2F,
		0x_5F, 0x_38, 0x_38, 0x_54, 0x_26, 0x_4A, 0x_29, 0x_33, 0x_54, 0x_49, 0x_49, 0x_8C, 0x_26, 0x_8C, 0x_33,
		0x_C1, 0x_54, 0x_41, 0x_8C, 0x_5F, 0x_33, 0x_F0, 0x_49, 0x_E0, 0x_C1, 0x_40, 0x_38, 0x_2F, 0x_E0, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_8A, 0x_5F, 0x_29, 0x_41, 0x_C1, 0x_2F, 0x_F0, 0x_54, 0x_33, 0x_49, 0x_4A, 0x_40, 0x_38, 0x_8C,
		0x_E0, 0x_C7, 0x_46, 0x_7F,
	];

	helper(S, BASE, -4_752);
}
// endregion
// region: s_has_minus_34_990_in_base_19_and_insignificant_bytes
#[test]
fn s_has_minus_34_990_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_EC, 0x_C9, 0x_88, 0x_CA, 0x_B5, 0x_C9, 0x_40, 0x_51, 0x_40, 0x_F1, 0x_F1, 0x_EC, 0x_17, 0x_88,
		0x_EC, 0x_A6, 0x_8E, 0x_EC, 0x_F1, 0x_9C, 0x_8E, 0x_9C, 0x_CE, 0x_A6, 0x_5F, 0x_F1, 0x_9C, 0x_8E, 0x_F1,
		0x_41, 0x_2A, 0x_A6, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_C9, 0x_5F, 0x_F1, 0x_41, 0x_EC, 0x_40, 0x_4E, 0x_CE, 0x_17, 0x_A6, 0x_CA, 0x_EF, 0x_29, 0x_2A,
		0x_8E, 0x_12, 0x_88, 0x_51,
	];

	helper(S, BASE, -34_990);
}
// endregion
// region: s_has_minus_160_495_in_base_19_and_insignificant_bytes
#[test]
fn s_has_minus_160_495_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_7D, 0x_B6, 0x_57, 0x_BD, 0x_33, 0x_9E, 0x_32, 0x_E9, 0x_7D, 0x_BA, 0x_57, 0x_B2, 0x_CB, 0x_BA,
		0x_BA, 0x_65, 0x_4C, 0x_A9, 0x_A9, 0x_9C, 0x_E9, 0x_E9, 0x_17, 0x_B2, 0x_32, 0x_37, 0x_37, 0x_4C, 0x_A9,
		0x_CC, 0x_B6, 0x_E9, 0x_4C, 0x_37, 0x_65, 0x_9C, 0x_37, 0x_91, 0x_C4, 0x_37, 0x_E9, 0x_B6, 0x_4C, 0x_A9,
		0x_91, 0x_37, 0x_B6, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_7D, 0x_33, 0x_4C, 0x_B6, 0x_32, 0x_37, 0x_57, 0x_A9, 0x_B2, 0x_91, 0x_BD, 0x_CC, 0x_9C, 0x_BA,
		0x_17, 0x_65, 0x_E9, 0x_CB,
	];

	helper(S, BASE, -160_495);
}
// endregion
// region: s_has_minus_5_465_386_in_base_19_and_insignificant_bytes
#[test]
fn s_has_minus_5_465_386_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B4, 0x_F0, 0x_2F, 0x_52, 0x_49, 0x_2F, 0x_F7, 0x_88, 0x_07, 0x_43, 0x_0E, 0x_BE, 0x_64, 0x_B4,
		0x_88, 0x_52, 0x_52, 0x_0E, 0x_43, 0x_29, 0x_8F, 0x_FF, 0x_EA, 0x_BE, 0x_FF, 0x_EA, 0x_88, 0x_07, 0x_0E,
		0x_52, 0x_BE, 0x_52, 0x_8F, 0x_49, 0x_6F, 0x_52, 0x_88, 0x_8F, 0x_66, 0x_EA, 0x_6F, 0x_B4, 0x_22, 0x_6F,
		0x_F0, 0x_EA, 0x_6F, 0x_52, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_43, 0x_28, 0x_B4, 0x_F0, 0x_0E, 0x_6F, 0x_22, 0x_64, 0x_88, 0x_FF, 0x_49, 0x_07, 0x_BE, 0x_8F, 0x_29,
		0x_52, 0x_66, 0x_2F, 0x_EA,
	];

	helper(S, BASE, -5_465_386);
}
// endregion
// region: s_has_minus_75_088_044_in_base_19_and_insignificant_bytes
#[test]
fn s_has_minus_75_088_044_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_DE, 0x_7E, 0x_87, 0x_CD, 0x_C4, 0x_28, 0x_87, 0x_1D, 0x_05, 0x_87, 0x_C3, 0x_1A, 0x_E8, 0x_FE,
		0x_3A, 0x_87, 0x_D1, 0x_DE, 0x_3A, 0x_1A, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_D1, 0x_DE, 0x_28, 0x_CD, 0x_4F, 0x_6B, 0x_87, 0x_C4, 0x_F2, 0x_BA, 0x_C3, 0x_7E, 0x_1A, 0x_E8, 0x_3A,
		0x_5E, 0x_57, 0x_FE, 0x_05,
	];

	helper(S, BASE, -75_088_044);
}
// endregion
// region: s_has_minus_135_323_196_in_base_19_and_insignificant_bytes
#[test]
fn s_has_minus_135_323_196_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_A6, 0x_4F, 0x_BA, 0x_44, 0x_A0, 0x_CB, 0x_CB, 0x_F2, 0x_44, 0x_E2, 0x_0F, 0x_A6, 0x_4F, 0x_0F,
		0x_04, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_58, 0x_A6, 0x_E2, 0x_46, 0x_A0, 0x_A8, 0x_44, 0x_FD, 0x_CB, 0x_16, 0x_B7, 0x_BA, 0x_87, 0x_04,
		0x_0F, 0x_4F, 0x_89, 0x_77,
	];

	helper(S, BASE, -135_323_196);
}
// endregion
// region: s_has_minus_5_in_base_42_and_insignificant_bytes
#[test]
fn s_has_minus_5_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_40, 0x_92, 0x_15, 0x_F1, 0x_D2, 0x_24, 0x_EC, 0x_F1, 0x_21, 0x_54, 0x_24, 0x_67, 0x_D3, 0x_DF,
		0x_EF, 0x_6D, 0x_11, 0x_41, 0x_90, 0x_C3, 0x_21, 0x_EC, 0x_74, 0x_AA, 0x_54, 0x_24, 0x_54, 0x_1F, 0x_6D,
		0x_54, 0x_DE, 0x_EF, 0x_2F, 0x_90, 0x_4A, 0x_06, 0x_21, 0x_41, 0x_2F, 0x_24, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_F1, 0x_4A, 0x_C3, 0x_01, 0x_40, 0x_AA, 0x_15, 0x_59, 0x_21, 0x_54, 0x_41, 0x_06, 0x_90, 0x_C1,
		0x_1F, 0x_62, 0x_74, 0x_2F, 0x_11, 0x_3E, 0x_A3, 0x_EF, 0x_D2, 0x_DF, 0x_AF, 0x_24, 0x_AB, 0x_EC, 0x_BB,
		0x_8B, 0x_F9, 0x_D3, 0x_FF, 0x_6D, 0x_EB, 0x_5D, 0x_67, 0x_DE, 0x_12, 0x_6F, 0x_CB,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_minus_71_in_base_42_and_insignificant_bytes
#[test]
fn s_has_minus_71_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_1B, 0x_F1, 0x_38, 0x_AB, 0x_7C, 0x_71, 0x_D1, 0x_33, 0x_14, 0x_1B, 0x_B5, 0x_C4, 0x_74, 0x_33,
		0x_6C, 0x_35, 0x_5B, 0x_08, 0x_CF, 0x_5C, 0x_3B, 0x_8A, 0x_D1, 0x_74, 0x_85, 0x_1B, 0x_31, 0x_01, 0x_45,
		0x_CF, 0x_74, 0x_07, 0x_7C, 0x_E3, 0x_5C, 0x_1A, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_1B, 0x_F6, 0x_CF, 0x_71, 0x_AB, 0x_5B, 0x_D1, 0x_85, 0x_07, 0x_08, 0x_37, 0x_AF, 0x_7C, 0x_74,
		0x_45, 0x_6C, 0x_31, 0x_8E, 0x_A0, 0x_B5, 0x_E6, 0x_3B, 0x_C4, 0x_5C, 0x_12, 0x_19, 0x_FA, 0x_F2, 0x_F1,
		0x_35, 0x_33, 0x_DA, 0x_14, 0x_3C, 0x_E3, 0x_8A, 0x_01, 0x_AC, 0x_02, 0x_30, 0x_1A,
	];

	helper(S, BASE, -71);
}
// endregion
// region: s_has_minus_719_in_base_42_and_insignificant_bytes
#[test]
fn s_has_minus_719_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C0, 0x_96, 0x_08, 0x_30, 0x_7C, 0x_86, 0x_9D, 0x_9F, 0x_B1, 0x_BC, 0x_96, 0x_01, 0x_C2, 0x_7C,
		0x_CD, 0x_0F, 0x_55, 0x_CD, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_DB, 0x_86, 0x_B1, 0x_F0, 0x_96, 0x_29, 0x_E4, 0x_CD, 0x_0F, 0x_37, 0x_61, 0x_DE, 0x_C1, 0x_54,
		0x_BE, 0x_48, 0x_C0, 0x_1D, 0x_55, 0x_BC, 0x_EA, 0x_AD, 0x_30, 0x_9F, 0x_7C, 0x_C2, 0x_B0, 0x_56, 0x_73,
		0x_CA, 0x_66, 0x_A7, 0x_01, 0x_11, 0x_F2, 0x_F4, 0x_A0, 0x_07, 0x_F5, 0x_9D, 0x_FD,
	];

	helper(S, BASE, -719);
}
// endregion
// region: s_has_minus_7_260_in_base_42_and_insignificant_bytes
#[test]
fn s_has_minus_7_260_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_DC, 0x_DC, 0x_42, 0x_F7, 0x_85, 0x_E5, 0x_66, 0x_CA, 0x_B9, 0x_16, 0x_16, 0x_6B, 0x_1A, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_D5, 0x_A9, 0x_99, 0x_3A, 0x_DC, 0x_94, 0x_66, 0x_85, 0x_5D, 0x_D9, 0x_6C, 0x_61, 0x_1C, 0x_A3, 0x_C1,
		0x_8D, 0x_70, 0x_E7, 0x_1A, 0x_BE, 0x_06, 0x_4E, 0x_C9, 0x_EF, 0x_43, 0x_16, 0x_B9, 0x_9E, 0x_FA, 0x_D6,
		0x_CA, 0x_E5, 0x_6B, 0x_E3, 0x_5F, 0x_82, 0x_42, 0x_54, 0x_67, 0x_79, 0x_2C, 0x_FF,
	];

	helper(S, BASE, -7_260);
}
// endregion
// region: s_has_minus_60_303_in_base_42_and_insignificant_bytes
#[test]
fn s_has_minus_60_303_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C6, 0x_E5, 0x_B9, 0x_0B, 0x_E4, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_7F, 0x_66, 0x_A1, 0x_4A, 0x_78, 0x_E0, 0x_E5, 0x_34, 0x_92, 0x_53, 0x_E4, 0x_14, 0x_8D, 0x_3B,
		0x_7E, 0x_FB, 0x_9A, 0x_DD, 0x_4C, 0x_65, 0x_37, 0x_8C, 0x_CC, 0x_6B, 0x_4D, 0x_03, 0x_38, 0x_B6, 0x_AE,
		0x_02, 0x_D6, 0x_AC, 0x_B9, 0x_C6, 0x_85, 0x_DB, 0x_08, 0x_44, 0x_E9, 0x_7C, 0x_2E,
	];

	helper(S, BASE, -60_303);
}
// endregion
// region: s_has_minus_914_767_in_base_42_and_insignificant_bytes
#[test]
fn s_has_minus_914_767_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_98, 0x_E9, 0x_40, 0x_BD, 0x_3C, 0x_BD, 0x_26, 0x_8A, 0x_B1, 0x_79, 0x_E9, 0x_C4, 0x_C4, 0x_8A,
		0x_BB, 0x_BA, 0x_56, 0x_31, 0x_93, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_24, 0x_F5, 0x_E4, 0x_60, 0x_82, 0x_56, 0x_BD, 0x_5C, 0x_B1, 0x_C4, 0x_50, 0x_98, 0x_65, 0x_E9,
		0x_BA, 0x_CE, 0x_5D, 0x_BE, 0x_E1, 0x_AC, 0x_6A, 0x_F3, 0x_EC, 0x_40, 0x_64, 0x_93, 0x_79, 0x_77, 0x_31,
		0x_E3, 0x_8C, 0x_BB, 0x_B5, 0x_1A, 0x_6F, 0x_32, 0x_26, 0x_8A, 0x_14, 0x_B9, 0x_AB,
	];

	helper(S, BASE, -914_767);
}
// endregion
// region: s_has_minus_9_000_832_in_base_42_and_insignificant_bytes
#[test]
fn s_has_minus_9_000_832_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_A4, 0x_8F, 0x_A6, 0x_AE, 0x_A1, 0x_AF, 0x_BB, 0x_56, 0x_D5, 0x_49, 0x_1E, 0x_BC, 0x_D5, 0x_A8,
		0x_7A, 0x_15, 0x_4F, 0x_3A, 0x_48, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_3A, 0x_A4, 0x_1E, 0x_D1, 0x_89, 0x_49, 0x_7F, 0x_27, 0x_43, 0x_68, 0x_41, 0x_A8, 0x_BC, 0x_60,
		0x_BB, 0x_40, 0x_C1, 0x_44, 0x_69, 0x_A6, 0x_AE, 0x_A1, 0x_42, 0x_25, 0x_9F, 0x_F1, 0x_B8, 0x_99, 0x_B9,
		0x_A2, 0x_76, 0x_4E, 0x_A7, 0x_4F, 0x_15, 0x_5D, 0x_8F, 0x_56, 0x_6A, 0x_48, 0x_D5,
	];

	helper(S, BASE, -9_000_832);
}
// endregion
// region: s_has_minus_51_517_465_in_base_42_and_insignificant_bytes
#[test]
fn s_has_minus_51_517_465_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_97, 0x_C6, 0x_8D, 0x_7F, 0x_BC, 0x_45, 0x_8C, 0x_6C, 0x_CB, 0x_CB, 0x_DC, 0x_E2, 0x_A8, 0x_CC,
		0x_13, 0x_F5, 0x_A8, 0x_49, 0x_B0, 0x_08, 0x_BC, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_C4, 0x_89, 0x_16, 0x_08, 0x_03, 0x_F5, 0x_69, 0x_30, 0x_B0, 0x_8C, 0x_43, 0x_60, 0x_BC, 0x_8D,
		0x_D1, 0x_97, 0x_ED, 0x_F6, 0x_5D, 0x_F9, 0x_CB, 0x_49, 0x_C6, 0x_FC, 0x_EC, 0x_17, 0x_42, 0x_9A, 0x_E2,
		0x_80, 0x_58, 0x_CC, 0x_68, 0x_DC, 0x_29, 0x_A8, 0x_C8, 0x_7F, 0x_6C, 0x_13, 0x_A0,
	];

	helper(S, BASE, -51_517_465);
}
// endregion
// region: s_has_minus_335_915_184_in_base_42_and_insignificant_bytes
#[test]
fn s_has_minus_335_915_184_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_77, 0x_FE, 0x_39, 0x_85, 0x_92, 0x_DC, 0x_A8, 0x_7F, 0x_91, 0x_22, 0x_C2, 0x_D0, 0x_C7, 0x_8A,
		0x_96, 0x_A0, 0x_5B, 0x_83, 0x_8A, 0x_6C, 0x_23, 0x_A0, 0x_77, 0x_39, 0x_23, 0x_6B, 0x_8C, 0x_83, 0x_2E,
		0x_93, 0x_96, 0x_23, 0x_92, 0x_2E, 0x_83, 0x_17, 0x_85, 0x_B3, 0x_2E, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_2E, 0x_77, 0x_6C, 0x_92, 0x_7F, 0x_5B, 0x_DB, 0x_93, 0x_96, 0x_62, 0x_13, 0x_23, 0x_C5, 0x_21,
		0x_91, 0x_6B, 0x_0F, 0x_8A, 0x_56, 0x_D0, 0x_78, 0x_C7, 0x_FE, 0x_DC, 0x_A9, 0x_C2, 0x_B9, 0x_5C, 0x_17,
		0x_6A, 0x_B3, 0x_36, 0x_22, 0x_83, 0x_EB, 0x_A0, 0x_8B, 0x_47, 0x_8C, 0x_39, 0x_9C,
	];

	helper(S, BASE, -335_915_184);
}
// endregion
// region: s_has_minus_8_in_base_73_and_insignificant_bytes
#[test]
fn s_has_minus_8_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F4, 0x_BD, 0x_1C, 0x_1B, 0x_91, 0x_76, 0x_34, 0x_7B, 0x_F7, 0x_71, 0x_DF, 0x_43, 0x_14, 0x_B5,
		0x_44, 0x_76, 0x_2F, 0x_C8, 0x_33, 0x_D3, 0x_F2, 0x_45, 0x_B9, 0x_7F, 0x_2A, 0x_22, 0x_CD, 0x_B1, 0x_43,
		0x_9F, 0x_E6, 0x_DC, 0x_F4, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_1C, 0x_B1, 0x_2F, 0x_F3, 0x_4C, 0x_0F, 0x_DF, 0x_F4, 0x_2C, 0x_01, 0x_7B, 0x_F7, 0x_68, 0x_B9,
		0x_7F, 0x_BA, 0x_05, 0x_F0, 0x_67, 0x_8B, 0x_CD, 0x_74, 0x_DB, 0x_91, 0x_CE, 0x_14, 0x_C2, 0x_30, 0x_C3,
		0x_19, 0x_6F, 0x_40, 0x_89, 0x_1B, 0x_E6, 0x_71, 0x_9D, 0x_34, 0x_46, 0x_44, 0x_76, 0x_B5, 0x_08, 0x_3A,
		0x_C7, 0x_95, 0x_9F, 0x_E1, 0x_45, 0x_2A, 0x_C8, 0x_CB, 0x_16, 0x_5E, 0x_DC, 0x_10, 0x_DA, 0x_41, 0x_DE,
		0x_9B, 0x_C6, 0x_A7, 0x_D3, 0x_43, 0x_22, 0x_26, 0x_42, 0x_33, 0x_F2, 0x_63, 0x_61, 0x_6B,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_minus_64_in_base_73_and_insignificant_bytes
#[test]
fn s_has_minus_64_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_8E, 0x_F3, 0x_8E, 0x_3A, 0x_70, 0x_98, 0x_F2, 0x_2F, 0x_4A, 0x_52, 0x_46, 0x_85, 0x_62, 0x_A4,
		0x_01, 0x_AF, 0x_58, 0x_DF, 0x_2F, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_58, 0x_46, 0x_50, 0x_5E, 0x_83, 0x_AF, 0x_82, 0x_95, 0x_CC, 0x_3D, 0x_69, 0x_3B, 0x_4C, 0x_70,
		0x_C7, 0x_DF, 0x_4D, 0x_32, 0x_FD, 0x_C0, 0x_61, 0x_5D, 0x_47, 0x_4A, 0x_07, 0x_84, 0x_D8, 0x_85, 0x_B6,
		0x_B3, 0x_1E, 0x_B0, 0x_AC, 0x_CB, 0x_C1, 0x_E7, 0x_A4, 0x_F2, 0x_E8, 0x_E3, 0x_B4, 0x_B1, 0x_C6, 0x_65,
		0x_43, 0x_6C, 0x_01, 0x_BF, 0x_CD, 0x_2F, 0x_13, 0x_98, 0x_D4, 0x_3F, 0x_49, 0x_37, 0x_A0, 0x_1B, 0x_62,
		0x_F1, 0x_18, 0x_8F, 0x_52, 0x_8E, 0x_0F, 0x_C5, 0x_71, 0x_23, 0x_3A, 0x_02, 0x_F9, 0x_22,
	];

	helper(S, BASE, -64);
}
// endregion
// region: s_has_minus_930_in_base_73_and_insignificant_bytes
#[test]
fn s_has_minus_930_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_1B, 0x_06, 0x_57, 0x_7E, 0x_07, 0x_35, 0x_5B, 0x_3D, 0x_68, 0x_6B, 0x_7E, 0x_21, 0x_8D, 0x_CD,
		0x_AA, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_5B, 0x_DC, 0x_41, 0x_38, 0x_65, 0x_8D, 0x_DB, 0x_3D, 0x_24, 0x_39, 0x_AF, 0x_1B, 0x_2A, 0x_E3,
		0x_30, 0x_71, 0x_3B, 0x_01, 0x_28, 0x_58, 0x_CD, 0x_F7, 0x_D2, 0x_A3, 0x_7F, 0x_F5, 0x_23, 0x_A7, 0x_02,
		0x_78, 0x_AA, 0x_AB, 0x_E6, 0x_03, 0x_21, 0x_6F, 0x_A0, 0x_C5, 0x_69, 0x_53, 0x_ED, 0x_E1, 0x_5F, 0x_49,
		0x_A5, 0x_CB, 0x_6E, 0x_56, 0x_68, 0x_07, 0x_7E, 0x_46, 0x_6D, 0x_06, 0x_76, 0x_B7, 0x_19, 0x_F2, 0x_8B,
		0x_61, 0x_6B, 0x_4F, 0x_35, 0x_A1, 0x_F6, 0x_EB, 0x_B4, 0x_E8, 0x_7C, 0x_10, 0x_5C, 0x_C7,
	];

	helper(S, BASE, -930);
}
// endregion
// region: s_has_minus_2_221_in_base_73_and_insignificant_bytes
#[test]
fn s_has_minus_2_221_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F2, 0x_75, 0x_A3, 0x_C0, 0x_EF, 0x_4C, 0x_BB, 0x_A1, 0x_BD, 0x_74, 0x_F2, 0x_4B, 0x_06, 0x_5B,
		0x_B4, 0x_F7, 0x_F7, 0x_B3, 0x_24, 0x_A8, 0x_FF, 0x_54, 0x_F7, 0x_A1, 0x_60, 0x_67, 0x_2F, 0x_29, 0x_B3,
		0x_1B, 0x_44, 0x_50, 0x_06, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_1F, 0x_8C, 0x_FF, 0x_21, 0x_BD, 0x_35, 0x_B4, 0x_EF, 0x_29, 0x_4D, 0x_F6, 0x_C6, 0x_7B, 0x_BE,
		0x_57, 0x_BB, 0x_65, 0x_74, 0x_1B, 0x_7F, 0x_80, 0x_4B, 0x_CF, 0x_06, 0x_E0, 0x_99, 0x_F8, 0x_16, 0x_A1,
		0x_F2, 0x_75, 0x_5E, 0x_94, 0x_DB, 0x_F4, 0x_A8, 0x_54, 0x_24, 0x_71, 0x_41, 0x_50, 0x_B5, 0x_67, 0x_56,
		0x_2F, 0x_C1, 0x_52, 0x_FE, 0x_60, 0x_D2, 0x_D3, 0x_79, 0x_3D, 0x_39, 0x_B3, 0x_A2, 0x_91, 0x_B0, 0x_3C,
		0x_45, 0x_7E, 0x_5B, 0x_88, 0x_E7, 0x_44, 0x_A7, 0x_C0, 0x_FC, 0x_F7, 0x_4C, 0x_0F, 0x_8F,
	];

	helper(S, BASE, -2_221);
}
// endregion
// region: s_has_minus_25_526_in_base_73_and_insignificant_bytes
#[test]
fn s_has_minus_25_526_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B2, 0x_45, 0x_DE, 0x_79, 0x_CE, 0x_2E, 0x_B8, 0x_53, 0x_BD, 0x_97, 0x_E6, 0x_64, 0x_45, 0x_6C,
		0x_D4, 0x_53, 0x_85, 0x_B8, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_DD, 0x_B8, 0x_A8, 0x_B2, 0x_4D, 0x_9C, 0x_63, 0x_50, 0x_89, 0x_35, 0x_AE, 0x_70, 0x_78, 0x_5B,
		0x_B0, 0x_BD, 0x_CF, 0x_D4, 0x_8F, 0x_E6, 0x_F3, 0x_93, 0x_64, 0x_02, 0x_6C, 0x_CE, 0x_85, 0x_37, 0x_6A,
		0x_99, 0x_8D, 0x_B1, 0x_D2, 0x_4E, 0x_53, 0x_D6, 0x_61, 0x_82, 0x_DC, 0x_D8, 0x_30, 0x_E4, 0x_9E, 0x_1E,
		0x_5A, 0x_2E, 0x_06, 0x_1D, 0x_DE, 0x_B9, 0x_A1, 0x_FA, 0x_C2, 0x_D9, 0x_B5, 0x_39, 0x_45, 0x_FD, 0x_F1,
		0x_3F, 0x_F9, 0x_83, 0x_C9, 0x_DA, 0x_3D, 0x_FC, 0x_97, 0x_F6, 0x_FB, 0x_75, 0x_C1, 0x_AD,
	];

	helper(S, BASE, -25_526);
}
// endregion
// region: s_has_minus_448_855_in_base_73_and_insignificant_bytes
#[test]
fn s_has_minus_448_855_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B7, 0x_D1, 0x_9D, 0x_31, 0x_A0, 0x_9E, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_B7, 0x_89, 0x_69, 0x_1F, 0x_60, 0x_B5, 0x_65, 0x_52, 0x_6A, 0x_39, 0x_D1, 0x_F4, 0x_90, 0x_C2,
		0x_77, 0x_9D, 0x_DE, 0x_12, 0x_07, 0x_E0, 0x_BE, 0x_B0, 0x_42, 0x_F5, 0x_E2, 0x_DC, 0x_3F, 0x_D9, 0x_5B,
		0x_B6, 0x_62, 0x_F1, 0x_A5, 0x_5A, 0x_A2, 0x_19, 0x_F0, 0x_6B, 0x_76, 0x_8E, 0x_FD, 0x_72, 0x_06, 0x_11,
		0x_E1, 0x_99, 0x_84, 0x_D2, 0x_AF, 0x_2E, 0x_31, 0x_F7, 0x_C7, 0x_5C, 0x_05, 0x_B2, 0x_4B, 0x_79, 0x_6E,
		0x_93, 0x_9E, 0x_CF, 0x_D8, 0x_3D, 0x_97, 0x_2C, 0x_3C, 0x_68, 0x_EF, 0x_1E, 0x_02, 0x_A7,
	];

	helper(S, BASE, -448_855);
}
// endregion
// region: s_has_minus_9_345_529_in_base_73_and_insignificant_bytes
#[test]
fn s_has_minus_9_345_529_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_80, 0x_87, 0x_22, 0x_65, 0x_6F, 0x_1D, 0x_FD, 0x_59, 0x_A6, 0x_FD, 0x_4C, 0x_EA, 0x_0E, 0x_FE,
		0x_1A, 0x_26, 0x_91, 0x_26, 0x_0E, 0x_68, 0x_30, 0x_52, 0x_FE, 0x_D1, 0x_D4, 0x_36, 0x_4A, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_87, 0x_E9, 0x_57, 0x_08, 0x_A7, 0x_35, 0x_6B, 0x_B6, 0x_A5, 0x_26, 0x_8D, 0x_53, 0x_DC, 0x_06,
		0x_FE, 0x_2E, 0x_F2, 0x_60, 0x_9B, 0x_D1, 0x_78, 0x_CB, 0x_77, 0x_80, 0x_8F, 0x_C2, 0x_E0, 0x_FD, 0x_ED,
		0x_74, 0x_52, 0x_F8, 0x_42, 0x_EA, 0x_4A, 0x_70, 0x_E3, 0x_1A, 0x_0E, 0x_97, 0x_EC, 0x_E4, 0x_72, 0x_D4,
		0x_36, 0x_5F, 0x_59, 0x_BD, 0x_BF, 0x_1D, 0x_22, 0x_F9, 0x_C9, 0x_AC, 0x_1E, 0x_E2, 0x_BB, 0x_F5, 0x_C5,
		0x_4C, 0x_BC, 0x_30, 0x_07, 0x_3D, 0x_CF, 0x_68, 0x_43, 0x_A6, 0x_65, 0x_91, 0x_45, 0x_75,
	];

	helper(S, BASE, -9_345_529);
}
// endregion
// region: s_has_minus_55_610_332_in_base_73_and_insignificant_bytes
#[test]
fn s_has_minus_55_610_332_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_93, 0x_B0, 0x_B0, 0x_16, 0x_A0, 0x_70, 0x_23, 0x_B0, 0x_B0, 0x_51, 0x_B0, 0x_25, 0x_9F, 0x_7C,
		0x_72, 0x_CD, 0x_4D, 0x_1B, 0x_22, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_93, 0x_3B, 0x_07, 0x_4B, 0x_68, 0x_4F, 0x_79, 0x_E7, 0x_C2, 0x_3C, 0x_9C, 0x_8B, 0x_65, 0x_47,
		0x_BE, 0x_11, 0x_58, 0x_38, 0x_7C, 0x_E2, 0x_86, 0x_FC, 0x_D6, 0x_3E, 0x_90, 0x_EE, 0x_A0, 0x_41, 0x_2C,
		0x_16, 0x_84, 0x_6B, 0x_30, 0x_D5, 0x_21, 0x_6C, 0x_15, 0x_CD, 0x_E1, 0x_35, 0x_51, 0x_B3, 0x_8A, 0x_BB,
		0x_C7, 0x_E3, 0x_61, 0x_72, 0x_F9, 0x_6D, 0x_1B, 0x_DC, 0x_3D, 0x_1E, 0x_89, 0x_E8, 0x_22, 0x_6F, 0x_1D,
		0x_97, 0x_FA, 0x_25, 0x_23, 0x_EA, 0x_CC, 0x_AD, 0x_4D, 0x_C5, 0x_B0, 0x_62, 0x_12, 0x_03,
	];

	helper(S, BASE, -55_610_332);
}
// endregion
// region: s_has_minus_315_810_360_in_base_73_and_insignificant_bytes
#[test]
fn s_has_minus_315_810_360_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_72, 0x_9A, 0x_77, 0x_9E, 0x_40, 0x_78, 0x_01, 0x_40, 0x_62, 0x_A3, 0x_98, 0x_16, 0x_A3, 0x_2C,
		0x_98, 0x_4C, 0x_B1, 0x_65, 0x_C7, 0x_9A, 0x_15, 0x_4C, 0x_4D, 0x_DF, 0x_5D, 0x_B5, 0x_92, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_2E, 0x_B5, 0x_27, 0x_21, 0x_4D, 0x_6B, 0x_F0, 0x_9A, 0x_FC, 0x_CB, 0x_72, 0x_E9, 0x_97, 0x_98,
		0x_FD, 0x_17, 0x_01, 0x_B7, 0x_B1, 0x_AC, 0x_B8, 0x_5D, 0x_40, 0x_3E, 0x_13, 0x_C7, 0x_A9, 0x_3B, 0x_65,
		0x_87, 0x_7A, 0x_96, 0x_94, 0x_BB, 0x_82, 0x_DA, 0x_88, 0x_AB, 0x_15, 0x_D3, 0x_67, 0x_05, 0x_9E, 0x_AA,
		0x_B4, 0x_62, 0x_55, 0x_16, 0x_DF, 0x_56, 0x_89, 0x_24, 0x_8B, 0x_30, 0x_3D, 0x_F5, 0x_2A, 0x_E0, 0x_77,
		0x_4A, 0x_92, 0x_E1, 0x_B9, 0x_A6, 0x_6D, 0x_A3, 0x_08, 0x_91, 0x_B0, 0x_2C, 0x_5C, 0x_CC,
	];

	helper(S, BASE, -315_810_360);
}
// endregion
// region: s_has_minus_9_in_base_113_and_insignificant_bytes
#[test]
fn s_has_minus_9_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C6, 0x_49, 0x_45, 0x_14, 0x_ED, 0x_69, 0x_94, 0x_1B, 0x_F1, 0x_D4, 0x_92, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_4F, 0x_6F, 0x_13, 0x_EB, 0x_52, 0x_24, 0x_F5, 0x_68, 0x_C6, 0x_F1, 0x_D1, 0x_45, 0x_D2, 0x_EF,
		0x_5C, 0x_F3, 0x_AE, 0x_D6, 0x_67, 0x_3B, 0x_57, 0x_22, 0x_A8, 0x_06, 0x_56, 0x_86, 0x_B3, 0x_94, 0x_DD,
		0x_58, 0x_64, 0x_F8, 0x_19, 0x_DC, 0x_1F, 0x_3A, 0x_14, 0x_3C, 0x_ED, 0x_51, 0x_E8, 0x_87, 0x_D4, 0x_AB,
		0x_B0, 0x_92, 0x_E3, 0x_A3, 0x_7B, 0x_46, 0x_28, 0x_48, 0x_2A, 0x_E9, 0x_0E, 0x_E2, 0x_E0, 0x_D3, 0x_97,
		0x_CF, 0x_99, 0x_BA, 0x_69, 0x_36, 0x_66, 0x_FC, 0x_CE, 0x_98, 0x_A6, 0x_35, 0x_EA, 0x_81, 0x_B5, 0x_6E,
		0x_16, 0x_B6, 0x_44, 0x_34, 0x_3E, 0x_DE, 0x_C4, 0x_31, 0x_7C, 0x_C5, 0x_4A, 0x_CC, 0x_B2, 0x_04, 0x_88,
		0x_41, 0x_61, 0x_4B, 0x_A0, 0x_53, 0x_10, 0x_78, 0x_74, 0x_F2, 0x_02, 0x_5D, 0x_95, 0x_1B, 0x_96, 0x_FA,
		0x_4D, 0x_F9, 0x_05, 0x_38, 0x_F0, 0x_9D, 0x_70, 0x_C1,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_minus_66_in_base_113_and_insignificant_bytes
#[test]
fn s_has_minus_66_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_85, 0x_10, 0x_E5, 0x_CA, 0x_D6, 0x_A5, 0x_FC, 0x_89, 0x_85, 0x_C8, 0x_6A, 0x_6A, 0x_80, 0x_8A,
		0x_D6,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_6D, 0x_19, 0x_AD, 0x_FD, 0x_CA, 0x_22, 0x_F5, 0x_C8, 0x_DF, 0x_65, 0x_DC, 0x_49, 0x_DE, 0x_03,
		0x_A2, 0x_60, 0x_EB, 0x_11, 0x_56, 0x_4B, 0x_89, 0x_D0, 0x_E2, 0x_08, 0x_13, 0x_FC, 0x_67, 0x_54, 0x_E4,
		0x_4D, 0x_61, 0x_B8, 0x_8A, 0x_21, 0x_87, 0x_C9, 0x_1A, 0x_FE, 0x_FB, 0x_66, 0x_6A, 0x_01, 0x_70, 0x_78,
		0x_69, 0x_80, 0x_D5, 0x_6C, 0x_28, 0x_A9, 0x_02, 0x_CE, 0x_45, 0x_95, 0x_CC, 0x_DB, 0x_EF, 0x_D6, 0x_71,
		0x_42, 0x_2E, 0x_07, 0x_EE, 0x_3E, 0x_4A, 0x_85, 0x_3D, 0x_E5, 0x_C6, 0x_83, 0x_73, 0x_F1, 0x_4F, 0x_1F,
		0x_55, 0x_8D, 0x_5E, 0x_9A, 0x_B9, 0x_EC, 0x_16, 0x_B4, 0x_25, 0x_46, 0x_D8, 0x_7D, 0x_32, 0x_35, 0x_F2,
		0x_23, 0x_37, 0x_B2, 0x_1E, 0x_97, 0x_F0, 0x_72, 0x_9B, 0x_50, 0x_2F, 0x_A5, 0x_AC, 0x_D4, 0x_15, 0x_B1,
		0x_E1, 0x_B5, 0x_C7, 0x_79, 0x_41, 0x_A4, 0x_A1, 0x_C2,
	];

	helper(S, BASE, -66);
}
// endregion
// region: s_has_minus_408_in_base_113_and_insignificant_bytes
#[test]
fn s_has_minus_408_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_51, 0x_92, 0x_D4, 0x_23, 0x_6B, 0x_30, 0x_16, 0x_5E, 0x_39, 0x_73, 0x_83, 0x_B9, 0x_26, 0x_99,
		0x_BD, 0x_9A, 0x_98, 0x_EF, 0x_88, 0x_19, 0x_23, 0x_08, 0x_42, 0x_3F, 0x_E8, 0x_B8, 0x_98, 0x_99, 0x_E4,
		0x_42,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_E2, 0x_44, 0x_51, 0x_B0, 0x_88, 0x_C8, 0x_CE, 0x_E8, 0x_C7, 0x_21, 0x_A0, 0x_C3, 0x_C1, 0x_2F,
		0x_1D, 0x_82, 0x_F7, 0x_B8, 0x_54, 0x_4E, 0x_1A, 0x_22, 0x_6A, 0x_39, 0x_18, 0x_EC, 0x_9A, 0x_DA, 0x_CF,
		0x_70, 0x_81, 0x_E0, 0x_42, 0x_8E, 0x_1F, 0x_71, 0x_DE, 0x_D9, 0x_87, 0x_23, 0x_95, 0x_DD, 0x_99, 0x_B5,
		0x_D1, 0x_04, 0x_E4, 0x_8C, 0x_9C, 0x_5A, 0x_9B, 0x_B6, 0x_19, 0x_89, 0x_69, 0x_3A, 0x_07, 0x_3F, 0x_AA,
		0x_58, 0x_EF, 0x_73, 0x_DB, 0x_B2, 0x_30, 0x_66, 0x_65, 0x_08, 0x_92, 0x_10, 0x_F8, 0x_26, 0x_6E, 0x_BD,
		0x_7A, 0x_53, 0x_01, 0x_1E, 0x_B3, 0x_5E, 0x_D5, 0x_F3, 0x_16, 0x_28, 0x_3E, 0x_F9, 0x_98, 0x_83, 0x_7D,
		0x_84, 0x_B9, 0x_4C, 0x_75, 0x_D8, 0x_3D, 0x_D0, 0x_61, 0x_68, 0x_AF, 0x_9E, 0x_24, 0x_EE, 0x_41, 0x_F1,
		0x_D7, 0x_C4, 0x_6B, 0x_03, 0x_FC, 0x_FB, 0x_45, 0x_A2,
	];

	helper(S, BASE, -408);
}
// endregion
// region: s_has_minus_4_732_in_base_113_and_insignificant_bytes
#[test]
fn s_has_minus_4_732_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_31, 0x_53, 0x_EF, 0x_7D, 0x_8A, 0x_6F, 0x_F1, 0x_49, 0x_F1, 0x_E6, 0x_74, 0x_28, 0x_DC, 0x_D0,
		0x_F5, 0x_50, 0x_4F, 0x_9E, 0x_E6, 0x_02, 0x_B8, 0x_A0, 0x_50, 0x_98, 0x_BA, 0x_A0, 0x_BA, 0x_0F, 0x_A0,
		0x_AA, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_74, 0x_CD, 0x_32, 0x_7E, 0x_7A, 0x_21, 0x_5F, 0x_B8, 0x_18, 0x_FD, 0x_97, 0x_28, 0x_57, 0x_F7,
		0x_8A, 0x_12, 0x_85, 0x_38, 0x_C0, 0x_9E, 0x_0E, 0x_88, 0x_84, 0x_61, 0x_E9, 0x_E4, 0x_F3, 0x_B1, 0x_54,
		0x_F8, 0x_14, 0x_A8, 0x_87, 0x_D2, 0x_AE, 0x_30, 0x_A1, 0x_36, 0x_C9, 0x_F4, 0x_31, 0x_27, 0x_50, 0x_10,
		0x_49, 0x_98, 0x_8F, 0x_ED, 0x_C7, 0x_D8, 0x_35, 0x_E6, 0x_17, 0x_4F, 0x_7F, 0x_7D, 0x_D0, 0x_AB, 0x_03,
		0x_4D, 0x_52, 0x_1A, 0x_3A, 0x_5B, 0x_9B, 0x_DC, 0x_2C, 0x_46, 0x_81, 0x_8B, 0x_65, 0x_02, 0x_E0, 0x_CF,
		0x_4E, 0x_EC, 0x_13, 0x_E7, 0x_33, 0x_A0, 0x_BF, 0x_43, 0x_D6, 0x_E3, 0x_CB, 0x_39, 0x_AF, 0x_BE, 0x_F0,
		0x_F1, 0x_B0, 0x_99, 0x_C2, 0x_CA, 0x_FF, 0x_8C, 0x_F5, 0x_E5, 0x_53, 0x_0F, 0x_BA, 0x_6B, 0x_C8, 0x_AA,
		0x_75, 0x_B3, 0x_6C, 0x_D3, 0x_6F, 0x_A7, 0x_2F, 0x_40,
	];

	helper(S, BASE, -4_732);
}
// endregion
// region: s_has_minus_19_062_in_base_113_and_insignificant_bytes
#[test]
fn s_has_minus_19_062_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_7F, 0x_FC, 0x_90, 0x_71, 0x_E5, 0x_39, 0x_D6, 0x_87, 0x_07, 0x_7B, 0x_ED, 0x_99, 0x_CF, 0x_E4,
		0x_D1, 0x_3C, 0x_D7, 0x_16, 0x_99, 0x_C8, 0x_79, 0x_8C, 0x_02, 0x_B8, 0x_7F, 0x_1A, 0x_9A, 0x_BE, 0x_8B,
		0x_2E, 0x_D8, 0x_9A, 0x_99, 0x_CD, 0x_7B, 0x_E3, 0x_B0, 0x_6D, 0x_80, 0x_80, 0x_27, 0x_48, 0x_5A, 0x_FC,
		0x_C7, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_E3, 0x_7F, 0x_CE, 0x_AA, 0x_69, 0x_C0, 0x_26, 0x_8B, 0x_8C, 0x_79, 0x_6D, 0x_34, 0x_CC, 0x_63, 0x_70,
		0x_F6, 0x_4C, 0x_1A, 0x_E7, 0x_D7, 0x_2E, 0x_B5, 0x_9B, 0x_B2, 0x_4E, 0x_08, 0x_B4, 0x_55, 0x_99, 0x_1F,
		0x_40, 0x_73, 0x_93, 0x_14, 0x_6C, 0x_91, 0x_3C, 0x_3E, 0x_B8, 0x_92, 0x_E9, 0x_30, 0x_C8, 0x_CD, 0x_94,
		0x_02, 0x_95, 0x_28, 0x_A5, 0x_DC, 0x_D6, 0x_27, 0x_49, 0x_FF, 0x_A0, 0x_FC, 0x_F4, 0x_BE, 0x_36, 0x_5A,
		0x_AF, 0x_FE, 0x_12, 0x_29, 0x_16, 0x_81, 0x_9A, 0x_DB, 0x_59, 0x_CF, 0x_A9, 0x_7B, 0x_D4, 0x_ED, 0x_80,
		0x_7E, 0x_B0, 0x_C7, 0x_90, 0x_A2, 0x_17, 0x_FD, 0x_66, 0x_D5, 0x_F9, 0x_A1, 0x_3B, 0x_C3, 0x_B6, 0x_E1,
		0x_5D, 0x_8F, 0x_23, 0x_A8, 0x_07, 0x_3D, 0x_89, 0x_48, 0x_E4, 0x_65, 0x_E5, 0x_D1, 0x_DD, 0x_24, 0x_21,
		0x_15, 0x_D8, 0x_39, 0x_11, 0x_E6, 0x_58, 0x_43, 0x_87,
	];

	helper(S, BASE, -19_062);
}
// endregion
// region: s_has_minus_260_163_in_base_113_and_insignificant_bytes
#[test]
fn s_has_minus_260_163_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_CC, 0x_74, 0x_9C, 0x_31, 0x_64, 0x_54, 0x_08, 0x_28, 0x_53, 0x_A7, 0x_A8, 0x_51, 0x_4B, 0x_7F,
		0x_FB, 0x_11, 0x_7E, 0x_F8, 0x_7D, 0x_3C, 0x_37, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_7D, 0x_D0, 0x_F9, 0x_DE, 0x_41, 0x_A3, 0x_B4, 0x_91, 0x_5F, 0x_28, 0x_FE, 0x_92, 0x_3C, 0x_18,
		0x_CB, 0x_D7, 0x_9E, 0x_8A, 0x_A7, 0x_CC, 0x_4D, 0x_98, 0x_B0, 0x_52, 0x_67, 0x_FB, 0x_62, 0x_C3, 0x_04,
		0x_AC, 0x_9A, 0x_30, 0x_1B, 0x_FF, 0x_9F, 0x_4E, 0x_9C, 0x_96, 0x_55, 0x_BB, 0x_E6, 0x_74, 0x_A4, 0x_B6,
		0x_93, 0x_B7, 0x_F7, 0x_58, 0x_78, 0x_4B, 0x_EF, 0x_CF, 0x_51, 0x_E7, 0x_F3, 0x_82, 0x_9D, 0x_37, 0x_24,
		0x_95, 0x_7E, 0x_CD, 0x_11, 0x_AD, 0x_E4, 0x_A2, 0x_43, 0x_7F, 0x_60, 0x_A8, 0x_01, 0x_AA, 0x_77, 0x_F2,
		0x_66, 0x_C2, 0x_99, 0x_DF, 0x_F8, 0x_D8, 0x_F0, 0x_6A, 0x_84, 0x_B1, 0x_8C, 0x_14, 0x_53, 0x_C6, 0x_54,
		0x_6D, 0x_22, 0x_5A, 0x_08, 0x_BC, 0x_E2, 0x_2A, 0x_E9, 0x_E3, 0x_8B, 0x_1F, 0x_63, 0x_34, 0x_75, 0x_DA,
		0x_70, 0x_85, 0x_C7, 0x_86, 0x_5B, 0x_40, 0x_64, 0x_C5,
	];

	helper(S, BASE, -260_163);
}
// endregion
// region: s_has_minus_9_723_706_in_base_113_and_insignificant_bytes
#[test]
fn s_has_minus_9_723_706_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B1, 0x_FC, 0x_70, 0x_D9, 0x_99, 0x_E3, 0x_71, 0x_3F, 0x_6D, 0x_43, 0x_7F, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_23, 0x_8D, 0x_95, 0x_50, 0x_DD, 0x_B1, 0x_2F, 0x_C3, 0x_D8, 0x_C5, 0x_81, 0x_E8, 0x_98, 0x_3D,
		0x_5D, 0x_94, 0x_A3, 0x_64, 0x_89, 0x_60, 0x_FF, 0x_65, 0x_30, 0x_86, 0x_3F, 0x_C7, 0x_DA, 0x_DC, 0x_CA,
		0x_CE, 0x_DB, 0x_87, 0x_AD, 0x_44, 0x_C2, 0x_6C, 0x_A4, 0x_1D, 0x_E9, 0x_D2, 0x_49, 0x_37, 0x_A0, 0x_BF,
		0x_E7, 0x_18, 0x_22, 0x_9D, 0x_42, 0x_4B, 0x_39, 0x_04, 0x_1B, 0x_1C, 0x_01, 0x_D9, 0x_70, 0x_6D, 0x_7B,
		0x_5B, 0x_71, 0x_2C, 0x_4E, 0x_F9, 0x_72, 0x_57, 0x_35, 0x_E3, 0x_7F, 0x_31, 0x_08, 0x_BC, 0x_73, 0x_D0,
		0x_7D, 0x_13, 0x_F4, 0x_97, 0x_8E, 0x_66, 0x_4C, 0x_ED, 0x_FC, 0x_11, 0x_FB, 0x_1A, 0x_05, 0x_F1, 0x_06,
		0x_40, 0x_C1, 0x_CD, 0x_38, 0x_EE, 0x_BE, 0x_69, 0x_EB, 0x_A5, 0x_9F, 0x_53, 0x_F8, 0x_8F, 0x_43, 0x_19,
		0x_67, 0x_91, 0x_51, 0x_5A, 0x_02, 0x_3B, 0x_BA, 0x_9E,
	];

	helper(S, BASE, -9_723_706);
}
// endregion
// region: s_has_minus_69_683_533_in_base_113_and_insignificant_bytes
#[test]
fn s_has_minus_69_683_533_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_7A, 0x_77, 0x_39, 0x_99, 0x_F2, 0x_5D, 0x_3B, 0x_54, 0x_EB, 0x_CE, 0x_AE, 0x_DB, 0x_58, 0x_A2,
		0x_A1, 0x_B4, 0x_74, 0x_E5, 0x_B7, 0x_41, 0x_79, 0x_FA, 0x_2C, 0x_D9, 0x_95, 0x_BA, 0x_FE, 0x_88, 0x_E3,
		0x_41, 0x_16, 0x_42, 0x_40, 0x_04, 0x_61, 0x_86, 0x_DB, 0x_FF, 0x_16, 0x_5D, 0x_DC, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_01, 0x_D7, 0x_35, 0x_91, 0x_71, 0x_D0, 0x_C4, 0x_F6, 0x_65, 0x_DB, 0x_61, 0x_5F, 0x_12, 0x_C9,
		0x_A2, 0x_B4, 0x_40, 0x_45, 0x_B2, 0x_07, 0x_6A, 0x_BA, 0x_BC, 0x_7D, 0x_AD, 0x_CF, 0x_39, 0x_BD, 0x_D4,
		0x_60, 0x_B8, 0x_AB, 0x_77, 0x_B9, 0x_58, 0x_25, 0x_7B, 0x_57, 0x_86, 0x_84, 0x_EB, 0x_FD, 0x_02, 0x_06,
		0x_5B, 0x_16, 0x_DA, 0x_7A, 0x_99, 0x_87, 0x_5A, 0x_2C, 0x_42, 0x_3E, 0x_88, 0x_C3, 0x_F8, 0x_E3, 0x_55,
		0x_9F, 0x_F5, 0x_4C, 0x_41, 0x_ED, 0x_CE, 0x_95, 0x_EC, 0x_F0, 0x_49, 0x_BB, 0x_5D, 0x_B7, 0x_9E, 0x_A7,
		0x_70, 0x_92, 0x_6D, 0x_A1, 0x_36, 0x_83, 0x_6B, 0x_FF, 0x_3B, 0x_7F, 0x_5E, 0x_04, 0x_23, 0x_74, 0x_AF,
		0x_E5, 0x_DF, 0x_D9, 0x_98, 0x_C2, 0x_AE, 0x_73, 0x_D1, 0x_32, 0x_9C, 0x_79, 0x_EE, 0x_05, 0x_1E, 0x_FA,
		0x_D8, 0x_1B, 0x_54, 0x_A4, 0x_FE, 0x_69, 0x_9A, 0x_C0,
	];

	helper(S, BASE, -69_683_533);
}
// endregion
// region: s_has_minus_996_098_582_in_base_113_and_insignificant_bytes
#[test]
fn s_has_minus_996_098_582_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_47, 0x_69, 0x_01, 0x_3F, 0x_E8, 0x_91, 0x_E4, 0x_04, 0x_A1, 0x_26, 0x_AC, 0x_A1, 0x_16, 0x_3F,
		0x_AA, 0x_DD, 0x_A7, 0x_48, 0x_69, 0x_62, 0x_62, 0x_2F, 0x_6A, 0x_7E, 0x_7A, 0x_A4, 0x_BB, 0x_AA, 0x_25,
		0x_50, 0x_42, 0x_D7, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_E3, 0x_B2, 0x_99, 0x_AA, 0x_17, 0x_47, 0x_23, 0x_48, 0x_25, 0x_D8, 0x_3A, 0x_69, 0x_83, 0x_3F,
		0x_BC, 0x_64, 0x_5D, 0x_1C, 0x_A4, 0x_13, 0x_36, 0x_8B, 0x_21, 0x_AC, 0x_03, 0x_04, 0x_3C, 0x_0E, 0x_A1,
		0x_74, 0x_C9, 0x_BD, 0x_3D, 0x_9D, 0x_16, 0x_52, 0x_AF, 0x_9C, 0x_01, 0x_B9, 0x_DB, 0x_CA, 0x_E0, 0x_89,
		0x_2E, 0x_4C, 0x_A6, 0x_7E, 0x_F4, 0x_1F, 0x_26, 0x_97, 0x_4A, 0x_BB, 0x_9E, 0x_4B, 0x_EF, 0x_2F, 0x_D9,
		0x_6A, 0x_A8, 0x_A7, 0x_C1, 0x_FD, 0x_E4, 0x_45, 0x_E6, 0x_E9, 0x_5A, 0x_85, 0x_70, 0x_60, 0x_7A, 0x_62,
		0x_05, 0x_32, 0x_50, 0x_73, 0x_E8, 0x_2C, 0x_94, 0x_14, 0x_76, 0x_49, 0x_DF, 0x_11, 0x_63, 0x_39, 0x_02,
		0x_B5, 0x_B6, 0x_88, 0x_C5, 0x_42, 0x_EE, 0x_53, 0x_46, 0x_D7, 0x_90, 0x_DD, 0x_1E, 0x_F5, 0x_9B, 0x_F7,
		0x_7B, 0x_F0, 0x_29, 0x_18, 0x_93, 0x_28, 0x_C7, 0x_D2,
	];

	helper(S, BASE, -996_098_582);
}
// endregion
// region: s_has_minus_2_in_base_193_and_insignificant_bytes
#[test]
fn s_has_minus_2_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_4C, 0x_95, 0x_40, 0x_49, 0x_65, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_3B, 0x_4C, 0x_73, 0x_37, 0x_8C, 0x_9C, 0x_A2, 0x_5C, 0x_3D, 0x_35, 0x_80, 0x_BC, 0x_54, 0x_4E,
		0x_24, 0x_7C, 0x_FD, 0x_60, 0x_7F, 0x_18, 0x_26, 0x_8A, 0x_1B, 0x_D6, 0x_66, 0x_17, 0x_E2, 0x_2E, 0x_6F,
		0x_BF, 0x_BD, 0x_ED, 0x_AA, 0x_F2, 0x_5E, 0x_53, 0x_D9, 0x_55, 0x_9E, 0x_7D, 0x_90, 0x_40, 0x_CD, 0x_07,
		0x_F7, 0x_E9, 0x_7B, 0x_CA, 0x_29, 0x_BB, 0x_A5, 0x_48, 0x_4B, 0x_7A, 0x_39, 0x_A9, 0x_D5, 0x_44, 0x_82,
		0x_1C, 0x_A7, 0x_72, 0x_D2, 0x_BA, 0x_3C, 0x_E8, 0x_5D, 0x_EA, 0x_49, 0x_34, 0x_85, 0x_B8, 0x_EE, 0x_33,
		0x_36, 0x_D8, 0x_47, 0x_FA, 0x_E7, 0x_AE, 0x_AB, 0x_DB, 0x_6E, 0x_B0, 0x_42, 0x_99, 0x_14, 0x_52, 0x_F8,
		0x_63, 0x_89, 0x_AD, 0x_50, 0x_2F, 0x_D3, 0x_C1, 0x_10, 0x_0E, 0x_75, 0x_F6, 0x_FE, 0x_C9, 0x_2C, 0x_FF,
		0x_62, 0x_6A, 0x_3A, 0x_B6, 0x_51, 0x_19, 0x_79, 0x_23, 0x_F0, 0x_57, 0x_8F, 0x_E6, 0x_5A, 0x_B4, 0x_65,
		0x_C5, 0x_83, 0x_6B, 0x_22, 0x_EB, 0x_C7, 0x_3F, 0x_8E, 0x_A6, 0x_70, 0x_96, 0x_DF, 0x_4D, 0x_DE, 0x_4F,
		0x_28, 0x_1F, 0x_76, 0x_F4, 0x_45, 0x_32, 0x_7E, 0x_A8, 0x_94, 0x_1E, 0x_21, 0x_BE, 0x_F9, 0x_56, 0x_59,
		0x_DC, 0x_AC, 0x_A3, 0x_12, 0x_30, 0x_8B, 0x_86, 0x_D4, 0x_06, 0x_F1, 0x_15, 0x_43, 0x_E3, 0x_CC, 0x_71,
		0x_E1, 0x_61, 0x_A0, 0x_E5, 0x_B1, 0x_F3, 0x_F5, 0x_5F, 0x_B3, 0x_D1, 0x_D7, 0x_9F, 0x_C0, 0x_9A, 0x_C3,
		0x_FC, 0x_81, 0x_31, 0x_9B, 0x_C6, 0x_78, 0x_93, 0x_03, 0x_CE, 0x_77, 0x_EC, 0x_84, 0x_0F,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_minus_17_in_base_193_and_insignificant_bytes
#[test]
fn s_has_minus_17_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_52, 0x_9B, 0x_BD, 0x_6F, 0x_E8, 0x_E7,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_54, 0x_1A, 0x_33, 0x_37, 0x_92, 0x_03, 0x_D7, 0x_19, 0x_CE, 0x_B6, 0x_E5, 0x_0F, 0x_17, 0x_FD,
		0x_AC, 0x_5A, 0x_52, 0x_36, 0x_F8, 0x_E1, 0x_8E, 0x_1D, 0x_D2, 0x_3F, 0x_4A, 0x_14, 0x_AF, 0x_7E, 0x_46,
		0x_7D, 0x_45, 0x_29, 0x_7F, 0x_BD, 0x_30, 0x_D5, 0x_1B, 0x_E4, 0x_39, 0x_05, 0x_16, 0x_AE, 0x_D8, 0x_E0,
		0x_2E, 0x_3B, 0x_9A, 0x_DE, 0x_4B, 0x_08, 0x_27, 0x_FB, 0x_71, 0x_42, 0x_BA, 0x_58, 0x_B0, 0x_B9, 0x_F0,
		0x_5D, 0x_2F, 0x_A8, 0x_72, 0x_E7, 0x_D1, 0x_B1, 0x_CC, 0x_31, 0x_51, 0x_9F, 0x_A2, 0x_68, 0x_9C, 0x_EB,
		0x_41, 0x_5E, 0x_3D, 0x_C6, 0x_02, 0x_98, 0x_6F, 0x_77, 0x_11, 0x_81, 0x_62, 0x_FA, 0x_DF, 0x_CD, 0x_CB,
		0x_01, 0x_7A, 0x_BB, 0x_5B, 0x_EE, 0x_8F, 0x_D6, 0x_B3, 0x_15, 0x_59, 0x_E3, 0x_AD, 0x_B4, 0x_A0, 0x_A5,
		0x_3E, 0x_18, 0x_75, 0x_6D, 0x_78, 0x_A4, 0x_DB, 0x_A7, 0x_6E, 0x_61, 0x_55, 0x_95, 0x_80, 0x_65, 0x_85,
		0x_94, 0x_3C, 0x_EC, 0x_C9, 0x_48, 0x_9E, 0x_88, 0x_AA, 0x_C7, 0x_D4, 0x_89, 0x_69, 0x_38, 0x_BC, 0x_FC,
		0x_7B, 0x_4E, 0x_66, 0x_AB, 0x_04, 0x_F7, 0x_12, 0x_A9, 0x_C0, 0x_BE, 0x_8B, 0x_97, 0x_F4, 0x_E9, 0x_4C,
		0x_A6, 0x_0E, 0x_2C, 0x_7C, 0x_57, 0x_91, 0x_67, 0x_F6, 0x_79, 0x_96, 0x_E8, 0x_FE, 0x_C2, 0x_DD, 0x_87,
		0x_F3, 0x_3A, 0x_DA, 0x_74, 0x_B7, 0x_50, 0x_C4, 0x_10, 0x_8A, 0x_6A, 0x_B5, 0x_44, 0x_86, 0x_F1, 0x_70,
		0x_8C, 0x_32, 0x_4F, 0x_93, 0x_C1, 0x_60, 0x_E6, 0x_F9, 0x_A3, 0x_EF, 0x_F5, 0x_EA, 0x_64,
	];

	helper(S, BASE, -17);
}
// endregion
// region: s_has_minus_836_in_base_193_and_insignificant_bytes
#[test]
fn s_has_minus_836_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_AD, 0x_B5, 0x_AB, 0x_8E, 0x_80, 0x_AF, 0x_23, 0x_6C, 0x_5E, 0x_67, 0x_72, 0x_5C, 0x_C2, 0x_02,
		0x_C3, 0x_A6, 0x_7B, 0x_3A, 0x_7B, 0x_C9, 0x_B9, 0x_C1, 0x_E7, 0x_1A, 0x_E5, 0x_D3, 0x_21, 0x_F6, 0x_B3,
		0x_E8, 0x_1D, 0x_F0, 0x_FB, 0x_87, 0x_74, 0x_5D, 0x_EB, 0x_FA, 0x_29, 0x_B8, 0x_F5, 0x_F3,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_E5, 0x_62, 0x_79, 0x_AD, 0x_40, 0x_C3, 0x_5E, 0x_FA, 0x_C2, 0x_CA, 0x_35, 0x_3F, 0x_1B, 0x_5D,
		0x_50, 0x_38, 0x_99, 0x_C7, 0x_F4, 0x_F6, 0x_25, 0x_18, 0x_80, 0x_69, 0x_EB, 0x_36, 0x_52, 0x_59, 0x_32,
		0x_4B, 0x_E7, 0x_2C, 0x_76, 0x_90, 0x_8E, 0x_84, 0x_C4, 0x_C1, 0x_58, 0x_65, 0x_AF, 0x_B1, 0x_3E, 0x_42,
		0x_9B, 0x_B4, 0x_33, 0x_89, 0x_1D, 0x_06, 0x_94, 0x_C0, 0x_D5, 0x_BE, 0x_23, 0x_26, 0x_9A, 0x_41, 0x_21,
		0x_D8, 0x_28, 0x_D9, 0x_19, 0x_B5, 0x_CD, 0x_87, 0x_B8, 0x_DA, 0x_07, 0x_39, 0x_5A, 0x_51, 0x_D6, 0x_DE,
		0x_14, 0x_66, 0x_4D, 0x_5C, 0x_B3, 0x_EF, 0x_A9, 0x_55, 0x_D7, 0x_DF, 0x_CC, 0x_6D, 0x_7B, 0x_6C, 0x_BA,
		0x_16, 0x_08, 0x_A4, 0x_BB, 0x_CE, 0x_10, 0x_F5, 0x_05, 0x_5F, 0x_57, 0x_EC, 0x_F9, 0x_EA, 0x_91, 0x_13,
		0x_22, 0x_BF, 0x_7F, 0x_47, 0x_64, 0x_B7, 0x_B2, 0x_A2, 0x_9C, 0x_9D, 0x_C9, 0x_67, 0x_F0, 0x_ED, 0x_68,
		0x_70, 0x_FD, 0x_29, 0x_27, 0x_7D, 0x_0F, 0x_0E, 0x_F3, 0x_DB, 0x_1C, 0x_FC, 0x_95, 0x_A3, 0x_DC, 0x_BD,
		0x_34, 0x_72, 0x_D1, 0x_F8, 0x_FB, 0x_3A, 0x_C8, 0x_73, 0x_FE, 0x_E4, 0x_2A, 0x_A0, 0x_49, 0x_E0, 0x_E8,
		0x_03, 0x_B9, 0x_CB, 0x_44, 0x_E9, 0x_2E, 0x_B0, 0x_DD, 0x_02, 0x_61, 0x_4C, 0x_A1, 0x_C5, 0x_8A, 0x_56,
		0x_7A, 0x_12, 0x_B6, 0x_53, 0x_A6, 0x_3D, 0x_5B, 0x_98, 0x_75, 0x_D2, 0x_1A, 0x_3B, 0x_D3, 0x_4E, 0x_F7,
		0x_9E, 0x_3C, 0x_1F, 0x_6F, 0x_82, 0x_81, 0x_92, 0x_15, 0x_01, 0x_24, 0x_1E, 0x_83, 0x_AA,
	];

	helper(S, BASE, -836);
}
// endregion
// region: s_has_minus_1_850_in_base_193_and_insignificant_bytes
#[test]
fn s_has_minus_1_850_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_FB, 0x_A7, 0x_EE, 0x_1C, 0x_F6, 0x_D0, 0x_55, 0x_A5, 0x_5C, 0x_53, 0x_96, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_87, 0x_A2, 0x_80, 0x_E0, 0x_F1, 0x_AC, 0x_DF, 0x_65, 0x_AA, 0x_FB, 0x_7C, 0x_DD, 0x_07, 0x_50, 0x_95,
		0x_2E, 0x_C4, 0x_4F, 0x_F5, 0x_04, 0x_03, 0x_35, 0x_54, 0x_E4, 0x_45, 0x_53, 0x_BE, 0x_56, 0x_30, 0x_82,
		0x_EF, 0x_69, 0x_5E, 0x_CF, 0x_FF, 0x_59, 0x_8B, 0x_1E, 0x_AE, 0x_AB, 0x_D2, 0x_DC, 0x_39, 0x_5B, 0x_90,
		0x_EB, 0x_C3, 0x_4B, 0x_43, 0x_47, 0x_E6, 0x_36, 0x_4C, 0x_28, 0x_06, 0x_A0, 0x_63, 0x_16, 0x_3C, 0x_11,
		0x_B4, 0x_C2, 0x_27, 0x_61, 0x_B0, 0x_6C, 0x_D5, 0x_6A, 0x_A9, 0x_51, 0x_5A, 0x_C6, 0x_62, 0x_EC, 0x_CB,
		0x_70, 0x_12, 0x_3B, 0x_8E, 0x_88, 0x_38, 0x_D1, 0x_ED, 0x_93, 0x_81, 0x_CA, 0x_94, 0x_A5, 0x_F9, 0x_FD,
		0x_71, 0x_55, 0x_15, 0x_66, 0x_4A, 0x_F6, 0x_B8, 0x_9A, 0x_D8, 0x_75, 0x_CE, 0x_7F, 0x_96, 0x_7A, 0x_1C,
		0x_48, 0x_60, 0x_79, 0x_DB, 0x_73, 0x_25, 0x_01, 0x_74, 0x_A7, 0x_C0, 0x_B6, 0x_B9, 0x_92, 0x_57, 0x_02,
		0x_B5, 0x_67, 0x_46, 0x_10, 0x_DE, 0x_E7, 0x_C8, 0x_B2, 0x_8D, 0x_DA, 0x_C5, 0x_E1, 0x_7E, 0x_91, 0x_44,
		0x_D4, 0x_2A, 0x_32, 0x_3E, 0x_A6, 0x_89, 0x_FC, 0x_26, 0x_D0, 0x_17, 0x_13, 0x_7B, 0x_9F, 0x_5C, 0x_1B,
		0x_76, 0x_D6, 0x_23, 0x_08, 0x_F8, 0x_4E, 0x_BD, 0x_58, 0x_A8, 0x_97, 0x_2C, 0x_BF, 0x_37, 0x_1D, 0x_E5,
		0x_29, 0x_33, 0x_9E, 0x_E9, 0x_14, 0x_6F, 0x_24, 0x_9D, 0x_1F, 0x_18, 0x_A3, 0x_D7, 0x_AF, 0x_F4, 0x_8F,
		0x_85, 0x_52, 0x_49, 0x_FE, 0x_E8, 0x_84, 0x_98, 0x_64, 0x_B3, 0x_B7, 0x_0F, 0x_0E, 0x_E3,
	];

	helper(S, BASE, -1_850);
}
// endregion
// region: s_has_minus_16_908_in_base_193_and_insignificant_bytes
#[test]
fn s_has_minus_16_908_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F3, 0x_0F, 0x_79, 0x_D9, 0x_F2, 0x_4D, 0x_DE, 0x_FE, 0x_A5, 0x_6D, 0x_66, 0x_8B, 0x_AC, 0x_D0,
		0x_5B,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_5C, 0x_D7, 0x_D2, 0x_A5, 0x_F8, 0x_91, 0x_66, 0x_D8, 0x_BC, 0x_28, 0x_7E, 0x_8B, 0x_AE, 0x_BD,
		0x_45, 0x_4D, 0x_B9, 0x_1E, 0x_47, 0x_7A, 0x_7D, 0x_49, 0x_26, 0x_DD, 0x_B6, 0x_D3, 0x_14, 0x_FE, 0x_FC,
		0x_B2, 0x_1A, 0x_61, 0x_77, 0x_57, 0x_7C, 0x_22, 0x_29, 0x_41, 0x_FD, 0x_E3, 0x_EB, 0x_2E, 0x_8D, 0x_13,
		0x_8F, 0x_53, 0x_05, 0x_AA, 0x_5F, 0x_11, 0x_31, 0x_83, 0x_98, 0x_FF, 0x_CD, 0x_F6, 0x_4C, 0x_87, 0x_40,
		0x_EA, 0x_A7, 0x_A4, 0x_EC, 0x_C8, 0x_CC, 0x_8C, 0x_6F, 0x_76, 0x_75, 0x_2F, 0x_CB, 0x_74, 0x_BE, 0x_A0,
		0x_51, 0x_35, 0x_AD, 0x_55, 0x_E1, 0x_24, 0x_7F, 0x_59, 0x_F5, 0x_AB, 0x_88, 0x_58, 0x_F3, 0x_6C, 0x_2A,
		0x_62, 0x_A2, 0x_01, 0x_9D, 0x_95, 0x_3A, 0x_1B, 0x_BF, 0x_6D, 0x_FA, 0x_CF, 0x_DB, 0x_56, 0x_64, 0x_4F,
		0x_0E, 0x_82, 0x_E7, 0x_27, 0x_ED, 0x_DA, 0x_2C, 0x_12, 0x_4B, 0x_BA, 0x_3F, 0x_1D, 0x_0F, 0x_17, 0x_7B,
		0x_E9, 0x_E5, 0x_21, 0x_E2, 0x_07, 0x_F4, 0x_6B, 0x_43, 0x_FB, 0x_E6, 0x_37, 0x_84, 0x_06, 0x_C5, 0x_9E,
		0x_71, 0x_C3, 0x_EE, 0x_C7, 0x_78, 0x_99, 0x_AF, 0x_92, 0x_3E, 0x_02, 0x_D9, 0x_81, 0x_EF, 0x_08, 0x_E0,
		0x_16, 0x_A8, 0x_1F, 0x_46, 0x_DF, 0x_04, 0x_B7, 0x_48, 0x_03, 0x_E4, 0x_70, 0x_A3, 0x_C6, 0x_1C, 0x_32,
		0x_E8, 0x_C4, 0x_B5, 0x_5B, 0x_5E, 0x_67, 0x_5D, 0x_D0, 0x_4E, 0x_52, 0x_3B, 0x_CA, 0x_F0, 0x_B8, 0x_D1,
		0x_33, 0x_89, 0x_30, 0x_F7, 0x_69, 0x_AC, 0x_6A, 0x_D6, 0x_DE, 0x_D4, 0x_68, 0x_F2, 0x_38,
	];

	helper(S, BASE, -16_908);
}
// endregion
// region: s_has_minus_219_708_in_base_193_and_insignificant_bytes
#[test]
fn s_has_minus_219_708_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_50, 0x_7C, 0x_24, 0x_4B, 0x_1C, 0x_34, 0x_EC, 0x_91, 0x_23, 0x_73, 0x_1C, 0x_36, 0x_E7, 0x_13,
		0x_01, 0x_B6, 0x_B8, 0x_C8, 0x_49, 0x_27, 0x_88, 0x_9D, 0x_29, 0x_2C, 0x_9C, 0x_F9, 0x_98, 0x_36, 0x_3C,
		0x_E2, 0x_33, 0x_91, 0x_F0, 0x_C5, 0x_B9, 0x_78, 0x_D3, 0x_6E, 0x_9B,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_AF, 0x_88, 0x_D7, 0x_7E, 0x_50, 0x_2E, 0x_83, 0x_DA, 0x_91, 0x_DB, 0x_D4, 0x_23, 0x_F7, 0x_F6,
		0x_72, 0x_8A, 0x_FA, 0x_80, 0x_B5, 0x_CD, 0x_41, 0x_74, 0x_53, 0x_D6, 0x_3A, 0x_C6, 0x_5E, 0x_C4, 0x_FB,
		0x_E2, 0x_9C, 0x_68, 0x_C2, 0x_11, 0x_21, 0x_71, 0x_8D, 0x_A8, 0x_E0, 0x_9E, 0x_6A, 0x_2F, 0x_61, 0x_65,
		0x_A9, 0x_73, 0x_27, 0x_89, 0x_01, 0x_13, 0x_B9, 0x_36, 0x_56, 0x_60, 0x_E5, 0x_E6, 0x_BC, 0x_5B, 0x_FD,
		0x_55, 0x_A2, 0x_67, 0x_03, 0x_06, 0x_10, 0x_CC, 0x_4F, 0x_B1, 0x_BB, 0x_96, 0x_7B, 0x_4E, 0x_BD, 0x_24,
		0x_E7, 0x_B7, 0x_12, 0x_54, 0x_3C, 0x_AE, 0x_19, 0x_F3, 0x_6E, 0x_66, 0x_E9, 0x_33, 0x_E4, 0x_82, 0x_16,
		0x_EA, 0x_9F, 0x_C5, 0x_49, 0x_1D, 0x_1A, 0x_D2, 0x_38, 0x_FE, 0x_77, 0x_32, 0x_8C, 0x_30, 0x_DD, 0x_1F,
		0x_9B, 0x_B6, 0x_A1, 0x_63, 0x_EC, 0x_42, 0x_DC, 0x_3B, 0x_0F, 0x_28, 0x_6C, 0x_94, 0x_B4, 0x_43, 0x_AD,
		0x_05, 0x_1E, 0x_BA, 0x_93, 0x_5F, 0x_C8, 0x_A7, 0x_C7, 0x_2A, 0x_B8, 0x_D8, 0x_CE, 0x_34, 0x_69, 0x_BF,
		0x_64, 0x_EF, 0x_2C, 0x_F0, 0x_4A, 0x_78, 0x_A6, 0x_7D, 0x_C1, 0x_07, 0x_3D, 0x_E8, 0x_84, 0x_D3, 0x_B0,
		0x_C3, 0x_A5, 0x_70, 0x_22, 0x_AC, 0x_5A, 0x_4C, 0x_35, 0x_F2, 0x_29, 0x_14, 0x_79, 0x_39, 0x_9D, 0x_62,
		0x_1C, 0x_98, 0x_ED, 0x_48, 0x_97, 0x_8F, 0x_5C, 0x_08, 0x_7C, 0x_1B, 0x_15, 0x_8E, 0x_46, 0x_90, 0x_18,
		0x_C9, 0x_CA, 0x_52, 0x_F9, 0x_17, 0x_A4, 0x_AB, 0x_D1, 0x_F8, 0x_47, 0x_E1, 0x_26, 0x_D5,
	];

	helper(S, BASE, -219_708);
}
// endregion
// region: s_has_minus_3_338_696_in_base_193_and_insignificant_bytes
#[test]
fn s_has_minus_3_338_696_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_5C, 0x_E2, 0x_53, 0x_E9, 0x_1D, 0x_F6, 0x_BB, 0x_25, 0x_35, 0x_93, 0x_6D, 0x_26, 0x_C4, 0x_B2,
		0x_4C, 0x_31, 0x_A0, 0x_18, 0x_45, 0x_B3, 0x_31, 0x_71, 0x_2A, 0x_3D, 0x_F5, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_6A, 0x_27, 0x_1C, 0x_4F, 0x_43, 0x_62, 0x_C4, 0x_D2, 0x_9B, 0x_6F, 0x_F5, 0x_B5, 0x_C8, 0x_93, 0x_75,
		0x_DA, 0x_5A, 0x_F9, 0x_73, 0x_D1, 0x_11, 0x_71, 0x_B3, 0x_F6, 0x_95, 0x_A2, 0x_31, 0x_87, 0x_D4, 0x_A3,
		0x_B1, 0x_6B, 0x_C6, 0x_90, 0x_16, 0x_A4, 0x_F4, 0x_77, 0x_C7, 0x_49, 0x_25, 0x_06, 0x_A6, 0x_8D, 0x_28,
		0x_CD, 0x_9F, 0x_13, 0x_32, 0x_4A, 0x_EF, 0x_07, 0x_A8, 0x_29, 0x_C0, 0x_05, 0x_B0, 0x_1F, 0x_DF, 0x_E7,
		0x_EA, 0x_CA, 0x_21, 0x_0E, 0x_DB, 0x_98, 0x_BF, 0x_D5, 0x_9A, 0x_C9, 0x_8A, 0x_7E, 0x_26, 0x_30, 0x_24,
		0x_ED, 0x_99, 0x_70, 0x_F7, 0x_D9, 0x_D3, 0x_DE, 0x_5E, 0x_88, 0x_91, 0x_DD, 0x_34, 0x_35, 0x_E1, 0x_5C,
		0x_E3, 0x_18, 0x_B9, 0x_03, 0x_37, 0x_CE, 0x_65, 0x_56, 0x_14, 0x_92, 0x_79, 0x_23, 0x_AC, 0x_1D, 0x_8B,
		0x_2E, 0x_50, 0x_1E, 0x_AB, 0x_74, 0x_BD, 0x_45, 0x_10, 0x_AF, 0x_78, 0x_39, 0x_9C, 0x_72, 0x_DC, 0x_76,
		0x_B7, 0x_E2, 0x_BE, 0x_F3, 0x_61, 0x_6D, 0x_F1, 0x_D6, 0x_5F, 0x_94, 0x_AD, 0x_48, 0x_9E, 0x_CC, 0x_8F,
		0x_F8, 0x_2C, 0x_3D, 0x_BA, 0x_A0, 0x_6C, 0x_44, 0x_3A, 0x_6E, 0x_3E, 0x_17, 0x_E5, 0x_C2, 0x_5D, 0x_60,
		0x_AE, 0x_2F, 0x_15, 0x_01, 0x_B2, 0x_EE, 0x_EC, 0x_B8, 0x_A7, 0x_7D, 0x_A1, 0x_FC, 0x_C1, 0x_59, 0x_BB,
		0x_FB, 0x_52, 0x_08, 0x_B6, 0x_E0, 0x_5B, 0x_F2, 0x_0F, 0x_41, 0x_63, 0x_C5, 0x_E4, 0x_69, 0x_CB, 0x_B4,
		0x_58, 0x_46, 0x_53, 0x_EB, 0x_12, 0x_4D, 0x_36, 0x_68, 0x_64, 0x_67, 0x_2A, 0x_51, 0x_4C,
	];

	helper(S, BASE, -3_338_696);
}
// endregion
// region: s_has_minus_51_059_813_in_base_193_and_insignificant_bytes
#[test]
fn s_has_minus_51_059_813_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_1E, 0x_15, 0x_8F, 0x_CA, 0x_6D, 0x_91, 0x_8F, 0x_CB, 0x_DF, 0x_BA, 0x_6C, 0x_F0, 0x_E4, 0x_AF,
		0x_D1, 0x_28, 0x_06, 0x_32, 0x_37, 0x_93, 0x_AF, 0x_8D, 0x_A8, 0x_39, 0x_D5, 0x_D4, 0x_AA, 0x_07, 0x_84,
		0x_5A, 0x_48, 0x_F7, 0x_CE, 0x_F3, 0x_2E, 0x_8A, 0x_3C, 0x_C8, 0x_66, 0x_80, 0x_74, 0x_3B, 0x_C0, 0x_E4,
		0x_F5,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_4D, 0x_6C, 0x_0F, 0x_16, 0x_80, 0x_F3, 0x_1E, 0x_91, 0x_F9, 0x_7A, 0x_E2, 0x_A7, 0x_4F, 0x_26,
		0x_32, 0x_04, 0x_9B, 0x_3D, 0x_15, 0x_BA, 0x_52, 0x_A3, 0x_F7, 0x_C9, 0x_7C, 0x_87, 0x_E4, 0x_DC, 0x_CF,
		0x_3C, 0x_2F, 0x_FC, 0x_C8, 0x_F4, 0x_50, 0x_35, 0x_FB, 0x_C6, 0x_19, 0x_5D, 0x_65, 0x_CD, 0x_89, 0x_E5,
		0x_58, 0x_70, 0x_40, 0x_3B, 0x_38, 0x_6A, 0x_8B, 0x_01, 0x_79, 0x_48, 0x_27, 0x_FF, 0x_B2, 0x_06, 0x_BD,
		0x_D4, 0x_C2, 0x_E7, 0x_C0, 0x_6E, 0x_AA, 0x_BB, 0x_D3, 0x_61, 0x_EB, 0x_A2, 0x_8A, 0x_84, 0x_53, 0x_29,
		0x_81, 0x_D0, 0x_E0, 0x_37, 0x_02, 0x_44, 0x_F5, 0x_EE, 0x_82, 0x_56, 0x_A8, 0x_17, 0x_99, 0x_94, 0x_2E,
		0x_F8, 0x_51, 0x_ED, 0x_AF, 0x_B6, 0x_90, 0x_73, 0x_B5, 0x_88, 0x_67, 0x_4C, 0x_4A, 0x_46, 0x_C3, 0x_5E,
		0x_18, 0x_64, 0x_F0, 0x_8D, 0x_39, 0x_DB, 0x_9E, 0x_2A, 0x_9A, 0x_72, 0x_75, 0x_96, 0x_D5, 0x_EF, 0x_CA,
		0x_2C, 0x_21, 0x_8E, 0x_9C, 0x_24, 0x_5F, 0x_FA, 0x_AC, 0x_77, 0x_66, 0x_B8, 0x_A1, 0x_47, 0x_41, 0x_42,
		0x_05, 0x_7E, 0x_EC, 0x_B7, 0x_B0, 0x_74, 0x_FE, 0x_CE, 0x_D1, 0x_28, 0x_E3, 0x_4B, 0x_4E, 0x_8F, 0x_49,
		0x_33, 0x_E6, 0x_B3, 0x_07, 0x_93, 0x_60, 0x_CB, 0x_EA, 0x_7D, 0x_69, 0x_98, 0x_7F, 0x_92, 0x_08, 0x_AE,
		0x_D8, 0x_F6, 0x_1F, 0x_76, 0x_62, 0x_E8, 0x_D7, 0x_C7, 0x_5A, 0x_5B, 0x_31, 0x_85, 0x_C4, 0x_95, 0x_97,
		0x_CC, 0x_45, 0x_34, 0x_14, 0x_DF, 0x_AD, 0x_A6, 0x_78, 0x_86, 0x_12, 0x_54, 0x_23, 0x_0E,
	];

	helper(S, BASE, -51_059_813);
}
// endregion
// region: s_has_minus_762_164_728_in_base_193_and_insignificant_bytes
#[test]
fn s_has_minus_762_164_728_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_DB, 0x_E6, 0x_7C, 0x_1F, 0x_1A, 0x_42, 0x_D5, 0x_E8, 0x_75, 0x_FA, 0x_54, 0x_1E, 0x_25, 0x_BB,
		0x_FA, 0x_8A, 0x_A8, 0x_B2, 0x_A6, 0x_B7, 0x_BB, 0x_89, 0x_31, 0x_1C, 0x_97, 0x_6E, 0x_C2, 0x_08, 0x_28,
		0x_2E, 0x_2A, 0x_06, 0x_5B, 0x_52, 0x_F0, 0x_DF, 0x_8D, 0x_6E, 0x_C1, 0x_08, 0x_CA, 0x_0E, 0x_02, 0x_3D,
		0x_70, 0x_37, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_92, 0x_ED, 0x_E6, 0x_88, 0x_12, 0x_93, 0x_35, 0x_1F, 0x_5D, 0x_01, 0x_B7, 0x_7B, 0x_48, 0x_87,
		0x_E4, 0x_66, 0x_49, 0x_F3, 0x_6D, 0x_B8, 0x_A8, 0x_2F, 0x_1E, 0x_95, 0x_C7, 0x_53, 0x_A2, 0x_E8, 0x_F7,
		0x_5F, 0x_8D, 0x_50, 0x_5B, 0x_85, 0x_D5, 0x_9B, 0x_90, 0x_C3, 0x_43, 0x_DF, 0x_14, 0x_FB, 0x_38, 0x_D3,
		0x_E9, 0x_51, 0x_28, 0x_77, 0x_E3, 0x_13, 0x_15, 0x_16, 0x_C8, 0x_BE, 0x_40, 0x_F5, 0x_E2, 0x_AD, 0x_70,
		0x_BB, 0x_3F, 0x_57, 0x_23, 0x_C1, 0x_3A, 0x_E5, 0x_7C, 0x_31, 0x_4A, 0x_82, 0x_C0, 0x_FC, 0x_18, 0x_A7,
		0x_D6, 0x_4F, 0x_59, 0x_B1, 0x_36, 0x_E1, 0x_03, 0x_89, 0x_4C, 0x_25, 0x_C5, 0x_46, 0x_5E, 0x_2E, 0x_DC,
		0x_A0, 0x_3B, 0x_99, 0x_10, 0x_79, 0x_7A, 0x_91, 0x_42, 0x_80, 0x_06, 0x_EC, 0x_72, 0x_CA, 0x_62, 0x_39,
		0x_F4, 0x_DB, 0x_9E, 0x_A6, 0x_8A, 0x_FE, 0x_AE, 0x_9D, 0x_6F, 0x_0E, 0x_B2, 0x_17, 0x_CB, 0x_AF, 0x_61,
		0x_63, 0x_6B, 0x_D2, 0x_BF, 0x_8E, 0x_60, 0x_3D, 0x_52, 0x_FA, 0x_78, 0x_CE, 0x_30, 0x_98, 0x_54, 0x_74,
		0x_1B, 0x_A5, 0x_BA, 0x_F9, 0x_41, 0x_8C, 0x_81, 0x_AB, 0x_D4, 0x_75, 0x_68, 0x_C2, 0x_69, 0x_4E, 0x_D8,
		0x_2C, 0x_E7, 0x_B4, 0x_84, 0x_37, 0x_B3, 0x_C4, 0x_34, 0x_8B, 0x_7F, 0x_BC, 0x_08, 0x_A3, 0x_02, 0x_47,
		0x_26, 0x_EE, 0x_A1, 0x_EB, 0x_E0, 0x_2A, 0x_65, 0x_F6, 0x_B0, 0x_97, 0x_D0, 0x_1C, 0x_33, 0x_F1, 0x_21,
		0x_C6, 0x_BD, 0x_64, 0x_32, 0x_86, 0x_8F, 0x_96, 0x_27, 0x_DE, 0x_F0, 0x_71, 0x_6E, 0x_CF,
	];

	helper(S, BASE, -762_164_728);
}
// endregion
// region: s_has_minus_2_in_base_247_and_insignificant_bytes
#[test]
fn s_has_minus_2_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_10, 0x_0A, 0x_12, 0x_E4, 0x_78, 0x_90, 0x_18, 0x_84, 0x_54, 0x_92, 0x_ED, 0x_A0, 0x_F8, 0x_B3,
		0x_15, 0x_A8, 0x_03, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_63, 0x_10, 0x_46, 0x_9B, 0x_AD, 0x_6C, 0x_D2, 0x_12, 0x_F4, 0x_F8, 0x_41, 0x_F2, 0x_22, 0x_D6,
		0x_D9, 0x_90, 0x_3C, 0x_B2, 0x_2C, 0x_9A, 0x_9D, 0x_0F, 0x_8C, 0x_FB, 0x_CF, 0x_6B, 0x_96, 0x_F9, 0x_6F,
		0x_5C, 0x_07, 0x_1F, 0x_E8, 0x_94, 0x_77, 0x_5F, 0x_6A, 0x_02, 0x_BD, 0x_04, 0x_ED, 0x_8A, 0x_A2, 0x_95,
		0x_E0, 0x_67, 0x_08, 0x_16, 0x_8B, 0x_D3, 0x_43, 0x_BF, 0x_70, 0x_11, 0x_34, 0x_73, 0x_C9, 0x_82, 0x_6E,
		0x_AF, 0x_7C, 0x_47, 0x_40, 0x_93, 0x_56, 0x_49, 0x_35, 0x_78, 0x_E1, 0x_E5, 0x_CB, 0x_17, 0x_B0, 0x_1D,
		0x_BE, 0x_81, 0x_D1, 0x_58, 0x_E2, 0x_A6, 0x_61, 0x_A0, 0x_FD, 0x_79, 0x_DD, 0x_39, 0x_7B, 0x_05, 0x_44,
		0x_98, 0x_A9, 0x_4F, 0x_50, 0x_C3, 0x_DB, 0x_9F, 0x_32, 0x_33, 0x_68, 0x_A5, 0x_42, 0x_75, 0x_7E, 0x_D4,
		0x_71, 0x_B3, 0x_CA, 0x_D5, 0x_26, 0x_B1, 0x_F3, 0x_27, 0x_BA, 0x_EB, 0x_57, 0x_B7, 0x_66, 0x_A3, 0x_52,
		0x_28, 0x_87, 0x_CD, 0x_5E, 0x_DF, 0x_83, 0x_AA, 0x_E7, 0x_AE, 0x_88, 0x_64, 0x_F1, 0x_54, 0x_D0, 0x_86,
		0x_B9, 0x_DE, 0x_B6, 0x_4C, 0x_60, 0x_A8, 0x_1E, 0x_F7, 0x_45, 0x_85, 0x_C0, 0x_5A, 0x_E3, 0x_1A, 0x_14,
		0x_C5, 0x_65, 0x_99, 0x_92, 0x_C8, 0x_7F, 0x_91, 0x_E4, 0x_A1, 0x_F6, 0x_72, 0x_55, 0x_59, 0x_BC, 0x_19,
		0x_38, 0x_30, 0x_D8, 0x_13, 0x_53, 0x_FC, 0x_C2, 0x_18, 0x_24, 0x_5D, 0x_6D, 0x_F0, 0x_37, 0x_A7, 0x_01,
		0x_7A, 0x_AC, 0x_CE, 0x_2E, 0x_3D, 0x_F5, 0x_3F, 0x_8D, 0x_FA, 0x_25, 0x_0E, 0x_3A, 0x_2A, 0x_B8, 0x_3B,
		0x_74, 0x_4D, 0x_EF, 0x_8E, 0x_48, 0x_03, 0x_9C, 0x_29, 0x_FF, 0x_4E, 0x_B4, 0x_76, 0x_80, 0x_A4, 0x_62,
		0x_4A, 0x_FE, 0x_BB, 0x_8F, 0x_EE, 0x_9E, 0x_1C, 0x_84, 0x_69, 0x_21, 0x_EC, 0x_B5, 0x_31, 0x_1B, 0x_E6,
		0x_CC, 0x_C4, 0x_2F, 0x_3E, 0x_E9, 0x_EA, 0x_5B, 0x_C7, 0x_06, 0x_C6, 0x_23, 0x_4B, 0x_51, 0x_15, 0x_DA,
		0x_89, 0x_D7, 0x_DC, 0x_7D, 0x_36, 0x_AB, 0x_C1,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_minus_61_in_base_247_and_insignificant_bytes
#[test]
fn s_has_minus_61_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_29, 0x_2D, 0x_2E, 0x_9F, 0x_79, 0x_CD, 0x_1E, 0x_02, 0x_D0, 0x_F0, 0x_C8, 0x_8B, 0x_49, 0x_94,
		0x_23, 0x_70, 0x_9E, 0x_70, 0x_11, 0x_22, 0x_35, 0x_04, 0x_A8, 0x_E6, 0x_E2, 0x_E1, 0x_21, 0x_10, 0x_6F,
		0x_C6, 0x_F2, 0x_A7, 0x_B4, 0x_F2, 0x_F0, 0x_27, 0x_56,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_90, 0x_65, 0x_F6, 0x_32, 0x_7F, 0x_9D, 0x_89, 0x_42, 0x_44, 0x_D0, 0x_C9, 0x_30, 0x_D2, 0x_CD,
		0x_3B, 0x_62, 0x_EB, 0x_49, 0x_9C, 0x_EE, 0x_67, 0x_C7, 0x_8B, 0x_8D, 0x_14, 0x_AB, 0x_8F, 0x_86, 0x_26,
		0x_76, 0x_01, 0x_99, 0x_E3, 0x_79, 0x_41, 0x_19, 0x_46, 0x_48, 0x_E5, 0x_FC, 0x_6E, 0x_83, 0x_6C, 0x_2C,
		0x_16, 0x_7A, 0x_81, 0x_B9, 0x_DB, 0x_5A, 0x_BA, 0x_C8, 0x_3A, 0x_25, 0x_E1, 0x_F8, 0x_E2, 0x_4A, 0x_3F,
		0x_E7, 0x_29, 0x_F4, 0x_8E, 0x_1F, 0x_D4, 0x_F7, 0x_2F, 0x_36, 0x_5B, 0x_43, 0x_BD, 0x_C3, 0x_D9, 0x_6B,
		0x_5F, 0x_3D, 0x_3E, 0x_45, 0x_DA, 0x_F5, 0x_47, 0x_7B, 0x_5C, 0x_15, 0x_98, 0x_F9, 0x_D7, 0x_E8, 0x_A6,
		0x_11, 0x_D3, 0x_9A, 0x_80, 0x_0F, 0x_1B, 0x_AA, 0x_2A, 0x_35, 0x_06, 0x_28, 0x_A1, 0x_4B, 0x_B2, 0x_5D,
		0x_5E, 0x_31, 0x_78, 0x_40, 0x_A2, 0x_6F, 0x_A5, 0x_97, 0x_85, 0x_54, 0x_EA, 0x_B7, 0x_05, 0x_CE, 0x_71,
		0x_12, 0x_E6, 0x_CB, 0x_A8, 0x_52, 0x_7E, 0x_66, 0x_8C, 0x_1E, 0x_77, 0x_60, 0x_CF, 0x_AE, 0x_F0, 0x_CA,
		0x_91, 0x_9F, 0x_FA, 0x_39, 0x_C2, 0x_3C, 0x_64, 0x_C0, 0x_72, 0x_10, 0x_87, 0x_1C, 0x_13, 0x_53, 0x_24,
		0x_73, 0x_FB, 0x_BE, 0x_96, 0x_E4, 0x_33, 0x_BF, 0x_ED, 0x_92, 0x_56, 0x_AD, 0x_69, 0x_9B, 0x_DD, 0x_2E,
		0x_D1, 0x_FE, 0x_6D, 0x_1D, 0x_C6, 0x_7D, 0x_7C, 0x_1A, 0x_D8, 0x_4D, 0x_17, 0x_74, 0x_B0, 0x_88, 0x_B4,
		0x_A9, 0x_51, 0x_B8, 0x_B1, 0x_38, 0x_EF, 0x_EC, 0x_B6, 0x_07, 0x_37, 0x_4F, 0x_D5, 0x_CC, 0x_34, 0x_58,
		0x_21, 0x_B3, 0x_BB, 0x_F3, 0x_D6, 0x_DE, 0x_18, 0x_F2, 0x_C4, 0x_04, 0x_0E, 0x_57, 0x_A0, 0x_FD, 0x_02,
		0x_C1, 0x_95, 0x_DC, 0x_55, 0x_84, 0x_9E, 0x_23, 0x_AF, 0x_61, 0x_8A, 0x_27, 0x_63, 0x_A4, 0x_68, 0x_50,
		0x_08, 0x_DF, 0x_E0, 0x_C5, 0x_59, 0x_E9, 0x_AC, 0x_93, 0x_4C, 0x_82, 0x_A3, 0x_B5, 0x_A7, 0x_BC, 0x_22,
		0x_70, 0x_6A, 0x_F1, 0x_4E, 0x_03, 0x_FF, 0x_75,
	];

	helper(S, BASE, -61);
}
// endregion
// region: s_has_minus_680_in_base_247_and_insignificant_bytes
#[test]
fn s_has_minus_680_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_D0, 0x_A8, 0x_0A, 0x_8B, 0x_2A, 0x_BF, 0x_66, 0x_B1, 0x_EA, 0x_8D, 0x_5B, 0x_04, 0x_A8, 0x_C2,
		0x_E1, 0x_07, 0x_C7, 0x_97, 0x_10, 0x_EF, 0x_3E, 0x_17, 0x_A0, 0x_4C, 0x_A5, 0x_88, 0x_DE, 0x_4D, 0x_C7,
		0x_60, 0x_E8, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_C7, 0x_D0, 0x_D7, 0x_14, 0x_CE, 0x_56, 0x_66, 0x_57, 0x_A6, 0x_67, 0x_E1, 0x_1E, 0x_2F, 0x_4A,
		0x_46, 0x_8F, 0x_BD, 0x_31, 0x_A5, 0x_F6, 0x_E2, 0x_37, 0x_AC, 0x_8C, 0x_80, 0x_FA, 0x_EA, 0x_22, 0x_EF,
		0x_35, 0x_89, 0x_E3, 0x_7C, 0x_4E, 0x_EB, 0x_EE, 0x_6A, 0x_CA, 0x_99, 0x_86, 0x_1D, 0x_16, 0x_C5, 0x_75,
		0x_8D, 0x_9A, 0x_3E, 0x_4C, 0x_D8, 0x_03, 0x_F4, 0x_0F, 0x_23, 0x_FC, 0x_73, 0x_1F, 0x_9E, 0x_BB, 0x_2A,
		0x_36, 0x_95, 0x_DB, 0x_88, 0x_68, 0x_D6, 0x_8E, 0x_90, 0x_76, 0x_50, 0x_C9, 0x_AD, 0x_A2, 0x_9D, 0x_7A,
		0x_59, 0x_34, 0x_18, 0x_E0, 0x_92, 0x_2C, 0x_97, 0x_71, 0x_A0, 0x_25, 0x_CB, 0x_53, 0x_64, 0x_4B, 0x_6C,
		0x_83, 0x_3B, 0x_61, 0x_17, 0x_04, 0x_D4, 0x_B6, 0x_BA, 0x_C8, 0x_33, 0x_B8, 0x_78, 0x_77, 0x_4F, 0x_A4,
		0x_40, 0x_98, 0x_6D, 0x_08, 0x_72, 0x_39, 0x_94, 0x_87, 0x_55, 0x_58, 0x_DF, 0x_12, 0x_E4, 0x_2E, 0x_AE,
		0x_42, 0x_6F, 0x_81, 0x_96, 0x_13, 0x_C6, 0x_02, 0x_EC, 0x_48, 0x_F8, 0x_19, 0x_26, 0x_5B, 0x_9B, 0x_A9,
		0x_D1, 0x_7D, 0x_3A, 0x_CD, 0x_B4, 0x_47, 0x_B2, 0x_24, 0x_32, 0x_21, 0x_E9, 0x_D3, 0x_79, 0x_70, 0x_AA,
		0x_BE, 0x_7E, 0x_3D, 0x_9C, 0x_F0, 0x_4D, 0x_3F, 0x_01, 0x_63, 0x_C3, 0x_9F, 0x_F1, 0x_85, 0x_D2, 0x_BC,
		0x_B7, 0x_1A, 0x_A1, 0x_DE, 0x_8A, 0x_DA, 0x_AB, 0x_B3, 0x_15, 0x_6B, 0x_D5, 0x_5E, 0x_5A, 0x_C4, 0x_7B,
		0x_07, 0x_CF, 0x_F7, 0x_E7, 0x_B5, 0x_5C, 0x_A8, 0x_B9, 0x_DC, 0x_27, 0x_F2, 0x_D9, 0x_FD, 0x_E5, 0x_BF,
		0x_43, 0x_62, 0x_11, 0x_C2, 0x_0E, 0x_7F, 0x_8B, 0x_65, 0x_ED, 0x_05, 0x_93, 0x_FE, 0x_10, 0x_84, 0x_29,
		0x_54, 0x_AF, 0x_52, 0x_C0, 0x_3C, 0x_51, 0x_91, 0x_E6, 0x_1B, 0x_49, 0x_74, 0x_A7, 0x_C1, 0x_F3, 0x_5D,
		0x_1C, 0x_60, 0x_B1, 0x_44, 0x_38, 0x_30, 0x_69, 0x_F5, 0x_FF, 0x_DD, 0x_FB, 0x_A3, 0x_06, 0x_F9, 0x_5F,
		0x_E8, 0x_CC, 0x_28, 0x_6E, 0x_82, 0x_41, 0x_45,
	];

	helper(S, BASE, -680);
}
// endregion
// region: s_has_minus_4_820_in_base_247_and_insignificant_bytes
#[test]
fn s_has_minus_4_820_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_FF, 0x_F0, 0x_0C, 0x_75, 0x_8A, 0x_EA, 0x_1F, 0x_88, 0x_F1, 0x_9E, 0x_DC, 0x_06, 0x_DD, 0x_5F,
		0x_E9, 0x_DA, 0x_69, 0x_C4, 0x_F1, 0x_8B, 0x_41, 0x_A5, 0x_4F, 0x_81, 0x_B1, 0x_4A, 0x_BA, 0x_CD, 0x_A3,
		0x_21, 0x_3D, 0x_9C, 0x_74, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_B8, 0x_7B, 0x_0E, 0x_3C, 0x_6F, 0x_B5, 0x_07, 0x_2A, 0x_2F, 0x_4D, 0x_A4, 0x_A9, 0x_33, 0x_80,
		0x_6A, 0x_C2, 0x_62, 0x_9F, 0x_FF, 0x_3A, 0x_13, 0x_02, 0x_A6, 0x_57, 0x_94, 0x_69, 0x_99, 0x_1A, 0x_ED,
		0x_38, 0x_C0, 0x_D3, 0x_F9, 0x_6D, 0x_22, 0x_51, 0x_C6, 0x_52, 0x_CC, 0x_9D, 0x_10, 0x_34, 0x_24, 0x_DA,
		0x_42, 0x_23, 0x_73, 0x_78, 0x_D0, 0x_F1, 0x_61, 0x_D1, 0x_1D, 0x_6B, 0x_A8, 0x_7F, 0x_01, 0x_AA, 0x_43,
		0x_CF, 0x_4A, 0x_5E, 0x_DD, 0x_79, 0x_96, 0x_84, 0x_F3, 0x_04, 0x_A7, 0x_49, 0x_A5, 0x_14, 0x_45, 0x_56,
		0x_30, 0x_CD, 0x_39, 0x_AC, 0x_AD, 0x_46, 0x_4B, 0x_8E, 0x_DB, 0x_8C, 0x_EC, 0x_55, 0x_A1, 0x_E0, 0x_68,
		0x_7E, 0x_27, 0x_58, 0x_E3, 0x_37, 0x_31, 0x_98, 0x_DF, 0x_97, 0x_44, 0x_F5, 0x_F6, 0x_F4, 0x_BD, 0x_B4,
		0x_D2, 0x_5B, 0x_93, 0x_CA, 0x_28, 0x_E7, 0x_E8, 0x_D8, 0x_53, 0x_3B, 0x_DC, 0x_C9, 0x_60, 0x_5C, 0x_B0,
		0x_7C, 0x_E4, 0x_6C, 0x_9C, 0x_D6, 0x_B2, 0x_4F, 0x_F0, 0x_91, 0x_E5, 0x_74, 0x_C8, 0x_CB, 0x_9B, 0x_15,
		0x_35, 0x_4C, 0x_7D, 0x_47, 0x_D9, 0x_CE, 0x_9A, 0x_6E, 0x_7A, 0x_A0, 0x_9E, 0x_D5, 0x_5D, 0x_EA, 0x_26,
		0x_8B, 0x_12, 0x_21, 0x_D7, 0x_3D, 0x_72, 0x_66, 0x_3E, 0x_5A, 0x_06, 0x_C3, 0x_AB, 0x_B1, 0x_8D, 0x_BA,
		0x_1C, 0x_63, 0x_EB, 0x_89, 0x_C5, 0x_AF, 0x_40, 0x_BF, 0x_B9, 0x_75, 0x_16, 0x_DE, 0x_3F, 0x_FC, 0x_8F,
		0x_A2, 0x_88, 0x_A3, 0x_EF, 0x_05, 0x_E1, 0x_B3, 0x_2C, 0x_29, 0x_25, 0x_C1, 0x_41, 0x_19, 0x_81, 0x_59,
		0x_82, 0x_EE, 0x_F8, 0x_32, 0x_08, 0x_86, 0x_65, 0x_5F, 0x_FA, 0x_83, 0x_AE, 0x_B7, 0x_E2, 0x_67, 0x_8A,
		0x_FB, 0x_76, 0x_FD, 0x_90, 0x_BE, 0x_E6, 0x_85, 0x_C7, 0x_2E, 0x_71, 0x_1F, 0x_1E, 0x_1B, 0x_95, 0x_FE,
		0x_4E, 0x_18, 0x_F2, 0x_D4, 0x_BC, 0x_E9, 0x_36, 0x_0F, 0x_17, 0x_54, 0x_50, 0x_03, 0x_48, 0x_87, 0x_11,
		0x_B6, 0x_64, 0x_F7, 0x_70, 0x_BB, 0x_92, 0x_C4,
	];

	helper(S, BASE, -4_820);
}
// endregion
// region: s_has_minus_51_489_in_base_247_and_insignificant_bytes
#[test]
fn s_has_minus_51_489_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_EB, 0x_7C, 0x_09, 0x_58, 0x_79, 0x_C7, 0x_45, 0x_A9, 0x_6B, 0x_12, 0x_03, 0x_DC, 0x_87, 0x_78,
		0x_6F, 0x_D4, 0x_71, 0x_F4, 0x_8D, 0x_87, 0x_10, 0x_56, 0x_E1, 0x_E8, 0x_92, 0x_97, 0x_48, 0x_2F, 0x_5A,
		0x_90, 0x_B8, 0x_02, 0x_F2, 0x_C3, 0x_A8, 0x_8D, 0x_6E, 0x_4B, 0x_92, 0x_F3, 0x_E7, 0x_4D, 0x_C9, 0x_4A,
		0x_7F,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_61, 0x_1B, 0x_0F, 0x_7D, 0x_F8, 0x_A5, 0x_34, 0x_AD, 0x_39, 0x_99, 0x_01, 0x_67, 0x_E1, 0x_36,
		0x_D0, 0x_C7, 0x_CE, 0x_B9, 0x_19, 0x_F0, 0x_90, 0x_96, 0x_17, 0x_B3, 0x_EF, 0x_ED, 0x_A2, 0x_5F, 0x_C8,
		0x_6E, 0x_32, 0x_A3, 0x_93, 0x_FC, 0x_85, 0x_BE, 0x_70, 0x_AB, 0x_81, 0x_02, 0x_6B, 0x_8F, 0x_CA, 0x_E4,
		0x_53, 0x_59, 0x_89, 0x_03, 0x_A1, 0x_D6, 0x_84, 0x_F5, 0x_E5, 0x_71, 0x_8C, 0x_49, 0x_95, 0x_C0, 0x_91,
		0x_8D, 0x_23, 0x_56, 0x_2A, 0x_A9, 0x_A7, 0x_B8, 0x_3B, 0x_BF, 0x_F3, 0x_D2, 0x_BB, 0x_AA, 0x_38, 0x_CC,
		0x_6F, 0x_51, 0x_50, 0x_1C, 0x_9A, 0x_AE, 0x_42, 0x_1A, 0x_58, 0x_8B, 0x_63, 0x_30, 0x_8E, 0x_D8, 0x_FA,
		0x_35, 0x_F9, 0x_55, 0x_E2, 0x_27, 0x_37, 0x_2E, 0x_C9, 0x_E7, 0x_F7, 0x_BD, 0x_16, 0x_7E, 0x_33, 0x_21,
		0x_77, 0x_25, 0x_D9, 0x_11, 0x_5C, 0x_94, 0x_41, 0x_C5, 0x_7C, 0x_62, 0x_5B, 0x_CD, 0x_4E, 0x_E0, 0x_43,
		0x_9C, 0x_18, 0x_1E, 0x_54, 0x_3C, 0x_22, 0x_9F, 0x_6D, 0x_7A, 0x_92, 0x_72, 0x_B7, 0x_2F, 0x_A6, 0x_65,
		0x_FE, 0x_7B, 0x_7F, 0x_DA, 0x_64, 0x_86, 0x_FB, 0x_B1, 0x_E3, 0x_DC, 0x_04, 0x_66, 0x_C3, 0x_74, 0x_4D,
		0x_E9, 0x_3A, 0x_EC, 0x_D7, 0x_E8, 0x_F4, 0x_5D, 0x_5A, 0x_40, 0x_13, 0x_08, 0x_3E, 0x_3D, 0x_F6, 0x_9D,
		0x_0E, 0x_87, 0x_48, 0x_FD, 0x_CF, 0x_12, 0x_CB, 0x_80, 0x_4C, 0x_C6, 0x_E6, 0x_C4, 0x_75, 0x_5E, 0x_07,
		0x_F2, 0x_EA, 0x_D4, 0x_15, 0x_45, 0x_68, 0x_BC, 0x_6A, 0x_B4, 0x_EE, 0x_C2, 0x_B5, 0x_4A, 0x_47, 0x_82,
		0x_4F, 0x_73, 0x_88, 0x_78, 0x_B2, 0x_D5, 0x_52, 0x_76, 0x_2C, 0x_DB, 0x_A4, 0x_1D, 0x_44, 0x_EB, 0x_FF,
		0x_9E, 0x_60, 0x_24, 0x_46, 0x_D3, 0x_DD, 0x_3F, 0x_DE, 0x_A0, 0x_F1, 0x_83, 0x_28, 0x_10, 0x_D1, 0x_6C,
		0x_AF, 0x_8A, 0x_57, 0x_4B, 0x_9B, 0x_A8, 0x_B6, 0x_C1, 0x_AC, 0x_79, 0x_97, 0x_DF, 0x_06, 0x_29, 0x_69,
		0x_14, 0x_BA, 0x_98, 0x_26, 0x_B0, 0x_1F, 0x_31,
	];

	helper(S, BASE, -51_489);
}
// endregion
// region: s_has_minus_985_248_in_base_247_and_insignificant_bytes
#[test]
fn s_has_minus_985_248_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_A5, 0x_31, 0x_FD, 0x_0B, 0x_A9, 0x_B4, 0x_EA, 0x_30, 0x_3F, 0x_07, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_28, 0x_73, 0x_65, 0x_35, 0x_4D, 0x_D6, 0x_F3, 0x_23, 0x_1F, 0x_91, 0x_D0, 0x_FB, 0x_51, 0x_B6,
		0x_A8, 0x_A5, 0x_A1, 0x_6D, 0x_5C, 0x_59, 0x_18, 0x_83, 0x_87, 0x_1D, 0x_3C, 0x_B1, 0x_01, 0x_E4, 0x_94,
		0x_CC, 0x_88, 0x_50, 0x_6C, 0x_E9, 0x_60, 0x_31, 0x_4F, 0x_D7, 0x_47, 0x_4B, 0x_C2, 0x_21, 0x_9A, 0x_3A,
		0x_22, 0x_39, 0x_EF, 0x_D1, 0x_EC, 0x_C1, 0x_CD, 0x_B9, 0x_53, 0x_5F, 0x_98, 0x_7B, 0x_FE, 0x_D5, 0x_38,
		0x_79, 0x_54, 0x_5D, 0x_D3, 0x_F5, 0x_E8, 0x_11, 0x_4E, 0x_C0, 0x_25, 0x_DE, 0x_5B, 0x_61, 0x_1B, 0x_EB,
		0x_52, 0x_E5, 0x_2F, 0x_96, 0x_F8, 0x_FA, 0x_46, 0x_9D, 0x_42, 0x_E2, 0x_1E, 0x_3B, 0x_33, 0x_AC, 0x_E1,
		0x_C4, 0x_CE, 0x_DA, 0x_69, 0x_40, 0x_D8, 0x_A2, 0x_0F, 0x_9E, 0x_56, 0x_F4, 0x_57, 0x_05, 0x_C3, 0x_55,
		0x_70, 0x_ED, 0x_89, 0x_4A, 0x_71, 0x_BF, 0x_08, 0x_D2, 0x_6E, 0x_B8, 0x_A9, 0x_07, 0x_C5, 0x_B7, 0x_2A,
		0x_BA, 0x_63, 0x_81, 0x_CF, 0x_8E, 0x_3D, 0x_7C, 0x_8A, 0x_9B, 0x_5A, 0x_43, 0x_BC, 0x_7E, 0x_9F, 0x_99,
		0x_80, 0x_2E, 0x_BB, 0x_6F, 0x_97, 0x_29, 0x_82, 0x_F9, 0x_27, 0x_BE, 0x_62, 0x_F7, 0x_77, 0x_90, 0x_7F,
		0x_3E, 0x_64, 0x_AB, 0x_DC, 0x_95, 0x_5E, 0x_B4, 0x_19, 0x_74, 0x_76, 0x_F6, 0x_C6, 0x_DB, 0x_8F, 0x_32,
		0x_CA, 0x_B3, 0x_E0, 0x_DF, 0x_DD, 0x_A7, 0x_34, 0x_44, 0x_72, 0x_1A, 0x_6B, 0x_A0, 0x_7D, 0x_75, 0x_7A,
		0x_78, 0x_EA, 0x_C9, 0x_26, 0x_8C, 0x_17, 0x_E6, 0x_E7, 0x_8B, 0x_F2, 0x_C7, 0x_A3, 0x_2C, 0x_13, 0x_D4,
		0x_E3, 0x_1C, 0x_0E, 0x_4C, 0x_84, 0x_AF, 0x_B5, 0x_49, 0x_24, 0x_68, 0x_93, 0x_58, 0x_10, 0x_14, 0x_66,
		0x_06, 0x_B2, 0x_FD, 0x_AE, 0x_EE, 0x_BD, 0x_D9, 0x_3F, 0x_03, 0x_FF, 0x_04, 0x_92, 0x_A6, 0x_30, 0x_85,
		0x_37, 0x_FC, 0x_86, 0x_CB, 0x_A4, 0x_02, 0x_12, 0x_16, 0x_AD, 0x_45, 0x_AA, 0x_C8, 0x_36, 0x_41, 0x_F0,
		0x_15, 0x_8D, 0x_B0, 0x_67, 0x_6A, 0x_48, 0x_F1,
	];

	helper(S, BASE, -985_248);
}
// endregion
// region: s_has_minus_9_829_923_in_base_247_and_insignificant_bytes
#[test]
fn s_has_minus_9_829_923_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_3D, 0x_47, 0x_4A, 0x_2D, 0x_C6, 0x_FB, 0x_DF, 0x_CB, 0x_7C, 0x_CF, 0x_04, 0x_54, 0x_E1, 0x_8C,
		0x_11, 0x_83, 0x_76, 0x_5D, 0x_33, 0x_5F, 0x_A5, 0x_EF, 0x_11, 0x_19, 0x_04, 0x_6C, 0x_E7, 0x_50, 0x_DF,
		0x_CC, 0x_E9, 0x_8B, 0x_A2, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_D7, 0x_E8, 0x_16, 0x_C2, 0x_B3, 0x_E0, 0x_42, 0x_3B, 0x_B6, 0x_3E, 0x_FC, 0x_63, 0x_A0, 0x_6A,
		0x_A1, 0x_D0, 0x_28, 0x_35, 0x_64, 0x_0E, 0x_DD, 0x_72, 0x_3F, 0x_FE, 0x_34, 0x_08, 0x_BC, 0x_66, 0x_40,
		0x_47, 0x_77, 0x_CB, 0x_BA, 0x_FD, 0x_15, 0x_B7, 0x_A7, 0x_D4, 0x_F6, 0x_93, 0x_BF, 0x_7F, 0x_80, 0x_12,
		0x_A4, 0x_D2, 0x_D5, 0x_21, 0x_33, 0x_49, 0x_D3, 0x_B4, 0x_EA, 0x_E1, 0x_F4, 0x_5F, 0x_29, 0x_98, 0x_96,
		0x_E6, 0x_38, 0x_43, 0x_E9, 0x_4A, 0x_07, 0x_67, 0x_1B, 0x_AF, 0x_AD, 0x_39, 0x_9B, 0x_F3, 0x_7E, 0x_EF,
		0x_51, 0x_B0, 0x_04, 0x_95, 0x_A3, 0x_E4, 0x_C3, 0x_9D, 0x_E7, 0x_D6, 0x_05, 0x_7D, 0x_24, 0x_D8, 0x_EC,
		0x_CD, 0x_9A, 0x_EE, 0x_B8, 0x_11, 0x_B5, 0x_1C, 0x_F5, 0x_1D, 0x_9E, 0x_5D, 0x_DB, 0x_53, 0x_84, 0x_3C,
		0x_B9, 0x_CA, 0x_37, 0x_DC, 0x_10, 0x_59, 0x_45, 0x_DE, 0x_CC, 0x_18, 0x_58, 0x_8F, 0x_7A, 0x_87, 0x_8C,
		0x_5E, 0x_CF, 0x_32, 0x_1E, 0x_C6, 0x_4B, 0x_6D, 0x_BD, 0x_FB, 0x_68, 0x_06, 0x_85, 0x_82, 0x_F2, 0x_94,
		0x_AE, 0x_AB, 0x_C1, 0x_70, 0x_13, 0x_DF, 0x_C7, 0x_F8, 0x_7B, 0x_46, 0x_AC, 0x_F9, 0x_FF, 0x_69, 0x_89,
		0x_99, 0x_6B, 0x_D1, 0x_1A, 0x_5A, 0x_0F, 0x_9F, 0x_6E, 0x_79, 0x_75, 0x_F1, 0x_3D, 0x_81, 0x_E5, 0x_44,
		0x_A8, 0x_B1, 0x_2F, 0x_DA, 0x_A5, 0x_17, 0x_4D, 0x_26, 0x_97, 0x_73, 0x_C5, 0x_92, 0x_76, 0x_62, 0x_19,
		0x_01, 0x_B2, 0x_30, 0x_C4, 0x_A6, 0x_61, 0x_86, 0x_65, 0x_A9, 0x_36, 0x_ED, 0x_22, 0x_55, 0x_2E, 0x_6F,
		0x_BB, 0x_71, 0x_03, 0x_90, 0x_D9, 0x_1F, 0x_14, 0x_4F, 0x_4C, 0x_60, 0x_50, 0x_3A, 0x_4E, 0x_A2, 0x_83,
		0x_CE, 0x_9C, 0x_F0, 0x_48, 0x_74, 0x_5B, 0x_EB, 0x_23, 0x_BE, 0x_31, 0x_C8, 0x_57, 0x_8A, 0x_25, 0x_2C,
		0x_41, 0x_88, 0x_6C, 0x_C0, 0x_F7, 0x_C9, 0x_54, 0x_7C, 0x_2A, 0x_91, 0x_78, 0x_5C, 0x_8D, 0x_AA, 0x_8B,
		0x_E3, 0x_02, 0x_FA, 0x_E2, 0x_27, 0x_52, 0x_8E,
	];

	helper(S, BASE, -9_829_923);
}
// endregion
// region: s_has_minus_91_648_946_in_base_247_and_insignificant_bytes
#[test]
fn s_has_minus_91_648_946_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_22, 0x_C1, 0x_0F, 0x_4F, 0x_2B, 0x_E9, 0x_76, 0x_FC, 0x_03, 0x_F1, 0x_F9, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_1B, 0x_8B, 0x_43, 0x_31, 0x_02, 0x_33, 0x_22, 0x_CF, 0x_F7, 0x_81, 0x_40, 0x_90, 0x_C5, 0x_AF, 0x_04,
		0x_91, 0x_F3, 0x_62, 0x_42, 0x_56, 0x_C1, 0x_5C, 0x_9E, 0x_CB, 0x_4A, 0x_60, 0x_1F, 0x_12, 0x_6F, 0x_88,
		0x_D2, 0x_CA, 0x_BA, 0x_89, 0x_1C, 0x_66, 0x_C9, 0x_25, 0x_47, 0x_97, 0x_13, 0x_32, 0x_9A, 0x_BE, 0x_86,
		0x_17, 0x_AE, 0x_CD, 0x_F9, 0x_67, 0x_B1, 0x_D4, 0x_B8, 0x_3E, 0x_0F, 0x_26, 0x_FF, 0x_E6, 0x_28, 0x_7A,
		0x_E5, 0x_95, 0x_2E, 0x_41, 0x_8A, 0x_36, 0x_D7, 0x_EF, 0x_AC, 0x_B4, 0x_84, 0x_69, 0x_B6, 0x_F8, 0x_8D,
		0x_3C, 0x_7B, 0x_E3, 0x_FE, 0x_F4, 0x_B9, 0x_DA, 0x_F5, 0x_73, 0x_4E, 0x_30, 0x_3D, 0x_77, 0x_68, 0x_63,
		0x_4F, 0x_5A, 0x_BD, 0x_E4, 0x_80, 0x_A1, 0x_57, 0x_4C, 0x_83, 0x_E9, 0x_75, 0x_34, 0x_71, 0x_FC, 0x_7E,
		0x_BC, 0x_35, 0x_96, 0x_C0, 0x_EA, 0x_C8, 0x_61, 0x_2A, 0x_E0, 0x_CC, 0x_7C, 0x_14, 0x_70, 0x_92, 0x_D3,
		0x_18, 0x_C6, 0x_FD, 0x_2F, 0x_D8, 0x_EB, 0x_5F, 0x_E2, 0x_D5, 0x_50, 0x_87, 0x_27, 0x_19, 0x_B2, 0x_6E,
		0x_E7, 0x_99, 0x_37, 0x_6D, 0x_DB, 0x_46, 0x_F2, 0x_39, 0x_45, 0x_65, 0x_D6, 0x_B5, 0x_B7, 0x_7D, 0x_A8,
		0x_BB, 0x_DC, 0x_06, 0x_15, 0x_B0, 0x_98, 0x_3A, 0x_9B, 0x_03, 0x_05, 0x_DD, 0x_8F, 0x_1A, 0x_C7, 0x_C4,
		0x_59, 0x_94, 0x_6A, 0x_58, 0x_79, 0x_A6, 0x_A2, 0x_2C, 0x_E8, 0x_F0, 0x_D1, 0x_5B, 0x_54, 0x_23, 0x_8E,
		0x_21, 0x_A4, 0x_EE, 0x_AD, 0x_48, 0x_B3, 0x_AA, 0x_CE, 0x_9C, 0x_8C, 0x_64, 0x_1E, 0x_3B, 0x_7F, 0x_3F,
		0x_A9, 0x_51, 0x_4B, 0x_AB, 0x_78, 0x_9F, 0x_29, 0x_E1, 0x_ED, 0x_08, 0x_A7, 0x_EC, 0x_6B, 0x_16, 0x_9D,
		0x_52, 0x_01, 0x_0E, 0x_DE, 0x_74, 0x_5E, 0x_D0, 0x_DF, 0x_82, 0x_BF, 0x_FB, 0x_C3, 0x_76, 0x_A0, 0x_49,
		0x_38, 0x_11, 0x_24, 0x_53, 0x_FA, 0x_F1, 0x_85, 0x_1D, 0x_6C, 0x_4D, 0x_D9, 0x_55, 0x_A5, 0x_10, 0x_93,
		0x_A3, 0x_72, 0x_5D, 0x_44, 0x_F6, 0x_C2, 0x_07,
	];

	helper(S, BASE, -91_648_946);
}
// endregion
// region: s_has_minus_398_149_664_in_base_247_and_insignificant_bytes
#[test]
fn s_has_minus_398_149_664_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_E6, 0x_01, 0x_16, 0x_E7, 0x_0C, 0x_DA, 0x_FE, 0x_AD, 0x_E3, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_A9, 0x_49, 0x_78, 0x_65, 0x_EB, 0x_3C, 0x_2E, 0x_3E, 0x_0E, 0x_23, 0x_62, 0x_84, 0x_8F, 0x_67,
		0x_60, 0x_2C, 0x_9B, 0x_6C, 0x_16, 0x_C5, 0x_D1, 0x_B4, 0x_47, 0x_CF, 0x_D5, 0x_E6, 0x_74, 0x_6D, 0x_DD,
		0x_21, 0x_63, 0x_69, 0x_5F, 0x_DB, 0x_54, 0x_1E, 0x_2A, 0x_3B, 0x_D0, 0x_87, 0x_CB, 0x_1D, 0x_BB, 0x_DA,
		0x_5D, 0x_F0, 0x_97, 0x_89, 0x_28, 0x_D2, 0x_68, 0x_D3, 0x_8D, 0x_E9, 0x_E3, 0x_51, 0x_12, 0x_BC, 0x_70,
		0x_07, 0x_96, 0x_AA, 0x_03, 0x_6B, 0x_8A, 0x_66, 0x_A8, 0x_5E, 0x_B6, 0x_34, 0x_26, 0x_71, 0x_99, 0x_CC,
		0x_F2, 0x_5A, 0x_81, 0x_1A, 0x_BA, 0x_4C, 0x_02, 0x_9A, 0x_8B, 0x_EC, 0x_45, 0x_CD, 0x_40, 0x_24, 0x_95,
		0x_AD, 0x_57, 0x_44, 0x_A7, 0x_E5, 0x_5C, 0x_B1, 0x_D9, 0x_A2, 0x_98, 0x_64, 0x_6F, 0x_1C, 0x_CE, 0x_01,
		0x_48, 0x_BE, 0x_B8, 0x_86, 0x_8E, 0x_42, 0x_29, 0x_56, 0x_77, 0x_D7, 0x_9E, 0x_72, 0x_0F, 0x_17, 0x_A6,
		0x_CA, 0x_4F, 0x_5B, 0x_AE, 0x_A5, 0x_F7, 0x_14, 0x_36, 0x_B5, 0x_4D, 0x_E4, 0x_19, 0x_18, 0x_08, 0x_79,
		0x_BD, 0x_C7, 0x_3F, 0x_ED, 0x_C2, 0x_8C, 0x_7F, 0x_FC, 0x_46, 0x_7C, 0x_92, 0x_9D, 0x_4A, 0x_C9, 0x_10,
		0x_85, 0x_15, 0x_91, 0x_EF, 0x_F9, 0x_FA, 0x_FD, 0x_73, 0x_F8, 0x_FE, 0x_35, 0x_A1, 0x_BF, 0x_7A, 0x_37,
		0x_F1, 0x_A3, 0x_33, 0x_41, 0x_F4, 0x_E2, 0x_F6, 0x_FB, 0x_2F, 0x_F5, 0x_EE, 0x_76, 0x_EA, 0x_88, 0x_E8,
		0x_AC, 0x_7E, 0x_25, 0x_27, 0x_6A, 0x_E0, 0x_D6, 0x_53, 0x_90, 0x_52, 0x_94, 0x_B7, 0x_30, 0x_AF, 0x_3D,
		0x_AB, 0x_D8, 0x_55, 0x_32, 0x_38, 0x_9C, 0x_B3, 0x_4B, 0x_06, 0x_6E, 0x_83, 0x_93, 0x_13, 0x_31, 0x_B9,
		0x_4E, 0x_D4, 0x_C6, 0x_DE, 0x_A4, 0x_7D, 0x_FF, 0x_11, 0x_75, 0x_43, 0x_7B, 0x_58, 0x_80, 0x_C0, 0x_04,
		0x_59, 0x_3A, 0x_B0, 0x_22, 0x_50, 0x_C8, 0x_DC, 0x_61, 0x_DF, 0x_B2, 0x_39, 0x_82, 0x_E7, 0x_C4, 0x_1B,
		0x_1F, 0x_F3, 0x_A0, 0x_05, 0x_C1, 0x_E1, 0x_C3,
	];

	helper(S, BASE, -398_149_664);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_in_base_2() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_09,
		0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_7B, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_AD, 0x_7B,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_28_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_minus_28_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_0C,
		0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_20,
		0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_9B, 0x_9B, 0x_9B, 0x_44, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_9B,
	];

	helper(S, BASE, -28);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_885_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_minus_885_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0C,
		0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_09,
		0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_BA, 0x_BA, 0x_38, 0x_BA, 0x_BA, 0x_BA, 0x_38, 0x_BA, 0x_38, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_BA,
	];

	helper(S, BASE, -885);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_4_085_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_minus_4_085_in_base_2() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_78, 0x_6E, 0x_78, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_6E,
	];

	helper(S, BASE, -4_085);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_61_481_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_minus_61_481_in_base_2() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_CC, 0x_9E, 0x_CC, 0x_9E,
		0x_9E, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_CC,
	];

	helper(S, BASE, -61_481);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_754_952_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_minus_754_952_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0B,
		0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_5A, 0x_47, 0x_5A, 0x_5A, 0x_5A, 0x_47, 0x_47, 0x_47,
		0x_47, 0x_5A, 0x_47, 0x_5A, 0x_47, 0x_47, 0x_47, 0x_47, 0x_5A, 0x_47, 0x_47, 0x_47,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_5A,
	];

	helper(S, BASE, -754_952);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_049_411_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_049_411_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0C,
		0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0A,
		0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_6A, 0x_6A, 0x_A8, 0x_6A, 0x_A8, 0x_6A, 0x_6A, 0x_6A, 0x_A8, 0x_A8, 0x_6A, 0x_A8,
		0x_A8, 0x_A8, 0x_A8, 0x_6A, 0x_6A, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_6A, 0x_6A,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_6A,
	];

	helper(S, BASE, -7_049_411);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_87_844_818_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_minus_87_844_818_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_09,
		0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_0D,
		0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_5B, 0x_56, 0x_5B, 0x_56, 0x_56, 0x_5B, 0x_5B,
		0x_5B, 0x_5B, 0x_56, 0x_56, 0x_56, 0x_5B, 0x_5B, 0x_56, 0x_56, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_56,
		0x_5B, 0x_56, 0x_56, 0x_5B, 0x_56,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_5B,
	];

	helper(S, BASE, -87_844_818);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_303_658_978_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_minus_303_658_978_in_base_2() {
	const S: &[u8] = &[
		0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_64, 0x_BD, 0x_BD, 0x_64, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_64, 0x_64, 0x_BD, 0x_BD, 0x_64, 0x_BD, 0x_64, 0x_64, 0x_64, 0x_BD, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_64, 0x_BD, 0x_BD, 0x_BD, 0x_64, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_64,
	];

	helper(S, BASE, -303_658_978);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_in_base_3() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_91, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_65, 0x_91, 0x_C5,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_44_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_minus_44_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_4E, 0x_4E, 0x_E9, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_4E, 0x_E9,
	];

	helper(S, BASE, -44);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_592_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_minus_592_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_9A, 0x_02, 0x_22, 0x_9A, 0x_9A, 0x_02,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_02, 0x_9A,
	];

	helper(S, BASE, -592);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_981_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_981_in_base_3() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_20,
		0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0C,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_E8,
		0x_E8, 0x_62, 0x_62, 0x_BD, 0x_E8, 0x_62, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_E8, 0x_BD,
	];

	helper(S, BASE, -2_981);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_39_775_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_minus_39_775_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_4F, 0x_F5, 0x_F5, 0x_F5, 0x_D3, 0x_4F, 0x_F5, 0x_F5, 0x_D3,
		0x_D3,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_D3, 0x_4F,
	];

	helper(S, BASE, -39_775);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_264_205_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_minus_264_205_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_09,
		0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0C,
		0x_20, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_28, 0x_72,
		0x_4C, 0x_28, 0x_72, 0x_4C, 0x_28, 0x_4C,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_4C, 0x_72,
	];

	helper(S, BASE, -264_205);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_435_847_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_435_847_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0C,
		0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_86, 0x_86, 0x_86, 0x_01, 0x_01, 0x_01, 0x_01, 0x_86, 0x_33, 0x_33, 0x_33, 0x_86, 0x_01,
		0x_33, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_86, 0x_01,
	];

	helper(S, BASE, -7_435_847);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_25_811_089_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_minus_25_811_089_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_12, 0x_13, 0x_12, 0x_1F, 0x_12, 0x_13, 0x_1F,
		0x_12, 0x_1F, 0x_1F, 0x_1F, 0x_12, 0x_12, 0x_1F, 0x_13, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_1F, 0x_12, 0x_13,
	];

	helper(S, BASE, -25_811_089);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_330_745_714_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_minus_330_745_714_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0A,
		0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0A,
		0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_60, 0x_29, 0x_60,
		0x_DF, 0x_DF, 0x_29, 0x_29, 0x_DF, 0x_DF, 0x_29, 0x_60, 0x_29, 0x_60, 0x_29, 0x_29, 0x_DF, 0x_60, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_29, 0x_60,
	];

	helper(S, BASE, -330_745_714);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0C,
		0x_0A, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_B9,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_14, 0x_A9, 0x_B9, 0x_7F,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_41_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_minus_41_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0B,
		0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_DB, 0x_5C, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_DB, 0x_79, 0x_5C, 0x_13,
	];

	helper(S, BASE, -41);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_624_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_minus_624_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0D,
		0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0D,
		0x_0A, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_71, 0x_71, 0x_71, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_9B, 0x_70, 0x_04, 0x_71,
	];

	helper(S, BASE, -624);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_9_642_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_minus_9_642_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_DB, 0x_E5,
		0x_4F, 0x_E5, 0x_DB, 0x_4F,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_15, 0x_4F, 0x_DB, 0x_2C,
	];

	helper(S, BASE, -9_642);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_72_001_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_minus_72_001_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_11, 0x_6C, 0x_4F, 0x_D2, 0x_4F, 0x_4F,
		0x_D2,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_D2, 0x_59, 0x_6C, 0x_11,
	];

	helper(S, BASE, -72_001);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_145_084_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_minus_145_084_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0D,
		0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_0D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_73, 0x_2A, 0x_73, 0x_B6, 0x_CD, 0x_18, 0x_73, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_CD, 0x_73, 0x_B6, 0x_18, 0x_2A,
	];

	helper(S, BASE, -145_084);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_9_895_008_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_minus_9_895_008_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_0C,
		0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0D,
		0x_0D, 0x_0A, 0x_20, 0x_20, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_A6, 0x_D2, 0x_D2, 0x_A6, 0x_86, 0x_A6, 0x_FD, 0x_D2, 0x_D2, 0x_A6, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_A6, 0x_FD, 0x_86, 0x_1F,
	];

	helper(S, BASE, -9_895_008);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_15_488_694_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_minus_15_488_694_in_base_5() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0C,
		0x_09, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_18, 0x_56,
		0x_DF, 0x_1F, 0x_18, 0x_18, 0x_18, 0x_DF, 0x_56, 0x_1F, 0x_DF,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_18, 0x_56, 0x_1F, 0x_DF,
	];

	helper(S, BASE, -15_488_694);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_759_290_936_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_minus_759_290_936_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0C,
		0x_0A, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0D,
		0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_E1, 0x_49, 0x_78, 0x_E1, 0x_E1, 0x_E1, 0x_3B, 0x_E1, 0x_49,
		0x_78, 0x_78, 0x_78, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_92, 0x_78, 0x_E1, 0x_3B,
	];

	helper(S, BASE, -759_290_936);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_in_base_7() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_E5, 0x_59, 0x_72, 0x_07, 0x_4A, 0x_63,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_40_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_minus_40_in_base_7() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_B6, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_7C, 0x_68, 0x_AC, 0x_16, 0x_B6, 0x_EB,
	];

	helper(S, BASE, -40);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_227_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_minus_227_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0D,
		0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_A8, 0x_A8, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_1B, 0x_11, 0x_FB, 0x_38, 0x_A8, 0x_D1, 0x_5A,
	];

	helper(S, BASE, -227);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_911_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_911_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0B,
		0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0D,
		0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_AB, 0x_74, 0x_D9, 0x_AB, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_2A, 0x_74, 0x_AB, 0x_A4, 0x_19, 0x_AD,
	];

	helper(S, BASE, -7_911);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_97_059_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_minus_97_059_in_base_7() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0A,
		0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_8F, 0x_8F, 0x_A4, 0x_04, 0x_8F, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_B4, 0x_A4, 0x_61, 0x_FD, 0x_8F, 0x_04,
	];

	helper(S, BASE, -97_059);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_143_237_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_minus_143_237_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0D,
		0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0B,
		0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_C7, 0x_C7,
		0x_BB, 0x_1F, 0x_1F, 0x_C7, 0x_BB,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_C7, 0x_A2, 0x_BB, 0x_1F, 0x_02, 0x_99,
	];

	helper(S, BASE, -143_237);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_9_258_758_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_minus_9_258_758_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_3F, 0x_71, 0x_3F, 0x_71, 0x_B9, 0x_3F, 0x_15, 0x_3F, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_3F, 0x_E6, 0x_15, 0x_71, 0x_22, 0x_B9,
	];

	helper(S, BASE, -9_258_758);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_36_200_505_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_minus_36_200_505_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0C, 0x_0B,
		0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_92, 0x_5F, 0x_92, 0x_F2, 0x_92, 0x_5F, 0x_39, 0x_39, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_5F, 0x_98, 0x_DE, 0x_F2, 0x_39, 0x_92,
	];

	helper(S, BASE, -36_200_505);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_599_924_150_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_minus_599_924_150_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0A,
		0x_20, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_09,
		0x_0A, 0x_0D, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_70,
		0x_9C, 0x_14, 0x_9C, 0x_22, 0x_5C, 0x_14, 0x_70, 0x_9C, 0x_9C, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_5C, 0x_70, 0x_22, 0x_24, 0x_11, 0x_14,
	];

	helper(S, BASE, -599_924_150);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_8_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_minus_8_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_20,
		0x_09, 0x_0C, 0x_09, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_7E, 0x_CF, 0x_ED, 0x_5E, 0x_1A, 0x_8B, 0x_62, 0x_58, 0x_CE, 0x_10,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_11_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_minus_11_in_base_11() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D,
		0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_68, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_68, 0x_2A, 0x_3A, 0x_9D, 0x_E6, 0x_41, 0x_C3, 0x_90, 0x_AA, 0x_C5,
	];

	helper(S, BASE, -11);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_179_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_minus_179_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_09,
		0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_AE, 0x_97, 0x_89,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_AE, 0x_ED, 0x_89, 0x_AB, 0x_97, 0x_6B, 0x_21, 0x_C3, 0x_CC, 0x_05,
	];

	helper(S, BASE, -179);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_4_511_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_minus_4_511_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_A8, 0x_B7, 0x_A8, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_42, 0x_D7, 0x_A8, 0x_B7, 0x_F8, 0x_1D, 0x_BB, 0x_3F, 0x_9E, 0x_50,
	];

	helper(S, BASE, -4_511);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_19_592_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_minus_19_592_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_20,
		0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_5D, 0x_5B, 0x_FA, 0x_51, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_A5, 0x_5D, 0x_3A, 0x_5B, 0x_02, 0x_8C, 0x_7D, 0x_FA, 0x_BB, 0x_53, 0x_51,
	];

	helper(S, BASE, -19_592);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_873_424_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_minus_873_424_in_base_11() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_71, 0x_D5, 0x_0F,
		0x_17, 0x_D5, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_05, 0x_17, 0x_D4, 0x_D5, 0x_71, 0x_A8, 0x_0F, 0x_DA, 0x_CB, 0x_F0,
	];

	helper(S, BASE, -873_424);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_6_032_999_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_minus_6_032_999_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_09,
		0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0B,
		0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_EF, 0x_47, 0x_6A, 0x_B3, 0x_4A, 0x_6A, 0x_6A,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_54, 0x_3C, 0x_EF, 0x_47, 0x_6A, 0x_3E, 0x_4A, 0x_07, 0x_97, 0x_52,
	];

	helper(S, BASE, -6_032_999);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_36_528_225_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_minus_36_528_225_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0C,
		0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0D,
		0x_09, 0x_0A, 0x_20, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_C1, 0x_A0, 0x_8E, 0x_96, 0x_EC, 0x_D4, 0x_C1, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_C1, 0x_D4, 0x_E8, 0x_2C, 0x_AC, 0x_8E, 0x_DE, 0x_96, 0x_A0, 0x_EC,
	];

	helper(S, BASE, -36_528_225);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_318_316_900_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_minus_318_316_900_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0B,
		0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_20,
		0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_33, 0x_92, 0x_8A, 0x_8D, 0x_92, 0x_92, 0x_16, 0x_16, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_33, 0x_16, 0x_8A, 0x_3B, 0x_92, 0x_C5, 0x_8D, 0x_64, 0x_10, 0x_96,
	];

	helper(S, BASE, -318_316_900);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_8_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_minus_8_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_A3,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_10, 0x_FA, 0x_46, 0x_3A, 0x_A9, 0x_EA, 0x_96, 0x_A3, 0x_CB, 0x_70, 0x_36, 0x_1D,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_20_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_minus_20_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0B,
		0x_0C, 0x_0C, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_87, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_87, 0x_DB, 0x_79, 0x_C5, 0x_EE, 0x_6D, 0x_B8, 0x_86, 0x_5A, 0x_32, 0x_F5, 0x_A2,
	];

	helper(S, BASE, -20);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_369_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_minus_369_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_20,
		0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_EF, 0x_EF, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_73, 0x_EF, 0x_F4, 0x_6F, 0x_17, 0x_BD, 0x_30, 0x_12, 0x_6C, 0x_66, 0x_C1, 0x_FC,
	];

	helper(S, BASE, -369);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_8_563_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_minus_8_563_in_base_13() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_0A,
		0x_20, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0B,
		0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_F9, 0x_53, 0x_34, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_79, 0x_18, 0x_8D, 0x_F9, 0x_EB, 0x_EA, 0x_62, 0x_95, 0x_34, 0x_60, 0x_80, 0x_53, 0x_F7,
	];

	helper(S, BASE, -8_563);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_97_845_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_minus_97_845_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_C7, 0x_2C, 0x_81,
		0x_B4, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_9A, 0x_7A, 0x_C7, 0x_72, 0x_2C, 0x_81, 0x_92, 0x_D7, 0x_16, 0x_22, 0x_97, 0x_B4,
	];

	helper(S, BASE, -97_845);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_808_943_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_minus_808_943_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_BA, 0x_BA, 0x_2A, 0x_BA, 0x_71, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_16, 0x_BA, 0x_DA, 0x_2A, 0x_EC, 0x_25, 0x_32, 0x_71, 0x_88, 0x_BC, 0x_1C, 0x_FB,
	];

	helper(S, BASE, -808_943);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_648_756_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_648_756_in_base_13() {
	const S: &[u8] = &[
		0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_95, 0x_D8, 0x_95, 0x_D8, 0x_A9, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_03, 0x_4F, 0x_A9, 0x_AF, 0x_FA, 0x_A6, 0x_5E, 0x_F4, 0x_95, 0x_D8, 0x_F9, 0x_4E,
	];

	helper(S, BASE, -3_648_756);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_26_771_486_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_minus_26_771_486_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0C,
		0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0A,
		0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_BF, 0x_89, 0x_16, 0x_9E, 0x_F6, 0x_6B, 0x_16,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_16, 0x_6B, 0x_BB, 0x_9E, 0x_BF, 0x_F6, 0x_89, 0x_A2, 0x_AD, 0x_ED, 0x_F0, 0x_AF,
	];

	helper(S, BASE, -26_771_486);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_887_263_864_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_minus_887_263_864_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_0A,
		0x_0D, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_09,
		0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_03, 0x_03, 0x_03, 0x_A4, 0x_2A, 0x_FD,
		0x_46, 0x_5D, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_03, 0x_35, 0x_54, 0x_37, 0x_BB, 0x_46, 0x_FD, 0x_2A, 0x_D4, 0x_A4, 0x_31, 0x_44,
	];

	helper(S, BASE, -887_263_864);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_8_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_minus_8_in_base_19() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_20,
		0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0A,
		0x_09, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_39, 0x_47, 0x_C8, 0x_F3, 0x_13, 0x_DE, 0x_C4, 0x_76, 0x_A2, 0x_25, 0x_98, 0x_CE, 0x_7F, 0x_CC,
		0x_EA, 0x_C3, 0x_31, 0x_44,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_64_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_minus_64_in_base_19() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0C,
		0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0C,
		0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_67, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_1D, 0x_22, 0x_67, 0x_78, 0x_27, 0x_3C, 0x_5C, 0x_CA, 0x_D3, 0x_3B, 0x_BB, 0x_06, 0x_6F, 0x_F4,
		0x_AE, 0x_11, 0x_95, 0x_4C,
	];

	helper(S, BASE, -64);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_792_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_minus_792_in_base_19() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_8E, 0x_93, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_E6, 0x_8E, 0x_93, 0x_39, 0x_D1, 0x_FF, 0x_D6, 0x_0E, 0x_D4, 0x_E4, 0x_57, 0x_AA, 0x_C4, 0x_8D,
		0x_6D, 0x_18, 0x_82, 0x_A6,
	];

	helper(S, BASE, -792);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_178_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_178_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_FC, 0x_BF, 0x_96, 0x_84,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_FC, 0x_D0, 0x_D4, 0x_B5, 0x_D2, 0x_95, 0x_5E, 0x_D9, 0x_53, 0x_8F, 0x_F9, 0x_04, 0x_7A, 0x_FA,
		0x_84, 0x_96, 0x_AA, 0x_26,
	];

	helper(S, BASE, -7_178);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_92_527_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_minus_92_527_in_base_19() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0C,
		0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_99, 0x_91, 0x_C7, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_21, 0x_03, 0x_06, 0x_95, 0x_C7, 0x_F2, 0x_E2, 0x_4A, 0x_91, 0x_EF, 0x_15, 0x_31, 0x_99, 0x_D6,
		0x_04, 0x_BA, 0x_5F, 0x_F3,
	];

	helper(S, BASE, -92_527);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_286_131_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_minus_286_131_in_base_19() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_09,
		0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0A,
		0x_20, 0x_20, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_7F, 0x_7D, 0x_0E, 0x_9E, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_C4, 0x_7F, 0x_7D, 0x_BF, 0x_40, 0x_3D, 0x_2F, 0x_14, 0x_91, 0x_9F, 0x_9E, 0x_6C, 0x_0E, 0x_5B,
		0x_38, 0x_70, 0x_E6, 0x_6E,
	];

	helper(S, BASE, -286_131);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_256_797_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_256_797_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_09,
		0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_CE, 0x_47, 0x_91, 0x_A1, 0x_47, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_87, 0x_E3, 0x_CE, 0x_63, 0x_4D, 0x_F5, 0x_27, 0x_60, 0x_21, 0x_85, 0x_48, 0x_77, 0x_91, 0x_5F, 0x_99,
		0x_43, 0x_44, 0x_47, 0x_A1,
	];

	helper(S, BASE, -7_256_797);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_37_453_755_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_minus_37_453_755_in_base_19() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_88, 0x_1A, 0x_F6, 0x_C3, 0x_64, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_54, 0x_1A, 0x_51, 0x_9F, 0x_1B, 0x_D4, 0x_F6, 0x_A7, 0x_55, 0x_C3, 0x_41, 0x_97, 0x_52, 0x_43,
		0x_88, 0x_25, 0x_FE, 0x_2C,
	];

	helper(S, BASE, -37_453_755);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_514_807_199_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_minus_514_807_199_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0B,
		0x_20, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_A1, 0x_7C, 0x_7C, 0x_9B, 0x_7F, 0x_7F,
		0x_E5,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_99, 0x_CC, 0x_CB, 0x_F2, 0x_9B, 0x_1D, 0x_77, 0x_21, 0x_32, 0x_A1, 0x_05, 0x_A8, 0x_7F, 0x_E5,
		0x_CE, 0x_6C, 0x_7C, 0x_3E,
	];

	helper(S, BASE, -514_807_199);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_in_base_42() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_91,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_37, 0x_CF, 0x_1E, 0x_6B, 0x_7F, 0x_49, 0x_91, 0x_42, 0x_C9, 0x_84, 0x_B9, 0x_03, 0x_CB, 0x_57,
		0x_B2, 0x_0F, 0x_93, 0x_CC, 0x_87, 0x_ED, 0x_69, 0x_41, 0x_89, 0x_52, 0x_BF, 0x_26, 0x_75, 0x_D9, 0x_78,
		0x_18, 0x_A3, 0x_95, 0x_AE, 0x_C1, 0x_AD, 0x_9D, 0x_DE, 0x_1D, 0x_F8, 0x_1F, 0x_58,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_79_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_minus_79_in_base_42() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_E9, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_E9, 0x_25, 0x_EA, 0x_4F, 0x_60, 0x_03, 0x_B2, 0x_BD, 0x_42, 0x_7B, 0x_E7, 0x_E0, 0x_89, 0x_8D,
		0x_C0, 0x_47, 0x_B4, 0x_43, 0x_48, 0x_BC, 0x_B8, 0x_F5, 0x_D7, 0x_36, 0x_05, 0x_BE, 0x_EB, 0x_DA, 0x_5D,
		0x_E4, 0x_F1, 0x_8B, 0x_A8, 0x_82, 0x_04, 0x_AE, 0x_38, 0x_3D, 0x_D2, 0x_1C, 0x_88,
	];

	helper(S, BASE, -79);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_862_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_minus_862_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0A,
		0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0A,
		0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_83, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_19, 0x_F3, 0x_C5, 0x_70, 0x_79, 0x_91, 0x_28, 0x_11, 0x_AF, 0x_3D, 0x_47, 0x_66, 0x_4F, 0x_32,
		0x_C0, 0x_24, 0x_85, 0x_ED, 0x_B7, 0x_83, 0x_BE, 0x_96, 0x_B2, 0x_13, 0x_E7, 0x_A8, 0x_FE, 0x_45, 0x_22,
		0x_4C, 0x_86, 0x_FF, 0x_E8, 0x_AD, 0x_95, 0x_DC, 0x_8A, 0x_7A, 0x_67, 0x_7C, 0x_94,
	];

	helper(S, BASE, -862);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_313_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_313_in_base_42() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0D,
		0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_32, 0x_EB, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_ED, 0x_32, 0x_D5, 0x_93, 0x_D2, 0x_86, 0x_66, 0x_9E, 0x_9C, 0x_04, 0x_1C, 0x_95, 0x_4B, 0x_EB, 0x_62,
		0x_94, 0x_5C, 0x_DB, 0x_74, 0x_5E, 0x_8A, 0x_3A, 0x_7E, 0x_5D, 0x_05, 0x_A9, 0x_5A, 0x_7B, 0x_01, 0x_CC,
		0x_6D, 0x_D4, 0x_F5, 0x_77, 0x_99, 0x_EC, 0x_85, 0x_96, 0x_BB, 0x_C7, 0x_52, 0x_A2,
	];

	helper(S, BASE, -2_313);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_20_265_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_minus_20_265_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_15, 0x_83, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_4A, 0x_1B, 0x_9E, 0x_B2, 0x_5D, 0x_0F, 0x_08, 0x_37, 0x_32, 0x_55, 0x_15, 0x_10, 0x_C7, 0x_58,
		0x_3B, 0x_F1, 0x_81, 0x_9F, 0x_9D, 0x_83, 0x_35, 0x_44, 0x_CC, 0x_02, 0x_1C, 0x_45, 0x_BF, 0x_84, 0x_DF,
		0x_7F, 0x_28, 0x_A3, 0x_FA, 0x_BC, 0x_C8, 0x_EB, 0x_60, 0x_4C, 0x_5B, 0x_16, 0x_E8,
	];

	helper(S, BASE, -20_265);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_575_130_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_minus_575_130_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_20, 0x_09, 0x_09,
		0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0C,
		0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_96, 0x_ED, 0x_C4, 0x_55,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_C4, 0x_92, 0x_08, 0x_22, 0x_E3, 0x_A4, 0x_96, 0x_4D, 0x_15, 0x_59, 0x_D1, 0x_02, 0x_D0, 0x_6E,
		0x_7B, 0x_EF, 0x_3C, 0x_5C, 0x_DB, 0x_3F, 0x_7A, 0x_76, 0x_63, 0x_55, 0x_69, 0x_68, 0x_85, 0x_9D, 0x_40,
		0x_14, 0x_8C, 0x_ED, 0x_0E, 0x_E7, 0x_98, 0x_66, 0x_4E, 0x_8F, 0x_01, 0x_B2, 0x_2A,
	];

	helper(S, BASE, -575_130);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_4_463_684_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_minus_4_463_684_in_base_42() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_2B, 0x_2D, 0x_A0, 0x_80, 0x_94, 0x_80, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_A0, 0x_E2, 0x_C6, 0x_88, 0x_BF, 0x_EC, 0x_08, 0x_7B, 0x_2C, 0x_94, 0x_31, 0x_9B, 0x_35, 0x_F6,
		0x_98, 0x_CF, 0x_FC, 0x_80, 0x_4E, 0x_ED, 0x_70, 0x_C1, 0x_5F, 0x_58, 0x_9C, 0x_DE, 0x_AD, 0x_14, 0x_16,
		0x_7D, 0x_11, 0x_C4, 0x_86, 0x_30, 0x_6A, 0x_F4, 0x_B3, 0x_FB, 0x_97, 0x_C3, 0x_69,
	];

	helper(S, BASE, -4_463_684);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_88_780_961_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_minus_88_780_961_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_C8, 0x_D1, 0x_48, 0x_FF, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_61, 0x_DD, 0x_8C, 0x_47, 0x_E9, 0x_56, 0x_33, 0x_5C, 0x_37, 0x_CA, 0x_F5, 0x_83, 0x_48, 0x_FF,
		0x_C4, 0x_AF, 0x_3D, 0x_77, 0x_22, 0x_CE, 0x_8B, 0x_D1, 0x_B9, 0x_73, 0x_86, 0x_9F, 0x_44, 0x_C8, 0x_4C,
		0x_78, 0x_06, 0x_2C, 0x_74, 0x_2F, 0x_EA, 0x_70, 0x_4D, 0x_D0, 0x_F1, 0x_DA, 0x_BE,
	];

	helper(S, BASE, -88_780_961);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_280_800_708_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_minus_280_800_708_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_A2, 0x_F8, 0x_34, 0x_EA, 0x_DC, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_43, 0x_53, 0x_A2, 0x_DC, 0x_EA, 0x_0F, 0x_F8, 0x_7B, 0x_23, 0x_C4, 0x_34, 0x_7D, 0x_C9, 0x_FF, 0x_CB,
		0x_83, 0x_CD, 0x_67, 0x_A7, 0x_FD, 0x_B6, 0x_8A, 0x_CE, 0x_85, 0x_17, 0x_B2, 0x_4E, 0x_31, 0x_75, 0x_D2,
		0x_15, 0x_A0, 0x_F0, 0x_1B, 0x_18, 0x_CA, 0x_B7, 0x_5D, 0x_AA, 0x_30, 0x_6B, 0x_35,
	];

	helper(S, BASE, -280_800_708);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_4_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_minus_4_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_0A,
		0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_0C,
		0x_0D, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_2C, 0x_14, 0x_B1, 0x_EF, 0x_FB, 0x_B2, 0x_AA, 0x_74, 0x_D3, 0x_A0, 0x_5F, 0x_32, 0x_59, 0x_B6,
		0x_6E, 0x_4F, 0x_C3, 0x_65, 0x_B5, 0x_66, 0x_A7, 0x_8B, 0x_33, 0x_3B, 0x_56, 0x_FA, 0x_28, 0x_73, 0x_D9,
		0x_A6, 0x_F5, 0x_34, 0x_FC, 0x_6C, 0x_21, 0x_30, 0x_D1, 0x_A8, 0x_DF, 0x_3A, 0x_A2, 0x_E9, 0x_C6, 0x_84,
		0x_C9, 0x_DB, 0x_90, 0x_79, 0x_C8, 0x_7F, 0x_F3, 0x_42, 0x_11, 0x_D2, 0x_7A, 0x_A3, 0x_EA, 0x_5E, 0x_10,
		0x_87, 0x_1D, 0x_52, 0x_61, 0x_76, 0x_1F, 0x_EC, 0x_E1, 0x_27, 0x_85, 0x_3E, 0x_E8, 0x_A5,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_19_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_minus_19_in_base_73() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_0B,
		0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_05, 0x_D4, 0x_57, 0x_E4, 0x_36, 0x_B2, 0x_EE, 0x_7E, 0x_4C, 0x_12, 0x_F7, 0x_50, 0x_42, 0x_B0,
		0x_40, 0x_8D, 0x_22, 0x_DD, 0x_F1, 0x_37, 0x_53, 0x_96, 0x_64, 0x_BC, 0x_03, 0x_25, 0x_5A, 0x_6F, 0x_C5,
		0x_A8, 0x_7D, 0x_3D, 0x_49, 0x_80, 0x_9D, 0x_9F, 0x_6B, 0x_5B, 0x_79, 0x_C7, 0x_D9, 0x_48, 0x_A9, 0x_2E,
		0x_97, 0x_8C, 0x_31, 0x_1C, 0x_F5, 0x_5C, 0x_CC, 0x_91, 0x_47, 0x_9B, 0x_55, 0x_71, 0x_62, 0x_74, 0x_B4,
		0x_0F, 0x_9A, 0x_DA, 0x_ED, 0x_B5, 0x_85, 0x_67, 0x_26, 0x_A4, 0x_F4, 0x_3F, 0x_D1, 0x_38,
	];

	helper(S, BASE, -19);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_853_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_minus_853_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2F, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_32, 0x_A1, 0x_93, 0x_2E, 0x_7F, 0x_C9, 0x_84, 0x_7C, 0x_79, 0x_A0, 0x_2F, 0x_8B, 0x_76, 0x_DB,
		0x_04, 0x_D0, 0x_69, 0x_9C, 0x_5C, 0x_3D, 0x_1F, 0x_62, 0x_5D, 0x_9F, 0x_F2, 0x_FC, 0x_B3, 0x_CC, 0x_55,
		0x_60, 0x_9A, 0x_B8, 0x_39, 0x_23, 0x_34, 0x_B4, 0x_12, 0x_82, 0x_15, 0x_73, 0x_EA, 0x_26, 0x_F3, 0x_53,
		0x_E4, 0x_89, 0x_97, 0x_5E, 0x_E1, 0x_54, 0x_7A, 0x_A3, 0x_64, 0x_BF, 0x_8A, 0x_1C, 0x_3F, 0x_17, 0x_AE,
		0x_33, 0x_F1, 0x_EE, 0x_DA, 0x_B6, 0x_E5, 0x_A6, 0x_5B, 0x_7B, 0x_A8, 0x_30, 0x_FE, 0x_21,
	];

	helper(S, BASE, -853);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_8_103_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_minus_8_103_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_20,
		0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2E, 0x_B0, 0x_DC,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_2E, 0x_D6, 0x_4B, 0x_51, 0x_A2, 0x_B2, 0x_96, 0x_40, 0x_31, 0x_BA, 0x_7B, 0x_4E, 0x_0E, 0x_C0,
		0x_17, 0x_42, 0x_6E, 0x_44, 0x_28, 0x_F3, 0x_9C, 0x_EB, 0x_D4, 0x_66, 0x_FF, 0x_4D, 0x_D2, 0x_EF, 0x_A3,
		0x_FD, 0x_D0, 0x_08, 0x_83, 0x_8E, 0x_F1, 0x_19, 0x_7A, 0x_B0, 0x_3C, 0x_BC, 0x_D5, 0x_25, 0x_52, 0x_64,
		0x_F4, 0x_98, 0x_E1, 0x_95, 0x_01, 0x_15, 0x_69, 0x_BB, 0x_CC, 0x_75, 0x_7E, 0x_6F, 0x_FC, 0x_CE, 0x_79,
		0x_AB, 0x_9D, 0x_62, 0x_C4, 0x_97, 0x_C6, 0x_F0, 0x_E0, 0x_3A, 0x_80, 0x_67, 0x_CD, 0x_74,
	];

	helper(S, BASE, -8_103);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_32_671_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_minus_32_671_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_29, 0x_01, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_7E, 0x_99, 0x_85, 0x_C0, 0x_CB, 0x_29, 0x_36, 0x_8D, 0x_01, 0x_BC, 0x_4B, 0x_26, 0x_B3, 0x_41,
		0x_9F, 0x_C1, 0x_19, 0x_63, 0x_80, 0x_F1, 0x_5C, 0x_71, 0x_5F, 0x_2C, 0x_C5, 0x_56, 0x_D8, 0x_BB, 0x_1A,
		0x_54, 0x_8A, 0x_43, 0x_E9, 0x_14, 0x_15, 0x_8F, 0x_E3, 0x_55, 0x_31, 0x_A4, 0x_3C, 0x_08, 0x_49, 0x_ED,
		0x_7F, 0x_6D, 0x_B4, 0x_FE, 0x_9D, 0x_C7, 0x_FC, 0x_8B, 0x_EE, 0x_18, 0x_52, 0x_BA, 0x_72, 0x_A1, 0x_24,
		0x_CA, 0x_B8, 0x_4A, 0x_16, 0x_9C, 0x_0F, 0x_94, 0x_46, 0x_1B, 0x_87, 0x_21, 0x_66, 0x_98,
	];

	helper(S, BASE, -32_671);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_309_770_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_minus_309_770_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0D,
		0x_20, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_09,
		0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_9F, 0x_C9, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_DC, 0x_49, 0x_39, 0x_82, 0x_5E, 0x_F8, 0x_F5, 0x_4B, 0x_C9, 0x_B9, 0x_C0, 0x_29, 0x_AF, 0x_1F,
		0x_E8, 0x_7C, 0x_13, 0x_71, 0x_64, 0x_9C, 0x_24, 0x_F6, 0x_6B, 0x_2A, 0x_66, 0x_69, 0x_E2, 0x_91, 0x_70,
		0x_95, 0x_50, 0x_7B, 0x_37, 0x_4D, 0x_99, 0x_78, 0x_FF, 0x_D7, 0x_1C, 0x_CA, 0x_68, 0x_A3, 0x_22, 0x_1D,
		0x_BD, 0x_CF, 0x_51, 0x_CC, 0x_5F, 0x_62, 0x_D3, 0x_ED, 0x_DD, 0x_BE, 0x_F7, 0x_A2, 0x_11, 0x_9F, 0x_19,
		0x_D5, 0x_C3, 0x_C1, 0x_46, 0x_14, 0x_EF, 0x_2C, 0x_43, 0x_8C, 0x_E9, 0x_98, 0x_31, 0x_03,
	];

	helper(S, BASE, -309_770);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_5_612_483_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_minus_5_612_483_in_base_73() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_20,
		0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_C9, 0x_3A, 0x_C9, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_6D, 0x_41, 0x_49, 0x_E3, 0x_36, 0x_29, 0x_56, 0x_15, 0x_FD, 0x_80, 0x_55, 0x_9E, 0x_37, 0x_C9,
		0x_C5, 0x_11, 0x_F1, 0x_5A, 0x_BF, 0x_93, 0x_76, 0x_8A, 0x_AE, 0x_E2, 0x_7E, 0x_77, 0x_4F, 0x_22, 0x_B8,
		0x_FC, 0x_3A, 0x_BB, 0x_D4, 0x_A1, 0x_3D, 0x_EB, 0x_78, 0x_8C, 0x_1A, 0x_42, 0x_CA, 0x_AA, 0x_2A, 0x_D5,
		0x_BD, 0x_C0, 0x_B3, 0x_14, 0x_64, 0x_B6, 0x_9F, 0x_1E, 0x_B4, 0x_16, 0x_95, 0x_98, 0x_99, 0x_70, 0x_62,
		0x_85, 0x_7A, 0x_5C, 0x_8E, 0x_B5, 0x_72, 0x_DF, 0x_4C, 0x_5F, 0x_A3, 0x_E6, 0x_53, 0x_E4,
	];

	helper(S, BASE, -5_612_483);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_68_400_587_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_minus_68_400_587_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0D,
		0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0C,
		0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_85, 0x_83, 0x_7E, 0x_54, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_F4, 0x_85, 0x_F6, 0x_4D, 0x_04, 0x_31, 0x_DC, 0x_6B, 0x_B9, 0x_39, 0x_2F, 0x_48, 0x_B2, 0x_FB,
		0x_22, 0x_5F, 0x_76, 0x_8B, 0x_D4, 0x_49, 0x_E9, 0x_44, 0x_13, 0x_EF, 0x_B3, 0x_1C, 0x_D3, 0x_D1, 0x_83,
		0x_30, 0x_3B, 0x_64, 0x_43, 0x_EB, 0x_B4, 0x_84, 0x_3C, 0x_45, 0x_54, 0x_DF, 0x_5C, 0x_F2, 0x_BD, 0x_E0,
		0x_34, 0x_6E, 0x_28, 0x_8E, 0x_C8, 0x_AB, 0x_17, 0x_5B, 0x_CE, 0x_1B, 0x_6D, 0x_9E, 0x_38, 0x_F7, 0x_66,
		0x_7E, 0x_E5, 0x_6F, 0x_F9, 0x_E6, 0x_DA, 0x_B1, 0x_60, 0x_E4, 0x_AC, 0x_12, 0x_14, 0x_79,
	];

	helper(S, BASE, -68_400_587);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_816_752_712_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_minus_816_752_712_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_20, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_8D, 0x_63, 0x_ED, 0x_25, 0x_56,
	];
	const BASE: &[u8] = &[
		0x_D1, 0x_FA, 0x_6E, 0x_83, 0x_C4, 0x_48, 0x_57, 0x_BB, 0x_C2, 0x_91, 0x_1E, 0x_9C, 0x_5B, 0x_1F, 0x_4D,
		0x_46, 0x_A7, 0x_F0, 0x_94, 0x_77, 0x_C5, 0x_32, 0x_96, 0x_56, 0x_52, 0x_81, 0x_1A, 0x_28, 0x_8D, 0x_D7,
		0x_E4, 0x_07, 0x_62, 0x_61, 0x_24, 0x_E0, 0x_11, 0x_92, 0x_ED, 0x_45, 0x_8A, 0x_05, 0x_36, 0x_FD, 0x_4F,
		0x_90, 0x_B4, 0x_66, 0x_25, 0x_80, 0x_35, 0x_C6, 0x_BF, 0x_FC, 0x_01, 0x_63, 0x_EA, 0x_0E, 0x_3F, 0x_0F,
		0x_51, 0x_34, 0x_E3, 0x_5C, 0x_6D, 0x_29, 0x_1C, 0x_9F, 0x_02, 0x_C7, 0x_95, 0x_DF, 0x_C3,
	];

	helper(S, BASE, -816_752_712);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_9_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_minus_9_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0D,
		0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_09,
		0x_20, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_FF, 0x_6C, 0x_2E, 0x_D3, 0x_8B, 0x_2C, 0x_B7, 0x_9E, 0x_11, 0x_13, 0x_46, 0x_57, 0x_59, 0x_06,
		0x_F6, 0x_1A, 0x_C7, 0x_3B, 0x_31, 0x_D9, 0x_26, 0x_F7, 0x_BF, 0x_77, 0x_8E, 0x_DD, 0x_C6, 0x_03, 0x_56,
		0x_F4, 0x_E9, 0x_55, 0x_33, 0x_3F, 0x_F2, 0x_C1, 0x_48, 0x_1F, 0x_30, 0x_F1, 0x_5E, 0x_7E, 0x_93, 0x_BE,
		0x_1C, 0x_ED, 0x_50, 0x_FB, 0x_F9, 0x_E8, 0x_21, 0x_16, 0x_DF, 0x_DE, 0x_41, 0x_7D, 0x_CF, 0x_CB, 0x_5D,
		0x_EA, 0x_EF, 0x_05, 0x_D5, 0x_8D, 0x_02, 0x_E5, 0x_DB, 0x_3C, 0x_B0, 0x_40, 0x_BB, 0x_E0, 0x_39, 0x_99,
		0x_E1, 0x_65, 0x_8A, 0x_A5, 0x_A0, 0x_0E, 0x_29, 0x_D0, 0x_92, 0x_78, 0x_B1, 0x_88, 0x_9D, 0x_AC, 0x_12,
		0x_25, 0x_1B, 0x_6E, 0x_80, 0x_A3, 0x_42, 0x_71, 0x_D6, 0x_54, 0x_B5, 0x_3A, 0x_68, 0x_A1, 0x_7C, 0x_45,
		0x_A8, 0x_2F, 0x_A2, 0x_5A, 0x_19, 0x_5B, 0x_7A, 0x_0F,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_90_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_minus_90_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0A,
		0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_1B, 0x_07, 0x_46, 0x_76, 0x_BB, 0x_DC, 0x_A0, 0x_D6, 0x_A3, 0x_C7, 0x_4D, 0x_E0, 0x_C4, 0x_AB, 0x_A2,
		0x_26, 0x_59, 0x_C9, 0x_75, 0x_67, 0x_3A, 0x_93, 0x_D8, 0x_92, 0x_AC, 0x_6E, 0x_35, 0x_74, 0x_CE, 0x_7E,
		0x_E1, 0x_DA, 0x_34, 0x_7A, 0x_03, 0x_77, 0x_48, 0x_05, 0x_EE, 0x_C8, 0x_0F, 0x_64, 0x_B0, 0x_61, 0x_2A,
		0x_5E, 0x_D3, 0x_33, 0x_16, 0x_B9, 0x_4B, 0x_06, 0x_88, 0x_2F, 0x_45, 0x_13, 0x_EF, 0x_60, 0x_A7, 0x_15,
		0x_6A, 0x_66, 0x_94, 0x_63, 0x_41, 0x_95, 0x_53, 0x_99, 0x_83, 0x_F5, 0x_C3, 0x_30, 0x_FF, 0x_DF, 0x_68,
		0x_F9, 0x_9A, 0x_4F, 0x_7B, 0x_9D, 0x_A8, 0x_81, 0x_02, 0x_28, 0x_85, 0x_BD, 0x_31, 0x_3E, 0x_6B, 0x_FC,
		0x_49, 0x_32, 0x_52, 0x_CB, 0x_E2, 0x_ED, 0x_F3, 0x_4E, 0x_82, 0x_70, 0x_80, 0x_3C, 0x_DD, 0x_1F, 0x_F7,
		0x_C6, 0x_E8, 0x_B4, 0x_22, 0x_EA, 0x_F2, 0x_E7, 0x_5D,
	];

	helper(S, BASE, -90);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_147_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_minus_147_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2A,
		0x_A1,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_2A, 0x_BE, 0x_B2, 0x_61, 0x_A5, 0x_44, 0x_01, 0x_17, 0x_FC, 0x_BD, 0x_3F, 0x_4E, 0x_16, 0x_CB,
		0x_B9, 0x_13, 0x_DA, 0x_C3, 0x_AB, 0x_2E, 0x_79, 0x_A7, 0x_DC, 0x_1A, 0x_62, 0x_B6, 0x_54, 0x_47, 0x_08,
		0x_CA, 0x_D0, 0x_74, 0x_98, 0x_A1, 0x_30, 0x_91, 0x_A2, 0x_9C, 0x_90, 0x_50, 0x_EE, 0x_52, 0x_FB, 0x_32,
		0x_ED, 0x_FD, 0x_DB, 0x_18, 0x_25, 0x_10, 0x_3D, 0x_45, 0x_96, 0x_EF, 0x_6D, 0x_86, 0x_43, 0x_27, 0x_5D,
		0x_D8, 0x_12, 0x_E4, 0x_58, 0x_1F, 0x_39, 0x_F2, 0x_8A, 0x_D7, 0x_9E, 0x_A8, 0x_5A, 0x_AC, 0x_11, 0x_B4,
		0x_E2, 0x_77, 0x_06, 0x_66, 0x_67, 0x_C0, 0x_3B, 0x_D4, 0x_4D, 0x_F9, 0x_60, 0x_73, 0x_7C, 0x_AD, 0x_AE,
		0x_E8, 0x_A0, 0x_6C, 0x_D5, 0x_9F, 0x_1E, 0x_D6, 0x_07, 0x_E0, 0x_7F, 0x_56, 0x_8B, 0x_7A, 0x_93, 0x_9B,
		0x_23, 0x_4C, 0x_29, 0x_5B, 0x_C8, 0x_3A, 0x_78, 0x_3E,
	];

	helper(S, BASE, -147);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_5_751_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_minus_5_751_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_20,
		0x_20, 0x_09, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_F9, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_E0, 0x_B2, 0x_E2, 0x_A7, 0x_64, 0x_7B, 0x_3B, 0x_19, 0x_DD, 0x_63, 0x_39, 0x_79, 0x_10, 0x_73,
		0x_91, 0x_66, 0x_2C, 0x_D6, 0x_2F, 0x_C9, 0x_B1, 0x_03, 0x_31, 0x_A2, 0x_54, 0x_6B, 0x_48, 0x_93, 0x_9B,
		0x_8C, 0x_D2, 0x_53, 0x_24, 0x_A4, 0x_EC, 0x_E1, 0x_BE, 0x_1E, 0x_59, 0x_C3, 0x_4A, 0x_FE, 0x_9E, 0x_52,
		0x_FB, 0x_08, 0x_37, 0x_96, 0x_57, 0x_F9, 0x_5F, 0x_3E, 0x_06, 0x_88, 0x_BC, 0x_B8, 0x_F3, 0x_89, 0x_CA,
		0x_5D, 0x_F2, 0x_EA, 0x_82, 0x_F0, 0x_11, 0x_21, 0x_4B, 0x_E3, 0x_A9, 0x_34, 0x_9A, 0x_61, 0x_8D, 0x_E4,
		0x_F8, 0x_BB, 0x_01, 0x_35, 0x_77, 0x_A0, 0x_50, 0x_1B, 0x_92, 0x_F6, 0x_4C, 0x_B9, 0x_B3, 0x_CC, 0x_30,
		0x_1A, 0x_C4, 0x_1D, 0x_12, 0x_2A, 0x_DE, 0x_B4, 0x_D9, 0x_6E, 0x_26, 0x_70, 0x_9D, 0x_4D, 0x_29, 0x_78,
		0x_FF, 0x_C2, 0x_13, 0x_72, 0x_ED, 0x_7D, 0x_AE, 0x_D5,
	];

	helper(S, BASE, -5_751);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_49_604_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_minus_49_604_in_base_113() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0D,
		0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_20,
		0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_93, 0x_A9, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_C6, 0x_67, 0x_93, 0x_1E, 0x_16, 0x_9C, 0x_EA, 0x_D2, 0x_65, 0x_59, 0x_88, 0x_B7, 0x_28, 0x_05,
		0x_1F, 0x_7E, 0x_B9, 0x_E3, 0x_C2, 0x_21, 0x_60, 0x_8E, 0x_47, 0x_1B, 0x_2C, 0x_43, 0x_27, 0x_DF, 0x_A3,
		0x_6C, 0x_C4, 0x_D4, 0x_96, 0x_98, 0x_08, 0x_BC, 0x_B5, 0x_F3, 0x_F5, 0x_15, 0x_EE, 0x_A7, 0x_6B, 0x_32,
		0x_7B, 0x_31, 0x_D0, 0x_54, 0x_0F, 0x_34, 0x_76, 0x_FE, 0x_E6, 0x_5E, 0x_0E, 0x_95, 0x_46, 0x_F0, 0x_5C,
		0x_8C, 0x_D6, 0x_ED, 0x_C9, 0x_99, 0x_BA, 0x_71, 0x_35, 0x_26, 0x_CE, 0x_33, 0x_8B, 0x_FA, 0x_82, 0x_50,
		0x_4E, 0x_BD, 0x_C5, 0x_40, 0x_EB, 0x_25, 0x_69, 0x_EC, 0x_E5, 0x_F1, 0x_53, 0x_02, 0x_92, 0x_A1, 0x_90,
		0x_52, 0x_3E, 0x_13, 0x_86, 0x_01, 0x_78, 0x_AB, 0x_41, 0x_BE, 0x_A9, 0x_12, 0x_DC, 0x_E2, 0x_9F, 0x_2F,
		0x_D5, 0x_A5, 0x_E8, 0x_CC, 0x_7C, 0x_B8, 0x_CA, 0x_9A,
	];

	helper(S, BASE, -49_604);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_130_818_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_minus_130_818_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_20,
		0x_09, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0A,
		0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_AE, 0x_4F, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_5E, 0x_79, 0x_69, 0x_5B, 0x_BD, 0x_AB, 0x_A7, 0x_7A, 0x_1E, 0x_AE, 0x_6B, 0x_36, 0x_07, 0x_51,
		0x_80, 0x_D9, 0x_85, 0x_CF, 0x_F1, 0x_7C, 0x_0E, 0x_9A, 0x_64, 0x_81, 0x_32, 0x_FD, 0x_4F, 0x_FA, 0x_E3,
		0x_38, 0x_70, 0x_87, 0x_78, 0x_E0, 0x_BE, 0x_C5, 0x_39, 0x_1A, 0x_DE, 0x_CE, 0x_67, 0x_C2, 0x_C3, 0x_E6,
		0x_7F, 0x_22, 0x_AA, 0x_49, 0x_4E, 0x_17, 0x_37, 0x_DB, 0x_1D, 0x_BA, 0x_D2, 0x_10, 0x_C6, 0x_60, 0x_AC,
		0x_33, 0x_62, 0x_21, 0x_71, 0x_9C, 0x_26, 0x_9F, 0x_EC, 0x_B9, 0x_B5, 0x_3B, 0x_E9, 0x_A3, 0x_DF, 0x_73,
		0x_8B, 0x_D3, 0x_C9, 0x_FC, 0x_82, 0x_18, 0x_B3, 0x_98, 0x_4B, 0x_84, 0x_43, 0x_CC, 0x_F0, 0x_EA, 0x_FE,
		0x_46, 0x_D4, 0x_A9, 0x_EE, 0x_BB, 0x_B7, 0x_5C, 0x_E5, 0x_2E, 0x_24, 0x_3F, 0x_FF, 0x_42, 0x_57, 0x_4D,
		0x_59, 0x_DC, 0x_44, 0x_8E, 0x_63, 0x_6C, 0x_61, 0x_CB,
	];

	helper(S, BASE, -130_818);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_8_645_816_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_minus_8_645_816_in_base_113() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_09,
		0x_09, 0x_09, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_8C, 0x_A2, 0x_7C, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_9F, 0x_1A, 0x_DD, 0x_3E, 0x_8C, 0x_1C, 0x_FF, 0x_CE, 0x_5F, 0x_7C, 0x_7F, 0x_5B, 0x_82, 0x_59,
		0x_58, 0x_54, 0x_D0, 0x_EB, 0x_2F, 0x_D2, 0x_68, 0x_C6, 0x_CB, 0x_B0, 0x_FE, 0x_13, 0x_96, 0x_BC, 0x_8B,
		0x_E8, 0x_2E, 0x_E3, 0x_6B, 0x_12, 0x_8F, 0x_45, 0x_AD, 0x_84, 0x_EE, 0x_4B, 0x_30, 0x_35, 0x_A0, 0x_F3,
		0x_B1, 0x_D3, 0x_F1, 0x_A5, 0x_97, 0x_23, 0x_B8, 0x_D9, 0x_06, 0x_CC, 0x_70, 0x_93, 0x_A7, 0x_D1, 0x_DA,
		0x_F9, 0x_A4, 0x_04, 0x_73, 0x_F2, 0x_FB, 0x_69, 0x_03, 0x_3C, 0x_6E, 0x_08, 0x_CD, 0x_19, 0x_37, 0x_48,
		0x_50, 0x_62, 0x_14, 0x_71, 0x_38, 0x_ED, 0x_51, 0x_31, 0x_EC, 0x_74, 0x_1B, 0x_77, 0x_99, 0x_5E, 0x_C9,
		0x_D7, 0x_5A, 0x_1D, 0x_7B, 0x_DF, 0x_44, 0x_EF, 0x_17, 0x_57, 0x_33, 0x_C5, 0x_C7, 0x_56, 0x_BE, 0x_9A,
		0x_0F, 0x_C3, 0x_39, 0x_F0, 0x_CF, 0x_2C, 0x_BB, 0x_A2,
	];

	helper(S, BASE, -8_645_816);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_28_682_592_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_minus_28_682_592_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0C,
		0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_0C,
		0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_CE, 0x_2A, 0x_87, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_10, 0x_69, 0x_CA, 0x_2F, 0x_7F, 0x_43, 0x_76, 0x_8C, 0x_5F, 0x_A1, 0x_F7, 0x_70, 0x_E1, 0x_ED,
		0x_F0, 0x_CB, 0x_1E, 0x_16, 0x_CE, 0x_22, 0x_B8, 0x_B2, 0x_AD, 0x_D2, 0x_D8, 0x_8F, 0x_8E, 0x_9F, 0x_11,
		0x_87, 0x_57, 0x_B4, 0x_38, 0x_52, 0x_C9, 0x_D0, 0x_B1, 0x_EE, 0x_66, 0x_C3, 0x_54, 0x_35, 0x_65, 0x_39,
		0x_88, 0x_D4, 0x_50, 0x_E9, 0x_FF, 0x_28, 0x_BA, 0x_27, 0x_D7, 0x_4D, 0x_F1, 0x_3F, 0x_A0, 0x_80, 0x_51,
		0x_31, 0x_1F, 0x_42, 0x_FE, 0x_58, 0x_E0, 0x_45, 0x_B3, 0x_9B, 0x_26, 0x_AA, 0x_60, 0x_3A, 0x_EB, 0x_AC,
		0x_7B, 0x_FD, 0x_46, 0x_7E, 0x_F3, 0x_4F, 0x_CF, 0x_DA, 0x_F2, 0x_68, 0x_D6, 0x_19, 0x_BF, 0x_9C, 0x_A4,
		0x_E6, 0x_93, 0x_6F, 0x_64, 0x_5C, 0x_E2, 0x_5E, 0x_33, 0x_08, 0x_2A, 0x_24, 0x_02, 0x_29, 0x_14, 0x_D3,
		0x_BD, 0x_73, 0x_FC, 0x_3E, 0x_0F, 0x_71, 0x_A9, 0x_6C,
	];

	helper(S, BASE, -28_682_592);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_916_767_824_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_minus_916_767_824_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0A,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_35, 0x_AA, 0x_89, 0x_89, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_AB, 0x_87, 0x_12, 0x_64, 0x_35, 0x_57, 0x_E0, 0x_2E, 0x_D9, 0x_04, 0x_D8, 0x_D2, 0x_EE, 0x_3E,
		0x_5D, 0x_E6, 0x_23, 0x_11, 0x_D0, 0x_1B, 0x_56, 0x_39, 0x_4E, 0x_97, 0x_D6, 0x_59, 0x_CE, 0x_26, 0x_7E,
		0x_22, 0x_0F, 0x_8D, 0x_B2, 0x_B9, 0x_50, 0x_6E, 0x_C6, 0x_38, 0x_B8, 0x_61, 0x_89, 0x_41, 0x_B5, 0x_8B,
		0x_CD, 0x_BC, 0x_76, 0x_3B, 0x_A4, 0x_49, 0x_F4, 0x_07, 0x_33, 0x_3D, 0x_FA, 0x_CC, 0x_95, 0x_A7, 0x_EB,
		0x_BF, 0x_86, 0x_9C, 0x_28, 0x_2F, 0x_9D, 0x_E4, 0x_25, 0x_8E, 0x_88, 0x_AA, 0x_4F, 0x_54, 0x_02, 0x_BB,
		0x_BA, 0x_84, 0x_92, 0x_68, 0x_5E, 0x_29, 0x_B6, 0x_62, 0x_EF, 0x_51, 0x_AC, 0x_30, 0x_0E, 0x_19, 0x_6F,
		0x_E2, 0x_27, 0x_8F, 0x_99, 0x_69, 0x_13, 0x_F9, 0x_8C, 0x_80, 0x_F1, 0x_1C, 0x_85, 0x_FF, 0x_C3, 0x_7C,
		0x_B4, 0x_16, 0x_E5, 0x_37, 0x_42, 0x_BE, 0x_CA, 0x_F8,
	];

	helper(S, BASE, -916_767_824);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_6_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_minus_6_in_base_193() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_16, 0x_D1, 0x_BF, 0x_A1, 0x_C9, 0x_7F, 0x_47, 0x_C0, 0x_70, 0x_A5, 0x_41, 0x_FA, 0x_B7, 0x_02,
		0x_AD, 0x_6C, 0x_06, 0x_D7, 0x_AF, 0x_43, 0x_63, 0x_5A, 0x_84, 0x_8E, 0x_66, 0x_F6, 0x_F2, 0x_97, 0x_4D,
		0x_5D, 0x_6F, 0x_62, 0x_9A, 0x_55, 0x_A2, 0x_D5, 0x_05, 0x_4A, 0x_54, 0x_9C, 0x_EE, 0x_58, 0x_D4, 0x_91,
		0x_5B, 0x_E7, 0x_75, 0x_57, 0x_E9, 0x_21, 0x_1A, 0x_6D, 0x_C8, 0x_2A, 0x_65, 0x_72, 0x_67, 0x_A8, 0x_45,
		0x_64, 0x_8D, 0x_96, 0x_9B, 0x_10, 0x_85, 0x_D0, 0x_D3, 0x_1E, 0x_A7, 0x_AB, 0x_68, 0x_77, 0x_4B, 0x_88,
		0x_25, 0x_40, 0x_DB, 0x_74, 0x_BC, 0x_C1, 0x_8A, 0x_82, 0x_CD, 0x_53, 0x_78, 0x_2E, 0x_D9, 0x_28, 0x_76,
		0x_9E, 0x_B9, 0x_80, 0x_87, 0x_13, 0x_B2, 0x_0F, 0x_61, 0x_24, 0x_F5, 0x_22, 0x_08, 0x_DF, 0x_50, 0x_4C,
		0x_37, 0x_60, 0x_3F, 0x_CF, 0x_F4, 0x_56, 0x_46, 0x_B4, 0x_69, 0x_B3, 0x_7E, 0x_F8, 0x_1B, 0x_B5, 0x_CE,
		0x_35, 0x_BB, 0x_FB, 0x_12, 0x_C5, 0x_51, 0x_FF, 0x_FC, 0x_42, 0x_29, 0x_E6, 0x_03, 0x_71, 0x_ED, 0x_AC,
		0x_01, 0x_52, 0x_D8, 0x_39, 0x_EB, 0x_18, 0x_8B, 0x_1F, 0x_BE, 0x_59, 0x_32, 0x_36, 0x_B0, 0x_A6, 0x_7C,
		0x_11, 0x_AA, 0x_9D, 0x_1C, 0x_3C, 0x_C2, 0x_CA, 0x_2F, 0x_1D, 0x_31, 0x_30, 0x_19, 0x_C4, 0x_F9, 0x_E3,
		0x_27, 0x_F0, 0x_89, 0x_07, 0x_E5, 0x_BA, 0x_86, 0x_7B, 0x_EF, 0x_98, 0x_CC, 0x_F7, 0x_95, 0x_F1, 0x_04,
		0x_5F, 0x_EC, 0x_C6, 0x_5E, 0x_FE, 0x_FD, 0x_81, 0x_79, 0x_A9, 0x_4F, 0x_A0, 0x_9F, 0x_6A,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_10_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_minus_10_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_D1, 0x_ED, 0x_1A, 0x_C1, 0x_44, 0x_54, 0x_D2, 0x_8C, 0x_37, 0x_50, 0x_F3, 0x_4D, 0x_97, 0x_C2,
		0x_B1, 0x_FA, 0x_35, 0x_CB, 0x_5E, 0x_60, 0x_F8, 0x_AA, 0x_90, 0x_65, 0x_51, 0x_67, 0x_B2, 0x_9D, 0x_95,
		0x_53, 0x_6B, 0x_77, 0x_38, 0x_C8, 0x_21, 0x_58, 0x_42, 0x_5A, 0x_F9, 0x_E7, 0x_9C, 0x_63, 0x_7F, 0x_14,
		0x_6C, 0x_12, 0x_24, 0x_27, 0x_7B, 0x_05, 0x_39, 0x_3C, 0x_F1, 0x_16, 0x_86, 0x_A3, 0x_D6, 0x_57, 0x_C4,
		0x_D5, 0x_AB, 0x_E1, 0x_6E, 0x_9A, 0x_78, 0x_FB, 0x_DD, 0x_4B, 0x_11, 0x_46, 0x_E9, 0x_1D, 0x_DA, 0x_40,
		0x_FC, 0x_9F, 0x_23, 0x_7A, 0x_19, 0x_8E, 0x_70, 0x_F2, 0x_49, 0x_74, 0x_84, 0x_66, 0x_4A, 0x_F4, 0x_D0,
		0x_9E, 0x_F7, 0x_04, 0x_AE, 0x_94, 0x_75, 0x_15, 0x_30, 0x_59, 0x_06, 0x_A0, 0x_68, 0x_BF, 0x_BD, 0x_C3,
		0x_D3, 0x_6F, 0x_DC, 0x_47, 0x_43, 0x_4C, 0x_CF, 0x_EE, 0x_73, 0x_FD, 0x_DB, 0x_7E, 0x_8D, 0x_26, 0x_80,
		0x_32, 0x_69, 0x_08, 0x_22, 0x_71, 0x_A8, 0x_82, 0x_1C, 0x_C9, 0x_91, 0x_E6, 0x_D8, 0x_E8, 0x_C5, 0x_F6,
		0x_AF, 0x_96, 0x_DE, 0x_AD, 0x_92, 0x_E0, 0x_5F, 0x_C0, 0x_3D, 0x_F0, 0x_FE, 0x_72, 0x_3A, 0x_BE, 0x_E2,
		0x_FF, 0x_6D, 0x_F5, 0x_13, 0x_EB, 0x_D7, 0x_5D, 0x_64, 0x_BB, 0x_A7, 0x_87, 0x_CE, 0x_48, 0x_A4, 0x_18,
		0x_9B, 0x_DF, 0x_5C, 0x_93, 0x_3E, 0x_52, 0x_BC, 0x_2E, 0x_B5, 0x_E3, 0x_B6, 0x_BA, 0x_61, 0x_B4, 0x_2C,
		0x_D4, 0x_B7, 0x_34, 0x_A1, 0x_28, 0x_CC, 0x_25, 0x_EA, 0x_E4, 0x_10, 0x_45, 0x_EF, 0x_8B,
	];

	helper(S, BASE, -10);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_109_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_minus_109_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_BB,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_10, 0x_B4, 0x_E2, 0x_7C, 0x_62, 0x_61, 0x_6C, 0x_C8, 0x_96, 0x_90, 0x_C0, 0x_E8, 0x_01, 0x_F7,
		0x_07, 0x_7A, 0x_F9, 0x_FF, 0x_5D, 0x_93, 0x_EC, 0x_B8, 0x_24, 0x_47, 0x_A8, 0x_98, 0x_E7, 0x_45, 0x_B9,
		0x_B0, 0x_6E, 0x_C7, 0x_23, 0x_59, 0x_E1, 0x_CB, 0x_31, 0x_6D, 0x_BF, 0x_B7, 0x_CD, 0x_75, 0x_48, 0x_E4,
		0x_51, 0x_5A, 0x_7F, 0x_63, 0x_FB, 0x_65, 0x_AC, 0x_C5, 0x_77, 0x_05, 0x_9C, 0x_EA, 0x_D8, 0x_49, 0x_58,
		0x_1F, 0x_39, 0x_4F, 0x_9D, 0x_19, 0x_87, 0x_46, 0x_2C, 0x_34, 0x_18, 0x_04, 0x_78, 0x_12, 0x_4A, 0x_6B,
		0x_DB, 0x_06, 0x_E0, 0x_BA, 0x_DA, 0x_A4, 0x_B6, 0x_30, 0x_5C, 0x_5E, 0x_54, 0x_A5, 0x_1D, 0x_EE, 0x_94,
		0x_52, 0x_27, 0x_A3, 0x_3D, 0x_F8, 0x_3C, 0x_AE, 0x_91, 0x_DF, 0x_B2, 0x_CE, 0x_DC, 0x_42, 0x_F1, 0x_2F,
		0x_72, 0x_4C, 0x_83, 0x_E5, 0x_BB, 0x_A9, 0x_F3, 0x_B1, 0x_FA, 0x_22, 0x_89, 0x_03, 0x_1B, 0x_1C, 0x_C6,
		0x_7D, 0x_02, 0x_36, 0x_AA, 0x_0E, 0x_D3, 0x_F4, 0x_CF, 0x_EB, 0x_AF, 0x_7B, 0x_C9, 0x_FC, 0x_73, 0x_C3,
		0x_B5, 0x_C1, 0x_37, 0x_9B, 0x_44, 0x_68, 0x_81, 0x_25, 0x_56, 0x_80, 0x_F0, 0x_1A, 0x_F6, 0x_08, 0x_C4,
		0x_8E, 0x_3A, 0x_CC, 0x_84, 0x_88, 0x_F5, 0x_9E, 0x_9A, 0x_7E, 0x_FD, 0x_D5, 0x_95, 0x_A6, 0x_86, 0x_11,
		0x_32, 0x_A7, 0x_E3, 0x_C2, 0x_D2, 0x_4E, 0x_35, 0x_33, 0x_53, 0x_B3, 0x_21, 0x_15, 0x_5F, 0x_82, 0x_DD,
		0x_66, 0x_A1, 0x_38, 0x_4D, 0x_8B, 0x_2A, 0x_0F, 0x_AB, 0x_9F, 0x_55, 0x_8D, 0x_41, 0x_3B,
	];

	helper(S, BASE, -109);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_122_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_122_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_09,
		0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_9A, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_3A, 0x_CB, 0x_6C, 0x_8F, 0x_E1, 0x_8A, 0x_37, 0x_50, 0x_4E, 0x_B1, 0x_9A, 0x_E0, 0x_9C, 0x_93, 0x_40,
		0x_7F, 0x_68, 0x_9B, 0x_F6, 0x_62, 0x_B6, 0x_5D, 0x_51, 0x_11, 0x_5A, 0x_53, 0x_2F, 0x_95, 0x_89, 0x_C1,
		0x_54, 0x_A2, 0x_CD, 0x_4A, 0x_14, 0x_5F, 0x_19, 0x_98, 0x_55, 0x_FE, 0x_BF, 0x_25, 0x_D7, 0x_3C, 0x_F2,
		0x_9E, 0x_1E, 0x_ED, 0x_A0, 0x_F5, 0x_D0, 0x_AA, 0x_91, 0x_05, 0x_B9, 0x_B7, 0x_76, 0x_8E, 0x_DB, 0x_74,
		0x_43, 0x_FA, 0x_E3, 0x_A3, 0x_AC, 0x_F8, 0x_B3, 0x_A1, 0x_03, 0x_E4, 0x_CA, 0x_FD, 0x_90, 0x_06, 0x_C4,
		0x_6B, 0x_45, 0x_64, 0x_38, 0x_C2, 0x_10, 0x_FF, 0x_F9, 0x_EE, 0x_2A, 0x_72, 0x_D6, 0x_24, 0x_12, 0x_32,
		0x_81, 0x_D9, 0x_B0, 0x_23, 0x_34, 0x_DD, 0x_65, 0x_1A, 0x_21, 0x_D2, 0x_E7, 0x_B5, 0x_44, 0x_F1, 0x_4B,
		0x_96, 0x_22, 0x_84, 0x_E9, 0x_02, 0x_C8, 0x_9F, 0x_D3, 0x_8D, 0x_17, 0x_1B, 0x_48, 0x_3E, 0x_28, 0x_73,
		0x_BE, 0x_FB, 0x_94, 0x_C6, 0x_0F, 0x_42, 0x_63, 0x_30, 0x_E8, 0x_F3, 0x_85, 0x_75, 0x_13, 0x_C9, 0x_71,
		0x_49, 0x_A9, 0x_3B, 0x_E6, 0x_60, 0x_DE, 0x_47, 0x_0E, 0x_83, 0x_EA, 0x_70, 0x_D4, 0x_B2, 0x_59, 0x_F7,
		0x_7B, 0x_4C, 0x_01, 0x_61, 0x_82, 0x_99, 0x_6A, 0x_7E, 0x_BD, 0x_C5, 0x_58, 0x_3D, 0x_87, 0x_88, 0x_86,
		0x_80, 0x_1C, 0x_46, 0x_6F, 0x_6D, 0x_9D, 0x_2C, 0x_27, 0x_16, 0x_3F, 0x_C0, 0x_DF, 0x_35, 0x_C7, 0x_8C,
		0x_E5, 0x_18, 0x_D1, 0x_77, 0x_79, 0x_B4, 0x_EF, 0x_66, 0x_DA, 0x_1F, 0x_BA, 0x_4F, 0x_33,
	];

	helper(S, BASE, -2_122);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_65_797_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_minus_65_797_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_09,
		0x_20, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_20, 0x_09, 0x_0B,
		0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_C9, 0x_90, 0x_CE,
	];
	const BASE: &[u8] = &[
		0x_6C, 0x_C9, 0x_ED, 0x_C6, 0x_B8, 0x_72, 0x_2C, 0x_3A, 0x_94, 0x_62, 0x_AC, 0x_87, 0x_07, 0x_36, 0x_8F,
		0x_4C, 0x_46, 0x_80, 0x_DC, 0x_31, 0x_C8, 0x_23, 0x_02, 0x_EC, 0x_10, 0x_DA, 0x_A7, 0x_47, 0x_1A, 0x_BE,
		0x_A8, 0x_01, 0x_81, 0x_E5, 0x_F4, 0x_52, 0x_05, 0x_49, 0x_A5, 0x_54, 0x_A4, 0x_C5, 0x_16, 0x_33, 0x_9C,
		0x_A9, 0x_9E, 0x_E3, 0x_A2, 0x_82, 0x_78, 0x_8E, 0x_F9, 0x_42, 0x_A3, 0x_12, 0x_21, 0x_B0, 0x_2A, 0x_AB,
		0x_F6, 0x_73, 0x_7F, 0x_B9, 0x_DF, 0x_2F, 0x_DD, 0x_77, 0x_CB, 0x_E2, 0x_9B, 0x_BB, 0x_63, 0x_99, 0x_25,
		0x_64, 0x_32, 0x_43, 0x_5F, 0x_28, 0x_13, 0x_FE, 0x_C3, 0x_48, 0x_1B, 0x_83, 0x_67, 0x_E6, 0x_60, 0x_7E,
		0x_3E, 0x_53, 0x_7A, 0x_8C, 0x_45, 0x_0E, 0x_34, 0x_86, 0x_93, 0x_BF, 0x_40, 0x_11, 0x_D5, 0x_2E, 0x_30,
		0x_E8, 0x_26, 0x_D1, 0x_4B, 0x_15, 0x_79, 0x_D7, 0x_B2, 0x_E1, 0x_FB, 0x_96, 0x_C2, 0x_59, 0x_4A, 0x_F5,
		0x_50, 0x_D4, 0x_FF, 0x_71, 0x_3D, 0x_8A, 0x_18, 0x_85, 0x_D3, 0x_39, 0x_4D, 0x_A6, 0x_1C, 0x_84, 0x_9F,
		0x_0F, 0x_9A, 0x_AE, 0x_3B, 0x_DE, 0x_F3, 0x_E4, 0x_6E, 0x_55, 0x_88, 0x_95, 0x_D2, 0x_90, 0x_FA, 0x_38,
		0x_22, 0x_AF, 0x_D6, 0x_BC, 0x_24, 0x_44, 0x_37, 0x_BA, 0x_70, 0x_4E, 0x_F0, 0x_B5, 0x_C7, 0x_61, 0x_FD,
		0x_8D, 0x_F8, 0x_5D, 0x_CC, 0x_7B, 0x_5E, 0x_14, 0x_A0, 0x_EB, 0x_B4, 0x_27, 0x_F2, 0x_CE, 0x_FC, 0x_35,
		0x_6B, 0x_4F, 0x_58, 0x_E7, 0x_69, 0x_C0, 0x_9D, 0x_B7, 0x_CD, 0x_1D, 0x_E0, 0x_66, 0x_CF,
	];

	helper(S, BASE, -65_797);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_375_076_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_minus_375_076_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_09,
		0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_B5, 0x_17, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_99, 0x_DE, 0x_98, 0x_7D, 0x_6E, 0x_23, 0x_37, 0x_1C, 0x_83, 0x_B5, 0x_45, 0x_D7, 0x_17, 0x_5A,
		0x_B2, 0x_79, 0x_A0, 0x_FB, 0x_E2, 0x_A9, 0x_8D, 0x_D2, 0x_55, 0x_8C, 0x_61, 0x_34, 0x_30, 0x_DA, 0x_D8,
		0x_BB, 0x_92, 0x_A6, 0x_D0, 0x_68, 0x_E3, 0x_2E, 0x_86, 0x_1F, 0x_54, 0x_64, 0x_C0, 0x_F4, 0x_FF, 0x_6A,
		0x_39, 0x_B7, 0x_C4, 0x_38, 0x_EE, 0x_78, 0x_58, 0x_D6, 0x_0F, 0x_C3, 0x_B0, 0x_2F, 0x_93, 0x_3B, 0x_31,
		0x_52, 0x_72, 0x_AC, 0x_3C, 0x_29, 0x_ED, 0x_15, 0x_B8, 0x_F2, 0x_8E, 0x_24, 0x_A3, 0x_3A, 0x_6F, 0x_C9,
		0x_F5, 0x_33, 0x_3F, 0x_FE, 0x_87, 0x_7F, 0x_A8, 0x_91, 0x_F3, 0x_36, 0x_4B, 0x_5D, 0x_D4, 0x_BC, 0x_4C,
		0x_01, 0x_6D, 0x_C6, 0x_11, 0x_8A, 0x_EF, 0x_88, 0x_CE, 0x_22, 0x_E6, 0x_77, 0x_28, 0x_BD, 0x_5B, 0x_62,
		0x_F9, 0x_DB, 0x_25, 0x_D3, 0x_A4, 0x_5F, 0x_07, 0x_E7, 0x_2C, 0x_DC, 0x_C8, 0x_EB, 0x_84, 0x_AD, 0x_32,
		0x_97, 0x_63, 0x_49, 0x_69, 0x_F8, 0x_EA, 0x_A7, 0x_F0, 0x_CF, 0x_4A, 0x_AB, 0x_66, 0x_48, 0x_AF, 0x_35,
		0x_BF, 0x_65, 0x_10, 0x_4D, 0x_42, 0x_F1, 0x_67, 0x_74, 0x_E8, 0x_BA, 0x_18, 0x_A1, 0x_DD, 0x_1D, 0x_94,
		0x_19, 0x_4F, 0x_A5, 0x_1A, 0x_05, 0x_C2, 0x_8F, 0x_95, 0x_8B, 0x_E4, 0x_4E, 0x_75, 0x_C1, 0x_CA, 0x_50,
		0x_F7, 0x_16, 0x_FC, 0x_9F, 0x_96, 0x_44, 0x_14, 0x_B1, 0x_73, 0x_FA, 0x_80, 0x_81, 0x_26, 0x_47, 0x_89,
		0x_CD, 0x_B3, 0x_82, 0x_E1, 0x_9A, 0x_F6, 0x_12, 0x_46, 0x_21, 0x_D5, 0x_06, 0x_BE, 0x_9C,
	];

	helper(S, BASE, -375_076);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_1_041_814_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_minus_1_041_814_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_0B,
		0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_A3,
		0x_D6, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_8D, 0x_72, 0x_A0, 0x_88, 0x_BE, 0x_F7, 0x_34, 0x_B3, 0x_86, 0x_B4, 0x_E4, 0x_C9, 0x_42, 0x_BD,
		0x_FB, 0x_F5, 0x_01, 0x_E1, 0x_08, 0x_91, 0x_C2, 0x_1B, 0x_FC, 0x_74, 0x_07, 0x_CF, 0x_A3, 0x_B5, 0x_1E,
		0x_38, 0x_16, 0x_31, 0x_D4, 0x_CB, 0x_11, 0x_33, 0x_F6, 0x_89, 0x_83, 0x_60, 0x_BF, 0x_D8, 0x_64, 0x_95,
		0x_E7, 0x_65, 0x_45, 0x_5B, 0x_78, 0x_7E, 0x_C8, 0x_DD, 0x_6A, 0x_98, 0x_14, 0x_A8, 0x_0E, 0x_E8, 0x_22,
		0x_41, 0x_66, 0x_C0, 0x_A6, 0x_B8, 0x_B9, 0x_4A, 0x_C3, 0x_EB, 0x_3F, 0x_40, 0x_A4, 0x_AA, 0x_61, 0x_4F,
		0x_4C, 0x_FD, 0x_DE, 0x_AC, 0x_35, 0x_29, 0x_58, 0x_C1, 0x_E5, 0x_84, 0x_CA, 0x_B0, 0x_A2, 0x_82, 0x_D3,
		0x_FF, 0x_F1, 0x_10, 0x_79, 0x_44, 0x_F0, 0x_F9, 0x_4E, 0x_37, 0x_FA, 0x_21, 0x_8E, 0x_04, 0x_36, 0x_FE,
		0x_6F, 0x_75, 0x_2C, 0x_76, 0x_CD, 0x_D2, 0x_24, 0x_F8, 0x_DF, 0x_6D, 0x_02, 0x_49, 0x_7D, 0x_27, 0x_26,
		0x_AE, 0x_85, 0x_46, 0x_70, 0x_48, 0x_E2, 0x_B7, 0x_12, 0x_9B, 0x_A7, 0x_17, 0x_06, 0x_1C, 0x_28, 0x_D0,
		0x_4B, 0x_F3, 0x_77, 0x_8C, 0x_62, 0x_F4, 0x_BA, 0x_87, 0x_47, 0x_B1, 0x_E0, 0x_CC, 0x_EC, 0x_05, 0x_8B,
		0x_D1, 0x_8A, 0x_57, 0x_1F, 0x_6C, 0x_15, 0x_5C, 0x_D7, 0x_53, 0x_51, 0x_3E, 0x_1A, 0x_94, 0x_71, 0x_13,
		0x_99, 0x_E3, 0x_2A, 0x_3D, 0x_D9, 0x_96, 0x_32, 0x_9A, 0x_C7, 0x_67, 0x_BB, 0x_52, 0x_AB, 0x_DB, 0x_68,
		0x_7A, 0x_7C, 0x_19, 0x_30, 0x_56, 0x_7B, 0x_AD, 0x_D6, 0x_25, 0x_4D, 0x_CE, 0x_97, 0x_F2,
	];

	helper(S, BASE, -1_041_814);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_75_288_201_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_minus_75_288_201_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_09,
		0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_20,
		0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_05, 0x_41, 0x_36, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_57, 0x_3E, 0x_68, 0x_A5, 0x_B0, 0x_D2, 0x_97, 0x_90, 0x_66, 0x_05, 0x_A3, 0x_F0, 0x_7B, 0x_6E,
		0x_C9, 0x_2F, 0x_A2, 0x_F2, 0x_73, 0x_5A, 0x_6D, 0x_B4, 0x_BC, 0x_D3, 0x_EA, 0x_13, 0x_12, 0x_63, 0x_8B,
		0x_9E, 0x_DA, 0x_AC, 0x_EF, 0x_40, 0x_1B, 0x_48, 0x_55, 0x_7F, 0x_19, 0x_DE, 0x_36, 0x_42, 0x_17, 0x_43,
		0x_3F, 0x_CC, 0x_0E, 0x_25, 0x_C5, 0x_11, 0x_D9, 0x_B5, 0x_35, 0x_B8, 0x_A8, 0x_C0, 0x_E7, 0x_DF, 0x_C3,
		0x_99, 0x_F8, 0x_52, 0x_89, 0x_ED, 0x_5B, 0x_93, 0x_87, 0x_5D, 0x_44, 0x_59, 0x_88, 0x_72, 0x_CB, 0x_1D,
		0x_5C, 0x_B1, 0x_06, 0x_AA, 0x_E6, 0x_B9, 0x_22, 0x_F4, 0x_77, 0x_FF, 0x_FD, 0x_CA, 0x_8E, 0x_D7, 0x_56,
		0x_2E, 0x_41, 0x_6C, 0x_54, 0x_4A, 0x_14, 0x_2C, 0x_B6, 0x_58, 0x_A7, 0x_80, 0x_8D, 0x_E4, 0x_98, 0x_DB,
		0x_76, 0x_4C, 0x_85, 0x_AE, 0x_4E, 0x_7A, 0x_07, 0x_81, 0x_E5, 0x_BB, 0x_F1, 0x_83, 0x_79, 0x_4D, 0x_21,
		0x_29, 0x_C6, 0x_E8, 0x_9D, 0x_82, 0x_37, 0x_27, 0x_69, 0x_3B, 0x_6F, 0x_1F, 0x_8A, 0x_38, 0x_AB, 0x_71,
		0x_45, 0x_0F, 0x_74, 0x_C8, 0x_D4, 0x_C7, 0x_32, 0x_B7, 0x_75, 0x_4B, 0x_84, 0x_F5, 0x_04, 0x_1A, 0x_BF,
		0x_8F, 0x_BA, 0x_6A, 0x_51, 0x_94, 0x_A6, 0x_DD, 0x_E9, 0x_5E, 0x_D6, 0x_A4, 0x_92, 0x_6B, 0x_D0, 0x_39,
		0x_08, 0x_86, 0x_9B, 0x_62, 0x_28, 0x_64, 0x_D8, 0x_B3, 0x_61, 0x_D5, 0x_A1, 0x_9A, 0x_CD, 0x_26, 0x_EB,
		0x_1C, 0x_9F, 0x_96, 0x_F3, 0x_9C, 0x_7C, 0x_49, 0x_FC, 0x_02, 0x_3D, 0x_FE, 0x_A0, 0x_10,
	];

	helper(S, BASE, -75_288_201);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_649_958_362_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_minus_649_958_362_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_09,
		0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_0D,
		0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_07, 0x_95, 0x_DD,
		0x_42,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_BA, 0x_DD, 0x_06, 0x_04, 0x_ED, 0x_74, 0x_6D, 0x_7E, 0x_9A, 0x_86, 0x_BC, 0x_1B, 0x_E8, 0x_0E,
		0x_34, 0x_BF, 0x_87, 0x_B5, 0x_91, 0x_9B, 0x_2E, 0x_39, 0x_23, 0x_1E, 0x_B1, 0x_F8, 0x_13, 0x_C6, 0x_9E,
		0x_45, 0x_82, 0x_AE, 0x_30, 0x_7D, 0x_05, 0x_6C, 0x_97, 0x_C1, 0x_C0, 0x_FB, 0x_84, 0x_46, 0x_1C, 0x_A3,
		0x_11, 0x_53, 0x_CB, 0x_9C, 0x_C8, 0x_A2, 0x_60, 0x_CC, 0x_25, 0x_E0, 0x_D4, 0x_70, 0x_1F, 0x_B6, 0x_59,
		0x_49, 0x_C9, 0x_93, 0x_CE, 0x_6F, 0x_FE, 0x_EB, 0x_54, 0x_63, 0x_9D, 0x_5B, 0x_FD, 0x_03, 0x_BB, 0x_99,
		0x_26, 0x_64, 0x_D1, 0x_DE, 0x_95, 0x_5A, 0x_4E, 0x_D6, 0x_51, 0x_B9, 0x_65, 0x_E7, 0x_3B, 0x_7F, 0x_F5,
		0x_07, 0x_7B, 0x_B0, 0x_22, 0x_80, 0x_89, 0x_37, 0x_F7, 0x_0F, 0x_3E, 0x_E4, 0x_A0, 0x_5F, 0x_67, 0x_52,
		0x_BE, 0x_D2, 0x_19, 0x_CA, 0x_1D, 0x_E3, 0x_92, 0x_D5, 0x_AF, 0x_8F, 0x_4D, 0x_1A, 0x_6E, 0x_08, 0x_4B,
		0x_98, 0x_A8, 0x_5E, 0x_C7, 0x_C3, 0x_3A, 0x_24, 0x_79, 0x_DC, 0x_40, 0x_CD, 0x_9F, 0x_F1, 0x_6B, 0x_FC,
		0x_EA, 0x_EC, 0x_75, 0x_A5, 0x_F0, 0x_8C, 0x_68, 0x_DF, 0x_56, 0x_58, 0x_71, 0x_47, 0x_4A, 0x_12, 0x_4F,
		0x_90, 0x_21, 0x_8D, 0x_F4, 0x_15, 0x_D7, 0x_D8, 0x_AD, 0x_76, 0x_38, 0x_A7, 0x_14, 0x_A4, 0x_88, 0x_F9,
		0x_D0, 0x_5D, 0x_B4, 0x_AA, 0x_B8, 0x_8A, 0x_DA, 0x_CF, 0x_D3, 0x_AC, 0x_42, 0x_7A, 0x_FF, 0x_2C, 0x_8B,
		0x_3C, 0x_F2, 0x_66, 0x_69, 0x_B2, 0x_48, 0x_E9, 0x_28, 0x_17, 0x_50, 0x_A6, 0x_77, 0x_31,
	];

	helper(S, BASE, -649_958_362);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_1_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_minus_1_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0C,
		0x_09, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_0C,
		0x_0A, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_79, 0x_10, 0x_91, 0x_FA, 0x_FD, 0x_F0, 0x_D7, 0x_FE, 0x_8C, 0x_B1, 0x_47, 0x_A3, 0x_46, 0x_07, 0x_59,
		0x_60, 0x_81, 0x_99, 0x_96, 0x_49, 0x_B2, 0x_BB, 0x_80, 0x_3B, 0x_5D, 0x_D2, 0x_D6, 0x_22, 0x_E2, 0x_DA,
		0x_4A, 0x_41, 0x_FC, 0x_AF, 0x_F3, 0x_DC, 0x_D9, 0x_A9, 0x_5F, 0x_6C, 0x_05, 0x_C5, 0x_19, 0x_E3, 0x_9B,
		0x_3C, 0x_72, 0x_CF, 0x_57, 0x_53, 0x_C7, 0x_48, 0x_44, 0x_26, 0x_F6, 0x_6F, 0x_BA, 0x_08, 0x_E8, 0x_7C,
		0x_EF, 0x_62, 0x_4F, 0x_8F, 0x_18, 0x_31, 0x_D0, 0x_69, 0x_13, 0x_F8, 0x_B8, 0x_BD, 0x_17, 0x_87, 0x_EC,
		0x_1C, 0x_63, 0x_7F, 0x_9D, 0x_D1, 0x_1F, 0x_E1, 0x_D5, 0x_C0, 0x_ED, 0x_6E, 0x_D3, 0x_68, 0x_BE, 0x_4D,
		0x_32, 0x_52, 0x_1E, 0x_A0, 0x_8B, 0x_8E, 0x_1B, 0x_45, 0x_51, 0x_5A, 0x_78, 0x_FF, 0x_54, 0x_EE, 0x_E6,
		0x_88, 0x_A5, 0x_B7, 0x_7A, 0x_6A, 0x_94, 0x_C1, 0x_1A, 0x_BC, 0x_EA, 0x_61, 0x_95, 0x_14, 0x_7E, 0x_58,
		0x_CB, 0x_33, 0x_E7, 0x_B0, 0x_42, 0x_06, 0x_DE, 0x_9A, 0x_E5, 0x_34, 0x_28, 0x_5B, 0x_98, 0x_C3, 0x_F4,
		0x_AA, 0x_4C, 0x_A1, 0x_02, 0x_30, 0x_76, 0x_56, 0x_3A, 0x_75, 0x_8D, 0x_D4, 0x_7D, 0x_83, 0x_73, 0x_03,
		0x_F9, 0x_01, 0x_29, 0x_24, 0x_C8, 0x_04, 0x_F7, 0x_D8, 0x_4B, 0x_4E, 0x_3D, 0x_CD, 0x_93, 0x_2A, 0x_B6,
		0x_66, 0x_50, 0x_97, 0x_70, 0x_6D, 0x_25, 0x_9C, 0x_DF, 0x_E9, 0x_36, 0x_6B, 0x_43, 0x_3E, 0x_A6, 0x_12,
		0x_CC, 0x_39, 0x_F2, 0x_92, 0x_74, 0x_B5, 0x_16, 0x_1D, 0x_F5, 0x_35, 0x_C6, 0x_85, 0x_CE, 0x_A7, 0x_65,
		0x_B4, 0x_0F, 0x_CA, 0x_B3, 0x_F1, 0x_A4, 0x_A2, 0x_82, 0x_7B, 0x_C2, 0x_C9, 0x_DB, 0x_8A, 0x_FB, 0x_2C,
		0x_9E, 0x_38, 0x_89, 0x_AC, 0x_5E, 0x_2E, 0x_84, 0x_BF, 0x_23, 0x_40, 0x_9F, 0x_EB, 0x_67, 0x_AB, 0x_90,
		0x_27, 0x_E0, 0x_C4, 0x_3F, 0x_11, 0x_55, 0x_B9, 0x_64, 0x_86, 0x_DD, 0x_AE, 0x_5C, 0x_71, 0x_37, 0x_A8,
		0x_2F, 0x_77, 0x_21, 0x_AD, 0x_0E, 0x_15, 0x_E4,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_25_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_minus_25_in_base_247() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_0D,
		0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0C,
		0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_72, 0x_85, 0x_CF, 0x_2E, 0x_27, 0x_B1, 0x_C3, 0x_3B, 0x_29, 0x_D7, 0x_5E, 0x_9A, 0x_4E, 0x_FE,
		0x_D6, 0x_7F, 0x_95, 0x_7C, 0x_6E, 0x_1A, 0x_1E, 0x_58, 0x_67, 0x_24, 0x_FC, 0x_78, 0x_90, 0x_9D, 0x_2C,
		0x_3E, 0x_0F, 0x_51, 0x_C0, 0x_8A, 0x_FD, 0x_4F, 0x_40, 0x_42, 0x_16, 0x_1C, 0x_BD, 0x_F5, 0x_A3, 0x_43,
		0x_AD, 0x_8D, 0x_A6, 0x_1B, 0x_64, 0x_AA, 0x_14, 0x_8C, 0x_F6, 0x_4A, 0x_39, 0x_50, 0x_E7, 0x_4C, 0x_68,
		0x_4B, 0x_35, 0x_02, 0x_C8, 0x_03, 0x_EA, 0x_F8, 0x_44, 0x_5B, 0x_C4, 0x_32, 0x_3A, 0x_A5, 0x_DF, 0x_25,
		0x_08, 0x_E4, 0x_A4, 0x_E2, 0x_CB, 0x_9C, 0x_76, 0x_ED, 0x_28, 0x_94, 0x_E9, 0x_06, 0x_2A, 0x_7D, 0x_8F,
		0x_15, 0x_C5, 0x_75, 0x_A8, 0x_B9, 0x_C1, 0x_57, 0x_AE, 0x_EE, 0x_77, 0x_3D, 0x_DA, 0x_61, 0x_93, 0x_F9,
		0x_79, 0x_F3, 0x_BF, 0x_19, 0x_97, 0x_5C, 0x_EC, 0x_E3, 0x_87, 0x_73, 0x_41, 0x_CE, 0x_FB, 0x_6A, 0x_1F,
		0x_21, 0x_DE, 0x_11, 0x_D1, 0x_22, 0x_81, 0x_83, 0x_96, 0x_D5, 0x_F0, 0x_0E, 0x_3F, 0x_B4, 0x_62, 0x_6C,
		0x_AF, 0x_13, 0x_65, 0x_DB, 0x_E5, 0x_C2, 0x_A7, 0x_56, 0x_AC, 0x_A2, 0x_99, 0x_7B, 0x_F4, 0x_31, 0x_B5,
		0x_D0, 0x_2F, 0x_B8, 0x_5D, 0x_A0, 0x_CC, 0x_59, 0x_F1, 0x_69, 0x_C6, 0x_BC, 0x_3C, 0x_5F, 0x_60, 0x_EB,
		0x_BA, 0x_18, 0x_9F, 0x_B7, 0x_34, 0x_E1, 0x_86, 0x_D2, 0x_B0, 0x_05, 0x_AB, 0x_82, 0x_F2, 0x_01, 0x_63,
		0x_33, 0x_45, 0x_12, 0x_46, 0x_D9, 0x_98, 0x_7A, 0x_9B, 0x_DC, 0x_E0, 0x_30, 0x_6D, 0x_70, 0x_CA, 0x_A1,
		0x_E6, 0x_48, 0x_91, 0x_B3, 0x_26, 0x_FA, 0x_C7, 0x_04, 0x_88, 0x_4D, 0x_1D, 0x_55, 0x_BB, 0x_54, 0x_66,
		0x_47, 0x_80, 0x_6F, 0x_38, 0x_BE, 0x_49, 0x_9E, 0x_74, 0x_52, 0x_84, 0x_B6, 0x_17, 0x_07, 0x_FF, 0x_D4,
		0x_92, 0x_DD, 0x_37, 0x_C9, 0x_71, 0x_CD, 0x_8B, 0x_D8, 0x_89, 0x_E8, 0x_7E, 0x_D3, 0x_B2, 0x_EF, 0x_5A,
		0x_A9, 0x_10, 0x_6B, 0x_23, 0x_53, 0x_36, 0x_8E,
	];

	helper(S, BASE, -25);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_796_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_minus_796_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0A,
		0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0C,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_F7, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_A1, 0x_3E, 0x_F7, 0x_EB, 0x_93, 0x_8F, 0x_96, 0x_B3, 0x_1A, 0x_30, 0x_9B, 0x_D2, 0x_8C, 0x_A6,
		0x_79, 0x_99, 0x_9F, 0x_CC, 0x_CB, 0x_2E, 0x_04, 0x_BC, 0x_67, 0x_DD, 0x_57, 0x_6E, 0x_B9, 0x_4D, 0x_C1,
		0x_E6, 0x_64, 0x_56, 0x_98, 0x_3A, 0x_9E, 0x_8D, 0x_13, 0x_0E, 0x_C2, 0x_F4, 0x_06, 0x_24, 0x_1C, 0x_08,
		0x_B4, 0x_28, 0x_B7, 0x_5A, 0x_C0, 0x_03, 0x_23, 0x_71, 0x_22, 0x_17, 0x_E9, 0x_F6, 0x_12, 0x_40, 0x_02,
		0x_37, 0x_3F, 0x_FC, 0x_9C, 0x_DF, 0x_81, 0x_E8, 0x_C3, 0x_01, 0x_BF, 0x_15, 0x_A4, 0x_E3, 0x_C9, 0x_44,
		0x_7C, 0x_AC, 0x_31, 0x_1D, 0x_DA, 0x_52, 0x_D6, 0x_2A, 0x_C4, 0x_97, 0x_55, 0x_26, 0x_C8, 0x_A9, 0x_95,
		0x_38, 0x_FE, 0x_7A, 0x_A5, 0x_35, 0x_5F, 0x_D4, 0x_6B, 0x_88, 0x_C5, 0x_65, 0x_82, 0x_27, 0x_EC, 0x_F9,
		0x_6D, 0x_53, 0x_B8, 0x_63, 0x_8A, 0x_59, 0x_FA, 0x_F8, 0x_EE, 0x_83, 0x_77, 0x_32, 0x_A3, 0x_11, 0x_87,
		0x_E4, 0x_FD, 0x_5C, 0x_5E, 0x_8B, 0x_84, 0x_66, 0x_1B, 0x_49, 0x_7D, 0x_73, 0x_F0, 0x_94, 0x_50, 0x_4F,
		0x_D3, 0x_D9, 0x_2F, 0x_47, 0x_86, 0x_3B, 0x_90, 0x_AB, 0x_C6, 0x_7E, 0x_05, 0x_6A, 0x_DE, 0x_EA, 0x_5D,
		0x_B2, 0x_EF, 0x_AD, 0x_E1, 0x_46, 0x_92, 0x_70, 0x_72, 0x_B0, 0x_29, 0x_42, 0x_A0, 0x_5B, 0x_36, 0x_75,
		0x_41, 0x_A8, 0x_BD, 0x_7F, 0x_E2, 0x_A2, 0x_D0, 0x_91, 0x_CD, 0x_E5, 0x_DB, 0x_C7, 0x_33, 0x_0F, 0x_45,
		0x_CA, 0x_F2, 0x_7B, 0x_34, 0x_F5, 0x_19, 0x_48, 0x_54, 0x_10, 0x_B6, 0x_07, 0x_F1, 0x_FF, 0x_AA, 0x_78,
		0x_9A, 0x_80, 0x_61, 0x_BE, 0x_FB, 0x_51, 0x_6F, 0x_18, 0x_39, 0x_16, 0x_21, 0x_74, 0x_4C, 0x_E0, 0x_AF,
		0x_2C, 0x_4B, 0x_60, 0x_4A, 0x_D5, 0x_D8, 0x_58, 0x_D1, 0x_1F, 0x_3C, 0x_CF, 0x_4E, 0x_14, 0x_25, 0x_BA,
		0x_89, 0x_ED, 0x_AE, 0x_43, 0x_6C, 0x_DC, 0x_68, 0x_A7, 0x_76, 0x_D7, 0x_CE, 0x_F3, 0x_B5, 0x_9D, 0x_3D,
		0x_BB, 0x_E7, 0x_8E, 0x_85, 0x_69, 0x_62, 0x_1E,
	];

	helper(S, BASE, -796);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_8_817_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_minus_8_817_in_base_247() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_47, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_6C, 0x_34, 0x_FC, 0x_DB, 0x_91, 0x_1E, 0x_FF, 0x_07, 0x_25, 0x_AA, 0x_83, 0x_87, 0x_D0, 0x_7C,
		0x_A9, 0x_B3, 0x_03, 0x_73, 0x_BF, 0x_C3, 0x_37, 0x_BC, 0x_60, 0x_DA, 0x_C7, 0x_AE, 0x_75, 0x_38, 0x_61,
		0x_85, 0x_FE, 0x_E7, 0x_ED, 0x_7B, 0x_47, 0x_DC, 0x_6F, 0x_21, 0x_E2, 0x_4C, 0x_A1, 0x_EE, 0x_5A, 0x_D8,
		0x_17, 0x_90, 0x_74, 0x_DD, 0x_D9, 0x_05, 0x_70, 0x_0E, 0x_E4, 0x_B8, 0x_98, 0x_56, 0x_E0, 0x_69, 0x_DE,
		0x_D5, 0x_64, 0x_30, 0x_2E, 0x_8A, 0x_7D, 0x_F3, 0x_C8, 0x_08, 0x_7A, 0x_58, 0x_44, 0x_7F, 0x_3F, 0x_B2,
		0x_94, 0x_06, 0x_92, 0x_C5, 0x_97, 0x_51, 0x_8E, 0x_C1, 0x_84, 0x_E3, 0x_6A, 0x_CB, 0x_49, 0x_8F, 0x_43,
		0x_1D, 0x_66, 0x_16, 0x_26, 0x_F6, 0x_59, 0x_EC, 0x_8D, 0x_F4, 0x_B5, 0x_36, 0x_C2, 0x_72, 0x_93, 0x_19,
		0x_62, 0x_B6, 0x_CE, 0x_CF, 0x_2C, 0x_45, 0x_C9, 0x_E1, 0x_A7, 0x_80, 0x_F8, 0x_BE, 0x_E9, 0x_1B, 0x_52,
		0x_29, 0x_57, 0x_B7, 0x_81, 0x_A6, 0x_2F, 0x_55, 0x_01, 0x_C6, 0x_BD, 0x_14, 0x_15, 0x_C0, 0x_42, 0x_FA,
		0x_40, 0x_E5, 0x_22, 0x_11, 0x_86, 0x_24, 0x_99, 0x_10, 0x_F7, 0x_1C, 0x_7E, 0x_EA, 0x_5F, 0x_9E, 0x_76,
		0x_F0, 0x_48, 0x_A5, 0x_A2, 0x_33, 0x_96, 0x_D2, 0x_D7, 0x_67, 0x_B4, 0x_4D, 0x_CA, 0x_E8, 0x_A4, 0x_39,
		0x_F9, 0x_71, 0x_9F, 0x_AD, 0x_9C, 0x_77, 0x_F5, 0x_32, 0x_BB, 0x_3D, 0x_23, 0x_68, 0x_4A, 0x_CD, 0x_3E,
		0x_78, 0x_8C, 0x_FB, 0x_6E, 0x_8B, 0x_1F, 0x_95, 0x_A8, 0x_5E, 0x_B0, 0x_28, 0x_4E, 0x_D6, 0x_D3, 0x_5D,
		0x_3A, 0x_AF, 0x_2A, 0x_13, 0x_35, 0x_AC, 0x_1A, 0x_18, 0x_79, 0x_53, 0x_6B, 0x_41, 0x_E6, 0x_27, 0x_B1,
		0x_04, 0x_88, 0x_54, 0x_5B, 0x_3B, 0x_BA, 0x_9A, 0x_82, 0x_4F, 0x_FD, 0x_5C, 0x_A3, 0x_D4, 0x_31, 0x_F2,
		0x_89, 0x_12, 0x_4B, 0x_C4, 0x_46, 0x_9D, 0x_AB, 0x_65, 0x_F1, 0x_6D, 0x_EF, 0x_A0, 0x_EB, 0x_3C, 0x_0F,
		0x_63, 0x_02, 0x_CC, 0x_B9, 0x_D1, 0x_50, 0x_9B,
	];

	helper(S, BASE, -8_817);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_35_571_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_minus_35_571_in_base_247() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_7A, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_64, 0x_A6, 0x_28, 0x_76, 0x_37, 0x_72, 0x_C9, 0x_E9, 0x_14, 0x_CD, 0x_9A, 0x_7F, 0x_01, 0x_D0,
		0x_24, 0x_D5, 0x_FC, 0x_68, 0x_DF, 0x_8B, 0x_7D, 0x_97, 0x_71, 0x_B5, 0x_51, 0x_29, 0x_FA, 0x_BE, 0x_D1,
		0x_BA, 0x_A2, 0x_6A, 0x_32, 0x_33, 0x_EA, 0x_1A, 0x_DD, 0x_FB, 0x_B7, 0x_85, 0x_87, 0x_94, 0x_35, 0x_2F,
		0x_E2, 0x_A5, 0x_F3, 0x_1B, 0x_58, 0x_27, 0x_A4, 0x_BD, 0x_C4, 0x_E5, 0x_5E, 0x_AD, 0x_17, 0x_50, 0x_FD,
		0x_92, 0x_FE, 0x_ED, 0x_C5, 0x_48, 0x_8A, 0x_8E, 0x_90, 0x_3E, 0x_82, 0x_59, 0x_52, 0x_88, 0x_10, 0x_25,
		0x_E0, 0x_EB, 0x_6B, 0x_73, 0x_11, 0x_AC, 0x_66, 0x_D6, 0x_CF, 0x_C0, 0x_0F, 0x_A3, 0x_4E, 0x_B0, 0x_0E,
		0x_B1, 0x_9C, 0x_B4, 0x_4D, 0x_F0, 0x_40, 0x_CE, 0x_C3, 0x_74, 0x_2E, 0x_55, 0x_5A, 0x_7C, 0x_78, 0x_9F,
		0x_3A, 0x_F1, 0x_65, 0x_54, 0x_F8, 0x_03, 0x_79, 0x_18, 0x_B8, 0x_75, 0x_AB, 0x_E4, 0x_67, 0x_C1, 0x_13,
		0x_CC, 0x_04, 0x_63, 0x_96, 0x_9E, 0x_19, 0x_6D, 0x_6C, 0x_08, 0x_F5, 0x_44, 0x_DA, 0x_1C, 0x_A9, 0x_C7,
		0x_D4, 0x_D8, 0x_21, 0x_45, 0x_BC, 0x_47, 0x_3F, 0x_EF, 0x_34, 0x_7A, 0x_A1, 0x_43, 0x_3D, 0x_4B, 0x_EC,
		0x_6F, 0x_39, 0x_D2, 0x_C8, 0x_3B, 0x_C6, 0x_81, 0x_69, 0x_F2, 0x_D7, 0x_83, 0x_B3, 0x_E6, 0x_86, 0x_6E,
		0x_98, 0x_8D, 0x_1D, 0x_AF, 0x_31, 0x_EE, 0x_DE, 0x_7E, 0x_07, 0x_61, 0x_2C, 0x_2A, 0x_A0, 0x_BF, 0x_84,
		0x_AA, 0x_70, 0x_91, 0x_F9, 0x_02, 0x_BB, 0x_26, 0x_C2, 0x_B9, 0x_06, 0x_5D, 0x_80, 0x_E7, 0x_D9, 0x_16,
		0x_89, 0x_4F, 0x_E8, 0x_7B, 0x_56, 0x_DB, 0x_F4, 0x_93, 0x_15, 0x_B6, 0x_1E, 0x_A8, 0x_36, 0x_E1, 0x_62,
		0x_53, 0x_1F, 0x_3C, 0x_42, 0x_CA, 0x_FF, 0x_4C, 0x_5B, 0x_4A, 0x_5C, 0x_12, 0x_30, 0x_B2, 0x_DC, 0x_5F,
		0x_23, 0x_D3, 0x_A7, 0x_46, 0x_60, 0x_CB, 0x_F6, 0x_99, 0x_AE, 0x_95, 0x_38, 0x_41, 0x_22, 0x_8C, 0x_8F,
		0x_9D, 0x_9B, 0x_77, 0x_E3, 0x_57, 0x_05, 0x_F7,
	];

	helper(S, BASE, -35_571);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_479_579_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_minus_479_579_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_0A,
		0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2D,
		0x_4E, 0x_C5, 0x_4D,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_5D, 0x_C6, 0x_FB, 0x_98, 0x_8B, 0x_61, 0x_4E, 0x_64, 0x_40, 0x_CA, 0x_71, 0x_6F, 0x_EA, 0x_16,
		0x_BD, 0x_7B, 0x_EB, 0x_6A, 0x_5A, 0x_6D, 0x_FC, 0x_06, 0x_A0, 0x_E8, 0x_1B, 0x_05, 0x_9C, 0x_74, 0x_03,
		0x_6E, 0x_60, 0x_5C, 0x_5E, 0x_CD, 0x_EE, 0x_BF, 0x_19, 0x_24, 0x_B7, 0x_FD, 0x_6C, 0x_13, 0x_C8, 0x_10,
		0x_A7, 0x_D2, 0x_D3, 0x_E7, 0x_72, 0x_DD, 0x_EF, 0x_68, 0x_FA, 0x_E3, 0x_04, 0x_7D, 0x_B4, 0x_4C, 0x_94,
		0x_DC, 0x_7A, 0x_DF, 0x_F8, 0x_CB, 0x_A5, 0x_3F, 0x_8E, 0x_37, 0x_BB, 0x_1C, 0x_C4, 0x_3E, 0x_F0, 0x_2C,
		0x_0F, 0x_49, 0x_99, 0x_8F, 0x_1E, 0x_E9, 0x_CF, 0x_29, 0x_EC, 0x_FE, 0x_CE, 0x_86, 0x_B8, 0x_31, 0x_9A,
		0x_C0, 0x_B1, 0x_43, 0x_02, 0x_62, 0x_A3, 0x_25, 0x_4F, 0x_97, 0x_01, 0x_D7, 0x_41, 0x_90, 0x_39, 0x_3A,
		0x_28, 0x_79, 0x_0E, 0x_52, 0x_D1, 0x_66, 0x_65, 0x_51, 0x_D0, 0x_50, 0x_4B, 0x_63, 0x_83, 0x_D9, 0x_53,
		0x_A2, 0x_56, 0x_77, 0x_69, 0x_9F, 0x_93, 0x_DB, 0x_B6, 0x_C3, 0x_45, 0x_A1, 0x_27, 0x_73, 0x_17, 0x_23,
		0x_80, 0x_E6, 0x_96, 0x_59, 0x_F6, 0x_12, 0x_AF, 0x_D8, 0x_91, 0x_89, 0x_B0, 0x_C2, 0x_46, 0x_3B, 0x_BE,
		0x_32, 0x_3D, 0x_4D, 0x_14, 0x_4A, 0x_7E, 0x_E5, 0x_CC, 0x_7C, 0x_AC, 0x_C9, 0x_C7, 0x_1F, 0x_15, 0x_B3,
		0x_22, 0x_11, 0x_F7, 0x_F5, 0x_A9, 0x_F9, 0x_87, 0x_ED, 0x_42, 0x_81, 0x_1D, 0x_07, 0x_A4, 0x_BA, 0x_8C,
		0x_21, 0x_5B, 0x_E0, 0x_78, 0x_92, 0x_84, 0x_A6, 0x_88, 0x_58, 0x_30, 0x_AD, 0x_FF, 0x_8A, 0x_3C, 0x_7F,
		0x_D4, 0x_E1, 0x_85, 0x_33, 0x_70, 0x_AB, 0x_08, 0x_55, 0x_95, 0x_18, 0x_34, 0x_38, 0x_DE, 0x_A8, 0x_F3,
		0x_D5, 0x_2E, 0x_C5, 0x_36, 0x_F4, 0x_54, 0x_B5, 0x_82, 0x_E2, 0x_67, 0x_35, 0x_2F, 0x_DA, 0x_AE, 0x_26,
		0x_44, 0x_57, 0x_C1, 0x_76, 0x_9D, 0x_48, 0x_75, 0x_9E, 0x_5F, 0x_47, 0x_B9, 0x_AA, 0x_D6, 0x_6B, 0x_E4,
		0x_BC, 0x_1A, 0x_B2, 0x_2A, 0x_8D, 0x_F1, 0x_9B,
	];

	helper(S, BASE, -479_579);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_642_852_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_642_852_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2C, 0x_21, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_C1, 0x_73, 0x_9C, 0x_71, 0x_E0, 0x_68, 0x_F0, 0x_4F, 0x_1F, 0x_88, 0x_1A, 0x_90, 0x_BD, 0x_38,
		0x_9F, 0x_74, 0x_04, 0x_5E, 0x_67, 0x_01, 0x_B1, 0x_1C, 0x_58, 0x_40, 0x_A7, 0x_0F, 0x_50, 0x_5F, 0x_94,
		0x_C5, 0x_FD, 0x_DE, 0x_9A, 0x_8C, 0x_CA, 0x_7A, 0x_7C, 0x_07, 0x_08, 0x_AC, 0x_6B, 0x_22, 0x_D4, 0x_F2,
		0x_31, 0x_E4, 0x_E7, 0x_02, 0x_ED, 0x_66, 0x_BB, 0x_6A, 0x_5D, 0x_9D, 0x_B2, 0x_80, 0x_99, 0x_EB, 0x_C7,
		0x_C3, 0x_CF, 0x_2A, 0x_93, 0x_98, 0x_52, 0x_F6, 0x_21, 0x_B0, 0x_89, 0x_83, 0x_60, 0x_5C, 0x_A1, 0x_B6,
		0x_87, 0x_7E, 0x_19, 0x_29, 0x_D8, 0x_D6, 0x_B3, 0x_DB, 0x_1E, 0x_05, 0x_9B, 0x_DF, 0x_97, 0x_26, 0x_4A,
		0x_DC, 0x_FB, 0x_8E, 0x_23, 0x_A9, 0x_D2, 0x_D0, 0x_AF, 0x_CC, 0x_55, 0x_A5, 0x_F9, 0x_BA, 0x_42, 0x_59,
		0x_33, 0x_16, 0x_DD, 0x_2F, 0x_86, 0x_4B, 0x_64, 0x_91, 0x_12, 0x_E1, 0x_14, 0x_A0, 0x_A3, 0x_3C, 0x_77,
		0x_F3, 0x_7F, 0x_C4, 0x_C9, 0x_AA, 0x_2C, 0x_13, 0x_FA, 0x_EC, 0x_3D, 0x_CB, 0x_1B, 0x_5B, 0x_03, 0x_46,
		0x_5A, 0x_18, 0x_D1, 0x_45, 0x_6F, 0x_11, 0x_8A, 0x_8B, 0x_3B, 0x_BF, 0x_61, 0x_25, 0x_7D, 0x_57, 0x_EA,
		0x_D7, 0x_EF, 0x_92, 0x_81, 0x_78, 0x_CD, 0x_AE, 0x_AD, 0x_56, 0x_7B, 0x_B8, 0x_FE, 0x_C6, 0x_95, 0x_A4,
		0x_44, 0x_D9, 0x_FF, 0x_32, 0x_34, 0x_4D, 0x_4E, 0x_8D, 0x_C2, 0x_82, 0x_17, 0x_8F, 0x_75, 0x_30, 0x_47,
		0x_43, 0x_3A, 0x_39, 0x_48, 0x_15, 0x_B5, 0x_F8, 0x_F5, 0x_BC, 0x_A2, 0x_B7, 0x_28, 0x_F1, 0x_BE, 0x_84,
		0x_F7, 0x_F4, 0x_B9, 0x_CE, 0x_0E, 0x_9E, 0x_AB, 0x_24, 0x_49, 0x_E3, 0x_6D, 0x_3E, 0x_EE, 0x_06, 0x_FC,
		0x_E9, 0x_37, 0x_4C, 0x_E8, 0x_C8, 0x_10, 0x_1D, 0x_72, 0x_54, 0x_41, 0x_B4, 0x_69, 0x_53, 0x_6E, 0x_96,
		0x_D5, 0x_3F, 0x_79, 0x_85, 0x_E2, 0x_27, 0x_D3, 0x_A8, 0x_62, 0x_36, 0x_DA, 0x_E5, 0x_E6, 0x_C0, 0x_A6,
		0x_51, 0x_35, 0x_65, 0x_70, 0x_2E, 0x_6C, 0x_63,
	];

	helper(S, BASE, -7_642_852);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_65_416_501_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_minus_65_416_501_in_base_247() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0B,
		0x_0D, 0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_52, 0x_E5, 0x_6E, 0x_A9,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_B8, 0x_68, 0x_A4, 0x_52, 0x_42, 0x_FF, 0x_B9, 0x_F3, 0x_02, 0x_7E, 0x_5C, 0x_9D, 0x_53, 0x_4A,
		0x_65, 0x_05, 0x_4E, 0x_F5, 0x_CE, 0x_DE, 0x_AC, 0x_FC, 0x_44, 0x_26, 0x_56, 0x_A3, 0x_BC, 0x_87, 0x_ED,
		0x_D2, 0x_EC, 0x_EF, 0x_A9, 0x_2C, 0x_AD, 0x_DB, 0x_DD, 0x_62, 0x_7D, 0x_C7, 0x_60, 0x_A1, 0x_43, 0x_C9,
		0x_6D, 0x_C8, 0x_72, 0x_97, 0x_FD, 0x_94, 0x_BE, 0x_B6, 0x_0E, 0x_7B, 0x_D9, 0x_8B, 0x_FA, 0x_99, 0x_14,
		0x_6E, 0x_71, 0x_2A, 0x_F4, 0x_39, 0x_07, 0x_93, 0x_1B, 0x_BB, 0x_36, 0x_AA, 0x_85, 0x_CB, 0x_DC, 0x_CA,
		0x_23, 0x_A2, 0x_30, 0x_C0, 0x_32, 0x_E1, 0x_6F, 0x_10, 0x_66, 0x_E5, 0x_70, 0x_17, 0x_B2, 0x_1E, 0x_24,
		0x_3B, 0x_98, 0x_22, 0x_33, 0x_29, 0x_6B, 0x_A5, 0x_9F, 0x_FE, 0x_9C, 0x_95, 0x_27, 0x_BD, 0x_A7, 0x_8F,
		0x_64, 0x_A6, 0x_86, 0x_8E, 0x_61, 0x_F8, 0x_91, 0x_40, 0x_E0, 0x_9B, 0x_EA, 0x_9A, 0x_DA, 0x_83, 0x_48,
		0x_F9, 0x_47, 0x_3D, 0x_80, 0x_4D, 0x_3A, 0x_F6, 0x_31, 0x_79, 0x_AF, 0x_63, 0x_88, 0x_5D, 0x_D0, 0x_F1,
		0x_96, 0x_C5, 0x_D5, 0x_25, 0x_28, 0x_46, 0x_90, 0x_75, 0x_35, 0x_89, 0x_38, 0x_7A, 0x_C4, 0x_E4, 0x_12,
		0x_01, 0x_A0, 0x_92, 0x_49, 0x_3C, 0x_34, 0x_55, 0x_50, 0x_7F, 0x_8D, 0x_2F, 0x_F7, 0x_1C, 0x_8C, 0x_08,
		0x_54, 0x_4B, 0x_AB, 0x_76, 0x_6A, 0x_CC, 0x_C3, 0x_E3, 0x_B5, 0x_69, 0x_19, 0x_D4, 0x_57, 0x_7C, 0x_B3,
		0x_67, 0x_73, 0x_81, 0x_FB, 0x_18, 0x_5A, 0x_E6, 0x_78, 0x_0F, 0x_04, 0x_BF, 0x_D6, 0x_13, 0x_58, 0x_3F,
		0x_C6, 0x_59, 0x_5B, 0x_F0, 0x_A8, 0x_45, 0x_74, 0x_16, 0x_4C, 0x_1D, 0x_B7, 0x_F2, 0x_84, 0x_E7, 0x_E8,
		0x_E2, 0x_6C, 0x_AE, 0x_D3, 0x_9E, 0x_11, 0x_3E, 0x_B0, 0x_1F, 0x_8A, 0x_E9, 0x_03, 0x_82, 0x_BA, 0x_EE,
		0x_1A, 0x_77, 0x_5E, 0x_15, 0x_41, 0x_D1, 0x_CD, 0x_B1, 0x_D8, 0x_2E, 0x_5F, 0x_CF, 0x_4F, 0x_51, 0x_EB,
		0x_DF, 0x_C2, 0x_21, 0x_06, 0x_B4, 0x_C1, 0x_D7,
	];

	helper(S, BASE, -65_416_501);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_533_991_251_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_minus_533_991_251_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_5D, 0x_38, 0x_5E, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_A5, 0x_7F, 0x_C3, 0x_42, 0x_F3, 0x_22, 0x_10, 0x_CE, 0x_C5, 0x_E8, 0x_3A, 0x_14, 0x_40, 0x_A9, 0x_03,
		0x_E0, 0x_BD, 0x_E1, 0x_94, 0x_6E, 0x_E9, 0x_DB, 0x_3F, 0x_7E, 0x_FB, 0x_BA, 0x_E6, 0x_F8, 0x_44, 0x_07,
		0x_52, 0x_26, 0x_2C, 0x_D6, 0x_FD, 0x_5D, 0x_6D, 0x_8E, 0x_9E, 0x_51, 0x_D3, 0x_B7, 0x_EE, 0x_25, 0x_67,
		0x_28, 0x_AB, 0x_53, 0x_D2, 0x_F7, 0x_CB, 0x_11, 0x_68, 0x_A1, 0x_1A, 0x_A8, 0x_05, 0x_87, 0x_13, 0x_78,
		0x_AF, 0x_59, 0x_80, 0x_49, 0x_99, 0x_B1, 0x_7A, 0x_3B, 0x_92, 0x_2E, 0x_B8, 0x_F5, 0x_90, 0x_C0, 0x_1D,
		0x_A4, 0x_EA, 0x_06, 0x_A2, 0x_19, 0x_D5, 0x_EC, 0x_FA, 0x_AE, 0x_6B, 0x_8B, 0x_23, 0x_01, 0x_AC, 0x_5F,
		0x_B6, 0x_C8, 0x_29, 0x_ED, 0x_83, 0x_7D, 0x_75, 0x_58, 0x_85, 0x_69, 0x_60, 0x_43, 0x_84, 0x_70, 0x_16,
		0x_C2, 0x_81, 0x_38, 0x_4B, 0x_6C, 0x_48, 0x_A3, 0x_08, 0x_EB, 0x_F0, 0x_1F, 0x_C9, 0x_AA, 0x_89, 0x_33,
		0x_9B, 0x_B3, 0x_4D, 0x_65, 0x_91, 0x_E7, 0x_0E, 0x_4A, 0x_C1, 0x_32, 0x_15, 0x_DE, 0x_5C, 0x_A0, 0x_F1,
		0x_B9, 0x_CC, 0x_74, 0x_7B, 0x_BE, 0x_04, 0x_73, 0x_FE, 0x_CA, 0x_8C, 0x_21, 0x_BF, 0x_93, 0x_6F, 0x_F9,
		0x_41, 0x_CD, 0x_5B, 0x_FF, 0x_86, 0x_6A, 0x_4C, 0x_72, 0x_31, 0x_E2, 0x_AD, 0x_9C, 0x_46, 0x_5E, 0x_D1,
		0x_8D, 0x_24, 0x_35, 0x_4F, 0x_B2, 0x_D0, 0x_54, 0x_EF, 0x_1E, 0x_7C, 0x_B4, 0x_02, 0x_9A, 0x_C4, 0x_C7,
		0x_76, 0x_8A, 0x_2F, 0x_E5, 0x_DA, 0x_63, 0x_82, 0x_D4, 0x_F4, 0x_BC, 0x_5A, 0x_B5, 0x_17, 0x_56, 0x_57,
		0x_3D, 0x_4E, 0x_37, 0x_47, 0x_77, 0x_3E, 0x_95, 0x_F6, 0x_39, 0x_97, 0x_D7, 0x_98, 0x_F2, 0x_D9, 0x_FC,
		0x_E4, 0x_61, 0x_34, 0x_A7, 0x_1B, 0x_36, 0x_9D, 0x_64, 0x_66, 0x_0F, 0x_9F, 0x_96, 0x_30, 0x_45, 0x_DC,
		0x_C6, 0x_3C, 0x_CF, 0x_27, 0x_E3, 0x_88, 0x_62, 0x_B0, 0x_DF, 0x_12, 0x_2A, 0x_DD, 0x_1C, 0x_8F, 0x_71,
		0x_55, 0x_D8, 0x_BB, 0x_50, 0x_A6, 0x_18, 0x_79,
	];

	helper(S, BASE, -533_991_251);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_5_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_minus_5_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0A,
		0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_0C,
		0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_2D, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5,
		0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5,
		0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_D5, 0x_E9, 0x_D5, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_D5, 0x_E9,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_63_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_minus_63_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0C,
		0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_20,
		0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_2D, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA,
		0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA,
		0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_D9,
		0x_D9, 0x_D9, 0x_D9, 0x_D9, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_D9,
	];

	helper(S, BASE, -63);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_458_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_minus_458_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0D,
		0x_09, 0x_20, 0x_0B, 0x_0C, 0x_2D, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_66, 0x_66, 0x_66, 0x_81,
		0x_81, 0x_66, 0x_81, 0x_66, 0x_81,
	];
	const BASE: &[u8] = &[
		0x_81, 0x_66,
	];

	helper(S, BASE, -458);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_7_370_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_minus_7_370_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_2D, 0x_69, 0x_69, 0x_69, 0x_69, 0x_24, 0x_24, 0x_24, 0x_69,
		0x_69, 0x_24, 0x_24, 0x_69, 0x_69, 0x_24, 0x_69, 0x_24, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_24,
	];

	helper(S, BASE, -7_370);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_54_611_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_minus_54_611_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_2D, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83,
		0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83,
		0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_3F, 0x_3F, 0x_83, 0x_3F, 0x_83, 0x_3F, 0x_83, 0x_3F, 0x_83,
		0x_3F, 0x_83, 0x_3F, 0x_83, 0x_83, 0x_3F, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_3F,
	];

	helper(S, BASE, -54_611);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_137_290_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_minus_137_290_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_2D, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_39, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_39, 0x_39, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_39, 0x_4E, 0x_4E, 0x_39, 0x_4E, 0x_39, 0x_4E,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_39,
	];

	helper(S, BASE, -137_290);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_9_916_189_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_minus_9_916_189_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0A,
		0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_0A,
		0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_2D, 0x_3B, 0x_3B, 0x_3B,
		0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_93, 0x_3B, 0x_3B, 0x_93, 0x_3B, 0x_93, 0x_93, 0x_93,
		0x_3B, 0x_93, 0x_3B, 0x_3B, 0x_93, 0x_93, 0x_93, 0x_93, 0x_3B, 0x_3B, 0x_3B, 0x_93, 0x_93, 0x_93, 0x_3B,
		0x_93,
	];
	const BASE: &[u8] = &[
		0x_3B, 0x_93,
	];

	helper(S, BASE, -9_916_189);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_44_776_689_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_minus_44_776_689_in_base_2() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_2D, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_A5, 0x_45, 0x_A5, 0x_45, 0x_A5,
		0x_45, 0x_A5, 0x_45, 0x_A5, 0x_A5, 0x_45, 0x_45, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_45, 0x_45, 0x_A5, 0x_A5,
		0x_A5, 0x_A5, 0x_45, 0x_45, 0x_45, 0x_A5,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_A5,
	];

	helper(S, BASE, -44_776_689);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_409_900_052_in_base_2
#[test]
fn s_has_whitespaces_and_zeros_and_minus_409_900_052_in_base_2() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0C,
		0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_09,
		0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_2D, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_F2, 0x_F2,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_F2, 0x_F2, 0x_75, 0x_F2, 0x_F2, 0x_F2, 0x_75, 0x_F2, 0x_75, 0x_75, 0x_F2,
		0x_75, 0x_F2, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_F2, 0x_75, 0x_F2, 0x_75, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_F2,
	];

	helper(S, BASE, -409_900_052);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_5_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_minus_5_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_2D, 0x_BC, 0x_7D, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_7D, 0x_E4,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_91_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_minus_91_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_2D, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31,
		0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31,
		0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_70, 0x_31, 0x_70, 0x_31, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_31, 0x_70, 0x_66,
	];

	helper(S, BASE, -91);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_701_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_minus_701_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0A, 0x_2D, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0,
		0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0,
		0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_A0, 0x_9F, 0x_9F, 0x_45, 0x_9F, 0x_9F, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_45, 0x_9F,
	];

	helper(S, BASE, -701);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_564_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_564_in_base_3() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_2D,
		0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_FB, 0x_22, 0x_FB, 0x_FB, 0x_FB, 0x_EC, 0x_EC, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_FB, 0x_EC,
	];

	helper(S, BASE, -2_564);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_93_731_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_minus_93_731_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_2D, 0x_42, 0x_42, 0x_E1, 0x_E1, 0x_90, 0x_42, 0x_90, 0x_E1,
		0x_90, 0x_42, 0x_E1, 0x_E1, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_E1, 0x_90,
	];

	helper(S, BASE, -93_731);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_466_642_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_minus_466_642_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_2D, 0x_D4, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_5D,
		0x_D2, 0x_5D, 0x_5D, 0x_D4, 0x_D2, 0x_D4, 0x_D2, 0x_D4, 0x_D4, 0x_D4, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_D2, 0x_5D,
	];

	helper(S, BASE, -466_642);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_9_196_624_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_minus_9_196_624_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_2D, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3,
		0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3,
		0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_9B, 0x_8A, 0x_8A, 0x_C3, 0x_8A, 0x_8A, 0x_C3,
		0x_8A, 0x_C3, 0x_9B, 0x_C3, 0x_9B, 0x_8A, 0x_C3, 0x_9B,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_9B, 0x_8A,
	];

	helper(S, BASE, -9_196_624);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_92_525_308_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_minus_92_525_308_in_base_3() {
	const S: &[u8] = &[
		0x_0D, 0x_2D, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_D8, 0x_C9, 0x_5A, 0x_5A,
		0x_C9, 0x_C9, 0x_C9, 0x_D8, 0x_D8, 0x_C9, 0x_D8, 0x_D8, 0x_5A, 0x_D8, 0x_C9, 0x_D8, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_5A, 0x_D8,
	];

	helper(S, BASE, -92_525_308);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_763_600_187_in_base_3
#[test]
fn s_has_whitespaces_and_zeros_and_minus_763_600_187_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_09,
		0x_0A, 0x_0D, 0x_2D, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_7D, 0x_8D, 0x_8D, 0x_8D, 0x_82, 0x_7D, 0x_8D,
		0x_8D, 0x_7D, 0x_7D, 0x_8D, 0x_8D, 0x_82, 0x_7D, 0x_7D, 0x_8D, 0x_7D, 0x_82, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_7D, 0x_8D,
	];

	helper(S, BASE, -763_600_187);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_9_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_minus_9_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_20,
		0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_2D, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_15, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_15, 0x_CF, 0x_48, 0x_58,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_77_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_minus_77_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_09,
		0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_20,
		0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_2D, 0x_14, 0x_14,
		0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14,
		0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14,
		0x_14, 0x_14, 0x_ED, 0x_14, 0x_6D,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_B9, 0x_6D, 0x_ED, 0x_81,
	];

	helper(S, BASE, -77);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_778_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_minus_778_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_0A,
		0x_2D, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2,
		0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_FF, 0x_FF, 0x_FF, 0x_E2, 0x_DA,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_FF, 0x_E8, 0x_DA, 0x_FC,
	];

	helper(S, BASE, -778);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_9_371_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_minus_9_371_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_2D, 0x_D0, 0x_D0, 0x_D0,
		0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0,
		0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0,
		0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_B7, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_D0, 0x_40, 0x_B7, 0x_F6, 0x_C1,
	];

	helper(S, BASE, -9_371);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_36_608_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_minus_36_608_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0D,
		0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_2D, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_A2, 0x_E1, 0x_08, 0x_A2, 0x_9C, 0x_E1, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_E1, 0x_A2, 0x_08, 0x_9C,
	];

	helper(S, BASE, -36_608);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_703_492_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_minus_703_492_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_0C,
		0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_09,
		0x_0B, 0x_2D, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_85, 0x_7B,
		0x_75, 0x_75, 0x_75, 0x_23, 0x_7B, 0x_CF, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_85, 0x_23, 0x_CF, 0x_7B,
	];

	helper(S, BASE, -703_492);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_7_422_872_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_minus_7_422_872_in_base_5() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_2D, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_5E,
		0x_BC, 0x_F8, 0x_F8, 0x_F8, 0x_29, 0x_59, 0x_BC, 0x_BC, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_29, 0x_59, 0x_5E, 0x_BC,
	];

	helper(S, BASE, -7_422_872);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_80_315_195_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_minus_80_315_195_in_base_5() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0D,
		0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_2D, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6,
		0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_41, 0x_46, 0x_41, 0x_C6, 0x_46, 0x_C6,
		0x_C6, 0x_B3, 0x_41, 0x_30, 0x_B3, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_C6, 0x_41, 0x_30, 0x_46, 0x_B3,
	];

	helper(S, BASE, -80_315_195);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_562_370_429_in_base_5
#[test]
fn s_has_whitespaces_and_zeros_and_minus_562_370_429_in_base_5() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_2D, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_E9, 0x_C3, 0x_E9, 0x_E9, 0x_34, 0x_C5, 0x_C3, 0x_C5, 0x_E9,
		0x_C5, 0x_E9, 0x_9C, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_C3, 0x_E9, 0x_C5, 0x_34,
	];

	helper(S, BASE, -562_370_429);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_5_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_minus_5_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0D,
		0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_09,
		0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_2D, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_EC, 0x_3A, 0x_7D, 0x_82, 0x_12, 0x_F0,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_89_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_minus_89_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0C,
		0x_09, 0x_20, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_2D, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B,
		0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B,
		0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_30,
		0x_A8, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_3B, 0x_30, 0x_90, 0x_65, 0x_21, 0x_A8, 0x_71,
	];

	helper(S, BASE, -89);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_603_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_minus_603_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_09,
		0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0D,
		0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_2D, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_EC, 0x_C7, 0x_E0, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_EC, 0x_E0, 0x_8D, 0x_6D, 0x_C7, 0x_E4,
	];

	helper(S, BASE, -603);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_4_958_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_minus_4_958_in_base_7() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_20,
		0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_0C,
		0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_2D, 0x_D9, 0x_D9,
		0x_1F, 0x_D9, 0x_B4, 0x_F8, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_F8, 0x_1F, 0x_B4, 0x_64, 0x_EB, 0x_AE,
	];

	helper(S, BASE, -4_958);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_44_959_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_minus_44_959_in_base_7() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0C,
		0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_2D, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_64, 0x_3E, 0x_EF,
		0x_5F, 0x_B7, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_49, 0x_64, 0x_B7, 0x_3E, 0x_EF, 0x_8D,
	];

	helper(S, BASE, -44_959);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_444_407_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_minus_444_407_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0C,
		0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_2D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_60, 0x_F7, 0x_60, 0x_3D, 0x_9F, 0x_60, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_D2, 0x_4D, 0x_60, 0x_9F, 0x_F7, 0x_D0,
	];

	helper(S, BASE, -444_407);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_4_290_614_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_minus_4_290_614_in_base_7() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_20,
		0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0B,
		0x_09, 0x_2D, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_44, 0x_D0, 0x_87, 0x_C1,
		0x_B3, 0x_B3, 0x_87, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_D0, 0x_C1, 0x_87, 0x_2E, 0x_44, 0x_10,
	];

	helper(S, BASE, -4_290_614);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_99_915_201_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_minus_99_915_201_in_base_7() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0D,
		0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_2D, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_69, 0x_4F, 0x_69, 0x_69, 0x_C9,
		0x_49, 0x_B3, 0x_B3, 0x_49, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_C9, 0x_69, 0x_4F, 0x_34, 0x_49, 0x_B3,
	];

	helper(S, BASE, -99_915_201);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_623_058_789_in_base_7
#[test]
fn s_has_whitespaces_and_zeros_and_minus_623_058_789_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_2D, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E,
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_D6, 0x_D5, 0x_36, 0x_1E, 0x_36, 0x_DF,
		0x_D6, 0x_0E, 0x_DF, 0x_36, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_D5, 0x_D6, 0x_36, 0x_0E, 0x_4D, 0x_DF,
	];

	helper(S, BASE, -623_058_789);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_5_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_minus_5_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0D,
		0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0C,
		0x_20, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_2D, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_4A, 0x_6A, 0x_76, 0x_5D, 0x_B8, 0x_71, 0x_AB, 0x_5B, 0x_25, 0x_D9,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_90_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_minus_90_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0B,
		0x_0D, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_2D, 0x_E2, 0x_E2, 0x_E2, 0x_6A, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_25, 0x_2C, 0x_66, 0x_4F, 0x_DB, 0x_5F, 0x_D8, 0x_6A, 0x_BB, 0x_63,
	];

	helper(S, BASE, -90);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_586_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_minus_586_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_2D, 0x_56, 0x_56,
		0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56,
		0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56,
		0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_7D, 0x_85, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_73, 0x_DE, 0x_D6, 0x_7D, 0x_1A, 0x_12, 0x_C3, 0x_99, 0x_85, 0x_FA,
	];

	helper(S, BASE, -586);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_6_817_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_minus_6_817_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_09,
		0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0D,
		0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_2D, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4,
		0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4,
		0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_14, 0x_7E, 0x_B3, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_7E, 0x_80, 0x_B3, 0x_81, 0x_14, 0x_5A, 0x_74, 0x_CD, 0x_18, 0x_8B,
	];

	helper(S, BASE, -6_817);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_73_634_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_minus_73_634_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_0B,
		0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0C,
		0x_0C, 0x_0A, 0x_09, 0x_2D, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8,
		0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_50,
		0x_A8, 0x_5C, 0x_27, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_02, 0x_06, 0x_5C, 0x_BB, 0x_50, 0x_27, 0x_17, 0x_5A, 0x_23, 0x_54,
	];

	helper(S, BASE, -73_634);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_564_418_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_minus_564_418_in_base_11() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_0A,
		0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_2D, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0,
		0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0,
		0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0, 0x_C0,
		0x_C0, 0x_C0, 0x_C0, 0x_FC, 0x_F0, 0x_FA, 0x_C0, 0x_FA, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_C0, 0x_EC, 0x_9E, 0x_FC, 0x_B6, 0x_F0, 0x_FA, 0x_69, 0x_51, 0x_97, 0x_25,
	];

	helper(S, BASE, -564_418);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_8_878_957_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_minus_8_878_957_in_base_11() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_09,
		0x_2D, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_D4, 0x_E6, 0x_BD, 0x_C5, 0x_5D, 0x_FF, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_BD, 0x_22, 0x_96, 0x_C5, 0x_D4, 0x_92, 0x_EA, 0x_FF, 0x_5D, 0x_8E,
	];

	helper(S, BASE, -8_878_957);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_51_576_042_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_minus_51_576_042_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0D,
		0x_20, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_09,
		0x_20, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_2D, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B2, 0x_6B, 0x_54, 0x_B2, 0x_6B, 0x_71, 0x_F2, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_54, 0x_B2, 0x_F2, 0x_D2, 0x_FD, 0x_AB, 0x_6B, 0x_E9, 0x_71, 0x_C3,
	];

	helper(S, BASE, -51_576_042);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_640_695_564_in_base_11
#[test]
fn s_has_whitespaces_and_zeros_and_minus_640_695_564_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_09,
		0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0A,
		0x_0A, 0x_20, 0x_2D, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70,
		0x_70, 0x_70, 0x_70, 0x_C6, 0x_BA, 0x_03, 0x_40, 0x_C6, 0x_52, 0x_70, 0x_40, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_70, 0x_72, 0x_C6, 0x_EC, 0x_52, 0x_B2, 0x_73, 0x_40, 0x_63, 0x_03, 0x_BA,
	];

	helper(S, BASE, -640_695_564);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_4_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_minus_4_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_20,
		0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_0A,
		0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_2D, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85,
		0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85,
		0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_31, 0x_D9, 0x_42, 0x_EB, 0x_6E, 0x_FD, 0x_22, 0x_CE, 0x_AA, 0x_30, 0x_12, 0x_78,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_99_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_minus_99_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_0A,
		0x_0C, 0x_0A, 0x_20, 0x_2D, 0x_CA, 0x_97, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_13, 0x_5E, 0x_BE, 0x_E9, 0x_78, 0x_EF, 0x_97, 0x_E0, 0x_9E, 0x_5C, 0x_8F, 0x_E4,
	];

	helper(S, BASE, -99);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_271_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_minus_271_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_2D,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_24, 0x_0E, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_24, 0x_82, 0x_19, 0x_86, 0x_97, 0x_A2, 0x_0E, 0x_ED, 0x_2A, 0x_E8, 0x_34, 0x_93,
	];

	helper(S, BASE, -271);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_8_849_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_minus_8_849_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_2D, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_13, 0x_39, 0x_13,
		0x_4E,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_1B, 0x_06, 0x_35, 0x_13, 0x_FD, 0x_D0, 0x_58, 0x_0E, 0x_4E, 0x_1F, 0x_1E, 0x_98,
	];

	helper(S, BASE, -8_849);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_88_286_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_minus_88_286_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_0D,
		0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0D,
		0x_0D, 0x_20, 0x_0C, 0x_2D, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_F2, 0x_51, 0x_B0, 0x_2A, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_51, 0x_B0, 0x_F2, 0x_63, 0x_2A, 0x_59, 0x_14, 0x_68, 0x_9A, 0x_3C, 0x_D7, 0x_E0,
	];

	helper(S, BASE, -88_286);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_161_046_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_minus_161_046_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_0A,
		0x_20, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0B,
		0x_20, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_2D, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_63, 0x_47, 0x_89, 0x_9C, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_BA, 0x_49, 0x_89, 0x_DC, 0x_63, 0x_71, 0x_10, 0x_47, 0x_CA, 0x_99, 0x_0E, 0x_9C,
	];

	helper(S, BASE, -161_046);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_1_648_709_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_minus_1_648_709_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_2D, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_D5, 0x_F4, 0x_6C, 0x_F4, 0x_CF, 0x_E9,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_5B, 0x_33, 0x_C6, 0x_D5, 0x_F4, 0x_DF, 0x_8B, 0x_CF, 0x_6C, 0x_E9, 0x_71, 0x_64,
	];

	helper(S, BASE, -1_648_709);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_50_565_815_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_minus_50_565_815_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_2D, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59, 0x_59,
		0x_59, 0x_59, 0x_59, 0x_10, 0x_BE, 0x_91, 0x_F4, 0x_D3, 0x_59, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_2A, 0x_91, 0x_07, 0x_E0, 0x_F4, 0x_BE, 0x_C3, 0x_DF, 0x_ED, 0x_10, 0x_D3, 0x_88,
	];

	helper(S, BASE, -50_565_815);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_339_913_089_in_base_13
#[test]
fn s_has_whitespaces_and_zeros_and_minus_339_913_089_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_2D, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_D6, 0x_D6,
		0x_D6, 0x_2C, 0x_BA, 0x_E0, 0x_35, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_56, 0x_3F, 0x_BA, 0x_53, 0x_D6, 0x_2C, 0x_BD, 0x_43, 0x_30, 0x_29, 0x_5D, 0x_E0,
	];

	helper(S, BASE, -339_913_089);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_9_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_minus_9_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_2D, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A,
		0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A,
		0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_9F, 0x_62, 0x_94, 0x_21, 0x_7D, 0x_1D, 0x_46, 0x_6C, 0x_C9, 0x_78, 0x_14, 0x_90, 0x_CA, 0x_BA,
		0x_4C, 0x_72, 0x_31, 0x_6B,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_54_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_minus_54_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0D,
		0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0A,
		0x_2D, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2,
		0x_C2, 0x_75, 0x_6C,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_55, 0x_75, 0x_02, 0x_01, 0x_BF, 0x_32, 0x_30, 0x_CD, 0x_85, 0x_BA, 0x_50, 0x_F3, 0x_BD, 0x_37,
		0x_C9, 0x_6C, 0x_F7, 0x_D0,
	];

	helper(S, BASE, -54);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_257_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_minus_257_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_0C,
		0x_20, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0C,
		0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_2D, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_98, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_59, 0x_65, 0x_16, 0x_07, 0x_60, 0x_42, 0x_A8, 0x_1F, 0x_72, 0x_30, 0x_79, 0x_63, 0x_98, 0x_2E,
		0x_E5, 0x_26, 0x_C4, 0x_CC,
	];

	helper(S, BASE, -257);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_1_296_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_minus_1_296_in_base_19() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0A,
		0x_2D, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_C0, 0x_CF, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_43, 0x_94, 0x_C0, 0x_75, 0x_D8, 0x_3F, 0x_4E, 0x_B8, 0x_2A, 0x_52, 0x_CF, 0x_7C, 0x_5B, 0x_24,
		0x_15, 0x_02, 0x_FE, 0x_6B,
	];

	helper(S, BASE, -1_296);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_54_813_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_minus_54_813_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0B,
		0x_0D, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_09,
		0x_0A, 0x_0D, 0x_20, 0x_2D, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_91, 0x_EF, 0x_1E, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_30, 0x_88, 0x_F7, 0x_AC, 0x_82, 0x_F3, 0x_91, 0x_41, 0x_3F, 0x_AB, 0x_61, 0x_71, 0x_ED, 0x_E5,
		0x_1E, 0x_6F, 0x_65, 0x_EF,
	];

	helper(S, BASE, -54_813);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_637_710_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_minus_637_710_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_09,
		0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_0A,
		0x_09, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_2D, 0x_7A, 0x_7A,
		0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A,
		0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_1A, 0x_44, 0x_D1, 0x_F3, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_55, 0x_94, 0x_E4, 0x_1A, 0x_B3, 0x_85, 0x_2C, 0x_95, 0x_F3, 0x_57, 0x_8A, 0x_DF, 0x_10, 0x_DE,
		0x_D3, 0x_44, 0x_4B, 0x_D1,
	];

	helper(S, BASE, -637_710);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_7_267_193_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_minus_7_267_193_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0B,
		0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_2D, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_9F, 0x_4B, 0x_FE, 0x_04,
		0x_68, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_8C, 0x_9F, 0x_28, 0x_69, 0x_E9, 0x_45, 0x_CC, 0x_6B, 0x_04, 0x_1A, 0x_1D, 0x_1F, 0x_68, 0x_FE,
		0x_D9, 0x_8B, 0x_4B, 0x_82,
	];

	helper(S, BASE, -7_267_193);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_94_793_673_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_minus_94_793_673_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_09,
		0x_2D, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92,
		0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_C8, 0x_92, 0x_E3, 0x_7E, 0x_78, 0x_78, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_ED, 0x_C8, 0x_2C, 0x_B2, 0x_E3, 0x_78, 0x_7E, 0x_6F, 0x_EC, 0x_E1, 0x_84, 0x_E5, 0x_07, 0x_B8,
		0x_6A, 0x_82, 0x_6B, 0x_FC,
	];

	helper(S, BASE, -94_793_673);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_847_167_980_in_base_19
#[test]
fn s_has_whitespaces_and_zeros_and_minus_847_167_980_in_base_19() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_2D, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_49, 0x_A9, 0x_26, 0x_E0, 0x_D4, 0x_54, 0x_6A,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_13, 0x_26, 0x_12, 0x_99, 0x_7F, 0x_1B, 0x_B2, 0x_6A, 0x_1C, 0x_F6, 0x_E0, 0x_AE, 0x_54, 0x_ED,
		0x_BF, 0x_D4, 0x_46, 0x_49,
	];

	helper(S, BASE, -847_167_980);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_6_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_minus_6_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_09,
		0x_20, 0x_09, 0x_0A, 0x_2D, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_F3,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_A6, 0x_23, 0x_BC, 0x_8F, 0x_10, 0x_F3, 0x_65, 0x_E5, 0x_3F, 0x_F0, 0x_F2, 0x_CC, 0x_32, 0x_1C,
		0x_4A, 0x_5E, 0x_A2, 0x_F8, 0x_FA, 0x_14, 0x_79, 0x_63, 0x_19, 0x_8D, 0x_94, 0x_99, 0x_8E, 0x_01, 0x_56,
		0x_6F, 0x_2F, 0x_83, 0x_6B, 0x_BF, 0x_43, 0x_71, 0x_7C, 0x_C8, 0x_9D, 0x_7E, 0x_5F,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_80_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_minus_80_in_base_42() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_20,
		0x_20, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0D,
		0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_2D, 0x_8F, 0x_8F,
		0x_8F, 0x_E6, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_E6, 0x_FF, 0x_06, 0x_6A, 0x_D0, 0x_6B, 0x_C6, 0x_B7, 0x_F3, 0x_7F, 0x_BA, 0x_D7, 0x_94, 0x_46,
		0x_12, 0x_77, 0x_DB, 0x_26, 0x_14, 0x_68, 0x_50, 0x_60, 0x_4A, 0x_5B, 0x_40, 0x_0E, 0x_FC, 0x_AF, 0x_57,
		0x_E4, 0x_01, 0x_87, 0x_8B, 0x_1E, 0x_C1, 0x_CA, 0x_95, 0x_B0, 0x_7A, 0x_5A, 0x_38,
	];

	helper(S, BASE, -80);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_285_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_minus_285_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0A,
		0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_2D, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08,
		0x_08, 0x_08, 0x_08, 0x_67, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_DC, 0x_D4, 0x_6B, 0x_F6, 0x_3A, 0x_67, 0x_80, 0x_97, 0x_C4, 0x_DA, 0x_1B, 0x_B8, 0x_1E, 0x_38,
		0x_F7, 0x_46, 0x_6F, 0x_45, 0x_4C, 0x_A5, 0x_90, 0x_A3, 0x_40, 0x_56, 0x_85, 0x_41, 0x_9A, 0x_37, 0x_6A,
		0x_42, 0x_1C, 0x_2A, 0x_2F, 0x_D3, 0x_FB, 0x_18, 0x_75, 0x_35, 0x_86, 0x_FA, 0x_30,
	];

	helper(S, BASE, -285);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_015_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_015_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_0A,
		0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_2D, 0x_DB, 0x_1C, 0x_59, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_1C, 0x_F3, 0x_F8, 0x_A3, 0x_59, 0x_C8, 0x_AA, 0x_FC, 0x_58, 0x_4F, 0x_1F, 0x_83, 0x_E2, 0x_43,
		0x_CA, 0x_E8, 0x_DC, 0x_73, 0x_C2, 0x_2F, 0x_B7, 0x_12, 0x_52, 0x_21, 0x_8F, 0x_E6, 0x_E0, 0x_24, 0x_CE,
		0x_D7, 0x_6B, 0x_98, 0x_30, 0x_E7, 0x_BD, 0x_03, 0x_BA, 0x_B6, 0x_23, 0x_C1, 0x_5D,
	];

	helper(S, BASE, -2_015);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_89_369_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_minus_89_369_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_2D, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_E1, 0x_B8, 0x_4C, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_E1, 0x_5F, 0x_93, 0x_5D, 0x_E0, 0x_50, 0x_73, 0x_B8, 0x_71, 0x_85, 0x_A6, 0x_9E, 0x_31, 0x_38,
		0x_E9, 0x_3B, 0x_FF, 0x_DA, 0x_19, 0x_A4, 0x_16, 0x_03, 0x_5E, 0x_B3, 0x_C0, 0x_A0, 0x_4C, 0x_56, 0x_07,
		0x_C6, 0x_8F, 0x_63, 0x_92, 0x_64, 0x_46, 0x_04, 0x_35, 0x_D3, 0x_13, 0x_4A, 0x_89,
	];

	helper(S, BASE, -89_369);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_662_736_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_minus_662_736_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_09,
		0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_20,
		0x_0D, 0x_0B, 0x_0B, 0x_2D, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8,
		0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8,
		0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_65, 0x_5D, 0x_02, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_3C, 0x_E5, 0x_D9, 0x_13, 0x_98, 0x_4B, 0x_7B, 0x_65, 0x_D5, 0x_01, 0x_D3, 0x_AA, 0x_36, 0x_9A,
		0x_69, 0x_C1, 0x_6E, 0x_51, 0x_CA, 0x_8C, 0x_56, 0x_5A, 0x_EA, 0x_A4, 0x_F5, 0x_88, 0x_1A, 0x_2F, 0x_02,
		0x_3F, 0x_37, 0x_8A, 0x_B8, 0x_94, 0x_22, 0x_82, 0x_12, 0x_AD, 0x_5D, 0x_6F, 0x_3D,
	];

	helper(S, BASE, -662_736);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_8_935_281_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_minus_8_935_281_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_2D, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_D3, 0x_37, 0x_4B, 0x_AF, 0x_F3,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_DF, 0x_D3, 0x_6B, 0x_47, 0x_90, 0x_A6, 0x_C9, 0x_83, 0x_9B, 0x_B4, 0x_7D, 0x_94, 0x_B1, 0x_AF,
		0x_D7, 0x_1E, 0x_84, 0x_B6, 0x_3C, 0x_CC, 0x_45, 0x_BB, 0x_17, 0x_15, 0x_4B, 0x_7A, 0x_6C, 0x_2E, 0x_BF,
		0x_C1, 0x_8F, 0x_FE, 0x_F3, 0x_E5, 0x_DE, 0x_37, 0x_7B, 0x_5F, 0x_CD, 0x_8E, 0x_BC,
	];

	helper(S, BASE, -8_935_281);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_81_048_227_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_minus_81_048_227_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0A, 0x_2D, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96,
		0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96,
		0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_DC, 0x_08, 0x_7D, 0x_B7, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_08, 0x_29, 0x_A5, 0x_74, 0x_F8, 0x_3B, 0x_49, 0x_82, 0x_9D, 0x_81, 0x_5E, 0x_E4, 0x_B1, 0x_ED,
		0x_6D, 0x_45, 0x_F0, 0x_AF, 0x_37, 0x_21, 0x_76, 0x_52, 0x_51, 0x_65, 0x_A8, 0x_DC, 0x_14, 0x_EB, 0x_B7,
		0x_48, 0x_8A, 0x_62, 0x_DE, 0x_16, 0x_83, 0x_7A, 0x_BA, 0x_95, 0x_7D, 0x_0E, 0x_1D,
	];

	helper(S, BASE, -81_048_227);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_532_474_092_in_base_42
#[test]
fn s_has_whitespaces_and_zeros_and_minus_532_474_092_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_2D, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E,
		0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_D7, 0x_63, 0x_10, 0x_35, 0x_35, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_FB, 0x_35, 0x_63, 0x_D7, 0x_10, 0x_28, 0x_54, 0x_1E, 0x_D0, 0x_61, 0x_3D, 0x_50, 0x_8F, 0x_EA,
		0x_F6, 0x_BF, 0x_0E, 0x_DF, 0x_E5, 0x_15, 0x_02, 0x_37, 0x_D8, 0x_4A, 0x_36, 0x_04, 0x_22, 0x_3C, 0x_80,
		0x_7C, 0x_39, 0x_A9, 0x_3F, 0x_EE, 0x_F8, 0x_B3, 0x_B2, 0x_FD, 0x_A7, 0x_B6, 0x_B8,
	];

	helper(S, BASE, -532_474_092);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_1_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_minus_1_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_0D,
		0x_09, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_09,
		0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_2D, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56,
		0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_19, 0x_51, 0x_58, 0x_57, 0x_A5, 0x_A0, 0x_F0, 0x_80, 0x_1E, 0x_77, 0x_31, 0x_7B, 0x_C2, 0x_AC,
		0x_C9, 0x_2F, 0x_ED, 0x_27, 0x_D5, 0x_D6, 0x_EE, 0x_62, 0x_44, 0x_52, 0x_F5, 0x_2C, 0x_BA, 0x_96, 0x_0E,
		0x_C8, 0x_F2, 0x_D9, 0x_71, 0x_45, 0x_78, 0x_1A, 0x_CB, 0x_24, 0x_B2, 0x_74, 0x_CA, 0x_B7, 0x_8C, 0x_EC,
		0x_76, 0x_A9, 0x_8A, 0x_1B, 0x_E1, 0x_FF, 0x_41, 0x_A3, 0x_91, 0x_17, 0x_1D, 0x_6B, 0x_15, 0x_D4, 0x_50,
		0x_B1, 0x_9F, 0x_2A, 0x_E4, 0x_5A, 0x_63, 0x_34, 0x_AF, 0x_FD, 0x_F1, 0x_59, 0x_22, 0x_C6,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_56_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_minus_56_in_base_73() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_20,
		0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0A,
		0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_2D, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9,
		0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9,
		0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9,
		0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_10, 0x_2E, 0x_17, 0x_8D, 0x_D1, 0x_B5, 0x_EF, 0x_16, 0x_B8, 0x_E9, 0x_7A, 0x_41, 0x_AF, 0x_7C,
		0x_22, 0x_33, 0x_5D, 0x_CC, 0x_8F, 0x_3C, 0x_A7, 0x_32, 0x_23, 0x_F6, 0x_D3, 0x_04, 0x_75, 0x_47, 0x_3B,
		0x_55, 0x_37, 0x_DF, 0x_BA, 0x_F2, 0x_5B, 0x_98, 0x_77, 0x_9C, 0x_5C, 0x_52, 0x_BF, 0x_63, 0x_BB, 0x_89,
		0x_1F, 0x_B2, 0x_29, 0x_A2, 0x_F7, 0x_91, 0x_57, 0x_64, 0x_EC, 0x_FB, 0x_B9, 0x_1B, 0x_4E, 0x_84, 0x_C4,
		0x_9D, 0x_86, 0x_54, 0x_E3, 0x_15, 0x_D0, 0x_A8, 0x_B7, 0x_A0, 0x_95, 0x_40, 0x_E0, 0x_0F,
	];

	helper(S, BASE, -56);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_722_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_minus_722_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0D,
		0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0A,
		0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_2D, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_36, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_A4, 0x_1B, 0x_F1, 0x_47, 0x_EC, 0x_9C, 0x_B7, 0x_C1, 0x_36, 0x_49, 0x_F8, 0x_72, 0x_B6, 0x_0F,
		0x_1C, 0x_D3, 0x_3F, 0x_83, 0x_A8, 0x_C9, 0x_8B, 0x_E2, 0x_45, 0x_42, 0x_B5, 0x_38, 0x_C7, 0x_D0, 0x_94,
		0x_2F, 0x_79, 0x_5F, 0x_D9, 0x_31, 0x_0E, 0x_4E, 0x_B1, 0x_AF, 0x_59, 0x_6B, 0x_FD, 0x_8F, 0x_C2, 0x_F7,
		0x_D7, 0x_90, 0x_57, 0x_69, 0x_E0, 0x_BE, 0x_9D, 0x_E5, 0x_39, 0x_5B, 0x_66, 0x_1E, 0x_16, 0x_AC, 0x_33,
		0x_F9, 0x_EA, 0x_01, 0x_25, 0x_3A, 0x_F5, 0x_E7, 0x_80, 0x_BB, 0x_04, 0x_E3, 0x_5D, 0x_BD,
	];

	helper(S, BASE, -722);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_3_365_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_minus_3_365_in_base_73() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_09,
		0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_09,
		0x_0D, 0x_0A, 0x_2D, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73,
		0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73,
		0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_27, 0x_04,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_07, 0x_1F, 0x_10, 0x_B7, 0x_E7, 0x_D7, 0x_04, 0x_9B, 0x_E8, 0x_66, 0x_4A, 0x_18, 0x_44, 0x_5A,
		0x_38, 0x_48, 0x_B4, 0x_3B, 0x_E3, 0x_82, 0x_6E, 0x_3D, 0x_79, 0x_7D, 0x_6F, 0x_AE, 0x_B8, 0x_A8, 0x_3F,
		0x_06, 0x_7A, 0x_BC, 0x_22, 0x_13, 0x_77, 0x_84, 0x_C0, 0x_0F, 0x_11, 0x_BE, 0x_61, 0x_E9, 0x_DB, 0x_E5,
		0x_CB, 0x_27, 0x_90, 0x_92, 0x_1C, 0x_7E, 0x_01, 0x_D0, 0x_45, 0x_81, 0x_EC, 0x_33, 0x_5E, 0x_95, 0x_02,
		0x_BF, 0x_7C, 0x_5C, 0x_08, 0x_78, 0x_9E, 0x_0E, 0x_FE, 0x_93, 0x_C9, 0x_26, 0x_6A, 0x_15,
	];

	helper(S, BASE, -3_365);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_68_584_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_minus_68_584_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0A,
		0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_2D, 0x_6B, 0x_6B,
		0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B,
		0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_9D,
		0x_EB, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_AB, 0x_15, 0x_98, 0x_36, 0x_12, 0x_DC, 0x_3D, 0x_2A, 0x_DB, 0x_1E, 0x_7A, 0x_9D, 0x_5F, 0x_52,
		0x_1D, 0x_8C, 0x_58, 0x_11, 0x_96, 0x_C3, 0x_90, 0x_43, 0x_BC, 0x_3B, 0x_F6, 0x_4F, 0x_92, 0x_FC, 0x_E8,
		0x_3C, 0x_E1, 0x_39, 0x_46, 0x_F8, 0x_D1, 0x_EE, 0x_93, 0x_28, 0x_70, 0x_D9, 0x_B7, 0x_53, 0x_32, 0x_9E,
		0x_A1, 0x_16, 0x_B2, 0x_A6, 0x_1B, 0x_5C, 0x_41, 0x_4A, 0x_78, 0x_F2, 0x_66, 0x_AA, 0x_1C, 0x_E4, 0x_F5,
		0x_99, 0x_B4, 0x_7D, 0x_EB, 0x_D6, 0x_A3, 0x_2E, 0x_C8, 0x_87, 0x_40, 0x_86, 0x_D7, 0x_FD,
	];

	helper(S, BASE, -68_584);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_986_592_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_minus_986_592_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0A,
		0x_09, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_2D, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A,
		0x_9A, 0x_9A, 0x_9A, 0x_D4, 0x_DD, 0x_D9, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_89, 0x_D4, 0x_FC, 0x_1D, 0x_4A, 0x_AA, 0x_B9, 0x_06, 0x_D9, 0x_32, 0x_76, 0x_22, 0x_D7, 0x_E0,
		0x_72, 0x_15, 0x_4E, 0x_BE, 0x_A1, 0x_FA, 0x_C0, 0x_0F, 0x_13, 0x_CA, 0x_F1, 0x_AE, 0x_EC, 0x_9F, 0x_9D,
		0x_82, 0x_1B, 0x_B3, 0x_93, 0x_2F, 0x_08, 0x_FE, 0x_5F, 0x_40, 0x_DD, 0x_2A, 0x_62, 0x_D1, 0x_A5, 0x_A8,
		0x_65, 0x_75, 0x_1E, 0x_A0, 0x_41, 0x_DA, 0x_6D, 0x_D8, 0x_AB, 0x_AC, 0x_A4, 0x_6F, 0x_E5, 0x_8A, 0x_B2,
		0x_B1, 0x_9C, 0x_49, 0x_C4, 0x_26, 0x_71, 0x_B5, 0x_87, 0x_57, 0x_5B, 0x_11, 0x_C7, 0x_ED,
	];

	helper(S, BASE, -986_592);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_1_573_323_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_minus_1_573_323_in_base_73() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_2D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_BA, 0x_F2, 0x_6B, 0x_A2,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_E9, 0x_14, 0x_F2, 0x_BA, 0x_E3, 0x_84, 0x_9D, 0x_5C, 0x_03, 0x_E4, 0x_DC, 0x_ED, 0x_35, 0x_B1,
		0x_41, 0x_CD, 0x_6B, 0x_4D, 0x_A0, 0x_94, 0x_7B, 0x_8B, 0x_76, 0x_F5, 0x_B9, 0x_BF, 0x_A2, 0x_4B, 0x_47,
		0x_05, 0x_8F, 0x_A4, 0x_96, 0x_23, 0x_C4, 0x_7D, 0x_75, 0x_0E, 0x_59, 0x_CC, 0x_65, 0x_04, 0x_6E, 0x_AA,
		0x_2F, 0x_01, 0x_97, 0x_89, 0x_7E, 0x_0F, 0x_B6, 0x_B8, 0x_61, 0x_FD, 0x_E0, 0x_2A, 0x_45, 0x_8E, 0x_F7,
		0x_79, 0x_74, 0x_5B, 0x_58, 0x_DD, 0x_57, 0x_17, 0x_90, 0x_A8, 0x_EB, 0x_27, 0x_BC, 0x_D9,
	];

	helper(S, BASE, -1_573_323);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_22_724_733_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_minus_22_724_733_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_2D, 0x_A3, 0x_A3, 0x_A3, 0x_5C, 0x_D4, 0x_BC,
		0x_51,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_CC, 0x_27, 0x_7A, 0x_02, 0x_6C, 0x_9B, 0x_CA, 0x_65, 0x_6F, 0x_AF, 0x_5E, 0x_AD, 0x_BB, 0x_1C,
		0x_AB, 0x_34, 0x_47, 0x_73, 0x_82, 0x_79, 0x_9C, 0x_D9, 0x_F8, 0x_7E, 0x_BC, 0x_38, 0x_D1, 0x_FE, 0x_C5,
		0x_D4, 0x_E8, 0x_43, 0x_97, 0x_A6, 0x_44, 0x_D8, 0x_88, 0x_2C, 0x_26, 0x_93, 0x_DA, 0x_E1, 0x_DB, 0x_F0,
		0x_31, 0x_BE, 0x_E9, 0x_DE, 0x_BD, 0x_48, 0x_71, 0x_51, 0x_4F, 0x_9A, 0x_FD, 0x_35, 0x_7B, 0x_5C, 0x_8B,
		0x_86, 0x_0F, 0x_6E, 0x_F4, 0x_0E, 0x_F2, 0x_B1, 0x_E2, 0x_2E, 0x_A9, 0x_72, 0x_70, 0x_FA,
	];

	helper(S, BASE, -22_724_733);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_735_941_714_in_base_73
#[test]
fn s_has_whitespaces_and_zeros_and_minus_735_941_714_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0A,
		0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0B,
		0x_0C, 0x_0B, 0x_0B, 0x_2D, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_3F, 0x_44, 0x_BB, 0x_8C, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_0F, 0x_CF, 0x_57, 0x_78, 0x_24, 0x_9F, 0x_22, 0x_CD, 0x_7F, 0x_69, 0x_DA, 0x_53, 0x_FF, 0x_01,
		0x_BF, 0x_C6, 0x_51, 0x_9B, 0x_70, 0x_8C, 0x_B9, 0x_E5, 0x_EE, 0x_18, 0x_3F, 0x_14, 0x_C0, 0x_65, 0x_37,
		0x_80, 0x_BD, 0x_71, 0x_28, 0x_98, 0x_F8, 0x_4B, 0x_6B, 0x_11, 0x_B4, 0x_F5, 0x_8E, 0x_81, 0x_23, 0x_2E,
		0x_E4, 0x_3D, 0x_8D, 0x_35, 0x_6F, 0x_91, 0x_D1, 0x_62, 0x_CB, 0x_66, 0x_4A, 0x_E3, 0x_75, 0x_BB, 0x_EB,
		0x_6D, 0x_59, 0x_02, 0x_C5, 0x_CE, 0x_ED, 0x_44, 0x_B8, 0x_36, 0x_89, 0x_41, 0x_07, 0x_EF,
	];

	helper(S, BASE, -735_941_714);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_7_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_minus_7_in_base_113() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_09,
		0x_09, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0A,
		0x_0C, 0x_2D, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE,
		0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE,
		0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_D8, 0x_AB, 0x_3B, 0x_38, 0x_61, 0x_31, 0x_8C, 0x_42, 0x_9C, 0x_49, 0x_B0, 0x_16, 0x_9A, 0x_E0,
		0x_73, 0x_4E, 0x_A0, 0x_2F, 0x_B2, 0x_66, 0x_D0, 0x_0E, 0x_92, 0x_FE, 0x_48, 0x_67, 0x_55, 0x_3A, 0x_D4,
		0x_B6, 0x_1A, 0x_AA, 0x_DF, 0x_2E, 0x_79, 0x_C1, 0x_41, 0x_EC, 0x_FF, 0x_7A, 0x_33, 0x_52, 0x_77, 0x_11,
		0x_A4, 0x_BE, 0x_69, 0x_DB, 0x_1F, 0x_1C, 0x_08, 0x_46, 0x_45, 0x_54, 0x_70, 0x_88, 0x_82, 0x_AD, 0x_B8,
		0x_12, 0x_59, 0x_A6, 0x_4D, 0x_BA, 0x_8D, 0x_2C, 0x_DE, 0x_14, 0x_F5, 0x_7B, 0x_87, 0x_8B, 0x_24, 0x_E3,
		0x_9D, 0x_1B, 0x_F8, 0x_EA, 0x_5A, 0x_F2, 0x_56, 0x_C0, 0x_F1, 0x_86, 0x_03, 0x_68, 0x_44, 0x_CB, 0x_A7,
		0x_76, 0x_DA, 0x_F7, 0x_98, 0x_D6, 0x_02, 0x_97, 0x_07, 0x_13, 0x_F3, 0x_D7, 0x_5E, 0x_95, 0x_C2, 0x_21,
		0x_A2, 0x_22, 0x_7E, 0x_81, 0x_F0, 0x_01, 0x_C4, 0x_63,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_23_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_minus_23_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0B,
		0x_20, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_2D, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_4A, 0x_BB, 0x_55, 0x_78, 0x_90, 0x_39, 0x_C5, 0x_AE, 0x_4E, 0x_E2, 0x_53, 0x_52, 0x_E8, 0x_EC,
		0x_F9, 0x_64, 0x_91, 0x_5C, 0x_D4, 0x_CD, 0x_C2, 0x_2C, 0x_59, 0x_4F, 0x_22, 0x_A0, 0x_44, 0x_76, 0x_18,
		0x_C6, 0x_38, 0x_E5, 0x_45, 0x_AA, 0x_98, 0x_21, 0x_46, 0x_7C, 0x_25, 0x_3A, 0x_B2, 0x_26, 0x_DA, 0x_3E,
		0x_B6, 0x_9B, 0x_17, 0x_D7, 0x_E9, 0x_05, 0x_33, 0x_24, 0x_71, 0x_DB, 0x_7E, 0x_1B, 0x_8F, 0x_57, 0x_80,
		0x_16, 0x_E4, 0x_93, 0x_6D, 0x_68, 0x_F2, 0x_C3, 0x_9D, 0x_5F, 0x_95, 0x_70, 0x_69, 0x_94, 0x_CA, 0x_49,
		0x_19, 0x_BD, 0x_56, 0x_42, 0x_A6, 0x_87, 0x_F1, 0x_85, 0x_2E, 0x_C8, 0x_36, 0x_AD, 0x_50, 0x_11, 0x_9A,
		0x_31, 0x_FD, 0x_F3, 0x_A7, 0x_1A, 0x_C7, 0x_EF, 0x_FF, 0x_67, 0x_B5, 0x_7F, 0x_51, 0x_29, 0x_92, 0x_A3,
		0x_7B, 0x_79, 0x_65, 0x_8B, 0x_CC, 0x_AF, 0x_10, 0x_FC,
	];

	helper(S, BASE, -23);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_611_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_minus_611_in_base_113() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0C,
		0x_20, 0x_2D, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50,
		0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50,
		0x_50, 0x_50, 0x_50, 0x_50, 0x_4F, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_A5, 0x_95, 0x_88, 0x_04, 0x_4F, 0x_8B, 0x_A6, 0x_80, 0x_38, 0x_CA, 0x_8F, 0x_8A, 0x_4E, 0x_48,
		0x_B8, 0x_27, 0x_A7, 0x_74, 0x_56, 0x_A2, 0x_10, 0x_08, 0x_3F, 0x_73, 0x_2F, 0x_42, 0x_D3, 0x_F0, 0x_83,
		0x_F9, 0x_7F, 0x_AF, 0x_4B, 0x_EA, 0x_68, 0x_66, 0x_CF, 0x_63, 0x_16, 0x_A4, 0x_58, 0x_2C, 0x_8E, 0x_FA,
		0x_34, 0x_C6, 0x_22, 0x_3E, 0x_D2, 0x_02, 0x_ED, 0x_B4, 0x_F2, 0x_5A, 0x_79, 0x_7C, 0x_CD, 0x_82, 0x_E7,
		0x_C1, 0x_DA, 0x_71, 0x_EF, 0x_BE, 0x_E0, 0x_18, 0x_FE, 0x_3D, 0x_1F, 0x_D8, 0x_C2, 0x_7E, 0x_25, 0x_B7,
		0x_CB, 0x_7D, 0x_9F, 0x_84, 0x_B2, 0x_53, 0x_EE, 0x_93, 0x_DF, 0x_06, 0x_03, 0x_E1, 0x_97, 0x_A8, 0x_D0,
		0x_37, 0x_19, 0x_07, 0x_29, 0x_DB, 0x_31, 0x_5C, 0x_BC, 0x_E2, 0x_F6, 0x_A3, 0x_6F, 0x_1B, 0x_E8, 0x_D1,
		0x_FD, 0x_E9, 0x_D6, 0x_CC, 0x_26, 0x_B0, 0x_5F, 0x_35,
	];

	helper(S, BASE, -611);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_8_794_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_minus_8_794_in_base_113() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0A,
		0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_0D,
		0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_2D, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_A5, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_3E, 0x_4F, 0x_89, 0x_DF, 0x_6D, 0x_8E, 0x_90, 0x_6C, 0x_F4, 0x_AB, 0x_E4, 0x_4D, 0x_50, 0x_E1,
		0x_D9, 0x_AD, 0x_87, 0x_33, 0x_CF, 0x_06, 0x_60, 0x_C2, 0x_41, 0x_DA, 0x_13, 0x_A4, 0x_65, 0x_D8, 0x_E2,
		0x_98, 0x_EC, 0x_25, 0x_14, 0x_30, 0x_63, 0x_F9, 0x_96, 0x_46, 0x_F8, 0x_97, 0x_88, 0x_C4, 0x_5A, 0x_4C,
		0x_7D, 0x_7B, 0x_FC, 0x_68, 0x_CE, 0x_4A, 0x_72, 0x_76, 0x_70, 0x_82, 0x_36, 0x_A3, 0x_D7, 0x_1A, 0x_02,
		0x_39, 0x_FA, 0x_1B, 0x_A9, 0x_7A, 0x_2A, 0x_5F, 0x_BD, 0x_AF, 0x_E6, 0x_D1, 0x_3A, 0x_86, 0x_94, 0x_67,
		0x_15, 0x_80, 0x_A5, 0x_B5, 0x_93, 0x_48, 0x_9D, 0x_AC, 0x_BB, 0x_EB, 0x_1C, 0x_3B, 0x_FE, 0x_59, 0x_37,
		0x_54, 0x_2F, 0x_F2, 0x_35, 0x_26, 0x_F3, 0x_44, 0x_A1, 0x_49, 0x_CA, 0x_E9, 0x_A6, 0x_74, 0x_DB, 0x_F7,
		0x_92, 0x_55, 0x_23, 0x_1E, 0x_9A, 0x_B0, 0x_E0, 0x_58,
	];

	helper(S, BASE, -8_794);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_60_709_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_minus_60_709_in_base_113() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_2D, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4,
		0x_D4, 0x_22, 0x_F1, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_14, 0x_40, 0x_D6, 0x_22, 0x_DB, 0x_27, 0x_FB, 0x_23, 0x_19, 0x_4B, 0x_C0, 0x_CD, 0x_9D, 0x_93,
		0x_3E, 0x_A5, 0x_9C, 0x_94, 0x_07, 0x_DC, 0x_1E, 0x_F4, 0x_AA, 0x_62, 0x_34, 0x_7A, 0x_80, 0x_AD, 0x_FA,
		0x_37, 0x_08, 0x_FC, 0x_EC, 0x_AB, 0x_B3, 0x_C8, 0x_72, 0x_02, 0x_8E, 0x_47, 0x_FE, 0x_63, 0x_BB, 0x_9E,
		0x_84, 0x_C1, 0x_33, 0x_DF, 0x_D0, 0x_87, 0x_A3, 0x_44, 0x_3C, 0x_0F, 0x_A9, 0x_65, 0x_C6, 0x_68, 0x_A6,
		0x_BD, 0x_D9, 0x_A7, 0x_3F, 0x_D2, 0x_5B, 0x_AE, 0x_04, 0x_BA, 0x_98, 0x_7E, 0x_58, 0x_56, 0x_59, 0x_96,
		0x_E0, 0x_39, 0x_E2, 0x_91, 0x_F5, 0x_CA, 0x_29, 0x_49, 0x_AF, 0x_5E, 0x_F1, 0x_B4, 0x_D7, 0x_6A, 0x_8D,
		0x_1C, 0x_86, 0x_B5, 0x_13, 0x_76, 0x_8A, 0x_73, 0x_E7, 0x_66, 0x_83, 0x_85, 0x_4A, 0x_F8, 0x_A8, 0x_B2,
		0x_01, 0x_F7, 0x_2A, 0x_1B, 0x_FF, 0x_A2, 0x_42, 0x_C9,
	];

	helper(S, BASE, -60_709);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_700_474_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_minus_700_474_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0A,
		0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_09,
		0x_0B, 0x_2D, 0x_8D, 0x_8D, 0x_8D, 0x_A3, 0x_AD, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_03, 0x_60, 0x_6B, 0x_C6, 0x_1F, 0x_9E, 0x_7A, 0x_14, 0x_53, 0x_6E, 0x_D5, 0x_13, 0x_E2, 0x_EE,
		0x_8A, 0x_D8, 0x_D7, 0x_71, 0x_BA, 0x_82, 0x_27, 0x_2E, 0x_08, 0x_CC, 0x_5A, 0x_79, 0x_12, 0x_32, 0x_04,
		0x_87, 0x_ED, 0x_35, 0x_7C, 0x_F7, 0x_50, 0x_4F, 0x_A9, 0x_73, 0x_6C, 0x_2F, 0x_F8, 0x_66, 0x_21, 0x_83,
		0x_9F, 0x_CD, 0x_E9, 0x_11, 0x_D6, 0x_37, 0x_6A, 0x_5C, 0x_CE, 0x_A3, 0x_85, 0x_DA, 0x_94, 0x_A0, 0x_E6,
		0x_A8, 0x_05, 0x_18, 0x_A1, 0x_29, 0x_A7, 0x_98, 0x_F5, 0x_75, 0x_17, 0x_23, 0x_C4, 0x_9C, 0x_E7, 0x_30,
		0x_88, 0x_CF, 0x_62, 0x_02, 0x_4B, 0x_A5, 0x_47, 0x_B9, 0x_B0, 0x_9D, 0x_F2, 0x_93, 0x_5E, 0x_4A, 0x_4D,
		0x_28, 0x_40, 0x_90, 0x_E3, 0x_FA, 0x_42, 0x_AD, 0x_81, 0x_DC, 0x_B6, 0x_5D, 0x_3F, 0x_C8, 0x_FE, 0x_D0,
		0x_B8, 0x_B7, 0x_64, 0x_F4, 0x_39, 0x_A2, 0x_51, 0x_06,
	];

	helper(S, BASE, -700_474);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_8_604_174_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_minus_8_604_174_in_base_113() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0A,
		0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0B,
		0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_2D, 0x_92, 0x_92, 0x_FD, 0x_3D, 0x_18, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_22, 0x_E5, 0x_CE, 0x_FC, 0x_FD, 0x_2A, 0x_EE, 0x_5C, 0x_E4, 0x_32, 0x_6A, 0x_C4, 0x_F5, 0x_19,
		0x_2C, 0x_8D, 0x_84, 0x_43, 0x_29, 0x_AA, 0x_A1, 0x_7D, 0x_54, 0x_B7, 0x_AD, 0x_A6, 0x_97, 0x_C8, 0x_C1,
		0x_F0, 0x_BC, 0x_05, 0x_06, 0x_85, 0x_41, 0x_DE, 0x_1E, 0x_7B, 0x_60, 0x_8B, 0x_B3, 0x_40, 0x_2E, 0x_E3,
		0x_BD, 0x_26, 0x_98, 0x_CB, 0x_C9, 0x_38, 0x_D0, 0x_75, 0x_12, 0x_15, 0x_F3, 0x_D9, 0x_70, 0x_80, 0x_25,
		0x_57, 0x_BB, 0x_1C, 0x_69, 0x_AF, 0x_6B, 0x_E9, 0x_53, 0x_96, 0x_91, 0x_08, 0x_49, 0x_D3, 0x_23, 0x_4E,
		0x_17, 0x_C5, 0x_11, 0x_DF, 0x_61, 0x_A2, 0x_33, 0x_B4, 0x_31, 0x_35, 0x_8E, 0x_BA, 0x_0F, 0x_44, 0x_F9,
		0x_5F, 0x_A7, 0x_63, 0x_34, 0x_18, 0x_74, 0x_65, 0x_D4, 0x_30, 0x_27, 0x_CC, 0x_D1, 0x_1F, 0x_5E, 0x_2F,
		0x_79, 0x_48, 0x_88, 0x_3D, 0x_3B, 0x_82, 0x_E2, 0x_68,
	];

	helper(S, BASE, -8_604_174);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_49_581_212_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_minus_49_581_212_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_20, 0x_20, 0x_2D, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_91,
		0x_B2, 0x_93, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_2F, 0x_C4, 0x_83, 0x_A8, 0x_2E, 0x_45, 0x_C3, 0x_1D, 0x_69, 0x_98, 0x_36, 0x_67, 0x_AB, 0x_FE,
		0x_8C, 0x_68, 0x_E8, 0x_7E, 0x_26, 0x_74, 0x_D4, 0x_41, 0x_24, 0x_56, 0x_4E, 0x_EA, 0x_D9, 0x_1A, 0x_5A,
		0x_7F, 0x_D8, 0x_CE, 0x_58, 0x_91, 0x_1C, 0x_89, 0x_A4, 0x_D6, 0x_D0, 0x_B2, 0x_88, 0x_BE, 0x_04, 0x_8F,
		0x_DE, 0x_4A, 0x_94, 0x_AD, 0x_42, 0x_33, 0x_86, 0x_DA, 0x_59, 0x_21, 0x_B0, 0x_EF, 0x_23, 0x_9C, 0x_75,
		0x_E6, 0x_AA, 0x_65, 0x_32, 0x_5F, 0x_25, 0x_3C, 0x_B6, 0x_C8, 0x_16, 0x_B7, 0x_03, 0x_8D, 0x_57, 0x_39,
		0x_CB, 0x_17, 0x_7A, 0x_B3, 0x_3D, 0x_B5, 0x_F8, 0x_40, 0x_D7, 0x_63, 0x_3F, 0x_F0, 0x_DC, 0x_4D, 0x_78,
		0x_08, 0x_A9, 0x_22, 0x_4F, 0x_FC, 0x_15, 0x_02, 0x_51, 0x_BD, 0x_13, 0x_46, 0x_29, 0x_3B, 0x_62, 0x_D5,
		0x_93, 0x_EC, 0x_FA, 0x_B4, 0x_CC, 0x_B8, 0x_5B, 0x_82,
	];

	helper(S, BASE, -49_581_212);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_305_130_001_in_base_113
#[test]
fn s_has_whitespaces_and_zeros_and_minus_305_130_001_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_2D, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD,
		0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_1E, 0x_5B, 0x_75, 0x_DD, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_FD, 0x_1E, 0x_B6, 0x_CA, 0x_D5, 0x_02, 0x_CB, 0x_D0, 0x_CF, 0x_D6, 0x_93, 0x_12, 0x_27, 0x_7F, 0x_CE,
		0x_01, 0x_7E, 0x_DD, 0x_FB, 0x_CC, 0x_E0, 0x_1B, 0x_EB, 0x_CD, 0x_72, 0x_A1, 0x_A2, 0x_15, 0x_E7, 0x_C1,
		0x_D9, 0x_6C, 0x_8C, 0x_10, 0x_63, 0x_9B, 0x_C3, 0x_80, 0x_73, 0x_26, 0x_BA, 0x_AF, 0x_E5, 0x_6F, 0x_22,
		0x_F0, 0x_E8, 0x_0F, 0x_89, 0x_4B, 0x_EC, 0x_7C, 0x_F5, 0x_75, 0x_54, 0x_68, 0x_9E, 0x_BB, 0x_92, 0x_1A,
		0x_30, 0x_37, 0x_29, 0x_BF, 0x_21, 0x_62, 0x_B3, 0x_25, 0x_13, 0x_58, 0x_F1, 0x_D3, 0x_6D, 0x_76, 0x_36,
		0x_23, 0x_F2, 0x_B0, 0x_4A, 0x_AC, 0x_A0, 0x_C4, 0x_51, 0x_04, 0x_56, 0x_83, 0x_28, 0x_66, 0x_F7, 0x_88,
		0x_B5, 0x_14, 0x_05, 0x_43, 0x_4C, 0x_F4, 0x_48, 0x_FE, 0x_5B, 0x_78, 0x_86, 0x_EE, 0x_35, 0x_E4, 0x_82,
		0x_A6, 0x_38, 0x_1D, 0x_79, 0x_9D, 0x_BD, 0x_D7, 0x_95,
	];

	helper(S, BASE, -305_130_001);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_9_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_minus_9_in_base_193() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0A,
		0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_2D, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_4E, 0x_E8, 0x_F9, 0x_03, 0x_41, 0x_24, 0x_F1, 0x_30, 0x_6E, 0x_91, 0x_AC, 0x_B6, 0x_1A, 0x_CF,
		0x_9C, 0x_FE, 0x_3D, 0x_E9, 0x_49, 0x_2A, 0x_17, 0x_8F, 0x_42, 0x_1E, 0x_9B, 0x_B8, 0x_3B, 0x_3F, 0x_BD,
		0x_47, 0x_5F, 0x_2C, 0x_6C, 0x_0F, 0x_05, 0x_0E, 0x_A1, 0x_39, 0x_8B, 0x_F2, 0x_EC, 0x_52, 0x_02, 0x_28,
		0x_99, 0x_A7, 0x_BF, 0x_40, 0x_74, 0x_EA, 0x_B4, 0x_F8, 0x_70, 0x_5B, 0x_6B, 0x_34, 0x_01, 0x_DF, 0x_C0,
		0x_64, 0x_D3, 0x_D2, 0x_E6, 0x_35, 0x_E5, 0x_92, 0x_F5, 0x_1D, 0x_36, 0x_4F, 0x_E4, 0x_21, 0x_A5, 0x_4D,
		0x_B5, 0x_89, 0x_63, 0x_3C, 0x_DC, 0x_C4, 0x_3E, 0x_31, 0x_FD, 0x_56, 0x_9E, 0x_5D, 0x_D8, 0x_6F, 0x_37,
		0x_F4, 0x_76, 0x_69, 0x_CC, 0x_D4, 0x_AE, 0x_D0, 0x_A0, 0x_84, 0x_90, 0x_59, 0x_A2, 0x_81, 0x_C1, 0x_27,
		0x_E7, 0x_06, 0x_98, 0x_AA, 0x_2E, 0x_7E, 0x_7F, 0x_32, 0x_9F, 0x_DB, 0x_E2, 0x_F3, 0x_B1, 0x_14, 0x_25,
		0x_EE, 0x_33, 0x_DA, 0x_E3, 0x_EB, 0x_CB, 0x_73, 0x_F7, 0x_D6, 0x_CD, 0x_5A, 0x_D9, 0x_6D, 0x_12, 0x_9D,
		0x_FF, 0x_BA, 0x_BB, 0x_94, 0x_96, 0x_C2, 0x_EF, 0x_BE, 0x_D7, 0x_66, 0x_55, 0x_C5, 0x_1F, 0x_51, 0x_18,
		0x_85, 0x_75, 0x_13, 0x_F0, 0x_23, 0x_BC, 0x_68, 0x_7A, 0x_CE, 0x_FA, 0x_7B, 0x_72, 0x_61, 0x_B0, 0x_58,
		0x_AF, 0x_4B, 0x_C8, 0x_A9, 0x_8D, 0x_43, 0x_88, 0x_CA, 0x_67, 0x_80, 0x_77, 0x_4C, 0x_5E, 0x_71, 0x_10,
		0x_1C, 0x_E0, 0x_7D, 0x_19, 0x_95, 0x_ED, 0x_15, 0x_2F, 0x_8C, 0x_7C, 0x_11, 0x_1B, 0x_A8,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_82_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_minus_82_in_base_193() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0B,
		0x_2D, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B,
		0x_5B, 0x_5B, 0x_5B, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_9C, 0x_69, 0x_63, 0x_76, 0x_15, 0x_DF, 0x_F4, 0x_1E, 0x_D4, 0x_A2, 0x_88, 0x_85, 0x_B6, 0x_3B,
		0x_B3, 0x_1C, 0x_E1, 0x_3C, 0x_FE, 0x_06, 0x_F2, 0x_4F, 0x_73, 0x_AD, 0x_FF, 0x_81, 0x_A5, 0x_0E, 0x_F0,
		0x_17, 0x_14, 0x_D5, 0x_5E, 0x_12, 0x_B4, 0x_3D, 0x_DE, 0x_6F, 0x_E3, 0x_27, 0x_0F, 0x_F5, 0x_30, 0x_E6,
		0x_8C, 0x_23, 0x_45, 0x_8E, 0x_47, 0x_1B, 0x_08, 0x_98, 0x_D1, 0x_8A, 0x_32, 0x_B5, 0x_89, 0x_93, 0x_C3,
		0x_CF, 0x_58, 0x_75, 0x_E8, 0x_9D, 0x_71, 0x_BF, 0x_CC, 0x_05, 0x_2C, 0x_54, 0x_19, 0x_1F, 0x_74, 0x_90,
		0x_18, 0x_BC, 0x_49, 0x_A4, 0x_ED, 0x_8B, 0x_68, 0x_96, 0x_7C, 0x_42, 0x_CE, 0x_59, 0x_6E, 0x_5A, 0x_5C,
		0x_80, 0x_62, 0x_92, 0x_2F, 0x_DC, 0x_DD, 0x_D6, 0x_BE, 0x_38, 0x_7D, 0x_94, 0x_39, 0x_D9, 0x_5D, 0x_65,
		0x_25, 0x_CA, 0x_1D, 0x_6A, 0x_B8, 0x_F1, 0x_FD, 0x_70, 0x_C5, 0x_EC, 0x_01, 0x_DB, 0x_4A, 0x_1A, 0x_A9,
		0x_D0, 0x_78, 0x_82, 0x_A7, 0x_10, 0x_86, 0x_AF, 0x_FC, 0x_37, 0x_24, 0x_EE, 0x_C7, 0x_B0, 0x_AA, 0x_E2,
		0x_66, 0x_A0, 0x_A3, 0x_7B, 0x_46, 0x_22, 0x_11, 0x_9F, 0x_A8, 0x_02, 0x_33, 0x_AC, 0x_C2, 0x_B2, 0x_57,
		0x_3A, 0x_40, 0x_3F, 0x_B1, 0x_4D, 0x_F8, 0x_D3, 0x_7E, 0x_AE, 0x_79, 0x_BD, 0x_43, 0x_21, 0x_F3, 0x_61,
		0x_9A, 0x_B9, 0x_97, 0x_C4, 0x_EA, 0x_99, 0x_35, 0x_91, 0x_EB, 0x_67, 0x_29, 0x_50, 0x_3E, 0x_55, 0x_83,
		0x_DA, 0x_E7, 0x_4B, 0x_2E, 0x_E9, 0x_4E, 0x_E4, 0x_D2, 0x_C0, 0x_BB, 0x_16, 0x_A1, 0x_7F,
	];

	helper(S, BASE, -82);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_713_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_minus_713_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0D,
		0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_2D, 0x_D6, 0x_D6,
		0x_D6, 0x_D6, 0x_EE, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_F9, 0x_F5, 0x_EE, 0x_05, 0x_F0, 0x_D0, 0x_86, 0x_BE, 0x_D5, 0x_8E, 0x_68, 0x_22, 0x_18, 0x_47,
		0x_6D, 0x_B9, 0x_E6, 0x_03, 0x_35, 0x_07, 0x_DB, 0x_FE, 0x_64, 0x_4A, 0x_48, 0x_10, 0x_E1, 0x_6B, 0x_A1,
		0x_11, 0x_95, 0x_40, 0x_9E, 0x_0F, 0x_BF, 0x_24, 0x_D3, 0x_A4, 0x_85, 0x_79, 0x_A2, 0x_9F, 0x_FC, 0x_66,
		0x_F3, 0x_77, 0x_81, 0x_E8, 0x_27, 0x_AA, 0x_B4, 0x_57, 0x_8F, 0x_F6, 0x_17, 0x_3D, 0x_83, 0x_51, 0x_31,
		0x_4C, 0x_A5, 0x_C9, 0x_4F, 0x_FB, 0x_41, 0x_3F, 0x_58, 0x_D7, 0x_C2, 0x_82, 0x_7B, 0x_AB, 0x_1A, 0x_FF,
		0x_5E, 0x_D2, 0x_12, 0x_C0, 0x_B2, 0x_1C, 0x_F8, 0x_EF, 0x_36, 0x_62, 0x_3B, 0x_49, 0x_52, 0x_BD, 0x_3C,
		0x_7C, 0x_9A, 0x_8B, 0x_53, 0x_94, 0x_21, 0x_A6, 0x_69, 0x_2E, 0x_33, 0x_2A, 0x_19, 0x_3A, 0x_78, 0x_67,
		0x_76, 0x_B0, 0x_B8, 0x_EC, 0x_29, 0x_C8, 0x_87, 0x_1B, 0x_99, 0x_04, 0x_02, 0x_1E, 0x_F2, 0x_AF, 0x_6A,
		0x_CA, 0x_9C, 0x_E5, 0x_F1, 0x_50, 0x_38, 0x_FD, 0x_15, 0x_AC, 0x_91, 0x_F7, 0x_FA, 0x_34, 0x_CD, 0x_B7,
		0x_D4, 0x_C5, 0x_55, 0x_89, 0x_90, 0x_B3, 0x_8C, 0x_ED, 0x_6E, 0x_98, 0x_EB, 0x_E7, 0x_97, 0x_08, 0x_4B,
		0x_AE, 0x_71, 0x_70, 0x_32, 0x_E3, 0x_B6, 0x_3E, 0x_72, 0x_BA, 0x_CF, 0x_B5, 0x_9B, 0x_B1, 0x_A8, 0x_23,
		0x_E9, 0x_E4, 0x_DA, 0x_C1, 0x_65, 0x_30, 0x_A0, 0x_16, 0x_7A, 0x_DC, 0x_5F, 0x_5C, 0x_63, 0x_1F, 0x_7F,
		0x_13, 0x_EA, 0x_C7, 0x_8D, 0x_92, 0x_CE, 0x_0E, 0x_DE, 0x_F4, 0x_45, 0x_9D, 0x_D9, 0x_56,
	];

	helper(S, BASE, -713);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_9_851_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_minus_9_851_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_09,
		0x_2D, 0x_FD, 0x_FD, 0x_FD, 0x_EB, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_FD, 0x_9A, 0x_43, 0x_C3, 0x_93, 0x_07, 0x_C6, 0x_3A, 0x_53, 0x_01, 0x_73, 0x_8B, 0x_5C, 0x_D6, 0x_65,
		0x_33, 0x_AC, 0x_D5, 0x_2E, 0x_D7, 0x_E4, 0x_61, 0x_34, 0x_AB, 0x_A1, 0x_45, 0x_37, 0x_4C, 0x_76, 0x_32,
		0x_19, 0x_67, 0x_D2, 0x_2C, 0x_75, 0x_1A, 0x_89, 0x_6D, 0x_1F, 0x_9F, 0x_C4, 0x_60, 0x_36, 0x_B8, 0x_4A,
		0x_26, 0x_F2, 0x_66, 0x_82, 0x_D9, 0x_F0, 0x_EB, 0x_27, 0x_13, 0x_C1, 0x_F6, 0x_F4, 0x_74, 0x_B7, 0x_91,
		0x_C0, 0x_B4, 0x_B1, 0x_31, 0x_9E, 0x_F8, 0x_90, 0x_7B, 0x_16, 0x_28, 0x_7A, 0x_52, 0x_B9, 0x_99, 0x_AA,
		0x_D8, 0x_D1, 0x_E8, 0x_9B, 0x_1D, 0x_BD, 0x_BE, 0x_F5, 0x_72, 0x_80, 0x_17, 0x_94, 0x_4F, 0x_70, 0x_FA,
		0x_44, 0x_05, 0x_5D, 0x_AF, 0x_FF, 0x_A5, 0x_81, 0x_46, 0x_9C, 0x_54, 0x_02, 0x_EC, 0x_56, 0x_95, 0x_EE,
		0x_39, 0x_AD, 0x_CF, 0x_0E, 0x_8F, 0x_03, 0x_6B, 0x_BA, 0x_BC, 0x_7F, 0x_7D, 0x_86, 0x_DF, 0x_E7, 0x_C5,
		0x_A7, 0x_64, 0x_79, 0x_22, 0x_C8, 0x_B0, 0x_CB, 0x_C2, 0x_4E, 0x_40, 0x_50, 0x_A3, 0x_1C, 0x_DB, 0x_84,
		0x_FB, 0x_21, 0x_6A, 0x_5E, 0x_5B, 0x_04, 0x_7E, 0x_E9, 0x_CC, 0x_D3, 0x_B2, 0x_15, 0x_8A, 0x_E5, 0x_78,
		0x_35, 0x_51, 0x_CD, 0x_F3, 0x_E2, 0x_3D, 0x_9D, 0x_C7, 0x_58, 0x_F7, 0x_49, 0x_DC, 0x_83, 0x_47, 0x_4D,
		0x_38, 0x_8E, 0x_ED, 0x_96, 0x_CA, 0x_1B, 0x_55, 0x_DE, 0x_FC, 0x_42, 0x_D0, 0x_3F, 0x_11, 0x_AE, 0x_B5,
		0x_B6, 0x_6E, 0x_30, 0x_0F, 0x_F9, 0x_25, 0x_A2, 0x_DD, 0x_BB, 0x_3E, 0x_06, 0x_D4, 0x_68,
	];

	helper(S, BASE, -9_851);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_28_163_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_minus_28_163_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_2D, 0x_44, 0x_44,
		0x_44, 0x_EA, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_63, 0x_AE, 0x_41, 0x_12, 0x_F9, 0x_82, 0x_49, 0x_DF, 0x_1D, 0x_3B, 0x_EE, 0x_32, 0x_42, 0x_1B,
		0x_BF, 0x_19, 0x_FB, 0x_D2, 0x_96, 0x_0E, 0x_18, 0x_72, 0x_1C, 0x_89, 0x_33, 0x_A7, 0x_53, 0x_45, 0x_8A,
		0x_9B, 0x_23, 0x_69, 0x_2E, 0x_73, 0x_9C, 0x_4A, 0x_C4, 0x_E8, 0x_50, 0x_47, 0x_5B, 0x_F1, 0x_2F, 0x_6E,
		0x_B7, 0x_85, 0x_94, 0x_F3, 0x_D1, 0x_EB, 0x_74, 0x_64, 0x_71, 0x_01, 0x_7E, 0x_AD, 0x_4F, 0x_3D, 0x_62,
		0x_A9, 0x_C0, 0x_F8, 0x_E1, 0x_8C, 0x_9F, 0x_D6, 0x_29, 0x_31, 0x_A5, 0x_DB, 0x_2A, 0x_ED, 0x_B0, 0x_78,
		0x_FD, 0x_DC, 0x_54, 0x_5D, 0x_05, 0x_90, 0x_A3, 0x_17, 0x_AC, 0x_F6, 0x_08, 0x_FA, 0x_07, 0x_FE, 0x_65,
		0x_CB, 0x_4D, 0x_D4, 0x_3F, 0x_CD, 0x_CA, 0x_AA, 0x_60, 0x_BB, 0x_27, 0x_AB, 0x_93, 0x_13, 0x_57, 0x_06,
		0x_37, 0x_83, 0x_C8, 0x_BD, 0x_B1, 0x_E4, 0x_03, 0x_FC, 0x_6A, 0x_E5, 0x_68, 0x_C5, 0x_86, 0x_BA, 0x_F7,
		0x_EC, 0x_1E, 0x_7F, 0x_04, 0x_FF, 0x_7A, 0x_75, 0x_11, 0x_C7, 0x_DA, 0x_28, 0x_C2, 0x_48, 0x_D0, 0x_C3,
		0x_D7, 0x_5A, 0x_15, 0x_77, 0x_36, 0x_BC, 0x_25, 0x_56, 0x_B5, 0x_38, 0x_EA, 0x_46, 0x_66, 0x_51, 0x_8F,
		0x_98, 0x_52, 0x_AF, 0x_67, 0x_C6, 0x_E0, 0x_5E, 0x_4C, 0x_E2, 0x_DE, 0x_81, 0x_91, 0x_E7, 0x_A2, 0x_84,
		0x_35, 0x_16, 0x_6F, 0x_D5, 0x_B3, 0x_E9, 0x_E3, 0x_CF, 0x_CE, 0x_02, 0x_80, 0x_7B, 0x_2C, 0x_5F, 0x_CC,
		0x_B6, 0x_1A, 0x_97, 0x_F0, 0x_14, 0x_A4, 0x_3C, 0x_0F, 0x_8B, 0x_E6, 0x_9A, 0x_D8, 0x_9D,
	];

	helper(S, BASE, -28_163);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_459_566_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_minus_459_566_in_base_193() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0A,
		0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_2D, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_4C, 0x_6E, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_AD, 0x_61, 0x_F6, 0x_42, 0x_B3, 0x_A4, 0x_17, 0x_B5, 0x_E1, 0x_2A, 0x_62, 0x_4C, 0x_E9, 0x_12,
		0x_72, 0x_7B, 0x_EB, 0x_BF, 0x_9F, 0x_EC, 0x_1A, 0x_25, 0x_7F, 0x_4B, 0x_82, 0x_9A, 0x_FD, 0x_BC, 0x_7A,
		0x_8E, 0x_B1, 0x_16, 0x_F8, 0x_6D, 0x_F0, 0x_D4, 0x_5A, 0x_C0, 0x_9C, 0x_63, 0x_4F, 0x_71, 0x_10, 0x_B0,
		0x_97, 0x_08, 0x_94, 0x_E5, 0x_DE, 0x_46, 0x_D8, 0x_54, 0x_AF, 0x_29, 0x_48, 0x_FF, 0x_2C, 0x_A7, 0x_80,
		0x_F4, 0x_D5, 0x_15, 0x_F2, 0x_F3, 0x_6E, 0x_FB, 0x_7C, 0x_CD, 0x_7D, 0x_13, 0x_6C, 0x_AB, 0x_AA, 0x_06,
		0x_74, 0x_07, 0x_5C, 0x_C2, 0x_60, 0x_9B, 0x_37, 0x_75, 0x_F9, 0x_03, 0x_0E, 0x_B2, 0x_F5, 0x_81, 0x_88,
		0x_ED, 0x_05, 0x_35, 0x_A8, 0x_BE, 0x_DC, 0x_11, 0x_CC, 0x_36, 0x_C3, 0x_57, 0x_34, 0x_C1, 0x_24, 0x_04,
		0x_44, 0x_73, 0x_DF, 0x_4E, 0x_E0, 0x_E7, 0x_C6, 0x_B7, 0x_85, 0x_1F, 0x_76, 0x_52, 0x_0F, 0x_DD, 0x_93,
		0x_99, 0x_3D, 0x_51, 0x_69, 0x_EF, 0x_90, 0x_32, 0x_65, 0x_D3, 0x_FE, 0x_B4, 0x_18, 0x_6B, 0x_26, 0x_E3,
		0x_40, 0x_56, 0x_E2, 0x_D9, 0x_45, 0x_A9, 0x_58, 0x_3F, 0x_D7, 0x_84, 0x_39, 0x_8C, 0x_F7, 0x_33, 0x_E8,
		0x_DB, 0x_01, 0x_86, 0x_02, 0x_3B, 0x_8F, 0x_FC, 0x_9D, 0x_EE, 0x_59, 0x_38, 0x_53, 0x_BA, 0x_70, 0x_5E,
		0x_78, 0x_50, 0x_1B, 0x_CE, 0x_91, 0x_B8, 0x_AC, 0x_30, 0x_A3, 0x_3C, 0x_83, 0x_79, 0x_27, 0x_28, 0x_67,
		0x_21, 0x_C4, 0x_5D, 0x_5B, 0x_7E, 0x_AE, 0x_2E, 0x_BD, 0x_87, 0x_31, 0x_66, 0x_BB, 0x_B9,
	];

	helper(S, BASE, -459_566);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_4_403_332_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_minus_4_403_332_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_2D, 0x_CE,
		0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE,
		0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE,
		0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_90, 0x_DE, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_E5, 0x_DF, 0x_A5, 0x_74, 0x_F9, 0x_8E, 0x_C7, 0x_E0, 0x_52, 0x_5F, 0x_C4, 0x_B5, 0x_97, 0x_60,
		0x_E1, 0x_81, 0x_7B, 0x_5E, 0x_42, 0x_05, 0x_3F, 0x_85, 0x_08, 0x_40, 0x_61, 0x_B4, 0x_51, 0x_EC, 0x_57,
		0x_16, 0x_89, 0x_94, 0x_DA, 0x_FF, 0x_80, 0x_D2, 0x_C2, 0x_A7, 0x_E8, 0x_DC, 0x_DE, 0x_D9, 0x_34, 0x_B8,
		0x_A9, 0x_70, 0x_3C, 0x_31, 0x_E4, 0x_F4, 0x_95, 0x_C0, 0x_5B, 0x_E3, 0x_73, 0x_7A, 0x_29, 0x_24, 0x_A4,
		0x_8A, 0x_F6, 0x_2C, 0x_64, 0x_AD, 0x_B3, 0x_88, 0x_13, 0x_5C, 0x_ED, 0x_BA, 0x_45, 0x_A3, 0x_3B, 0x_91,
		0x_CF, 0x_77, 0x_7C, 0x_99, 0x_2E, 0x_66, 0x_33, 0x_6B, 0x_7D, 0x_65, 0x_4F, 0x_D3, 0x_6F, 0x_F5, 0x_EA,
		0x_AE, 0x_A8, 0x_8F, 0x_BF, 0x_B1, 0x_5A, 0x_DB, 0x_1F, 0x_0F, 0x_49, 0x_A1, 0x_D1, 0x_FB, 0x_C3, 0x_F0,
		0x_BE, 0x_14, 0x_C6, 0x_E2, 0x_10, 0x_11, 0x_02, 0x_4A, 0x_D6, 0x_4D, 0x_B0, 0x_39, 0x_6C, 0x_90, 0x_43,
		0x_FE, 0x_4C, 0x_56, 0x_0E, 0x_5D, 0x_A0, 0x_93, 0x_D0, 0x_53, 0x_75, 0x_C5, 0x_37, 0x_B9, 0x_1D, 0x_76,
		0x_54, 0x_15, 0x_59, 0x_9C, 0x_BB, 0x_D4, 0x_C8, 0x_7F, 0x_78, 0x_C9, 0x_22, 0x_50, 0x_55, 0x_B7, 0x_F8,
		0x_A2, 0x_96, 0x_04, 0x_F1, 0x_18, 0x_CC, 0x_30, 0x_AB, 0x_58, 0x_67, 0x_23, 0x_28, 0x_3E, 0x_D8, 0x_E6,
		0x_2F, 0x_D5, 0x_EE, 0x_8C, 0x_48, 0x_72, 0x_4E, 0x_F7, 0x_32, 0x_06, 0x_9A, 0x_B2, 0x_DD, 0x_4B, 0x_83,
		0x_69, 0x_B6, 0x_BD, 0x_BC, 0x_A6, 0x_CA, 0x_62, 0x_38, 0x_07, 0x_03, 0x_19, 0x_C1, 0x_8B,
	];

	helper(S, BASE, -4_403_332);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_61_515_540_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_minus_61_515_540_in_base_193() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0A,
		0x_2D, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7,
		0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7,
		0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_B6, 0x_8E, 0x_8D, 0x_13,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_B7, 0x_4C, 0x_49, 0x_8A, 0x_46, 0x_5A, 0x_72, 0x_B6, 0x_E1, 0x_C7, 0x_1B, 0x_3E, 0x_68, 0x_55,
		0x_D3, 0x_C9, 0x_15, 0x_BB, 0x_62, 0x_29, 0x_2C, 0x_71, 0x_73, 0x_FE, 0x_EE, 0x_6B, 0x_47, 0x_6D, 0x_DE,
		0x_2E, 0x_3F, 0x_92, 0x_31, 0x_A6, 0x_A9, 0x_45, 0x_A3, 0x_89, 0x_C8, 0x_10, 0x_F7, 0x_08, 0x_DF, 0x_5C,
		0x_AC, 0x_11, 0x_03, 0x_D1, 0x_B1, 0x_5E, 0x_F4, 0x_4A, 0x_7A, 0x_E9, 0x_96, 0x_D9, 0x_CA, 0x_FC, 0x_CF,
		0x_23, 0x_EB, 0x_D0, 0x_DC, 0x_C4, 0x_F2, 0x_CD, 0x_57, 0x_51, 0x_4E, 0x_27, 0x_13, 0x_1F, 0x_4B, 0x_43,
		0x_48, 0x_61, 0x_9C, 0x_3A, 0x_95, 0x_7B, 0x_7F, 0x_33, 0x_A5, 0x_01, 0x_1D, 0x_04, 0x_9E, 0x_1E, 0x_53,
		0x_8D, 0x_C2, 0x_A2, 0x_A1, 0x_21, 0x_41, 0x_D2, 0x_52, 0x_93, 0x_BE, 0x_C1, 0x_E6, 0x_3C, 0x_26, 0x_79,
		0x_32, 0x_1A, 0x_8E, 0x_3D, 0x_2A, 0x_DA, 0x_8B, 0x_AF, 0x_8C, 0x_C6, 0x_66, 0x_E2, 0x_BF, 0x_F1, 0x_4D,
		0x_80, 0x_CE, 0x_CB, 0x_59, 0x_E0, 0x_94, 0x_BD, 0x_FA, 0x_44, 0x_90, 0x_E7, 0x_05, 0x_98, 0x_30, 0x_AA,
		0x_2F, 0x_34, 0x_5B, 0x_9B, 0x_24, 0x_3B, 0x_A8, 0x_1C, 0x_B8, 0x_B2, 0x_ED, 0x_83, 0x_64, 0x_88, 0x_19,
		0x_B4, 0x_06, 0x_6C, 0x_8F, 0x_DD, 0x_D8, 0x_87, 0x_AD, 0x_70, 0x_E4, 0x_B0, 0x_B5, 0x_86, 0x_16, 0x_35,
		0x_6A, 0x_A4, 0x_07, 0x_0E, 0x_6E, 0x_F5, 0x_81, 0x_74, 0x_76, 0x_37, 0x_5F, 0x_56, 0x_36, 0x_A0, 0x_67,
		0x_D4, 0x_4F, 0x_FF, 0x_91, 0x_69, 0x_F0, 0x_39, 0x_B9, 0x_DB, 0x_50, 0x_AE, 0x_F8, 0x_BA,
	];

	helper(S, BASE, -61_515_540);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_260_830_250_in_base_193
#[test]
fn s_has_whitespaces_and_zeros_and_minus_260_830_250_in_base_193() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0C,
		0x_09, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0D,
		0x_2D, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26,
		0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_EA, 0x_E9, 0x_AF, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_57, 0x_E6, 0x_F1, 0x_2C, 0x_DD, 0x_27, 0x_B7, 0x_16, 0x_1A, 0x_95, 0x_65, 0x_24, 0x_40, 0x_69,
		0x_AB, 0x_EF, 0x_A2, 0x_9D, 0x_45, 0x_9E, 0x_4E, 0x_A4, 0x_53, 0x_B1, 0x_5F, 0x_A8, 0x_60, 0x_05, 0x_5B,
		0x_AE, 0x_DC, 0x_D8, 0x_C2, 0x_3A, 0x_7E, 0x_EA, 0x_9B, 0x_F4, 0x_71, 0x_FF, 0x_37, 0x_B9, 0x_02, 0x_70,
		0x_BC, 0x_CA, 0x_92, 0x_B5, 0x_49, 0x_72, 0x_90, 0x_32, 0x_66, 0x_E9, 0x_55, 0x_21, 0x_89, 0x_59, 0x_77,
		0x_10, 0x_33, 0x_FD, 0x_F3, 0x_E3, 0x_C7, 0x_AF, 0x_61, 0x_25, 0x_80, 0x_63, 0x_79, 0x_FC, 0x_EC, 0x_99,
		0x_86, 0x_44, 0x_7B, 0x_BD, 0x_3B, 0x_81, 0x_51, 0x_11, 0x_6E, 0x_D6, 0x_0E, 0x_F0, 0x_64, 0x_5E, 0x_34,
		0x_A5, 0x_B3, 0x_E5, 0x_8E, 0x_6F, 0x_A0, 0x_76, 0x_C5, 0x_E2, 0x_D9, 0x_E1, 0x_30, 0x_8D, 0x_FB, 0x_DE,
		0x_DF, 0x_4C, 0x_58, 0x_BE, 0x_DA, 0x_84, 0x_6B, 0x_C8, 0x_F8, 0x_93, 0x_38, 0x_B2, 0x_31, 0x_1D, 0x_F7,
		0x_5A, 0x_67, 0x_19, 0x_ED, 0x_FA, 0x_8F, 0x_A3, 0x_62, 0x_4A, 0x_AD, 0x_9F, 0x_F6, 0x_CF, 0x_6D, 0x_2F,
		0x_28, 0x_08, 0x_A7, 0x_8C, 0x_42, 0x_97, 0x_0F, 0x_EB, 0x_C3, 0x_06, 0x_29, 0x_75, 0x_36, 0x_8A, 0x_2A,
		0x_CD, 0x_1C, 0x_68, 0x_D1, 0x_8B, 0x_15, 0x_54, 0x_D5, 0x_07, 0x_7C, 0x_9A, 0x_01, 0x_14, 0x_98, 0x_1B,
		0x_74, 0x_C0, 0x_73, 0x_7D, 0x_13, 0x_6C, 0x_D2, 0x_F9, 0x_DB, 0x_CE, 0x_4D, 0x_E4, 0x_D3, 0x_12, 0x_FE,
		0x_88, 0x_A9, 0x_4F, 0x_2E, 0x_1E, 0x_35, 0x_41, 0x_7A, 0x_3F, 0x_CB, 0x_56, 0x_B4, 0x_A6,
	];

	helper(S, BASE, -260_830_250);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_8_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_minus_8_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_20,
		0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_2D, 0x_73,
		0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73,
		0x_73, 0x_73, 0x_73, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_64, 0x_CD, 0x_DB, 0x_83, 0x_AE, 0x_D6, 0x_30, 0x_B7, 0x_DE, 0x_4A, 0x_07, 0x_59, 0x_EE, 0x_14,
		0x_93, 0x_8D, 0x_EA, 0x_B9, 0x_E8, 0x_4D, 0x_4F, 0x_F6, 0x_1B, 0x_2C, 0x_02, 0x_5F, 0x_8E, 0x_18, 0x_69,
		0x_C9, 0x_B0, 0x_6B, 0x_2F, 0x_EF, 0x_FE, 0x_1C, 0x_0F, 0x_56, 0x_48, 0x_35, 0x_01, 0x_AB, 0x_47, 0x_A9,
		0x_89, 0x_63, 0x_D9, 0x_37, 0x_91, 0x_7D, 0x_6F, 0x_60, 0x_19, 0x_71, 0x_BA, 0x_0E, 0x_DC, 0x_58, 0x_8C,
		0x_4B, 0x_26, 0x_A0, 0x_25, 0x_B5, 0x_D0, 0x_E3, 0x_2E, 0x_41, 0x_79, 0x_F4, 0x_13, 0x_F0, 0x_38, 0x_E0,
		0x_E9, 0x_9C, 0x_C1, 0x_77, 0x_6A, 0x_96, 0x_CA, 0x_92, 0x_74, 0x_FB, 0x_CF, 0x_D3, 0x_3F, 0x_C0, 0x_44,
		0x_45, 0x_9E, 0x_2A, 0x_D1, 0x_F3, 0x_BF, 0x_88, 0x_32, 0x_A2, 0x_81, 0x_E5, 0x_42, 0x_94, 0x_C2, 0x_C3,
		0x_AD, 0x_7C, 0x_CE, 0x_FA, 0x_65, 0x_AF, 0x_1A, 0x_9D, 0x_7B, 0x_EC, 0x_B6, 0x_5A, 0x_87, 0x_DA, 0x_A5,
		0x_E1, 0x_F5, 0x_15, 0x_85, 0x_B1, 0x_ED, 0x_12, 0x_08, 0x_29, 0x_04, 0x_1D, 0x_75, 0x_3D, 0x_1E, 0x_98,
		0x_C4, 0x_9F, 0x_7A, 0x_82, 0x_DF, 0x_5C, 0x_C5, 0x_D2, 0x_FF, 0x_FD, 0x_3C, 0x_B8, 0x_27, 0x_4E, 0x_3B,
		0x_70, 0x_C6, 0x_16, 0x_11, 0x_31, 0x_A8, 0x_28, 0x_36, 0x_40, 0x_99, 0x_F7, 0x_6D, 0x_C7, 0x_53, 0x_A3,
		0x_43, 0x_BC, 0x_FC, 0x_6E, 0x_05, 0x_22, 0x_7F, 0x_50, 0x_EB, 0x_3E, 0x_7E, 0x_86, 0x_06, 0x_6C, 0x_52,
		0x_55, 0x_9A, 0x_AC, 0x_F2, 0x_D4, 0x_33, 0x_90, 0x_62, 0x_A6, 0x_8F, 0x_72, 0x_BE, 0x_B3, 0x_76, 0x_C8,
		0x_D7, 0x_61, 0x_46, 0x_CC, 0x_DD, 0x_66, 0x_10, 0x_B2, 0x_51, 0x_39, 0x_F1, 0x_4C, 0x_5D, 0x_AA, 0x_54,
		0x_3A, 0x_A7, 0x_A4, 0x_F9, 0x_D8, 0x_68, 0x_8B, 0x_57, 0x_E4, 0x_21, 0x_B4, 0x_80, 0x_34, 0x_D5, 0x_49,
		0x_67, 0x_BB, 0x_CB, 0x_A1, 0x_E2, 0x_24, 0x_E7, 0x_78, 0x_BD, 0x_17, 0x_8A, 0x_F8, 0x_5E, 0x_5B, 0x_03,
		0x_1F, 0x_97, 0x_84, 0x_9B, 0x_E6, 0x_95, 0x_23,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_17_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_minus_17_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_2D, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_96, 0x_A9, 0x_EF, 0x_71, 0x_36, 0x_86, 0x_35, 0x_51, 0x_7C, 0x_07, 0x_A2, 0x_1E, 0x_66, 0x_F0,
		0x_EC, 0x_8E, 0x_22, 0x_3A, 0x_DB, 0x_85, 0x_B4, 0x_2A, 0x_03, 0x_F2, 0x_43, 0x_2E, 0x_AF, 0x_4D, 0x_F3,
		0x_5A, 0x_E5, 0x_78, 0x_74, 0x_F5, 0x_B2, 0x_F1, 0x_C1, 0x_31, 0x_D6, 0x_81, 0x_32, 0x_26, 0x_88, 0x_40,
		0x_C7, 0x_7B, 0x_04, 0x_8B, 0x_38, 0x_A5, 0x_21, 0x_23, 0x_E0, 0x_FC, 0x_FA, 0x_D1, 0x_80, 0x_2C, 0x_F7,
		0x_17, 0x_C9, 0x_9D, 0x_D9, 0x_93, 0x_9F, 0x_60, 0x_77, 0x_A7, 0x_1C, 0x_58, 0x_37, 0x_BD, 0x_45, 0x_62,
		0x_6B, 0x_63, 0x_BA, 0x_97, 0x_A8, 0x_AB, 0x_61, 0x_75, 0x_52, 0x_CA, 0x_B1, 0x_95, 0x_E2, 0x_3E, 0x_9C,
		0x_DF, 0x_46, 0x_4C, 0x_E3, 0x_57, 0x_47, 0x_33, 0x_7F, 0x_CF, 0x_BF, 0x_13, 0x_D5, 0x_EE, 0x_C0, 0x_D4,
		0x_C3, 0x_3B, 0x_02, 0x_A3, 0x_89, 0x_F8, 0x_FF, 0x_3D, 0x_9B, 0x_68, 0x_EA, 0x_E8, 0x_4E, 0x_90, 0x_EB,
		0x_D2, 0x_34, 0x_82, 0x_E9, 0x_1B, 0x_1A, 0x_AC, 0x_FD, 0x_DD, 0x_4A, 0x_72, 0x_B7, 0x_8A, 0x_41, 0x_CC,
		0x_FB, 0x_C6, 0x_7A, 0x_1F, 0x_64, 0x_E4, 0x_56, 0x_87, 0x_AE, 0x_C2, 0x_48, 0x_6D, 0x_54, 0x_5B, 0x_DC,
		0x_B9, 0x_4F, 0x_69, 0x_AD, 0x_83, 0x_05, 0x_5F, 0x_19, 0x_73, 0x_29, 0x_8F, 0x_9E, 0x_7D, 0x_4B, 0x_44,
		0x_14, 0x_A4, 0x_39, 0x_E7, 0x_53, 0x_50, 0x_84, 0x_98, 0x_F6, 0x_10, 0x_8C, 0x_49, 0x_6F, 0x_3C, 0x_0E,
		0x_6A, 0x_24, 0x_28, 0x_25, 0x_D7, 0x_A1, 0x_A0, 0x_27, 0x_5D, 0x_BB, 0x_42, 0x_0F, 0x_B0, 0x_6E, 0x_E6,
		0x_55, 0x_59, 0x_16, 0x_18, 0x_B5, 0x_11, 0x_C4, 0x_30, 0x_01, 0x_08, 0x_3F, 0x_99, 0x_6C, 0x_79, 0x_94,
		0x_F9, 0x_DE, 0x_9A, 0x_CB, 0x_B6, 0x_CE, 0x_A6, 0x_BE, 0x_8D, 0x_FE, 0x_67, 0x_70, 0x_06, 0x_D0, 0x_DA,
		0x_AA, 0x_B3, 0x_F4, 0x_5E, 0x_91, 0x_C8, 0x_ED, 0x_B8, 0x_65, 0x_92, 0x_12, 0x_2F, 0x_CD, 0x_D3, 0x_E1,
		0x_BC, 0x_C5, 0x_5C, 0x_1D, 0x_76, 0x_15, 0x_7E,
	];

	helper(S, BASE, -17);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_555_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_minus_555_in_base_247() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0C,
		0x_2D, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9,
		0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_1C, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_B9, 0x_38, 0x_1C, 0x_CA, 0x_5D, 0x_40, 0x_5E, 0x_47, 0x_EF, 0x_5B, 0x_29, 0x_75, 0x_2E, 0x_F3, 0x_A4,
		0x_71, 0x_91, 0x_FE, 0x_B4, 0x_34, 0x_0F, 0x_D7, 0x_54, 0x_49, 0x_C4, 0x_59, 0x_EC, 0x_44, 0x_23, 0x_86,
		0x_84, 0x_2F, 0x_26, 0x_73, 0x_3F, 0x_7C, 0x_80, 0x_50, 0x_70, 0x_97, 0x_F4, 0x_02, 0x_B1, 0x_37, 0x_05,
		0x_FF, 0x_53, 0x_D1, 0x_6B, 0x_57, 0x_2C, 0x_BE, 0x_AA, 0x_3E, 0x_93, 0x_E1, 0x_32, 0x_27, 0x_30, 0x_85,
		0x_16, 0x_B8, 0x_36, 0x_87, 0x_4B, 0x_52, 0x_D8, 0x_5F, 0x_E6, 0x_62, 0x_48, 0x_4C, 0x_C3, 0x_D5, 0x_60,
		0x_1F, 0x_77, 0x_C1, 0x_E3, 0x_AF, 0x_41, 0x_B5, 0x_18, 0x_B6, 0x_9F, 0x_88, 0x_5A, 0x_BB, 0x_A2, 0x_9C,
		0x_6C, 0x_43, 0x_A9, 0x_B0, 0x_AD, 0x_66, 0x_D2, 0x_64, 0x_99, 0x_AE, 0x_83, 0x_ED, 0x_03, 0x_0E, 0x_CC,
		0x_46, 0x_A7, 0x_25, 0x_4F, 0x_BA, 0x_58, 0x_13, 0x_FC, 0x_EA, 0x_8C, 0x_6F, 0x_3D, 0x_3B, 0x_A3, 0x_C8,
		0x_7D, 0x_92, 0x_28, 0x_A0, 0x_12, 0x_BC, 0x_76, 0x_C0, 0x_A6, 0x_F5, 0x_8A, 0x_55, 0x_2A, 0x_AC, 0x_08,
		0x_DD, 0x_B7, 0x_94, 0x_63, 0x_10, 0x_C7, 0x_EE, 0x_C2, 0x_D3, 0x_06, 0x_1A, 0x_F2, 0x_D9, 0x_D4, 0x_CD,
		0x_E9, 0x_82, 0x_7E, 0x_07, 0x_79, 0x_6E, 0x_67, 0x_61, 0x_24, 0x_90, 0x_A1, 0x_F8, 0x_98, 0x_A8, 0x_F6,
		0x_11, 0x_B3, 0x_1E, 0x_6D, 0x_DA, 0x_CE, 0x_FD, 0x_3A, 0x_5C, 0x_3C, 0x_BF, 0x_56, 0x_E7, 0x_4A, 0x_8F,
		0x_7B, 0x_78, 0x_E0, 0x_7F, 0x_42, 0x_1B, 0x_74, 0x_E4, 0x_4E, 0x_E5, 0x_C5, 0x_D0, 0x_15, 0x_96, 0x_4D,
		0x_FB, 0x_65, 0x_EB, 0x_E2, 0x_AB, 0x_51, 0x_F7, 0x_9A, 0x_8E, 0x_C6, 0x_CB, 0x_1D, 0x_F1, 0x_9B, 0x_45,
		0x_89, 0x_72, 0x_DC, 0x_21, 0x_35, 0x_F9, 0x_95, 0x_19, 0x_81, 0x_DF, 0x_33, 0x_31, 0x_01, 0x_22, 0x_9E,
		0x_DE, 0x_D6, 0x_BD, 0x_7A, 0x_E8, 0x_A5, 0x_CF, 0x_F0, 0x_C9, 0x_68, 0x_8B, 0x_FA, 0x_B2, 0x_8D, 0x_69,
		0x_39, 0x_9D, 0x_04, 0x_DB, 0x_14, 0x_6A, 0x_17,
	];

	helper(S, BASE, -555);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_5_532_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_minus_5_532_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0D,
		0x_2D, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_9A, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_7B, 0x_82, 0x_E5, 0x_F0, 0x_91, 0x_27, 0x_88, 0x_14, 0x_16, 0x_92, 0x_32, 0x_33, 0x_FA, 0x_8B,
		0x_3E, 0x_B9, 0x_CB, 0x_79, 0x_F9, 0x_5F, 0x_2A, 0x_9A, 0x_A6, 0x_CE, 0x_D8, 0x_21, 0x_6E, 0x_B1, 0x_49,
		0x_F3, 0x_3D, 0x_A3, 0x_AB, 0x_26, 0x_23, 0x_95, 0x_2C, 0x_B4, 0x_D9, 0x_E2, 0x_7D, 0x_F4, 0x_E1, 0x_2F,
		0x_A1, 0x_9B, 0x_C2, 0x_48, 0x_6A, 0x_FD, 0x_A4, 0x_97, 0x_4B, 0x_BD, 0x_7F, 0x_C3, 0x_EB, 0x_96, 0x_A5,
		0x_25, 0x_54, 0x_68, 0x_E9, 0x_99, 0x_B6, 0x_C5, 0x_5C, 0x_52, 0x_5A, 0x_E8, 0x_58, 0x_EF, 0x_85, 0x_D0,
		0x_5D, 0x_DB, 0x_AC, 0x_7E, 0x_9E, 0x_65, 0x_A2, 0x_5B, 0x_62, 0x_0E, 0x_4E, 0x_53, 0x_B5, 0x_C7, 0x_DC,
		0x_C1, 0x_F2, 0x_A8, 0x_4F, 0x_1F, 0x_7A, 0x_DD, 0x_76, 0x_AF, 0x_41, 0x_CD, 0x_D6, 0x_AE, 0x_8D, 0x_AA,
		0x_86, 0x_1C, 0x_69, 0x_0F, 0x_4C, 0x_EC, 0x_87, 0x_74, 0x_1A, 0x_40, 0x_B3, 0x_C6, 0x_61, 0x_D3, 0x_D5,
		0x_07, 0x_4D, 0x_6C, 0x_77, 0x_46, 0x_47, 0x_44, 0x_9C, 0x_34, 0x_28, 0x_BB, 0x_FF, 0x_50, 0x_FB, 0x_71,
		0x_A7, 0x_43, 0x_6B, 0x_22, 0x_F8, 0x_15, 0x_AD, 0x_29, 0x_51, 0x_10, 0x_89, 0x_63, 0x_FE, 0x_17, 0x_DA,
		0x_C9, 0x_19, 0x_56, 0x_F7, 0x_83, 0x_B7, 0x_75, 0x_A0, 0x_B8, 0x_57, 0x_CC, 0x_C4, 0x_C8, 0x_1E, 0x_3C,
		0x_04, 0x_BC, 0x_FC, 0x_98, 0x_06, 0x_05, 0x_CA, 0x_E0, 0x_F5, 0x_24, 0x_39, 0x_02, 0x_DE, 0x_DF, 0x_A9,
		0x_D1, 0x_CF, 0x_BE, 0x_8E, 0x_30, 0x_81, 0x_84, 0x_08, 0x_9D, 0x_31, 0x_45, 0x_1D, 0x_59, 0x_36, 0x_8F,
		0x_03, 0x_42, 0x_ED, 0x_12, 0x_2E, 0x_70, 0x_6D, 0x_E6, 0x_4A, 0x_72, 0x_37, 0x_F1, 0x_55, 0x_E7, 0x_1B,
		0x_73, 0x_EE, 0x_80, 0x_8A, 0x_90, 0x_E3, 0x_8C, 0x_11, 0x_C0, 0x_3B, 0x_7C, 0x_BA, 0x_64, 0x_93, 0x_38,
		0x_F6, 0x_B2, 0x_D7, 0x_01, 0x_B0, 0x_9F, 0x_D4, 0x_78, 0x_D2, 0x_BF, 0x_60, 0x_66, 0x_3F, 0x_EA, 0x_5E,
		0x_6F, 0x_94, 0x_35, 0x_3A, 0x_18, 0x_67, 0x_13,
	];

	helper(S, BASE, -5_532);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_53_367_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_minus_53_367_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0C,
		0x_0D, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_0A,
		0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_2D, 0x_FA, 0x_FA, 0x_04, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_E4, 0x_4D, 0x_1D, 0x_57, 0x_69, 0x_A6, 0x_6D, 0x_7C, 0x_83, 0x_E3, 0x_12, 0x_B3, 0x_39, 0x_99,
		0x_62, 0x_2C, 0x_BE, 0x_21, 0x_90, 0x_55, 0x_80, 0x_A1, 0x_A7, 0x_14, 0x_C4, 0x_AC, 0x_D9, 0x_75, 0x_CB,
		0x_43, 0x_16, 0x_3B, 0x_B2, 0x_BD, 0x_1E, 0x_74, 0x_F5, 0x_9B, 0x_76, 0x_E5, 0x_8F, 0x_D0, 0x_68, 0x_CC,
		0x_A4, 0x_A8, 0x_E7, 0x_5D, 0x_5E, 0x_EF, 0x_F8, 0x_FD, 0x_F7, 0x_B0, 0x_97, 0x_94, 0x_D3, 0x_87, 0x_92,
		0x_B5, 0x_6F, 0x_6B, 0x_4A, 0x_5A, 0x_F3, 0x_53, 0x_D2, 0x_23, 0x_DD, 0x_86, 0x_E8, 0x_AD, 0x_AF, 0x_79,
		0x_65, 0x_DB, 0x_4C, 0x_66, 0x_F2, 0x_60, 0x_B4, 0x_8E, 0x_BC, 0x_C0, 0x_89, 0x_B1, 0x_3A, 0x_D5, 0x_82,
		0x_C1, 0x_E2, 0x_27, 0x_1A, 0x_E1, 0x_7D, 0x_EE, 0x_03, 0x_AA, 0x_3D, 0x_9A, 0x_0E, 0x_4B, 0x_58, 0x_A2,
		0x_EA, 0x_CD, 0x_18, 0x_F4, 0x_67, 0x_50, 0x_6C, 0x_33, 0x_28, 0x_CE, 0x_64, 0x_C2, 0x_54, 0x_63, 0x_37,
		0x_88, 0x_C3, 0x_38, 0x_A5, 0x_B6, 0x_08, 0x_E9, 0x_98, 0x_2E, 0x_15, 0x_61, 0x_B7, 0x_C6, 0x_3E, 0x_26,
		0x_2A, 0x_35, 0x_FB, 0x_06, 0x_77, 0x_1C, 0x_A0, 0x_8A, 0x_9C, 0x_7A, 0x_D4, 0x_72, 0x_1F, 0x_4F, 0x_05,
		0x_41, 0x_D6, 0x_07, 0x_32, 0x_FE, 0x_01, 0x_8C, 0x_DF, 0x_3C, 0x_0F, 0x_30, 0x_36, 0x_A9, 0x_A3, 0x_E0,
		0x_F1, 0x_45, 0x_F6, 0x_5B, 0x_C8, 0x_EC, 0x_DE, 0x_56, 0x_F9, 0x_19, 0x_73, 0x_DC, 0x_42, 0x_81, 0x_46,
		0x_9D, 0x_BA, 0x_FC, 0x_6A, 0x_D1, 0x_9F, 0x_D7, 0x_E6, 0x_13, 0x_CA, 0x_1B, 0x_C9, 0x_B8, 0x_22, 0x_51,
		0x_85, 0x_BB, 0x_FF, 0x_49, 0x_7B, 0x_96, 0x_52, 0x_3F, 0x_CF, 0x_AE, 0x_59, 0x_ED, 0x_DA, 0x_C5, 0x_11,
		0x_91, 0x_BF, 0x_95, 0x_2F, 0x_70, 0x_F0, 0x_04, 0x_10, 0x_7F, 0x_9E, 0x_24, 0x_25, 0x_5F, 0x_AB, 0x_48,
		0x_8B, 0x_6E, 0x_5C, 0x_8D, 0x_47, 0x_93, 0x_34, 0x_7E, 0x_40, 0x_02, 0x_4E, 0x_31, 0x_EB, 0x_D8, 0x_71,
		0x_78, 0x_29, 0x_C7, 0x_44, 0x_17, 0x_B9, 0x_84,
	];

	helper(S, BASE, -53_367);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_156_388_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_minus_156_388_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_2D, 0x_F8, 0x_F8, 0x_F8, 0x_F8,
		0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_D6, 0x_5B, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_A3, 0x_D6, 0x_91, 0x_43, 0x_9C, 0x_2F, 0x_B7, 0x_B4, 0x_1B, 0x_1A, 0x_37, 0x_B3, 0x_F5, 0x_5C,
		0x_4D, 0x_23, 0x_57, 0x_FE, 0x_9D, 0x_06, 0x_C0, 0x_EF, 0x_D5, 0x_1C, 0x_CA, 0x_63, 0x_71, 0x_B6, 0x_93,
		0x_FF, 0x_FA, 0x_9B, 0x_D0, 0x_16, 0x_34, 0x_46, 0x_EE, 0x_FB, 0x_41, 0x_F0, 0x_C1, 0x_35, 0x_A8, 0x_36,
		0x_82, 0x_8C, 0x_F2, 0x_6E, 0x_1E, 0x_EB, 0x_3B, 0x_DE, 0x_A7, 0x_3C, 0x_83, 0x_7F, 0x_79, 0x_84, 0x_E1,
		0x_A1, 0x_0F, 0x_15, 0x_5F, 0x_3D, 0x_C7, 0x_D2, 0x_D1, 0x_A2, 0x_88, 0x_10, 0x_85, 0x_BF, 0x_4B, 0x_F7,
		0x_E9, 0x_7E, 0x_73, 0x_13, 0x_97, 0x_CE, 0x_EA, 0x_B8, 0x_61, 0x_17, 0x_42, 0x_6B, 0x_C5, 0x_31, 0x_33,
		0x_3E, 0x_18, 0x_B2, 0x_6F, 0x_DD, 0x_D4, 0x_24, 0x_BC, 0x_94, 0x_C2, 0x_FD, 0x_AF, 0x_E2, 0x_89, 0x_D7,
		0x_27, 0x_32, 0x_C4, 0x_C8, 0x_95, 0x_DC, 0x_1D, 0x_D8, 0x_E4, 0x_A4, 0x_77, 0x_69, 0x_47, 0x_3A, 0x_56,
		0x_58, 0x_E0, 0x_92, 0x_64, 0x_62, 0x_C9, 0x_8B, 0x_5D, 0x_40, 0x_2E, 0x_78, 0x_80, 0x_E5, 0x_F6, 0x_49,
		0x_6C, 0x_86, 0x_7A, 0x_AB, 0x_5B, 0x_87, 0x_6A, 0x_FC, 0x_19, 0x_22, 0x_54, 0x_DA, 0x_4A, 0x_11, 0x_B1,
		0x_9E, 0x_2C, 0x_44, 0x_6D, 0x_07, 0x_CC, 0x_CB, 0x_98, 0x_21, 0x_C3, 0x_70, 0x_51, 0x_C6, 0x_7D, 0x_7B,
		0x_F1, 0x_DB, 0x_72, 0x_55, 0x_ED, 0x_E3, 0x_9A, 0x_48, 0x_50, 0x_76, 0x_5A, 0x_BD, 0x_BB, 0x_D3, 0x_D9,
		0x_29, 0x_BA, 0x_B5, 0x_9F, 0x_96, 0x_E6, 0x_45, 0x_F3, 0x_AC, 0x_2A, 0x_7C, 0x_03, 0x_90, 0x_CF, 0x_65,
		0x_60, 0x_53, 0x_01, 0x_DF, 0x_B0, 0x_02, 0x_A5, 0x_CD, 0x_F9, 0x_E7, 0x_05, 0x_F4, 0x_4F, 0x_30, 0x_AA,
		0x_A9, 0x_1F, 0x_08, 0x_8D, 0x_AE, 0x_25, 0x_A6, 0x_66, 0x_0E, 0x_4C, 0x_3F, 0x_81, 0x_AD, 0x_59, 0x_A0,
		0x_52, 0x_28, 0x_04, 0x_12, 0x_39, 0x_8A, 0x_75, 0x_99, 0x_8F, 0x_14, 0x_67, 0x_68, 0x_5E, 0x_BE, 0x_74,
		0x_8E, 0x_EC, 0x_4E, 0x_26, 0x_B9, 0x_38, 0x_E8,
	];

	helper(S, BASE, -156_388);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_3_009_749_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_minus_3_009_749_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_0B,
		0x_20, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_0D,
		0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_2D, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5,
		0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_87, 0x_D9, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_D4, 0x_23, 0x_B7, 0x_AC, 0x_F1, 0x_E9, 0x_08, 0x_61, 0x_68, 0x_6F, 0x_7A, 0x_FE, 0x_03, 0x_52,
		0x_5D, 0x_94, 0x_90, 0x_0F, 0x_B5, 0x_04, 0x_E8, 0x_71, 0x_30, 0x_BD, 0x_F8, 0x_C7, 0x_D1, 0x_E4, 0x_84,
		0x_AB, 0x_6C, 0x_4C, 0x_B2, 0x_24, 0x_B8, 0x_EB, 0x_97, 0x_BE, 0x_7B, 0x_DC, 0x_72, 0x_CF, 0x_75, 0x_F7,
		0x_55, 0x_D8, 0x_F0, 0x_29, 0x_87, 0x_BA, 0x_02, 0x_35, 0x_EC, 0x_7F, 0x_CD, 0x_65, 0x_99, 0x_2A, 0x_58,
		0x_A1, 0x_DF, 0x_D2, 0x_89, 0x_F4, 0x_AE, 0x_C2, 0x_53, 0x_57, 0x_C1, 0x_92, 0x_D5, 0x_E1, 0x_51, 0x_95,
		0x_A2, 0x_2E, 0x_6A, 0x_C6, 0x_83, 0x_B0, 0x_74, 0x_D9, 0x_C8, 0x_C0, 0x_DB, 0x_19, 0x_85, 0x_70, 0x_1C,
		0x_B9, 0x_11, 0x_7E, 0x_BB, 0x_A0, 0x_43, 0x_05, 0x_EA, 0x_F6, 0x_5E, 0x_98, 0x_60, 0x_9F, 0x_FF, 0x_EF,
		0x_49, 0x_C5, 0x_3B, 0x_8A, 0x_8C, 0x_79, 0x_5F, 0x_D6, 0x_50, 0x_CE, 0x_F3, 0x_CC, 0x_A3, 0x_31, 0x_4B,
		0x_B4, 0x_22, 0x_5C, 0x_9E, 0x_6D, 0x_FD, 0x_A7, 0x_1A, 0x_B3, 0x_56, 0x_32, 0x_28, 0x_18, 0x_3F, 0x_21,
		0x_5A, 0x_13, 0x_27, 0x_44, 0x_81, 0x_36, 0x_76, 0x_93, 0x_01, 0x_DD, 0x_A4, 0x_1B, 0x_E7, 0x_1F, 0x_33,
		0x_54, 0x_CB, 0x_ED, 0x_9B, 0x_EE, 0x_96, 0x_4D, 0x_7C, 0x_06, 0x_D0, 0x_42, 0x_2F, 0x_38, 0x_FA, 0x_3E,
		0x_39, 0x_14, 0x_F2, 0x_16, 0x_CA, 0x_2C, 0x_D7, 0x_C9, 0x_F9, 0x_E2, 0x_64, 0x_1E, 0x_48, 0x_41, 0x_9D,
		0x_10, 0x_8E, 0x_3A, 0x_C4, 0x_66, 0x_15, 0x_3C, 0x_5B, 0x_91, 0x_80, 0x_86, 0x_6B, 0x_DE, 0x_FC, 0x_34,
		0x_63, 0x_7D, 0x_E0, 0x_E6, 0x_BC, 0x_37, 0x_4E, 0x_8D, 0x_45, 0x_26, 0x_3D, 0x_4F, 0x_82, 0x_8B, 0x_AF,
		0x_67, 0x_62, 0x_47, 0x_12, 0x_AA, 0x_59, 0x_8F, 0x_B6, 0x_17, 0x_77, 0x_A8, 0x_9C, 0x_AD, 0x_78, 0x_C3,
		0x_69, 0x_40, 0x_6E, 0x_DA, 0x_1D, 0x_0E, 0x_07, 0x_25, 0x_9A, 0x_A6, 0x_46, 0x_B1, 0x_FB, 0x_A5, 0x_A9,
		0x_E3, 0x_4A, 0x_73, 0x_D3, 0x_F5, 0x_BF, 0x_88,
	];

	helper(S, BASE, -3_009_749);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_71_369_165_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_minus_71_369_165_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0A,
		0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0D,
		0x_0D, 0x_2D, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB,
		0x_CB, 0x_60, 0x_9A, 0x_88, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_CB, 0x_89, 0x_28, 0x_EE, 0x_60, 0x_9E, 0x_DA, 0x_AC, 0x_4F, 0x_B8, 0x_1A, 0x_15, 0x_18, 0x_F6, 0x_C1,
		0x_70, 0x_E8, 0x_44, 0x_3E, 0x_7F, 0x_A6, 0x_E7, 0x_21, 0x_3F, 0x_A4, 0x_79, 0x_D8, 0x_7E, 0x_16, 0x_F5,
		0x_7B, 0x_65, 0x_E5, 0x_FA, 0x_D4, 0x_71, 0x_40, 0x_FB, 0x_2F, 0x_1B, 0x_3B, 0x_F0, 0x_10, 0x_EB, 0x_41,
		0x_E6, 0x_C4, 0x_0E, 0x_6F, 0x_34, 0x_5A, 0x_D6, 0x_F1, 0x_EF, 0x_B7, 0x_93, 0x_91, 0x_78, 0x_BC, 0x_A2,
		0x_04, 0x_C2, 0x_B4, 0x_F8, 0x_8C, 0x_2C, 0x_62, 0x_DE, 0x_AD, 0x_A9, 0x_38, 0x_AE, 0x_0F, 0x_8B, 0x_8A,
		0x_D7, 0x_63, 0x_F3, 0x_24, 0x_5B, 0x_83, 0x_DD, 0x_32, 0x_1D, 0x_96, 0x_4A, 0x_A8, 0x_AF, 0x_85, 0x_72,
		0x_69, 0x_23, 0x_58, 0x_D9, 0x_80, 0x_97, 0x_06, 0x_43, 0x_48, 0x_B6, 0x_57, 0x_5D, 0x_EA, 0x_3C, 0x_BF,
		0x_14, 0x_19, 0x_98, 0x_E3, 0x_9C, 0x_1E, 0x_02, 0x_C3, 0x_1F, 0x_74, 0x_86, 0x_B2, 0x_B1, 0x_92, 0x_A1,
		0x_6C, 0x_47, 0x_FD, 0x_D2, 0x_F4, 0x_8D, 0x_4E, 0x_29, 0x_FF, 0x_4B, 0x_94, 0x_BA, 0x_E2, 0x_9B, 0x_68,
		0x_F2, 0x_CC, 0x_DC, 0x_2E, 0x_08, 0x_7C, 0x_A0, 0x_25, 0x_42, 0x_C7, 0x_6A, 0x_D3, 0x_45, 0x_82, 0x_53,
		0x_B5, 0x_6E, 0x_9D, 0x_B3, 0x_67, 0x_E4, 0x_BB, 0x_01, 0x_5E, 0x_95, 0x_12, 0x_54, 0x_75, 0x_90, 0x_A5,
		0x_CE, 0x_50, 0x_3A, 0x_17, 0x_6D, 0x_4D, 0x_C5, 0x_E0, 0x_27, 0x_46, 0x_5C, 0x_EC, 0x_87, 0x_8E, 0x_CA,
		0x_2A, 0x_9A, 0x_BE, 0x_39, 0x_C9, 0x_3D, 0x_F9, 0x_C0, 0x_05, 0x_A7, 0x_76, 0x_61, 0x_DB, 0x_52, 0x_37,
		0x_CF, 0x_C6, 0x_56, 0x_E9, 0x_DF, 0x_88, 0x_B9, 0x_35, 0x_49, 0x_B0, 0x_6B, 0x_C8, 0x_26, 0x_D0, 0x_ED,
		0x_AA, 0x_E1, 0x_A3, 0x_11, 0x_66, 0x_51, 0x_CD, 0x_30, 0x_FC, 0x_D1, 0x_8F, 0x_9F, 0x_99, 0x_22, 0x_59,
		0x_4C, 0x_55, 0x_03, 0x_FE, 0x_81, 0x_07, 0x_BD, 0x_13, 0x_F7, 0x_31, 0x_D5, 0x_77, 0x_64, 0x_1C, 0x_7A,
		0x_33, 0x_36, 0x_5F, 0x_7D, 0x_AB, 0x_73, 0x_84,
	];

	helper(S, BASE, -71_369_165);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_529_586_434_in_base_247
#[test]
fn s_has_whitespaces_and_zeros_and_minus_529_586_434_in_base_247() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_20,
		0x_09, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_0B,
		0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_2D, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_C8, 0x_C8, 0x_76,
		0x_3A,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_55, 0x_6F, 0x_52, 0x_DB, 0x_75, 0x_A3, 0x_74, 0x_85, 0x_03, 0x_BD, 0x_27, 0x_40, 0x_05, 0x_72,
		0x_7F, 0x_F8, 0x_07, 0x_38, 0x_AB, 0x_39, 0x_E4, 0x_B7, 0x_86, 0x_9B, 0x_6E, 0x_59, 0x_7B, 0x_A5, 0x_23,
		0x_DC, 0x_C5, 0x_42, 0x_A7, 0x_35, 0x_C8, 0x_67, 0x_70, 0x_63, 0x_84, 0x_3F, 0x_AD, 0x_4C, 0x_33, 0x_06,
		0x_C4, 0x_FD, 0x_F2, 0x_48, 0x_5D, 0x_19, 0x_F5, 0x_DF, 0x_AA, 0x_54, 0x_34, 0x_ED, 0x_5F, 0x_EC, 0x_2F,
		0x_7D, 0x_D1, 0x_6D, 0x_60, 0x_1A, 0x_9A, 0x_B6, 0x_46, 0x_24, 0x_56, 0x_9F, 0x_D2, 0x_C1, 0x_1E, 0x_10,
		0x_87, 0x_15, 0x_1F, 0x_C0, 0x_BA, 0x_44, 0x_FB, 0x_26, 0x_89, 0x_53, 0x_E2, 0x_91, 0x_D0, 0x_7E, 0x_B9,
		0x_79, 0x_DD, 0x_8A, 0x_CE, 0x_0E, 0x_D3, 0x_98, 0x_73, 0x_D8, 0x_4B, 0x_F6, 0x_88, 0x_1D, 0x_47, 0x_F3,
		0x_4A, 0x_B1, 0x_EB, 0x_A6, 0x_96, 0x_8E, 0x_93, 0x_C9, 0x_41, 0x_76, 0x_CA, 0x_E9, 0x_31, 0x_B8, 0x_FC,
		0x_B0, 0x_6C, 0x_AF, 0x_01, 0x_A1, 0x_BE, 0x_E6, 0x_6A, 0x_A2, 0x_CC, 0x_D6, 0x_66, 0x_65, 0x_9C, 0x_D5,
		0x_5B, 0x_9E, 0x_EF, 0x_71, 0x_92, 0x_BF, 0x_83, 0x_1B, 0x_28, 0x_5E, 0x_3D, 0x_90, 0x_D7, 0x_08, 0x_DA,
		0x_EA, 0x_99, 0x_CB, 0x_E0, 0x_AC, 0x_C6, 0x_3A, 0x_81, 0x_FA, 0x_D4, 0x_13, 0x_62, 0x_11, 0x_4F, 0x_49,
		0x_80, 0x_57, 0x_43, 0x_8B, 0x_5C, 0x_B5, 0x_51, 0x_7C, 0x_E7, 0x_F7, 0x_F1, 0x_25, 0x_29, 0x_E5, 0x_A4,
		0x_82, 0x_4E, 0x_C7, 0x_2C, 0x_3B, 0x_58, 0x_F0, 0x_B4, 0x_7A, 0x_21, 0x_04, 0x_8F, 0x_A0, 0x_22, 0x_D9,
		0x_95, 0x_4D, 0x_CD, 0x_5A, 0x_1C, 0x_E8, 0x_FE, 0x_E3, 0x_14, 0x_AE, 0x_77, 0x_0F, 0x_C3, 0x_BC, 0x_78,
		0x_50, 0x_2E, 0x_17, 0x_02, 0x_6B, 0x_A9, 0x_FF, 0x_F4, 0x_B3, 0x_69, 0x_BB, 0x_B2, 0x_EE, 0x_37, 0x_64,
		0x_36, 0x_C2, 0x_94, 0x_3C, 0x_97, 0x_DE, 0x_A8, 0x_8C, 0x_9D, 0x_8D, 0x_32, 0x_2A, 0x_16, 0x_61, 0x_CF,
		0x_12, 0x_F9, 0x_3E, 0x_30, 0x_18, 0x_45, 0x_E1,
	];

	helper(S, BASE, -529_586_434);
}
// endregion
// region: s_has_whitespaces_and_minus_2_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0D,
		0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_2D, 0x_70, 0x_C9, 0x_5A, 0x_C9, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_70,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_whitespaces_and_minus_67_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_67_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_0C,
		0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0C,
		0x_2D, 0x_17, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_17, 0x_17, 0x_FB, 0x_B8, 0x_B8, 0x_17, 0x_17, 0x_17, 0x_B8,
		0x_B8, 0x_17, 0x_17, 0x_17, 0x_B8, 0x_B8, 0x_B8, 0x_17, 0x_B8, 0x_17, 0x_17, 0x_17, 0x_B8, 0x_17, 0x_17,
		0x_17, 0x_B8, 0x_B8, 0x_17, 0x_B8, 0x_B8, 0x_17, 0x_17, 0x_B8, 0x_B8, 0x_17, 0x_17, 0x_B8, 0x_B8, 0x_17,
		0x_B8,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_17,
	];

	helper(S, BASE, -67);
}
// endregion
// region: s_has_whitespaces_and_minus_437_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_437_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_2D, 0x_44, 0x_44, 0x_A9, 0x_44, 0x_44, 0x_A9, 0x_44, 0x_A9, 0x_44, 0x_A8,
		0x_44, 0x_A9, 0x_A9, 0x_44, 0x_A9, 0x_44, 0x_A9, 0x_44, 0x_A9, 0x_44, 0x_44, 0x_44, 0x_44, 0x_A9, 0x_A9,
		0x_44, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_44,
	];

	helper(S, BASE, -437);
}
// endregion
// region: s_has_whitespaces_and_minus_2_537_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_537_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_09,
		0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0A,
		0x_0B, 0x_09, 0x_0D, 0x_2D, 0x_28, 0x_60, 0x_60, 0x_28, 0x_28, 0x_28, 0x_28, 0x_60, 0x_28, 0x_60, 0x_60,
		0x_28, 0x_58, 0x_28, 0x_60, 0x_60, 0x_28, 0x_28, 0x_28, 0x_28, 0x_60, 0x_28, 0x_28, 0x_60, 0x_60, 0x_28,
		0x_60, 0x_28, 0x_60, 0x_28, 0x_60, 0x_28, 0x_28, 0x_28, 0x_28, 0x_60, 0x_28, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_28,
	];

	helper(S, BASE, -2_537);
}
// endregion
// region: s_has_whitespaces_and_minus_77_052_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_77_052_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0B,
		0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_20,
		0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_2D, 0x_B5, 0x_08,
		0x_08, 0x_B5, 0x_08, 0x_B5, 0x_B5, 0x_08, 0x_08, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_08, 0x_08,
		0x_8D, 0x_B5, 0x_B5, 0x_B5, 0x_08, 0x_08, 0x_08, 0x_B5, 0x_08, 0x_B5, 0x_08, 0x_08, 0x_08, 0x_B5, 0x_B5,
		0x_B5, 0x_08, 0x_08, 0x_B5, 0x_08, 0x_B5, 0x_B5, 0x_08, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_08, 0x_08,
		0x_08, 0x_08, 0x_B5, 0x_B5, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_B5,
	];

	helper(S, BASE, -77_052);
}
// endregion
// region: s_has_whitespaces_and_minus_794_888_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_794_888_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0A, 0x_09,
		0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_20,
		0x_20, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_2D, 0x_19, 0x_19, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_19, 0x_8E, 0x_8E,
		0x_8E, 0x_8E, 0x_19, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_19, 0x_8E, 0x_8E, 0x_8E, 0x_BB, 0x_8E, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_19,
	];

	helper(S, BASE, -794_888);
}
// endregion
// region: s_has_whitespaces_and_minus_5_387_545_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_5_387_545_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_2D, 0x_B6, 0x_72, 0x_B6, 0x_72, 0x_72, 0x_B6, 0x_72, 0x_72, 0x_72, 0x_B6, 0x_B6, 0x_72,
		0x_B6, 0x_72, 0x_B6, 0x_72, 0x_72, 0x_72, 0x_B6, 0x_B6, 0x_72, 0x_72, 0x_B6, 0x_0A, 0x_72, 0x_72, 0x_72,
		0x_B6, 0x_B6, 0x_B6, 0x_72, 0x_B6, 0x_72, 0x_72, 0x_B6, 0x_72, 0x_72, 0x_B6, 0x_B6, 0x_72, 0x_B6, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_B6,
	];

	helper(S, BASE, -5_387_545);
}
// endregion
// region: s_has_whitespaces_and_minus_34_610_277_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_34_610_277_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0D,
		0x_20, 0x_20, 0x_20, 0x_2D, 0x_32, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_32, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_32, 0x_32, 0x_32, 0x_0E, 0x_0E, 0x_0E, 0x_32, 0x_32, 0x_0E, 0x_0E, 0x_32, 0x_0E, 0x_32,
		0x_9F, 0x_0E, 0x_0E, 0x_0E, 0x_32, 0x_0E, 0x_32, 0x_0E, 0x_32, 0x_32, 0x_0E, 0x_0E, 0x_32, 0x_32, 0x_0E,
		0x_0E, 0x_32, 0x_0E,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_32,
	];

	helper(S, BASE, -34_610_277);
}
// endregion
// region: s_has_whitespaces_and_minus_453_853_234_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_453_853_234_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_09,
		0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_2D, 0x_CA, 0x_CA, 0x_3E, 0x_CA, 0x_CA, 0x_3E, 0x_3E,
		0x_3E, 0x_3E, 0x_CA, 0x_CA, 0x_3E, 0x_CA, 0x_3E, 0x_CA, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E,
		0x_3E, 0x_CA, 0x_CA, 0x_3E, 0x_3E, 0x_CA, 0x_3E, 0x_B0, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_3E, 0x_3E,
		0x_3E, 0x_CA, 0x_CA, 0x_CA, 0x_3E, 0x_3E, 0x_CA, 0x_3E, 0x_3E, 0x_CA, 0x_3E, 0x_CA, 0x_CA,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_CA,
	];

	helper(S, BASE, -453_853_234);
}
// endregion
// region: s_has_whitespaces_and_minus_9_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_9_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_20,
		0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_2D, 0x_39, 0x_02, 0x_02, 0x_1F, 0x_02, 0x_DF, 0x_39, 0x_DF,
		0x_39, 0x_02, 0x_39, 0x_39, 0x_39, 0x_DF, 0x_02, 0x_39, 0x_DF, 0x_02, 0x_DF, 0x_02, 0x_DF, 0x_02, 0x_39,
		0x_02, 0x_39, 0x_39, 0x_02, 0x_02, 0x_39, 0x_DF, 0x_DF, 0x_39, 0x_02, 0x_DF, 0x_02, 0x_39, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_02, 0x_DF, 0x_02, 0x_DF,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_39, 0x_DF,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_whitespaces_and_minus_26_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_26_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_2D, 0x_0E, 0x_0E, 0x_0E,
		0x_3A, 0x_41, 0x_0E, 0x_0E, 0x_9C, 0x_0E, 0x_0E, 0x_9C, 0x_41, 0x_41, 0x_0E, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_41, 0x_0E, 0x_41, 0x_9C, 0x_0E, 0x_9C, 0x_9C, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_9C, 0x_0E,
	];

	helper(S, BASE, -26);
}
// endregion
// region: s_has_whitespaces_and_minus_342_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_342_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_2D, 0x_87, 0x_87, 0x_51, 0x_1B, 0x_51,
		0x_51, 0x_8F, 0x_87, 0x_87, 0x_51, 0x_51, 0x_1B, 0x_51, 0x_1B, 0x_51, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_87, 0x_1B,
	];

	helper(S, BASE, -342);
}
// endregion
// region: s_has_whitespaces_and_minus_9_985_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_9_985_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0B,
		0x_20, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_0D,
		0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_2D, 0x_E4, 0x_E4, 0x_E4, 0x_9C, 0x_93, 0x_93,
		0x_9C, 0x_E4, 0x_E4, 0x_3B, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_93, 0x_93, 0x_9C, 0x_E4, 0x_93, 0x_93,
		0x_E4, 0x_93, 0x_93, 0x_93, 0x_9C, 0x_9C, 0x_93, 0x_9C, 0x_9C, 0x_E4, 0x_9C, 0x_9C, 0x_9C, 0x_E4, 0x_93,
		0x_93, 0x_9C, 0x_E4, 0x_93, 0x_93, 0x_E4, 0x_9C, 0x_E4, 0x_93, 0x_9C, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_E4, 0x_9C,
	];

	helper(S, BASE, -9_985);
}
// endregion
// region: s_has_whitespaces_and_minus_14_714_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_14_714_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0C,
		0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_2D, 0x_E0, 0x_C5, 0x_E0, 0x_C5,
		0x_F5, 0x_F5, 0x_E0, 0x_E0, 0x_E0, 0x_B1, 0x_C5, 0x_C5, 0x_E0, 0x_E0, 0x_C5, 0x_E0, 0x_E0, 0x_E0, 0x_F5,
		0x_C5, 0x_C5, 0x_F5, 0x_E0, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_F5, 0x_E0,
	];

	helper(S, BASE, -14_714);
}
// endregion
// region: s_has_whitespaces_and_minus_762_643_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_762_643_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_2D, 0x_A2, 0x_A2, 0x_63, 0x_58, 0x_58, 0x_63, 0x_58, 0x_63, 0x_A2,
		0x_A2, 0x_63, 0x_63, 0x_A2, 0x_A6, 0x_58, 0x_A2, 0x_A2, 0x_63, 0x_58, 0x_A2, 0x_63, 0x_58, 0x_58, 0x_63,
		0x_63, 0x_A2, 0x_63, 0x_63, 0x_63, 0x_A2, 0x_A2, 0x_63, 0x_A2, 0x_58, 0x_63, 0x_A2, 0x_63, 0x_A2, 0x_58,
		0x_A2, 0x_58, 0x_58,
	];
	const BASE: &[u8] = &[
		0x_63, 0x_A2, 0x_58,
	];

	helper(S, BASE, -762_643);
}
// endregion
// region: s_has_whitespaces_and_minus_2_291_051_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_291_051_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0C,
		0x_09, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_2D, 0x_D1, 0x_D1, 0x_D4, 0x_3A, 0x_3A, 0x_D1,
		0x_D4, 0x_D1, 0x_3A, 0x_D4, 0x_D1, 0x_3A, 0x_D4, 0x_3A, 0x_9E, 0x_D4, 0x_D4, 0x_D4, 0x_D1, 0x_D1, 0x_3A,
		0x_D4, 0x_D1, 0x_D1, 0x_D4, 0x_3A, 0x_3A, 0x_D1, 0x_3A, 0x_3A, 0x_3A, 0x_D4, 0x_D4, 0x_3A, 0x_D4, 0x_D1,
		0x_3A, 0x_D4, 0x_D1, 0x_D4, 0x_3A, 0x_D4, 0x_3A, 0x_D4, 0x_D1, 0x_D4, 0x_D1, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_D1, 0x_3A,
	];

	helper(S, BASE, -2_291_051);
}
// endregion
// region: s_has_whitespaces_and_minus_84_615_872_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_84_615_872_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0C,
		0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_20,
		0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_2D, 0x_3F, 0x_7D, 0x_7D, 0x_7D, 0x_55,
		0x_55, 0x_3F, 0x_7D, 0x_7D, 0x_7D, 0x_3F, 0x_55, 0x_3F, 0x_3F, 0x_55, 0x_3F, 0x_7D, 0x_3B, 0x_7D, 0x_7D,
		0x_3F, 0x_55, 0x_3F, 0x_3F, 0x_3F, 0x_55, 0x_7D, 0x_7D, 0x_3F, 0x_55, 0x_3F, 0x_3F, 0x_3F, 0x_7D, 0x_3F,
		0x_55, 0x_3F, 0x_7D, 0x_3F, 0x_55,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_3F, 0x_7D,
	];

	helper(S, BASE, -84_615_872);
}
// endregion
// region: s_has_whitespaces_and_minus_595_819_678_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_595_819_678_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_20,
		0x_0A, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0B,
		0x_09, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_2D, 0x_C4, 0x_C4, 0x_C4, 0x_75, 0x_C4,
		0x_C4, 0x_75, 0x_08, 0x_C4, 0x_08, 0x_75, 0x_08, 0x_75, 0x_75, 0x_75, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_78,
		0x_75, 0x_08, 0x_75, 0x_C4, 0x_C4, 0x_08, 0x_C4, 0x_75, 0x_C4, 0x_08, 0x_C4, 0x_75, 0x_08, 0x_08, 0x_C4,
		0x_C4, 0x_08, 0x_08, 0x_08, 0x_75, 0x_75, 0x_C4, 0x_75, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_C4, 0x_75,
	];

	helper(S, BASE, -595_819_678);
}
// endregion
// region: s_has_whitespaces_and_minus_7_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_7_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0C,
		0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_2D,
		0x_54, 0x_E2, 0x_55, 0x_54, 0x_DD, 0x_E2, 0x_99, 0x_99,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_54, 0x_E2, 0x_F1, 0x_99,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_minus_89_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_89_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_2D,
		0x_E6, 0x_4E, 0x_02, 0x_F2, 0x_4E, 0x_F8, 0x_02, 0x_4E, 0x_F8, 0x_02, 0x_E6, 0x_4E, 0x_6C, 0x_F8, 0x_4E,
		0x_E6, 0x_6C, 0x_6C, 0x_F8, 0x_F8, 0x_02, 0x_E6, 0x_4E, 0x_F8, 0x_E6, 0x_F8, 0x_4E,
	];
	const BASE: &[u8] = &[
		0x_6C, 0x_F8, 0x_4E, 0x_E6, 0x_02,
	];

	helper(S, BASE, -89);
}
// endregion
// region: s_has_whitespaces_and_minus_571_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_571_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_2D, 0x_4E, 0x_2C, 0x_4E, 0x_E0, 0x_C1, 0x_CB, 0x_4E, 0x_E3, 0x_E3, 0x_E3, 0x_4E, 0x_E3,
		0x_4E, 0x_4E, 0x_2C, 0x_4E, 0x_4E, 0x_E0, 0x_CB, 0x_E0, 0x_E0, 0x_2C, 0x_E0, 0x_E0, 0x_2C, 0x_4E,
	];
	const BASE: &[u8] = &[
		0x_E3, 0x_E0, 0x_2C, 0x_CB, 0x_4E,
	];

	helper(S, BASE, -571);
}
// endregion
// region: s_has_whitespaces_and_minus_6_449_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_6_449_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_09, 0x_2D, 0x_A5,
		0x_3C, 0x_8E, 0x_A5, 0x_87, 0x_87, 0x_A1, 0x_87, 0x_8E, 0x_3C, 0x_87, 0x_8E, 0x_87, 0x_8E, 0x_DE, 0x_A5,
		0x_8E, 0x_A5, 0x_87, 0x_8E, 0x_DE, 0x_DE, 0x_3C, 0x_A5, 0x_A5, 0x_3C, 0x_3C, 0x_87, 0x_A5,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_8E, 0x_A5, 0x_DE, 0x_87,
	];

	helper(S, BASE, -6_449);
}
// endregion
// region: s_has_whitespaces_and_minus_57_754_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_57_754_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_0B,
		0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_20,
		0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_2D, 0x_BD, 0x_BD,
		0x_62, 0x_62, 0x_CA, 0x_CA, 0x_DD, 0x_C2, 0x_62, 0x_DD, 0x_CA, 0x_CA, 0x_CA, 0x_BD, 0x_DD, 0x_DD, 0x_CA,
		0x_E0, 0x_CA, 0x_62, 0x_CA, 0x_E0, 0x_BD, 0x_E0, 0x_E0, 0x_DD, 0x_DD, 0x_62, 0x_E0, 0x_62, 0x_CA, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_E0, 0x_62, 0x_BD, 0x_DD,
	];

	helper(S, BASE, -57_754);
}
// endregion
// region: s_has_whitespaces_and_minus_117_045_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_117_045_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_20,
		0x_0A, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_0C,
		0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_2D, 0x_06, 0x_BD, 0x_BD, 0x_BD, 0x_06, 0x_06, 0x_75, 0x_C3, 0x_87,
		0x_EC, 0x_75, 0x_06, 0x_75, 0x_BD, 0x_C3, 0x_EC, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_06, 0x_BD, 0x_EC, 0x_75,
	];

	helper(S, BASE, -117_045);
}
// endregion
// region: s_has_whitespaces_and_minus_2_578_267_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_578_267_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0D,
		0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_2D, 0x_16, 0x_16, 0x_AD, 0x_98, 0x_98, 0x_98,
		0x_16, 0x_98, 0x_AD, 0x_5B, 0x_97, 0x_98, 0x_99, 0x_98, 0x_AD, 0x_99, 0x_99, 0x_AD, 0x_99, 0x_5B, 0x_99,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_16, 0x_5B, 0x_AD, 0x_99,
	];

	helper(S, BASE, -2_578_267);
}
// endregion
// region: s_has_whitespaces_and_minus_41_064_459_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_41_064_459_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_2D, 0x_1F, 0x_F1, 0x_F7,
		0x_F7, 0x_DB, 0x_F7, 0x_DB, 0x_F7, 0x_DB, 0x_F1, 0x_1F, 0x_A1, 0x_DB, 0x_F1, 0x_F7, 0x_1F, 0x_DB, 0x_1F,
		0x_F1, 0x_F7, 0x_F7, 0x_F7, 0x_1F, 0x_F1, 0x_1F, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_F1, 0x_98, 0x_DB, 0x_1F,
	];

	helper(S, BASE, -41_064_459);
}
// endregion
// region: s_has_whitespaces_and_minus_200_117_334_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_200_117_334_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_2D, 0x_AD,
		0x_1A, 0x_63, 0x_63, 0x_4F, 0x_63, 0x_63, 0x_63, 0x_0E, 0x_0E, 0x_4F, 0x_AD, 0x_85, 0x_1A, 0x_0E, 0x_4F,
		0x_63, 0x_1A, 0x_0E, 0x_63, 0x_63, 0x_1A, 0x_63, 0x_AD, 0x_4F, 0x_4F, 0x_AD, 0x_1A, 0x_AD, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_4F, 0x_63, 0x_0E, 0x_AD,
	];

	helper(S, BASE, -200_117_334);
}
// endregion
// region: s_has_whitespaces_and_minus_1_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_1_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_20,
		0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_2D, 0x_7F,
		0x_3F, 0x_7F, 0x_F6, 0x_5C, 0x_4A, 0x_D7, 0x_F6, 0x_D7, 0x_F6, 0x_7F, 0x_7F, 0x_5C, 0x_5C, 0x_7F, 0x_7F,
		0x_17, 0x_D7, 0x_4A, 0x_F6, 0x_5C, 0x_5C, 0x_7F, 0x_17, 0x_F6, 0x_17, 0x_17, 0x_F6, 0x_4A, 0x_65, 0x_4A,
		0x_17, 0x_7F, 0x_17, 0x_5C, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_7F, 0x_5C, 0x_F6, 0x_65, 0x_17, 0x_D7,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_minus_10_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_10_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0C,
		0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0C,
		0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_2D, 0x_79, 0x_03, 0x_CD, 0x_4E, 0x_72, 0x_9E,
		0x_72, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_79, 0x_72, 0x_03, 0x_9E, 0x_4E, 0x_34,
	];

	helper(S, BASE, -10);
}
// endregion
// region: s_has_whitespaces_and_minus_345_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_345_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_2D, 0x_5C, 0x_FC,
		0x_FC, 0x_1B, 0x_4B, 0x_71, 0x_AB, 0x_FC, 0x_FC, 0x_62, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_5C, 0x_1B, 0x_AB, 0x_71, 0x_62, 0x_75,
	];

	helper(S, BASE, -345);
}
// endregion
// region: s_has_whitespaces_and_minus_1_052_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_1_052_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_2D, 0x_96, 0x_90, 0x_96, 0x_D8, 0x_A3,
		0x_D8, 0x_90, 0x_D8, 0x_E2, 0x_E2, 0x_90, 0x_CF, 0x_91, 0x_E2, 0x_D8, 0x_AD, 0x_CF, 0x_96, 0x_90, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_91, 0x_D8, 0x_96, 0x_AD, 0x_E2, 0x_CF,
	];

	helper(S, BASE, -1_052);
}
// endregion
// region: s_has_whitespaces_and_minus_52_282_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_52_282_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_09,
		0x_20, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_2D, 0x_5D, 0x_83, 0x_37, 0x_2C, 0x_D9, 0x_D9, 0x_4F, 0x_5D,
		0x_7C, 0x_D9, 0x_83, 0x_76, 0x_37, 0x_83, 0x_2C, 0x_2C, 0x_D9, 0x_2C, 0x_7C, 0x_37, 0x_37, 0x_76, 0x_76,
		0x_37, 0x_5D, 0x_76, 0x_76, 0x_D9, 0x_83, 0x_7C, 0x_83, 0x_5D, 0x_37, 0x_76, 0x_D9, 0x_83, 0x_37, 0x_2C,
		0x_76, 0x_83, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_76, 0x_2C, 0x_5D, 0x_7C, 0x_37, 0x_D9,
	];

	helper(S, BASE, -52_282);
}
// endregion
// region: s_has_whitespaces_and_minus_331_243_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_331_243_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_09,
		0x_20, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_2D, 0x_E4, 0x_84, 0x_57, 0x_10, 0x_84, 0x_F6, 0x_2E, 0x_2B, 0x_F6,
		0x_E4, 0x_F6, 0x_2E, 0x_10, 0x_2E, 0x_2E, 0x_F6, 0x_10, 0x_84, 0x_2E, 0x_57, 0x_F6, 0x_57, 0x_84, 0x_84,
		0x_10, 0x_10, 0x_C8, 0x_10, 0x_C8, 0x_F6, 0x_57, 0x_10, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_C8, 0x_E4, 0x_2E, 0x_57, 0x_84, 0x_10,
	];

	helper(S, BASE, -331_243);
}
// endregion
// region: s_has_whitespaces_and_minus_2_246_266_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_246_266_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0C,
		0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_0A,
		0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_2D, 0x_D1, 0x_62, 0x_28, 0x_19, 0x_12, 0x_2E, 0x_8E, 0x_8E, 0x_58, 0x_8E,
		0x_D1, 0x_19, 0x_28, 0x_19, 0x_19, 0x_62, 0x_8E, 0x_8E, 0x_62, 0x_8E, 0x_2E, 0x_D1, 0x_8E, 0x_62, 0x_19,
		0x_12, 0x_28, 0x_12, 0x_19, 0x_2E, 0x_62, 0x_62, 0x_2E, 0x_8E, 0x_28, 0x_19, 0x_19, 0x_D1, 0x_62, 0x_8E,
		0x_12, 0x_12, 0x_12, 0x_62, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_8E, 0x_D1, 0x_12, 0x_19, 0x_62, 0x_2E,
	];

	helper(S, BASE, -2_246_266);
}
// endregion
// region: s_has_whitespaces_and_minus_29_968_544_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_29_968_544_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_2D,
		0x_F6, 0x_5F, 0x_BC, 0x_F6, 0x_11, 0x_89, 0x_F6, 0x_92, 0x_89, 0x_6C, 0x_89, 0x_F6, 0x_11, 0x_BC, 0x_BC,
		0x_92, 0x_92, 0x_BC, 0x_89, 0x_5F, 0x_92, 0x_BC, 0x_BC, 0x_92, 0x_F6, 0x_BC, 0x_F6, 0x_5F, 0x_89, 0x_92,
		0x_89, 0x_89, 0x_F6, 0x_11, 0x_11, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_5F, 0x_BC, 0x_43, 0x_89, 0x_F6, 0x_92,
	];

	helper(S, BASE, -29_968_544);
}
// endregion
// region: s_has_whitespaces_and_minus_731_869_959_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_731_869_959_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0B,
		0x_0D, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_2D, 0x_66, 0x_53, 0x_0E, 0x_02, 0x_53, 0x_B6,
		0x_9A, 0x_B6, 0x_53, 0x_53, 0x_66, 0x_90, 0x_0E, 0x_0E, 0x_B6, 0x_66, 0x_53, 0x_02, 0x_02, 0x_B6, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_01, 0x_66, 0x_9A, 0x_53, 0x_B6, 0x_02,
	];

	helper(S, BASE, -731_869_959);
}
// endregion
// region: s_has_whitespaces_and_minus_7_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_7_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_20,
		0x_09, 0x_0C, 0x_0D, 0x_2D, 0x_C0, 0x_E8, 0x_73, 0x_C4, 0x_C0, 0x_73, 0x_C4, 0x_7F, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_E9, 0x_10, 0x_DE, 0x_C4, 0x_91, 0x_16, 0x_73, 0x_C0, 0x_F7, 0x_BA, 0x_7F,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_minus_70_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_70_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_2D, 0x_E2, 0x_52, 0x_9A, 0x_03, 0x_4C,
		0x_CD, 0x_E2, 0x_CD, 0x_CD, 0x_52, 0x_14, 0x_E2, 0x_FA, 0x_27, 0x_14, 0x_03, 0x_E2, 0x_E2, 0x_7C, 0x_FA,
		0x_7C, 0x_52, 0x_7C, 0x_CD, 0x_14, 0x_CD, 0x_FA, 0x_3B, 0x_FB, 0x_FB, 0x_4C,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_3B, 0x_27, 0x_14, 0x_52, 0x_7C, 0x_E2, 0x_CD, 0x_FB, 0x_FA, 0x_4C,
	];

	helper(S, BASE, -70);
}
// endregion
// region: s_has_whitespaces_and_minus_550_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_550_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0A, 0x_2D, 0x_D1, 0x_86, 0x_BC, 0x_EF, 0x_4C, 0x_4C, 0x_86, 0x_32, 0x_26, 0x_26, 0x_1D,
		0x_86, 0x_87, 0x_86, 0x_86, 0x_4C, 0x_26, 0x_61, 0x_4C, 0x_90, 0x_90, 0x_61, 0x_86, 0x_1D, 0x_87, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_26, 0x_1D, 0x_4C, 0x_D1, 0x_32, 0x_86, 0x_61, 0x_10, 0x_90, 0x_87,
	];

	helper(S, BASE, -550);
}
// endregion
// region: s_has_whitespaces_and_minus_2_795_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_795_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_09,
		0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_2D, 0x_CB, 0x_64, 0x_64, 0x_64, 0x_82, 0x_A0,
		0x_A0, 0x_FC, 0x_51, 0x_A0, 0x_A3, 0x_64, 0x_BC, 0x_87, 0x_A0, 0x_9B, 0x_A0, 0x_D8, 0x_D8, 0x_87, 0x_64,
		0x_A3, 0x_51, 0x_CB, 0x_D8, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_64, 0x_CB, 0x_A0, 0x_A3, 0x_FC, 0x_9B, 0x_51, 0x_87, 0x_71, 0x_D8,
	];

	helper(S, BASE, -2_795);
}
// endregion
// region: s_has_whitespaces_and_minus_19_734_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_19_734_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_09,
		0x_0C, 0x_2D, 0x_68, 0x_99, 0x_08, 0x_68, 0x_25, 0x_3E, 0x_75, 0x_11, 0x_19, 0x_25, 0x_19, 0x_11, 0x_08,
		0x_19, 0x_07, 0x_08, 0x_A0, 0x_68, 0x_68, 0x_11, 0x_A0, 0x_11, 0x_99, 0x_11, 0x_99, 0x_99, 0x_5D, 0x_07,
		0x_61, 0x_11, 0x_08, 0x_11, 0x_5D, 0x_11, 0x_99, 0x_75, 0x_99, 0x_25, 0x_99, 0x_11, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_68, 0x_19, 0x_99, 0x_5D, 0x_07, 0x_61, 0x_11, 0x_75, 0x_08, 0x_A0,
	];

	helper(S, BASE, -19_734);
}
// endregion
// region: s_has_whitespaces_and_minus_927_332_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_927_332_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0B,
		0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_2D,
		0x_C1, 0x_A0, 0x_F8, 0x_71, 0x_03, 0x_2A, 0x_3A, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_21, 0x_5C, 0x_F8, 0x_6C, 0x_C1, 0x_40, 0x_71, 0x_A0, 0x_03, 0x_2A,
	];

	helper(S, BASE, -927_332);
}
// endregion
// region: s_has_whitespaces_and_minus_8_108_740_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_8_108_740_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_2D, 0x_55, 0x_C5, 0x_08,
		0x_B1, 0x_94, 0x_55, 0x_94, 0x_E7, 0x_25, 0x_94,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_06, 0x_94, 0x_08, 0x_55, 0x_A1, 0x_C5, 0x_1B, 0x_58, 0x_B1, 0x_25,
	];

	helper(S, BASE, -8_108_740);
}
// endregion
// region: s_has_whitespaces_and_minus_74_045_516_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_74_045_516_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_2D, 0x_E9, 0x_84, 0x_84, 0x_84, 0x_7B, 0x_60, 0x_7B, 0x_01, 0x_99, 0x_7C, 0x_E9, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_21, 0x_5C, 0x_E9, 0x_7B, 0x_60, 0x_01, 0x_7C, 0x_84, 0x_3F, 0x_BA,
	];

	helper(S, BASE, -74_045_516);
}
// endregion
// region: s_has_whitespaces_and_minus_157_454_331_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_157_454_331_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0D,
		0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_2D, 0x_D7, 0x_36, 0x_57, 0x_16, 0x_5D, 0x_D7, 0x_EF, 0x_63,
		0x_24, 0x_63, 0x_C2, 0x_FD, 0x_16, 0x_63, 0x_C2, 0x_D7, 0x_57, 0x_57, 0x_16, 0x_E1, 0x_57, 0x_57, 0x_E1,
		0x_16, 0x_16, 0x_FD, 0x_B2, 0x_16, 0x_63, 0x_D7, 0x_EF, 0x_FD, 0x_63, 0x_57, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_36, 0x_63, 0x_FD, 0x_5D, 0x_C2, 0x_EF, 0x_E1, 0x_16, 0x_D7, 0x_57, 0x_B2,
	];

	helper(S, BASE, -157_454_331);
}
// endregion
// region: s_has_whitespaces_and_minus_1_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_1_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_0A,
		0x_20, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_0C,
		0x_2D, 0x_7A, 0x_8A, 0x_68, 0x_28, 0x_15, 0x_28, 0x_7A, 0x_AD, 0x_37, 0x_CF, 0x_7A, 0x_59, 0x_CF, 0x_CF,
		0x_F9, 0x_D5, 0x_D5, 0x_CF, 0x_3A, 0x_CF, 0x_AD, 0x_F9, 0x_68, 0x_D5, 0x_56, 0x_15, 0x_28, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_7A, 0x_F9, 0x_59, 0x_AD, 0x_D5, 0x_15, 0x_3A, 0x_28, 0x_56, 0x_CF, 0x_EC, 0x_37,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_minus_16_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_16_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_20,
		0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_2D, 0x_08, 0x_DE, 0x_B6, 0x_7B, 0x_42, 0x_5D, 0x_51, 0x_42, 0x_DD, 0x_5D,
		0x_7B, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_08, 0x_42, 0x_DE, 0x_7B, 0x_9E, 0x_84, 0x_DD, 0x_07, 0x_1B, 0x_48, 0x_51, 0x_52,
	];

	helper(S, BASE, -16);
}
// endregion
// region: s_has_whitespaces_and_minus_893_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_893_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_20,
		0x_20, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_2D,
		0x_C9, 0x_99, 0x_02, 0x_EB, 0x_3D, 0x_7E, 0x_99, 0x_7E, 0x_CB, 0x_59, 0x_06, 0x_06, 0x_59, 0x_CB, 0x_06,
		0x_E0, 0x_B7, 0x_B7, 0x_4C, 0x_CB, 0x_06, 0x_4C, 0x_06, 0x_99, 0x_99, 0x_51, 0x_B7, 0x_99, 0x_7E, 0x_E0,
		0x_CB, 0x_B7, 0x_C9, 0x_99, 0x_CB, 0x_47, 0x_99, 0x_06, 0x_7E, 0x_C9, 0x_7E, 0x_47, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_59, 0x_CB, 0x_99, 0x_06, 0x_C9, 0x_47, 0x_7E, 0x_E0, 0x_02, 0x_4C, 0x_3D, 0x_51,
	];

	helper(S, BASE, -893);
}
// endregion
// region: s_has_whitespaces_and_minus_3_489_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_3_489_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_09,
		0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_2D, 0x_D0, 0x_AB, 0x_81, 0x_95, 0x_97, 0x_B7, 0x_D0, 0x_AF,
		0x_D0, 0x_99, 0x_B7, 0x_85, 0x_B7, 0x_99, 0x_AB, 0x_F2, 0x_B7, 0x_95, 0x_48, 0x_18, 0x_F2, 0x_11, 0x_F2,
		0x_D0, 0x_81, 0x_99, 0x_F2, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_D0, 0x_D5, 0x_11, 0x_F2, 0x_95, 0x_85, 0x_AB, 0x_81, 0x_18, 0x_99, 0x_AF, 0x_B7,
	];

	helper(S, BASE, -3_489);
}
// endregion
// region: s_has_whitespaces_and_minus_93_318_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_93_318_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_2D, 0x_4B, 0x_4B, 0x_03, 0x_45, 0x_56, 0x_36, 0x_83, 0x_8B,
		0x_45, 0x_03, 0x_56, 0x_83, 0x_C7, 0x_C7, 0x_56,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_63, 0x_45, 0x_4B, 0x_56, 0x_17, 0x_03, 0x_B4, 0x_C7, 0x_83, 0x_29, 0x_16, 0x_8B,
	];

	helper(S, BASE, -93_318);
}
// endregion
// region: s_has_whitespaces_and_minus_940_140_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_940_140_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0B,
		0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_2D, 0x_04, 0x_6B, 0x_35,
		0x_35, 0x_E6, 0x_6B, 0x_A2, 0x_04, 0x_86, 0x_36, 0x_47, 0x_BD, 0x_86, 0x_47, 0x_35, 0x_6B,
	];
	const BASE: &[u8] = &[
		0x_36, 0x_02, 0x_04, 0x_47, 0x_83, 0x_86, 0x_6B, 0x_CF, 0x_BD, 0x_E7, 0x_C2, 0x_35, 0x_E6,
	];

	helper(S, BASE, -940_140);
}
// endregion
// region: s_has_whitespaces_and_minus_7_259_459_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_7_259_459_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_2D, 0x_F6, 0x_A7, 0x_2E, 0x_8F, 0x_F2, 0x_9D, 0x_80, 0x_22,
		0x_17, 0x_9D, 0x_2E, 0x_2E, 0x_A7, 0x_17, 0x_17, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_F6, 0x_8F, 0x_F2, 0x_9D, 0x_75, 0x_A7, 0x_2E, 0x_A4, 0x_E6, 0x_37, 0x_49, 0x_80,
	];

	helper(S, BASE, -7_259_459);
}
// endregion
// region: s_has_whitespaces_and_minus_59_985_848_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_59_985_848_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_20,
		0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0A,
		0x_09, 0x_0B, 0x_2D, 0x_44, 0x_B9, 0x_91, 0x_F8, 0x_9D, 0x_A2, 0x_1A, 0x_49, 0x_1D, 0x_41, 0x_9D, 0x_B9,
		0x_C9, 0x_44, 0x_41, 0x_7F, 0x_44, 0x_7F, 0x_47,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_47, 0x_86, 0x_F8, 0x_1D, 0x_B9, 0x_9D, 0x_91, 0x_C9, 0x_7F, 0x_41, 0x_A2, 0x_44,
	];

	helper(S, BASE, -59_985_848);
}
// endregion
// region: s_has_whitespaces_and_minus_432_957_353_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_432_957_353_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_20,
		0x_0C, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_2D, 0x_7A, 0x_B4,
		0x_11, 0x_A2, 0x_69, 0x_7A, 0x_5D, 0x_5D, 0x_96, 0x_F9, 0x_A2, 0x_5B, 0x_2E, 0x_49, 0x_5D, 0x_B1, 0x_69,
		0x_69, 0x_11, 0x_A2,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_A2, 0x_2E, 0x_F9, 0x_49, 0x_5B, 0x_7A, 0x_B1, 0x_D3, 0x_11, 0x_5D, 0x_B4, 0x_35,
	];

	helper(S, BASE, -432_957_353);
}
// endregion
// region: s_has_whitespaces_and_minus_4_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_4_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_09,
		0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_2D, 0x_5E, 0x_70,
		0x_17, 0x_C9, 0x_9F, 0x_7C, 0x_72, 0x_28, 0x_5C, 0x_8F, 0x_F6, 0x_EF, 0x_21, 0x_8F, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_95, 0x_26, 0x_EF, 0x_5E, 0x_28, 0x_08, 0x_9F, 0x_17, 0x_F6, 0x_7C, 0x_40, 0x_8F, 0x_21, 0x_72,
		0x_C9, 0x_31, 0x_A9, 0x_75,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_whitespaces_and_minus_63_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_63_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_2D, 0x_8F, 0x_E5, 0x_0E,
		0x_F7, 0x_F7, 0x_3B, 0x_AC, 0x_79, 0x_8A, 0x_C1, 0x_E8, 0x_58, 0x_F7, 0x_E8, 0x_8F, 0x_DF, 0x_58, 0x_3B,
		0x_8F, 0x_58, 0x_07, 0x_64, 0x_FB, 0x_DF, 0x_8A, 0x_21, 0x_E9, 0x_8F, 0x_DF, 0x_8A, 0x_3B, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_58, 0x_BB, 0x_E8, 0x_8F, 0x_3B, 0x_FB, 0x_E5, 0x_F7, 0x_21, 0x_6E, 0x_C1, 0x_DF, 0x_64, 0x_AC, 0x_8A,
		0x_E9, 0x_07, 0x_79, 0x_19,
	];

	helper(S, BASE, -63);
}
// endregion
// region: s_has_whitespaces_and_minus_681_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_681_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0A,
		0x_0B, 0x_0A, 0x_0D, 0x_2D, 0x_F9, 0x_01, 0x_01, 0x_A0, 0x_5E, 0x_BF, 0x_22, 0x_B1, 0x_9D, 0x_CE,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_F9, 0x_D5, 0x_6B, 0x_17, 0x_B1, 0x_B9, 0x_9D, 0x_E9, 0x_22, 0x_BF, 0x_84, 0x_D0, 0x_69, 0x_5E,
		0x_F2, 0x_01, 0x_52, 0x_CE,
	];

	helper(S, BASE, -681);
}
// endregion
// region: s_has_whitespaces_and_minus_7_641_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_7_641_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0A,
		0x_20, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_2D, 0x_93, 0x_4D,
		0x_1F, 0x_1F, 0x_D0, 0x_DC, 0x_CC, 0x_B1, 0x_F3, 0x_4D, 0x_DE, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_93, 0x_4D, 0x_1F, 0x_CC, 0x_81, 0x_41, 0x_44, 0x_70, 0x_63, 0x_CE, 0x_EC, 0x_06, 0x_DE, 0x_F3,
		0x_98, 0x_D9, 0x_B1, 0x_DC,
	];

	helper(S, BASE, -7_641);
}
// endregion
// region: s_has_whitespaces_and_minus_31_905_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_31_905_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_20,
		0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_2D, 0x_25, 0x_07, 0x_C1, 0x_25, 0x_A6, 0x_F3, 0x_43, 0x_25, 0x_97,
		0x_F1,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_F0, 0x_2C, 0x_59, 0x_25, 0x_F1, 0x_98, 0x_C1, 0x_8F, 0x_4D, 0x_43, 0x_F3, 0x_07, 0x_D9, 0x_97,
		0x_1D, 0x_41, 0x_88, 0x_E4,
	];

	helper(S, BASE, -31_905);
}
// endregion
// region: s_has_whitespaces_and_minus_650_762_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_650_762_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_09,
		0x_0A, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_20, 0x_0A,
		0x_0D, 0x_0D, 0x_2D, 0x_F6, 0x_59, 0x_21, 0x_F9, 0x_F9, 0x_B7, 0x_6A, 0x_15, 0x_59, 0x_F9, 0x_A1, 0x_A1,
		0x_A1, 0x_33, 0x_54, 0x_A1, 0x_15, 0x_5F, 0x_C5, 0x_32, 0x_4A, 0x_F6, 0x_F3, 0x_6A, 0x_21, 0x_5F, 0x_60,
		0x_21, 0x_33, 0x_4A, 0x_A1, 0x_67, 0x_A1, 0x_5F, 0x_A1, 0x_F6, 0x_54, 0x_A1, 0x_1F, 0x_2F, 0x_5F, 0x_59,
		0x_D0, 0x_5F, 0x_60, 0x_1F, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_5F, 0x_4A, 0x_2F, 0x_F6, 0x_1F, 0x_F3, 0x_67, 0x_6A, 0x_15, 0x_33, 0x_D0, 0x_F9, 0x_60, 0x_54,
		0x_C5, 0x_21, 0x_A1, 0x_59,
	];

	helper(S, BASE, -650_762);
}
// endregion
// region: s_has_whitespaces_and_minus_7_032_877_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_7_032_877_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_2D, 0x_5D, 0x_08,
		0x_A1, 0x_A8, 0x_BB, 0x_A7, 0x_65, 0x_77, 0x_6C, 0x_5D, 0x_A7, 0x_49, 0x_A8, 0x_47, 0x_6E, 0x_BB, 0x_5D,
		0x_9B, 0x_84, 0x_6C,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_49, 0x_5D, 0x_9B, 0x_44, 0x_AF, 0x_A8, 0x_84, 0x_A7, 0x_6E, 0x_77, 0x_6C, 0x_BB, 0x_C3, 0x_47,
		0x_08, 0x_F4, 0x_8B, 0x_A1,
	];

	helper(S, BASE, -7_032_877);
}
// endregion
// region: s_has_whitespaces_and_minus_45_528_354_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_45_528_354_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0B,
		0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0B,
		0x_09, 0x_20, 0x_2D, 0x_BD, 0x_14, 0x_F6, 0x_DD, 0x_F6, 0x_B4, 0x_E0, 0x_B4, 0x_B4, 0x_6E, 0x_9E, 0x_8E,
		0x_B1, 0x_B1, 0x_9E, 0x_C4, 0x_22, 0x_14, 0x_B4, 0x_22, 0x_9E, 0x_BD, 0x_70, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_17, 0x_45, 0x_B4, 0x_70, 0x_C4, 0x_F6, 0x_14, 0x_E9, 0x_AD, 0x_8E, 0x_9F, 0x_6E, 0x_B1, 0x_DD,
		0x_9E, 0x_94, 0x_10, 0x_BD,
	];

	helper(S, BASE, -45_528_354);
}
// endregion
// region: s_has_whitespaces_and_minus_327_853_136_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_327_853_136_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_09,
		0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_2D, 0x_2C, 0x_49, 0x_CB, 0x_6C, 0x_49, 0x_38, 0x_AC,
		0x_09, 0x_49, 0x_78, 0x_AC, 0x_6C, 0x_FA, 0x_1A, 0x_DD, 0x_CB, 0x_D7, 0x_D4, 0x_03, 0x_D4, 0x_AC, 0x_6C,
		0x_19, 0x_DD, 0x_2C, 0x_03, 0x_6C, 0x_D0, 0x_6C, 0x_19, 0x_4E, 0x_D4, 0x_F6, 0x_FA, 0x_49, 0x_78, 0x_DD,
		0x_DD, 0x_49, 0x_1A, 0x_78, 0x_38, 0x_AC, 0x_78, 0x_FA,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_78, 0x_D4, 0x_4E, 0x_AC, 0x_F7, 0x_2C, 0x_CB, 0x_38, 0x_D0, 0x_19, 0x_1A, 0x_03, 0x_6C, 0x_F6,
		0x_24, 0x_DD, 0x_FA, 0x_49,
	];

	helper(S, BASE, -327_853_136);
}
// endregion
// region: s_has_whitespaces_and_minus_8_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_8_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0D,
		0x_20, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_2D, 0x_59, 0x_FE,
		0x_55, 0x_90, 0x_A4, 0x_59, 0x_15, 0x_2F, 0x_90, 0x_2F, 0x_2F, 0x_82, 0x_78, 0x_AE, 0x_24, 0x_B0, 0x_DF,
		0x_64, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_2F, 0x_7D, 0x_A4, 0x_D8, 0x_33, 0x_F6, 0x_EE, 0x_59, 0x_60, 0x_B0, 0x_81, 0x_55, 0x_2A, 0x_9F,
		0x_C8, 0x_90, 0x_24, 0x_26, 0x_80, 0x_6D, 0x_C2, 0x_F3, 0x_DF, 0x_5A, 0x_12, 0x_40, 0x_A1, 0x_32, 0x_FA,
		0x_E7, 0x_EC, 0x_B2, 0x_82, 0x_8E, 0x_C6, 0x_15, 0x_78, 0x_9E, 0x_36, 0x_AE, 0x_C0,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_minus_29_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_29_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_2D, 0x_B8, 0x_46, 0x_8E, 0x_9B, 0x_A4, 0x_F8, 0x_27, 0x_15, 0x_18,
		0x_9B, 0x_88, 0x_CB, 0x_74, 0x_6C, 0x_FE, 0x_27, 0x_A2, 0x_88, 0x_23, 0x_21, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_4B, 0x_C1, 0x_74, 0x_D8, 0x_96, 0x_85, 0x_27, 0x_CB, 0x_9B, 0x_87, 0x_CE, 0x_98, 0x_C6, 0x_F2,
		0x_21, 0x_7B, 0x_A2, 0x_88, 0x_6C, 0x_A4, 0x_D9, 0x_C4, 0x_D4, 0x_23, 0x_D5, 0x_2F, 0x_97, 0x_C5, 0x_B8,
		0x_CF, 0x_E2, 0x_15, 0x_42, 0x_02, 0x_BB, 0x_8E, 0x_5A, 0x_7F, 0x_FE, 0x_F8, 0x_18,
	];

	helper(S, BASE, -29);
}
// endregion
// region: s_has_whitespaces_and_minus_969_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_969_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0A,
		0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0D,
		0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_09, 0x_2D, 0x_EA, 0x_5F, 0x_E6, 0x_A4, 0x_3B, 0x_BE, 0x_A4,
		0x_51, 0x_51, 0x_DB, 0x_95, 0x_A4, 0x_3A, 0x_70, 0x_3B, 0x_DB, 0x_94, 0x_3A, 0x_70, 0x_A4, 0x_E1, 0x_51,
		0x_64, 0x_44, 0x_FD, 0x_FB, 0x_02, 0x_D6, 0x_2A, 0x_FD, 0x_94, 0x_EA, 0x_5F, 0x_3B, 0x_95, 0x_1A, 0x_E1,
		0x_14, 0x_69, 0x_7A, 0x_94, 0x_5F, 0x_BE, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_A4, 0x_F2, 0x_5F, 0x_FD, 0x_99, 0x_1A, 0x_E1, 0x_32, 0x_AB, 0x_93, 0x_34, 0x_94, 0x_7A, 0x_DB,
		0x_74, 0x_D7, 0x_BC, 0x_44, 0x_64, 0x_FB, 0x_3B, 0x_BE, 0x_EA, 0x_3A, 0x_02, 0x_D6, 0x_51, 0x_C3, 0x_70,
		0x_C0, 0x_14, 0x_F8, 0x_E2, 0x_E0, 0x_95, 0x_63, 0x_69, 0x_03, 0x_D5, 0x_62, 0x_2A,
	];

	helper(S, BASE, -969);
}
// endregion
// region: s_has_whitespaces_and_minus_3_666_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_3_666_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_09,
		0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_2D, 0x_E7, 0x_48,
		0x_60, 0x_2C, 0x_CB, 0x_61, 0x_61, 0x_07, 0x_DE, 0x_61, 0x_FF, 0x_80, 0x_7A, 0x_37, 0x_F3, 0x_4E, 0x_28,
		0x_59, 0x_C7, 0x_33, 0x_6A, 0x_80, 0x_53, 0x_C7, 0x_C2, 0x_66, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_A0, 0x_E7, 0x_48, 0x_7A, 0x_D0, 0x_03, 0x_66, 0x_69, 0x_7B, 0x_27, 0x_37, 0x_60, 0x_5C, 0x_DA,
		0x_9C, 0x_87, 0x_A7, 0x_93, 0x_C7, 0x_F3, 0x_07, 0x_F9, 0x_80, 0x_61, 0x_59, 0x_53, 0x_DE, 0x_1C, 0x_56,
		0x_4E, 0x_CB, 0x_6A, 0x_9B, 0x_FF, 0x_28, 0x_C9, 0x_C2, 0x_7C, 0x_42, 0x_8B, 0x_33,
	];

	helper(S, BASE, -3_666);
}
// endregion
// region: s_has_whitespaces_and_minus_68_016_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_68_016_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_2D, 0x_6E, 0x_C3, 0x_89, 0x_61, 0x_70, 0x_E0, 0x_95, 0x_67, 0x_67, 0x_95, 0x_CB, 0x_34,
		0x_86, 0x_54, 0x_AC, 0x_F0, 0x_95, 0x_A7, 0x_43, 0x_F2, 0x_F0, 0x_6F, 0x_86, 0x_E4, 0x_32, 0x_32, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_54, 0x_10, 0x_E4, 0x_95, 0x_E3, 0x_17, 0x_98, 0x_A7, 0x_F2, 0x_9D, 0x_EC, 0x_2E, 0x_53, 0x_D5,
		0x_C6, 0x_43, 0x_EB, 0x_89, 0x_34, 0x_AF, 0x_6F, 0x_93, 0x_C3, 0x_CB, 0x_70, 0x_E7, 0x_97, 0x_31, 0x_B8,
		0x_86, 0x_6B, 0x_E0, 0x_32, 0x_67, 0x_0E, 0x_F0, 0x_14, 0x_6E, 0x_E8, 0x_AC, 0x_AE,
	];

	helper(S, BASE, -68_016);
}
// endregion
// region: s_has_whitespaces_and_minus_661_449_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_661_449_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_09,
		0x_20, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_2D,
		0x_7C, 0x_54, 0x_FE, 0x_D1, 0x_01, 0x_C0, 0x_45, 0x_15, 0x_95, 0x_C6, 0x_3D, 0x_C6, 0x_15, 0x_B8, 0x_EC,
		0x_DB, 0x_43, 0x_C0, 0x_7E, 0x_48, 0x_15, 0x_D1, 0x_16, 0x_F1, 0x_15, 0x_8F, 0x_99, 0x_C6, 0x_CF, 0x_3E,
		0x_8B, 0x_9B, 0x_E8, 0x_C0, 0x_3F, 0x_16, 0x_3E, 0x_94, 0x_15, 0x_95, 0x_9B, 0x_3D, 0x_F1, 0x_95, 0x_45,
		0x_3F,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_9B, 0x_45, 0x_1F, 0x_B8, 0x_8F, 0x_7F, 0x_3E, 0x_7C, 0x_43, 0x_FD, 0x_6A, 0x_15, 0x_3D, 0x_CF,
		0x_26, 0x_67, 0x_16, 0x_C6, 0x_F3, 0x_95, 0x_70, 0x_EC, 0x_F1, 0x_48, 0x_94, 0x_99, 0x_DC, 0x_DB, 0x_F0,
		0x_3F, 0x_A6, 0x_B7, 0x_D1, 0x_C0, 0x_E8, 0x_7E, 0x_8B, 0x_54, 0x_1D, 0x_FE, 0x_ED,
	];

	helper(S, BASE, -661_449);
}
// endregion
// region: s_has_whitespaces_and_minus_8_784_152_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_8_784_152_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_0D,
		0x_09, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_0D,
		0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_2D, 0x_ED, 0x_EF, 0x_6F, 0x_A7, 0x_48, 0x_41,
		0x_ED,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_52, 0x_ED, 0x_54, 0x_B2, 0x_F7, 0x_B7, 0x_1C, 0x_9D, 0x_94, 0x_21, 0x_EE, 0x_90, 0x_4C, 0x_A6,
		0x_50, 0x_91, 0x_40, 0x_D3, 0x_CC, 0x_48, 0x_71, 0x_82, 0x_6F, 0x_CB, 0x_B5, 0x_A3, 0x_47, 0x_A7, 0x_FF,
		0x_2E, 0x_11, 0x_F5, 0x_9C, 0x_EF, 0x_C2, 0x_76, 0x_5D, 0x_B0, 0x_78, 0x_08, 0x_80,
	];

	helper(S, BASE, -8_784_152);
}
// endregion
// region: s_has_whitespaces_and_minus_34_124_398_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_34_124_398_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_0D,
		0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_2D, 0x_10, 0x_71, 0x_43, 0x_7F, 0x_7E, 0x_1A, 0x_A0,
		0x_10, 0x_71, 0x_1E, 0x_77, 0x_02, 0x_B4, 0x_4D, 0x_84, 0x_AE, 0x_9A, 0x_50, 0x_1E, 0x_BA, 0x_92, 0x_B4,
		0x_2C, 0x_9B, 0x_26, 0x_BA, 0x_9F, 0x_75, 0x_9F, 0x_BE, 0x_7E, 0x_A1, 0x_58, 0x_43, 0x_50, 0x_50, 0x_2C,
		0x_4D, 0x_A8, 0x_1B, 0x_A8, 0x_C4, 0x_37, 0x_B4, 0x_02, 0x_95, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_AE, 0x_01, 0x_A8, 0x_BE, 0x_1E, 0x_37, 0x_2C, 0x_55, 0x_DE, 0x_10, 0x_4D, 0x_A0, 0x_1C, 0x_50,
		0x_31, 0x_BC, 0x_1B, 0x_A1, 0x_92, 0x_B4, 0x_6C, 0x_9F, 0x_99, 0x_43, 0x_04, 0x_08, 0x_95, 0x_7E, 0x_D1,
		0x_3C, 0x_26, 0x_9A, 0x_77, 0x_75, 0x_84, 0x_58, 0x_7F, 0x_C4, 0x_BA, 0x_71, 0x_02,
	];

	helper(S, BASE, -34_124_398);
}
// endregion
// region: s_has_whitespaces_and_minus_243_504_487_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_243_504_487_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0C,
		0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_2D, 0x_0E, 0x_6F,
		0x_74, 0x_48, 0x_94, 0x_07, 0x_4B, 0x_4C, 0x_7C, 0x_9A, 0x_83, 0x_9A, 0x_14, 0x_EA, 0x_48, 0x_43, 0x_B4,
		0x_DA, 0x_A5, 0x_76, 0x_75, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_0E, 0x_A5, 0x_94, 0x_F9, 0x_80, 0x_7C, 0x_EA, 0x_43, 0x_86, 0x_74, 0x_E8, 0x_DB, 0x_A8, 0x_4E,
		0x_14, 0x_8A, 0x_B3, 0x_83, 0x_54, 0x_DA, 0x_CA, 0x_76, 0x_49, 0x_68, 0x_B4, 0x_41, 0x_88, 0x_AB, 0x_48,
		0x_4C, 0x_BF, 0x_65, 0x_40, 0x_98, 0x_A0, 0x_6F, 0x_07, 0x_95, 0x_51, 0x_9A, 0x_FB,
	];

	helper(S, BASE, -243_504_487);
}
// endregion
// region: s_has_whitespaces_and_minus_1_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_1_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0D,
		0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0B,
		0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_2D, 0x_05, 0x_BD, 0x_1F,
		0x_37, 0x_4D, 0x_FA, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_05, 0x_E8, 0x_46, 0x_55, 0x_E2, 0x_82, 0x_FA, 0x_8A, 0x_23, 0x_D4, 0x_C9, 0x_1B, 0x_78, 0x_84,
		0x_EE, 0x_52, 0x_3B, 0x_54, 0x_B7, 0x_50, 0x_AF, 0x_FB, 0x_FF, 0x_CC, 0x_24, 0x_45, 0x_40, 0x_92, 0x_BF,
		0x_5D, 0x_C7, 0x_36, 0x_71, 0x_FE, 0x_3F, 0x_BA, 0x_1F, 0x_37, 0x_22, 0x_E7, 0x_DC, 0x_F8, 0x_C2, 0x_86,
		0x_69, 0x_4C, 0x_28, 0x_D9, 0x_1D, 0x_21, 0x_A5, 0x_2A, 0x_4D, 0x_9F, 0x_6E, 0x_D3, 0x_0E, 0x_4E, 0x_DB,
		0x_12, 0x_6A, 0x_A3, 0x_93, 0x_4B, 0x_B0, 0x_A1, 0x_A8, 0x_53, 0x_66, 0x_A6, 0x_1E, 0x_25,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_minus_29_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_29_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0B,
		0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0A,
		0x_0C, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_2D, 0x_1F, 0x_93, 0x_A6, 0x_87, 0x_19, 0x_B0, 0x_7A, 0x_52,
		0x_3F, 0x_46, 0x_FE, 0x_99, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_99, 0x_B0, 0x_06, 0x_7A, 0x_7D, 0x_51, 0x_BA, 0x_80, 0x_E0, 0x_46, 0x_3C, 0x_C6, 0x_F0, 0x_72,
		0x_6F, 0x_52, 0x_D2, 0x_34, 0x_F7, 0x_AC, 0x_8E, 0x_68, 0x_90, 0x_C2, 0x_30, 0x_5A, 0x_1C, 0x_29, 0x_1F,
		0x_4A, 0x_C3, 0x_60, 0x_F9, 0x_74, 0x_5C, 0x_CD, 0x_39, 0x_15, 0x_D4, 0x_19, 0x_2C, 0x_D1, 0x_16, 0x_DD,
		0x_F8, 0x_B7, 0x_33, 0x_A4, 0x_03, 0x_F1, 0x_32, 0x_D9, 0x_28, 0x_23, 0x_FE, 0x_A6, 0x_63, 0x_F4, 0x_B1,
		0x_9B, 0x_58, 0x_FB, 0x_C1, 0x_DE, 0x_CF, 0x_3F, 0x_8C, 0x_7F, 0x_E2, 0x_EA, 0x_3A, 0x_87,
	];

	helper(S, BASE, -29);
}
// endregion
// region: s_has_whitespaces_and_minus_278_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_278_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_09,
		0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0D,
		0x_09, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_2D, 0x_EA, 0x_90,
		0x_1D, 0x_66, 0x_9D, 0x_6E, 0x_B3, 0x_A0, 0x_46, 0x_D5, 0x_A2, 0x_C6, 0x_37, 0x_C7, 0x_02, 0x_DB, 0x_B5,
		0x_66, 0x_3D, 0x_DA, 0x_90, 0x_47, 0x_F0, 0x_CE, 0x_8A, 0x_47, 0x_59, 0x_D7, 0x_F0, 0x_57, 0x_46, 0x_69,
		0x_46, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_C6, 0x_37, 0x_C9, 0x_EA, 0x_DA, 0x_33, 0x_7E, 0x_52, 0x_C1, 0x_48, 0x_AD, 0x_9D, 0x_8A, 0x_BA, 0x_15,
		0x_8E, 0x_F9, 0x_79, 0x_49, 0x_F7, 0x_DB, 0x_80, 0x_92, 0x_6E, 0x_4B, 0x_21, 0x_A2, 0x_B3, 0x_FE, 0x_3F,
		0x_C2, 0x_C8, 0x_08, 0x_CE, 0x_F4, 0x_69, 0x_A7, 0x_E9, 0x_F0, 0x_57, 0x_2A, 0x_66, 0x_A8, 0x_D6, 0x_D0,
		0x_C7, 0x_FD, 0x_16, 0x_47, 0x_DE, 0x_42, 0x_D1, 0x_46, 0x_E0, 0x_13, 0x_A0, 0x_02, 0x_DC, 0x_38, 0x_90,
		0x_59, 0x_5F, 0x_17, 0x_B5, 0x_63, 0x_74, 0x_3D, 0x_E2, 0x_D5, 0x_86, 0x_2C, 0x_AC, 0x_D7,
	];

	helper(S, BASE, -278);
}
// endregion
// region: s_has_whitespaces_and_minus_7_532_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_7_532_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0D,
		0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_20, 0x_0D,
		0x_09, 0x_2D, 0x_D2, 0x_DE, 0x_1E, 0x_87, 0x_39, 0x_44, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_D2, 0x_EF, 0x_58, 0x_B2, 0x_44, 0x_7E, 0x_C3, 0x_32, 0x_52, 0x_41, 0x_DF, 0x_D7, 0x_1E, 0x_CB,
		0x_07, 0x_76, 0x_A6, 0x_56, 0x_77, 0x_0E, 0x_11, 0x_84, 0x_57, 0x_94, 0x_F2, 0x_B4, 0x_5D, 0x_E2, 0x_C2,
		0x_DE, 0x_18, 0x_5B, 0x_63, 0x_68, 0x_6F, 0x_A1, 0x_D9, 0x_98, 0x_39, 0x_F7, 0x_B6, 0x_73, 0x_59, 0x_E1,
		0x_8F, 0x_38, 0x_96, 0x_79, 0x_70, 0x_40, 0x_24, 0x_17, 0x_F0, 0x_1D, 0x_A4, 0x_3F, 0x_F1, 0x_85, 0x_4E,
		0x_D1, 0x_93, 0x_E4, 0x_05, 0x_23, 0x_55, 0x_04, 0x_CD, 0x_08, 0x_26, 0x_16, 0x_AD, 0x_A0,
	];

	helper(S, BASE, -7_532);
}
// endregion
// region: s_has_whitespaces_and_minus_27_222_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_27_222_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_20,
		0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_2D, 0x_A8, 0x_A1, 0x_5B, 0x_9B, 0x_69, 0x_4E, 0x_89, 0x_01, 0x_C7,
		0x_66, 0x_66, 0x_A7, 0x_89, 0x_C6, 0x_F7, 0x_84, 0x_37, 0x_2F, 0x_69, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_06, 0x_60, 0x_D1, 0x_E7, 0x_A8, 0x_28, 0x_A1, 0x_4C, 0x_76, 0x_90, 0x_EC, 0x_B9, 0x_69, 0x_1C,
		0x_BB, 0x_52, 0x_66, 0x_D3, 0x_9A, 0x_FF, 0x_F5, 0x_11, 0x_3E, 0x_62, 0x_DF, 0x_1E, 0x_74, 0x_A0, 0x_F3,
		0x_38, 0x_AB, 0x_A7, 0x_4F, 0x_19, 0x_DA, 0x_E2, 0x_53, 0x_EB, 0x_8D, 0x_35, 0x_37, 0x_39, 0x_4E, 0x_C7,
		0x_94, 0x_2E, 0x_01, 0x_84, 0x_BA, 0x_9D, 0x_3D, 0x_72, 0x_B8, 0x_17, 0x_F7, 0x_A3, 0x_C6, 0x_05, 0x_BE,
		0x_BD, 0x_59, 0x_07, 0x_4A, 0x_7B, 0x_FD, 0x_5B, 0x_9C, 0x_98, 0x_C3, 0x_6F, 0x_2F, 0x_51,
	];

	helper(S, BASE, -27_222);
}
// endregion
// region: s_has_whitespaces_and_minus_698_828_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_698_828_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0C,
		0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_20,
		0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_2D, 0x_5B, 0x_E3, 0x_19, 0x_1A,
		0x_1B, 0x_89, 0x_C9, 0x_7C, 0x_B4, 0x_18, 0x_1D, 0x_A5, 0x_FE, 0x_30, 0x_67, 0x_39, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_5B, 0x_4B, 0x_C9, 0x_61, 0x_47, 0x_8F, 0x_F0, 0x_32, 0x_19, 0x_49, 0x_15, 0x_BE, 0x_0F, 0x_4C,
		0x_A9, 0x_26, 0x_18, 0x_94, 0x_06, 0x_58, 0x_1D, 0x_11, 0x_88, 0x_70, 0x_E4, 0x_1C, 0x_D2, 0x_51, 0x_83,
		0x_89, 0x_7C, 0x_C8, 0x_C3, 0x_55, 0x_46, 0x_4F, 0x_25, 0x_57, 0x_30, 0x_B4, 0x_41, 0x_39, 0x_27, 0x_59,
		0x_A5, 0x_E8, 0x_FE, 0x_16, 0x_2E, 0x_ED, 0x_62, 0x_E9, 0x_D3, 0x_3E, 0x_04, 0x_8E, 0x_67, 0x_E3, 0x_14,
		0x_A6, 0x_9E, 0x_2C, 0x_0E, 0x_44, 0x_D7, 0x_C4, 0x_80, 0x_91, 0x_38, 0x_BB, 0x_7A, 0x_1A,
	];

	helper(S, BASE, -698_828);
}
// endregion
// region: s_has_whitespaces_and_minus_6_215_814_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_6_215_814_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_20,
		0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_2D, 0x_79, 0x_F2, 0x_ED,
		0x_E4, 0x_A1, 0x_6E, 0x_B6, 0x_DD, 0x_F2, 0x_E9, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_97, 0x_BB, 0x_FB, 0x_73, 0x_6E, 0x_F9, 0x_5F, 0x_7F, 0x_B6, 0x_E4, 0x_83, 0x_B4, 0x_88, 0x_8A,
		0x_79, 0x_92, 0x_B2, 0x_56, 0x_F8, 0x_21, 0x_5B, 0x_4D, 0x_1A, 0x_57, 0x_3B, 0x_2F, 0x_B3, 0x_37, 0x_53,
		0x_ED, 0x_68, 0x_44, 0x_96, 0x_4C, 0x_C0, 0x_82, 0x_30, 0x_0E, 0x_E6, 0x_66, 0x_DD, 0x_B8, 0x_D0, 0x_3D,
		0x_65, 0x_62, 0x_A7, 0x_DC, 0x_3F, 0x_AE, 0x_01, 0x_E5, 0x_43, 0x_D5, 0x_69, 0x_86, 0x_D1, 0x_1B, 0x_4B,
		0x_47, 0x_DA, 0x_55, 0x_85, 0x_A4, 0x_C6, 0x_75, 0x_C9, 0x_71, 0x_E9, 0x_D8, 0x_F2, 0x_34,
	];

	helper(S, BASE, -6_215_814);
}
// endregion
// region: s_has_whitespaces_and_minus_37_546_395_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_37_546_395_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0C,
		0x_09, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_2D, 0x_C1, 0x_A0, 0x_23, 0x_64, 0x_B5, 0x_AD, 0x_3C, 0x_80,
		0x_98, 0x_80, 0x_7F, 0x_42, 0x_EC, 0x_DA, 0x_B8, 0x_BD, 0x_74, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_C1, 0x_FB, 0x_D4, 0x_EC, 0x_30, 0x_E2, 0x_4B, 0x_AE, 0x_0F, 0x_07, 0x_F7, 0x_58, 0x_B5, 0x_2F,
		0x_42, 0x_0E, 0x_2A, 0x_18, 0x_96, 0x_8A, 0x_55, 0x_66, 0x_A0, 0x_C3, 0x_92, 0x_12, 0x_74, 0x_CE, 0x_43,
		0x_97, 0x_31, 0x_DD, 0x_3D, 0x_80, 0x_8E, 0x_E7, 0x_23, 0x_7F, 0x_29, 0x_E5, 0x_50, 0x_78, 0x_BD, 0x_BE,
		0x_B8, 0x_57, 0x_9D, 0x_3C, 0x_64, 0x_C5, 0x_E3, 0x_53, 0x_03, 0x_06, 0x_EF, 0x_DA, 0x_D0, 0x_F3, 0x_E8,
		0x_A2, 0x_75, 0x_6A, 0x_73, 0x_F9, 0x_CD, 0x_46, 0x_01, 0x_CC, 0x_1E, 0x_BF, 0x_98, 0x_72,
	];

	helper(S, BASE, -37_546_395);
}
// endregion
// region: s_has_whitespaces_and_minus_401_264_637_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_401_264_637_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0C,
		0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0C,
		0x_0C, 0x_0B, 0x_20, 0x_2D, 0x_35, 0x_80, 0x_28, 0x_E5, 0x_E2, 0x_58, 0x_35, 0x_7B, 0x_31, 0x_0F, 0x_1D,
		0x_AA, 0x_41, 0x_77, 0x_5E, 0x_E1, 0x_08, 0x_E1, 0x_28, 0x_8C, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_A1, 0x_9B, 0x_38, 0x_F3, 0x_2F, 0x_71, 0x_22, 0x_7C, 0x_80, 0x_13, 0x_05, 0x_48, 0x_7D, 0x_35,
		0x_40, 0x_6C, 0x_CF, 0x_3C, 0x_D1, 0x_45, 0x_E5, 0x_7F, 0x_6A, 0x_95, 0x_AA, 0x_31, 0x_36, 0x_C4, 0x_3E,
		0x_F8, 0x_9C, 0x_E1, 0x_5F, 0x_BB, 0x_28, 0x_D3, 0x_B1, 0x_77, 0x_25, 0x_83, 0x_7B, 0x_73, 0x_70, 0x_8D,
		0x_C9, 0x_08, 0x_3A, 0x_B8, 0x_4E, 0x_DE, 0x_41, 0x_59, 0x_37, 0x_16, 0x_0F, 0x_10, 0x_96, 0x_AB, 0x_AF,
		0x_EF, 0x_D5, 0x_E2, 0x_14, 0x_BA, 0x_3F, 0x_5E, 0x_FD, 0x_8C, 0x_21, 0x_FA, 0x_AC, 0x_99,
	];

	helper(S, BASE, -401_264_637);
}
// endregion
// region: s_has_whitespaces_and_minus_3_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_3_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0B,
		0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0D,
		0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_2D, 0x_57, 0x_5F, 0x_E8, 0x_8C, 0x_9E, 0x_C4,
		0x_F0, 0x_22, 0x_6A, 0x_88, 0x_28, 0x_B4, 0x_7B, 0x_9E, 0x_98, 0x_3B, 0x_D8, 0x_C1, 0x_AC, 0x_35, 0x_32,
		0x_B4, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_8D, 0x_35, 0x_57, 0x_B3, 0x_28, 0x_BD, 0x_3C, 0x_8C, 0x_89, 0x_1D, 0x_C4, 0x_CA, 0x_DC, 0x_A7,
		0x_87, 0x_E9, 0x_E8, 0x_7B, 0x_65, 0x_12, 0x_D1, 0x_8F, 0x_4A, 0x_76, 0x_7A, 0x_AB, 0x_C6, 0x_C2, 0x_AC,
		0x_DA, 0x_54, 0x_BF, 0x_63, 0x_80, 0x_2C, 0x_A2, 0x_C9, 0x_D4, 0x_A1, 0x_AA, 0x_0E, 0x_43, 0x_66, 0x_05,
		0x_86, 0x_F4, 0x_8E, 0x_C0, 0x_B4, 0x_94, 0x_84, 0x_83, 0x_3B, 0x_16, 0x_88, 0x_24, 0x_A4, 0x_4B, 0x_32,
		0x_ED, 0x_6A, 0x_FD, 0x_FC, 0x_47, 0x_02, 0x_B2, 0x_8A, 0x_95, 0x_BC, 0x_DD, 0x_90, 0x_61, 0x_40, 0x_10,
		0x_41, 0x_9E, 0x_03, 0x_3D, 0x_C5, 0x_F2, 0x_B5, 0x_BA, 0x_F0, 0x_64, 0x_22, 0x_50, 0x_46, 0x_44, 0x_EB,
		0x_CC, 0x_B9, 0x_93, 0x_26, 0x_5A, 0x_D6, 0x_E7, 0x_CB, 0x_FB, 0x_8B, 0x_1C, 0x_BB, 0x_A5, 0x_DF, 0x_98,
		0x_85, 0x_B6, 0x_21, 0x_3A, 0x_C1, 0x_7D, 0x_D8, 0x_4C,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_minus_10_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_10_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_2D, 0x_25, 0x_B9, 0x_22, 0x_12, 0x_17, 0x_44, 0x_63,
		0x_DE, 0x_D5, 0x_A9, 0x_B4, 0x_1D, 0x_A8, 0x_D3, 0x_8A, 0x_BF, 0x_58, 0x_C3, 0x_FC, 0x_AA, 0x_EE, 0x_EC,
		0x_CA, 0x_DD, 0x_4A, 0x_B3, 0x_DD, 0x_02, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_C4, 0x_E7, 0x_26, 0x_44, 0x_A9, 0x_DE, 0x_4A, 0x_7A, 0x_F6, 0x_25, 0x_8D, 0x_AE, 0x_AF, 0x_41,
		0x_EA, 0x_76, 0x_FB, 0x_4C, 0x_A8, 0x_1D, 0x_C9, 0x_58, 0x_73, 0x_81, 0x_C6, 0x_C5, 0x_BF, 0x_3F, 0x_22,
		0x_FC, 0x_10, 0x_DD, 0x_A5, 0x_6E, 0x_70, 0x_0E, 0x_AA, 0x_78, 0x_D3, 0x_D5, 0x_3C, 0x_C8, 0x_9A, 0x_D7,
		0x_C2, 0x_40, 0x_21, 0x_88, 0x_D1, 0x_89, 0x_F7, 0x_7E, 0x_D4, 0x_14, 0x_5B, 0x_E4, 0x_97, 0x_27, 0x_34,
		0x_98, 0x_42, 0x_5C, 0x_75, 0x_63, 0x_02, 0x_FF, 0x_11, 0x_CD, 0x_33, 0x_9D, 0x_4D, 0x_17, 0x_CC, 0x_B4,
		0x_48, 0x_52, 0x_4B, 0x_EF, 0x_82, 0x_EC, 0x_64, 0x_79, 0x_8B, 0x_BA, 0x_CA, 0x_BC, 0x_A2, 0x_65, 0x_83,
		0x_93, 0x_3B, 0x_2C, 0x_E3, 0x_54, 0x_E8, 0x_FE, 0x_D8, 0x_EE, 0x_12, 0x_8A, 0x_5F, 0x_3A, 0x_15, 0x_C3,
		0x_37, 0x_B2, 0x_B3, 0x_55, 0x_CE, 0x_68, 0x_05, 0x_F4,
	];

	helper(S, BASE, -10);
}
// endregion
// region: s_has_whitespaces_and_minus_482_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_482_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_0D,
		0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_2D, 0x_F8, 0x_AA, 0x_30, 0x_73, 0x_FD, 0x_0F, 0x_1F, 0x_1A, 0x_27,
		0x_EB, 0x_AC, 0x_AE, 0x_BA, 0x_8F, 0x_5A, 0x_D3, 0x_39, 0x_E0, 0x_B3, 0x_45, 0x_7D, 0x_E9, 0x_56, 0x_27,
		0x_1B, 0x_2E, 0x_E3, 0x_5F, 0x_87, 0x_49, 0x_9C, 0x_AE, 0x_1F, 0x_EE, 0x_86, 0x_BD, 0x_E1, 0x_08, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_13, 0x_49, 0x_4D, 0x_F8, 0x_0E, 0x_A4, 0x_F6, 0x_69, 0x_56, 0x_58, 0x_F1, 0x_7B, 0x_AC, 0x_1F,
		0x_6E, 0x_ED, 0x_35, 0x_EE, 0x_34, 0x_99, 0x_85, 0x_5B, 0x_0F, 0x_63, 0x_D3, 0x_4F, 0x_1A, 0x_B4, 0x_E6,
		0x_AA, 0x_45, 0x_43, 0x_2C, 0x_EC, 0x_39, 0x_55, 0x_96, 0x_E9, 0x_25, 0x_82, 0x_40, 0x_A5, 0x_5A, 0x_11,
		0x_FC, 0x_E5, 0x_3E, 0x_84, 0x_B3, 0x_1E, 0x_BA, 0x_D2, 0x_1C, 0x_22, 0x_D4, 0x_E0, 0x_E8, 0x_B8, 0x_BE,
		0x_75, 0x_5C, 0x_BD, 0x_17, 0x_68, 0x_F2, 0x_E4, 0x_54, 0x_36, 0x_C3, 0x_F7, 0x_1B, 0x_93, 0x_B1, 0x_86,
		0x_FA, 0x_08, 0x_9C, 0x_8E, 0x_E3, 0x_98, 0x_2E, 0x_8F, 0x_19, 0x_28, 0x_80, 0x_7D, 0x_72, 0x_E1, 0x_C1,
		0x_03, 0x_87, 0x_AE, 0x_B5, 0x_37, 0x_94, 0x_44, 0x_16, 0x_EB, 0x_73, 0x_A1, 0x_47, 0x_A8, 0x_C4, 0x_8C,
		0x_FD, 0x_79, 0x_6C, 0x_27, 0x_18, 0x_5F, 0x_52, 0x_26,
	];

	helper(S, BASE, -482);
}
// endregion
// region: s_has_whitespaces_and_minus_7_808_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_7_808_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_2D, 0x_32, 0x_DD, 0x_B6, 0x_4F, 0x_F6, 0x_BB, 0x_DC, 0x_50, 0x_77, 0x_AA, 0x_A0, 0x_1A,
		0x_25, 0x_F6, 0x_A1, 0x_66, 0x_A9, 0x_91, 0x_96, 0x_42, 0x_CE, 0x_55, 0x_E6, 0x_F8, 0x_23, 0x_40, 0x_91,
		0x_83, 0x_38, 0x_7E, 0x_16, 0x_A6, 0x_C9, 0x_37, 0x_0F,
	];
	const BASE: &[u8] = &[
		0x_66, 0x_50, 0x_CC, 0x_AC, 0x_30, 0x_08, 0x_1F, 0x_37, 0x_71, 0x_73, 0x_D9, 0x_DD, 0x_93, 0x_52, 0x_1B,
		0x_74, 0x_C9, 0x_55, 0x_A3, 0x_FF, 0x_B1, 0x_A5, 0x_E8, 0x_40, 0x_C5, 0x_B8, 0x_A0, 0x_80, 0x_83, 0x_E6,
		0x_77, 0x_CA, 0x_A6, 0x_8A, 0x_CF, 0x_F6, 0x_D3, 0x_75, 0x_BB, 0x_27, 0x_C1, 0x_25, 0x_F8, 0x_A4, 0x_59,
		0x_78, 0x_94, 0x_9A, 0x_BD, 0x_5C, 0x_C4, 0x_98, 0x_DC, 0x_AA, 0x_B9, 0x_13, 0x_1C, 0x_E1, 0x_D1, 0x_FE,
		0x_16, 0x_96, 0x_57, 0x_A9, 0x_C8, 0x_88, 0x_F2, 0x_12, 0x_DF, 0x_32, 0x_97, 0x_C0, 0x_CB, 0x_CD, 0x_F0,
		0x_6F, 0x_7E, 0x_1D, 0x_89, 0x_02, 0x_2F, 0x_81, 0x_44, 0x_0F, 0x_1A, 0x_3D, 0x_01, 0x_5D, 0x_38, 0x_CE,
		0x_4F, 0x_7B, 0x_B7, 0x_BA, 0x_E9, 0x_B3, 0x_42, 0x_A1, 0x_5A, 0x_36, 0x_4B, 0x_28, 0x_1E, 0x_06, 0x_90,
		0x_EE, 0x_91, 0x_B2, 0x_79, 0x_22, 0x_C7, 0x_23, 0x_14,
	];

	helper(S, BASE, -7_808);
}
// endregion
// region: s_has_whitespaces_and_minus_71_449_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_71_449_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_20,
		0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0C,
		0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_2D, 0x_6E, 0x_A1, 0x_BF, 0x_23, 0x_CC, 0x_1E, 0x_4E, 0x_86,
		0x_8E, 0x_8A, 0x_CE, 0x_5F, 0x_B8, 0x_6E, 0x_EE, 0x_75, 0x_6E, 0x_46, 0x_B1, 0x_BF, 0x_44, 0x_FC, 0x_66,
		0x_EE, 0x_BD, 0x_5F, 0x_F3, 0x_CE, 0x_18, 0x_D5, 0x_10, 0x_46, 0x_DF, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_D3, 0x_41, 0x_10, 0x_FF, 0x_6E, 0x_C7, 0x_C0, 0x_EF, 0x_CC, 0x_FE, 0x_62, 0x_38, 0x_ED, 0x_7F,
		0x_9F, 0x_EB, 0x_74, 0x_F5, 0x_5A, 0x_1A, 0x_78, 0x_AE, 0x_E6, 0x_35, 0x_DD, 0x_D4, 0x_44, 0x_27, 0x_A7,
		0x_63, 0x_CD, 0x_A5, 0x_BF, 0x_12, 0x_F4, 0x_15, 0x_8C, 0x_FC, 0x_9B, 0x_9D, 0x_E2, 0x_F0, 0x_CE, 0x_3B,
		0x_F6, 0x_77, 0x_50, 0x_3A, 0x_6B, 0x_D5, 0x_96, 0x_6D, 0x_19, 0x_3F, 0x_B8, 0x_2A, 0x_EC, 0x_97, 0x_66,
		0x_01, 0x_BD, 0x_B1, 0x_2F, 0x_F3, 0x_DA, 0x_73, 0x_A1, 0x_D7, 0x_4E, 0x_46, 0x_8E, 0x_68, 0x_F2, 0x_E0,
		0x_DF, 0x_CB, 0x_D1, 0x_31, 0x_86, 0x_07, 0x_0F, 0x_55, 0x_18, 0x_43, 0x_52, 0x_60, 0x_9E, 0x_95, 0x_75,
		0x_5E, 0x_81, 0x_49, 0x_D2, 0x_F1, 0x_7B, 0x_1D, 0x_30, 0x_8A, 0x_33, 0x_B0, 0x_28, 0x_05, 0x_C3, 0x_11,
		0x_1E, 0x_EE, 0x_C6, 0x_22, 0x_91, 0x_82, 0x_26, 0x_B6,
	];

	helper(S, BASE, -71_449);
}
// endregion
// region: s_has_whitespaces_and_minus_600_946_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_600_946_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_20,
		0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_0C,
		0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_2D, 0x_A3, 0x_A6, 0x_35, 0x_AC, 0x_C7, 0x_44, 0x_36, 0x_DB, 0x_19, 0x_8D,
		0x_33, 0x_62, 0x_FA, 0x_E6, 0x_76, 0x_3D, 0x_A6, 0x_66, 0x_42, 0x_A6, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_EB, 0x_C1, 0x_BF, 0x_92, 0x_89, 0x_62, 0x_A6, 0x_83, 0x_13, 0x_26, 0x_4E, 0x_35, 0x_3F, 0x_27,
		0x_E8, 0x_1C, 0x_E6, 0x_44, 0x_9F, 0x_88, 0x_5D, 0x_74, 0x_9E, 0x_96, 0x_7C, 0x_6B, 0x_93, 0x_5C, 0x_84,
		0x_D2, 0x_29, 0x_07, 0x_4C, 0x_33, 0x_02, 0x_36, 0x_99, 0x_C3, 0x_C8, 0x_16, 0x_B5, 0x_B1, 0x_47, 0x_F4,
		0x_F8, 0x_51, 0x_A3, 0x_C6, 0x_FA, 0x_31, 0x_E5, 0x_14, 0x_8D, 0x_78, 0x_7B, 0x_5F, 0x_E7, 0x_90, 0x_DB,
		0x_01, 0x_19, 0x_9D, 0x_F9, 0x_68, 0x_A9, 0x_FF, 0x_42, 0x_FE, 0x_1A, 0x_66, 0x_76, 0x_E0, 0x_AA, 0x_91,
		0x_F0, 0x_9A, 0x_54, 0x_65, 0x_15, 0x_77, 0x_81, 0x_4A, 0x_72, 0x_82, 0x_17, 0x_06, 0x_BD, 0x_A4, 0x_97,
		0x_D9, 0x_64, 0x_B3, 0x_AF, 0x_95, 0x_6F, 0x_80, 0x_CC, 0x_BA, 0x_C9, 0x_D5, 0x_34, 0x_B8, 0x_FC, 0x_E2,
		0x_B4, 0x_C7, 0x_3D, 0x_AD, 0x_75, 0x_7D, 0x_8E, 0x_BB,
	];

	helper(S, BASE, -600_946);
}
// endregion
// region: s_has_whitespaces_and_minus_9_372_023_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_9_372_023_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0B,
		0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_20,
		0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_2D, 0x_6A, 0x_30, 0x_3D, 0x_92, 0x_B8, 0x_A2, 0x_56, 0x_3C, 0x_AB,
		0x_8D, 0x_A2, 0x_A0, 0x_47, 0x_3C, 0x_A7, 0x_2A, 0x_3E, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_A0, 0x_A1, 0x_DD, 0x_33, 0x_4C, 0x_83, 0x_6A, 0x_2F, 0x_3E, 0x_45, 0x_61, 0x_C6, 0x_81, 0x_B2, 0x_AC,
		0x_15, 0x_40, 0x_EB, 0x_AA, 0x_E5, 0x_23, 0x_50, 0x_57, 0x_14, 0x_21, 0x_59, 0x_7D, 0x_A2, 0x_1A, 0x_92,
		0x_86, 0x_8A, 0x_29, 0x_79, 0x_B0, 0x_BC, 0x_CE, 0x_8C, 0x_87, 0x_43, 0x_5E, 0x_56, 0x_55, 0x_7B, 0x_44,
		0x_98, 0x_A7, 0x_CB, 0x_E6, 0x_AB, 0x_8D, 0x_7C, 0x_AF, 0x_18, 0x_10, 0x_30, 0x_5D, 0x_C1, 0x_96, 0x_69,
		0x_1C, 0x_22, 0x_84, 0x_93, 0x_63, 0x_C9, 0x_BB, 0x_78, 0x_1E, 0x_D8, 0x_C0, 0x_EC, 0x_6E, 0x_3C, 0x_5A,
		0x_5C, 0x_E4, 0x_89, 0x_02, 0x_F7, 0x_CC, 0x_62, 0x_B6, 0x_05, 0x_B9, 0x_77, 0x_3B, 0x_06, 0x_D3, 0x_BA,
		0x_A3, 0x_76, 0x_72, 0x_07, 0x_E8, 0x_F4, 0x_7E, 0x_2A, 0x_D5, 0x_5B, 0x_F2, 0x_35, 0x_16, 0x_46, 0x_47,
		0x_9C, 0x_66, 0x_08, 0x_97, 0x_3D, 0x_BE, 0x_C7, 0x_24,
	];

	helper(S, BASE, -9_372_023);
}
// endregion
// region: s_has_whitespaces_and_minus_30_647_931_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_30_647_931_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0A,
		0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0B,
		0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_2D, 0x_C7, 0x_B6, 0x_14, 0x_11, 0x_93, 0x_F4, 0x_DE, 0x_58, 0x_31,
		0x_9A, 0x_61, 0x_CF, 0x_B1, 0x_60, 0x_BF, 0x_34, 0x_31, 0x_21, 0x_B2, 0x_3B, 0x_BC, 0x_AA, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_AD, 0x_F1, 0x_31, 0x_39, 0x_64, 0x_9F, 0x_CF, 0x_2A, 0x_B9, 0x_24, 0x_DC, 0x_A3, 0x_D4, 0x_89,
		0x_81, 0x_96, 0x_E2, 0x_5B, 0x_59, 0x_14, 0x_C7, 0x_3B, 0x_95, 0x_6E, 0x_D6, 0x_FD, 0x_B6, 0x_60, 0x_B1,
		0x_52, 0x_6C, 0x_D5, 0x_F4, 0x_DE, 0x_56, 0x_A2, 0x_BD, 0x_91, 0x_F7, 0x_3E, 0x_E9, 0x_EF, 0x_DB, 0x_30,
		0x_10, 0x_42, 0x_7C, 0x_BF, 0x_CA, 0x_49, 0x_21, 0x_D0, 0x_3F, 0x_D2, 0x_53, 0x_EA, 0x_CB, 0x_8F, 0x_EC,
		0x_36, 0x_0F, 0x_5D, 0x_DD, 0x_F9, 0x_07, 0x_A4, 0x_DF, 0x_70, 0x_03, 0x_87, 0x_11, 0x_EB, 0x_B0, 0x_8B,
		0x_0E, 0x_CC, 0x_C5, 0x_65, 0x_7F, 0x_58, 0x_41, 0x_8C, 0x_67, 0x_44, 0x_55, 0x_61, 0x_C6, 0x_BC, 0x_4A,
		0x_E7, 0x_AF, 0x_05, 0x_34, 0x_4B, 0x_B4, 0x_18, 0x_CE, 0x_02, 0x_94, 0x_25, 0x_B2, 0x_8E, 0x_BA, 0x_D7,
		0x_FC, 0x_FE, 0x_9C, 0x_9A, 0x_D8, 0x_AA, 0x_46, 0x_8A,
	];

	helper(S, BASE, -30_647_931);
}
// endregion
// region: s_has_whitespaces_and_minus_987_133_870_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_987_133_870_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_0C,
		0x_20, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_2D, 0x_DD, 0x_DD, 0x_C9, 0x_DD, 0x_F0, 0x_4D, 0x_B4,
		0x_9D, 0x_39, 0x_5C, 0x_9F, 0x_B6, 0x_AB, 0x_C8, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_57, 0x_3C, 0x_DB, 0x_3D, 0x_65, 0x_DD, 0x_E3, 0x_C1, 0x_4F, 0x_B7, 0x_56, 0x_5C, 0x_89, 0x_4A,
		0x_C9, 0x_C8, 0x_DC, 0x_78, 0x_15, 0x_FB, 0x_84, 0x_DA, 0x_39, 0x_66, 0x_B2, 0x_7C, 0x_F5, 0x_75, 0x_CB,
		0x_CC, 0x_D3, 0x_71, 0x_B6, 0x_7D, 0x_94, 0x_6B, 0x_8C, 0x_AA, 0x_76, 0x_A1, 0x_3F, 0x_99, 0x_50, 0x_93,
		0x_55, 0x_45, 0x_90, 0x_AB, 0x_64, 0x_EE, 0x_EA, 0x_67, 0x_9F, 0x_88, 0x_86, 0x_A7, 0x_01, 0x_FD, 0x_B8,
		0x_D0, 0x_03, 0x_5B, 0x_FF, 0x_92, 0x_2C, 0x_B5, 0x_31, 0x_46, 0x_C7, 0x_81, 0x_24, 0x_C0, 0x_87, 0x_6F,
		0x_70, 0x_A9, 0x_D6, 0x_2E, 0x_59, 0x_AD, 0x_49, 0x_E7, 0x_4E, 0x_F6, 0x_63, 0x_97, 0x_6A, 0x_18, 0x_D5,
		0x_E6, 0x_A4, 0x_FE, 0x_CA, 0x_DE, 0x_79, 0x_B4, 0x_3A, 0x_25, 0x_91, 0x_69, 0x_6E, 0x_7F, 0x_E4, 0x_23,
		0x_29, 0x_0F, 0x_68, 0x_12, 0x_F0, 0x_9D, 0x_35, 0x_37,
	];

	helper(S, BASE, -987_133_870);
}
// endregion
// region: s_has_whitespaces_and_minus_2_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_2_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0D,
		0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0A,
		0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_2D, 0x_BE, 0x_ED, 0x_54, 0x_2C, 0x_7C,
		0x_F2, 0x_42, 0x_E0, 0x_64, 0x_95, 0x_7A, 0x_44, 0x_8A, 0x_B3, 0x_76, 0x_6D, 0x_F3, 0x_BB, 0x_37, 0x_8E,
		0x_42, 0x_FB, 0x_45, 0x_30, 0x_2C, 0x_79, 0x_4F, 0x_8A, 0x_52, 0x_42, 0x_BA, 0x_8F, 0x_F4, 0x_C6, 0x_82,
		0x_AE, 0x_99,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_7C, 0x_BE, 0x_B0, 0x_65, 0x_5C, 0x_D6, 0x_DF, 0x_AC, 0x_23, 0x_61, 0x_E0, 0x_E3, 0x_4F, 0x_EE,
		0x_11, 0x_1A, 0x_F0, 0x_C6, 0x_7A, 0x_15, 0x_C9, 0x_F9, 0x_52, 0x_44, 0x_43, 0x_42, 0x_8C, 0x_BC, 0x_3D,
		0x_1C, 0x_32, 0x_21, 0x_5D, 0x_92, 0x_70, 0x_33, 0x_A9, 0x_1F, 0x_5A, 0x_8A, 0x_39, 0x_45, 0x_53, 0x_66,
		0x_5B, 0x_73, 0x_C4, 0x_8E, 0x_79, 0x_81, 0x_91, 0x_94, 0x_E7, 0x_C1, 0x_2A, 0x_C3, 0x_97, 0x_62, 0x_F4,
		0x_4A, 0x_FB, 0x_D8, 0x_A7, 0x_69, 0x_86, 0x_8B, 0x_FA, 0x_3F, 0x_02, 0x_7B, 0x_6B, 0x_1B, 0x_B2, 0x_0E,
		0x_1D, 0x_D9, 0x_A4, 0x_3A, 0x_D7, 0x_B5, 0x_68, 0x_4C, 0x_12, 0x_59, 0x_DB, 0x_98, 0x_13, 0x_54, 0x_08,
		0x_76, 0x_EC, 0x_F2, 0x_28, 0x_C8, 0x_EF, 0x_38, 0x_99, 0x_35, 0x_7D, 0x_DA, 0x_F8, 0x_95, 0x_1E, 0x_A2,
		0x_7E, 0x_2F, 0x_80, 0x_40, 0x_60, 0x_22, 0x_16, 0x_C5, 0x_E4, 0x_B3, 0x_CB, 0x_E6, 0x_9A, 0x_BA, 0x_BB,
		0x_AB, 0x_63, 0x_F1, 0x_41, 0x_2C, 0x_84, 0x_8F, 0x_FE, 0x_82, 0x_EB, 0x_AA, 0x_CD, 0x_04, 0x_17, 0x_85,
		0x_E9, 0x_4D, 0x_10, 0x_46, 0x_37, 0x_77, 0x_F3, 0x_A5, 0x_B4, 0x_30, 0x_3B, 0x_A3, 0x_FF, 0x_DE, 0x_A8,
		0x_50, 0x_57, 0x_75, 0x_49, 0x_18, 0x_47, 0x_A6, 0x_AE, 0x_27, 0x_72, 0x_A1, 0x_E1, 0x_7F, 0x_9F, 0x_51,
		0x_24, 0x_BD, 0x_F6, 0x_0F, 0x_01, 0x_14, 0x_88, 0x_6D, 0x_CF, 0x_FD, 0x_87, 0x_2E, 0x_19, 0x_9B, 0x_58,
		0x_D1, 0x_B9, 0x_83, 0x_CC, 0x_64, 0x_C2, 0x_25, 0x_DD, 0x_D5, 0x_36, 0x_3C, 0x_A0, 0x_90,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_whitespaces_and_minus_86_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_86_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0A,
		0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_09, 0x_0A,
		0x_09, 0x_0D, 0x_0A, 0x_2D, 0x_70, 0x_83, 0x_27, 0x_C5, 0x_DE, 0x_38, 0x_F2, 0x_66, 0x_C5, 0x_FA, 0x_CF,
		0x_A4, 0x_FC, 0x_EF, 0x_24, 0x_5D, 0x_A8, 0x_B4, 0x_D3, 0x_70, 0x_DC, 0x_38, 0x_88, 0x_EB, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_F1, 0x_19, 0x_E2, 0x_84, 0x_7C, 0x_B7, 0x_FE, 0x_35, 0x_A8, 0x_65, 0x_06, 0x_73, 0x_7D, 0x_04,
		0x_01, 0x_B5, 0x_7E, 0x_DF, 0x_79, 0x_BA, 0x_2E, 0x_7F, 0x_16, 0x_DB, 0x_93, 0x_68, 0x_D7, 0x_21, 0x_88,
		0x_B9, 0x_A9, 0x_64, 0x_CF, 0x_A1, 0x_C7, 0x_31, 0x_FA, 0x_2A, 0x_F6, 0x_32, 0x_85, 0x_8A, 0x_12, 0x_E5,
		0x_86, 0x_23, 0x_3D, 0x_29, 0x_71, 0x_BB, 0x_BE, 0x_FF, 0x_E1, 0x_4F, 0x_FB, 0x_53, 0x_89, 0x_25, 0x_8D,
		0x_D8, 0x_D6, 0x_3F, 0x_98, 0x_B3, 0x_38, 0x_B0, 0x_08, 0x_DD, 0x_C5, 0x_F5, 0x_41, 0x_6A, 0x_7B, 0x_DC,
		0x_A7, 0x_66, 0x_DA, 0x_FC, 0x_33, 0x_34, 0x_B4, 0x_2F, 0x_AA, 0x_1F, 0x_D1, 0x_70, 0x_AE, 0x_EE, 0x_97,
		0x_EA, 0x_CD, 0x_F4, 0x_18, 0x_6C, 0x_40, 0x_2C, 0x_59, 0x_1B, 0x_A4, 0x_8E, 0x_47, 0x_49, 0x_27, 0x_80,
		0x_46, 0x_87, 0x_C1, 0x_58, 0x_82, 0x_9D, 0x_81, 0x_AF, 0x_8B, 0x_13, 0x_E8, 0x_9E, 0x_C2, 0x_51, 0x_07,
		0x_D5, 0x_EF, 0x_E0, 0x_95, 0x_56, 0x_54, 0x_28, 0x_6D, 0x_AB, 0x_FD, 0x_9F, 0x_CE, 0x_CA, 0x_A3, 0x_EB,
		0x_91, 0x_99, 0x_48, 0x_52, 0x_24, 0x_5B, 0x_F2, 0x_5C, 0x_BC, 0x_9B, 0x_78, 0x_ED, 0x_6B, 0x_05, 0x_AD,
		0x_7A, 0x_4A, 0x_B8, 0x_C0, 0x_9A, 0x_D3, 0x_A0, 0x_BF, 0x_C4, 0x_F7, 0x_5D, 0x_92, 0x_D0, 0x_45, 0x_10,
		0x_B6, 0x_36, 0x_6E, 0x_5A, 0x_B2, 0x_55, 0x_43, 0x_D2, 0x_37, 0x_1C, 0x_77, 0x_E3, 0x_57, 0x_6F, 0x_76,
		0x_B1, 0x_3C, 0x_14, 0x_8F, 0x_D4, 0x_1E, 0x_44, 0x_CB, 0x_DE, 0x_A5, 0x_E9, 0x_03, 0x_22,
	];

	helper(S, BASE, -86);
}
// endregion
// region: s_has_whitespaces_and_minus_630_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_630_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0D,
		0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_2D, 0x_C1,
		0x_E9, 0x_EB, 0x_D9, 0x_21, 0x_98, 0x_0E, 0x_FC, 0x_F7, 0x_5A, 0x_AA, 0x_ED, 0x_54, 0x_C9, 0x_B7, 0x_57,
		0x_88, 0x_04, 0x_AC, 0x_CE, 0x_83, 0x_CF, 0x_A2, 0x_41, 0x_FA, 0x_3D, 0x_8C, 0x_D1, 0x_38, 0x_45, 0x_95,
		0x_9E, 0x_FE, 0x_C4, 0x_5B, 0x_57, 0x_BE, 0x_D1, 0x_70, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_56, 0x_3B, 0x_C1, 0x_ED, 0x_79, 0x_0F, 0x_A3, 0x_89, 0x_9A, 0x_A9, 0x_AF, 0x_5C, 0x_2F, 0x_44,
		0x_68, 0x_41, 0x_CE, 0x_EA, 0x_AC, 0x_03, 0x_A6, 0x_9D, 0x_6B, 0x_CF, 0x_3F, 0x_30, 0x_39, 0x_C8, 0x_05,
		0x_B4, 0x_14, 0x_31, 0x_AB, 0x_22, 0x_C3, 0x_D2, 0x_42, 0x_5F, 0x_33, 0x_83, 0x_07, 0x_BC, 0x_8C, 0x_36,
		0x_DD, 0x_FE, 0x_91, 0x_92, 0x_9B, 0x_50, 0x_E9, 0x_60, 0x_1B, 0x_25, 0x_11, 0x_D8, 0x_59, 0x_C4, 0x_F8,
		0x_4C, 0x_95, 0x_D1, 0x_E0, 0x_52, 0x_08, 0x_17, 0x_94, 0x_45, 0x_BB, 0x_7F, 0x_10, 0x_53, 0x_FA, 0x_38,
		0x_1A, 0x_EE, 0x_34, 0x_7E, 0x_A8, 0x_B8, 0x_78, 0x_A7, 0x_DA, 0x_18, 0x_C7, 0x_A2, 0x_61, 0x_55, 0x_3A,
		0x_70, 0x_C2, 0x_E1, 0x_BE, 0x_46, 0x_FF, 0x_6D, 0x_5E, 0x_D7, 0x_23, 0x_90, 0x_FB, 0x_66, 0x_74, 0x_5B,
		0x_FC, 0x_4E, 0x_04, 0x_3E, 0x_E4, 0x_A0, 0x_D0, 0x_E5, 0x_40, 0x_EF, 0x_85, 0x_73, 0x_80, 0x_CB, 0x_B0,
		0x_C5, 0x_D6, 0x_FD, 0x_54, 0x_3C, 0x_7D, 0x_65, 0x_D3, 0x_97, 0x_1F, 0x_9E, 0x_9C, 0x_71, 0x_86, 0x_98,
		0x_1E, 0x_21, 0x_32, 0x_0E, 0x_87, 0x_B6, 0x_B2, 0x_B3, 0x_DC, 0x_2C, 0x_35, 0x_57, 0x_81, 0x_F2, 0x_4D,
		0x_3D, 0x_12, 0x_E8, 0x_5A, 0x_7A, 0x_F7, 0x_93, 0x_F6, 0x_96, 0x_28, 0x_51, 0x_02, 0x_CA, 0x_AA, 0x_CD,
		0x_1D, 0x_BF, 0x_49, 0x_6F, 0x_43, 0x_B1, 0x_6A, 0x_48, 0x_06, 0x_5D, 0x_BD, 0x_F0, 0x_C9, 0x_B9, 0x_8F,
		0x_77, 0x_B7, 0x_CC, 0x_29, 0x_7B, 0x_72, 0x_C6, 0x_D9, 0x_4B, 0x_88, 0x_F1, 0x_26, 0x_E2,
	];

	helper(S, BASE, -630);
}
// endregion
// region: s_has_whitespaces_and_minus_6_823_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_6_823_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_2D,
		0x_C4, 0x_27, 0x_E0, 0x_C2, 0x_08, 0x_56, 0x_36, 0x_A4, 0x_C9, 0x_F7, 0x_E2, 0x_FE, 0x_24, 0x_85, 0x_D3,
		0x_5C, 0x_92, 0x_CC, 0x_84, 0x_56, 0x_4E, 0x_1C, 0x_FA, 0x_55, 0x_06, 0x_CB, 0x_AE, 0x_9C, 0x_06, 0x_D6,
		0x_26, 0x_6E, 0x_01, 0x_C8, 0x_37, 0x_E1, 0x_AE, 0x_C3, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_69, 0x_8F, 0x_FC, 0x_36, 0x_C6, 0x_9D, 0x_ED, 0x_E2, 0x_22, 0x_4C, 0x_90, 0x_77, 0x_84, 0x_66,
		0x_5A, 0x_A4, 0x_7C, 0x_AD, 0x_B1, 0x_A8, 0x_7D, 0x_56, 0x_93, 0x_92, 0x_44, 0x_D3, 0x_C2, 0x_50, 0x_62,
		0x_9A, 0x_31, 0x_72, 0x_81, 0x_98, 0x_C4, 0x_BB, 0x_E1, 0x_1C, 0x_6A, 0x_24, 0x_F8, 0x_88, 0x_FD, 0x_4F,
		0x_94, 0x_67, 0x_AB, 0x_FE, 0x_71, 0x_D6, 0x_F7, 0x_9C, 0x_EF, 0x_B3, 0x_3C, 0x_FF, 0x_0E, 0x_18, 0x_08,
		0x_B9, 0x_8C, 0x_13, 0x_2E, 0x_76, 0x_C3, 0x_7A, 0x_41, 0x_27, 0x_6C, 0x_96, 0x_B2, 0x_A6, 0x_E7, 0x_57,
		0x_16, 0x_D0, 0x_2C, 0x_BC, 0x_D2, 0x_3B, 0x_1A, 0x_7E, 0x_78, 0x_61, 0x_26, 0x_19, 0x_03, 0x_C8, 0x_EA,
		0x_8B, 0x_15, 0x_DF, 0x_A2, 0x_6B, 0x_02, 0x_75, 0x_05, 0x_2F, 0x_FB, 0x_CC, 0x_89, 0x_F5, 0x_4E, 0x_38,
		0x_A1, 0x_28, 0x_68, 0x_E3, 0x_63, 0x_52, 0x_B7, 0x_74, 0x_59, 0x_C1, 0x_85, 0x_33, 0x_1E, 0x_23, 0x_EC,
		0x_1B, 0x_55, 0x_C9, 0x_21, 0x_01, 0x_5E, 0x_AC, 0x_3E, 0x_4D, 0x_58, 0x_12, 0x_BF, 0x_B6, 0x_86, 0x_6F,
		0x_80, 0x_32, 0x_35, 0x_9F, 0x_64, 0x_E5, 0x_48, 0x_10, 0x_99, 0x_65, 0x_97, 0x_EB, 0x_A3, 0x_F4, 0x_1D,
		0x_FA, 0x_5D, 0x_AA, 0x_DD, 0x_D4, 0x_14, 0x_06, 0x_CF, 0x_9B, 0x_49, 0x_82, 0x_51, 0x_D5, 0x_F1, 0x_AF,
		0x_C7, 0x_8E, 0x_6E, 0x_29, 0x_6D, 0x_AE, 0x_BA, 0x_37, 0x_25, 0x_11, 0x_95, 0x_47, 0x_CD, 0x_F3, 0x_D7,
		0x_91, 0x_CB, 0x_2A, 0x_C0, 0x_4A, 0x_5F, 0x_F0, 0x_5C, 0x_04, 0x_7F, 0x_B8, 0x_C5, 0x_F9,
	];

	helper(S, BASE, -6_823);
}
// endregion
// region: s_has_whitespaces_and_minus_40_279_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_40_279_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0C,
		0x_0B, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_20,
		0x_0C, 0x_20, 0x_09, 0x_2D, 0x_5A, 0x_0F, 0x_2C, 0x_99, 0x_3D, 0x_17, 0x_93, 0x_76, 0x_CB, 0x_7D, 0x_61,
		0x_4A, 0x_3E, 0x_6E, 0x_CE, 0x_72, 0x_0F, 0x_82, 0x_24, 0x_E2, 0x_34, 0x_75, 0x_B8, 0x_DD, 0x_59, 0x_DD,
		0x_FA, 0x_8F, 0x_0E, 0x_D3, 0x_2C, 0x_62, 0x_04, 0x_42, 0x_D7, 0x_7D, 0x_5B,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_5A, 0x_92, 0x_B1, 0x_DD, 0x_9E, 0x_70, 0x_9A, 0x_4A, 0x_1E, 0x_10, 0x_16, 0x_4E, 0x_C5, 0x_9C,
		0x_0F, 0x_A5, 0x_AE, 0x_37, 0x_74, 0x_A3, 0x_8B, 0x_B3, 0x_57, 0x_2A, 0x_95, 0x_B8, 0x_13, 0x_B4, 0x_77,
		0x_96, 0x_F7, 0x_7E, 0x_E7, 0x_17, 0x_24, 0x_55, 0x_C9, 0x_3A, 0x_51, 0x_C7, 0x_A0, 0x_04, 0x_54, 0x_E9,
		0x_EE, 0x_CD, 0x_A4, 0x_8D, 0x_40, 0x_F2, 0x_EF, 0x_D7, 0x_64, 0x_7F, 0x_A8, 0x_29, 0x_26, 0x_75, 0x_E0,
		0x_12, 0x_C1, 0x_90, 0x_1D, 0x_EC, 0x_08, 0x_07, 0x_5E, 0x_D8, 0x_67, 0x_30, 0x_9F, 0x_6A, 0x_84, 0x_65,
		0x_CB, 0x_5C, 0x_7A, 0x_D2, 0x_28, 0x_18, 0x_15, 0x_3E, 0x_B5, 0x_FB, 0x_86, 0x_31, 0x_F9, 0x_5B, 0x_58,
		0x_0E, 0x_59, 0x_78, 0x_DB, 0x_91, 0x_7D, 0x_56, 0x_83, 0x_3C, 0x_33, 0x_2F, 0x_71, 0x_DA, 0x_CE, 0x_3D,
		0x_B9, 0x_2E, 0x_C0, 0x_3B, 0x_1C, 0x_F8, 0x_34, 0x_6F, 0x_FD, 0x_72, 0x_87, 0x_94, 0x_FA, 0x_60, 0x_BA,
		0x_81, 0x_F5, 0x_EB, 0x_36, 0x_E5, 0x_E6, 0x_49, 0x_43, 0x_B0, 0x_8F, 0x_7B, 0x_68, 0x_E3, 0x_05, 0x_5F,
		0x_2C, 0x_14, 0x_89, 0x_C3, 0x_32, 0x_4C, 0x_BE, 0x_EA, 0x_79, 0x_80, 0x_69, 0x_D0, 0x_3F, 0x_97, 0x_25,
		0x_F6, 0x_27, 0x_8E, 0x_A6, 0x_A2, 0x_D3, 0x_FF, 0x_61, 0x_8A, 0x_F3, 0x_5D, 0x_E2, 0x_C8, 0x_D5, 0x_98,
		0x_F1, 0x_76, 0x_A9, 0x_D4, 0x_4F, 0x_93, 0x_82, 0x_06, 0x_7C, 0x_66, 0x_21, 0x_52, 0x_01, 0x_38, 0x_BD,
		0x_AA, 0x_1A, 0x_22, 0x_6E, 0x_F4, 0x_03, 0x_E1, 0x_A1, 0x_42, 0x_88, 0x_1F, 0x_BB, 0x_47,
	];

	helper(S, BASE, -40_279);
}
// endregion
// region: s_has_whitespaces_and_minus_448_852_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_448_852_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0C,
		0x_0D, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_2D, 0x_72, 0x_8B, 0x_9A,
		0x_E4, 0x_FE, 0x_74,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_95, 0x_AE, 0x_25, 0x_23, 0x_E1, 0x_43, 0x_AC, 0x_CD, 0x_8B, 0x_86, 0x_22, 0x_72, 0x_BB, 0x_B4,
		0x_B1, 0x_0F, 0x_A4, 0x_8F, 0x_65, 0x_14, 0x_89, 0x_6C, 0x_16, 0x_74, 0x_C2, 0x_90, 0x_3B, 0x_F0, 0x_6A,
		0x_50, 0x_E8, 0x_8C, 0x_88, 0x_01, 0x_63, 0x_21, 0x_B2, 0x_1B, 0x_55, 0x_6E, 0x_38, 0x_36, 0x_78, 0x_1F,
		0x_29, 0x_D5, 0x_A1, 0x_5D, 0x_71, 0x_B9, 0x_48, 0x_A9, 0x_EC, 0x_E7, 0x_7D, 0x_D2, 0x_45, 0x_84, 0x_4A,
		0x_5B, 0x_B6, 0x_5A, 0x_C5, 0x_62, 0x_C4, 0x_04, 0x_5F, 0x_C3, 0x_26, 0x_4E, 0x_A8, 0x_A5, 0x_FA, 0x_33,
		0x_92, 0x_CF, 0x_FF, 0x_BC, 0x_DE, 0x_B0, 0x_31, 0x_1C, 0x_D8, 0x_F8, 0x_B3, 0x_05, 0x_77, 0x_69, 0x_46,
		0x_F1, 0x_E6, 0x_5C, 0x_A0, 0x_3E, 0x_49, 0x_67, 0x_47, 0x_B8, 0x_73, 0x_80, 0x_CB, 0x_94, 0x_DB, 0x_39,
		0x_4D, 0x_66, 0x_57, 0x_FC, 0x_5E, 0x_59, 0x_19, 0x_83, 0x_DD, 0x_F5, 0x_B5, 0x_40, 0x_E2, 0x_AF, 0x_A3,
		0x_58, 0x_CA, 0x_A6, 0x_DC, 0x_75, 0x_F9, 0x_F4, 0x_9A, 0x_06, 0x_A2, 0x_07, 0x_3F, 0x_BD, 0x_EE, 0x_85,
		0x_37, 0x_EB, 0x_7E, 0x_70, 0x_24, 0x_35, 0x_2C, 0x_41, 0x_97, 0x_EF, 0x_C6, 0x_52, 0x_0E, 0x_9E, 0x_8E,
		0x_1D, 0x_F6, 0x_BE, 0x_08, 0x_28, 0x_18, 0x_60, 0x_F3, 0x_E0, 0x_32, 0x_27, 0x_02, 0x_2E, 0x_12, 0x_E3,
		0x_7A, 0x_6D, 0x_C9, 0x_4B, 0x_15, 0x_FE, 0x_D4, 0x_E9, 0x_7F, 0x_8A, 0x_03, 0x_DF, 0x_D1, 0x_87, 0x_9B,
		0x_81, 0x_AD, 0x_68, 0x_AA, 0x_56, 0x_76, 0x_1E, 0x_91, 0x_51, 0x_54, 0x_61, 0x_30, 0x_3C,
	];

	helper(S, BASE, -448_852);
}
// endregion
// region: s_has_whitespaces_and_minus_8_140_580_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_8_140_580_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_2D, 0x_7C, 0x_F9,
		0x_FB, 0x_EC, 0x_09, 0x_80, 0x_9B, 0x_62, 0x_14, 0x_84, 0x_65, 0x_B3, 0x_B0, 0x_AA, 0x_CF, 0x_50, 0x_22,
		0x_73, 0x_DB, 0x_3A, 0x_80, 0x_8F, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_7C, 0x_B6, 0x_9F, 0x_57, 0x_9B, 0x_01, 0x_FE, 0x_E1, 0x_F8, 0x_03, 0x_6C, 0x_C2, 0x_61, 0x_77,
		0x_67, 0x_9E, 0x_21, 0x_0F, 0x_33, 0x_93, 0x_1D, 0x_37, 0x_63, 0x_91, 0x_F9, 0x_A7, 0x_4F, 0x_41, 0x_22,
		0x_CC, 0x_73, 0x_16, 0x_EC, 0x_F6, 0x_EF, 0x_4E, 0x_BA, 0x_5D, 0x_99, 0x_C3, 0x_56, 0x_47, 0x_E6, 0x_B3,
		0x_48, 0x_19, 0x_0E, 0x_D0, 0x_1C, 0x_17, 0x_43, 0x_72, 0x_E9, 0x_E7, 0x_4C, 0x_C5, 0x_23, 0x_78, 0x_29,
		0x_80, 0x_5C, 0x_B4, 0x_86, 0x_12, 0x_CB, 0x_C0, 0x_DC, 0x_07, 0x_45, 0x_DF, 0x_C6, 0x_BF, 0x_AF, 0x_84,
		0x_E4, 0x_CA, 0x_05, 0x_FF, 0x_A0, 0x_FC, 0x_69, 0x_27, 0x_A2, 0x_35, 0x_C1, 0x_32, 0x_B1, 0x_62, 0x_CF,
		0x_E0, 0x_9C, 0x_18, 0x_DB, 0x_74, 0x_BE, 0x_A8, 0x_AA, 0x_02, 0x_7E, 0x_13, 0x_3F, 0x_5B, 0x_94, 0x_76,
		0x_FB, 0x_B8, 0x_F2, 0x_A1, 0x_B5, 0x_65, 0x_EA, 0x_EE, 0x_30, 0x_50, 0x_9A, 0x_6F, 0x_28, 0x_54, 0x_F0,
		0x_39, 0x_66, 0x_3A, 0x_B7, 0x_D9, 0x_D2, 0x_2C, 0x_55, 0x_CD, 0x_04, 0x_EB, 0x_DA, 0x_AD, 0x_8B, 0x_5E,
		0x_B2, 0x_14, 0x_34, 0x_B0, 0x_2A, 0x_F3, 0x_44, 0x_A6, 0x_C4, 0x_AC, 0x_E2, 0x_53, 0x_83, 0x_6D, 0x_71,
		0x_1E, 0x_E3, 0x_58, 0x_06, 0x_36, 0x_3C, 0x_FA, 0x_4D, 0x_89, 0x_C8, 0x_25, 0x_7D, 0x_85, 0x_8D, 0x_64,
		0x_1A, 0x_6B, 0x_08, 0x_6A, 0x_7B, 0x_A5, 0x_D3, 0x_52, 0x_B9, 0x_D8, 0x_D6, 0x_F1, 0x_98, 0x_6E, 0x_1B,
		0x_8F, 0x_3D, 0x_5A, 0x_A3, 0x_87, 0x_D1, 0x_ED, 0x_D4, 0x_42, 0x_F7, 0x_7F, 0x_59, 0x_82,
	];

	helper(S, BASE, -8_140_580);
}
// endregion
// region: s_has_whitespaces_and_minus_39_011_183_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_39_011_183_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_2D, 0x_DE, 0x_42, 0x_5B, 0x_50, 0x_AB, 0x_71, 0x_13, 0x_96,
		0x_BF, 0x_DD, 0x_8F, 0x_AD, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_FE, 0x_5C, 0x_A7, 0x_2E, 0x_DE, 0x_5A, 0x_69, 0x_46, 0x_EC, 0x_A4, 0x_94, 0x_3A, 0x_EF, 0x_F4,
		0x_F0, 0x_F7, 0x_7C, 0x_E9, 0x_8F, 0x_14, 0x_32, 0x_86, 0x_C4, 0x_1F, 0x_02, 0x_D5, 0x_A0, 0x_2C, 0x_70,
		0x_3B, 0x_67, 0x_F5, 0x_E8, 0x_E0, 0x_07, 0x_C3, 0x_08, 0x_C0, 0x_4B, 0x_75, 0x_05, 0x_74, 0x_F9, 0x_6B,
		0x_92, 0x_62, 0x_C6, 0x_7E, 0x_B5, 0x_22, 0x_BC, 0x_BF, 0x_95, 0x_9B, 0x_B7, 0x_D3, 0x_4F, 0x_7D, 0x_5B,
		0x_2F, 0x_2A, 0x_CD, 0x_29, 0x_11, 0x_CB, 0x_80, 0x_4C, 0x_99, 0x_BE, 0x_8C, 0x_27, 0x_3F, 0x_FD, 0x_18,
		0x_FB, 0x_E3, 0x_8B, 0x_C1, 0x_96, 0x_55, 0x_D7, 0x_42, 0x_3D, 0x_81, 0x_89, 0x_CF, 0x_64, 0x_A9, 0x_A5,
		0x_A6, 0x_78, 0x_FA, 0x_50, 0x_B0, 0x_85, 0x_B3, 0x_E2, 0x_D8, 0x_4D, 0x_1A, 0x_7F, 0x_6E, 0x_D1, 0x_3C,
		0x_6C, 0x_9D, 0x_DB, 0x_44, 0x_59, 0x_88, 0x_FC, 0x_9E, 0x_35, 0x_48, 0x_BB, 0x_41, 0x_6D, 0x_1B, 0x_65,
		0x_7B, 0x_E4, 0x_5F, 0x_47, 0x_AC, 0x_3E, 0x_10, 0x_D2, 0x_87, 0x_8A, 0x_9F, 0x_72, 0x_33, 0x_F3, 0x_DD,
		0x_0E, 0x_03, 0x_66, 0x_97, 0x_37, 0x_E7, 0x_CA, 0x_FF, 0x_1C, 0x_6A, 0x_63, 0x_93, 0x_A8, 0x_83, 0x_60,
		0x_C2, 0x_E5, 0x_61, 0x_EE, 0x_9A, 0x_1E, 0x_F8, 0x_B6, 0x_49, 0x_76, 0x_34, 0x_D0, 0x_06, 0x_8E, 0x_DC,
		0x_1D, 0x_AD, 0x_56, 0x_5E, 0x_15, 0x_21, 0x_36, 0x_71, 0x_77, 0x_F6, 0x_D6, 0x_45, 0x_53, 0x_A1, 0x_30,
		0x_B1, 0x_28, 0x_B9, 0x_01, 0x_4E, 0x_BA, 0x_54, 0x_DF, 0x_13, 0x_0F, 0x_AA, 0x_40, 0x_6F,
	];

	helper(S, BASE, -39_011_183);
}
// endregion
// region: s_has_whitespaces_and_minus_706_836_863_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_706_836_863_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0A,
		0x_09, 0x_0B, 0x_2D, 0x_5C, 0x_DA, 0x_48, 0x_A7, 0x_60, 0x_E0, 0x_17, 0x_50, 0x_C2, 0x_AD, 0x_56, 0x_21,
		0x_3C, 0x_4B, 0x_A1, 0x_DA, 0x_32, 0x_3E, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_81, 0x_2A, 0x_54, 0x_65, 0x_DF, 0x_4F, 0x_50, 0x_1F, 0x_9C, 0x_D7, 0x_78, 0x_38, 0x_FB, 0x_57,
		0x_82, 0x_DD, 0x_35, 0x_F3, 0x_7A, 0x_2E, 0x_03, 0x_34, 0x_FA, 0x_89, 0x_42, 0x_AE, 0x_F5, 0x_4A, 0x_AB,
		0x_6D, 0x_D1, 0x_A7, 0x_FE, 0x_87, 0x_73, 0x_A3, 0x_36, 0x_23, 0x_4C, 0x_02, 0x_47, 0x_43, 0x_91, 0x_AA,
		0x_67, 0x_96, 0x_FC, 0x_1B, 0x_90, 0x_61, 0x_06, 0x_01, 0x_0F, 0x_83, 0x_E0, 0x_63, 0x_56, 0x_C6, 0x_41,
		0x_EA, 0x_DA, 0x_66, 0x_70, 0x_A8, 0x_C4, 0x_6F, 0x_DE, 0x_C1, 0x_E9, 0x_F9, 0x_71, 0x_15, 0x_C0, 0x_28,
		0x_CE, 0x_A0, 0x_EE, 0x_E6, 0x_44, 0x_CF, 0x_21, 0x_79, 0x_49, 0x_9B, 0x_EC, 0x_2C, 0x_33, 0x_04, 0x_6C,
		0x_53, 0x_24, 0x_A1, 0x_C8, 0x_E5, 0x_3A, 0x_10, 0x_6B, 0x_5C, 0x_EB, 0x_13, 0x_31, 0x_B7, 0x_5A, 0x_C5,
		0x_1C, 0x_51, 0x_E7, 0x_1D, 0x_BB, 0x_3B, 0x_7E, 0x_39, 0x_D8, 0x_3E, 0x_27, 0x_74, 0x_CC, 0x_B6, 0x_A6,
		0x_C9, 0x_92, 0x_E4, 0x_C3, 0x_11, 0x_CA, 0x_E1, 0x_55, 0x_7C, 0x_F4, 0x_C7, 0x_8E, 0x_22, 0x_7B, 0x_12,
		0x_DB, 0x_19, 0x_CD, 0x_86, 0x_6A, 0x_9A, 0x_5D, 0x_FD, 0x_8C, 0x_97, 0x_08, 0x_3C, 0x_99, 0x_8D, 0x_52,
		0x_8A, 0x_4E, 0x_BA, 0x_B1, 0x_68, 0x_D2, 0x_B3, 0x_45, 0x_F6, 0x_B8, 0x_AD, 0x_5E, 0x_9E, 0x_8B, 0x_F1,
		0x_E8, 0x_CB, 0x_9F, 0x_62, 0x_C2, 0x_07, 0x_5F, 0x_A4, 0x_E2, 0x_75, 0x_76, 0x_F2, 0x_88, 0x_64, 0x_D5,
		0x_BF, 0x_4B, 0x_E3, 0x_17, 0x_26, 0x_40, 0x_D6, 0x_BC, 0x_AF, 0x_32, 0x_7F, 0x_F7, 0x_48,
	];

	helper(S, BASE, -706_836_863);
}
// endregion
// region: s_has_whitespaces_and_minus_6_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_6_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_2D, 0x_81, 0x_0C, 0x_A6, 0x_C5, 0x_46, 0x_46, 0x_1A, 0x_AC, 0x_D4, 0x_C7,
		0x_E4, 0x_32, 0x_1A, 0x_5B, 0x_4C, 0x_02, 0x_B8, 0x_74, 0x_88, 0x_A1, 0x_42, 0x_A0, 0x_A0, 0x_48, 0x_B7,
		0x_47, 0x_7D, 0x_4D, 0x_DE, 0x_84, 0x_89, 0x_61, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_F0, 0x_A3, 0x_43, 0x_F3, 0x_EA, 0x_E3, 0x_81, 0x_46, 0x_38, 0x_70, 0x_C8, 0x_16, 0x_D2, 0x_7C, 0x_FD,
		0x_A2, 0x_87, 0x_5B, 0x_B5, 0x_3A, 0x_67, 0x_4E, 0x_1D, 0x_23, 0x_EB, 0x_4C, 0x_E0, 0x_B1, 0x_D5, 0x_6D,
		0x_98, 0x_A7, 0x_8A, 0x_25, 0x_CF, 0x_AB, 0x_2E, 0x_BB, 0x_F1, 0x_E1, 0x_14, 0x_9F, 0x_47, 0x_05, 0x_6F,
		0x_E6, 0x_E8, 0x_D8, 0x_35, 0x_EC, 0x_FF, 0x_B2, 0x_DA, 0x_8C, 0x_B3, 0x_31, 0x_4F, 0x_90, 0x_4B, 0x_61,
		0x_EE, 0x_48, 0x_79, 0x_CC, 0x_5F, 0x_01, 0x_D3, 0x_A6, 0x_3B, 0x_FC, 0x_21, 0x_C5, 0x_5D, 0x_C3, 0x_9E,
		0x_1C, 0x_AD, 0x_A8, 0x_5C, 0x_6C, 0x_51, 0x_88, 0x_EF, 0x_28, 0x_84, 0x_DC, 0x_1F, 0x_DB, 0x_03, 0x_F4,
		0x_7E, 0x_3D, 0x_62, 0x_37, 0x_50, 0x_F2, 0x_36, 0x_85, 0x_8B, 0x_F7, 0x_22, 0x_AA, 0x_6B, 0x_07, 0x_91,
		0x_8D, 0x_AE, 0x_E2, 0x_45, 0x_24, 0x_1B, 0x_66, 0x_65, 0x_63, 0x_11, 0x_57, 0x_39, 0x_02, 0x_13, 0x_19,
		0x_FE, 0x_5E, 0x_E7, 0x_CD, 0x_D7, 0x_0E, 0x_B8, 0x_BF, 0x_86, 0x_58, 0x_9B, 0x_DF, 0x_40, 0x_BC, 0x_BE,
		0x_29, 0x_4D, 0x_C4, 0x_A1, 0x_B4, 0x_FA, 0x_6A, 0x_E9, 0x_D4, 0x_F6, 0x_99, 0x_27, 0x_33, 0x_E4, 0x_18,
		0x_72, 0x_41, 0x_F9, 0x_75, 0x_4A, 0x_53, 0x_69, 0x_BD, 0x_7F, 0x_DE, 0x_1A, 0x_73, 0x_8E, 0x_9C, 0x_B9,
		0x_1E, 0x_93, 0x_55, 0x_C6, 0x_83, 0x_A5, 0x_CA, 0x_D1, 0x_3F, 0x_12, 0x_FB, 0x_3C, 0x_94, 0x_34, 0x_3E,
		0x_CB, 0x_76, 0x_96, 0x_A0, 0x_60, 0x_7A, 0x_F5, 0x_7D, 0x_10, 0x_80, 0x_32, 0x_ED, 0x_A4, 0x_49, 0x_15,
		0x_DD, 0x_CE, 0x_A9, 0x_7B, 0x_30, 0x_F8, 0x_26, 0x_C2, 0x_2C, 0x_C9, 0x_68, 0x_0F, 0x_B0, 0x_44, 0x_06,
		0x_E5, 0x_17, 0x_6E, 0x_B7, 0x_59, 0x_B6, 0x_2F, 0x_D6, 0x_C1, 0x_5A, 0x_C7, 0x_97, 0x_78, 0x_54, 0x_42,
		0x_74, 0x_BA, 0x_9A, 0x_8F, 0x_77, 0x_82, 0x_95, 0x_04, 0x_92, 0x_52, 0x_08, 0x_C0, 0x_89, 0x_AC, 0x_D9,
		0x_AF, 0x_64, 0x_56, 0x_2A, 0x_D0, 0x_9D, 0x_71,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_whitespaces_and_minus_85_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_85_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_2D, 0x_B8, 0x_2D, 0x_26, 0x_B6, 0x_1F, 0x_F4, 0x_12, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_5B, 0x_1A, 0x_13, 0x_9B, 0x_AD, 0x_42, 0x_9E, 0x_A5, 0x_7E, 0x_4F, 0x_D4, 0x_B4, 0x_54, 0x_CD,
		0x_47, 0x_1D, 0x_83, 0x_E6, 0x_69, 0x_46, 0x_63, 0x_BE, 0x_87, 0x_2A, 0x_12, 0x_E8, 0x_B7, 0x_AE, 0x_EC,
		0x_F1, 0x_52, 0x_26, 0x_C3, 0x_92, 0x_CC, 0x_F4, 0x_AB, 0x_23, 0x_F2, 0x_43, 0x_93, 0x_E1, 0x_3F, 0x_4B,
		0x_50, 0x_6E, 0x_4C, 0x_57, 0x_FD, 0x_DC, 0x_D7, 0x_74, 0x_FF, 0x_77, 0x_E0, 0x_C5, 0x_DF, 0x_71, 0x_3B,
		0x_98, 0x_34, 0x_FE, 0x_A7, 0x_05, 0x_06, 0x_2C, 0x_04, 0x_78, 0x_D0, 0x_56, 0x_35, 0x_45, 0x_32, 0x_B5,
		0x_D5, 0x_76, 0x_79, 0x_BA, 0x_FB, 0x_8A, 0x_5E, 0x_DD, 0x_C8, 0x_C7, 0x_B8, 0x_C0, 0x_36, 0x_89, 0x_C4,
		0x_DB, 0x_EE, 0x_99, 0x_15, 0x_E7, 0x_94, 0x_65, 0x_9C, 0x_EF, 0x_1C, 0x_44, 0x_5F, 0x_F8, 0x_82, 0x_6D,
		0x_3C, 0x_5C, 0x_97, 0x_AF, 0x_02, 0x_D3, 0x_7A, 0x_D2, 0x_6B, 0x_A6, 0x_0E, 0x_F6, 0x_03, 0x_A0, 0x_88,
		0x_7C, 0x_E2, 0x_37, 0x_BC, 0x_CF, 0x_21, 0x_84, 0x_A9, 0x_6C, 0x_1B, 0x_D9, 0x_6A, 0x_86, 0x_EB, 0x_67,
		0x_7F, 0x_3A, 0x_DE, 0x_F9, 0x_FA, 0x_11, 0x_8E, 0x_7B, 0x_9A, 0x_C6, 0x_DA, 0x_F3, 0x_01, 0x_64, 0x_1E,
		0x_16, 0x_55, 0x_E4, 0x_59, 0x_A2, 0x_EA, 0x_B3, 0x_18, 0x_4E, 0x_17, 0x_F0, 0x_B2, 0x_B0, 0x_38, 0x_33,
		0x_31, 0x_85, 0x_81, 0x_8C, 0x_5D, 0x_BB, 0x_A8, 0x_40, 0x_25, 0x_A4, 0x_58, 0x_FC, 0x_F7, 0x_B9, 0x_C2,
		0x_BD, 0x_BF, 0x_D1, 0x_B6, 0x_19, 0x_27, 0x_10, 0x_A3, 0x_6F, 0x_8D, 0x_07, 0x_E5, 0x_70, 0x_D6, 0x_73,
		0x_AA, 0x_96, 0x_2E, 0x_80, 0x_CE, 0x_48, 0x_4D, 0x_22, 0x_75, 0x_61, 0x_9F, 0x_E3, 0x_66, 0x_B1, 0x_CA,
		0x_53, 0x_8B, 0x_62, 0x_8F, 0x_E9, 0x_4A, 0x_24, 0x_08, 0x_49, 0x_51, 0x_90, 0x_ED, 0x_60, 0x_CB, 0x_91,
		0x_0F, 0x_3D, 0x_9D, 0x_14, 0x_5A, 0x_29, 0x_30, 0x_68, 0x_41, 0x_7D, 0x_72, 0x_A1, 0x_C9, 0x_3E, 0x_1F,
		0x_D8, 0x_AC, 0x_95, 0x_39, 0x_F5, 0x_C1, 0x_2F,
	];

	helper(S, BASE, -85);
}
// endregion
// region: s_has_whitespaces_and_minus_726_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_726_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0B,
		0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_2D, 0x_A5, 0x_6F, 0x_0A, 0x_97, 0x_80, 0x_8B, 0x_8E, 0x_B0, 0x_79, 0x_C4,
		0x_15, 0x_32, 0x_2C, 0x_3D, 0x_44, 0x_CA, 0x_47, 0x_D7, 0x_E7, 0x_B1, 0x_36, 0x_F9, 0x_D1, 0x_73, 0x_6A,
		0x_2C, 0x_5E, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_FB, 0x_A5, 0x_B2, 0x_04, 0x_5B, 0x_17, 0x_F3, 0x_56, 0x_2F, 0x_DC, 0x_C1, 0x_90, 0x_E8, 0x_E2,
		0x_8F, 0x_34, 0x_80, 0x_78, 0x_9C, 0x_4E, 0x_44, 0x_3A, 0x_22, 0x_D2, 0x_FC, 0x_C9, 0x_6B, 0x_D4, 0x_EE,
		0x_BB, 0x_64, 0x_1B, 0x_7A, 0x_3B, 0x_31, 0x_92, 0x_EB, 0x_42, 0x_A0, 0x_2E, 0x_46, 0x_27, 0x_15, 0x_6A,
		0x_91, 0x_DB, 0x_72, 0x_82, 0x_F6, 0x_9D, 0x_71, 0x_48, 0x_02, 0x_79, 0x_84, 0x_98, 0x_19, 0x_1A, 0x_1D,
		0x_9B, 0x_77, 0x_35, 0x_BF, 0x_13, 0x_9E, 0x_06, 0x_BC, 0x_6D, 0x_B6, 0x_D6, 0x_DA, 0x_6E, 0x_7D, 0x_55,
		0x_81, 0x_B1, 0x_87, 0x_3D, 0x_16, 0x_21, 0x_7E, 0x_67, 0x_DD, 0x_E1, 0x_F5, 0x_C6, 0x_D5, 0x_E3, 0x_26,
		0x_89, 0x_54, 0x_4A, 0x_41, 0x_38, 0x_C3, 0x_73, 0x_D9, 0x_74, 0x_AC, 0x_F7, 0x_CC, 0x_1F, 0x_E5, 0x_61,
		0x_53, 0x_D0, 0x_9A, 0x_07, 0x_DF, 0x_25, 0x_50, 0x_43, 0x_86, 0x_58, 0x_5D, 0x_30, 0x_65, 0x_F1, 0x_49,
		0x_AF, 0x_62, 0x_FA, 0x_60, 0x_ED, 0x_75, 0x_93, 0x_B0, 0x_51, 0x_97, 0x_C0, 0x_2A, 0x_5E, 0x_B9, 0x_EF,
		0x_3E, 0x_1E, 0x_14, 0x_F4, 0x_52, 0x_D8, 0x_F9, 0x_FD, 0x_CB, 0x_A2, 0x_6C, 0x_F8, 0x_12, 0x_23, 0x_CD,
		0x_E4, 0x_A1, 0x_05, 0x_5F, 0x_5C, 0x_AD, 0x_BD, 0x_AA, 0x_AE, 0x_4B, 0x_A4, 0x_A9, 0x_63, 0x_11, 0x_8D,
		0x_10, 0x_85, 0x_0E, 0x_CA, 0x_29, 0x_5A, 0x_A8, 0x_4D, 0x_36, 0x_08, 0x_EC, 0x_C8, 0x_96, 0x_CF, 0x_59,
		0x_3F, 0x_E6, 0x_7C, 0x_94, 0x_4F, 0x_D7, 0x_99, 0x_76, 0x_B7, 0x_95, 0x_EA, 0x_4C, 0x_DE, 0x_E7, 0x_01,
		0x_1C, 0x_2C, 0x_8C, 0x_88, 0x_C2, 0x_32, 0x_D1, 0x_66, 0x_40, 0x_BA, 0x_8B, 0x_45, 0x_B4, 0x_83, 0x_70,
		0x_8A, 0x_F2, 0x_F0, 0x_B8, 0x_03, 0x_68, 0x_47, 0x_28, 0x_33, 0x_FE, 0x_7F, 0x_39, 0x_C7, 0x_E9, 0x_0F,
		0x_9F, 0x_A3, 0x_D3, 0x_C5, 0x_B5, 0x_BE, 0x_CE, 0x_6F, 0x_B3, 0x_C4, 0x_69, 0x_37, 0x_AB, 0x_18, 0x_E0,
		0x_7B, 0x_A6, 0x_A7, 0x_57, 0x_8E, 0x_3C, 0x_24,
	];

	helper(S, BASE, -726);
}
// endregion
// region: s_has_whitespaces_and_minus_4_687_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_4_687_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0D,
		0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0B,
		0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_2D, 0x_8B, 0x_52, 0x_2B, 0x_D7, 0x_D0, 0x_D9, 0x_10, 0x_3C,
		0x_95, 0x_6A, 0x_E8, 0x_FF, 0x_8B, 0x_3D, 0x_4D, 0x_DC, 0x_60, 0x_CA, 0x_32, 0x_71, 0x_E3, 0x_A5, 0x_53,
		0x_E1, 0x_C4, 0x_EB, 0x_9B, 0x_B0, 0x_3F, 0x_5B, 0x_30, 0x_7B, 0x_59, 0x_73, 0x_78, 0x_17, 0x_98, 0x_E3,
		0x_5A, 0x_67, 0x_B6, 0x_51, 0x_47, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_1B, 0x_BC, 0x_46, 0x_B7, 0x_88, 0x_86, 0x_B2, 0x_41, 0x_4F, 0x_57, 0x_9B, 0x_DC, 0x_9E, 0x_42, 0x_D3,
		0x_C7, 0x_60, 0x_AF, 0x_8B, 0x_B3, 0x_F9, 0x_50, 0x_D6, 0x_23, 0x_E1, 0x_76, 0x_C6, 0x_AA, 0x_80, 0x_BA,
		0x_FD, 0x_8F, 0x_61, 0x_59, 0x_71, 0x_7B, 0x_F8, 0x_47, 0x_4C, 0x_D7, 0x_3F, 0x_18, 0x_6A, 0x_5F, 0x_66,
		0x_BB, 0x_33, 0x_8A, 0x_CA, 0x_DF, 0x_F4, 0x_D0, 0x_85, 0x_F5, 0x_12, 0x_77, 0x_4B, 0x_4A, 0x_D8, 0x_CE,
		0x_7F, 0x_9F, 0x_FB, 0x_DA, 0x_94, 0x_7E, 0x_C2, 0x_9D, 0x_F7, 0x_CD, 0x_F0, 0x_EA, 0x_E6, 0x_10, 0x_73,
		0x_05, 0x_19, 0x_72, 0x_AD, 0x_D9, 0x_D1, 0x_C5, 0x_C0, 0x_FE, 0x_32, 0x_EB, 0x_A7, 0x_EC, 0x_6E, 0x_5D,
		0x_08, 0x_74, 0x_28, 0x_87, 0x_1D, 0x_06, 0x_51, 0x_07, 0x_6C, 0x_2C, 0x_1E, 0x_D5, 0x_D2, 0x_E7, 0x_78,
		0x_A8, 0x_93, 0x_A1, 0x_0E, 0x_AE, 0x_1A, 0x_F1, 0x_C9, 0x_FF, 0x_AC, 0x_25, 0x_29, 0x_E4, 0x_2F, 0x_91,
		0x_B5, 0x_3A, 0x_79, 0x_6F, 0x_5C, 0x_31, 0x_54, 0x_56, 0x_BE, 0x_49, 0x_99, 0x_48, 0x_A5, 0x_ED, 0x_21,
		0x_22, 0x_30, 0x_17, 0x_CC, 0x_70, 0x_4E, 0x_C8, 0x_5A, 0x_13, 0x_9C, 0x_3D, 0x_90, 0x_26, 0x_B8, 0x_53,
		0x_82, 0x_44, 0x_62, 0x_11, 0x_89, 0x_15, 0x_B4, 0x_A6, 0x_68, 0x_DD, 0x_04, 0x_95, 0x_A9, 0x_EF, 0x_6D,
		0x_9A, 0x_43, 0x_B9, 0x_40, 0x_8C, 0x_8E, 0x_81, 0x_B6, 0x_F6, 0x_E0, 0x_FC, 0x_67, 0x_03, 0x_24, 0x_1C,
		0x_65, 0x_A2, 0x_14, 0x_37, 0x_EE, 0x_83, 0x_0F, 0x_BF, 0x_DE, 0x_38, 0x_84, 0x_34, 0x_97, 0x_A4, 0x_63,
		0x_96, 0x_36, 0x_35, 0x_E3, 0x_55, 0x_E8, 0x_AB, 0x_7A, 0x_1F, 0x_98, 0x_5B, 0x_C4, 0x_DB, 0x_BD, 0x_7D,
		0x_E9, 0x_39, 0x_CB, 0x_6B, 0x_3E, 0x_45, 0x_B1, 0x_16, 0x_B0, 0x_FA, 0x_02, 0x_69, 0x_58, 0x_27, 0x_3B,
		0x_8D, 0x_E2, 0x_2E, 0x_F2, 0x_5E, 0x_01, 0x_CF, 0x_4D, 0x_E5, 0x_75, 0x_C3, 0x_A3, 0x_64, 0x_3C, 0x_A0,
		0x_2A, 0x_52, 0x_92, 0x_D4, 0x_7C, 0x_C1, 0x_F3,
	];

	helper(S, BASE, -4_687);
}
// endregion
// region: s_has_whitespaces_and_minus_11_516_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_11_516_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_2D, 0x_A9, 0x_C0, 0x_09, 0x_FE, 0x_12, 0x_90, 0x_16,
		0x_DC, 0x_A5, 0x_DD, 0x_72, 0x_80, 0x_29, 0x_DA, 0x_9C, 0x_6E, 0x_33, 0x_7D, 0x_43, 0x_48, 0x_7F, 0x_71,
		0x_9D, 0x_02, 0x_42, 0x_AA, 0x_65, 0x_01, 0x_9D, 0x_52, 0x_05, 0x_E8, 0x_EB, 0x_D8, 0x_67, 0x_C3, 0x_5A,
		0x_41,
	];
	const BASE: &[u8] = &[
		0x_A2, 0x_39, 0x_2A, 0x_96, 0x_D5, 0x_CC, 0x_E2, 0x_21, 0x_63, 0x_84, 0x_C3, 0x_BF, 0x_64, 0x_B5, 0x_69,
		0x_49, 0x_E3, 0x_08, 0x_8D, 0x_55, 0x_35, 0x_0E, 0x_7F, 0x_78, 0x_AA, 0x_FF, 0x_25, 0x_D8, 0x_7D, 0x_1F,
		0x_9B, 0x_92, 0x_E6, 0x_94, 0x_56, 0x_2F, 0x_8F, 0x_C8, 0x_87, 0x_9F, 0x_2C, 0x_EE, 0x_6F, 0x_3B, 0x_44,
		0x_DF, 0x_A9, 0x_3F, 0x_AF, 0x_F2, 0x_71, 0x_04, 0x_46, 0x_D1, 0x_8B, 0x_93, 0x_ED, 0x_91, 0x_97, 0x_70,
		0x_1B, 0x_77, 0x_3D, 0x_59, 0x_CB, 0x_4F, 0x_FC, 0x_0F, 0x_DB, 0x_37, 0x_1C, 0x_86, 0x_57, 0x_34, 0x_4C,
		0x_F7, 0x_26, 0x_FE, 0x_CD, 0x_89, 0x_BE, 0x_85, 0x_95, 0x_5C, 0x_03, 0x_43, 0x_8C, 0x_23, 0x_06, 0x_B8,
		0x_AB, 0x_38, 0x_33, 0x_B7, 0x_4A, 0x_18, 0x_3C, 0x_75, 0x_EC, 0x_D0, 0x_A4, 0x_4D, 0x_72, 0x_6D, 0x_01,
		0x_74, 0x_7B, 0x_B1, 0x_EB, 0x_31, 0x_BC, 0x_DC, 0x_C9, 0x_45, 0x_4E, 0x_52, 0x_13, 0x_53, 0x_7A, 0x_88,
		0x_58, 0x_12, 0x_4B, 0x_A8, 0x_C7, 0x_02, 0x_5E, 0x_07, 0x_C2, 0x_F3, 0x_C5, 0x_F4, 0x_62, 0x_B2, 0x_A6,
		0x_82, 0x_E5, 0x_65, 0x_8A, 0x_CF, 0x_AD, 0x_41, 0x_28, 0x_6C, 0x_1D, 0x_60, 0x_24, 0x_FA, 0x_76, 0x_27,
		0x_C1, 0x_79, 0x_83, 0x_32, 0x_C0, 0x_CA, 0x_5A, 0x_99, 0x_11, 0x_EF, 0x_EA, 0x_98, 0x_D7, 0x_B3, 0x_54,
		0x_2E, 0x_3A, 0x_F8, 0x_5F, 0x_30, 0x_05, 0x_F6, 0x_D6, 0x_FD, 0x_E1, 0x_7C, 0x_42, 0x_F9, 0x_D4, 0x_B0,
		0x_B9, 0x_C4, 0x_A3, 0x_F1, 0x_5D, 0x_73, 0x_9C, 0x_6A, 0x_50, 0x_10, 0x_15, 0x_E4, 0x_6E, 0x_CE, 0x_90,
		0x_80, 0x_16, 0x_22, 0x_5B, 0x_9E, 0x_48, 0x_68, 0x_A7, 0x_DE, 0x_A5, 0x_8E, 0x_19, 0x_1E, 0x_9D, 0x_DA,
		0x_E0, 0x_40, 0x_F0, 0x_D2, 0x_C6, 0x_66, 0x_AC, 0x_AE, 0x_A0, 0x_7E, 0x_D3, 0x_29, 0x_3E, 0x_1A, 0x_36,
		0x_17, 0x_E7, 0x_51, 0x_6B, 0x_E8, 0x_B6, 0x_61, 0x_BB, 0x_BA, 0x_9A, 0x_D9, 0x_67, 0x_BD, 0x_B4, 0x_DD,
		0x_81, 0x_14, 0x_A1, 0x_F5, 0x_47, 0x_FB, 0x_E9,
	];

	helper(S, BASE, -11_516);
}
// endregion
// region: s_has_whitespaces_and_minus_283_226_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_283_226_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0A,
		0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_2D,
		0x_D9, 0x_9C, 0x_B5, 0x_0A, 0x_40, 0x_C2, 0x_4E, 0x_C8, 0x_69, 0x_D6, 0x_10, 0x_1C, 0x_AF, 0x_E6, 0x_74,
		0x_88, 0x_7A, 0x_73, 0x_A4, 0x_1C, 0x_B3, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_7E, 0x_83, 0x_1E, 0x_D9, 0x_79, 0x_D1, 0x_3D, 0x_13, 0x_CF, 0x_47, 0x_1D, 0x_95, 0x_24, 0x_67,
		0x_81, 0x_53, 0x_05, 0x_D6, 0x_10, 0x_F3, 0x_02, 0x_16, 0x_77, 0x_E1, 0x_28, 0x_57, 0x_4B, 0x_E6, 0x_2F,
		0x_35, 0x_78, 0x_9E, 0x_4D, 0x_BB, 0x_15, 0x_D7, 0x_BE, 0x_27, 0x_8F, 0x_CD, 0x_AC, 0x_5D, 0x_61, 0x_A1,
		0x_6A, 0x_FE, 0x_7D, 0x_C2, 0x_6B, 0x_C5, 0x_1B, 0x_46, 0x_66, 0x_A7, 0x_EB, 0x_39, 0x_C3, 0x_38, 0x_36,
		0x_E0, 0x_CC, 0x_5E, 0x_E4, 0x_21, 0x_32, 0x_E7, 0x_C0, 0x_CA, 0x_FC, 0x_48, 0x_F1, 0x_19, 0x_71, 0x_25,
		0x_49, 0x_F4, 0x_99, 0x_85, 0x_EF, 0x_8C, 0x_A8, 0x_D5, 0x_40, 0x_A9, 0x_03, 0x_E8, 0x_B3, 0x_2C, 0x_22,
		0x_F8, 0x_AB, 0x_3C, 0x_70, 0x_5F, 0x_FA, 0x_43, 0x_68, 0x_29, 0x_74, 0x_BD, 0x_23, 0x_F2, 0x_26, 0x_69,
		0x_9D, 0x_A6, 0x_34, 0x_B7, 0x_9A, 0x_A2, 0x_91, 0x_7C, 0x_C1, 0x_AA, 0x_59, 0x_DB, 0x_BC, 0x_9B, 0x_41,
		0x_6D, 0x_94, 0x_50, 0x_AF, 0x_7B, 0x_AE, 0x_E3, 0x_E5, 0x_80, 0x_F0, 0x_A3, 0x_87, 0x_C4, 0x_4F, 0x_52,
		0x_54, 0x_FD, 0x_76, 0x_3B, 0x_B1, 0x_92, 0x_31, 0x_DC, 0x_30, 0x_F5, 0x_33, 0x_17, 0x_01, 0x_D0, 0x_F6,
		0x_C6, 0x_D2, 0x_F9, 0x_04, 0x_3A, 0x_82, 0x_11, 0x_56, 0x_9C, 0x_6E, 0x_86, 0x_97, 0x_FF, 0x_2E, 0x_B5,
		0x_62, 0x_0F, 0x_5A, 0x_7A, 0x_B9, 0x_5B, 0x_5C, 0x_B4, 0x_84, 0x_4E, 0x_42, 0x_0E, 0x_A5, 0x_6F, 0x_B8,
		0x_73, 0x_75, 0x_8E, 0x_C8, 0x_88, 0x_DE, 0x_A0, 0x_1C, 0x_45, 0x_3F, 0x_B0, 0x_44, 0x_60, 0x_72, 0x_B6,
		0x_18, 0x_1A, 0x_07, 0x_2A, 0x_DF, 0x_F7, 0x_51, 0x_BA, 0x_98, 0x_BF, 0x_1F, 0x_E9, 0x_B2, 0x_90, 0x_A4,
		0x_06, 0x_DA, 0x_12, 0x_C7, 0x_FB, 0x_D8, 0x_65, 0x_CB, 0x_CE, 0x_C9, 0x_89, 0x_7F, 0x_6C, 0x_08, 0x_8D,
		0x_D4, 0x_3E, 0x_64, 0x_AD, 0x_96, 0x_D3, 0x_DD, 0x_EE, 0x_E2, 0x_14, 0x_37, 0x_9F, 0x_93, 0x_4A, 0x_55,
		0x_63, 0x_8A, 0x_58, 0x_ED, 0x_8B, 0x_EC, 0x_EA,
	];

	helper(S, BASE, -283_226);
}
// endregion
// region: s_has_whitespaces_and_minus_8_854_604_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_8_854_604_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_20,
		0x_09, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0B,
		0x_0B, 0x_09, 0x_2D, 0x_AF, 0x_E7, 0x_15, 0x_0A, 0x_AE, 0x_53, 0x_1F, 0x_08, 0x_6C, 0x_44, 0x_26, 0x_95,
		0x_E2, 0x_59, 0x_E3, 0x_53, 0x_35, 0x_97, 0x_8C, 0x_33, 0x_CF, 0x_D6, 0x_30, 0x_F7, 0x_D2, 0x_C7, 0x_1E,
		0x_E2, 0x_84, 0x_88, 0x_9E, 0x_BC, 0x_44, 0x_03, 0x_2F, 0x_1F, 0x_35, 0x_68, 0x_8D, 0x_10, 0x_69, 0x_1C,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_E0, 0x_B6, 0x_F9, 0x_9B, 0x_C5, 0x_DB, 0x_40, 0x_B2, 0x_DD, 0x_9E, 0x_88, 0x_8E, 0x_92, 0x_A1,
		0x_BE, 0x_9F, 0x_43, 0x_22, 0x_79, 0x_44, 0x_D6, 0x_5B, 0x_98, 0x_16, 0x_41, 0x_12, 0x_F3, 0x_F7, 0x_45,
		0x_BB, 0x_A7, 0x_35, 0x_E7, 0x_54, 0x_A0, 0x_C7, 0x_E1, 0x_70, 0x_6E, 0x_37, 0x_05, 0x_D0, 0x_EC, 0x_DF,
		0x_48, 0x_6C, 0x_CB, 0x_18, 0x_DE, 0x_F0, 0x_1B, 0x_21, 0x_07, 0x_A4, 0x_31, 0x_67, 0x_C4, 0x_BD, 0x_02,
		0x_D8, 0x_3E, 0x_1E, 0x_13, 0x_75, 0x_DC, 0x_EF, 0x_B3, 0x_DA, 0x_F5, 0x_FE, 0x_39, 0x_97, 0x_EE, 0x_42,
		0x_6B, 0x_1D, 0x_1F, 0x_59, 0x_66, 0x_D3, 0x_1A, 0x_CF, 0x_FC, 0x_AA, 0x_74, 0x_24, 0x_23, 0x_29, 0x_9D,
		0x_5A, 0x_3A, 0x_FA, 0x_6D, 0x_0E, 0x_2F, 0x_A9, 0x_B8, 0x_64, 0x_36, 0x_8D, 0x_51, 0x_68, 0x_10, 0x_87,
		0x_96, 0x_9C, 0x_01, 0x_F4, 0x_61, 0x_99, 0x_A8, 0x_28, 0x_56, 0x_CC, 0x_4E, 0x_84, 0x_7A, 0x_57, 0x_9A,
		0x_69, 0x_FF, 0x_A5, 0x_E6, 0x_B4, 0x_CE, 0x_60, 0x_95, 0x_30, 0x_8F, 0x_82, 0x_AC, 0x_FD, 0x_06, 0x_7F,
		0x_58, 0x_E3, 0x_D7, 0x_A2, 0x_71, 0x_83, 0x_BA, 0x_B9, 0x_78, 0x_90, 0x_AF, 0x_D5, 0x_50, 0x_15, 0x_4C,
		0x_6F, 0x_5E, 0x_7C, 0x_3B, 0x_B5, 0x_B0, 0x_1C, 0x_2C, 0x_B7, 0x_2E, 0x_52, 0x_F6, 0x_CA, 0x_38, 0x_49,
		0x_2A, 0x_8C, 0x_32, 0x_E5, 0x_4D, 0x_B1, 0x_C9, 0x_19, 0x_6A, 0x_CD, 0x_8A, 0x_5C, 0x_E8, 0x_7B, 0x_D1,
		0x_65, 0x_C8, 0x_A3, 0x_53, 0x_BF, 0x_F1, 0x_33, 0x_5D, 0x_AB, 0x_E9, 0x_26, 0x_C0, 0x_76, 0x_4B, 0x_3C,
		0x_08, 0x_ED, 0x_86, 0x_11, 0x_25, 0x_BC, 0x_89, 0x_93, 0x_AD, 0x_EB, 0x_46, 0x_4A, 0x_47, 0x_F8, 0x_03,
		0x_8B, 0x_55, 0x_27, 0x_62, 0x_F2, 0x_3F, 0x_3D, 0x_AE, 0x_D9, 0x_7D, 0x_0F, 0x_D2, 0x_C3, 0x_C6, 0x_81,
		0x_C2, 0x_E2, 0x_FB, 0x_34, 0x_4F, 0x_D4, 0x_72, 0x_A6, 0x_91, 0x_63, 0x_C1, 0x_14, 0x_17, 0x_73, 0x_5F,
		0x_E4, 0x_77, 0x_EA, 0x_04, 0x_80, 0x_7E, 0x_85,
	];

	helper(S, BASE, -8_854_604);
}
// endregion
// region: s_has_whitespaces_and_minus_25_228_794_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_25_228_794_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_20,
		0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_20,
		0x_0D, 0x_20, 0x_0C, 0x_2D, 0x_B3, 0x_84, 0x_7E, 0x_BC, 0x_0D, 0x_A3, 0x_DA, 0x_31, 0x_B6, 0x_FA, 0x_38,
		0x_56, 0x_F4, 0x_22, 0x_EE, 0x_1E, 0x_D7, 0x_C4, 0x_D4, 0x_F0, 0x_F8, 0x_55, 0x_C5, 0x_47, 0x_C8, 0x_4B,
		0x_76, 0x_8F, 0x_B3, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_B3, 0x_C2, 0x_59, 0x_51, 0x_B7, 0x_50, 0x_90, 0x_52, 0x_D9, 0x_AC, 0x_62, 0x_FB, 0x_B4, 0x_5A,
		0x_60, 0x_C1, 0x_7D, 0x_F2, 0x_11, 0x_ED, 0x_38, 0x_A9, 0x_71, 0x_79, 0x_42, 0x_10, 0x_3D, 0x_E5, 0x_CE,
		0x_13, 0x_9D, 0x_CD, 0x_F9, 0x_89, 0x_CC, 0x_4D, 0x_1B, 0x_3B, 0x_55, 0x_D1, 0x_D7, 0x_48, 0x_BF, 0x_53,
		0x_6D, 0x_F7, 0x_A8, 0x_C9, 0x_9F, 0x_E9, 0x_D8, 0x_32, 0x_EE, 0x_6B, 0x_F4, 0x_15, 0x_C5, 0x_DD, 0x_27,
		0x_74, 0x_A7, 0x_25, 0x_D6, 0x_37, 0x_E7, 0x_70, 0x_47, 0x_17, 0x_AB, 0x_46, 0x_C8, 0x_7B, 0x_45, 0x_01,
		0x_28, 0x_4C, 0x_4A, 0x_7F, 0x_F8, 0x_E0, 0x_E8, 0x_39, 0x_12, 0x_82, 0x_3F, 0x_FF, 0x_C6, 0x_B0, 0x_4F,
		0x_96, 0x_FC, 0x_18, 0x_3C, 0x_E1, 0x_B5, 0x_5E, 0x_C7, 0x_4B, 0x_A6, 0x_FA, 0x_7C, 0x_1E, 0x_A2, 0x_33,
		0x_57, 0x_AE, 0x_91, 0x_DC, 0x_EF, 0x_6E, 0x_30, 0x_8E, 0x_4E, 0x_40, 0x_95, 0x_CA, 0x_E3, 0x_64, 0x_E4,
		0x_8A, 0x_F5, 0x_BE, 0x_D0, 0x_36, 0x_5D, 0x_C0, 0x_A5, 0x_DF, 0x_7E, 0x_8F, 0x_35, 0x_F3, 0x_77, 0x_26,
		0x_03, 0x_0E, 0x_B2, 0x_83, 0x_75, 0x_B9, 0x_BD, 0x_19, 0x_41, 0x_2F, 0x_6C, 0x_FD, 0x_68, 0x_1D, 0x_1C,
		0x_69, 0x_29, 0x_D5, 0x_16, 0x_E2, 0x_CB, 0x_56, 0x_B6, 0x_02, 0x_F0, 0x_21, 0x_06, 0x_DA, 0x_1F, 0x_AF,
		0x_54, 0x_84, 0x_9B, 0x_76, 0x_CF, 0x_92, 0x_04, 0x_9E, 0x_6A, 0x_AA, 0x_22, 0x_EC, 0x_EA, 0x_58, 0x_DE,
		0x_08, 0x_A3, 0x_8D, 0x_72, 0x_31, 0x_A0, 0x_AD, 0x_D4, 0x_8B, 0x_34, 0x_A4, 0x_BA, 0x_6F, 0x_99, 0x_88,
		0x_C4, 0x_49, 0x_65, 0x_80, 0x_24, 0x_5B, 0x_97, 0x_9A, 0x_F6, 0x_63, 0x_07, 0x_9C, 0x_B1, 0x_8C, 0x_81,
		0x_98, 0x_0F, 0x_E6, 0x_FE, 0x_BC, 0x_DB, 0x_A1, 0x_14, 0x_3E, 0x_F1, 0x_2A, 0x_44, 0x_5F, 0x_1A, 0x_94,
		0x_23, 0x_85, 0x_86, 0x_2E, 0x_78, 0x_B8, 0x_67, 0x_D3, 0x_BB, 0x_87, 0x_C3, 0x_D2, 0x_93, 0x_7A, 0x_3A,
		0x_05, 0x_5C, 0x_61, 0x_66, 0x_73, 0x_2C, 0x_43,
	];

	helper(S, BASE, -25_228_794);
}
// endregion
// region: s_has_whitespaces_and_minus_286_003_201_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_minus_286_003_201_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0A, 0x_2D, 0x_6D, 0x_A3, 0x_E8, 0x_AE,
		0x_0D, 0x_08, 0x_70, 0x_08, 0x_2F, 0x_E2, 0x_74, 0x_53, 0x_ED, 0x_EB, 0x_31, 0x_07, 0x_CC, 0x_A3, 0x_2A,
		0x_07, 0x_8E, 0x_FE, 0x_05, 0x_E7, 0x_D2, 0x_9D, 0x_BC, 0x_42, 0x_7C, 0x_56, 0x_6B, 0x_3E, 0x_51, 0x_9E,
		0x_34, 0x_BF, 0x_71, 0x_FE, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_6A, 0x_F1, 0x_E1, 0x_AB, 0x_EE, 0x_61, 0x_05, 0x_F8, 0x_6F, 0x_40, 0x_14, 0x_45, 0x_A5, 0x_08, 0x_74,
		0x_D6, 0x_B0, 0x_39, 0x_6D, 0x_8F, 0x_A1, 0x_06, 0x_96, 0x_E6, 0x_89, 0x_C8, 0x_31, 0x_B2, 0x_77, 0x_4F,
		0x_CB, 0x_FF, 0x_C4, 0x_CE, 0x_A9, 0x_69, 0x_9F, 0x_15, 0x_41, 0x_FE, 0x_D0, 0x_B7, 0x_26, 0x_55, 0x_E5,
		0x_23, 0x_7E, 0x_BF, 0x_56, 0x_44, 0x_A6, 0x_11, 0x_DA, 0x_D7, 0x_65, 0x_A8, 0x_EC, 0x_63, 0x_16, 0x_02,
		0x_83, 0x_8B, 0x_D9, 0x_D3, 0x_8A, 0x_37, 0x_BB, 0x_A2, 0x_5A, 0x_D5, 0x_58, 0x_C7, 0x_62, 0x_C0, 0x_47,
		0x_D4, 0x_90, 0x_34, 0x_2A, 0x_D2, 0x_54, 0x_5B, 0x_1F, 0x_AC, 0x_9D, 0x_1D, 0x_12, 0x_84, 0x_07, 0x_B6,
		0x_A0, 0x_71, 0x_CC, 0x_67, 0x_97, 0x_17, 0x_DC, 0x_53, 0x_86, 0x_93, 0x_25, 0x_10, 0x_35, 0x_BE, 0x_49,
		0x_81, 0x_75, 0x_DE, 0x_5F, 0x_70, 0x_46, 0x_E2, 0x_95, 0x_0F, 0x_4C, 0x_6C, 0x_6B, 0x_1C, 0x_87, 0x_0E,
		0x_18, 0x_C1, 0x_79, 0x_BD, 0x_01, 0x_E9, 0x_5D, 0x_A4, 0x_8D, 0x_C9, 0x_3E, 0x_FD, 0x_8C, 0x_FA, 0x_F9,
		0x_33, 0x_22, 0x_66, 0x_9A, 0x_42, 0x_A7, 0x_C2, 0x_3B, 0x_98, 0x_68, 0x_E3, 0x_B3, 0x_F6, 0x_C5, 0x_3F,
		0x_DB, 0x_B9, 0x_D8, 0x_9E, 0x_13, 0x_2E, 0x_80, 0x_B8, 0x_E0, 0x_2C, 0x_7B, 0x_D1, 0x_CA, 0x_7A, 0x_03,
		0x_43, 0x_F4, 0x_CF, 0x_AD, 0x_1E, 0x_F5, 0x_3A, 0x_AE, 0x_92, 0x_52, 0x_21, 0x_85, 0x_DD, 0x_24, 0x_29,
		0x_5E, 0x_1B, 0x_38, 0x_C6, 0x_73, 0x_59, 0x_3C, 0x_4A, 0x_88, 0x_7C, 0x_B5, 0x_F3, 0x_FC, 0x_27, 0x_FB,
		0x_4D, 0x_CD, 0x_5C, 0x_78, 0x_2F, 0x_9C, 0x_48, 0x_AF, 0x_EF, 0x_6E, 0x_C3, 0x_B4, 0x_EB, 0x_E7, 0x_51,
		0x_60, 0x_32, 0x_50, 0x_82, 0x_19, 0x_AA, 0x_EA, 0x_ED, 0x_E8, 0x_36, 0x_99, 0x_3D, 0x_76, 0x_8E, 0x_F7,
		0x_7D, 0x_BA, 0x_28, 0x_F2, 0x_4E, 0x_57, 0x_BC, 0x_30, 0x_72, 0x_E4, 0x_64, 0x_7F, 0x_DF, 0x_1A, 0x_04,
		0x_4B, 0x_A3, 0x_94, 0x_F0, 0x_91, 0x_9B, 0x_B1,
	];

	helper(S, BASE, -286_003_201);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_9_in_base_2
#[test]
fn s_has_signs_and_zeros_and_minus_9_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_71, 0x_41, 0x_41, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_71,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_55_in_base_2
#[test]
fn s_has_signs_and_zeros_and_minus_55_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_B4,
		0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4,
		0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_01, 0x_01, 0x_B4, 0x_01, 0x_01, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_01,
	];

	helper(S, BASE, -55);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_846_in_base_2
#[test]
fn s_has_signs_and_zeros_and_minus_846_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_BE, 0x_BE, 0x_60, 0x_BE, 0x_60, 0x_60, 0x_BE, 0x_BE, 0x_BE,
		0x_60,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_BE,
	];

	helper(S, BASE, -846);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_4_122_in_base_2
#[test]
fn s_has_signs_and_zeros_and_minus_4_122_in_base_2() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4,
		0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_DF, 0x_A4, 0x_A4, 0x_A4, 0x_A4,
		0x_A4, 0x_A4, 0x_A4, 0x_DF, 0x_DF, 0x_A4, 0x_DF, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_DF,
	];

	helper(S, BASE, -4_122);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_99_187_in_base_2
#[test]
fn s_has_signs_and_zeros_and_minus_99_187_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_4E, 0x_4E, 0x_4A, 0x_4A, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4A, 0x_4A, 0x_4E, 0x_4A, 0x_4A, 0x_4A, 0x_4E, 0x_4E, 0x_4A, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_4A,
	];

	helper(S, BASE, -99_187);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_318_915_in_base_2
#[test]
fn s_has_signs_and_zeros_and_minus_318_915_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0,
		0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_69, 0x_F0, 0x_F0, 0x_69, 0x_69, 0x_F0, 0x_69, 0x_69, 0x_69, 0x_F0,
		0x_69, 0x_69, 0x_69, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_69, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_F0, 0x_69,
	];

	helper(S, BASE, -318_915);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_9_702_029_in_base_2
#[test]
fn s_has_signs_and_zeros_and_minus_9_702_029_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A,
		0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A,
		0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_51,
		0x_8A, 0x_8A, 0x_51, 0x_8A, 0x_51, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_51, 0x_8A, 0x_51, 0x_8A,
		0x_51, 0x_8A, 0x_8A, 0x_8A, 0x_51, 0x_51, 0x_8A, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_51,
	];

	helper(S, BASE, -9_702_029);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_72_899_154_in_base_2
#[test]
fn s_has_signs_and_zeros_and_minus_72_899_154_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_DA, 0x_87, 0x_87,
		0x_87, 0x_DA, 0x_87, 0x_DA, 0x_DA, 0x_87, 0x_87, 0x_87, 0x_87, 0x_DA, 0x_87, 0x_DA, 0x_DA, 0x_87, 0x_DA,
		0x_87, 0x_87, 0x_DA, 0x_87, 0x_DA, 0x_87, 0x_87, 0x_DA, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_87, 0x_DA,
	];

	helper(S, BASE, -72_899_154);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_522_063_442_in_base_2
#[test]
fn s_has_signs_and_zeros_and_minus_522_063_442_in_base_2() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_EE, 0x_EE, 0x_EE, 0x_EE,
		0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_EE, 0x_EE, 0x_EE, 0x_7B, 0x_7B,
		0x_7B, 0x_7B, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_7B, 0x_7B, 0x_7B, 0x_EE, 0x_EE, 0x_7B, 0x_EE, 0x_7B,
		0x_EE, 0x_EE, 0x_7B, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_7B,
	];

	helper(S, BASE, -522_063_442);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_3_in_base_3
#[test]
fn s_has_signs_and_zeros_and_minus_3_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E,
		0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_92, 0x_4E,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_92, 0x_31,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_47_in_base_3
#[test]
fn s_has_signs_and_zeros_and_minus_47_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC,
		0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC,
		0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC, 0x_FC,
		0x_86, 0x_13, 0x_FC, 0x_13,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_86, 0x_13,
	];

	helper(S, BASE, -47);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_603_in_base_3
#[test]
fn s_has_signs_and_zeros_and_minus_603_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7,
		0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7,
		0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_AE, 0x_8D, 0x_8D, 0x_8D, 0x_E7, 0x_E7,
	];
	const BASE: &[u8] = &[
		0x_E7, 0x_8D, 0x_AE,
	];

	helper(S, BASE, -603);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_9_032_in_base_3
#[test]
fn s_has_signs_and_zeros_and_minus_9_032_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_C9, 0x_C9,
		0x_E9, 0x_C9, 0x_E9, 0x_C9, 0x_C9, 0x_C9, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_E9, 0x_C9, 0x_64,
	];

	helper(S, BASE, -9_032);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_25_069_in_base_3
#[test]
fn s_has_signs_and_zeros_and_minus_25_069_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25,
		0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25,
		0x_25, 0x_25, 0x_25, 0x_31, 0x_25, 0x_A1, 0x_31, 0x_31, 0x_25, 0x_31, 0x_31, 0x_31, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_31, 0x_A1,
	];

	helper(S, BASE, -25_069);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_901_245_in_base_3
#[test]
fn s_has_signs_and_zeros_and_minus_901_245_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49, 0x_49,
		0x_49, 0x_49, 0x_49, 0x_49, 0x_93, 0x_81, 0x_49, 0x_49, 0x_81, 0x_93, 0x_49, 0x_49, 0x_81, 0x_93, 0x_93,
		0x_93, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_49, 0x_93, 0x_81,
	];

	helper(S, BASE, -901_245);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_7_180_539_in_base_3
#[test]
fn s_has_signs_and_zeros_and_minus_7_180_539_in_base_3() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_FA, 0x_2C, 0x_DA, 0x_FA, 0x_2C,
		0x_2C, 0x_FA, 0x_FA, 0x_DA,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_2C, 0x_FA,
	];

	helper(S, BASE, -7_180_539);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_41_146_967_in_base_3
#[test]
fn s_has_signs_and_zeros_and_minus_41_146_967_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_77, 0x_77,
		0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77,
		0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77,
		0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_91, 0x_91, 0x_F7, 0x_91, 0x_F7, 0x_77, 0x_91, 0x_F7, 0x_F7, 0x_F7,
		0x_77, 0x_77, 0x_77, 0x_91, 0x_77, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_F7, 0x_91,
	];

	helper(S, BASE, -41_146_967);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_904_995_639_in_base_3
#[test]
fn s_has_signs_and_zeros_and_minus_904_995_639_in_base_3() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_C4, 0x_C4, 0x_C4, 0x_BE, 0x_31, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_31, 0x_BE,
		0x_BE, 0x_C4, 0x_31, 0x_31, 0x_BE, 0x_31, 0x_BE, 0x_BE, 0x_C4, 0x_C4, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_31, 0x_BE,
	];

	helper(S, BASE, -904_995_639);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_8_in_base_5
#[test]
fn s_has_signs_and_zeros_and_minus_8_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_D4, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_98, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_98, 0x_38, 0x_D7, 0x_80,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_24_in_base_5
#[test]
fn s_has_signs_and_zeros_and_minus_24_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_C9, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_EA, 0x_05, 0x_68, 0x_C9,
	];

	helper(S, BASE, -24);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_841_in_base_5
#[test]
fn s_has_signs_and_zeros_and_minus_841_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84,
		0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84,
		0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84,
		0x_84, 0x_84, 0x_84, 0x_E5, 0x_E5, 0x_1D, 0x_1D, 0x_E5,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_E5, 0x_3F, 0x_1D, 0x_23,
	];

	helper(S, BASE, -841);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_5_205_in_base_5
#[test]
fn s_has_signs_and_zeros_and_minus_5_205_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_70, 0x_70, 0x_70,
		0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70,
		0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_06, 0x_2F, 0x_06, 0x_2F, 0x_06, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_70, 0x_06, 0x_1B, 0x_2F, 0x_12,
	];

	helper(S, BASE, -5_205);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_30_212_in_base_5
#[test]
fn s_has_signs_and_zeros_and_minus_30_212_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53,
		0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53,
		0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_39, 0x_E9, 0x_E7, 0x_39, 0x_E7, 0x_2A, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_53, 0x_39, 0x_2A, 0x_E7, 0x_E9,
	];

	helper(S, BASE, -30_212);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_467_792_in_base_5
#[test]
fn s_has_signs_and_zeros_and_minus_467_792_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3,
		0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3,
		0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_EB, 0x_A3, 0x_EF, 0x_EF,
		0x_31, 0x_BA, 0x_EB, 0x_31, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_EB, 0x_BA, 0x_31, 0x_EF,
	];

	helper(S, BASE, -467_792);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_111_871_in_base_5
#[test]
fn s_has_signs_and_zeros_and_minus_6_111_871_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4,
		0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4,
		0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_1C, 0x_A4,
		0x_1C, 0x_34, 0x_A4, 0x_1C, 0x_65, 0x_65, 0x_65, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_34, 0x_A3, 0x_1C, 0x_65,
	];

	helper(S, BASE, -6_111_871);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_31_336_542_in_base_5
#[test]
fn s_has_signs_and_zeros_and_minus_31_336_542_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D,
		0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_3F, 0x_1E, 0x_9D, 0x_1E, 0x_9D, 0x_87,
		0x_3F, 0x_87, 0x_1E, 0x_3F, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_9D, 0x_1E, 0x_87, 0x_3F, 0x_04,
	];

	helper(S, BASE, -31_336_542);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_994_517_699_in_base_5
#[test]
fn s_has_signs_and_zeros_and_minus_994_517_699_in_base_5() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_D4, 0x_D4, 0x_D4,
		0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_D4,
		0x_06, 0x_D4, 0x_3E, 0x_06, 0x_D4, 0x_06, 0x_06, 0x_D4, 0x_9B, 0x_3E, 0x_B0, 0x_06, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_3E, 0x_B0, 0x_9B, 0x_06,
	];

	helper(S, BASE, -994_517_699);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_in_base_7
#[test]
fn s_has_signs_and_zeros_and_minus_2_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_E6,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_B1, 0x_E6, 0x_AA, 0x_FD, 0x_E3, 0x_6C,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_37_in_base_7
#[test]
fn s_has_signs_and_zeros_and_minus_37_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93,
		0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93,
		0x_93, 0x_93, 0x_93, 0x_4D, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_DF, 0x_AD, 0x_57, 0x_59, 0x_4D, 0x_9C,
	];

	helper(S, BASE, -37);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_152_in_base_7
#[test]
fn s_has_signs_and_zeros_and_minus_152_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_1A, 0x_27,
		0x_11,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_6E, 0x_D0, 0x_1A, 0x_65, 0x_11, 0x_BC,
	];

	helper(S, BASE, -152);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_1_134_in_base_7
#[test]
fn s_has_signs_and_zeros_and_minus_1_134_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7,
		0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_38, 0x_FC, 0x_EE, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_EE, 0x_FC, 0x_38, 0x_24, 0x_AE, 0x_22,
	];

	helper(S, BASE, -1_134);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_46_935_in_base_7
#[test]
fn s_has_signs_and_zeros_and_minus_46_935_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14,
		0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_3B, 0x_A9, 0x_71, 0x_A9, 0x_7B, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_F0, 0x_3B, 0x_71, 0x_4B, 0x_A9, 0x_7B,
	];

	helper(S, BASE, -46_935);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_650_345_in_base_7
#[test]
fn s_has_signs_and_zeros_and_minus_650_345_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_9F, 0x_8F, 0x_A8, 0x_84, 0x_03, 0x_80, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_36, 0x_80, 0x_8F, 0x_A8, 0x_9F, 0x_84,
	];

	helper(S, BASE, -650_345);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_3_713_850_in_base_7
#[test]
fn s_has_signs_and_zeros_and_minus_3_713_850_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_2E, 0x_9C, 0x_9C, 0x_DB,
		0x_4A, 0x_9C, 0x_DB, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_9E, 0x_BD, 0x_9C, 0x_2E, 0x_4A, 0x_DB,
	];

	helper(S, BASE, -3_713_850);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_49_243_726_in_base_7
#[test]
fn s_has_signs_and_zeros_and_minus_49_243_726_in_base_7() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_98, 0x_98, 0x_0E, 0x_82, 0x_0E, 0x_FD, 0x_4D, 0x_82, 0x_87, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_87, 0x_98, 0x_B5, 0x_0E, 0x_4D, 0x_82, 0x_FD,
	];

	helper(S, BASE, -49_243_726);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_865_974_401_in_base_7
#[test]
fn s_has_signs_and_zeros_and_minus_865_974_401_in_base_7() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_EF, 0x_EF, 0x_EF,
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF,
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF,
		0x_B8, 0x_EF, 0x_B8, 0x_89, 0x_B8, 0x_3F, 0x_3F, 0x_94, 0x_3F, 0x_5A, 0x_63,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_89, 0x_94, 0x_B8, 0x_3F, 0x_63, 0x_5A,
	];

	helper(S, BASE, -865_974_401);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_7_in_base_11
#[test]
fn s_has_signs_and_zeros_and_minus_7_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_38, 0x_58, 0x_03, 0x_32, 0x_DA, 0x_64, 0x_A1, 0x_A0, 0x_74, 0x_D9,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_50_in_base_11
#[test]
fn s_has_signs_and_zeros_and_minus_50_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90,
		0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_3D, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_59, 0x_F3, 0x_87, 0x_3D, 0x_9C, 0x_14, 0x_F6, 0x_79, 0x_40, 0x_39,
	];

	helper(S, BASE, -50);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_918_in_base_11
#[test]
fn s_has_signs_and_zeros_and_minus_918_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3,
		0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_14, 0x_27, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_B4, 0x_79, 0x_70, 0x_ED, 0x_FF, 0x_27, 0x_14, 0x_5D, 0x_74, 0x_54,
	];

	helper(S, BASE, -918);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_8_438_in_base_11
#[test]
fn s_has_signs_and_zeros_and_minus_8_438_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_FF, 0x_D0, 0x_D8, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_B6, 0x_70, 0x_D0, 0x_43, 0x_63, 0x_FF, 0x_30, 0x_D8, 0x_4A, 0x_89,
	];

	helper(S, BASE, -8_438);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_43_051_in_base_11
#[test]
fn s_has_signs_and_zeros_and_minus_43_051_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_4E, 0x_28, 0x_29, 0x_9F, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_F4, 0x_4E, 0x_29, 0x_B5, 0x_FA, 0x_36, 0x_D7, 0x_9F, 0x_93, 0x_28,
	];

	helper(S, BASE, -43_051);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_195_547_in_base_11
#[test]
fn s_has_signs_and_zeros_and_minus_195_547_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_AB, 0x_91, 0x_BE, 0x_D9, 0x_AB, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_AB, 0x_91, 0x_BE, 0x_8D, 0x_6B, 0x_14, 0x_86, 0x_5E, 0x_90, 0x_D9,
	];

	helper(S, BASE, -195_547);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_4_771_261_in_base_11
#[test]
fn s_has_signs_and_zeros_and_minus_4_771_261_in_base_11() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_07, 0x_07, 0x_07,
		0x_07, 0x_E6, 0x_D8, 0x_D5, 0x_B6, 0x_D8, 0x_E7, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_4E, 0x_E6, 0x_3E, 0x_6D, 0x_43, 0x_D5, 0x_D8, 0x_FD, 0x_B6, 0x_E7,
	];

	helper(S, BASE, -4_771_261);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_38_350_562_in_base_11
#[test]
fn s_has_signs_and_zeros_and_minus_38_350_562_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81,
		0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81,
		0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_45, 0x_4B, 0x_3F, 0x_45, 0x_C0, 0x_37, 0x_42,
		0x_42,
	];
	const BASE: &[u8] = &[
		0x_81, 0x_45, 0x_2A, 0x_37, 0x_C0, 0x_D1, 0x_D5, 0x_3F, 0x_42, 0x_D3, 0x_4B,
	];

	helper(S, BASE, -38_350_562);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_131_036_517_in_base_11
#[test]
fn s_has_signs_and_zeros_and_minus_131_036_517_in_base_11() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_26, 0x_D2, 0x_14,
		0x_26, 0x_14, 0x_D2, 0x_FD, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_11, 0x_FB, 0x_95, 0x_FD, 0x_7B, 0x_26, 0x_D2, 0x_C6, 0x_66, 0x_14,
	];

	helper(S, BASE, -131_036_517);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_in_base_13
#[test]
fn s_has_signs_and_zeros_and_minus_6_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_4D,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_10, 0x_6D, 0x_B8, 0x_7F, 0x_7B, 0x_4D, 0x_1C, 0x_F9, 0x_61, 0x_3F, 0x_BE, 0x_66,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_84_in_base_13
#[test]
fn s_has_signs_and_zeros_and_minus_84_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C,
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C,
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_10, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_44, 0x_63, 0x_B2, 0x_7E, 0x_F2, 0x_10, 0x_D4, 0x_E9, 0x_BB, 0x_ED, 0x_80, 0x_BD,
	];

	helper(S, BASE, -84);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_150_in_base_13
#[test]
fn s_has_signs_and_zeros_and_minus_150_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_01, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_03, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_93, 0x_8A, 0x_1A, 0x_7E, 0x_A5, 0x_FB, 0x_E3, 0x_4F, 0x_34, 0x_9D, 0x_03, 0x_6B,
	];

	helper(S, BASE, -150);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_231_in_base_13
#[test]
fn s_has_signs_and_zeros_and_minus_2_231_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_A4, 0x_A4, 0x_A4, 0x_A4,
		0x_79, 0x_A4, 0x_28, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_79, 0x_28, 0x_AE, 0x_B9, 0x_0E, 0x_6B, 0x_67, 0x_92, 0x_F0, 0x_02, 0x_71, 0x_85,
	];

	helper(S, BASE, -2_231);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_79_689_in_base_13
#[test]
fn s_has_signs_and_zeros_and_minus_79_689_in_base_13() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3,
		0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_36, 0x_4A, 0x_A8, 0x_56, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_73, 0x_36, 0x_A8, 0x_EE, 0x_9D, 0x_56, 0x_30, 0x_81, 0x_1F, 0x_4A, 0x_D6, 0x_D0,
	];

	helper(S, BASE, -79_689);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_250_420_in_base_13
#[test]
fn s_has_signs_and_zeros_and_minus_250_420_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF,
		0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF,
		0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF,
		0x_BF, 0x_BF, 0x_BF, 0x_DD, 0x_EB, 0x_C0, 0x_99, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_D6, 0x_46, 0x_13, 0x_70, 0x_5F, 0x_DC, 0x_AF, 0x_DD, 0x_EB, 0x_99, 0x_03, 0x_C0,
	];

	helper(S, BASE, -250_420);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_4_624_170_in_base_13
#[test]
fn s_has_signs_and_zeros_and_minus_4_624_170_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6,
		0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6,
		0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_52, 0x_D1, 0x_3F, 0x_B6, 0x_52, 0x_D1,
	];
	const BASE: &[u8] = &[
		0x_C6, 0x_21, 0x_92, 0x_48, 0x_8D, 0x_D1, 0x_D4, 0x_81, 0x_FD, 0x_B6, 0x_22, 0x_3F, 0x_52,
	];

	helper(S, BASE, -4_624_170);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_47_745_392_in_base_13
#[test]
fn s_has_signs_and_zeros_and_minus_47_745_392_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_C6,
		0x_61, 0x_D1, 0x_C6, 0x_41, 0x_41, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_41, 0x_34, 0x_77, 0x_38, 0x_4B, 0x_FF, 0x_D1, 0x_9A, 0x_C6, 0x_3C, 0x_61, 0x_6C,
	];

	helper(S, BASE, -47_745_392);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_192_485_369_in_base_13
#[test]
fn s_has_signs_and_zeros_and_minus_192_485_369_in_base_13() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_4D, 0x_4D, 0x_4D, 0x_4D,
		0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D,
		0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_67, 0x_4D, 0x_7D, 0x_50, 0x_50, 0x_35, 0x_01, 0x_7D,
	];
	const BASE: &[u8] = &[
		0x_4D, 0x_A2, 0x_55, 0x_67, 0x_AA, 0x_50, 0x_26, 0x_EA, 0x_01, 0x_23, 0x_35, 0x_7D, 0x_49,
	];

	helper(S, BASE, -192_485_369);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_in_base_19
#[test]
fn s_has_signs_and_zeros_and_minus_6_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73, 0x_73,
		0x_73, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_38, 0x_8A, 0x_35, 0x_EC, 0x_C1, 0x_AB, 0x_15, 0x_CB, 0x_32, 0x_B8, 0x_26, 0x_CA, 0x_6C, 0x_08,
		0x_B2, 0x_69, 0x_E0, 0x_57,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_82_in_base_19
#[test]
fn s_has_signs_and_zeros_and_minus_82_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_A5,
		0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_4A, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_A5, 0x_2C, 0x_5A, 0x_23, 0x_4A, 0x_CC, 0x_44, 0x_ED, 0x_0F, 0x_33, 0x_24, 0x_E5, 0x_77, 0x_FC, 0x_FD,
		0x_AC, 0x_1B, 0x_87, 0x_43,
	];

	helper(S, BASE, -82);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_453_in_base_19
#[test]
fn s_has_signs_and_zeros_and_minus_453_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F,
		0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_3D, 0x_8E, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_3D, 0x_25, 0x_02, 0x_8E, 0x_3F, 0x_9E, 0x_3B, 0x_24, 0x_66, 0x_F9, 0x_D1, 0x_CA, 0x_D9, 0x_4B,
		0x_38, 0x_32, 0x_57, 0x_6A,
	];

	helper(S, BASE, -453);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_615_in_base_19
#[test]
fn s_has_signs_and_zeros_and_minus_6_615_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_92, 0x_95, 0x_BB,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_54, 0x_7E, 0x_BB, 0x_E7, 0x_46, 0x_95, 0x_85, 0x_68, 0x_21, 0x_5A, 0x_F0, 0x_52, 0x_86, 0x_73,
		0x_D5, 0x_B8, 0x_4B, 0x_92,
	];

	helper(S, BASE, -6_615);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_71_888_in_base_19
#[test]
fn s_has_signs_and_zeros_and_minus_71_888_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_64,
		0x_D0, 0x_69, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_D2, 0x_69, 0x_B8, 0x_7E, 0x_DE, 0x_07, 0x_6A, 0x_BB, 0x_D0, 0x_64, 0x_BE, 0x_1C, 0x_CC, 0x_83,
		0x_D1, 0x_4A, 0x_67, 0x_B6,
	];

	helper(S, BASE, -71_888);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_404_248_in_base_19
#[test]
fn s_has_signs_and_zeros_and_minus_404_248_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF,
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF,
		0x_37, 0x_9C, 0x_A8, 0x_E1, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_9C, 0x_30, 0x_37, 0x_64, 0x_1A, 0x_1C, 0x_5E, 0x_40, 0x_10, 0x_34, 0x_F3, 0x_8B, 0x_70, 0x_F5,
		0x_E1, 0x_03, 0x_A8, 0x_F0,
	];

	helper(S, BASE, -404_248);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_160_340_in_base_19
#[test]
fn s_has_signs_and_zeros_and_minus_6_160_340_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C,
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_06, 0x_12,
		0x_8F, 0x_06, 0x_BF, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_50, 0x_06, 0x_DB, 0x_DD, 0x_8F, 0x_B5, 0x_ED, 0x_8B, 0x_12, 0x_27, 0x_B8, 0x_BF, 0x_D1, 0x_5C,
		0x_7D, 0x_D7, 0x_9A, 0x_FA,
	];

	helper(S, BASE, -6_160_340);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_58_852_612_in_base_19
#[test]
fn s_has_signs_and_zeros_and_minus_58_852_612_in_base_19() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_DC, 0x_28, 0x_F5,
		0x_7E, 0x_83, 0x_7E, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_CD, 0x_DC, 0x_F6, 0x_E7, 0x_28, 0x_D5, 0x_83, 0x_C5, 0x_5D, 0x_40, 0x_B2, 0x_7E, 0x_16, 0x_D0, 0x_F5,
		0x_3E, 0x_74, 0x_AE, 0x_5B,
	];

	helper(S, BASE, -58_852_612);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_568_001_827_in_base_19
#[test]
fn s_has_signs_and_zeros_and_minus_568_001_827_in_base_19() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_83, 0x_9E, 0x_EE, 0x_A4, 0x_E8, 0x_0E,
		0x_C8,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_9E, 0x_E3, 0x_E8, 0x_7A, 0x_0E, 0x_AF, 0x_EE, 0x_81, 0x_A4, 0x_6C, 0x_08, 0x_83, 0x_5A, 0x_B2,
		0x_91, 0x_27, 0x_60, 0x_C9,
	];

	helper(S, BASE, -568_001_827);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_8_in_base_42
#[test]
fn s_has_signs_and_zeros_and_minus_8_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC,
		0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_EC, 0x_29, 0x_73, 0x_63, 0x_7D, 0x_F7, 0x_5E, 0x_82, 0x_9E, 0x_01, 0x_0E, 0x_F6, 0x_16, 0x_D0, 0x_1B,
		0x_39, 0x_4E, 0x_EF, 0x_F3, 0x_A2, 0x_BB, 0x_BC, 0x_85, 0x_BD, 0x_CF, 0x_7C, 0x_27, 0x_DB, 0x_0F, 0x_3C,
		0x_E1, 0x_7E, 0x_89, 0x_74, 0x_80, 0x_6F, 0x_B0, 0x_2A, 0x_DF, 0x_E7, 0x_45, 0x_34,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_13_in_base_42
#[test]
fn s_has_signs_and_zeros_and_minus_13_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_C1, 0x_71, 0x_C9, 0x_87, 0x_67, 0x_73, 0x_63, 0x_D0, 0x_CD, 0x_80, 0x_86, 0x_75, 0x_25, 0x_90,
		0x_44, 0x_E6, 0x_EF, 0x_8D, 0x_08, 0x_79, 0x_4E, 0x_F4, 0x_97, 0x_AC, 0x_BB, 0x_3A, 0x_B1, 0x_5E, 0x_A0,
		0x_42, 0x_70, 0x_B0, 0x_77, 0x_3C, 0x_16, 0x_FC, 0x_4D, 0x_82, 0x_C3, 0x_F1, 0x_1E,
	];

	helper(S, BASE, -13);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_657_in_base_42
#[test]
fn s_has_signs_and_zeros_and_minus_657_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_F6, 0x_F6, 0x_F6, 0x_14, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_C5, 0x_DE, 0x_C6, 0x_07, 0x_B9, 0x_40, 0x_78, 0x_F5, 0x_68, 0x_91, 0x_9D, 0x_E8, 0x_9A, 0x_CA,
		0x_14, 0x_A0, 0x_FD, 0x_EF, 0x_10, 0x_DF, 0x_74, 0x_24, 0x_69, 0x_62, 0x_21, 0x_60, 0x_AD, 0x_38, 0x_3F,
		0x_F1, 0x_49, 0x_31, 0x_45, 0x_54, 0x_39, 0x_7E, 0x_CF, 0x_C9, 0x_77, 0x_4F, 0x_C3,
	];

	helper(S, BASE, -657);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_1_643_in_base_42
#[test]
fn s_has_signs_and_zeros_and_minus_1_643_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_F9, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_4C, 0x_58, 0x_14, 0x_3E, 0x_24, 0x_DB, 0x_B9, 0x_29, 0x_72, 0x_ED, 0x_B7, 0x_5C, 0x_5A, 0x_D5,
		0x_76, 0x_2C, 0x_45, 0x_9C, 0x_C4, 0x_AB, 0x_BF, 0x_6E, 0x_77, 0x_04, 0x_15, 0x_F5, 0x_F0, 0x_E5, 0x_22,
		0x_E0, 0x_92, 0x_7D, 0x_B0, 0x_F4, 0x_3F, 0x_CF, 0x_EC, 0x_8C, 0x_F9, 0x_1C, 0x_38,
	];

	helper(S, BASE, -1_643);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_84_181_in_base_42
#[test]
fn s_has_signs_and_zeros_and_minus_84_181_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_B7, 0x_B7, 0x_B7, 0x_B7,
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_CA, 0x_3F, 0x_93, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_CA, 0x_BA, 0x_E1, 0x_27, 0x_3F, 0x_4C, 0x_49, 0x_39, 0x_58, 0x_46, 0x_37, 0x_F5, 0x_FE, 0x_D6,
		0x_D3, 0x_AA, 0x_86, 0x_FA, 0x_30, 0x_C1, 0x_77, 0x_AF, 0x_47, 0x_81, 0x_F3, 0x_03, 0x_EC, 0x_E7, 0x_13,
		0x_93, 0x_E9, 0x_60, 0x_F8, 0x_40, 0x_98, 0x_89, 0x_EE, 0x_CF, 0x_B1, 0x_04, 0x_F2,
	];

	helper(S, BASE, -84_181);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_131_915_in_base_42
#[test]
fn s_has_signs_and_zeros_and_minus_131_915_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_EC, 0x_53, 0x_53, 0x_E6,
	];
	const BASE: &[u8] = &[
		0x_8B, 0x_EC, 0x_76, 0x_E3, 0x_E1, 0x_CC, 0x_42, 0x_98, 0x_5E, 0x_3D, 0x_DC, 0x_C3, 0x_31, 0x_03, 0x_7F,
		0x_C1, 0x_46, 0x_86, 0x_8C, 0x_A4, 0x_0F, 0x_C2, 0x_39, 0x_7D, 0x_6D, 0x_45, 0x_5C, 0x_3F, 0x_9C, 0x_02,
		0x_84, 0x_D6, 0x_53, 0x_F1, 0x_DF, 0x_E6, 0x_6F, 0x_92, 0x_06, 0x_DE, 0x_AA, 0x_AB,
	];

	helper(S, BASE, -131_915);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_7_166_827_in_base_42
#[test]
fn s_has_signs_and_zeros_and_minus_7_166_827_in_base_42() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_55, 0x_3A, 0x_76,
		0x_AD, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_E7, 0x_55, 0x_6A, 0x_70, 0x_85, 0x_68, 0x_6D, 0x_F8, 0x_6F, 0x_D1, 0x_5D, 0x_3A, 0x_51, 0x_2F,
		0x_AC, 0x_86, 0x_14, 0x_82, 0x_DC, 0x_B5, 0x_DA, 0x_07, 0x_F5, 0x_84, 0x_ED, 0x_5E, 0x_E6, 0x_DB, 0x_A2,
		0x_76, 0x_CB, 0x_4C, 0x_BB, 0x_AD, 0x_72, 0x_FA, 0x_BC, 0x_78, 0x_DD, 0x_8D, 0x_F1,
	];

	helper(S, BASE, -7_166_827);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_67_001_972_in_base_42
#[test]
fn s_has_signs_and_zeros_and_minus_67_001_972_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B,
		0x_8B, 0x_59, 0x_64, 0x_92, 0x_B2, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_8B, 0x_89, 0x_8F, 0x_48, 0x_D7, 0x_E0, 0x_04, 0x_63, 0x_B4, 0x_29, 0x_33, 0x_F8, 0x_51, 0x_CB, 0x_92,
		0x_49, 0x_32, 0x_7C, 0x_2E, 0x_F6, 0x_A0, 0x_59, 0x_64, 0x_D2, 0x_4A, 0x_14, 0x_18, 0x_53, 0x_E5, 0x_58,
		0x_B3, 0x_10, 0x_62, 0x_07, 0x_BF, 0x_6D, 0x_CD, 0x_FF, 0x_D3, 0x_DB, 0x_D1, 0x_B2,
	];

	helper(S, BASE, -67_001_972);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_737_779_184_in_base_42
#[test]
fn s_has_signs_and_zeros_and_minus_737_779_184_in_base_42() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_F2, 0x_58, 0x_FC, 0x_26, 0x_AB, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_97, 0x_E2, 0x_FA, 0x_FC, 0x_F2, 0x_26, 0x_AB, 0x_B6, 0x_DD, 0x_17, 0x_FF, 0x_9F, 0x_A0, 0x_D8,
		0x_35, 0x_5D, 0x_9D, 0x_18, 0x_12, 0x_C6, 0x_2F, 0x_5F, 0x_EF, 0x_8F, 0x_5B, 0x_7B, 0x_58, 0x_47, 0x_7F,
		0x_B2, 0x_46, 0x_EA, 0x_42, 0x_14, 0x_E6, 0x_D2, 0x_D7, 0x_BF, 0x_FD, 0x_6B, 0x_D1,
	];

	helper(S, BASE, -737_779_184);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_in_base_73
#[test]
fn s_has_signs_and_zeros_and_minus_6_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_04,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_E3, 0x_03, 0x_35, 0x_95, 0x_C6, 0x_04, 0x_52, 0x_19, 0x_64, 0x_60, 0x_72, 0x_C8, 0x_A9, 0x_91,
		0x_12, 0x_EF, 0x_C5, 0x_D7, 0x_8B, 0x_E8, 0x_78, 0x_4D, 0x_7E, 0x_F1, 0x_D1, 0x_9E, 0x_F6, 0x_8D, 0x_AE,
		0x_B9, 0x_97, 0x_4C, 0x_2F, 0x_E0, 0x_6B, 0x_47, 0x_61, 0x_41, 0x_BF, 0x_18, 0x_E7, 0x_8E, 0x_5C, 0x_EA,
		0x_38, 0x_86, 0x_CA, 0x_82, 0x_45, 0x_0E, 0x_05, 0x_3B, 0x_02, 0x_70, 0x_8F, 0x_B5, 0x_9F, 0x_28, 0x_A8,
		0x_1E, 0x_FA, 0x_8C, 0x_FC, 0x_62, 0x_87, 0x_75, 0x_25, 0x_06, 0x_FF, 0x_DC, 0x_49, 0x_08,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_63_in_base_73
#[test]
fn s_has_signs_and_zeros_and_minus_63_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_A7, 0x_C8, 0x_C5, 0x_4B, 0x_B6, 0x_D0, 0x_3C, 0x_48, 0x_FB, 0x_2E, 0x_8C, 0x_1B, 0x_E2, 0x_8A,
		0x_85, 0x_FA, 0x_59, 0x_61, 0x_B1, 0x_3B, 0x_F3, 0x_2A, 0x_DC, 0x_1D, 0x_9C, 0x_A5, 0x_58, 0x_34, 0x_41,
		0x_BE, 0x_AC, 0x_B2, 0x_E6, 0x_66, 0x_A2, 0x_CE, 0x_DB, 0x_67, 0x_45, 0x_13, 0x_52, 0x_D7, 0x_FF, 0x_BD,
		0x_92, 0x_E5, 0x_BB, 0x_F0, 0x_D3, 0x_3F, 0x_BF, 0x_89, 0x_D8, 0x_EA, 0x_DD, 0x_6E, 0x_F8, 0x_9F, 0x_5C,
		0x_3D, 0x_A4, 0x_32, 0x_D5, 0x_97, 0x_04, 0x_56, 0x_F9, 0x_10, 0x_22, 0x_1A, 0x_AF, 0x_27,
	];

	helper(S, BASE, -63);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_620_in_base_73
#[test]
fn s_has_signs_and_zeros_and_minus_620_in_base_73() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_66, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_E2, 0x_DE, 0x_68, 0x_C6, 0x_BC, 0x_07, 0x_9D, 0x_66, 0x_AE, 0x_AF, 0x_30, 0x_44, 0x_DC, 0x_67,
		0x_F5, 0x_7A, 0x_A0, 0x_79, 0x_4C, 0x_C0, 0x_CF, 0x_52, 0x_F7, 0x_AB, 0x_28, 0x_4E, 0x_8C, 0x_90, 0x_A3,
		0x_D5, 0x_08, 0x_B8, 0x_E1, 0x_33, 0x_E5, 0x_05, 0x_39, 0x_22, 0x_49, 0x_EB, 0x_1B, 0x_21, 0x_D2, 0x_62,
		0x_6E, 0x_85, 0x_A6, 0x_3E, 0x_0F, 0x_91, 0x_63, 0x_10, 0x_D4, 0x_94, 0x_DF, 0x_72, 0x_D3, 0x_6A, 0x_EE,
		0x_A5, 0x_EC, 0x_16, 0x_59, 0x_DD, 0x_F3, 0x_CB, 0x_75, 0x_B2, 0x_D1, 0x_A4, 0x_92, 0x_EF,
	];

	helper(S, BASE, -620);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_013_in_base_73
#[test]
fn s_has_signs_and_zeros_and_minus_2_013_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1,
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1,
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_C1, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_4B, 0x_B3, 0x_89, 0x_1D, 0x_B5, 0x_2A, 0x_2F, 0x_7F, 0x_B2, 0x_D2, 0x_60, 0x_EC, 0x_5E, 0x_44,
		0x_70, 0x_39, 0x_DC, 0x_80, 0x_E0, 0x_E1, 0x_F8, 0x_D8, 0x_FC, 0x_95, 0x_F2, 0x_57, 0x_C1, 0x_0F, 0x_93,
		0x_A7, 0x_79, 0x_B6, 0x_58, 0x_86, 0x_E2, 0x_94, 0x_9C, 0x_A6, 0x_EF, 0x_72, 0x_40, 0x_30, 0x_96, 0x_ED,
		0x_D4, 0x_59, 0x_BA, 0x_C4, 0x_4C, 0x_FE, 0x_04, 0x_8C, 0x_63, 0x_62, 0x_55, 0x_EA, 0x_82, 0x_D1, 0x_3D,
		0x_68, 0x_11, 0x_87, 0x_8A, 0x_E4, 0x_CE, 0x_AE, 0x_53, 0x_25, 0x_51, 0x_2E, 0x_8B, 0x_71,
	];

	helper(S, BASE, -2_013);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_41_283_in_base_73
#[test]
fn s_has_signs_and_zeros_and_minus_41_283_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0,
		0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0,
		0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_32, 0x_DD, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_BA, 0x_F9, 0x_D7, 0x_E8, 0x_93, 0x_0F, 0x_32, 0x_92, 0x_DE, 0x_C7, 0x_3F, 0x_05, 0x_60, 0x_82,
		0x_4A, 0x_B3, 0x_7C, 0x_13, 0x_94, 0x_C3, 0x_B2, 0x_CA, 0x_42, 0x_5D, 0x_D0, 0x_AA, 0x_14, 0x_A9, 0x_5B,
		0x_A8, 0x_46, 0x_F7, 0x_15, 0x_F5, 0x_FB, 0x_E9, 0x_CC, 0x_5C, 0x_76, 0x_FD, 0x_BB, 0x_33, 0x_EA, 0x_03,
		0x_D8, 0x_97, 0x_CE, 0x_7F, 0x_1A, 0x_CB, 0x_88, 0x_C2, 0x_9D, 0x_DD, 0x_EB, 0x_DB, 0x_9A, 0x_C9, 0x_4F,
		0x_1E, 0x_E1, 0x_68, 0x_C8, 0x_37, 0x_24, 0x_9E, 0x_AB, 0x_40, 0x_6B, 0x_8B, 0x_54, 0x_28,
	];

	helper(S, BASE, -41_283);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_327_690_in_base_73
#[test]
fn s_has_signs_and_zeros_and_minus_327_690_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52,
		0x_76, 0x_F9, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_F7, 0x_3F, 0x_8E, 0x_A5, 0x_0F, 0x_71, 0x_7B, 0x_74, 0x_A9, 0x_17, 0x_5D, 0x_CA, 0x_82, 0x_AD,
		0x_95, 0x_DF, 0x_EA, 0x_A0, 0x_B2, 0x_BD, 0x_4F, 0x_60, 0x_02, 0x_7A, 0x_4B, 0x_4C, 0x_1B, 0x_55, 0x_7D,
		0x_BA, 0x_33, 0x_0E, 0x_CC, 0x_24, 0x_F9, 0x_54, 0x_27, 0x_92, 0x_8D, 0x_D7, 0x_AF, 0x_4A, 0x_F2, 0x_E1,
		0x_56, 0x_9C, 0x_B1, 0x_A4, 0x_A2, 0x_CD, 0x_DB, 0x_48, 0x_6C, 0x_B3, 0x_2C, 0x_18, 0x_FD, 0x_46, 0x_F3,
		0x_FB, 0x_76, 0x_C4, 0x_F4, 0x_59, 0x_88, 0x_69, 0x_C8, 0x_19, 0x_FF, 0x_53, 0x_6D, 0x_47,
	];

	helper(S, BASE, -327_690);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_254_270_in_base_73
#[test]
fn s_has_signs_and_zeros_and_minus_6_254_270_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2A,
		0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_90, 0x_14, 0x_8F, 0x_C0,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_C3, 0x_3A, 0x_7C, 0x_10, 0x_14, 0x_A7, 0x_E9, 0x_D0, 0x_41, 0x_A6, 0x_57, 0x_8C, 0x_2E, 0x_EC,
		0x_FB, 0x_90, 0x_33, 0x_91, 0x_1D, 0x_8B, 0x_95, 0x_30, 0x_EA, 0x_9E, 0x_75, 0x_7B, 0x_70, 0x_6B, 0x_EE,
		0x_EF, 0x_AF, 0x_46, 0x_59, 0x_53, 0x_9C, 0x_B7, 0x_CF, 0x_1C, 0x_11, 0x_25, 0x_C8, 0x_43, 0x_AB, 0x_B2,
		0x_8F, 0x_6E, 0x_2C, 0x_1A, 0x_8E, 0x_6D, 0x_DF, 0x_EB, 0x_4C, 0x_39, 0x_40, 0x_05, 0x_D6, 0x_0F, 0x_DA,
		0x_74, 0x_F6, 0x_79, 0x_F9, 0x_96, 0x_36, 0x_7E, 0x_01, 0x_C0, 0x_16, 0x_A2, 0x_31, 0x_E3,
	];

	helper(S, BASE, -6_254_270);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_12_572_437_in_base_73
#[test]
fn s_has_signs_and_zeros_and_minus_12_572_437_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_B5, 0x_8B, 0x_6D, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_1F, 0x_B7, 0x_56, 0x_55, 0x_D8, 0x_38, 0x_49, 0x_C6, 0x_BB, 0x_C3, 0x_1A, 0x_D6, 0x_24, 0x_F5,
		0x_B3, 0x_A3, 0x_3E, 0x_6D, 0x_A0, 0x_BA, 0x_7F, 0x_E3, 0x_8B, 0x_22, 0x_85, 0x_6B, 0x_E8, 0x_05, 0x_06,
		0x_60, 0x_F3, 0x_B5, 0x_88, 0x_34, 0x_E9, 0x_4B, 0x_BD, 0x_54, 0x_D1, 0x_EF, 0x_9E, 0x_5A, 0x_75, 0x_D3,
		0x_59, 0x_79, 0x_1D, 0x_84, 0x_61, 0x_A1, 0x_AF, 0x_45, 0x_2A, 0x_65, 0x_2F, 0x_A2, 0x_27, 0x_86, 0x_71,
		0x_62, 0x_58, 0x_1B, 0x_68, 0x_15, 0x_A9, 0x_30, 0x_E7, 0x_B8, 0x_31, 0x_37, 0x_AD, 0x_FC,
	];

	helper(S, BASE, -12_572_437);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_452_295_085_in_base_73
#[test]
fn s_has_signs_and_zeros_and_minus_452_295_085_in_base_73() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24,
		0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_1F,
		0x_23, 0x_37, 0x_B1, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_24, 0x_EB, 0x_70, 0x_E7, 0x_CC, 0x_E9, 0x_79, 0x_9D, 0x_E1, 0x_21, 0x_9E, 0x_4C, 0x_81, 0x_C9, 0x_51,
		0x_1F, 0x_A6, 0x_D9, 0x_DF, 0x_7A, 0x_49, 0x_B1, 0x_57, 0x_6A, 0x_4D, 0x_2A, 0x_F7, 0x_32, 0x_F3, 0x_15,
		0x_83, 0x_D6, 0x_2C, 0x_D1, 0x_78, 0x_EE, 0x_EF, 0x_0F, 0x_FB, 0x_A2, 0x_28, 0x_B4, 0x_94, 0x_8F, 0x_71,
		0x_B0, 0x_22, 0x_9F, 0x_37, 0x_02, 0x_F2, 0x_92, 0x_FF, 0x_C1, 0x_5C, 0x_DC, 0x_A4, 0x_CE, 0x_05, 0x_35,
		0x_47, 0x_CA, 0x_B6, 0x_61, 0x_8D, 0x_10, 0x_C6, 0x_23, 0x_54, 0x_76, 0x_BC, 0x_8C, 0x_86,
	];

	helper(S, BASE, -452_295_085);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_8_in_base_113
#[test]
fn s_has_signs_and_zeros_and_minus_8_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_3D, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_19, 0x_DA, 0x_34, 0x_95, 0x_3F, 0x_3A, 0x_D4, 0x_98, 0x_D6, 0x_DB, 0x_C3, 0x_90, 0x_4A, 0x_EB,
		0x_E0, 0x_D1, 0x_6D, 0x_26, 0x_36, 0x_85, 0x_32, 0x_5B, 0x_D9, 0x_77, 0x_7E, 0x_CF, 0x_1D, 0x_94, 0x_87,
		0x_DE, 0x_E6, 0x_54, 0x_CB, 0x_1C, 0x_1B, 0x_9F, 0x_56, 0x_B0, 0x_58, 0x_6E, 0x_29, 0x_AC, 0x_63, 0x_69,
		0x_97, 0x_83, 0x_89, 0x_67, 0x_A0, 0x_18, 0x_B3, 0x_11, 0x_86, 0x_44, 0x_4B, 0x_DD, 0x_59, 0x_FC, 0x_A8,
		0x_4D, 0x_B9, 0x_FF, 0x_23, 0x_72, 0x_C0, 0x_8D, 0x_17, 0x_6B, 0x_C9, 0x_BC, 0x_F4, 0x_0F, 0x_25, 0x_52,
		0x_B1, 0x_99, 0x_F7, 0x_C2, 0x_38, 0x_9B, 0x_10, 0x_A5, 0x_84, 0x_E5, 0x_64, 0x_CA, 0x_02, 0x_B6, 0x_13,
		0x_BE, 0x_FA, 0x_F5, 0x_92, 0x_60, 0x_53, 0x_A9, 0x_BB, 0x_35, 0x_39, 0x_D5, 0x_40, 0x_48, 0x_68, 0x_AB,
		0x_70, 0x_7D, 0x_82, 0x_41, 0x_2A, 0x_7C, 0x_62, 0x_96,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_67_in_base_113
#[test]
fn s_has_signs_and_zeros_and_minus_67_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31,
		0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31, 0x_31,
		0x_31, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_31, 0x_57, 0x_AA, 0x_9E, 0x_5E, 0x_2C, 0x_9A, 0x_02, 0x_8C, 0x_16, 0x_85, 0x_53, 0x_A7, 0x_C0, 0x_61,
		0x_95, 0x_3E, 0x_72, 0x_E6, 0x_2A, 0x_BD, 0x_AD, 0x_8A, 0x_88, 0x_C9, 0x_60, 0x_B8, 0x_75, 0x_8F, 0x_45,
		0x_64, 0x_05, 0x_EC, 0x_FE, 0x_55, 0x_5F, 0x_B0, 0x_76, 0x_A3, 0x_65, 0x_14, 0x_4B, 0x_4E, 0x_E0, 0x_1F,
		0x_DB, 0x_E8, 0x_93, 0x_AC, 0x_54, 0x_3A, 0x_C3, 0x_1E, 0x_7A, 0x_28, 0x_E7, 0x_89, 0x_30, 0x_5A, 0x_7D,
		0x_F2, 0x_1B, 0x_D5, 0x_EA, 0x_CB, 0x_A5, 0x_22, 0x_2E, 0x_40, 0x_8E, 0x_9D, 0x_49, 0x_4F, 0x_F6, 0x_C2,
		0x_43, 0x_3F, 0x_B7, 0x_8B, 0x_5B, 0x_B6, 0x_08, 0x_A2, 0x_D4, 0x_44, 0x_87, 0x_39, 0x_D0, 0x_35, 0x_1A,
		0x_94, 0x_01, 0x_3B, 0x_FB, 0x_0F, 0x_D6, 0x_AF, 0x_5C, 0x_56, 0x_23, 0x_FC, 0x_83, 0x_B2, 0x_FD, 0x_E4,
		0x_B5, 0x_EF, 0x_25, 0x_82, 0x_07, 0x_6A, 0x_D1, 0x_C6,
	];

	helper(S, BASE, -67);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_898_in_base_113
#[test]
fn s_has_signs_and_zeros_and_minus_898_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_7A, 0x_7A, 0x_7A,
		0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A,
		0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A,
		0x_7A, 0x_7A, 0x_7A, 0x_44, 0x_55,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_8F, 0x_AA, 0x_6A, 0x_43, 0x_94, 0x_D9, 0x_44, 0x_2F, 0x_32, 0x_24, 0x_F2, 0x_C1, 0x_9B, 0x_9F,
		0x_B9, 0x_15, 0x_A1, 0x_F5, 0x_DE, 0x_28, 0x_FF, 0x_59, 0x_03, 0x_17, 0x_93, 0x_E6, 0x_B8, 0x_1B, 0x_58,
		0x_9E, 0x_E3, 0x_45, 0x_EF, 0x_4E, 0x_81, 0x_1E, 0x_F3, 0x_6E, 0x_BC, 0x_82, 0x_F8, 0x_A8, 0x_33, 0x_5B,
		0x_02, 0x_1C, 0x_98, 0x_E7, 0x_48, 0x_B0, 0x_DC, 0x_F1, 0x_4F, 0x_BA, 0x_4A, 0x_5D, 0x_EC, 0x_8A, 0x_DF,
		0x_A7, 0x_5E, 0x_79, 0x_0F, 0x_BF, 0x_30, 0x_87, 0x_83, 0x_C2, 0x_52, 0x_D0, 0x_65, 0x_08, 0x_FD, 0x_D2,
		0x_9D, 0x_1D, 0x_72, 0x_70, 0x_DB, 0x_5C, 0x_90, 0x_69, 0x_99, 0x_AF, 0x_49, 0x_F7, 0x_CF, 0x_E8, 0x_D7,
		0x_DA, 0x_12, 0x_0E, 0x_64, 0x_9A, 0x_85, 0x_56, 0x_2A, 0x_42, 0x_B6, 0x_D5, 0x_77, 0x_31, 0x_4B, 0x_04,
		0x_B2, 0x_F6, 0x_55, 0x_06, 0x_13, 0x_3F, 0x_8C, 0x_6B,
	];

	helper(S, BASE, -898);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_1_499_in_base_113
#[test]
fn s_has_signs_and_zeros_and_minus_1_499_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_12, 0x_E7,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_27, 0x_5F, 0x_66, 0x_34, 0x_95, 0x_9E, 0x_46, 0x_78, 0x_ED, 0x_C7, 0x_3C, 0x_1E, 0x_12, 0x_7E,
		0x_9F, 0x_55, 0x_C2, 0x_1A, 0x_70, 0x_81, 0x_4C, 0x_98, 0x_99, 0x_E1, 0x_4F, 0x_E4, 0x_FC, 0x_89, 0x_0F,
		0x_E7, 0x_D4, 0x_7B, 0x_08, 0x_4D, 0x_D7, 0x_F6, 0x_43, 0x_C0, 0x_51, 0x_26, 0x_15, 0x_3E, 0x_5E, 0x_C6,
		0x_AA, 0x_21, 0x_2F, 0x_40, 0x_EA, 0x_14, 0x_32, 0x_FE, 0x_44, 0x_F3, 0x_69, 0x_76, 0x_97, 0x_DB, 0x_73,
		0x_BD, 0x_FB, 0x_F8, 0x_DD, 0x_A3, 0x_83, 0x_38, 0x_94, 0x_53, 0x_F1, 0x_D6, 0x_37, 0x_A8, 0x_47, 0x_01,
		0x_EF, 0x_F9, 0x_E8, 0x_59, 0x_AE, 0x_35, 0x_F0, 0x_05, 0x_67, 0x_A2, 0x_96, 0x_DE, 0x_5D, 0x_A1, 0x_49,
		0x_82, 0x_B0, 0x_39, 0x_D9, 0x_AD, 0x_B5, 0x_5A, 0x_2E, 0x_90, 0x_80, 0x_CC, 0x_E3, 0x_58, 0x_57, 0x_68,
		0x_D0, 0x_84, 0x_B9, 0x_54, 0x_AC, 0x_F2, 0x_24, 0x_B2,
	];

	helper(S, BASE, -1_499);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_65_061_in_base_113
#[test]
fn s_has_signs_and_zeros_and_minus_65_061_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_BA,
		0x_BA, 0x_BA, 0x_BA, 0x_7C, 0x_FF, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_B5, 0x_E7, 0x_EE, 0x_F5, 0x_7C, 0x_76, 0x_44, 0x_81, 0x_2F, 0x_FF, 0x_9D, 0x_7A, 0x_AC, 0x_24,
		0x_91, 0x_F6, 0x_D0, 0x_4A, 0x_3C, 0x_E5, 0x_68, 0x_62, 0x_92, 0x_A9, 0x_17, 0x_CF, 0x_15, 0x_42, 0x_C9,
		0x_3E, 0x_AB, 0x_88, 0x_BC, 0x_DC, 0x_73, 0x_94, 0x_27, 0x_08, 0x_46, 0x_5F, 0x_F3, 0x_CC, 0x_59, 0x_63,
		0x_6C, 0x_A5, 0x_E4, 0x_23, 0x_CB, 0x_02, 0x_7E, 0x_EC, 0x_67, 0x_B3, 0x_85, 0x_7D, 0x_F0, 0x_A0, 0x_6E,
		0x_61, 0x_6B, 0x_B8, 0x_D6, 0x_66, 0x_90, 0x_9A, 0x_FA, 0x_8B, 0x_C4, 0x_E1, 0x_A8, 0x_AA, 0x_1D, 0x_EA,
		0x_C8, 0x_40, 0x_14, 0x_04, 0x_48, 0x_9B, 0x_47, 0x_F4, 0x_DD, 0x_FB, 0x_9F, 0x_A6, 0x_D2, 0x_16, 0x_9E,
		0x_12, 0x_7B, 0x_77, 0x_72, 0x_E0, 0x_B1, 0x_FD, 0x_74, 0x_A4, 0x_CD, 0x_56, 0x_75, 0x_82, 0x_EF, 0x_3F,
		0x_C5, 0x_69, 0x_8D, 0x_97, 0x_4F, 0x_39, 0x_B6, 0x_31,
	];

	helper(S, BASE, -65_061);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_600_020_in_base_113
#[test]
fn s_has_signs_and_zeros_and_minus_600_020_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC,
		0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_89, 0x_30, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_A0, 0x_D2, 0x_C1, 0x_10, 0x_2C, 0x_FD, 0x_96, 0x_75, 0x_A2, 0x_1F, 0x_B0, 0x_7D, 0x_E6, 0x_23,
		0x_38, 0x_BA, 0x_9B, 0x_C2, 0x_AA, 0x_DA, 0x_E8, 0x_EA, 0x_82, 0x_15, 0x_7F, 0x_8D, 0x_69, 0x_D9, 0x_AD,
		0x_CD, 0x_19, 0x_FE, 0x_98, 0x_F7, 0x_D3, 0x_BD, 0x_B8, 0x_C4, 0x_B7, 0x_A1, 0x_57, 0x_FF, 0x_ED, 0x_F1,
		0x_E7, 0x_89, 0x_9C, 0x_70, 0x_AE, 0x_F3, 0x_EF, 0x_A4, 0x_6B, 0x_80, 0x_34, 0x_1E, 0x_12, 0x_91, 0x_D7,
		0x_D0, 0x_D5, 0x_5D, 0x_D4, 0x_55, 0x_0E, 0x_87, 0x_43, 0x_7B, 0x_5F, 0x_29, 0x_66, 0x_22, 0x_95, 0x_7C,
		0x_BB, 0x_B9, 0x_E0, 0x_BC, 0x_6F, 0x_4D, 0x_C8, 0x_FB, 0x_58, 0x_A5, 0x_47, 0x_74, 0x_E5, 0x_17, 0x_8A,
		0x_DC, 0x_06, 0x_63, 0x_AF, 0x_31, 0x_3D, 0x_42, 0x_86, 0x_EB, 0x_BF, 0x_EE, 0x_45, 0x_11, 0x_FC, 0x_E1,
		0x_90, 0x_9F, 0x_92, 0x_6A, 0x_3B, 0x_77, 0x_30, 0x_BE,
	];

	helper(S, BASE, -600_020);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_3_513_069_in_base_113
#[test]
fn s_has_signs_and_zeros_and_minus_3_513_069_in_base_113() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_21, 0x_F1, 0x_72, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_CD, 0x_7D, 0x_21, 0x_84, 0x_40, 0x_EF, 0x_C7, 0x_C2, 0x_26, 0x_C1, 0x_AC, 0x_8A, 0x_3E, 0x_FC, 0x_72,
		0x_28, 0x_6C, 0x_B0, 0x_DA, 0x_CE, 0x_63, 0x_12, 0x_39, 0x_79, 0x_F4, 0x_89, 0x_4C, 0x_65, 0x_61, 0x_DE,
		0x_08, 0x_EB, 0x_87, 0x_2E, 0x_06, 0x_6D, 0x_77, 0x_5C, 0x_A5, 0x_29, 0x_FB, 0x_58, 0x_B1, 0x_C0, 0x_66,
		0x_C8, 0x_7C, 0x_B3, 0x_36, 0x_F1, 0x_97, 0x_75, 0x_7B, 0x_50, 0x_2F, 0x_52, 0x_F3, 0x_05, 0x_BF, 0x_6E,
		0x_A8, 0x_22, 0x_1C, 0x_D5, 0x_82, 0x_01, 0x_18, 0x_B7, 0x_E4, 0x_F7, 0x_EA, 0x_3F, 0x_68, 0x_3A, 0x_23,
		0x_81, 0x_13, 0x_FA, 0x_42, 0x_7E, 0x_54, 0x_83, 0x_A9, 0x_78, 0x_80, 0x_1D, 0x_43, 0x_1E, 0x_2A, 0x_94,
		0x_D0, 0x_27, 0x_59, 0x_0E, 0x_4D, 0x_C6, 0x_E6, 0x_9C, 0x_4E, 0x_E0, 0x_ED, 0x_8D, 0x_5F, 0x_49, 0x_04,
		0x_AF, 0x_98, 0x_D9, 0x_A3, 0x_45, 0x_CB, 0x_32, 0x_69,
	];

	helper(S, BASE, -3_513_069);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_37_299_016_in_base_113
#[test]
fn s_has_signs_and_zeros_and_minus_37_299_016_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_A3, 0x_36, 0x_14, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_E0, 0x_CC, 0x_FF, 0x_32, 0x_5A, 0x_14, 0x_42, 0x_78, 0x_B4, 0x_ED, 0x_2C, 0x_F0, 0x_E3, 0x_23,
		0x_44, 0x_07, 0x_9F, 0x_A8, 0x_2F, 0x_F7, 0x_45, 0x_E2, 0x_AB, 0x_1D, 0x_A3, 0x_D9, 0x_67, 0x_31, 0x_D8,
		0x_06, 0x_3D, 0x_94, 0x_7E, 0x_12, 0x_5B, 0x_F9, 0x_F3, 0x_4B, 0x_13, 0x_B7, 0x_29, 0x_66, 0x_E9, 0x_1C,
		0x_52, 0x_24, 0x_C8, 0x_4D, 0x_CE, 0x_08, 0x_A1, 0x_35, 0x_46, 0x_7A, 0x_FA, 0x_AA, 0x_77, 0x_FD, 0x_47,
		0x_CF, 0x_3F, 0x_FC, 0x_A0, 0x_80, 0x_A4, 0x_B1, 0x_8F, 0x_D2, 0x_6F, 0x_E4, 0x_0E, 0x_D3, 0x_EB, 0x_1B,
		0x_9D, 0x_B5, 0x_60, 0x_FB, 0x_19, 0x_5E, 0x_9C, 0x_DD, 0x_56, 0x_95, 0x_F1, 0x_05, 0x_2A, 0x_F8, 0x_D0,
		0x_6D, 0x_28, 0x_57, 0x_41, 0x_C7, 0x_1A, 0x_36, 0x_26, 0x_30, 0x_50, 0x_C1, 0x_62, 0x_59, 0x_E8, 0x_F2,
		0x_75, 0x_1E, 0x_97, 0x_A9, 0x_2E, 0x_68, 0x_C3, 0x_A6,
	];

	helper(S, BASE, -37_299_016);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_516_101_663_in_base_113
#[test]
fn s_has_signs_and_zeros_and_minus_516_101_663_in_base_113() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F,
		0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_92, 0x_F9, 0x_63, 0x_EB, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_9A, 0x_05, 0x_92, 0x_81, 0x_AE, 0x_C4, 0x_8B, 0x_E1, 0x_F7, 0x_26, 0x_01, 0x_E7, 0x_62, 0x_71,
		0x_DB, 0x_FE, 0x_69, 0x_F9, 0x_07, 0x_1E, 0x_DD, 0x_16, 0x_8F, 0x_DF, 0x_BF, 0x_F6, 0x_3E, 0x_46, 0x_1B,
		0x_E9, 0x_D6, 0x_7A, 0x_73, 0x_19, 0x_B7, 0x_7D, 0x_EB, 0x_D9, 0x_5E, 0x_29, 0x_D8, 0x_93, 0x_B4, 0x_8C,
		0x_21, 0x_E8, 0x_8A, 0x_94, 0x_C8, 0x_FB, 0x_E4, 0x_9F, 0x_A9, 0x_BB, 0x_F4, 0x_F5, 0x_7B, 0x_10, 0x_5A,
		0x_A1, 0x_AA, 0x_57, 0x_15, 0x_D5, 0x_35, 0x_AC, 0x_17, 0x_3F, 0x_18, 0x_B3, 0x_55, 0x_4B, 0x_98, 0x_47,
		0x_02, 0x_CF, 0x_63, 0x_B0, 0x_77, 0x_F8, 0x_DE, 0x_8E, 0x_83, 0x_E3, 0x_41, 0x_BC, 0x_11, 0x_C2, 0x_3C,
		0x_5B, 0x_03, 0x_FF, 0x_CB, 0x_12, 0x_42, 0x_37, 0x_66, 0x_67, 0x_DC, 0x_B6, 0x_C7, 0x_54, 0x_A2, 0x_59,
		0x_30, 0x_2C, 0x_5D, 0x_C1, 0x_1D, 0x_91, 0x_4E, 0x_2F,
	];

	helper(S, BASE, -516_101_663);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_4_in_base_193
#[test]
fn s_has_signs_and_zeros_and_minus_4_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_86, 0x_BE, 0x_AA, 0x_DD, 0x_A6, 0x_23, 0x_C3, 0x_70, 0x_89, 0x_98, 0x_03, 0x_1B, 0x_A5, 0x_3C,
		0x_E3, 0x_2C, 0x_30, 0x_02, 0x_41, 0x_8D, 0x_BB, 0x_81, 0x_C5, 0x_11, 0x_66, 0x_E0, 0x_F9, 0x_B7, 0x_6E,
		0x_BD, 0x_6A, 0x_72, 0x_BF, 0x_E5, 0x_0F, 0x_37, 0x_F1, 0x_D6, 0x_F8, 0x_28, 0x_8A, 0x_AD, 0x_C0, 0x_18,
		0x_C6, 0x_7B, 0x_74, 0x_7F, 0x_CF, 0x_CC, 0x_DB, 0x_5B, 0x_F3, 0x_85, 0x_58, 0x_79, 0x_91, 0x_AB, 0x_E7,
		0x_38, 0x_B5, 0x_7D, 0x_77, 0x_B2, 0x_C4, 0x_5D, 0x_46, 0x_DF, 0x_97, 0x_82, 0x_D1, 0x_59, 0x_88, 0x_BC,
		0x_6D, 0x_D9, 0x_9A, 0x_A7, 0x_F6, 0x_33, 0x_45, 0x_62, 0x_9D, 0x_FB, 0x_F5, 0x_FF, 0x_53, 0x_AF, 0x_1F,
		0x_3E, 0x_32, 0x_5A, 0x_83, 0x_4E, 0x_B1, 0x_12, 0x_1C, 0x_7E, 0x_75, 0x_43, 0x_4C, 0x_57, 0x_9B, 0x_55,
		0x_DA, 0x_5E, 0x_42, 0x_C1, 0x_67, 0x_07, 0x_EE, 0x_96, 0x_8C, 0x_04, 0x_C2, 0x_1D, 0x_6B, 0x_D2, 0x_84,
		0x_08, 0x_EC, 0x_E4, 0x_51, 0x_49, 0x_78, 0x_47, 0x_06, 0x_63, 0x_56, 0x_B8, 0x_8B, 0x_90, 0x_A1, 0x_EA,
		0x_94, 0x_19, 0x_3D, 0x_05, 0x_14, 0x_B4, 0x_FA, 0x_1E, 0x_48, 0x_CD, 0x_D3, 0x_10, 0x_B3, 0x_9E, 0x_D0,
		0x_31, 0x_54, 0x_EB, 0x_25, 0x_65, 0x_C7, 0x_16, 0x_71, 0x_A2, 0x_27, 0x_36, 0x_A4, 0x_6C, 0x_99, 0x_01,
		0x_50, 0x_EF, 0x_AE, 0x_E9, 0x_3A, 0x_7A, 0x_68, 0x_C9, 0x_ED, 0x_95, 0x_93, 0x_26, 0x_0E, 0x_80, 0x_7C,
		0x_29, 0x_2A, 0x_87, 0x_8F, 0x_D4, 0x_6F, 0x_73, 0x_5F, 0x_34, 0x_4B, 0x_D7, 0x_3F, 0x_E2,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_81_in_base_193
#[test]
fn s_has_signs_and_zeros_and_minus_81_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4,
		0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4,
		0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4,
		0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_AC, 0x_88, 0x_3B, 0x_1F, 0x_BB, 0x_7D, 0x_91, 0x_F2, 0x_AF, 0x_26, 0x_C2, 0x_86, 0x_B5, 0x_A4,
		0x_37, 0x_96, 0x_A1, 0x_21, 0x_CE, 0x_31, 0x_92, 0x_D4, 0x_39, 0x_C7, 0x_7A, 0x_8D, 0x_67, 0x_25, 0x_5D,
		0x_C3, 0x_9F, 0x_1E, 0x_79, 0x_BF, 0x_9B, 0x_66, 0x_D6, 0x_9D, 0x_4A, 0x_FD, 0x_A5, 0x_DC, 0x_E5, 0x_B6,
		0x_EB, 0x_98, 0x_7B, 0x_42, 0x_59, 0x_EC, 0x_89, 0x_72, 0x_A9, 0x_A0, 0x_15, 0x_F0, 0x_C1, 0x_1A, 0x_04,
		0x_81, 0x_A3, 0x_17, 0x_49, 0x_90, 0x_06, 0x_0F, 0x_18, 0x_75, 0x_61, 0x_F5, 0x_E0, 0x_57, 0x_07, 0x_78,
		0x_14, 0x_10, 0x_13, 0x_AD, 0x_E9, 0x_16, 0x_C8, 0x_C6, 0x_4D, 0x_95, 0x_85, 0x_64, 0x_24, 0x_2C, 0x_63,
		0x_4B, 0x_4F, 0x_4E, 0x_62, 0x_6F, 0x_4C, 0x_41, 0x_7C, 0x_87, 0x_84, 0x_56, 0x_02, 0x_70, 0x_77, 0x_44,
		0x_AA, 0x_A6, 0x_71, 0x_E7, 0x_F7, 0x_D5, 0x_A7, 0x_05, 0x_6D, 0x_23, 0x_CB, 0x_35, 0x_2E, 0x_F8, 0x_1B,
		0x_53, 0x_97, 0x_DF, 0x_19, 0x_3E, 0x_9A, 0x_6A, 0x_0E, 0x_51, 0x_B9, 0x_CC, 0x_BD, 0x_45, 0x_9E, 0x_60,
		0x_76, 0x_FB, 0x_1D, 0x_29, 0x_6B, 0x_32, 0x_BA, 0x_DA, 0x_65, 0x_D9, 0x_B2, 0x_38, 0x_2A, 0x_34, 0x_52,
		0x_7E, 0x_5F, 0x_11, 0x_93, 0x_DE, 0x_C0, 0x_50, 0x_F3, 0x_22, 0x_6E, 0x_8E, 0x_99, 0x_D3, 0x_EA, 0x_E4,
		0x_5B, 0x_73, 0x_55, 0x_47, 0x_CF, 0x_74, 0x_3C, 0x_E2, 0x_DB, 0x_43, 0x_8B, 0x_B3, 0x_DD, 0x_48, 0x_E6,
		0x_C4, 0x_8A, 0x_A8, 0x_B1, 0x_5E, 0x_D8, 0x_01, 0x_80, 0x_FC, 0x_CD, 0x_E8, 0x_F6, 0x_3D,
	];

	helper(S, BASE, -81);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_634_in_base_193
#[test]
fn s_has_signs_and_zeros_and_minus_634_in_base_193() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F,
		0x_01, 0x_77,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_5B, 0x_D8, 0x_01, 0x_9B, 0x_8C, 0x_C0, 0x_81, 0x_ED, 0x_50, 0x_AB, 0x_A7, 0x_25, 0x_C1, 0x_B4,
		0x_58, 0x_14, 0x_80, 0x_95, 0x_B2, 0x_92, 0x_23, 0x_44, 0x_56, 0x_54, 0x_68, 0x_EC, 0x_21, 0x_4A, 0x_E3,
		0x_60, 0x_0E, 0x_A5, 0x_53, 0x_F5, 0x_D7, 0x_78, 0x_64, 0x_A1, 0x_DE, 0x_FE, 0x_7D, 0x_35, 0x_5D, 0x_29,
		0x_1E, 0x_02, 0x_72, 0x_65, 0x_A8, 0x_62, 0x_E6, 0x_FC, 0x_86, 0x_27, 0x_77, 0x_D3, 0x_CD, 0x_CC, 0x_9A,
		0x_8A, 0x_7F, 0x_43, 0x_CE, 0x_0F, 0x_D0, 0x_15, 0x_38, 0x_1D, 0x_84, 0x_8E, 0x_9E, 0x_48, 0x_9D, 0x_37,
		0x_3F, 0x_3B, 0x_82, 0x_C9, 0x_A3, 0x_C4, 0x_D5, 0x_10, 0x_8B, 0x_74, 0x_E4, 0x_E5, 0x_89, 0x_4B, 0x_85,
		0x_AD, 0x_9F, 0x_16, 0x_EB, 0x_4E, 0x_28, 0x_71, 0x_5C, 0x_D6, 0x_2E, 0x_CB, 0x_2F, 0x_FB, 0x_3D, 0x_F6,
		0x_F3, 0x_36, 0x_94, 0x_04, 0x_DD, 0x_40, 0x_1C, 0x_C3, 0x_D4, 0x_06, 0x_66, 0x_B0, 0x_6B, 0x_B1, 0x_1B,
		0x_A6, 0x_41, 0x_AE, 0x_DF, 0x_5A, 0x_52, 0x_42, 0x_69, 0x_17, 0x_46, 0x_76, 0x_9C, 0x_DA, 0x_B9, 0x_4D,
		0x_E1, 0x_F2, 0x_E8, 0x_DB, 0x_C8, 0x_6A, 0x_B8, 0x_33, 0x_F7, 0x_03, 0x_4C, 0x_C7, 0x_BB, 0x_79, 0x_A2,
		0x_BA, 0x_E0, 0x_EE, 0x_05, 0x_A4, 0x_FA, 0x_AF, 0x_83, 0x_57, 0x_63, 0x_E7, 0x_CA, 0x_45, 0x_7A, 0x_6C,
		0x_F9, 0x_EF, 0x_BD, 0x_70, 0x_2A, 0x_C5, 0x_A9, 0x_11, 0x_7B, 0x_D9, 0x_BF, 0x_19, 0x_8F, 0x_C6, 0x_7E,
		0x_51, 0x_59, 0x_3E, 0x_75, 0x_39, 0x_98, 0x_97, 0x_DC, 0x_BC, 0x_30, 0x_E9, 0x_73, 0x_AC,
	];

	helper(S, BASE, -634);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_784_in_base_193
#[test]
fn s_has_signs_and_zeros_and_minus_2_784_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC,
		0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_CC, 0x_24,
		0x_E7,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_CB, 0x_B3, 0x_81, 0x_BA, 0x_8D, 0x_C0, 0x_EA, 0x_1C, 0x_05, 0x_26, 0x_FE, 0x_60, 0x_82, 0x_24,
		0x_B8, 0x_EE, 0x_3A, 0x_4D, 0x_1B, 0x_C6, 0x_C1, 0x_AF, 0x_98, 0x_04, 0x_31, 0x_6A, 0x_B9, 0x_EF, 0x_6F,
		0x_F0, 0x_B1, 0x_52, 0x_66, 0x_D3, 0x_9F, 0x_91, 0x_0E, 0x_A2, 0x_28, 0x_6D, 0x_AB, 0x_A3, 0x_BE, 0x_86,
		0x_A9, 0x_B2, 0x_D1, 0x_53, 0x_7F, 0x_8A, 0x_3F, 0x_DD, 0x_54, 0x_1F, 0x_1D, 0x_69, 0x_6E, 0x_9A, 0x_56,
		0x_2C, 0x_2F, 0x_9E, 0x_DF, 0x_BF, 0x_E4, 0x_F6, 0x_F7, 0x_01, 0x_4F, 0x_E2, 0x_D0, 0x_02, 0x_B4, 0x_DB,
		0x_23, 0x_32, 0x_40, 0x_B7, 0x_5E, 0x_77, 0x_DC, 0x_E7, 0x_16, 0x_47, 0x_AD, 0x_E3, 0x_E8, 0x_D8, 0x_55,
		0x_7A, 0x_9C, 0x_44, 0x_97, 0x_57, 0x_35, 0x_11, 0x_C7, 0x_99, 0x_CF, 0x_7E, 0x_C4, 0x_5F, 0x_18, 0x_30,
		0x_5C, 0x_95, 0x_EC, 0x_D9, 0x_15, 0x_63, 0x_65, 0x_FC, 0x_F5, 0x_13, 0x_6C, 0x_12, 0x_41, 0x_E5, 0x_21,
		0x_F8, 0x_F3, 0x_62, 0x_C3, 0x_E6, 0x_59, 0x_FF, 0x_3E, 0x_A7, 0x_7B, 0x_17, 0x_37, 0x_4C, 0x_E9, 0x_06,
		0x_8C, 0x_BD, 0x_38, 0x_CA, 0x_33, 0x_C5, 0x_61, 0x_D2, 0x_72, 0x_CE, 0x_ED, 0x_50, 0x_73, 0x_FD, 0x_80,
		0x_1E, 0x_E1, 0x_84, 0x_96, 0x_F2, 0x_A1, 0x_D4, 0x_75, 0x_93, 0x_79, 0x_D5, 0x_AE, 0x_51, 0x_83, 0x_D6,
		0x_2E, 0x_7C, 0x_8E, 0x_92, 0x_BC, 0x_AC, 0x_5D, 0x_74, 0x_AA, 0x_5A, 0x_E0, 0x_71, 0x_D7, 0x_3D, 0x_58,
		0x_8B, 0x_4B, 0x_F4, 0x_25, 0x_10, 0x_A6, 0x_45, 0x_19, 0x_90, 0x_A0, 0x_34, 0x_C8, 0x_49,
	];

	helper(S, BASE, -2_784);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_66_553_in_base_193
#[test]
fn s_has_signs_and_zeros_and_minus_66_553_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2,
		0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2,
		0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_96, 0x_21, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_96, 0x_E6, 0x_B6, 0x_D9, 0x_6A, 0x_50, 0x_D7, 0x_9D, 0x_8B, 0x_19, 0x_AC, 0x_B7, 0x_C0, 0x_93,
		0x_A0, 0x_47, 0x_A4, 0x_54, 0x_63, 0x_38, 0x_23, 0x_68, 0x_3E, 0x_F0, 0x_F7, 0x_10, 0x_1E, 0x_A2, 0x_BD,
		0x_FE, 0x_BF, 0x_60, 0x_B9, 0x_73, 0x_8E, 0x_53, 0x_EC, 0x_7F, 0x_05, 0x_32, 0x_2F, 0x_EF, 0x_2A, 0x_74,
		0x_6E, 0x_A8, 0x_02, 0x_35, 0x_39, 0x_3F, 0x_0E, 0x_5D, 0x_29, 0x_06, 0x_36, 0x_13, 0x_76, 0x_27, 0x_F9,
		0x_90, 0x_25, 0x_48, 0x_EE, 0x_62, 0x_3D, 0x_88, 0x_41, 0x_D1, 0x_E5, 0x_A7, 0x_C9, 0x_3C, 0x_B1, 0x_83,
		0x_87, 0x_91, 0x_D5, 0x_BB, 0x_28, 0x_AD, 0x_30, 0x_E9, 0x_1D, 0x_E7, 0x_79, 0x_F4, 0x_1C, 0x_03, 0x_2C,
		0x_9E, 0x_F5, 0x_26, 0x_6D, 0x_D8, 0x_45, 0x_DA, 0x_FA, 0x_97, 0x_14, 0x_AB, 0x_E8, 0x_1F, 0x_9B, 0x_71,
		0x_4C, 0x_11, 0x_1B, 0x_08, 0x_AA, 0x_31, 0x_B0, 0x_E4, 0x_CF, 0x_52, 0x_55, 0x_6F, 0x_69, 0x_46, 0x_82,
		0x_42, 0x_95, 0x_81, 0x_8F, 0x_3A, 0x_C3, 0x_58, 0x_7D, 0x_3B, 0x_FC, 0x_34, 0x_98, 0x_4A, 0x_22, 0x_85,
		0x_4B, 0x_4D, 0x_B5, 0x_37, 0x_AF, 0x_C5, 0x_CD, 0x_0F, 0x_24, 0x_56, 0x_F3, 0x_FD, 0x_01, 0x_C2, 0x_72,
		0x_ED, 0x_21, 0x_DB, 0x_78, 0x_44, 0x_BA, 0x_CC, 0x_B8, 0x_15, 0x_F6, 0x_7B, 0x_51, 0x_33, 0x_4E, 0x_A5,
		0x_D6, 0x_17, 0x_67, 0x_94, 0x_F8, 0x_DC, 0x_B3, 0x_A3, 0x_CA, 0x_59, 0x_5B, 0x_F2, 0x_80, 0x_AE, 0x_64,
		0x_65, 0x_9F, 0x_8A, 0x_1A, 0x_D4, 0x_DE, 0x_16, 0x_A9, 0x_E3, 0x_C7, 0x_EA, 0x_A6, 0x_F1,
	];

	helper(S, BASE, -66_553);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_154_527_in_base_193
#[test]
fn s_has_signs_and_zeros_and_minus_154_527_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98,
		0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98,
		0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_B0, 0x_07,
		0x_F7,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_34, 0x_C0, 0x_61, 0x_B0, 0x_5F, 0x_15, 0x_DE, 0x_42, 0x_9A, 0x_96, 0x_EA, 0x_1F, 0x_27, 0x_EE,
		0x_B4, 0x_F2, 0x_43, 0x_29, 0x_F5, 0x_E1, 0x_54, 0x_A8, 0x_BE, 0x_86, 0x_04, 0x_BA, 0x_26, 0x_07, 0x_E0,
		0x_44, 0x_A1, 0x_DB, 0x_CC, 0x_18, 0x_49, 0x_1A, 0x_C8, 0x_51, 0x_99, 0x_C9, 0x_78, 0x_C3, 0x_73, 0x_59,
		0x_F9, 0x_C2, 0x_A0, 0x_56, 0x_B3, 0x_AD, 0x_C7, 0x_4D, 0x_4A, 0x_46, 0x_5B, 0x_68, 0x_40, 0x_83, 0x_DD,
		0x_35, 0x_6D, 0x_5A, 0x_B5, 0x_D2, 0x_CA, 0x_52, 0x_24, 0x_E7, 0x_91, 0x_60, 0x_4B, 0x_DF, 0x_A9, 0x_A2,
		0x_7B, 0x_22, 0x_3B, 0x_D1, 0x_48, 0x_C1, 0x_32, 0x_FB, 0x_41, 0x_E9, 0x_DC, 0x_D3, 0x_BD, 0x_D6, 0x_9B,
		0x_CD, 0x_F6, 0x_B7, 0x_EB, 0x_D8, 0x_2E, 0x_10, 0x_0E, 0x_A4, 0x_F8, 0x_1C, 0x_50, 0x_D9, 0x_F4, 0x_30,
		0x_85, 0x_BF, 0x_11, 0x_6F, 0x_B6, 0x_16, 0x_80, 0x_89, 0x_63, 0x_7D, 0x_A3, 0x_12, 0x_38, 0x_2C, 0x_FA,
		0x_F3, 0x_AE, 0x_90, 0x_ED, 0x_6B, 0x_2A, 0x_AA, 0x_F7, 0x_62, 0x_28, 0x_DA, 0x_65, 0x_B8, 0x_76, 0x_23,
		0x_8B, 0x_EC, 0x_17, 0x_08, 0x_AB, 0x_6E, 0x_95, 0x_53, 0x_9F, 0x_4C, 0x_02, 0x_71, 0x_C4, 0x_5C, 0x_81,
		0x_C5, 0x_FC, 0x_03, 0x_3F, 0x_21, 0x_55, 0x_A7, 0x_88, 0x_AC, 0x_4F, 0x_3E, 0x_8C, 0x_2F, 0x_7E, 0x_13,
		0x_FE, 0x_E2, 0x_57, 0x_8A, 0x_3C, 0x_FD, 0x_1B, 0x_77, 0x_E8, 0x_47, 0x_33, 0x_14, 0x_31, 0x_93, 0x_45,
		0x_69, 0x_A5, 0x_7C, 0x_6C, 0x_1D, 0x_7A, 0x_58, 0x_D5, 0x_F0, 0x_D7, 0x_1E, 0x_F1, 0x_EF,
	];

	helper(S, BASE, -154_527);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_4_856_428_in_base_193
#[test]
fn s_has_signs_and_zeros_and_minus_4_856_428_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_2E, 0x_6B, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_C1, 0x_48, 0x_B7, 0x_54, 0x_8D, 0x_B9, 0x_10, 0x_D6, 0x_31, 0x_E3, 0x_BE, 0x_78, 0x_4F, 0x_9C,
		0x_F9, 0x_97, 0x_BD, 0x_91, 0x_40, 0x_FC, 0x_C0, 0x_15, 0x_EA, 0x_FA, 0x_8A, 0x_06, 0x_A9, 0x_05, 0x_FB,
		0x_AA, 0x_C8, 0x_B6, 0x_A1, 0x_DA, 0x_A3, 0x_44, 0x_4A, 0x_45, 0x_2C, 0x_90, 0x_DC, 0x_23, 0x_86, 0x_68,
		0x_E8, 0x_1E, 0x_FE, 0x_DB, 0x_67, 0x_01, 0x_AC, 0x_C7, 0x_AD, 0x_3D, 0x_FF, 0x_B3, 0x_F8, 0x_51, 0x_DD,
		0x_E4, 0x_3F, 0x_1C, 0x_94, 0x_29, 0x_50, 0x_47, 0x_7A, 0x_1D, 0x_CB, 0x_0E, 0x_5A, 0x_6B, 0x_4C, 0x_76,
		0x_C2, 0x_8E, 0x_56, 0x_12, 0x_84, 0x_CD, 0x_46, 0x_B4, 0x_27, 0x_BC, 0x_80, 0x_14, 0x_57, 0x_4D, 0x_07,
		0x_C3, 0x_99, 0x_7F, 0x_02, 0x_24, 0x_73, 0x_75, 0x_A2, 0x_88, 0x_87, 0x_89, 0x_E9, 0x_E6, 0x_83, 0x_4E,
		0x_C6, 0x_11, 0x_65, 0x_A0, 0x_5F, 0x_6A, 0x_F3, 0x_6E, 0x_F6, 0x_BA, 0x_EF, 0x_BB, 0x_CC, 0x_19, 0x_8F,
		0x_A8, 0x_69, 0x_DE, 0x_F1, 0x_D0, 0x_55, 0x_CE, 0x_62, 0x_28, 0x_D5, 0x_2E, 0x_9B, 0x_D7, 0x_3E, 0x_26,
		0x_17, 0x_EE, 0x_E1, 0x_7B, 0x_ED, 0x_9F, 0x_C4, 0x_CF, 0x_6D, 0x_D2, 0x_63, 0x_5D, 0x_B8, 0x_EC, 0x_5C,
		0x_58, 0x_52, 0x_4B, 0x_6F, 0x_CA, 0x_04, 0x_9A, 0x_93, 0x_32, 0x_1B, 0x_C9, 0x_37, 0x_64, 0x_8C, 0x_D3,
		0x_39, 0x_A6, 0x_74, 0x_6C, 0x_C5, 0x_34, 0x_5B, 0x_95, 0x_F4, 0x_18, 0x_42, 0x_53, 0x_8B, 0x_AF, 0x_03,
		0x_A4, 0x_B0, 0x_EB, 0x_B5, 0x_2A, 0x_3C, 0x_D4, 0x_30, 0x_AB, 0x_71, 0x_60, 0x_82, 0x_85,
	];

	helper(S, BASE, -4_856_428);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_96_156_052_in_base_193
#[test]
fn s_has_signs_and_zeros_and_minus_96_156_052_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_30, 0x_30, 0x_2A, 0x_ED, 0x_99, 0x_94,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_73, 0x_B7, 0x_78, 0x_58, 0x_A8, 0x_84, 0x_E9, 0x_3B, 0x_59, 0x_8E, 0x_3C, 0x_4A, 0x_2A, 0x_12,
		0x_95, 0x_80, 0x_8B, 0x_82, 0x_45, 0x_6C, 0x_6A, 0x_5E, 0x_2E, 0x_4B, 0x_D8, 0x_D2, 0x_90, 0x_EA, 0x_A0,
		0x_34, 0x_EE, 0x_53, 0x_B1, 0x_CB, 0x_79, 0x_B0, 0x_BE, 0x_C7, 0x_75, 0x_91, 0x_BA, 0x_6F, 0x_BF, 0x_E6,
		0x_AD, 0x_E0, 0x_B6, 0x_D6, 0x_31, 0x_17, 0x_8A, 0x_03, 0x_22, 0x_77, 0x_46, 0x_DA, 0x_85, 0x_E3, 0x_6E,
		0x_07, 0x_FF, 0x_D3, 0x_EC, 0x_92, 0x_0F, 0x_52, 0x_1B, 0x_A5, 0x_02, 0x_62, 0x_7F, 0x_ED, 0x_76, 0x_F5,
		0x_A3, 0x_F1, 0x_54, 0x_E8, 0x_A2, 0x_98, 0x_56, 0x_65, 0x_36, 0x_99, 0x_1D, 0x_DE, 0x_23, 0x_83, 0x_55,
		0x_DB, 0x_1C, 0x_B4, 0x_68, 0x_64, 0x_16, 0x_F3, 0x_3F, 0x_E4, 0x_18, 0x_E2, 0x_01, 0x_F6, 0x_AB, 0x_AC,
		0x_A7, 0x_AF, 0x_C3, 0x_D9, 0x_D0, 0x_CA, 0x_5C, 0x_6D, 0x_C9, 0x_F8, 0x_0E, 0x_74, 0x_51, 0x_D5, 0x_2F,
		0x_4E, 0x_7C, 0x_87, 0x_F2, 0x_43, 0x_9A, 0x_42, 0x_2C, 0x_61, 0x_EB, 0x_06, 0x_BB, 0x_FB, 0x_D4, 0x_89,
		0x_D7, 0x_32, 0x_7E, 0x_A9, 0x_F9, 0x_8C, 0x_33, 0x_29, 0x_B2, 0x_A1, 0x_04, 0x_08, 0x_CE, 0x_48, 0x_B9,
		0x_27, 0x_5F, 0x_9F, 0x_11, 0x_FD, 0x_AE, 0x_05, 0x_C4, 0x_25, 0x_49, 0x_50, 0x_88, 0x_93, 0x_1E, 0x_96,
		0x_5A, 0x_C1, 0x_9C, 0x_41, 0x_F4, 0x_C0, 0x_94, 0x_D1, 0x_B8, 0x_37, 0x_60, 0x_63, 0x_8D, 0x_67, 0x_47,
		0x_DC, 0x_C8, 0x_97, 0x_4F, 0x_39, 0x_19, 0x_A4, 0x_66, 0x_AA, 0x_1F, 0x_FA, 0x_B5, 0x_28,
	];

	helper(S, BASE, -96_156_052);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_138_172_159_in_base_193
#[test]
fn s_has_signs_and_zeros_and_minus_138_172_159_in_base_193() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_3E, 0x_3E, 0x_3E, 0x_3E,
		0x_3E, 0x_E5, 0x_FF, 0x_07, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_60, 0x_99, 0x_A7, 0x_16, 0x_34, 0x_72, 0x_05, 0x_E0, 0x_95, 0x_EB, 0x_75, 0x_27, 0x_9F, 0x_A9,
		0x_98, 0x_82, 0x_5D, 0x_7E, 0x_E5, 0x_DE, 0x_92, 0x_BF, 0x_F5, 0x_65, 0x_8B, 0x_03, 0x_31, 0x_A6, 0x_F6,
		0x_BC, 0x_66, 0x_56, 0x_69, 0x_06, 0x_D0, 0x_B7, 0x_F8, 0x_B0, 0x_E2, 0x_79, 0x_C9, 0x_FF, 0x_9A, 0x_6A,
		0x_93, 0x_4C, 0x_23, 0x_25, 0x_6F, 0x_D9, 0x_F7, 0x_24, 0x_59, 0x_28, 0x_BB, 0x_B2, 0x_61, 0x_CC, 0x_45,
		0x_1B, 0x_EE, 0x_6B, 0x_4F, 0x_64, 0x_53, 0x_9E, 0x_FD, 0x_02, 0x_41, 0x_26, 0x_36, 0x_37, 0x_B6, 0x_87,
		0x_47, 0x_85, 0x_4D, 0x_F2, 0x_AC, 0x_07, 0x_8E, 0x_43, 0x_58, 0x_3D, 0x_84, 0x_B4, 0x_E4, 0x_CD, 0x_77,
		0x_1E, 0x_EA, 0x_81, 0x_5F, 0x_D2, 0x_C6, 0x_C8, 0x_E7, 0x_FC, 0x_8A, 0x_10, 0x_9D, 0x_86, 0x_ED, 0x_DA,
		0x_73, 0x_97, 0x_44, 0x_91, 0x_80, 0x_2A, 0x_7C, 0x_3B, 0x_BA, 0x_E9, 0x_13, 0x_6D, 0x_4A, 0x_EF, 0x_B8,
		0x_AE, 0x_4E, 0x_A0, 0x_8D, 0x_57, 0x_78, 0x_A2, 0x_9C, 0x_1C, 0x_17, 0x_A3, 0x_F3, 0x_6E, 0x_B5, 0x_50,
		0x_C5, 0x_CB, 0x_D3, 0x_63, 0x_29, 0x_2F, 0x_71, 0x_C3, 0x_9B, 0x_E3, 0x_90, 0x_CE, 0x_89, 0x_49, 0x_5E,
		0x_7A, 0x_3C, 0x_0E, 0x_94, 0x_DF, 0x_18, 0x_D1, 0x_83, 0x_D5, 0x_1F, 0x_C1, 0x_2C, 0x_32, 0x_D8, 0x_5A,
		0x_52, 0x_11, 0x_C0, 0x_1A, 0x_DD, 0x_DC, 0x_42, 0x_E6, 0x_B1, 0x_5B, 0x_38, 0x_F9, 0x_39, 0x_AD, 0x_74,
		0x_88, 0x_48, 0x_F0, 0x_C4, 0x_FB, 0x_62, 0x_5C, 0x_67, 0x_E8, 0x_E1, 0x_F4, 0x_D7, 0x_A4,
	];

	helper(S, BASE, -138_172_159);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_3_in_base_247
#[test]
fn s_has_signs_and_zeros_and_minus_3_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC,
		0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_EC, 0x_4F, 0x_82, 0x_FD, 0x_67, 0x_C6, 0x_06, 0x_DA, 0x_9A, 0x_24, 0x_48, 0x_F5, 0x_C5, 0x_9B, 0x_7F,
		0x_B9, 0x_A8, 0x_02, 0x_87, 0x_7B, 0x_52, 0x_E8, 0x_3C, 0x_C0, 0x_77, 0x_BA, 0x_B3, 0x_56, 0x_BC, 0x_88,
		0x_FC, 0x_E0, 0x_A6, 0x_F1, 0x_BB, 0x_29, 0x_F2, 0x_B7, 0x_1E, 0x_B6, 0x_F7, 0x_14, 0x_5A, 0x_8A, 0x_E3,
		0x_61, 0x_86, 0x_19, 0x_44, 0x_26, 0x_CB, 0x_1F, 0x_41, 0x_12, 0x_04, 0x_AC, 0x_BE, 0x_05, 0x_37, 0x_42,
		0x_BD, 0x_89, 0x_97, 0x_CA, 0x_3D, 0x_2C, 0x_54, 0x_69, 0x_8B, 0x_AD, 0x_13, 0x_6F, 0x_01, 0x_15, 0x_50,
		0x_EE, 0x_3E, 0x_1D, 0x_70, 0x_17, 0x_6D, 0x_95, 0x_5B, 0x_CD, 0x_D6, 0x_EB, 0x_DC, 0x_23, 0x_C7, 0x_C8,
		0x_46, 0x_1B, 0x_79, 0x_DE, 0x_9C, 0x_62, 0x_AE, 0x_90, 0x_72, 0x_36, 0x_AB, 0x_39, 0x_3F, 0x_94, 0x_63,
		0x_2F, 0x_33, 0x_47, 0x_08, 0x_75, 0x_25, 0x_5E, 0x_4D, 0x_DD, 0x_A2, 0x_D2, 0x_D9, 0x_E9, 0x_F3, 0x_E1,
		0x_F8, 0x_A3, 0x_E6, 0x_B2, 0x_81, 0x_92, 0x_84, 0x_F4, 0x_22, 0x_6E, 0x_C1, 0x_6C, 0x_18, 0x_4E, 0x_74,
		0x_03, 0x_EF, 0x_D8, 0x_A1, 0x_B8, 0x_6A, 0x_59, 0x_C9, 0x_57, 0x_FB, 0x_4A, 0x_BF, 0x_E5, 0x_27, 0x_93,
		0x_8F, 0x_3A, 0x_11, 0x_3B, 0x_DB, 0x_64, 0x_99, 0x_32, 0x_51, 0x_5F, 0x_A5, 0x_66, 0x_C4, 0x_96, 0x_ED,
		0x_B1, 0x_E7, 0x_5D, 0x_7D, 0x_0E, 0x_21, 0x_4B, 0x_45, 0x_D4, 0x_2E, 0x_31, 0x_35, 0x_10, 0x_D0, 0x_B5,
		0x_CE, 0x_CF, 0x_7C, 0x_0F, 0x_FE, 0x_A7, 0x_F6, 0x_4C, 0x_E4, 0x_F9, 0x_58, 0x_E2, 0x_80, 0x_FF, 0x_DF,
		0x_73, 0x_A0, 0x_C2, 0x_D5, 0x_7A, 0x_9F, 0x_55, 0x_40, 0x_8D, 0x_07, 0x_65, 0x_A4, 0x_FA, 0x_34, 0x_98,
		0x_CC, 0x_B0, 0x_AA, 0x_60, 0x_8C, 0x_AF, 0x_30, 0x_D3, 0x_91, 0x_9E, 0x_76, 0x_1C, 0x_49, 0x_78, 0x_C3,
		0x_6B, 0x_85, 0x_28, 0x_7E, 0x_83, 0x_68, 0x_B4, 0x_2A, 0x_8E, 0x_43, 0x_71, 0x_16, 0x_38, 0x_F0, 0x_9D,
		0x_D1, 0x_1A, 0x_5C, 0x_A9, 0x_D7, 0x_EA, 0x_53,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_10_in_base_247
#[test]
fn s_has_signs_and_zeros_and_minus_10_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_92, 0x_D2, 0x_71, 0x_9A, 0x_FD, 0x_BE, 0x_70, 0x_A0, 0x_32, 0x_29, 0x_CF, 0x_84, 0x_F6, 0x_F7,
		0x_05, 0x_B7, 0x_27, 0x_95, 0x_43, 0x_3E, 0x_DB, 0x_FF, 0x_A7, 0x_83, 0x_A6, 0x_33, 0x_1F, 0x_22, 0x_65,
		0x_81, 0x_4A, 0x_C6, 0x_AF, 0x_26, 0x_85, 0x_25, 0x_77, 0x_15, 0x_F9, 0x_D0, 0x_A4, 0x_66, 0x_62, 0x_10,
		0x_A3, 0x_18, 0x_24, 0x_AC, 0x_1B, 0x_A9, 0x_CB, 0x_97, 0x_36, 0x_4E, 0x_13, 0x_39, 0x_E0, 0x_31, 0x_BC,
		0x_B1, 0x_9F, 0x_E3, 0x_4F, 0x_35, 0x_6B, 0x_64, 0x_94, 0x_63, 0x_5F, 0x_DE, 0x_98, 0x_30, 0x_46, 0x_AB,
		0x_5A, 0x_CA, 0x_3C, 0x_91, 0x_96, 0x_B2, 0x_BB, 0x_99, 0x_58, 0x_60, 0x_78, 0x_75, 0x_D5, 0x_6C, 0x_B5,
		0x_AD, 0x_61, 0x_DA, 0x_53, 0x_6A, 0x_1A, 0x_A1, 0x_0F, 0x_79, 0x_7F, 0x_D8, 0x_73, 0x_D6, 0x_4C, 0x_80,
		0x_67, 0x_07, 0x_59, 0x_EC, 0x_C5, 0x_50, 0x_88, 0x_8D, 0x_2A, 0x_C2, 0x_C3, 0x_D3, 0x_06, 0x_B3, 0x_37,
		0x_34, 0x_8E, 0x_49, 0x_56, 0x_F0, 0x_CE, 0x_3F, 0x_C0, 0x_44, 0x_B8, 0x_AA, 0x_B9, 0x_82, 0x_8B, 0x_FC,
		0x_5D, 0x_E2, 0x_B4, 0x_2E, 0x_CD, 0x_DF, 0x_16, 0x_8A, 0x_CC, 0x_21, 0x_52, 0x_B6, 0x_2F, 0x_45, 0x_42,
		0x_D1, 0x_C7, 0x_F5, 0x_E1, 0x_1D, 0x_8C, 0x_02, 0x_F8, 0x_03, 0x_6E, 0x_5C, 0x_1C, 0x_87, 0x_BD, 0x_5B,
		0x_F2, 0x_D4, 0x_EF, 0x_BA, 0x_57, 0x_C4, 0x_3A, 0x_9E, 0x_04, 0x_86, 0x_EB, 0x_17, 0x_7B, 0x_93, 0x_FB,
		0x_C1, 0x_12, 0x_5E, 0x_A5, 0x_8F, 0x_89, 0x_A8, 0x_F1, 0x_4D, 0x_55, 0x_6D, 0x_68, 0x_FE, 0x_D9, 0x_1E,
		0x_DD, 0x_E7, 0x_48, 0x_9B, 0x_3D, 0x_E8, 0x_ED, 0x_41, 0x_4B, 0x_7A, 0x_0E, 0x_EE, 0x_40, 0x_EA, 0x_3B,
		0x_BF, 0x_E4, 0x_14, 0x_7C, 0x_E9, 0x_74, 0x_19, 0x_6F, 0x_01, 0x_72, 0x_B0, 0x_51, 0x_DC, 0x_FA, 0x_11,
		0x_38, 0x_47, 0x_C8, 0x_28, 0x_F3, 0x_E6, 0x_90, 0x_D7, 0x_08, 0x_23, 0x_7D, 0x_2C, 0x_9D, 0x_9C, 0x_C9,
		0x_F4, 0x_AE, 0x_7E, 0x_69, 0x_E5, 0x_76, 0x_A2,
	];

	helper(S, BASE, -10);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_493_in_base_247
#[test]
fn s_has_signs_and_zeros_and_minus_493_in_base_247() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_45,
		0x_98,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_45, 0x_AE, 0x_72, 0x_E5, 0x_ED, 0x_44, 0x_9E, 0x_B9, 0x_08, 0x_C4, 0x_EE, 0x_F2, 0x_90, 0x_3A,
		0x_25, 0x_96, 0x_43, 0x_B2, 0x_76, 0x_AB, 0x_D6, 0x_95, 0x_C5, 0x_41, 0x_B8, 0x_7E, 0x_54, 0x_D1, 0x_52,
		0x_62, 0x_BC, 0x_A8, 0x_82, 0x_78, 0x_EA, 0x_2C, 0x_F6, 0x_02, 0x_4E, 0x_E3, 0x_57, 0x_71, 0x_F7, 0x_97,
		0x_CC, 0x_70, 0x_6F, 0x_E6, 0x_32, 0x_8A, 0x_51, 0x_E1, 0x_22, 0x_D9, 0x_94, 0x_8E, 0x_15, 0x_3F, 0x_A7,
		0x_56, 0x_F3, 0x_D5, 0x_6B, 0x_C0, 0x_04, 0x_86, 0x_CF, 0x_6C, 0x_01, 0x_5C, 0x_7D, 0x_A0, 0x_A3, 0x_4F,
		0x_4B, 0x_A1, 0x_D8, 0x_26, 0x_A6, 0x_7A, 0x_79, 0x_FB, 0x_FD, 0x_EC, 0x_21, 0x_BB, 0x_5D, 0x_64, 0x_BA,
		0x_DF, 0x_E2, 0x_46, 0x_D3, 0x_35, 0x_9B, 0x_BD, 0x_85, 0x_EB, 0x_93, 0x_63, 0x_28, 0x_48, 0x_E4, 0x_13,
		0x_1E, 0x_7F, 0x_E9, 0x_8C, 0x_AF, 0x_59, 0x_DE, 0x_74, 0x_9D, 0x_B0, 0x_19, 0x_40, 0x_91, 0x_73, 0x_7C,
		0x_65, 0x_60, 0x_11, 0x_06, 0x_2F, 0x_34, 0x_03, 0x_BF, 0x_DA, 0x_18, 0x_3E, 0x_50, 0x_AD, 0x_68, 0x_42,
		0x_07, 0x_1D, 0x_A9, 0x_37, 0x_24, 0x_CB, 0x_AA, 0x_D7, 0x_16, 0x_F9, 0x_B5, 0x_5F, 0x_F0, 0x_A5, 0x_C9,
		0x_F4, 0x_DB, 0x_33, 0x_DD, 0x_2E, 0x_C8, 0x_3D, 0x_CE, 0x_C1, 0x_39, 0x_9A, 0x_B4, 0x_81, 0x_0F, 0x_C7,
		0x_30, 0x_5A, 0x_77, 0x_27, 0x_58, 0x_EF, 0x_D4, 0x_83, 0x_C2, 0x_F1, 0x_31, 0x_8F, 0x_7B, 0x_B7, 0x_FF,
		0x_B6, 0x_F8, 0x_F5, 0x_67, 0x_2A, 0x_0E, 0x_6D, 0x_E8, 0x_B1, 0x_1F, 0x_C3, 0x_75, 0x_D2, 0x_A2, 0x_69,
		0x_87, 0x_49, 0x_3C, 0x_FE, 0x_9F, 0x_14, 0x_47, 0x_23, 0x_BE, 0x_3B, 0x_8D, 0x_FA, 0x_89, 0x_53, 0x_4D,
		0x_FC, 0x_4A, 0x_8B, 0x_38, 0x_E0, 0x_5B, 0x_CA, 0x_17, 0x_5E, 0x_84, 0x_61, 0x_99, 0x_1A, 0x_55, 0x_1C,
		0x_A4, 0x_05, 0x_36, 0x_92, 0x_29, 0x_E7, 0x_12, 0x_B3, 0x_DC, 0x_6E, 0x_88, 0x_1B, 0x_9C, 0x_AC, 0x_66,
		0x_6A, 0x_D0, 0x_C6, 0x_80, 0x_10, 0x_CD, 0x_98,
	];

	helper(S, BASE, -493);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_1_991_in_base_247
#[test]
fn s_has_signs_and_zeros_and_minus_1_991_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_D9, 0x_3F, 0x_99,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_13, 0x_58, 0x_4C, 0x_C4, 0x_32, 0x_9C, 0x_38, 0x_3F, 0x_C1, 0x_A4, 0x_97, 0x_56, 0x_B9, 0x_A6,
		0x_99, 0x_75, 0x_F4, 0x_64, 0x_5E, 0x_C9, 0x_82, 0x_B6, 0x_51, 0x_57, 0x_66, 0x_D4, 0x_35, 0x_24, 0x_2E,
		0x_CA, 0x_3D, 0x_BB, 0x_9F, 0x_D7, 0x_3C, 0x_48, 0x_5D, 0x_73, 0x_CD, 0x_79, 0x_8A, 0x_D6, 0x_F3, 0x_2C,
		0x_FE, 0x_9E, 0x_08, 0x_78, 0x_27, 0x_23, 0x_40, 0x_FA, 0x_BF, 0x_E8, 0x_F6, 0x_39, 0x_61, 0x_95, 0x_DB,
		0x_44, 0x_0F, 0x_31, 0x_DA, 0x_63, 0x_D2, 0x_26, 0x_5A, 0x_EF, 0x_15, 0x_91, 0x_6A, 0x_7F, 0x_8E, 0x_46,
		0x_BE, 0x_A1, 0x_FB, 0x_37, 0x_D1, 0x_EA, 0x_E2, 0x_49, 0x_AB, 0x_07, 0x_25, 0x_8D, 0x_8C, 0x_7A, 0x_B1,
		0x_69, 0x_94, 0x_72, 0x_45, 0x_B7, 0x_EC, 0x_F8, 0x_85, 0x_DC, 0x_05, 0x_98, 0x_7C, 0x_5B, 0x_93, 0x_B3,
		0x_C0, 0x_88, 0x_77, 0x_4B, 0x_A2, 0x_0E, 0x_FC, 0x_F1, 0x_B2, 0x_71, 0x_DD, 0x_41, 0x_E9, 0x_C5, 0x_E6,
		0x_5C, 0x_C2, 0x_EE, 0x_19, 0x_5F, 0x_18, 0x_7D, 0x_11, 0x_76, 0x_BC, 0x_6E, 0x_8B, 0x_1D, 0x_60, 0x_52,
		0x_CE, 0x_F9, 0x_06, 0x_55, 0x_01, 0x_9D, 0x_54, 0x_F5, 0x_02, 0x_4E, 0x_B4, 0x_86, 0x_ED, 0x_3A, 0x_AC,
		0x_1C, 0x_4D, 0x_DF, 0x_47, 0x_80, 0x_42, 0x_14, 0x_22, 0x_C6, 0x_10, 0x_CF, 0x_84, 0x_AF, 0x_7B, 0x_16,
		0x_36, 0x_A0, 0x_CB, 0x_FF, 0x_1F, 0x_8F, 0x_6C, 0x_53, 0x_B5, 0x_A8, 0x_F0, 0x_DE, 0x_04, 0x_B0, 0x_E3,
		0x_43, 0x_E0, 0x_A3, 0x_96, 0x_B8, 0x_81, 0x_83, 0x_03, 0x_D0, 0x_17, 0x_F7, 0x_1E, 0x_4F, 0x_BA, 0x_74,
		0x_EB, 0x_6B, 0x_AA, 0x_21, 0x_1A, 0x_C7, 0x_2F, 0x_28, 0x_33, 0x_E7, 0x_34, 0x_3E, 0x_A7, 0x_9B, 0x_65,
		0x_92, 0x_BD, 0x_62, 0x_AE, 0x_F2, 0x_4A, 0x_3B, 0x_6F, 0x_C3, 0x_C8, 0x_89, 0x_1B, 0x_D3, 0x_59, 0x_68,
		0x_FD, 0x_7E, 0x_E1, 0x_2A, 0x_50, 0x_67, 0x_87, 0x_CC, 0x_90, 0x_6D, 0x_E4, 0x_AD, 0x_12, 0x_9A, 0x_A5,
		0x_29, 0x_D5, 0x_70, 0x_A9, 0x_30, 0x_D8, 0x_E5,
	];

	helper(S, BASE, -1_991);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_91_811_in_base_247
#[test]
fn s_has_signs_and_zeros_and_minus_91_811_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_6C, 0x_2C, 0x_77,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_6C, 0x_65, 0x_1E, 0x_35, 0x_0E, 0x_1B, 0x_51, 0x_E8, 0x_39, 0x_43, 0x_8B, 0x_D6, 0x_46, 0x_A2,
		0x_DF, 0x_DA, 0x_05, 0x_E0, 0x_CB, 0x_50, 0x_ED, 0x_08, 0x_93, 0x_CD, 0x_EE, 0x_3D, 0x_22, 0x_52, 0x_63,
		0x_24, 0x_AB, 0x_33, 0x_A0, 0x_73, 0x_86, 0x_D7, 0x_13, 0x_DB, 0x_02, 0x_5A, 0x_82, 0x_EA, 0x_D3, 0x_19,
		0x_5B, 0x_28, 0x_49, 0x_75, 0x_9A, 0x_83, 0x_25, 0x_91, 0x_BA, 0x_36, 0x_07, 0x_9F, 0x_EC, 0x_4E, 0x_B5,
		0x_14, 0x_3E, 0x_FB, 0x_9B, 0x_81, 0x_3C, 0x_E1, 0x_4B, 0x_17, 0x_CA, 0x_C2, 0x_C8, 0x_D5, 0x_31, 0x_23,
		0x_5C, 0x_A5, 0x_80, 0x_C9, 0x_61, 0x_34, 0x_55, 0x_AE, 0x_9E, 0x_45, 0x_06, 0x_58, 0x_7D, 0x_8D, 0x_DD,
		0x_4A, 0x_C5, 0x_1D, 0x_7E, 0x_5E, 0x_38, 0x_5D, 0x_1F, 0x_C3, 0x_87, 0x_41, 0x_4F, 0x_D1, 0x_C7, 0x_54,
		0x_F0, 0x_D8, 0x_8F, 0x_AC, 0x_B6, 0x_97, 0x_C4, 0x_7C, 0x_59, 0x_B0, 0x_F8, 0x_2A, 0x_FF, 0x_92, 0x_CF,
		0x_A6, 0x_89, 0x_B2, 0x_E3, 0x_2C, 0x_6F, 0x_D0, 0x_F2, 0x_A7, 0x_E6, 0x_21, 0x_F4, 0x_E2, 0x_D4, 0x_C6,
		0x_84, 0x_40, 0x_04, 0x_99, 0x_FE, 0x_26, 0x_CE, 0x_A1, 0x_A4, 0x_A8, 0x_AF, 0x_B3, 0x_BD, 0x_3B, 0x_1C,
		0x_F5, 0x_F9, 0x_72, 0x_7A, 0x_FA, 0x_B8, 0x_D2, 0x_DE, 0x_E9, 0x_85, 0x_BF, 0x_8C, 0x_96, 0x_AA, 0x_68,
		0x_E5, 0x_3A, 0x_4D, 0x_53, 0x_B7, 0x_88, 0x_C0, 0x_15, 0x_37, 0x_77, 0x_6A, 0x_32, 0x_D9, 0x_30, 0x_47,
		0x_01, 0x_F6, 0x_0F, 0x_FC, 0x_67, 0x_71, 0x_44, 0x_57, 0x_EF, 0x_29, 0x_78, 0x_03, 0x_F7, 0x_64, 0x_EB,
		0x_94, 0x_DC, 0x_1A, 0x_95, 0x_BC, 0x_9C, 0x_74, 0x_10, 0x_12, 0x_BB, 0x_2E, 0x_A3, 0x_76, 0x_79, 0x_9D,
		0x_62, 0x_A9, 0x_8E, 0x_5F, 0x_18, 0x_6B, 0x_BE, 0x_6E, 0x_4C, 0x_8A, 0x_E4, 0x_6D, 0x_90, 0x_B9, 0x_69,
		0x_42, 0x_AD, 0x_16, 0x_66, 0x_2F, 0x_B1, 0x_B4, 0x_E7, 0x_27, 0x_11, 0x_7B, 0x_70, 0x_56, 0x_7F, 0x_48,
		0x_F1, 0x_3F, 0x_98, 0x_FD, 0x_F3, 0x_C1, 0x_CC,
	];

	helper(S, BASE, -91_811);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_346_279_in_base_247
#[test]
fn s_has_signs_and_zeros_and_minus_346_279_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_4E, 0x_CD, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_80, 0x_06, 0x_9E, 0x_7A, 0x_4E, 0x_AA, 0x_22, 0x_56, 0x_A9, 0x_0F, 0x_34, 0x_24, 0x_AC, 0x_74,
		0x_5E, 0x_AB, 0x_B8, 0x_15, 0x_E1, 0x_7C, 0x_E8, 0x_A3, 0x_FA, 0x_75, 0x_B5, 0x_D5, 0x_86, 0x_2C, 0x_8D,
		0x_F8, 0x_5F, 0x_F6, 0x_98, 0x_4C, 0x_A1, 0x_7E, 0x_1F, 0x_5A, 0x_97, 0x_01, 0x_12, 0x_89, 0x_5C, 0x_A6,
		0x_13, 0x_40, 0x_4F, 0x_B4, 0x_36, 0x_8F, 0x_CE, 0x_E9, 0x_CA, 0x_BC, 0x_05, 0x_02, 0x_29, 0x_52, 0x_C9,
		0x_84, 0x_EE, 0x_66, 0x_E4, 0x_AD, 0x_63, 0x_B7, 0x_FE, 0x_AF, 0x_F3, 0x_68, 0x_B9, 0x_14, 0x_5B, 0x_1B,
		0x_73, 0x_55, 0x_76, 0x_8C, 0x_85, 0x_82, 0x_CB, 0x_D2, 0x_7F, 0x_D4, 0x_70, 0x_96, 0x_D3, 0x_C1, 0x_BE,
		0x_E3, 0x_DE, 0x_EB, 0x_0E, 0x_1D, 0x_B6, 0x_7D, 0x_31, 0x_DD, 0x_F1, 0x_47, 0x_A7, 0x_FC, 0x_46, 0x_49,
		0x_4B, 0x_79, 0x_E0, 0x_F4, 0x_F5, 0x_9D, 0x_6B, 0x_DF, 0x_EF, 0x_C0, 0x_23, 0x_78, 0x_8A, 0x_65, 0x_54,
		0x_99, 0x_9A, 0x_26, 0x_35, 0x_BA, 0x_FB, 0x_37, 0x_DC, 0x_E2, 0x_51, 0x_3D, 0x_A2, 0x_3C, 0x_6A, 0x_AE,
		0x_30, 0x_72, 0x_87, 0x_EC, 0x_16, 0x_DA, 0x_8E, 0x_11, 0x_1A, 0x_C8, 0x_C6, 0x_C3, 0x_A5, 0x_BD, 0x_5D,
		0x_D6, 0x_91, 0x_71, 0x_33, 0x_6F, 0x_BF, 0x_57, 0x_3E, 0x_3B, 0x_1E, 0x_21, 0x_95, 0x_44, 0x_50, 0x_38,
		0x_9B, 0x_CD, 0x_92, 0x_2F, 0x_03, 0x_A8, 0x_BB, 0x_B1, 0x_D8, 0x_88, 0x_64, 0x_45, 0x_B3, 0x_D9, 0x_C7,
		0x_6D, 0x_4A, 0x_18, 0x_C2, 0x_E6, 0x_08, 0x_1C, 0x_3F, 0x_6C, 0x_D1, 0x_90, 0x_10, 0x_A4, 0x_25, 0x_8B,
		0x_4D, 0x_CC, 0x_28, 0x_C5, 0x_27, 0x_83, 0x_7B, 0x_93, 0x_60, 0x_F9, 0x_62, 0x_48, 0x_32, 0x_67, 0x_ED,
		0x_E5, 0x_58, 0x_E7, 0x_81, 0x_2A, 0x_EA, 0x_DB, 0x_69, 0x_41, 0x_FF, 0x_C4, 0x_CF, 0x_D7, 0x_6E, 0x_17,
		0x_59, 0x_B2, 0x_9C, 0x_42, 0x_A0, 0x_F0, 0x_19, 0x_39, 0x_94, 0x_2E, 0x_07, 0x_3A, 0x_F7, 0x_FD, 0x_53,
		0x_B0, 0x_43, 0x_77, 0x_D0, 0x_04, 0x_F2, 0x_9F,
	];

	helper(S, BASE, -346_279);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_5_850_618_in_base_247
#[test]
fn s_has_signs_and_zeros_and_minus_5_850_618_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_02, 0x_02,
		0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_5C, 0x_D6,
		0x_94,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_3A, 0x_73, 0x_C5, 0x_71, 0x_5D, 0x_3F, 0x_06, 0x_7F, 0x_5F, 0x_44, 0x_C9, 0x_83, 0x_28, 0x_12,
		0x_04, 0x_75, 0x_FF, 0x_9A, 0x_F9, 0x_EB, 0x_16, 0x_17, 0x_72, 0x_F3, 0x_36, 0x_C8, 0x_5B, 0x_9F, 0x_AC,
		0x_DD, 0x_93, 0x_D8, 0x_13, 0x_C2, 0x_4B, 0x_C7, 0x_1B, 0x_E9, 0x_1E, 0x_61, 0x_FE, 0x_E4, 0x_A5, 0x_62,
		0x_D7, 0x_FB, 0x_88, 0x_BD, 0x_8C, 0x_3E, 0x_BC, 0x_0E, 0x_19, 0x_82, 0x_8D, 0x_E0, 0x_F0, 0x_34, 0x_49,
		0x_81, 0x_1D, 0x_23, 0x_65, 0x_91, 0x_60, 0x_37, 0x_4C, 0x_E3, 0x_3D, 0x_4F, 0x_8B, 0x_BF, 0x_74, 0x_FA,
		0x_8E, 0x_31, 0x_42, 0x_AD, 0x_03, 0x_1C, 0x_CE, 0x_55, 0x_F4, 0x_A4, 0x_43, 0x_15, 0x_F6, 0x_59, 0x_FD,
		0x_46, 0x_B9, 0x_9D, 0x_E7, 0x_EA, 0x_5C, 0x_10, 0x_AE, 0x_B7, 0x_08, 0x_85, 0x_D2, 0x_2E, 0x_57, 0x_B3,
		0x_69, 0x_29, 0x_C0, 0x_52, 0x_35, 0x_76, 0x_EE, 0x_A9, 0x_B6, 0x_50, 0x_DA, 0x_45, 0x_95, 0x_9E, 0x_26,
		0x_BE, 0x_96, 0x_63, 0x_98, 0x_2C, 0x_67, 0x_30, 0x_A1, 0x_18, 0x_7C, 0x_92, 0x_22, 0x_77, 0x_68, 0x_A3,
		0x_38, 0x_78, 0x_D3, 0x_66, 0x_E8, 0x_CF, 0x_87, 0x_3C, 0x_7D, 0x_2F, 0x_B0, 0x_F5, 0x_33, 0x_32, 0x_56,
		0x_6B, 0x_54, 0x_64, 0x_0F, 0x_7E, 0x_5A, 0x_A0, 0x_AB, 0x_B8, 0x_CD, 0x_DB, 0x_79, 0x_51, 0x_E1, 0x_6F,
		0x_4E, 0x_C1, 0x_8F, 0x_70, 0x_EF, 0x_89, 0x_F8, 0x_24, 0x_B4, 0x_7B, 0x_ED, 0x_94, 0x_F7, 0x_05, 0x_FC,
		0x_D1, 0x_14, 0x_BB, 0x_80, 0x_EC, 0x_DE, 0x_DF, 0x_84, 0x_D5, 0x_C4, 0x_F2, 0x_25, 0x_C6, 0x_CB, 0x_C3,
		0x_6E, 0x_A7, 0x_40, 0x_AF, 0x_6D, 0x_B5, 0x_5E, 0x_E5, 0x_D9, 0x_E2, 0x_CA, 0x_7A, 0x_E6, 0x_41, 0x_97,
		0x_B2, 0x_86, 0x_8A, 0x_39, 0x_58, 0x_D0, 0x_1F, 0x_48, 0x_D4, 0x_9B, 0x_AA, 0x_D6, 0x_53, 0x_B1, 0x_2A,
		0x_BA, 0x_4D, 0x_1A, 0x_3B, 0x_27, 0x_99, 0x_11, 0x_90, 0x_9C, 0x_A6, 0x_A2, 0x_F1, 0x_01, 0x_21, 0x_07,
		0x_47, 0x_6C, 0x_DC, 0x_4A, 0x_6A, 0x_CC, 0x_A8,
	];

	helper(S, BASE, -5_850_618);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_65_269_880_in_base_247
#[test]
fn s_has_signs_and_zeros_and_minus_65_269_880_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84,
		0x_84, 0x_84, 0x_84, 0x_84, 0x_98, 0x_15, 0x_10, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_61, 0x_4B, 0x_8B, 0x_98, 0x_83, 0x_D9, 0x_5E, 0x_F1, 0x_F2, 0x_B1, 0x_11, 0x_5C, 0x_1B, 0x_96,
		0x_18, 0x_A9, 0x_04, 0x_C8, 0x_42, 0x_22, 0x_64, 0x_4E, 0x_75, 0x_DB, 0x_FC, 0x_92, 0x_E1, 0x_B5, 0x_C0,
		0x_23, 0x_3D, 0x_90, 0x_03, 0x_BA, 0x_8A, 0x_B8, 0x_01, 0x_9A, 0x_FA, 0x_2A, 0x_71, 0x_56, 0x_D0, 0x_EE,
		0x_16, 0x_F5, 0x_C9, 0x_1C, 0x_FF, 0x_76, 0x_63, 0x_F9, 0x_62, 0x_73, 0x_06, 0x_4A, 0x_1F, 0x_E9, 0x_60,
		0x_6B, 0x_89, 0x_E5, 0x_9D, 0x_8F, 0x_37, 0x_7A, 0x_4C, 0x_4F, 0x_2E, 0x_1D, 0x_AD, 0x_2F, 0x_9F, 0x_8E,
		0x_48, 0x_AF, 0x_25, 0x_CC, 0x_47, 0x_ED, 0x_15, 0x_34, 0x_58, 0x_DC, 0x_86, 0x_A4, 0x_97, 0x_19, 0x_B0,
		0x_BE, 0x_C1, 0x_A3, 0x_AE, 0x_07, 0x_87, 0x_21, 0x_CA, 0x_0F, 0x_95, 0x_D3, 0x_32, 0x_51, 0x_2C, 0x_9C,
		0x_7D, 0x_DA, 0x_5D, 0x_14, 0x_91, 0x_8D, 0x_F8, 0x_C5, 0x_7F, 0x_C3, 0x_33, 0x_94, 0x_50, 0x_C7, 0x_FE,
		0x_FD, 0x_6F, 0x_F4, 0x_80, 0x_A1, 0x_AA, 0x_72, 0x_A5, 0x_59, 0x_A0, 0x_E2, 0x_70, 0x_CD, 0x_31, 0x_D7,
		0x_7C, 0x_AB, 0x_85, 0x_A6, 0x_7E, 0x_BF, 0x_6C, 0x_9B, 0x_E7, 0x_39, 0x_78, 0x_B6, 0x_5A, 0x_27, 0x_77,
		0x_6D, 0x_E8, 0x_F3, 0x_08, 0x_BB, 0x_C4, 0x_05, 0x_B3, 0x_B2, 0x_F7, 0x_CE, 0x_DD, 0x_EF, 0x_D8, 0x_D2,
		0x_3C, 0x_99, 0x_12, 0x_5F, 0x_4D, 0x_6A, 0x_82, 0x_30, 0x_A7, 0x_02, 0x_D4, 0x_17, 0x_49, 0x_45, 0x_A8,
		0x_13, 0x_65, 0x_9E, 0x_B7, 0x_41, 0x_EC, 0x_E0, 0x_44, 0x_F6, 0x_5B, 0x_54, 0x_7B, 0x_CF, 0x_8C, 0x_A2,
		0x_CB, 0x_F0, 0x_74, 0x_C2, 0x_AC, 0x_68, 0x_3E, 0x_3A, 0x_88, 0x_69, 0x_3B, 0x_BC, 0x_10, 0x_B9, 0x_29,
		0x_36, 0x_DE, 0x_81, 0x_3F, 0x_26, 0x_28, 0x_52, 0x_C6, 0x_DF, 0x_57, 0x_38, 0x_EB, 0x_BD, 0x_79, 0x_93,
		0x_EA, 0x_66, 0x_40, 0x_E3, 0x_FB, 0x_1A, 0x_35, 0x_53, 0x_43, 0x_E4, 0x_D1, 0x_67, 0x_D6, 0x_E6, 0x_24,
		0x_1E, 0x_0E, 0x_55, 0x_46, 0x_B4, 0x_6E, 0x_D5,
	];

	helper(S, BASE, -65_269_880);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_223_741_821_in_base_247
#[test]
fn s_has_signs_and_zeros_and_minus_223_741_821_in_base_247() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_5A, 0x_5A, 0x_78, 0x_EE,
		0x_D7, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_9C, 0x_13, 0x_CF, 0x_2F, 0x_AC, 0x_C9, 0x_B3, 0x_ED, 0x_04, 0x_46, 0x_C0, 0x_9B, 0x_EF, 0x_78,
		0x_8A, 0x_C8, 0x_11, 0x_55, 0x_3C, 0x_A9, 0x_74, 0x_61, 0x_12, 0x_86, 0x_BA, 0x_F3, 0x_81, 0x_21, 0x_30,
		0x_89, 0x_65, 0x_35, 0x_CB, 0x_8D, 0x_CD, 0x_F7, 0x_BE, 0x_57, 0x_66, 0x_BD, 0x_01, 0x_17, 0x_AE, 0x_5B,
		0x_64, 0x_F4, 0x_EB, 0x_29, 0x_60, 0x_31, 0x_F0, 0x_47, 0x_45, 0x_AA, 0x_8B, 0x_42, 0x_03, 0x_F2, 0x_92,
		0x_B1, 0x_67, 0x_63, 0x_AD, 0x_50, 0x_A6, 0x_BC, 0x_41, 0x_E2, 0x_3E, 0x_36, 0x_C4, 0x_F1, 0x_3F, 0x_54,
		0x_5C, 0x_E4, 0x_75, 0x_7E, 0x_D6, 0x_73, 0x_91, 0x_B5, 0x_14, 0x_0E, 0x_E8, 0x_DD, 0x_C7, 0x_D7, 0x_B2,
		0x_B7, 0x_2C, 0x_1B, 0x_02, 0x_4F, 0x_4C, 0x_E1, 0x_CE, 0x_DE, 0x_7C, 0x_FD, 0x_97, 0x_48, 0x_D5, 0x_76,
		0x_22, 0x_79, 0x_DB, 0x_72, 0x_DF, 0x_88, 0x_FC, 0x_0F, 0x_38, 0x_D3, 0x_2A, 0x_A1, 0x_6F, 0x_6B, 0x_4B,
		0x_A3, 0x_8E, 0x_3D, 0x_3B, 0x_DA, 0x_58, 0x_25, 0x_7A, 0x_71, 0x_83, 0x_A5, 0x_B8, 0x_E5, 0x_A0, 0x_90,
		0x_87, 0x_4A, 0x_7D, 0x_C5, 0x_49, 0x_1C, 0x_07, 0x_16, 0x_EC, 0x_1E, 0x_C1, 0x_52, 0x_C2, 0x_E6, 0x_A7,
		0x_AF, 0x_93, 0x_B6, 0x_B4, 0x_18, 0x_1F, 0x_5D, 0x_7F, 0x_62, 0x_53, 0x_1A, 0x_A2, 0x_FF, 0x_70, 0x_68,
		0x_4D, 0x_39, 0x_B9, 0x_DC, 0x_80, 0x_82, 0x_5E, 0x_3A, 0x_CC, 0x_FA, 0x_E7, 0x_37, 0x_AB, 0x_D8, 0x_9D,
		0x_6A, 0x_D4, 0x_34, 0x_F8, 0x_06, 0x_77, 0x_2E, 0x_1D, 0x_33, 0x_B0, 0x_6C, 0x_D0, 0x_F9, 0x_E9, 0x_95,
		0x_5F, 0x_6E, 0x_96, 0x_A4, 0x_9F, 0x_28, 0x_43, 0x_E0, 0x_8F, 0x_40, 0x_D2, 0x_51, 0x_84, 0x_EA, 0x_EE,
		0x_99, 0x_E3, 0x_F6, 0x_A8, 0x_C3, 0x_94, 0x_98, 0x_6D, 0x_9E, 0x_85, 0x_8C, 0x_9A, 0x_26, 0x_24, 0x_FE,
		0x_23, 0x_FB, 0x_56, 0x_19, 0x_08, 0x_CA, 0x_10, 0x_32, 0x_F5, 0x_C6, 0x_69, 0x_4E, 0x_44, 0x_7B, 0x_BF,
		0x_59, 0x_05, 0x_D9, 0x_27, 0x_15, 0x_BB, 0x_D1,
	];

	helper(S, BASE, -223_741_821);
}
// endregion
// region: s_has_signs_and_minus_1_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_1_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_A4, 0x_BD, 0x_5D, 0x_5D, 0x_A4, 0x_A4, 0x_5D, 0x_5D,
		0x_5D, 0x_A4, 0x_5D, 0x_A4, 0x_5D, 0x_A4, 0x_A4, 0x_A4, 0x_5D, 0x_5D, 0x_A4, 0x_A4, 0x_5D, 0x_A4, 0x_A4,
		0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_A4,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_signs_and_minus_94_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_94_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_FF, 0x_62, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_62, 0x_8F, 0x_62, 0x_FF, 0x_FF, 0x_62, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_FF,
	];

	helper(S, BASE, -94);
}
// endregion
// region: s_has_signs_and_minus_222_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_222_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_37, 0x_37, 0x_30, 0x_37, 0x_37, 0x_37, 0x_37, 0x_30, 0x_15, 0x_30, 0x_30, 0x_37,
		0x_30, 0x_37, 0x_37, 0x_30, 0x_37, 0x_37, 0x_37, 0x_30, 0x_30, 0x_37, 0x_37, 0x_37, 0x_30, 0x_30, 0x_37,
		0x_37, 0x_30, 0x_37, 0x_37, 0x_37, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_37, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_37, 0x_30, 0x_37, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_37,
	];

	helper(S, BASE, -222);
}
// endregion
// region: s_has_signs_and_minus_8_700_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_8_700_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_91, 0x_21, 0x_21, 0x_21, 0x_21, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_21, 0x_21, 0x_01, 0x_21, 0x_91, 0x_21, 0x_91, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_21, 0x_91, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_91, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_91,
	];

	helper(S, BASE, -8_700);
}
// endregion
// region: s_has_signs_and_minus_98_228_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_98_228_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_CE, 0x_58, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_58, 0x_CE, 0x_CE,
		0x_58, 0x_CE, 0x_58, 0x_58, 0x_C0, 0x_58, 0x_58, 0x_CE, 0x_CE, 0x_CE, 0x_58, 0x_58, 0x_CE, 0x_58, 0x_CE,
		0x_58, 0x_CE, 0x_58, 0x_CE,
	];
	const BASE: &[u8] = &[
		0x_58, 0x_CE,
	];

	helper(S, BASE, -98_228);
}
// endregion
// region: s_has_signs_and_minus_349_731_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_349_731_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_35, 0x_D9, 0x_35, 0x_D9, 0x_35, 0x_D9, 0x_35,
		0x_D9, 0x_35, 0x_35, 0x_D9, 0x_D9, 0x_D9, 0x_35, 0x_D9, 0x_D9, 0x_D9, 0x_35, 0x_35, 0x_48, 0x_D9, 0x_35,
		0x_35, 0x_35, 0x_D9, 0x_D9, 0x_D9, 0x_35, 0x_D9, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_35,
	];

	helper(S, BASE, -349_731);
}
// endregion
// region: s_has_signs_and_minus_7_122_696_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_7_122_696_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_B1, 0x_B1, 0x_CE, 0x_B1, 0x_B1, 0x_CE, 0x_CE, 0x_B1,
		0x_CE, 0x_B1, 0x_CE, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_CE, 0x_CE, 0x_CE, 0x_CE, 0x_B1, 0x_CE, 0x_CE, 0x_CE,
		0x_10, 0x_B1, 0x_CE, 0x_CE, 0x_CE, 0x_B1, 0x_B1, 0x_CE, 0x_B1, 0x_CE, 0x_CE, 0x_CE, 0x_B1, 0x_B1, 0x_B1,
		0x_B1, 0x_CE, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_B1, 0x_CE, 0x_B1, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_CE, 0x_B1,
	];

	helper(S, BASE, -7_122_696);
}
// endregion
// region: s_has_signs_and_minus_92_765_097_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_92_765_097_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_7D, 0x_AB, 0x_7D, 0x_7D, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_7D, 0x_7D, 0x_7D, 0x_AB, 0x_7D, 0x_7D,
		0x_7D, 0x_7D, 0x_AB, 0x_7D, 0x_7D, 0x_7D, 0x_AB, 0x_7D, 0x_AB, 0x_7D, 0x_AB, 0x_AB, 0x_7D, 0x_7A, 0x_AB,
		0x_7D, 0x_AB, 0x_7D, 0x_AB, 0x_AB, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_7D,
	];

	helper(S, BASE, -92_765_097);
}
// endregion
// region: s_has_signs_and_minus_271_642_619_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_271_642_619_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_1B, 0x_91, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_1B, 0x_1B, 0x_91, 0x_91, 0x_91, 0x_91, 0x_1B, 0x_1B, 0x_1B, 0x_91, 0x_1B, 0x_1B, 0x_1B,
		0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_91, 0x_1B, 0x_1B, 0x_CA, 0x_1B, 0x_91, 0x_91, 0x_91, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_1B,
	];

	helper(S, BASE, -271_642_619);
}
// endregion
// region: s_has_signs_and_minus_4_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_4_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_61, 0x_61, 0x_5A, 0x_61, 0x_DD,
		0x_DD, 0x_DD, 0x_DD, 0x_A5, 0x_DD, 0x_A5, 0x_A5, 0x_61, 0x_DD, 0x_A5, 0x_A5, 0x_61, 0x_A5, 0x_A5, 0x_61,
		0x_61, 0x_61, 0x_DD, 0x_61, 0x_61, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_A5, 0x_61, 0x_DD,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_signs_and_minus_64_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_64_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_6F, 0x_AB, 0x_F9, 0x_AB, 0x_EE, 0x_F9, 0x_F9, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_AB, 0x_6F,
	];

	helper(S, BASE, -64);
}
// endregion
// region: s_has_signs_and_minus_720_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_720_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_E1,
		0x_E1, 0x_9B, 0x_1D, 0x_1D, 0x_E1, 0x_E1, 0x_E1, 0x_FD, 0x_1D, 0x_E1, 0x_E1, 0x_FD, 0x_E1, 0x_1D, 0x_FD,
		0x_FD, 0x_1D, 0x_FD, 0x_E1, 0x_E1, 0x_FD, 0x_1D, 0x_E1, 0x_1D, 0x_FD, 0x_1D, 0x_E1, 0x_1D, 0x_FD, 0x_E1,
		0x_1D, 0x_1D, 0x_FD, 0x_1D, 0x_1D, 0x_FD, 0x_1D, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_FD, 0x_1D,
	];

	helper(S, BASE, -720);
}
// endregion
// region: s_has_signs_and_minus_1_389_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_1_389_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_12, 0x_AA, 0x_AA, 0x_FB, 0x_12, 0x_12, 0x_FB, 0x_9B, 0x_AA, 0x_12, 0x_AA,
		0x_AA, 0x_12, 0x_FB, 0x_FB, 0x_AA, 0x_12, 0x_12, 0x_FB, 0x_12, 0x_AA, 0x_AA, 0x_FB, 0x_AA, 0x_AA, 0x_12,
		0x_FB, 0x_12, 0x_AA, 0x_12, 0x_AA, 0x_12, 0x_12, 0x_12, 0x_FB, 0x_12, 0x_12, 0x_FB, 0x_12, 0x_FB, 0x_FB,
		0x_AA, 0x_FB, 0x_12, 0x_AA, 0x_FB, 0x_12, 0x_AA,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_12, 0x_AA,
	];

	helper(S, BASE, -1_389);
}
// endregion
// region: s_has_signs_and_minus_56_061_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_56_061_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_37, 0x_37, 0x_4B, 0x_4B, 0x_37,
		0x_37, 0x_B8, 0x_4B, 0x_B8, 0x_B8, 0x_02, 0x_37, 0x_37, 0x_B8, 0x_B8, 0x_B8, 0x_37, 0x_37, 0x_37, 0x_B8,
		0x_37, 0x_4B, 0x_37, 0x_B8, 0x_37, 0x_4B, 0x_B8, 0x_4B, 0x_37, 0x_37, 0x_4B, 0x_37, 0x_B8, 0x_4B, 0x_37,
		0x_B8, 0x_B8, 0x_4B, 0x_37, 0x_4B, 0x_37, 0x_B8, 0x_37, 0x_B8, 0x_B8, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_4B, 0x_37,
	];

	helper(S, BASE, -56_061);
}
// endregion
// region: s_has_signs_and_minus_922_398_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_922_398_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_EA, 0x_D2, 0x_13, 0x_EA, 0x_D2, 0x_EA, 0x_D2, 0x_13, 0x_D2,
		0x_EA, 0x_D2, 0x_D2, 0x_13, 0x_58, 0x_13, 0x_EA, 0x_D2, 0x_EA, 0x_EA, 0x_D2, 0x_EA, 0x_EA, 0x_13, 0x_EA,
		0x_D2, 0x_13, 0x_D2, 0x_EA, 0x_EA, 0x_13, 0x_13, 0x_13, 0x_13, 0x_D2, 0x_13, 0x_D2, 0x_D2, 0x_D2, 0x_EA,
		0x_13, 0x_D2, 0x_EA, 0x_13, 0x_EA, 0x_D2, 0x_13, 0x_EA, 0x_13, 0x_D2, 0x_EA, 0x_D2, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_EA, 0x_D2,
	];

	helper(S, BASE, -922_398);
}
// endregion
// region: s_has_signs_and_minus_2_393_613_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_393_613_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_CB, 0x_74,
		0x_74, 0x_97, 0x_CB, 0x_74, 0x_97, 0x_97, 0x_91, 0x_74, 0x_CB, 0x_CB, 0x_97, 0x_74, 0x_74, 0x_CB, 0x_CB,
		0x_CB, 0x_97, 0x_97, 0x_CB, 0x_97, 0x_74, 0x_74, 0x_97, 0x_74, 0x_97, 0x_74, 0x_97, 0x_97, 0x_74, 0x_97,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_74, 0x_CB,
	];

	helper(S, BASE, -2_393_613);
}
// endregion
// region: s_has_signs_and_minus_55_141_898_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_55_141_898_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_4F, 0x_9A, 0x_BD, 0x_4F, 0x_4F, 0x_BD, 0x_9A, 0x_BD, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F,
		0x_9A, 0x_4F, 0x_4F, 0x_BD, 0x_35, 0x_4F, 0x_4F, 0x_4F, 0x_BD, 0x_BD, 0x_4F, 0x_4F, 0x_9A, 0x_4F, 0x_BD,
		0x_BD, 0x_4F, 0x_4F, 0x_BD, 0x_BD, 0x_BD, 0x_4F, 0x_BD, 0x_4F, 0x_BD, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_4F, 0x_BD,
	];

	helper(S, BASE, -55_141_898);
}
// endregion
// region: s_has_signs_and_minus_126_106_306_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_126_106_306_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_65, 0x_65, 0x_65,
		0x_59, 0x_9A, 0x_9A, 0x_65, 0x_59, 0x_65, 0x_59, 0x_65, 0x_9A, 0x_65, 0x_65, 0x_65, 0x_65, 0x_59, 0x_0F,
		0x_59, 0x_59, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_65, 0x_65, 0x_65, 0x_59, 0x_59, 0x_65, 0x_65, 0x_65, 0x_9A,
		0x_59, 0x_9A, 0x_9A, 0x_59, 0x_9A, 0x_65, 0x_59, 0x_59, 0x_59, 0x_65, 0x_59, 0x_59, 0x_65, 0x_59, 0x_9A,
		0x_65,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_59, 0x_65,
	];

	helper(S, BASE, -126_106_306);
}
// endregion
// region: s_has_signs_and_minus_8_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_8_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_77, 0x_E7, 0x_7E, 0x_4B, 0x_91, 0x_A9, 0x_91, 0x_4B, 0x_77, 0x_91, 0x_91, 0x_77,
		0x_A9, 0x_E7, 0x_E7, 0x_77, 0x_91, 0x_4B, 0x_77, 0x_A9, 0x_77, 0x_A9, 0x_E7, 0x_77, 0x_91, 0x_77, 0x_91,
		0x_4B, 0x_91, 0x_77, 0x_77, 0x_A9, 0x_E7, 0x_4B, 0x_A9, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_77, 0x_91, 0x_E7, 0x_A9,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_signs_and_minus_44_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_44_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_43,
		0x_5A, 0x_1C, 0x_DD, 0x_76, 0x_A4, 0x_43, 0x_43, 0x_76, 0x_1C, 0x_5A, 0x_1C, 0x_A4, 0x_43, 0x_76, 0x_A4,
		0x_76, 0x_5A, 0x_43, 0x_43, 0x_A4, 0x_43, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_43, 0x_76, 0x_5A, 0x_1C,
	];

	helper(S, BASE, -44);
}
// endregion
// region: s_has_signs_and_minus_329_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_329_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_3B, 0x_B1, 0x_6F, 0x_11, 0x_03, 0x_B1, 0x_B1, 0x_6F, 0x_3B, 0x_6F, 0x_B1, 0x_11,
		0x_6F, 0x_B1, 0x_3B, 0x_11, 0x_B1, 0x_6F, 0x_11, 0x_11, 0x_6F, 0x_B1, 0x_6F, 0x_6F, 0x_78, 0x_11, 0x_3B,
		0x_78,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_78, 0x_3B, 0x_B1, 0x_11,
	];

	helper(S, BASE, -329);
}
// endregion
// region: s_has_signs_and_minus_4_706_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_4_706_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_C1,
		0x_E3, 0x_E3, 0x_04, 0x_C1, 0x_C1, 0x_8C, 0x_C4, 0x_C1, 0x_C4, 0x_C4, 0x_04, 0x_E3, 0x_C4, 0x_C1, 0x_C1,
		0x_04, 0x_BD, 0x_BD, 0x_C1, 0x_C1, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_C1, 0x_E3, 0x_04, 0x_BD,
	];

	helper(S, BASE, -4_706);
}
// endregion
// region: s_has_signs_and_minus_14_963_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_14_963_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_D9, 0x_EF, 0x_D9, 0x_EF,
		0x_97, 0x_EF, 0x_96, 0x_A9, 0x_5B, 0x_5B, 0x_97, 0x_97, 0x_97, 0x_A9, 0x_A9, 0x_5B, 0x_97, 0x_97, 0x_D9,
		0x_D9, 0x_A9, 0x_D9, 0x_5B, 0x_5B, 0x_5B, 0x_97, 0x_5B, 0x_D9, 0x_5B, 0x_A9, 0x_97, 0x_D9, 0x_5B, 0x_5B,
		0x_D9, 0x_5B, 0x_97, 0x_97, 0x_A9, 0x_A9, 0x_A9,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_A9, 0x_97, 0x_EF, 0x_D9,
	];

	helper(S, BASE, -14_963);
}
// endregion
// region: s_has_signs_and_minus_979_734_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_979_734_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_62, 0x_62, 0x_62, 0x_99, 0x_62, 0x_62, 0x_55, 0x_80, 0x_55, 0x_67, 0x_99, 0x_80, 0x_61, 0x_55, 0x_55,
		0x_99, 0x_55, 0x_62, 0x_99, 0x_55, 0x_62, 0x_61, 0x_62, 0x_61, 0x_99, 0x_80, 0x_61, 0x_99,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_80, 0x_62, 0x_99, 0x_55,
	];

	helper(S, BASE, -979_734);
}
// endregion
// region: s_has_signs_and_minus_3_075_791_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_3_075_791_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_C6, 0x_87, 0x_EE, 0x_C6, 0x_EE, 0x_C6, 0x_C6, 0x_C6, 0x_42, 0x_C6, 0x_24,
		0x_C6, 0x_23, 0x_23, 0x_87, 0x_C6, 0x_EE, 0x_42, 0x_87, 0x_23, 0x_C6, 0x_23, 0x_EE, 0x_C6, 0x_42, 0x_23,
		0x_87, 0x_C6, 0x_42, 0x_42, 0x_87, 0x_87, 0x_42, 0x_87, 0x_87, 0x_EE, 0x_87, 0x_42, 0x_EE, 0x_23, 0x_87,
		0x_87, 0x_42, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_C6, 0x_87, 0x_42, 0x_EE,
	];

	helper(S, BASE, -3_075_791);
}
// endregion
// region: s_has_signs_and_minus_99_815_776_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_99_815_776_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_F0, 0x_96, 0x_34, 0x_96, 0x_F0, 0x_24, 0x_34, 0x_96,
		0x_34, 0x_34, 0x_96, 0x_34, 0x_DB, 0x_96, 0x_24, 0x_96, 0x_24, 0x_96, 0x_8F, 0x_34, 0x_34, 0x_24, 0x_96,
		0x_8F, 0x_F0, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_34, 0x_F0, 0x_24, 0x_8F,
	];

	helper(S, BASE, -99_815_776);
}
// endregion
// region: s_has_signs_and_minus_191_940_621_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_191_940_621_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_D0, 0x_81, 0x_D0, 0x_E6, 0x_E6, 0x_81,
		0x_77, 0x_81, 0x_81, 0x_81, 0x_81, 0x_E6, 0x_A6, 0x_E6, 0x_77, 0x_90, 0x_D0, 0x_77, 0x_77, 0x_E6, 0x_81,
		0x_E6,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_E6, 0x_90, 0x_D0, 0x_81,
	];

	helper(S, BASE, -191_940_621);
}
// endregion
// region: s_has_signs_and_minus_1_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_1_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_C1, 0x_A4, 0x_7B, 0x_BD,
		0x_18, 0x_B9, 0x_18, 0x_C1, 0x_BD, 0x_C1, 0x_32, 0x_32, 0x_C1, 0x_7B, 0x_7B, 0x_B9, 0x_B9, 0x_44, 0x_C1,
		0x_C1, 0x_C1, 0x_18, 0x_C1, 0x_B9, 0x_44, 0x_18, 0x_BD, 0x_18, 0x_BD, 0x_BD, 0x_18, 0x_18, 0x_18, 0x_44,
		0x_BD, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_C1, 0x_B9, 0x_18, 0x_BD, 0x_7B, 0x_32,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_signs_and_minus_87_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_87_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_51, 0x_1D, 0x_7E, 0x_43, 0x_1D, 0x_1D, 0x_51, 0x_7E, 0x_7E, 0x_1D, 0x_04, 0x_1D, 0x_93, 0x_B1,
		0x_04, 0x_04, 0x_93, 0x_AE, 0x_51, 0x_1D, 0x_B1, 0x_04, 0x_7E, 0x_B1, 0x_AE, 0x_AE, 0x_B1, 0x_B1, 0x_93,
		0x_1D, 0x_7E, 0x_93, 0x_AE, 0x_51, 0x_7E, 0x_AE, 0x_04, 0x_1D, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_51, 0x_04, 0x_7E, 0x_93, 0x_1D, 0x_AE,
	];

	helper(S, BASE, -87);
}
// endregion
// region: s_has_signs_and_minus_939_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_939_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_25, 0x_68, 0x_6D,
		0x_6D, 0x_BB, 0x_72, 0x_EB, 0x_72, 0x_EB, 0x_68, 0x_0E, 0x_6D, 0x_25, 0x_DB, 0x_6D, 0x_DB, 0x_72, 0x_72,
		0x_EB, 0x_25, 0x_EB, 0x_72, 0x_72, 0x_0E, 0x_25, 0x_EB, 0x_72, 0x_DB, 0x_6D, 0x_25, 0x_6D, 0x_25, 0x_0E,
		0x_25, 0x_6D, 0x_25, 0x_25, 0x_6D, 0x_68, 0x_EB, 0x_EB, 0x_DB, 0x_6D, 0x_DB, 0x_72, 0x_25, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_6D, 0x_25, 0x_DB, 0x_0E, 0x_68, 0x_72,
	];

	helper(S, BASE, -939);
}
// endregion
// region: s_has_signs_and_minus_6_960_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_6_960_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_3F, 0x_8D, 0x_3F, 0x_1A, 0x_3F, 0x_52, 0x_8D, 0x_14,
		0x_8D, 0x_A9, 0x_A9, 0x_3F, 0x_3F, 0x_3F, 0x_14, 0x_14, 0x_8D, 0x_14, 0x_3F, 0x_A9, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_14, 0x_3F, 0x_F5, 0x_A9, 0x_98, 0x_8D,
	];

	helper(S, BASE, -6_960);
}
// endregion
// region: s_has_signs_and_minus_64_300_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_64_300_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_ED, 0x_9F, 0x_9F, 0x_ED, 0x_72, 0x_9F, 0x_03, 0x_C2, 0x_9F, 0x_9F, 0x_72, 0x_9A, 0x_C2,
		0x_9A, 0x_ED, 0x_9F, 0x_9A, 0x_ED, 0x_C2, 0x_14, 0x_ED, 0x_C2, 0x_9F, 0x_72, 0x_72, 0x_14, 0x_14, 0x_9F,
		0x_14, 0x_9F, 0x_9A, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_72, 0x_9A, 0x_ED, 0x_4D, 0x_9F, 0x_C2,
	];

	helper(S, BASE, -64_300);
}
// endregion
// region: s_has_signs_and_minus_456_881_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_456_881_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_91, 0x_EF, 0x_69, 0x_30, 0x_29, 0x_29, 0x_9D,
		0x_28, 0x_30, 0x_69, 0x_4D, 0x_91, 0x_30, 0x_EF, 0x_4D, 0x_30, 0x_91, 0x_EF, 0x_30, 0x_69, 0x_91, 0x_29,
		0x_69, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_69, 0x_30, 0x_91, 0x_4D, 0x_9D, 0x_EF,
	];

	helper(S, BASE, -456_881);
}
// endregion
// region: s_has_signs_and_minus_4_430_741_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_4_430_741_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_75, 0x_38, 0x_6A, 0x_6A,
		0x_38, 0x_6A, 0x_38, 0x_A3, 0x_E7, 0x_6A, 0x_75, 0x_6A, 0x_A3, 0x_75, 0x_25, 0x_75, 0x_75, 0x_92, 0x_53,
		0x_75, 0x_A3, 0x_53, 0x_A3, 0x_92, 0x_53, 0x_A3, 0x_75, 0x_38, 0x_25, 0x_38, 0x_92, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_92, 0x_38, 0x_53, 0x_6A, 0x_75, 0x_25,
	];

	helper(S, BASE, -4_430_741);
}
// endregion
// region: s_has_signs_and_minus_66_365_153_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_66_365_153_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_CF, 0x_33, 0x_2E,
		0x_33, 0x_56, 0x_33, 0x_33, 0x_15, 0x_AC, 0x_CF, 0x_17, 0x_A4, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_CF, 0x_15, 0x_2E, 0x_33, 0x_A4, 0x_AC,
	];

	helper(S, BASE, -66_365_153);
}
// endregion
// region: s_has_signs_and_minus_490_032_295_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_490_032_295_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_E4, 0x_A7,
		0x_E4, 0x_90, 0x_90, 0x_E4, 0x_65, 0x_90, 0x_5B, 0x_90, 0x_5B, 0x_DF, 0x_A7, 0x_E4, 0x_90, 0x_A7, 0x_24,
		0x_5B, 0x_A7, 0x_E3, 0x_E4, 0x_65, 0x_E3, 0x_65, 0x_E4, 0x_E3, 0x_65, 0x_E3, 0x_A7, 0x_E3, 0x_A7, 0x_E4,
		0x_A7, 0x_5B, 0x_90, 0x_65, 0x_A7, 0x_E4, 0x_E3, 0x_E4, 0x_65, 0x_65, 0x_A7, 0x_90, 0x_E3, 0x_90, 0x_E4,
		0x_5B, 0x_E3, 0x_24, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_E4, 0x_E3, 0x_65, 0x_5B, 0x_A7, 0x_24,
	];

	helper(S, BASE, -490_032_295);
}
// endregion
// region: s_has_signs_and_minus_8_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_8_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_E2,
		0x_72, 0x_48, 0x_3F, 0x_36, 0x_36, 0x_48, 0x_F3, 0x_36, 0x_C1, 0x_F3, 0x_9F, 0x_92, 0x_3F, 0x_48, 0x_F3,
		0x_F3, 0x_D4, 0x_C1, 0x_27, 0x_E2, 0x_F3, 0x_D4, 0x_27, 0x_D4, 0x_D4, 0x_F3, 0x_3F, 0x_3F, 0x_27, 0x_F3,
		0x_92, 0x_36, 0x_D4, 0x_12, 0x_F3, 0x_D4, 0x_F3, 0x_C1, 0x_F3, 0x_48, 0x_48, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_F3, 0x_C1, 0x_D4, 0x_12, 0x_92, 0x_3F, 0x_9F, 0x_27, 0x_E2, 0x_36, 0x_48,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_signs_and_minus_99_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_99_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_D0, 0x_B8, 0x_1E, 0x_64, 0x_3C, 0x_B8, 0x_B8, 0x_8B,
		0x_9A, 0x_A0, 0x_F0, 0x_D2, 0x_3B, 0x_F0, 0x_A0, 0x_F0, 0x_8B, 0x_8B, 0x_3B, 0x_D2, 0x_F0, 0x_9A, 0x_64,
		0x_B8, 0x_D0, 0x_8B, 0x_B8, 0x_B8, 0x_9A, 0x_F0, 0x_9A, 0x_F0, 0x_9A, 0x_D2, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_A0, 0x_D2, 0x_F0, 0x_64, 0x_3B, 0x_3C, 0x_9A, 0x_F1, 0x_D0, 0x_8B,
	];

	helper(S, BASE, -99);
}
// endregion
// region: s_has_signs_and_minus_955_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_955_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_1E, 0x_22, 0x_22, 0x_72,
		0x_87, 0x_3D, 0x_21, 0x_98, 0x_05, 0x_50, 0x_48, 0x_48, 0x_3D, 0x_22, 0x_22, 0x_D8, 0x_21, 0x_D8, 0x_3D,
		0x_D8, 0x_21, 0x_3D, 0x_21, 0x_87, 0x_05, 0x_1E, 0x_D8, 0x_D8, 0x_21, 0x_48, 0x_87, 0x_1E, 0x_6A, 0x_6A,
		0x_87, 0x_21, 0x_22, 0x_87, 0x_22, 0x_D8, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_48, 0x_21, 0x_87, 0x_6A, 0x_50, 0x_05, 0x_1E, 0x_D8, 0x_22, 0x_98,
	];

	helper(S, BASE, -955);
}
// endregion
// region: s_has_signs_and_minus_8_232_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_8_232_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_F1, 0x_24, 0x_07,
		0x_90, 0x_69, 0x_24, 0x_96, 0x_8C, 0x_90, 0x_52, 0x_BF, 0x_DD, 0x_DD, 0x_4E, 0x_52, 0x_24, 0x_F1, 0x_96,
		0x_4E, 0x_4E, 0x_90, 0x_07, 0x_CC, 0x_8C, 0x_CC, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_4E, 0x_24, 0x_BF, 0x_90, 0x_CC, 0x_F1, 0x_DD, 0x_8C, 0x_52, 0x_96,
	];

	helper(S, BASE, -8_232);
}
// endregion
// region: s_has_signs_and_minus_77_143_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_77_143_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2A, 0x_BB,
		0x_9C, 0x_82, 0x_39, 0x_19, 0x_F7, 0x_F7, 0x_82, 0x_16, 0x_DA, 0x_BB, 0x_86, 0x_BB, 0x_F7, 0x_16, 0x_16,
		0x_DA, 0x_AB, 0x_BB, 0x_79, 0x_82, 0x_39, 0x_F7, 0x_DA, 0x_DA, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_F7, 0x_BB, 0x_79, 0x_AB, 0x_2A, 0x_82, 0x_DA, 0x_86, 0x_16, 0x_9C,
	];

	helper(S, BASE, -77_143);
}
// endregion
// region: s_has_signs_and_minus_741_206_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_741_206_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_C7, 0x_61, 0x_61, 0x_CC, 0x_4B,
		0x_C7, 0x_A6, 0x_CC, 0x_CC, 0x_0F, 0x_4B, 0x_23, 0x_55, 0x_4B, 0x_E7, 0x_CC, 0x_31, 0x_56, 0x_56, 0x_C7,
		0x_3D, 0x_C7, 0x_CC, 0x_C7, 0x_55, 0x_55, 0x_3D, 0x_3D, 0x_3D, 0x_CC, 0x_3D, 0x_C7, 0x_23, 0x_56, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_31, 0x_3D, 0x_0F, 0x_55, 0x_C7, 0x_56, 0x_61, 0x_4B, 0x_23, 0x_CC, 0x_E7,
	];

	helper(S, BASE, -741_206);
}
// endregion
// region: s_has_signs_and_minus_4_668_291_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_4_668_291_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_0F, 0x_52, 0x_A2, 0x_BE, 0x_8F,
		0x_A2, 0x_F0, 0x_A9, 0x_C2, 0x_BE, 0x_F0, 0x_0F, 0x_8F, 0x_F0, 0x_F0, 0x_9F, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_F0, 0x_0F, 0x_8F, 0x_AE, 0x_43, 0x_52, 0x_9F, 0x_49, 0x_BE, 0x_A2,
	];

	helper(S, BASE, -4_668_291);
}
// endregion
// region: s_has_signs_and_minus_51_058_005_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_51_058_005_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_CC, 0x_E9,
		0x_A4, 0x_1A, 0x_3C, 0x_E9, 0x_15, 0x_A4, 0x_2F, 0x_15, 0x_7C, 0x_7D, 0x_15, 0x_C5, 0x_3C, 0x_CC, 0x_E9,
		0x_3C, 0x_15, 0x_CC, 0x_CC, 0x_A4, 0x_A4, 0x_7D, 0x_15, 0x_A6, 0x_1A, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_A6, 0x_CC, 0x_3C, 0x_7D, 0x_87, 0x_E9, 0x_C5, 0x_7C, 0x_A4, 0x_15,
	];

	helper(S, BASE, -51_058_005);
}
// endregion
// region: s_has_signs_and_minus_832_183_513_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_832_183_513_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_01, 0x_0E, 0x_9A, 0x_99, 0x_BF, 0x_BF, 0x_99, 0x_9A, 0x_9A, 0x_DE, 0x_C3, 0x_79, 0x_3E, 0x_3E,
		0x_0E, 0x_71, 0x_01, 0x_01, 0x_71, 0x_3E, 0x_9A, 0x_71, 0x_6B, 0x_71, 0x_BF, 0x_C3, 0x_69, 0x_6B, 0x_BF,
		0x_71, 0x_71, 0x_9A, 0x_BF, 0x_01, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_79, 0x_BF, 0x_01, 0x_71, 0x_69, 0x_6B, 0x_9A, 0x_99, 0x_0E, 0x_3E,
	];

	helper(S, BASE, -832_183_513);
}
// endregion
// region: s_has_signs_and_minus_7_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_7_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_99, 0x_CB, 0x_2C, 0x_3D, 0x_AA, 0x_C6, 0x_DF, 0x_D4, 0x_8D, 0x_22,
		0x_52, 0x_D4, 0x_2C, 0x_D7, 0x_99, 0x_22, 0x_3D, 0x_AA, 0x_C2, 0x_8D, 0x_3D, 0x_C6, 0x_99, 0x_22, 0x_C6,
		0x_5E, 0x_8D, 0x_99, 0x_AA, 0x_22, 0x_5E, 0x_D4, 0x_99, 0x_D4, 0x_DF, 0x_C6, 0x_D4, 0x_AA, 0x_99, 0x_2C,
		0x_D7,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_DF, 0x_22, 0x_2C, 0x_5E, 0x_AA, 0x_C6, 0x_99, 0x_8D, 0x_52, 0x_C2, 0x_3D, 0x_D4,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_signs_and_minus_91_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_91_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_FF, 0x_F6, 0x_A6, 0x_47, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_CF, 0x_B9, 0x_97, 0x_98, 0x_CD, 0x_E1, 0x_FF, 0x_47, 0x_5A, 0x_61, 0x_C1, 0x_90,
	];

	helper(S, BASE, -91);
}
// endregion
// region: s_has_signs_and_minus_992_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_992_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_31, 0x_02, 0x_CF, 0x_E3, 0x_8F, 0x_D3, 0x_D3, 0x_31,
		0x_3B, 0x_8F, 0x_C4, 0x_02, 0x_91, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_3B, 0x_EE, 0x_C4, 0x_CF, 0x_31, 0x_D3, 0x_8F, 0x_91, 0x_51, 0x_F8, 0x_02, 0x_EF,
	];

	helper(S, BASE, -992);
}
// endregion
// region: s_has_signs_and_minus_3_159_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_3_159_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_95, 0x_73, 0x_18, 0x_F4, 0x_B7, 0x_BD, 0x_F4, 0x_F4, 0x_AB,
		0x_BD, 0x_54, 0x_18, 0x_1E, 0x_F4, 0x_AB, 0x_95, 0x_18, 0x_23, 0x_A7, 0x_FB, 0x_23, 0x_FB, 0x_A7, 0x_A7,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_95, 0x_AB, 0x_BD, 0x_FB, 0x_73, 0x_50, 0x_EF, 0x_A7, 0x_18, 0x_1E, 0x_23, 0x_54,
	];

	helper(S, BASE, -3_159);
}
// endregion
// region: s_has_signs_and_minus_65_793_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_65_793_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_D6, 0x_57, 0x_C4, 0x_10, 0x_69, 0x_9F, 0x_3B, 0x_3B, 0x_D6, 0x_C4, 0x_3B, 0x_C4, 0x_3B,
		0x_3B, 0x_E0, 0x_E0, 0x_45, 0x_3B, 0x_73, 0x_1F, 0x_1F, 0x_73, 0x_E0, 0x_D6, 0x_45, 0x_E0, 0x_45, 0x_D6,
		0x_B6, 0x_73, 0x_1F, 0x_CF, 0x_73, 0x_69, 0x_3D, 0x_45, 0x_45, 0x_69, 0x_C4, 0x_1F, 0x_C4, 0x_3D, 0x_CF,
		0x_45, 0x_E0, 0x_10, 0x_57, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_3D, 0x_D6, 0x_57, 0x_10, 0x_B6, 0x_E0, 0x_45, 0x_CF, 0x_73, 0x_1F, 0x_3B, 0x_C4,
	];

	helper(S, BASE, -65_793);
}
// endregion
// region: s_has_signs_and_minus_497_051_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_497_051_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_9F, 0x_35, 0x_41, 0x_1C, 0x_9F, 0x_3F, 0x_A0,
		0x_35, 0x_05, 0x_3F, 0x_38, 0x_F7, 0x_29, 0x_41, 0x_1C, 0x_8E, 0x_48, 0x_05, 0x_3F, 0x_9F, 0x_9F, 0x_63,
		0x_35, 0x_8E, 0x_3F, 0x_8E, 0x_29, 0x_41, 0x_1C, 0x_9F, 0x_35, 0x_63, 0x_8E, 0x_38, 0x_63, 0x_41, 0x_38,
		0x_41, 0x_41, 0x_38, 0x_05, 0x_3F, 0x_3F, 0x_38, 0x_41, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_9F, 0x_8E, 0x_1C, 0x_35, 0x_41, 0x_F7, 0x_05, 0x_38, 0x_3F, 0x_63, 0x_29, 0x_4D,
	];

	helper(S, BASE, -497_051);
}
// endregion
// region: s_has_signs_and_minus_8_381_525_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_8_381_525_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_87, 0x_15, 0x_4A, 0x_42, 0x_CB, 0x_5B, 0x_15, 0x_D7, 0x_E5,
		0x_D5, 0x_A0, 0x_CB, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_D5, 0x_87, 0x_12, 0x_7D, 0x_3D, 0x_42, 0x_A0, 0x_4A, 0x_E5, 0x_15, 0x_5B, 0x_21, 0x_CB,
	];

	helper(S, BASE, -8_381_525);
}
// endregion
// region: s_has_signs_and_minus_38_449_214_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_38_449_214_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_48, 0x_C6, 0x_48, 0x_B3, 0x_66, 0x_E4, 0x_E7,
		0x_1C, 0x_E7, 0x_B3, 0x_2F, 0x_D0, 0x_48, 0x_66, 0x_82, 0x_4E, 0x_2F, 0x_E7, 0x_E4, 0x_B3, 0x_D0, 0x_66,
		0x_E7, 0x_48, 0x_4E, 0x_66, 0x_B2, 0x_E4, 0x_16, 0x_7A, 0x_C6, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_E4, 0x_B3, 0x_7A, 0x_2F, 0x_4E, 0x_B2, 0x_48, 0x_D0, 0x_16, 0x_66, 0x_E7, 0x_C6,
	];

	helper(S, BASE, -38_449_214);
}
// endregion
// region: s_has_signs_and_minus_133_918_509_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_133_918_509_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_8E, 0x_62, 0x_11, 0x_40, 0x_CB, 0x_8E, 0x_8E, 0x_56, 0x_C3, 0x_F8,
		0x_40, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_E9, 0x_62, 0x_8E, 0x_CC, 0x_7C, 0x_5F, 0x_86, 0x_76, 0x_40, 0x_11, 0x_56, 0x_CB, 0x_F8,
	];

	helper(S, BASE, -133_918_509);
}
// endregion
// region: s_has_signs_and_minus_5_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_5_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_90, 0x_D7, 0x_93, 0x_45,
		0x_E2, 0x_45, 0x_28, 0x_05, 0x_9E, 0x_E2, 0x_0F, 0x_CC, 0x_F9, 0x_84, 0x_C2, 0x_A4, 0x_F6, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_28, 0x_AD, 0x_7C, 0x_5C, 0x_90, 0x_84, 0x_A4, 0x_93, 0x_F9, 0x_CC, 0x_45, 0x_C2, 0x_05, 0x_E2,
		0x_F6, 0x_0F, 0x_34, 0x_9E,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_signs_and_minus_86_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_86_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_B7, 0x_87,
		0x_38, 0x_84, 0x_8D, 0x_B2, 0x_9C, 0x_B2, 0x_84, 0x_DE, 0x_B7, 0x_EA, 0x_BF, 0x_B2, 0x_B7, 0x_9C, 0x_B2,
		0x_47, 0x_33, 0x_B3, 0x_77, 0x_BF, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_DE, 0x_97, 0x_5A, 0x_B7, 0x_B3, 0x_8D, 0x_EA, 0x_3F, 0x_9C, 0x_87, 0x_BF, 0x_5D, 0x_6F, 0x_33,
		0x_47, 0x_B2, 0x_77, 0x_84,
	];

	helper(S, BASE, -86);
}
// endregion
// region: s_has_signs_and_minus_208_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_208_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_7D, 0x_51, 0x_90, 0x_07, 0x_51, 0x_A9, 0x_53,
		0x_A1, 0x_A3, 0x_A8, 0x_F8, 0x_A8, 0x_78, 0x_07, 0x_C1, 0x_1E, 0x_A3, 0x_53, 0x_1E, 0x_C1, 0x_A4, 0x_DF,
		0x_56, 0x_86, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_A8, 0x_78, 0x_67, 0x_8B, 0x_A9, 0x_C1, 0x_1E, 0x_A3, 0x_F8, 0x_7D, 0x_1D, 0x_DF, 0x_53, 0x_A1,
		0x_86, 0x_07, 0x_A4, 0x_51,
	];

	helper(S, BASE, -208);
}
// endregion
// region: s_has_signs_and_minus_5_100_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_5_100_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_DB, 0x_BF, 0x_4B, 0x_67, 0x_81, 0x_FD, 0x_4B, 0x_61, 0x_A3, 0x_F2, 0x_4B,
		0x_FD, 0x_B2, 0x_FD, 0x_DB, 0x_BF, 0x_60, 0x_D1, 0x_D7, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_59, 0x_BF, 0x_D4, 0x_60, 0x_A4, 0x_D7, 0x_61, 0x_4B, 0x_D1, 0x_81, 0x_FD, 0x_B2, 0x_10, 0x_DB,
		0x_DE, 0x_39, 0x_92, 0x_A3,
	];

	helper(S, BASE, -5_100);
}
// endregion
// region: s_has_signs_and_minus_81_820_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_81_820_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_3C, 0x_6F, 0x_17, 0x_31, 0x_0E, 0x_D6, 0x_97, 0x_D6, 0x_19, 0x_6A, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_3F, 0x_41, 0x_EC, 0x_6A, 0x_5A, 0x_31, 0x_0F, 0x_DB, 0x_8D, 0x_A8, 0x_3C, 0x_17, 0x_82, 0x_D6,
		0x_B8, 0x_19, 0x_6F, 0x_97,
	];

	helper(S, BASE, -81_820);
}
// endregion
// region: s_has_signs_and_minus_348_530_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_348_530_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_3B, 0x_9C, 0x_BD, 0x_54, 0x_FF, 0x_28,
		0x_86, 0x_78, 0x_61, 0x_6D, 0x_5C, 0x_F2, 0x_86, 0x_6D, 0x_10, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_6D, 0x_3B, 0x_10, 0x_E6, 0x_86, 0x_EF, 0x_4F, 0x_54, 0x_F2, 0x_A8, 0x_25, 0x_9C, 0x_FF, 0x_5C,
		0x_BD, 0x_B2, 0x_B9, 0x_61,
	];

	helper(S, BASE, -348_530);
}
// endregion
// region: s_has_signs_and_minus_3_558_654_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_3_558_654_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_8F, 0x_7B, 0x_82, 0x_14, 0x_D7, 0x_C4, 0x_19, 0x_C2, 0x_14,
		0x_FD, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_24, 0x_8F, 0x_2C, 0x_50, 0x_BC, 0x_82, 0x_FD, 0x_0F, 0x_7B, 0x_C2, 0x_47, 0x_C4, 0x_74, 0x_36, 0x_D7,
		0x_14, 0x_DB, 0x_64, 0x_DF,
	];

	helper(S, BASE, -3_558_654);
}
// endregion
// region: s_has_signs_and_minus_25_016_814_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_25_016_814_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_66, 0x_7A, 0x_D9, 0x_BF, 0x_14, 0x_21, 0x_FE, 0x_B0, 0x_CB, 0x_A8, 0x_21, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_7A, 0x_F5, 0x_4D, 0x_A8, 0x_BF, 0x_CA, 0x_55, 0x_21, 0x_D2, 0x_66, 0x_62, 0x_14, 0x_B0, 0x_AF,
		0x_CB, 0x_4C, 0x_92, 0x_D9,
	];

	helper(S, BASE, -25_016_814);
}
// endregion
// region: s_has_signs_and_minus_723_815_032_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_723_815_032_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_50, 0x_83,
		0x_C4, 0x_C1, 0x_9B, 0x_50, 0x_29, 0x_0A, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_C1, 0x_CC, 0x_76, 0x_56, 0x_87, 0x_C4, 0x_83, 0x_2F, 0x_B4, 0x_6C, 0x_31, 0x_28, 0x_9C, 0x_9B,
		0x_50, 0x_8D, 0x_68, 0x_66,
	];

	helper(S, BASE, -723_815_032);
}
// endregion
// region: s_has_signs_and_minus_6_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_6_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_CF, 0x_85, 0x_18, 0x_14,
		0x_47, 0x_D1, 0x_D9, 0x_14, 0x_C7, 0x_10, 0x_56, 0x_56, 0x_EE, 0x_55, 0x_84, 0x_10, 0x_10, 0x_1B, 0x_18,
		0x_14, 0x_1B, 0x_E8, 0x_1C, 0x_44, 0x_1C, 0x_75, 0x_18, 0x_E8, 0x_EE, 0x_84, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_35, 0x_D1, 0x_AF, 0x_75, 0x_E4, 0x_CF, 0x_88, 0x_55, 0x_56, 0x_E8, 0x_3B, 0x_4E, 0x_84, 0x_EF,
		0x_44, 0x_11, 0x_18, 0x_14, 0x_5F, 0x_1C, 0x_B6, 0x_47, 0x_32, 0x_41, 0x_1B, 0x_9B, 0x_DC, 0x_C7, 0x_45,
		0x_9E, 0x_A3, 0x_E1, 0x_DA, 0x_10, 0x_B7, 0x_EE, 0x_A8, 0x_D4, 0x_48, 0x_CC, 0x_D9,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_signs_and_minus_38_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_38_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_C3, 0x_DE, 0x_F2, 0x_1B, 0x_07, 0x_50, 0x_77, 0x_12, 0x_19,
		0x_07, 0x_FA, 0x_F7, 0x_78, 0x_07, 0x_7A, 0x_80, 0x_FA, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_60, 0x_D6, 0x_07, 0x_03, 0x_4F, 0x_D5, 0x_8D, 0x_19, 0x_52, 0x_80, 0x_7A, 0x_C2, 0x_12, 0x_D9,
		0x_06, 0x_43, 0x_C7, 0x_F2, 0x_82, 0x_6E, 0x_9B, 0x_1B, 0x_9A, 0x_E8, 0x_77, 0x_DC, 0x_62, 0x_F7, 0x_63,
		0x_50, 0x_8C, 0x_D1, 0x_7E, 0x_FD, 0x_11, 0x_32, 0x_78, 0x_C3, 0x_FA, 0x_30, 0x_B9,
	];

	helper(S, BASE, -38);
}
// endregion
// region: s_has_signs_and_minus_988_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_988_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_B7, 0x_98, 0x_31, 0x_9A, 0x_A7, 0x_98, 0x_4C, 0x_9C, 0x_D1, 0x_19, 0x_86, 0x_E8, 0x_A7, 0x_CA,
		0x_8F, 0x_CA, 0x_56, 0x_D8, 0x_BB, 0x_56, 0x_BE, 0x_19, 0x_F9, 0x_F1, 0x_F9, 0x_9C, 0x_3D, 0x_4C, 0x_B4,
		0x_DB, 0x_CA, 0x_3D, 0x_F1, 0x_4E, 0x_A9, 0x_FB, 0x_44, 0x_A7,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_D1, 0x_EF, 0x_CA, 0x_15, 0x_3D, 0x_FB, 0x_44, 0x_BE, 0x_86, 0x_9A, 0x_A9, 0x_E8, 0x_A8, 0x_4E,
		0x_4C, 0x_83, 0x_17, 0x_35, 0x_9C, 0x_F9, 0x_56, 0x_98, 0x_B7, 0x_F1, 0x_D7, 0x_D8, 0x_95, 0x_B4, 0x_DB,
		0x_AD, 0x_3B, 0x_12, 0x_19, 0x_1D, 0x_65, 0x_13, 0x_1F, 0x_82, 0x_8F, 0x_A7, 0x_BB,
	];

	helper(S, BASE, -988);
}
// endregion
// region: s_has_signs_and_minus_6_331_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_6_331_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_1F, 0x_3D, 0x_49, 0x_FA, 0x_E9, 0x_E9,
		0x_9B, 0x_3D, 0x_3D, 0x_56, 0x_07, 0x_D0, 0x_1F, 0x_DD, 0x_30, 0x_3D, 0x_57, 0x_85, 0x_1A, 0x_1A, 0x_5B,
		0x_F8, 0x_9D, 0x_1A, 0x_A2, 0x_82, 0x_6F, 0x_71, 0x_C3, 0x_D5, 0x_38, 0x_53, 0x_D0, 0x_1D, 0x_30, 0x_9B,
		0x_41, 0x_6F, 0x_DA, 0x_83, 0x_C3, 0x_70, 0x_85,
	];
	const BASE: &[u8] = &[
		0x_A2, 0x_1A, 0x_D5, 0x_1F, 0x_DA, 0x_57, 0x_46, 0x_7D, 0x_82, 0x_D2, 0x_38, 0x_5B, 0x_07, 0x_F4, 0x_85,
		0x_6F, 0x_70, 0x_DD, 0x_53, 0x_E4, 0x_30, 0x_C3, 0x_71, 0x_48, 0x_3D, 0x_83, 0x_4A, 0x_1D, 0x_E9, 0x_F2,
		0x_86, 0x_49, 0x_74, 0x_32, 0x_CB, 0x_F8, 0x_41, 0x_92, 0x_9B, 0x_9D, 0x_56, 0x_D0,
	];

	helper(S, BASE, -6_331);
}
// endregion
// region: s_has_signs_and_minus_55_665_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_55_665_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_28, 0x_41, 0x_3C, 0x_5C, 0x_D2, 0x_E2, 0x_EE, 0x_3C, 0x_41, 0x_72, 0x_29, 0x_60, 0x_61,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_47, 0x_6C, 0x_1B, 0x_70, 0x_BB, 0x_C3, 0x_BA, 0x_B1, 0x_A3, 0x_E2, 0x_17, 0x_72, 0x_F8, 0x_FA,
		0x_3C, 0x_56, 0x_75, 0x_EE, 0x_F1, 0x_C8, 0x_60, 0x_19, 0x_41, 0x_9E, 0x_94, 0x_E0, 0x_61, 0x_B9, 0x_89,
		0x_FC, 0x_28, 0x_C9, 0x_21, 0x_86, 0x_42, 0x_DE, 0x_66, 0x_3A, 0x_97, 0x_29, 0x_D2,
	];

	helper(S, BASE, -55_665);
}
// endregion
// region: s_has_signs_and_minus_752_861_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_752_861_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_54, 0x_9C, 0x_6A, 0x_3A, 0x_6B, 0x_BD, 0x_D4, 0x_9F, 0x_49, 0x_12,
		0x_90, 0x_5C, 0x_DF, 0x_5C, 0x_BD, 0x_BA, 0x_9F, 0x_54, 0x_60, 0x_3A, 0x_07, 0x_D4, 0x_03, 0x_60, 0x_9D,
		0x_90, 0x_FA, 0x_D0, 0x_BF, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_5B, 0x_B7, 0x_2F, 0x_D4, 0x_FA, 0x_9C, 0x_93, 0x_9F, 0x_DF, 0x_54, 0x_3A, 0x_BF, 0x_6E, 0x_E4,
		0x_F1, 0x_03, 0x_9E, 0x_49, 0x_12, 0x_62, 0x_9D, 0x_B4, 0x_EA, 0x_D0, 0x_60, 0x_5D, 0x_BD, 0x_52, 0x_57,
		0x_3E, 0x_BE, 0x_90, 0x_6A, 0x_CB, 0x_50, 0x_8B, 0x_07, 0x_14, 0x_5C, 0x_80, 0x_BA,
	];

	helper(S, BASE, -752_861);
}
// endregion
// region: s_has_signs_and_minus_5_550_959_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_5_550_959_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_32, 0x_96, 0x_B7, 0x_74, 0x_76, 0x_44, 0x_07,
		0x_2E, 0x_E0, 0x_80, 0x_74, 0x_F2, 0x_B0, 0x_79, 0x_79, 0x_D1, 0x_E5, 0x_FF, 0x_D6, 0x_06, 0x_96, 0x_D1,
		0x_E5, 0x_45, 0x_71, 0x_1F, 0x_96, 0x_74, 0x_45, 0x_FF, 0x_E0, 0x_B0, 0x_D4, 0x_1F, 0x_E5, 0x_7C, 0x_D1,
		0x_79, 0x_32, 0x_B7, 0x_3F, 0x_E7, 0x_32, 0x_7C, 0x_7C, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_F3, 0x_32, 0x_D2, 0x_29, 0x_80, 0x_03, 0x_E7, 0x_93, 0x_01, 0x_41, 0x_D4, 0x_D3, 0x_06, 0x_F2, 0x_AA,
		0x_7C, 0x_4E, 0x_E5, 0x_71, 0x_B0, 0x_07, 0x_04, 0x_05, 0x_D1, 0x_2E, 0x_45, 0x_FF, 0x_A7, 0x_62, 0x_76,
		0x_1F, 0x_A0, 0x_96, 0x_74, 0x_3F, 0x_77, 0x_79, 0x_5B, 0x_B7, 0x_E0, 0x_D6, 0x_F8,
	];

	helper(S, BASE, -5_550_959);
}
// endregion
// region: s_has_signs_and_minus_55_827_391_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_55_827_391_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_68, 0x_B9, 0x_7C, 0x_D4, 0x_88, 0x_21, 0x_5D, 0x_99, 0x_49,
		0x_51, 0x_D5, 0x_39, 0x_45, 0x_DB, 0x_59, 0x_BF, 0x_45, 0x_99,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_8B, 0x_4F, 0x_A6, 0x_BF, 0x_07, 0x_FB, 0x_D4, 0x_5D, 0x_39, 0x_59, 0x_69, 0x_1A, 0x_75, 0x_55,
		0x_6B, 0x_66, 0x_68, 0x_02, 0x_19, 0x_C3, 0x_51, 0x_7C, 0x_45, 0x_C4, 0x_88, 0x_48, 0x_ED, 0x_9E, 0x_FA,
		0x_87, 0x_BA, 0x_2E, 0x_49, 0x_BD, 0x_B8, 0x_DB, 0x_D5, 0x_1B, 0x_B9, 0x_80, 0x_E9,
	];

	helper(S, BASE, -55_827_391);
}
// endregion
// region: s_has_signs_and_minus_549_686_095_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_549_686_095_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_05, 0x_38, 0x_C7, 0x_90,
		0x_32, 0x_AC, 0x_F1, 0x_87, 0x_E6, 0x_37, 0x_10, 0x_03, 0x_5E, 0x_83, 0x_87, 0x_51, 0x_52, 0x_4F, 0x_05,
		0x_85, 0x_FA, 0x_10, 0x_2A, 0x_92, 0x_D9, 0x_C5, 0x_38, 0x_CC, 0x_32, 0x_2F, 0x_C7, 0x_10, 0x_3B, 0x_90,
		0x_14, 0x_51, 0x_32, 0x_C5, 0x_37, 0x_2A, 0x_C7, 0x_14, 0x_C6, 0x_D9, 0x_CC, 0x_FC, 0x_C7,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_A9, 0x_53, 0x_B8, 0x_05, 0x_9E, 0x_FA, 0x_AC, 0x_38, 0x_37, 0x_87, 0x_E6, 0x_83, 0x_C5, 0x_8B,
		0x_90, 0x_3B, 0x_C6, 0x_32, 0x_51, 0x_40, 0x_14, 0x_BD, 0x_B0, 0x_2A, 0x_63, 0x_FC, 0x_C7, 0x_10, 0x_52,
		0x_4F, 0x_2F, 0x_85, 0x_5E, 0x_CC, 0x_49, 0x_92, 0x_88, 0x_8D, 0x_03, 0x_DB, 0x_B4,
	];

	helper(S, BASE, -549_686_095);
}
// endregion
// region: s_has_signs_and_minus_7_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_7_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_04, 0x_4B, 0x_3E, 0x_7D, 0x_C7, 0x_B0, 0x_45, 0x_68, 0x_5F, 0x_4D, 0x_40, 0x_BE, 0x_1E,
		0x_D6, 0x_4D, 0x_F7, 0x_16, 0x_4A, 0x_C0, 0x_2F, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_5D, 0x_7D, 0x_C7, 0x_E6, 0x_32, 0x_C4, 0x_04, 0x_E7, 0x_4C, 0x_B8, 0x_FD, 0x_06, 0x_A8, 0x_D5,
		0x_A4, 0x_91, 0x_45, 0x_BE, 0x_95, 0x_AC, 0x_68, 0x_07, 0x_86, 0x_9E, 0x_4A, 0x_D6, 0x_3B, 0x_92, 0x_3E,
		0x_8F, 0x_4D, 0x_C0, 0x_BC, 0x_D3, 0x_A1, 0x_AA, 0x_D2, 0x_F1, 0x_27, 0x_FF, 0x_5F, 0x_72, 0x_DE, 0x_F0,
		0x_DB, 0x_F7, 0x_16, 0x_29, 0x_B0, 0x_23, 0x_69, 0x_1A, 0x_FE, 0x_1E, 0x_F4, 0x_2F, 0x_5B, 0x_56, 0x_B5,
		0x_87, 0x_A0, 0x_3F, 0x_40, 0x_ED, 0x_4F, 0x_62, 0x_B7, 0x_70, 0x_24, 0x_8D, 0x_52, 0x_EC,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_signs_and_minus_24_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_24_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_31, 0x_C2, 0x_5A, 0x_FE,
		0x_16, 0x_34, 0x_44, 0x_5B, 0x_67, 0x_F4, 0x_33, 0x_D6, 0x_FD, 0x_D6, 0x_E1, 0x_5A, 0x_0E,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_14, 0x_5C, 0x_FD, 0x_28, 0x_19, 0x_5B, 0x_26, 0x_2F, 0x_5E, 0x_56, 0x_A9, 0x_9E, 0x_E0, 0x_16,
		0x_74, 0x_F4, 0x_51, 0x_97, 0x_4A, 0x_75, 0x_7C, 0x_93, 0x_6B, 0x_31, 0x_BE, 0x_82, 0x_D6, 0x_CA, 0x_38,
		0x_E1, 0x_CC, 0x_58, 0x_68, 0x_63, 0x_81, 0x_D0, 0x_44, 0x_A2, 0x_B4, 0x_88, 0x_CD, 0x_46, 0x_34, 0x_5A,
		0x_7F, 0x_BA, 0x_9D, 0x_57, 0x_DC, 0x_AC, 0x_B0, 0x_21, 0x_33, 0x_C7, 0x_70, 0x_E5, 0x_30, 0x_67, 0x_61,
		0x_B7, 0x_1B, 0x_87, 0x_FE, 0x_D1, 0x_25, 0x_C0, 0x_6C, 0x_D3, 0x_90, 0x_ED, 0x_BB, 0x_0E,
	];

	helper(S, BASE, -24);
}
// endregion
// region: s_has_signs_and_minus_138_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_138_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_80,
		0x_21, 0x_0A, 0x_76, 0x_A9, 0x_8A, 0x_B0, 0x_8A, 0x_21, 0x_81, 0x_3B, 0x_8F, 0x_74, 0x_30, 0x_5E, 0x_8F,
		0x_76, 0x_F7, 0x_65, 0x_B0, 0x_BC, 0x_81, 0x_B7, 0x_85, 0x_A9, 0x_61, 0x_88, 0x_BA, 0x_53, 0x_7B, 0x_01,
		0x_30, 0x_21, 0x_3B, 0x_94, 0x_CB, 0x_B7, 0x_F3, 0x_B7, 0x_22, 0x_B0, 0x_0E,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_80, 0x_A9, 0x_30, 0x_CD, 0x_C4, 0x_7D, 0x_F7, 0x_1A, 0x_9A, 0x_B1, 0x_44, 0x_60, 0x_BC, 0x_B6,
		0x_01, 0x_B5, 0x_B7, 0x_94, 0x_4E, 0x_DD, 0x_B0, 0x_E7, 0x_9C, 0x_7B, 0x_88, 0x_5C, 0x_82, 0x_DF, 0x_71,
		0x_26, 0x_AD, 0x_53, 0x_E3, 0x_76, 0x_D3, 0x_18, 0x_4F, 0x_B2, 0x_4D, 0x_8A, 0x_10, 0x_72, 0x_08, 0x_BA,
		0x_29, 0x_A8, 0x_8D, 0x_41, 0x_4C, 0x_8C, 0x_22, 0x_75, 0x_D4, 0x_34, 0x_5E, 0x_3B, 0x_62, 0x_5A, 0x_85,
		0x_31, 0x_8F, 0x_D2, 0x_CB, 0x_F8, 0x_21, 0x_0E, 0x_65, 0x_F3, 0x_BB, 0x_74, 0x_81, 0x_ED,
	];

	helper(S, BASE, -138);
}
// endregion
// region: s_has_signs_and_minus_2_353_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_2_353_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_33, 0x_3E, 0x_98, 0x_C7, 0x_8A, 0x_9D, 0x_1E, 0x_66, 0x_D2,
		0x_5C, 0x_42, 0x_3E, 0x_FF, 0x_41, 0x_7A, 0x_96, 0x_21, 0x_76, 0x_7C, 0x_D3, 0x_32, 0x_D5, 0x_38, 0x_7A,
		0x_34, 0x_54, 0x_13, 0x_FD, 0x_FC, 0x_4C, 0x_9E, 0x_A3, 0x_D5, 0x_F5, 0x_7A, 0x_34, 0x_9D, 0x_5C, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_34, 0x_9D, 0x_1E, 0x_B7, 0x_3F, 0x_42, 0x_87, 0x_DD, 0x_58, 0x_82, 0x_A3, 0x_21, 0x_4C, 0x_02,
		0x_5E, 0x_FB, 0x_3E, 0x_1C, 0x_E0, 0x_F9, 0x_D2, 0x_5C, 0x_D3, 0x_1F, 0x_FF, 0x_11, 0x_66, 0x_A5, 0x_BE,
		0x_13, 0x_25, 0x_33, 0x_6E, 0x_67, 0x_7C, 0x_32, 0x_27, 0x_9E, 0x_A9, 0x_49, 0x_2F, 0x_57, 0x_5B, 0x_FA,
		0x_FD, 0x_B3, 0x_CA, 0x_7A, 0x_8A, 0x_96, 0x_38, 0x_50, 0x_45, 0x_76, 0x_74, 0x_06, 0x_E7, 0x_A6, 0x_26,
		0x_41, 0x_59, 0x_D5, 0x_C0, 0x_D0, 0x_54, 0x_40, 0x_ED, 0x_90, 0x_E5, 0x_FC, 0x_C7, 0x_F5,
	];

	helper(S, BASE, -2_353);
}
// endregion
// region: s_has_signs_and_minus_27_677_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_27_677_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_EA, 0x_F6, 0x_27, 0x_AF, 0x_B2, 0x_36,
		0x_34, 0x_8E, 0x_8E, 0x_B8, 0x_D0, 0x_F6, 0x_D0, 0x_F0, 0x_C4, 0x_EC, 0x_AB, 0x_F0, 0x_F5, 0x_A7, 0x_A7,
		0x_BC, 0x_A5, 0x_61, 0x_BC, 0x_7B, 0x_06, 0x_34, 0x_84, 0x_27, 0x_EA, 0x_F0, 0x_06, 0x_AB, 0x_EC, 0x_F4,
		0x_CD, 0x_5E, 0x_F1, 0x_AB, 0x_D0, 0x_26, 0x_5E, 0x_12, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_12, 0x_29, 0x_5E, 0x_EC, 0x_EA, 0x_84, 0x_C2, 0x_DF, 0x_E7, 0x_27, 0x_39, 0x_EB, 0x_DD, 0x_F6,
		0x_B2, 0x_8C, 0x_B8, 0x_5F, 0x_82, 0x_C5, 0x_06, 0x_9C, 0x_4A, 0x_0E, 0x_36, 0x_8E, 0x_56, 0x_72, 0x_37,
		0x_7A, 0x_E4, 0x_BC, 0x_31, 0x_F4, 0x_3C, 0x_FE, 0x_7B, 0x_D9, 0x_69, 0x_30, 0x_D6, 0x_34, 0x_86, 0x_CD,
		0x_61, 0x_1E, 0x_AB, 0x_7D, 0x_59, 0x_58, 0x_A7, 0x_8D, 0x_C4, 0x_7F, 0x_F0, 0x_E8, 0x_26, 0x_41, 0x_AC,
		0x_3B, 0x_79, 0x_D0, 0x_6D, 0x_47, 0x_A6, 0x_F1, 0x_E3, 0x_46, 0x_8B, 0x_F5, 0x_A5, 0x_70,
	];

	helper(S, BASE, -27_677);
}
// endregion
// region: s_has_signs_and_minus_942_202_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_942_202_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_A2, 0x_E1, 0x_EA, 0x_67, 0x_88, 0x_E6, 0x_EA, 0x_4B, 0x_91, 0x_4E, 0x_C2,
		0x_C1, 0x_E1, 0x_87, 0x_BD, 0x_C2, 0x_68, 0x_1C, 0x_D4, 0x_6D, 0x_A0, 0x_1F, 0x_C9, 0x_82, 0x_C8, 0x_8A,
		0x_C2, 0x_FD, 0x_23, 0x_5A, 0x_C9, 0x_3E, 0x_FA, 0x_C2, 0x_BD, 0x_BD, 0x_1F, 0x_EA, 0x_9E, 0x_BD, 0x_55,
		0x_F1, 0x_8E, 0x_02, 0x_6A, 0x_DC, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_FB, 0x_A2, 0x_23, 0x_18, 0x_1A, 0x_AC, 0x_DC, 0x_E6, 0x_37, 0x_F5, 0x_DF, 0x_13, 0x_82, 0x_F2,
		0x_C8, 0x_46, 0x_F1, 0x_E4, 0x_A0, 0x_7E, 0x_D4, 0x_AE, 0x_9C, 0x_C1, 0x_CB, 0x_3E, 0x_66, 0x_DD, 0x_5A,
		0x_E1, 0x_91, 0x_D8, 0x_87, 0x_83, 0x_6A, 0x_1F, 0x_53, 0x_8A, 0x_B5, 0x_FA, 0x_4B, 0x_71, 0x_1C, 0x_4E,
		0x_3B, 0x_68, 0x_F9, 0x_22, 0x_48, 0x_C2, 0x_01, 0x_3D, 0x_CF, 0x_FD, 0x_04, 0x_AF, 0x_C9, 0x_EA, 0x_CA,
		0x_D2, 0x_21, 0x_B1, 0x_55, 0x_67, 0x_AD, 0x_BD, 0x_11, 0x_02, 0x_8E, 0x_9E, 0x_6D, 0x_60,
	];

	helper(S, BASE, -942_202);
}
// endregion
// region: s_has_signs_and_minus_3_903_242_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_3_903_242_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_8E, 0x_18, 0x_F1, 0x_6E,
		0x_6F, 0x_AF, 0x_3D, 0x_65, 0x_33, 0x_57, 0x_57, 0x_8A, 0x_14, 0x_E5,
	];
	const BASE: &[u8] = &[
		0x_D4, 0x_3C, 0x_18, 0x_B3, 0x_E7, 0x_6E, 0x_F5, 0x_47, 0x_FC, 0x_AB, 0x_8E, 0x_33, 0x_65, 0x_F6, 0x_5F,
		0x_17, 0x_94, 0x_43, 0x_30, 0x_EF, 0x_B5, 0x_95, 0x_4E, 0x_A0, 0x_16, 0x_08, 0x_1D, 0x_1B, 0x_A5, 0x_BA,
		0x_84, 0x_B0, 0x_CD, 0x_F1, 0x_81, 0x_E5, 0x_F3, 0x_12, 0x_60, 0x_57, 0x_5A, 0x_C4, 0x_AC, 0x_DC, 0x_4C,
		0x_3D, 0x_39, 0x_54, 0x_49, 0x_BE, 0x_4F, 0x_B1, 0x_21, 0x_70, 0x_8A, 0x_27, 0x_59, 0x_1F, 0x_6D, 0x_DD,
		0x_72, 0x_AD, 0x_14, 0x_96, 0x_3F, 0x_50, 0x_AF, 0x_A2, 0x_52, 0x_7F, 0x_E4, 0x_69, 0x_E0,
	];

	helper(S, BASE, -3_903_242);
}
// endregion
// region: s_has_signs_and_minus_67_699_345_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_67_699_345_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_85, 0x_BB, 0x_57, 0x_15, 0x_D3, 0x_A1, 0x_85, 0x_87, 0x_F4, 0x_54, 0x_4C, 0x_16,
		0x_69, 0x_C8, 0x_26, 0x_5B, 0x_9C, 0x_15, 0x_54, 0x_CA, 0x_CA, 0x_26, 0x_D4, 0x_17, 0x_54, 0x_37, 0x_FB,
		0x_85, 0x_23, 0x_7D, 0x_9C, 0x_BF,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_57, 0x_85, 0x_54, 0x_98, 0x_4C, 0x_39, 0x_4E, 0x_AC, 0x_BE, 0x_CA, 0x_D9, 0x_7D, 0x_DA, 0x_3E,
		0x_BF, 0x_F2, 0x_CC, 0x_02, 0x_44, 0x_A8, 0x_D3, 0x_BA, 0x_DC, 0x_E0, 0x_B2, 0x_9C, 0x_73, 0x_BB, 0x_AE,
		0x_87, 0x_08, 0x_6F, 0x_DD, 0x_DB, 0x_26, 0x_48, 0x_56, 0x_51, 0x_D4, 0x_50, 0x_14, 0x_70, 0x_A3, 0x_F4,
		0x_37, 0x_C3, 0x_B7, 0x_84, 0x_77, 0x_0E, 0x_21, 0x_5B, 0x_C7, 0x_23, 0x_A4, 0x_17, 0x_12, 0x_89, 0x_FB,
		0x_38, 0x_16, 0x_90, 0x_69, 0x_7A, 0x_6D, 0x_97, 0x_13, 0x_93, 0x_15, 0x_C8, 0x_8F, 0x_92,
	];

	helper(S, BASE, -67_699_345);
}
// endregion
// region: s_has_signs_and_minus_239_901_958_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_239_901_958_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_39, 0x_07, 0x_CF, 0x_83, 0x_83, 0x_95, 0x_F6, 0x_EB, 0x_65, 0x_17,
		0x_B3, 0x_F6, 0x_BB, 0x_9C, 0x_BA, 0x_74, 0x_1D, 0x_76, 0x_A9, 0x_10, 0x_C0, 0x_39, 0x_C1, 0x_EC, 0x_A0,
		0x_DA, 0x_74, 0x_15, 0x_9C, 0x_33, 0x_38, 0x_07, 0x_6C, 0x_B2, 0x_54, 0x_2E, 0x_B2, 0x_18, 0x_29, 0x_CF,
		0x_A9, 0x_F9, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_05, 0x_C1, 0x_D0, 0x_D2, 0x_65, 0x_6E, 0x_A9, 0x_39, 0x_EB, 0x_74, 0x_60, 0x_82, 0x_22, 0x_83,
		0x_C3, 0x_D8, 0x_79, 0x_7C, 0x_3C, 0x_1E, 0x_5E, 0x_DA, 0x_8B, 0x_D6, 0x_B3, 0x_9C, 0x_A4, 0x_F6, 0x_81,
		0x_15, 0x_76, 0x_07, 0x_CD, 0x_91, 0x_AC, 0x_A0, 0x_EC, 0x_F5, 0x_C0, 0x_18, 0x_E6, 0x_B2, 0x_54, 0x_7F,
		0x_4E, 0x_B9, 0x_87, 0x_B6, 0x_2F, 0x_CF, 0x_F9, 0x_29, 0x_24, 0x_1B, 0x_C7, 0x_2E, 0x_33, 0x_89, 0x_1D,
		0x_17, 0x_DF, 0x_6B, 0x_2C, 0x_D7, 0x_38, 0x_C8, 0x_BA, 0x_10, 0x_97, 0x_E3, 0x_46, 0x_6C,
	];

	helper(S, BASE, -239_901_958);
}
// endregion
// region: s_has_signs_and_minus_6_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_6_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_B3, 0x_7C, 0x_1E, 0x_4A,
		0x_56, 0x_25, 0x_AF, 0x_02, 0x_94, 0x_75, 0x_56, 0x_70, 0x_0F, 0x_F1, 0x_70, 0x_CC, 0x_58, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_5D, 0x_77, 0x_23, 0x_9C, 0x_A9, 0x_B3, 0x_78, 0x_1F, 0x_8A, 0x_F8, 0x_AE, 0x_CF, 0x_1B, 0x_DC,
		0x_84, 0x_CA, 0x_5F, 0x_E1, 0x_2E, 0x_3E, 0x_40, 0x_53, 0x_51, 0x_95, 0x_79, 0x_1D, 0x_86, 0x_5A, 0x_BD,
		0x_03, 0x_F1, 0x_E0, 0x_70, 0x_04, 0x_75, 0x_87, 0x_85, 0x_AA, 0x_66, 0x_C2, 0x_DA, 0x_DE, 0x_4A, 0x_D2,
		0x_50, 0x_71, 0x_25, 0x_0F, 0x_D5, 0x_35, 0x_88, 0x_74, 0x_06, 0x_14, 0x_E7, 0x_F5, 0x_E5, 0x_D8, 0x_9A,
		0x_F3, 0x_49, 0x_A4, 0x_0E, 0x_72, 0x_3F, 0x_62, 0x_57, 0x_13, 0x_CB, 0x_94, 0x_67, 0x_2F, 0x_80, 0x_1E,
		0x_60, 0x_58, 0x_8D, 0x_42, 0x_CC, 0x_02, 0x_15, 0x_F0, 0x_12, 0x_C4, 0x_BF, 0x_C1, 0x_C5, 0x_55, 0x_C9,
		0x_56, 0x_5C, 0x_EE, 0x_63, 0x_59, 0x_31, 0x_D6, 0x_18, 0x_73, 0x_DD, 0x_47, 0x_B2, 0x_9E, 0x_FA, 0x_D9,
		0x_AF, 0x_05, 0x_7F, 0x_F9, 0x_EB, 0x_45, 0x_81, 0x_43,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_signs_and_minus_56_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_56_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_DF, 0x_F0,
		0x_F4, 0x_66, 0x_DC, 0x_A9, 0x_AD, 0x_2A, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_61, 0x_7B, 0x_B2, 0x_79, 0x_32, 0x_DB, 0x_05, 0x_ED, 0x_9A, 0x_1F, 0x_1C, 0x_F7, 0x_63, 0x_BE,
		0x_76, 0x_2A, 0x_65, 0x_74, 0x_8C, 0x_52, 0x_AD, 0x_FE, 0x_19, 0x_BB, 0x_AC, 0x_15, 0x_E3, 0x_F2, 0x_37,
		0x_E1, 0x_CF, 0x_B8, 0x_9F, 0x_F1, 0x_99, 0x_9E, 0x_71, 0x_EF, 0x_A0, 0x_FB, 0x_88, 0x_3D, 0x_3B, 0x_75,
		0x_9D, 0x_42, 0x_B4, 0x_13, 0x_02, 0x_DC, 0x_2C, 0x_AA, 0x_BC, 0x_31, 0x_BF, 0x_DF, 0x_C8, 0x_2F, 0x_C5,
		0x_87, 0x_12, 0x_64, 0x_4A, 0x_F5, 0x_F4, 0x_6A, 0x_92, 0x_3F, 0x_67, 0x_7D, 0x_86, 0x_16, 0x_CA, 0x_8B,
		0x_A4, 0x_85, 0x_EE, 0x_72, 0x_90, 0x_A9, 0x_1E, 0x_44, 0x_5D, 0x_5A, 0x_84, 0x_10, 0x_EA, 0x_41, 0x_B1,
		0x_C9, 0x_6F, 0x_66, 0x_8A, 0x_3A, 0x_E0, 0x_8D, 0x_50, 0x_A6, 0x_E4, 0x_7A, 0x_D3, 0x_F6, 0x_DD, 0x_E9,
		0x_29, 0x_C1, 0x_94, 0x_56, 0x_AF, 0x_91, 0x_D6, 0x_95,
	];

	helper(S, BASE, -56);
}
// endregion
// region: s_has_signs_and_minus_410_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_410_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_98, 0x_1D, 0x_77, 0x_BD, 0x_E2, 0x_12,
		0x_D2, 0x_6F, 0x_07, 0x_7F, 0x_47, 0x_36, 0x_D2, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_54, 0x_DD, 0x_98, 0x_F4, 0x_27, 0x_9F, 0x_BF, 0x_14, 0x_F3, 0x_B2, 0x_72, 0x_36, 0x_B4, 0x_5D,
		0x_B3, 0x_81, 0x_4F, 0x_B8, 0x_C1, 0x_8E, 0x_B6, 0x_A6, 0x_8D, 0x_FC, 0x_88, 0x_1C, 0x_AF, 0x_C4, 0x_D0,
		0x_26, 0x_05, 0x_E5, 0x_13, 0x_7B, 0x_69, 0x_C8, 0x_73, 0x_5A, 0x_11, 0x_1F, 0x_E1, 0x_40, 0x_07, 0x_79,
		0x_FB, 0x_95, 0x_C7, 0x_5E, 0x_66, 0x_A7, 0x_67, 0x_42, 0x_44, 0x_FA, 0x_4C, 0x_B7, 0x_E8, 0x_10, 0x_E7,
		0x_6F, 0x_74, 0x_3D, 0x_F7, 0x_A5, 0x_92, 0x_F9, 0x_82, 0x_7F, 0x_F8, 0x_80, 0x_1D, 0x_E3, 0x_5C, 0x_61,
		0x_3A, 0x_17, 0x_CC, 0x_D8, 0x_55, 0x_F2, 0x_45, 0x_3B, 0x_04, 0x_DE, 0x_EB, 0x_41, 0x_39, 0x_9E, 0x_EA,
		0x_08, 0x_7D, 0x_C5, 0x_78, 0x_3C, 0x_D3, 0x_BD, 0x_AE, 0x_E2, 0x_31, 0x_D2, 0x_2A, 0x_CE, 0x_02, 0x_47,
		0x_83, 0x_12, 0x_AA, 0x_A0, 0x_BE, 0x_65, 0x_C3, 0x_B0,
	];

	helper(S, BASE, -410);
}
// endregion
// region: s_has_signs_and_minus_5_023_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_5_023_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_1F, 0x_CD, 0x_35, 0x_24, 0x_84, 0x_1B, 0x_5A, 0x_4E, 0x_1F, 0x_7E, 0x_88,
		0x_77, 0x_50, 0x_82, 0x_DB, 0x_22, 0x_77, 0x_07, 0x_EF, 0x_19, 0x_B4, 0x_AF, 0x_88, 0x_F3, 0x_B6, 0x_E6,
		0x_82, 0x_1E, 0x_11, 0x_B8, 0x_E3, 0x_33, 0x_50, 0x_8C, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_05, 0x_46, 0x_9E, 0x_F1, 0x_45, 0x_75, 0x_B8, 0x_59, 0x_8E, 0x_08, 0x_DD, 0x_8C, 0x_BA, 0x_19,
		0x_8F, 0x_A6, 0x_66, 0x_92, 0x_3C, 0x_BE, 0x_2A, 0x_57, 0x_33, 0x_04, 0x_5A, 0x_E4, 0x_86, 0x_9F, 0x_FE,
		0x_61, 0x_F4, 0x_34, 0x_81, 0x_79, 0x_D4, 0x_39, 0x_32, 0x_D6, 0x_A8, 0x_27, 0x_94, 0x_8D, 0x_E3, 0x_1F,
		0x_C1, 0x_D2, 0x_C6, 0x_DB, 0x_84, 0x_7E, 0x_CD, 0x_E6, 0x_53, 0x_77, 0x_C3, 0x_C5, 0x_95, 0x_D0, 0x_8A,
		0x_21, 0x_49, 0x_B4, 0x_12, 0x_C2, 0x_5D, 0x_43, 0x_02, 0x_1B, 0x_88, 0x_A9, 0x_93, 0x_82, 0x_50, 0x_28,
		0x_4E, 0x_3A, 0x_72, 0x_24, 0x_7B, 0x_51, 0x_BF, 0x_6E, 0x_11, 0x_07, 0x_EF, 0x_DC, 0x_65, 0x_67, 0x_9A,
		0x_69, 0x_42, 0x_26, 0x_2E, 0x_0E, 0x_EA, 0x_AB, 0x_1E, 0x_BD, 0x_4D, 0x_7A, 0x_73, 0x_F2, 0x_22, 0x_F3,
		0x_C8, 0x_C4, 0x_ED, 0x_B6, 0x_90, 0x_62, 0x_01, 0x_AF,
	];

	helper(S, BASE, -5_023);
}
// endregion
// region: s_has_signs_and_minus_31_480_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_31_480_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_E6, 0x_A8,
		0x_D1, 0x_64, 0x_72, 0x_DF, 0x_CF, 0x_C0, 0x_54, 0x_58, 0x_99, 0x_71, 0x_89, 0x_45, 0x_1C, 0x_4D, 0x_73,
		0x_E6, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_70, 0x_57, 0x_E6, 0x_AB, 0x_0E, 0x_C9, 0x_77, 0x_2E, 0x_22, 0x_B2, 0x_36, 0x_74, 0x_D8, 0x_A3, 0x_58,
		0x_16, 0x_A5, 0x_27, 0x_E4, 0x_E5, 0x_DE, 0x_6F, 0x_A6, 0x_BF, 0x_DF, 0x_63, 0x_CF, 0x_69, 0x_C8, 0x_54,
		0x_B9, 0x_5B, 0x_B3, 0x_D2, 0x_0F, 0x_C1, 0x_AA, 0x_9C, 0x_51, 0x_30, 0x_B1, 0x_3D, 0x_A7, 0x_05, 0x_11,
		0x_72, 0x_81, 0x_60, 0x_33, 0x_94, 0x_78, 0x_A4, 0x_A8, 0x_E3, 0x_D0, 0x_61, 0x_4E, 0x_DB, 0x_3F, 0x_AE,
		0x_06, 0x_71, 0x_AF, 0x_41, 0x_C3, 0x_EF, 0x_D1, 0x_3B, 0x_88, 0x_7D, 0x_6A, 0x_FF, 0x_45, 0x_4D, 0x_A9,
		0x_D3, 0x_B0, 0x_73, 0x_5D, 0x_40, 0x_38, 0x_82, 0x_80, 0x_99, 0x_EE, 0x_C4, 0x_65, 0x_CD, 0x_B6, 0x_02,
		0x_1D, 0x_C5, 0x_C7, 0x_4C, 0x_28, 0x_C6, 0x_1C, 0x_F2, 0x_AD, 0x_A0, 0x_34, 0x_93, 0x_E7, 0x_1F, 0x_C0,
		0x_DD, 0x_F8, 0x_18, 0x_19, 0x_29, 0x_89, 0x_BB, 0x_97,
	];

	helper(S, BASE, -31_480);
}
// endregion
// region: s_has_signs_and_minus_483_048_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_483_048_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_C4, 0x_E7, 0x_55, 0x_AC, 0x_5E, 0x_47, 0x_B8, 0x_90, 0x_F5, 0x_B8, 0x_53, 0x_DF, 0x_CE,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_3A, 0x_5B, 0x_F8, 0x_F9, 0x_EC, 0x_14, 0x_D7, 0x_64, 0x_95, 0x_29, 0x_ED, 0x_B2, 0x_EE, 0x_03,
		0x_9C, 0x_1B, 0x_12, 0x_BF, 0x_A7, 0x_B8, 0x_6A, 0x_82, 0x_D6, 0x_21, 0x_6B, 0x_C1, 0x_77, 0x_4C, 0x_D2,
		0x_48, 0x_CE, 0x_BB, 0x_FE, 0x_E2, 0x_7D, 0x_1D, 0x_C4, 0x_67, 0x_07, 0x_C6, 0x_DF, 0x_90, 0x_96, 0x_6F,
		0x_42, 0x_02, 0x_81, 0x_C9, 0x_B9, 0x_18, 0x_72, 0x_41, 0x_AB, 0x_E0, 0x_86, 0x_7B, 0x_AD, 0x_E4, 0x_5A,
		0x_1E, 0x_CF, 0x_F5, 0x_47, 0x_65, 0x_73, 0x_13, 0x_6C, 0x_10, 0x_8A, 0x_C0, 0x_A9, 0x_DE, 0x_E9, 0x_E5,
		0x_32, 0x_85, 0x_68, 0x_A5, 0x_F7, 0x_44, 0x_D9, 0x_7A, 0x_3F, 0x_F3, 0x_75, 0x_55, 0x_69, 0x_8D, 0x_61,
		0x_36, 0x_39, 0x_0F, 0x_E7, 0x_97, 0x_01, 0x_22, 0x_0E, 0x_31, 0x_37, 0x_49, 0x_53, 0x_40, 0x_3E, 0x_4F,
		0x_5E, 0x_2A, 0x_9B, 0x_DA, 0x_D8, 0x_2E, 0x_76, 0x_28,
	];

	helper(S, BASE, -483_048);
}
// endregion
// region: s_has_signs_and_minus_8_298_345_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_8_298_345_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_36, 0x_E3, 0x_F8, 0x_B5,
		0x_3A, 0x_F0, 0x_D7, 0x_5F, 0x_48, 0x_4D, 0x_EB, 0x_82, 0x_05, 0x_CE, 0x_C2, 0x_2E, 0x_CE, 0x_EC, 0x_A8,
		0x_0F,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_F2, 0x_96, 0x_EE, 0x_23, 0x_36, 0x_81, 0x_DD, 0x_EA, 0x_F5, 0x_CF, 0x_61, 0x_9E, 0x_BE, 0x_D7,
		0x_8A, 0x_35, 0x_C0, 0x_66, 0x_CA, 0x_63, 0x_05, 0x_16, 0x_78, 0x_32, 0x_9A, 0x_B4, 0x_AA, 0x_F9, 0x_79,
		0x_F1, 0x_01, 0x_A1, 0x_E6, 0x_80, 0x_B2, 0x_4B, 0x_4D, 0x_89, 0x_E0, 0x_27, 0x_A3, 0x_B0, 0x_E4, 0x_F4,
		0x_5A, 0x_BD, 0x_A9, 0x_0F, 0x_1D, 0x_88, 0x_38, 0x_82, 0x_7C, 0x_E8, 0x_FE, 0x_FF, 0x_14, 0x_A8, 0x_5F,
		0x_BC, 0x_25, 0x_EF, 0x_AD, 0x_18, 0x_68, 0x_59, 0x_CE, 0x_50, 0x_24, 0x_DF, 0x_5C, 0x_A2, 0x_EC, 0x_AC,
		0x_37, 0x_2E, 0x_B5, 0x_91, 0x_D9, 0x_43, 0x_57, 0x_6A, 0x_E1, 0x_E3, 0x_DC, 0x_2F, 0x_4A, 0x_07, 0x_BF,
		0x_2A, 0x_94, 0x_48, 0x_C9, 0x_45, 0x_E5, 0x_9D, 0x_34, 0x_D4, 0x_F8, 0x_FA, 0x_F0, 0x_EB, 0x_62, 0x_8D,
		0x_3B, 0x_33, 0x_C2, 0x_C1, 0x_C7, 0x_4C, 0x_E9, 0x_5E,
	];

	helper(S, BASE, -8_298_345);
}
// endregion
// region: s_has_signs_and_minus_39_220_154_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_39_220_154_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_C3, 0x_9A, 0x_F3, 0x_6E,
		0x_53, 0x_AC, 0x_B0, 0x_82, 0x_D0, 0x_03, 0x_EE, 0x_32, 0x_1A, 0x_BF, 0x_AD, 0x_31, 0x_D6, 0x_A1, 0x_B5,
		0x_8E, 0x_A1, 0x_7A, 0x_59, 0x_92, 0x_6B, 0x_60, 0x_5A, 0x_5B, 0x_9D, 0x_7A,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_6E, 0x_77, 0x_BB, 0x_59, 0x_60, 0x_AF, 0x_BA, 0x_7B, 0x_D3, 0x_5E, 0x_C4, 0x_8C, 0x_71, 0x_8F,
		0x_31, 0x_4D, 0x_A9, 0x_AA, 0x_85, 0x_9A, 0x_56, 0x_DA, 0x_A7, 0x_8E, 0x_D6, 0x_B6, 0x_C3, 0x_49, 0x_DF,
		0x_92, 0x_80, 0x_84, 0x_AC, 0x_5A, 0x_D0, 0x_C9, 0x_87, 0x_EA, 0x_29, 0x_EF, 0x_1C, 0x_D9, 0x_47, 0x_2A,
		0x_48, 0x_1A, 0x_FC, 0x_32, 0x_51, 0x_B5, 0x_75, 0x_82, 0x_ED, 0x_1E, 0x_6B, 0x_9D, 0x_41, 0x_F3, 0x_06,
		0x_FE, 0x_C6, 0x_B0, 0x_B1, 0x_67, 0x_B2, 0x_AD, 0x_83, 0x_D7, 0x_F5, 0x_BF, 0x_5D, 0x_50, 0x_0E, 0x_58,
		0x_9C, 0x_4E, 0x_3D, 0x_8A, 0x_B4, 0x_45, 0x_40, 0x_E8, 0x_3B, 0x_4F, 0x_6C, 0x_15, 0x_10, 0x_A6, 0x_7A,
		0x_03, 0x_DC, 0x_A5, 0x_7C, 0x_A1, 0x_9F, 0x_88, 0x_CB, 0x_9B, 0x_57, 0x_C0, 0x_89, 0x_EE, 0x_33, 0x_93,
		0x_BC, 0x_2C, 0x_EC, 0x_72, 0x_24, 0x_5B, 0x_8B, 0x_3E,
	];

	helper(S, BASE, -39_220_154);
}
// endregion
// region: s_has_signs_and_minus_745_970_046_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_745_970_046_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_9D, 0x_66, 0x_F4, 0x_ED, 0x_FA, 0x_91, 0x_3B,
		0x_75, 0x_49, 0x_6A, 0x_04, 0x_ED, 0x_DD, 0x_ED, 0x_5B, 0x_FB, 0x_3B, 0x_4E, 0x_9B, 0x_35, 0x_FA, 0x_6C,
		0x_39, 0x_E4, 0x_59, 0x_FE, 0x_DF, 0x_ED, 0x_92, 0x_9D, 0x_05, 0x_35, 0x_6E, 0x_6C, 0x_1E, 0x_C2, 0x_B9,
		0x_27, 0x_E4, 0x_9D, 0x_73, 0x_9B, 0x_58, 0x_05, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_4A, 0x_55, 0x_CC, 0x_9D, 0x_3E, 0x_EB, 0x_5C, 0x_B0, 0x_4E, 0x_43, 0x_A6, 0x_9B, 0x_75, 0x_06,
		0x_39, 0x_44, 0x_DB, 0x_7A, 0x_A8, 0x_6A, 0x_D9, 0x_6F, 0x_6E, 0x_8C, 0x_3B, 0x_C1, 0x_B1, 0x_1B, 0x_22,
		0x_AD, 0x_97, 0x_69, 0x_4F, 0x_85, 0x_37, 0x_86, 0x_82, 0x_7F, 0x_33, 0x_24, 0x_1F, 0x_05, 0x_30, 0x_ED,
		0x_77, 0x_D0, 0x_62, 0x_34, 0x_78, 0x_FE, 0x_26, 0x_31, 0x_1E, 0x_EF, 0x_2C, 0x_49, 0x_D7, 0x_A7, 0x_F6,
		0x_C2, 0x_89, 0x_EA, 0x_6C, 0x_66, 0x_01, 0x_51, 0x_60, 0x_84, 0x_D4, 0x_1C, 0x_13, 0x_16, 0x_9C, 0x_04,
		0x_B4, 0x_0F, 0x_52, 0x_96, 0x_E4, 0x_02, 0x_A0, 0x_D8, 0x_9F, 0x_6B, 0x_FB, 0x_5A, 0x_DF, 0x_73, 0x_FC,
		0x_DD, 0x_40, 0x_83, 0x_EC, 0x_FA, 0x_E9, 0x_58, 0x_59, 0x_27, 0x_5B, 0x_19, 0x_A2, 0x_0E, 0x_92, 0x_4D,
		0x_15, 0x_17, 0x_DA, 0x_B9, 0x_5D, 0x_2F, 0x_7C, 0x_F4,
	];

	helper(S, BASE, -745_970_046);
}
// endregion
// region: s_has_signs_and_minus_3_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_3_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_79, 0x_9A, 0x_99, 0x_30, 0x_5F, 0x_7A, 0x_2C, 0x_CD, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_D3, 0x_CD, 0x_79, 0x_D0, 0x_ED, 0x_8C, 0x_C7, 0x_75, 0x_19, 0x_F0, 0x_57, 0x_68, 0x_87, 0x_05,
		0x_30, 0x_D5, 0x_5A, 0x_D4, 0x_CC, 0x_4E, 0x_64, 0x_C6, 0x_E5, 0x_10, 0x_D7, 0x_34, 0x_D6, 0x_8D, 0x_8B,
		0x_55, 0x_45, 0x_26, 0x_B6, 0x_61, 0x_44, 0x_E8, 0x_5F, 0x_50, 0x_BF, 0x_38, 0x_EF, 0x_C4, 0x_22, 0x_85,
		0x_52, 0x_5E, 0x_4C, 0x_02, 0x_6A, 0x_3A, 0x_CA, 0x_51, 0x_1C, 0x_DE, 0x_5D, 0x_1B, 0x_A2, 0x_56, 0x_AB,
		0x_58, 0x_1D, 0x_29, 0x_73, 0x_AE, 0x_42, 0x_7D, 0x_1F, 0x_B5, 0x_E2, 0x_2C, 0x_C1, 0x_7E, 0x_6F, 0x_78,
		0x_E3, 0x_CB, 0x_F7, 0x_6D, 0x_35, 0x_90, 0x_7A, 0x_71, 0x_B9, 0x_03, 0x_82, 0x_8E, 0x_11, 0x_41, 0x_A6,
		0x_C8, 0x_D9, 0x_21, 0x_66, 0x_4A, 0x_95, 0x_96, 0x_CE, 0x_A5, 0x_E9, 0x_98, 0x_32, 0x_67, 0x_46, 0x_C0,
		0x_FA, 0x_81, 0x_9B, 0x_62, 0x_48, 0x_A0, 0x_01, 0x_E0, 0x_EE, 0x_DF, 0x_53, 0x_72, 0x_C9, 0x_74, 0x_F4,
		0x_86, 0x_C5, 0x_3F, 0x_BC, 0x_FC, 0x_33, 0x_47, 0x_18, 0x_A8, 0x_88, 0x_59, 0x_BD, 0x_A4, 0x_4B, 0x_AD,
		0x_A9, 0x_12, 0x_F2, 0x_A3, 0x_F3, 0x_BA, 0x_FD, 0x_91, 0x_B1, 0x_DB, 0x_80, 0x_27, 0x_DD, 0x_28, 0x_C3,
		0x_25, 0x_2E, 0x_9D, 0x_B3, 0x_4F, 0x_13, 0x_84, 0x_E6, 0x_9F, 0x_93, 0x_2F, 0x_7F, 0x_FE, 0x_65, 0x_DC,
		0x_17, 0x_04, 0x_E7, 0x_70, 0x_B0, 0x_8F, 0x_0F, 0x_A7, 0x_B4, 0x_16, 0x_5C, 0x_99, 0x_60, 0x_E4, 0x_31,
		0x_24, 0x_AC, 0x_89, 0x_8A, 0x_63, 0x_F8, 0x_7B, 0x_EB, 0x_15, 0x_CF, 0x_C2, 0x_1A, 0x_D2,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_signs_and_minus_82_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_82_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_56, 0x_43, 0x_82,
		0x_66, 0x_F7, 0x_ED, 0x_6C, 0x_CE, 0x_23, 0x_10, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_63, 0x_55, 0x_48, 0x_3E, 0x_72, 0x_30, 0x_DC, 0x_3F, 0x_ED, 0x_DF, 0x_B0, 0x_39, 0x_44, 0x_A5,
		0x_DD, 0x_EA, 0x_52, 0x_42, 0x_9D, 0x_0F, 0x_F4, 0x_FC, 0x_85, 0x_A8, 0x_83, 0x_D2, 0x_16, 0x_13, 0x_3A,
		0x_1A, 0x_9C, 0x_B8, 0x_B7, 0x_C1, 0x_36, 0x_6A, 0x_DB, 0x_A4, 0x_7A, 0x_6E, 0x_81, 0x_A6, 0x_5D, 0x_E2,
		0x_73, 0x_CA, 0x_80, 0x_91, 0x_04, 0x_CE, 0x_19, 0x_5C, 0x_4F, 0x_4D, 0x_87, 0x_57, 0x_B9, 0x_3B, 0x_B3,
		0x_25, 0x_92, 0x_7C, 0x_EF, 0x_4A, 0x_BF, 0x_22, 0x_95, 0x_49, 0x_10, 0x_46, 0x_69, 0x_21, 0x_61, 0x_C3,
		0x_B1, 0x_74, 0x_DE, 0x_26, 0x_59, 0x_E6, 0x_F3, 0x_56, 0x_4B, 0x_11, 0x_CF, 0x_31, 0x_60, 0x_06, 0x_B5,
		0x_B4, 0x_9E, 0x_8E, 0x_58, 0x_E7, 0x_05, 0x_E5, 0x_2A, 0x_0E, 0x_66, 0x_08, 0x_76, 0x_D7, 0x_97, 0x_64,
		0x_BD, 0x_D0, 0x_A9, 0x_FB, 0x_B6, 0x_53, 0x_A0, 0x_A3, 0x_D9, 0x_45, 0x_A1, 0x_79, 0x_47, 0x_51, 0x_C7,
		0x_32, 0x_3C, 0x_8D, 0x_27, 0x_AD, 0x_23, 0x_F2, 0x_F7, 0x_90, 0x_8F, 0x_70, 0x_82, 0x_84, 0x_2C, 0x_89,
		0x_AB, 0x_9B, 0x_F5, 0x_1D, 0x_24, 0x_F1, 0x_CD, 0x_6B, 0x_17, 0x_94, 0x_7D, 0x_E0, 0x_D8, 0x_CB, 0x_4E,
		0x_1B, 0x_96, 0x_14, 0x_C6, 0x_7B, 0x_01, 0x_62, 0x_15, 0x_18, 0x_E3, 0x_BA, 0x_C2, 0x_E9, 0x_6C, 0x_FE,
		0x_AF, 0x_41, 0x_5F, 0x_E1, 0x_71, 0x_FF, 0x_D4, 0x_8A, 0x_6F, 0x_50, 0x_78, 0x_A7, 0x_68, 0x_40, 0x_98,
		0x_EB, 0x_1E, 0x_1F, 0x_FD, 0x_65, 0x_86, 0x_8B, 0x_AE, 0x_5B, 0x_88, 0x_03, 0x_DA, 0x_6D,
	];

	helper(S, BASE, -82);
}
// endregion
// region: s_has_signs_and_minus_551_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_551_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_B5, 0x_88, 0x_D2, 0x_19,
		0x_07, 0x_75, 0x_73, 0x_B3, 0x_10, 0x_4D, 0x_D0, 0x_48, 0x_E3, 0x_B0, 0x_BD, 0x_12, 0x_01, 0x_FD, 0x_4C,
		0x_F3, 0x_95, 0x_59, 0x_CD, 0x_47, 0x_4B, 0x_3D, 0x_93, 0x_B3, 0x_FA, 0x_13, 0x_2A, 0x_58, 0x_68, 0x_DA,
		0x_2E, 0x_3A, 0x_40, 0x_B2, 0x_DB, 0x_78, 0x_7E, 0x_8D, 0x_A3, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_7E, 0x_B5, 0x_8C, 0x_1B, 0x_84, 0x_B8, 0x_93, 0x_62, 0x_4C, 0x_30, 0x_F9, 0x_98, 0x_4A, 0x_CC,
		0x_85, 0x_FA, 0x_47, 0x_6D, 0x_72, 0x_E0, 0x_69, 0x_FD, 0x_60, 0x_0E, 0x_74, 0x_C9, 0x_1D, 0x_7D, 0x_12,
		0x_A1, 0x_48, 0x_66, 0x_D4, 0x_CF, 0x_39, 0x_22, 0x_BB, 0x_28, 0x_D9, 0x_27, 0x_A3, 0x_EC, 0x_50, 0x_75,
		0x_29, 0x_E3, 0x_37, 0x_58, 0x_F8, 0x_7B, 0x_64, 0x_81, 0x_23, 0x_DF, 0x_95, 0x_8F, 0x_6A, 0x_DE, 0x_8B,
		0x_FC, 0x_EF, 0x_A9, 0x_CA, 0x_A7, 0x_C2, 0x_AE, 0x_13, 0x_05, 0x_9E, 0x_91, 0x_32, 0x_49, 0x_17, 0x_8E,
		0x_FE, 0x_45, 0x_06, 0x_9F, 0x_F0, 0x_E4, 0x_D0, 0x_FB, 0x_CE, 0x_EA, 0x_8D, 0x_B0, 0x_E8, 0x_19, 0x_B2,
		0x_14, 0x_D6, 0x_82, 0x_15, 0x_16, 0x_73, 0x_6F, 0x_9D, 0x_9A, 0x_52, 0x_57, 0x_7F, 0x_21, 0x_CB, 0x_61,
		0x_44, 0x_1E, 0x_70, 0x_80, 0x_6B, 0x_AD, 0x_42, 0x_D5, 0x_08, 0x_B3, 0x_B4, 0x_1A, 0x_77, 0x_2F, 0x_5B,
		0x_04, 0x_B1, 0x_89, 0x_55, 0x_A2, 0x_A4, 0x_18, 0x_E9, 0x_E6, 0x_02, 0x_3F, 0x_E2, 0x_76, 0x_2A, 0x_A8,
		0x_C3, 0x_AB, 0x_C6, 0x_3E, 0x_BD, 0x_4B, 0x_DB, 0x_65, 0x_0F, 0x_5F, 0x_D8, 0x_EE, 0x_56, 0x_C5, 0x_94,
		0x_A0, 0x_10, 0x_D7, 0x_2E, 0x_4E, 0x_24, 0x_1F, 0x_C4, 0x_07, 0x_5C, 0x_CD, 0x_BF, 0x_B6, 0x_DA, 0x_C8,
		0x_88, 0x_AF, 0x_59, 0x_4F, 0x_6C, 0x_79, 0x_78, 0x_F1, 0x_2C, 0x_7A, 0x_3A, 0x_53, 0x_D3, 0x_F3, 0x_ED,
		0x_11, 0x_01, 0x_03, 0x_4D, 0x_96, 0x_BC, 0x_46, 0x_99, 0x_3D, 0x_83, 0x_41, 0x_8A, 0x_68,
	];

	helper(S, BASE, -551);
}
// endregion
// region: s_has_signs_and_minus_7_692_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_7_692_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_73, 0x_48, 0x_59, 0x_F2, 0x_EF, 0x_F6, 0x_74, 0x_65, 0x_4A,
		0x_C2, 0x_AA, 0x_E5, 0x_A8, 0x_F5, 0x_1F, 0x_E0, 0x_D5, 0x_E4, 0x_F5, 0x_B4, 0x_C3, 0x_A6, 0x_8A, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_8F, 0x_4E, 0x_94, 0x_EA, 0x_CA, 0x_25, 0x_06, 0x_4F, 0x_F6, 0x_E9, 0x_5F, 0x_95, 0x_51, 0x_7C,
		0x_54, 0x_DB, 0x_BB, 0x_C3, 0x_3E, 0x_58, 0x_E4, 0x_EE, 0x_78, 0x_BD, 0x_7F, 0x_11, 0x_C0, 0x_F8, 0x_B6,
		0x_A2, 0x_46, 0x_A5, 0x_39, 0x_40, 0x_B9, 0x_07, 0x_C1, 0x_08, 0x_73, 0x_FD, 0x_67, 0x_CF, 0x_3A, 0x_36,
		0x_D9, 0x_FF, 0x_BA, 0x_D1, 0x_1A, 0x_80, 0x_1C, 0x_1D, 0x_93, 0x_A4, 0x_AD, 0x_C8, 0x_4C, 0x_50, 0x_3F,
		0x_5D, 0x_29, 0x_22, 0x_01, 0x_83, 0x_BF, 0x_6F, 0x_4D, 0x_68, 0x_27, 0x_43, 0x_B2, 0x_23, 0x_F9, 0x_4B,
		0x_4A, 0x_8E, 0x_69, 0x_B3, 0x_A0, 0x_35, 0x_2F, 0x_81, 0x_E2, 0x_C4, 0x_2A, 0x_D3, 0x_3C, 0x_57, 0x_79,
		0x_72, 0x_A6, 0x_5C, 0x_F5, 0x_18, 0x_8B, 0x_3D, 0x_5B, 0x_B7, 0x_05, 0x_37, 0x_04, 0x_6E, 0x_EB, 0x_AE,
		0x_92, 0x_87, 0x_7D, 0x_34, 0x_52, 0x_38, 0x_96, 0x_75, 0x_CD, 0x_B0, 0x_9F, 0x_A7, 0x_90, 0x_42, 0x_84,
		0x_CC, 0x_AB, 0x_65, 0x_D5, 0x_0F, 0x_F2, 0x_17, 0x_AF, 0x_61, 0x_D4, 0x_13, 0x_47, 0x_41, 0x_C2, 0x_6D,
		0x_BC, 0x_45, 0x_82, 0x_CE, 0x_B4, 0x_1E, 0x_D7, 0x_6C, 0x_A3, 0x_15, 0x_86, 0x_53, 0x_C6, 0x_AA, 0x_19,
		0x_F7, 0x_F4, 0x_DF, 0x_EF, 0x_E0, 0x_21, 0x_63, 0x_85, 0x_76, 0x_E6, 0x_7A, 0x_03, 0x_12, 0x_CB, 0x_B1,
		0x_48, 0x_E8, 0x_8A, 0x_D6, 0x_26, 0x_31, 0x_88, 0x_D2, 0x_E1, 0x_49, 0x_F1, 0x_9A, 0x_66, 0x_74, 0x_91,
		0x_DA, 0x_71, 0x_6B, 0x_5E, 0x_1F, 0x_64, 0x_A8, 0x_EC, 0x_FB, 0x_D0, 0x_E5, 0x_14, 0x_DD,
	];

	helper(S, BASE, -7_692);
}
// endregion
// region: s_has_signs_and_minus_62_127_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_62_127_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_42, 0x_38, 0x_F3, 0x_EC, 0x_4A, 0x_74,
		0x_78, 0x_64, 0x_18, 0x_3C, 0x_83, 0x_CD, 0x_DA, 0x_1F, 0x_B5, 0x_79, 0x_B6, 0x_A0, 0x_2F, 0x_32, 0x_3C,
		0x_D6, 0x_C1, 0x_AB, 0x_4F, 0x_3C, 0x_42, 0x_F6, 0x_0E, 0x_E7, 0x_BC, 0x_15, 0x_02, 0x_31, 0x_06, 0x_82,
		0x_E9, 0x_AD, 0x_91, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_42, 0x_5A, 0x_60, 0x_3E, 0x_3D, 0x_D5, 0x_D3, 0x_8D, 0x_7A, 0x_71, 0x_94, 0x_31, 0x_D2, 0x_2F,
		0x_25, 0x_74, 0x_FE, 0x_5B, 0x_8F, 0x_99, 0x_06, 0x_68, 0x_21, 0x_C6, 0x_AD, 0x_1A, 0x_1F, 0x_E4, 0x_41,
		0x_4C, 0x_28, 0x_02, 0x_66, 0x_A2, 0x_BC, 0x_9D, 0x_36, 0x_77, 0x_A1, 0x_8C, 0x_F4, 0x_D6, 0x_12, 0x_E8,
		0x_BE, 0x_E9, 0x_FC, 0x_0F, 0x_24, 0x_B7, 0x_D8, 0x_91, 0x_C7, 0x_19, 0x_78, 0x_37, 0x_4A, 0x_10, 0x_16,
		0x_C5, 0x_DC, 0x_15, 0x_D9, 0x_80, 0x_6B, 0x_1E, 0x_47, 0x_A3, 0x_EE, 0x_F7, 0x_7B, 0x_CE, 0x_A6, 0x_BD,
		0x_7F, 0x_3C, 0x_43, 0x_9F, 0x_85, 0x_76, 0x_6C, 0x_82, 0x_69, 0x_50, 0x_B9, 0x_89, 0x_51, 0x_B4, 0x_D4,
		0x_72, 0x_33, 0x_EB, 0x_13, 0x_E5, 0x_A5, 0x_32, 0x_CC, 0x_44, 0x_70, 0x_97, 0x_87, 0x_B0, 0x_9C, 0x_55,
		0x_6D, 0x_BA, 0x_3F, 0x_D1, 0x_40, 0x_04, 0x_39, 0x_F6, 0x_8B, 0x_1B, 0x_CD, 0x_A9, 0x_1C, 0x_FB, 0x_B1,
		0x_7D, 0x_88, 0x_90, 0x_E7, 0x_92, 0x_79, 0x_F0, 0x_34, 0x_38, 0x_CF, 0x_17, 0x_59, 0x_C2, 0x_46, 0x_AE,
		0x_6E, 0x_9B, 0x_22, 0x_9E, 0x_A7, 0x_A8, 0x_29, 0x_6A, 0x_A4, 0x_23, 0x_27, 0x_14, 0x_B8, 0x_DE, 0x_0E,
		0x_2A, 0x_3B, 0x_FA, 0x_FF, 0x_AF, 0x_7C, 0x_67, 0x_4E, 0x_DB, 0x_4D, 0x_DA, 0x_B5, 0x_AB, 0x_6F, 0x_58,
		0x_62, 0x_E6, 0x_E0, 0x_5E, 0x_83, 0x_4F, 0x_98, 0x_05, 0x_C1, 0x_F3, 0x_64, 0x_DD, 0x_30, 0x_F9, 0x_52,
		0x_AC, 0x_CA, 0x_5D, 0x_18, 0x_C9, 0x_B6, 0x_48, 0x_ED, 0x_F8, 0x_A0, 0x_65, 0x_8A, 0x_73,
	];

	helper(S, BASE, -62_127);
}
// endregion
// region: s_has_signs_and_minus_496_210_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_496_210_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_86, 0x_43, 0x_04, 0x_C4, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_7E, 0x_3B, 0x_C0, 0x_29, 0x_3F, 0x_73, 0x_04, 0x_BB, 0x_EC, 0x_E8, 0x_9B, 0x_02, 0x_86, 0x_9A,
		0x_B9, 0x_31, 0x_F6, 0x_72, 0x_A8, 0x_E5, 0x_AA, 0x_D1, 0x_5A, 0x_E1, 0x_03, 0x_83, 0x_69, 0x_CA, 0x_8E,
		0x_9D, 0x_A6, 0x_62, 0x_61, 0x_B1, 0x_8A, 0x_67, 0x_11, 0x_30, 0x_A0, 0x_75, 0x_F1, 0x_A9, 0x_EB, 0x_18,
		0x_7F, 0x_BE, 0x_0E, 0x_27, 0x_3E, 0x_96, 0x_AB, 0x_34, 0x_38, 0x_BA, 0x_06, 0x_76, 0x_51, 0x_89, 0x_F4,
		0x_A4, 0x_B4, 0x_43, 0x_C7, 0x_95, 0x_50, 0x_E6, 0x_1A, 0x_39, 0x_70, 0x_A5, 0x_DC, 0x_6E, 0x_FA, 0x_4B,
		0x_79, 0x_63, 0x_CD, 0x_4D, 0x_CF, 0x_84, 0x_2E, 0x_66, 0x_08, 0x_71, 0x_8B, 0x_3D, 0x_77, 0x_6B, 0x_A1,
		0x_4E, 0x_A7, 0x_F8, 0x_56, 0x_82, 0x_8F, 0x_FC, 0x_90, 0x_B8, 0x_B5, 0x_D8, 0x_D9, 0x_1E, 0x_BF, 0x_94,
		0x_9F, 0x_AF, 0x_37, 0x_7A, 0x_36, 0x_78, 0x_64, 0x_DA, 0x_45, 0x_D0, 0x_FF, 0x_E9, 0x_B0, 0x_23, 0x_07,
		0x_E4, 0x_E0, 0x_E7, 0x_5E, 0x_93, 0x_10, 0x_4A, 0x_40, 0x_35, 0x_2F, 0x_52, 0x_5F, 0x_22, 0x_48, 0x_8D,
		0x_5C, 0x_FD, 0x_DE, 0x_7C, 0x_92, 0x_6C, 0x_54, 0x_A2, 0x_3A, 0x_FE, 0x_F7, 0x_47, 0x_16, 0x_74, 0x_F5,
		0x_BD, 0x_9E, 0x_C2, 0x_6A, 0x_24, 0x_1B, 0x_C5, 0x_D4, 0x_6D, 0x_14, 0x_3C, 0x_2A, 0x_5D, 0x_9C, 0x_D2,
		0x_7B, 0x_59, 0x_1F, 0x_41, 0x_19, 0x_0F, 0x_CE, 0x_A3, 0x_C9, 0x_ED, 0x_AE, 0x_8C, 0x_EF, 0x_C6, 0x_33,
		0x_28, 0x_DF, 0x_2C, 0x_F2, 0x_58, 0x_21, 0x_53, 0x_B6, 0x_85, 0x_7D, 0x_DB, 0x_C3, 0x_4F,
	];

	helper(S, BASE, -496_210);
}
// endregion
// region: s_has_signs_and_minus_7_492_602_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_7_492_602_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_C1, 0x_40,
		0x_BD, 0x_28, 0x_C7, 0x_BA, 0x_62, 0x_45, 0x_45, 0x_83, 0x_E6, 0x_11, 0x_BC, 0x_8D, 0x_BB, 0x_0E, 0x_96,
		0x_DE, 0x_E3, 0x_86, 0x_79, 0x_A5, 0x_6E, 0x_6F, 0x_23, 0x_2A, 0x_7F, 0x_36, 0x_65, 0x_5D, 0x_3E, 0x_19,
		0x_06, 0x_D6, 0x_62, 0x_FD, 0x_44, 0x_86, 0x_F0, 0x_A7, 0x_FD, 0x_DA, 0x_60, 0x_57,
	];
	const BASE: &[u8] = &[
		0x_79, 0x_C1, 0x_B5, 0x_4D, 0x_67, 0x_1D, 0x_1B, 0x_7B, 0x_40, 0x_FB, 0x_17, 0x_A0, 0x_14, 0x_8B, 0x_CB,
		0x_1F, 0x_95, 0x_5B, 0x_FE, 0x_E8, 0x_26, 0x_10, 0x_43, 0x_23, 0x_7D, 0x_EF, 0x_04, 0x_E2, 0x_BD, 0x_31,
		0x_D9, 0x_3D, 0x_FD, 0x_E0, 0x_8D, 0x_50, 0x_D8, 0x_96, 0x_45, 0x_B2, 0x_36, 0x_B0, 0x_42, 0x_F9, 0x_AB,
		0x_F6, 0x_76, 0x_8E, 0x_E7, 0x_6A, 0x_4E, 0x_84, 0x_A6, 0x_98, 0x_BB, 0x_A9, 0x_6D, 0x_EC, 0x_08, 0x_41,
		0x_32, 0x_80, 0x_6B, 0x_F2, 0x_D2, 0x_EB, 0x_DD, 0x_65, 0x_57, 0x_29, 0x_A1, 0x_D7, 0x_A4, 0x_D6, 0x_58,
		0x_AA, 0x_1A, 0x_61, 0x_16, 0x_6F, 0x_56, 0x_27, 0x_7F, 0x_B7, 0x_0E, 0x_5D, 0x_AE, 0x_B8, 0x_8F, 0x_92,
		0x_8A, 0x_CD, 0x_E1, 0x_24, 0x_74, 0x_38, 0x_2F, 0x_34, 0x_19, 0x_4A, 0x_1E, 0x_03, 0x_E6, 0x_49, 0x_C0,
		0x_9B, 0x_05, 0x_DA, 0x_F8, 0x_48, 0x_3A, 0x_E5, 0x_86, 0x_90, 0x_9F, 0x_51, 0x_DC, 0x_62, 0x_A3, 0x_30,
		0x_C5, 0x_44, 0x_C3, 0x_4C, 0x_77, 0x_F4, 0x_F3, 0x_81, 0x_78, 0x_83, 0x_FA, 0x_D5, 0x_6E, 0x_D4, 0x_DB,
		0x_66, 0x_F0, 0x_93, 0x_91, 0x_B3, 0x_AD, 0x_0F, 0x_60, 0x_CF, 0x_71, 0x_2A, 0x_5E, 0x_BC, 0x_BA, 0x_28,
		0x_CA, 0x_85, 0x_AC, 0x_BF, 0x_06, 0x_5F, 0x_7C, 0x_9A, 0x_69, 0x_11, 0x_70, 0x_E3, 0x_9E, 0x_BE, 0x_DE,
		0x_5C, 0x_97, 0x_21, 0x_82, 0x_46, 0x_CC, 0x_F7, 0x_3E, 0x_A5, 0x_5A, 0x_B9, 0x_CE, 0x_53, 0x_73, 0x_13,
		0x_12, 0x_D0, 0x_C9, 0x_3C, 0x_C6, 0x_E9, 0x_3F, 0x_72, 0x_9C, 0x_EE, 0x_A7, 0x_F5, 0x_4B,
	];

	helper(S, BASE, -7_492_602);
}
// endregion
// region: s_has_signs_and_minus_83_806_941_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_83_806_941_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_4C, 0x_E5, 0x_C0, 0x_75, 0x_28, 0x_38, 0x_E0, 0x_2F, 0x_A8, 0x_30, 0x_B3, 0x_36, 0x_49, 0x_AC, 0x_3A,
		0x_E5, 0x_59, 0x_F5, 0x_63, 0x_5F, 0x_16, 0x_DB, 0x_AC, 0x_A8, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_4D, 0x_6E, 0x_CB, 0x_B3, 0x_59, 0x_C5, 0x_76, 0x_08, 0x_B0, 0x_7C, 0x_4C, 0x_34, 0x_2E, 0x_A7,
		0x_CE, 0x_EF, 0x_C4, 0x_26, 0x_02, 0x_3D, 0x_B6, 0x_6B, 0x_54, 0x_F4, 0x_2C, 0x_68, 0x_81, 0x_AB, 0x_89,
		0x_A3, 0x_5A, 0x_E3, 0x_DE, 0x_51, 0x_79, 0x_3B, 0x_BE, 0x_F3, 0x_95, 0x_9A, 0x_EA, 0x_DF, 0x_92, 0x_80,
		0x_17, 0x_B4, 0x_FB, 0x_CC, 0x_5F, 0x_D6, 0x_D5, 0x_FC, 0x_DD, 0x_85, 0x_91, 0x_A6, 0x_69, 0x_24, 0x_BF,
		0x_96, 0x_EE, 0x_BA, 0x_99, 0x_A5, 0x_D4, 0x_CD, 0x_60, 0x_98, 0x_B1, 0x_A8, 0x_AC, 0x_63, 0x_8E, 0x_27,
		0x_01, 0x_10, 0x_50, 0x_FE, 0x_6C, 0x_84, 0x_56, 0x_F5, 0x_38, 0x_F8, 0x_61, 0x_18, 0x_D9, 0x_64, 0x_DC,
		0x_15, 0x_36, 0x_C6, 0x_A0, 0x_1B, 0x_C1, 0x_7E, 0x_E0, 0x_F1, 0x_ED, 0x_E8, 0x_55, 0x_F2, 0x_74, 0x_B9,
		0x_70, 0x_1D, 0x_E6, 0x_42, 0x_19, 0x_9C, 0x_E9, 0x_71, 0x_5C, 0x_88, 0x_5B, 0x_2A, 0x_CA, 0x_3A, 0x_1A,
		0x_07, 0x_9D, 0x_F7, 0x_05, 0x_E1, 0x_CF, 0x_E5, 0x_A1, 0x_47, 0x_D3, 0x_A4, 0x_44, 0x_29, 0x_6F, 0x_9F,
		0x_8D, 0x_37, 0x_90, 0x_BC, 0x_F9, 0x_DA, 0x_E7, 0x_25, 0x_9B, 0x_EB, 0x_A2, 0x_52, 0x_F0, 0x_D1, 0x_0E,
		0x_83, 0x_5D, 0x_32, 0x_33, 0x_7A, 0x_BD, 0x_13, 0x_F6, 0x_B7, 0x_78, 0x_A9, 0x_FF, 0x_D0, 0x_B5, 0x_D2,
		0x_75, 0x_97, 0x_C8, 0x_D7, 0x_43, 0x_C9, 0x_30, 0x_2F, 0x_16, 0x_8A, 0x_C0, 0x_DB, 0x_1F, 0x_3F, 0x_7D,
		0x_FD, 0x_72, 0x_40, 0x_B2, 0x_C7, 0x_8B, 0x_21, 0x_12, 0x_FA, 0x_87, 0x_66, 0x_4E, 0x_49,
	];

	helper(S, BASE, -83_806_941);
}
// endregion
// region: s_has_signs_and_minus_784_318_098_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_784_318_098_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_17, 0x_32,
		0x_6D, 0x_15, 0x_2D, 0x_EC, 0x_55, 0x_22, 0x_D0, 0x_95, 0x_1A, 0x_10, 0x_68, 0x_F6, 0x_3B, 0x_3D, 0x_96,
		0x_65, 0x_F6, 0x_01, 0x_4B, 0x_4B, 0x_41, 0x_10, 0x_77, 0x_CE, 0x_3A, 0x_37, 0x_CF, 0x_98, 0x_CF, 0x_4D,
		0x_3E, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_C2, 0x_1B, 0x_23, 0x_D3, 0x_66, 0x_1A, 0x_B1, 0x_5E, 0x_95, 0x_83, 0x_F9, 0x_69, 0x_C8, 0x_85,
		0x_9D, 0x_6D, 0x_6A, 0x_44, 0x_32, 0x_B8, 0x_84, 0x_72, 0x_88, 0x_B5, 0x_A2, 0x_4D, 0x_BD, 0x_CB, 0x_0F,
		0x_42, 0x_5F, 0x_BA, 0x_96, 0x_34, 0x_57, 0x_FF, 0x_AC, 0x_BC, 0x_9C, 0x_C3, 0x_7B, 0x_8F, 0x_DB, 0x_A5,
		0x_C1, 0x_68, 0x_F6, 0x_3F, 0x_3D, 0x_99, 0x_D2, 0x_8C, 0x_54, 0x_CF, 0x_59, 0x_73, 0x_39, 0x_2E, 0x_10,
		0x_6E, 0x_DE, 0x_F3, 0x_B7, 0x_04, 0x_E3, 0x_15, 0x_90, 0x_EC, 0x_01, 0x_05, 0x_4B, 0x_98, 0x_A1, 0x_74,
		0x_33, 0x_27, 0x_5D, 0x_A0, 0x_4F, 0x_86, 0x_2A, 0x_7C, 0x_35, 0x_89, 0x_49, 0x_DD, 0x_D6, 0x_E1, 0x_37,
		0x_46, 0x_CD, 0x_58, 0x_14, 0x_C7, 0x_08, 0x_B2, 0x_8B, 0x_E5, 0x_B0, 0x_E9, 0x_1E, 0x_64, 0x_EA, 0x_8D,
		0x_9B, 0x_18, 0x_0E, 0x_E4, 0x_17, 0x_2C, 0x_65, 0x_1F, 0x_55, 0x_DC, 0x_93, 0x_40, 0x_03, 0x_7E, 0x_5A,
		0x_E0, 0x_EB, 0x_7F, 0x_3A, 0x_AF, 0x_C6, 0x_82, 0x_81, 0x_CA, 0x_7A, 0x_4C, 0x_AE, 0x_80, 0x_3C, 0x_E8,
		0x_ED, 0x_45, 0x_77, 0x_1D, 0x_19, 0x_EE, 0x_A7, 0x_F8, 0x_A9, 0x_76, 0x_8E, 0x_DF, 0x_61, 0x_8A, 0x_67,
		0x_B4, 0x_FE, 0x_60, 0x_A6, 0x_91, 0x_24, 0x_D1, 0x_F7, 0x_38, 0x_FB, 0x_02, 0x_B3, 0x_87, 0x_AA, 0x_48,
		0x_71, 0x_F2, 0x_50, 0x_11, 0x_29, 0x_41, 0x_3B, 0x_F0, 0x_BF, 0x_FC, 0x_BE, 0x_D5, 0x_78, 0x_7D, 0x_D0,
		0x_75, 0x_AD, 0x_C9, 0x_A8, 0x_2F, 0x_CE, 0x_D9, 0x_56, 0x_22, 0x_07, 0x_3E, 0x_16, 0x_D8,
	];

	helper(S, BASE, -784_318_098);
}
// endregion
// region: s_has_signs_and_minus_9_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_9_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_CC, 0x_0D, 0x_2C, 0x_6A, 0x_B2, 0x_40, 0x_37, 0x_04, 0x_18, 0x_A9, 0x_EE,
		0x_69, 0x_E1, 0x_35, 0x_08, 0x_C8, 0x_B6, 0x_79, 0x_C7, 0x_ED, 0x_EF, 0x_BB, 0x_E6, 0x_87, 0x_3A, 0x_79,
		0x_98, 0x_8B, 0x_73, 0x_5E, 0x_99, 0x_C7, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_FE, 0x_03, 0x_77, 0x_21, 0x_AB, 0x_82, 0x_7D, 0x_8C, 0x_CC, 0x_27, 0x_FC, 0x_A8, 0x_6A, 0x_7E,
		0x_D3, 0x_6C, 0x_A1, 0x_EB, 0x_DD, 0x_F0, 0x_7B, 0x_97, 0x_28, 0x_43, 0x_E2, 0x_C8, 0x_C1, 0x_79, 0x_62,
		0x_C4, 0x_61, 0x_74, 0x_4E, 0x_07, 0x_F6, 0x_89, 0x_8A, 0x_BB, 0x_F8, 0x_FF, 0x_0F, 0x_C9, 0x_4D, 0x_29,
		0x_44, 0x_F2, 0x_B5, 0x_96, 0x_B7, 0x_25, 0x_CD, 0x_BE, 0x_B0, 0x_9E, 0x_1A, 0x_51, 0x_12, 0x_95, 0x_BC,
		0x_72, 0x_33, 0x_85, 0x_8F, 0x_A0, 0x_3E, 0x_F9, 0x_48, 0x_71, 0x_2F, 0x_2A, 0x_02, 0x_0E, 0x_59, 0x_CE,
		0x_1D, 0x_F3, 0x_B1, 0x_4A, 0x_41, 0x_9A, 0x_C2, 0x_1E, 0x_93, 0x_90, 0x_87, 0x_E8, 0x_D0, 0x_C3, 0x_4C,
		0x_5D, 0x_AD, 0x_1B, 0x_05, 0x_76, 0x_AE, 0x_E6, 0x_08, 0x_FD, 0x_A2, 0x_16, 0x_84, 0x_99, 0x_52, 0x_D2,
		0x_B3, 0x_70, 0x_A9, 0x_17, 0x_CF, 0x_78, 0x_66, 0x_01, 0x_98, 0x_19, 0x_B9, 0x_9F, 0x_8E, 0x_94, 0x_DF,
		0x_CA, 0x_4F, 0x_D9, 0x_6B, 0x_2E, 0x_CB, 0x_68, 0x_9D, 0x_6E, 0x_5F, 0x_6F, 0x_83, 0x_BD, 0x_C5, 0x_38,
		0x_14, 0x_56, 0x_C6, 0x_1F, 0x_36, 0x_57, 0x_ED, 0x_11, 0x_88, 0x_DB, 0x_DE, 0x_D5, 0x_D1, 0x_EA, 0x_6D,
		0x_EE, 0x_2C, 0x_65, 0x_35, 0x_AA, 0x_3F, 0x_40, 0x_B4, 0x_A3, 0x_F1, 0x_32, 0x_AC, 0x_BF, 0x_EF, 0x_5B,
		0x_DC, 0x_FB, 0x_31, 0x_A5, 0x_9B, 0x_55, 0x_80, 0x_81, 0x_49, 0x_42, 0x_5E, 0x_C7, 0x_7A, 0x_15, 0x_39,
		0x_8B, 0x_34, 0x_58, 0x_D7, 0x_4B, 0x_DA, 0x_EC, 0x_B8, 0x_9C, 0x_8D, 0x_C0, 0x_A6, 0x_45, 0x_BA, 0x_92,
		0x_60, 0x_5C, 0x_A4, 0x_06, 0x_22, 0x_E5, 0x_69, 0x_91, 0x_7F, 0x_F5, 0x_23, 0x_7C, 0x_F4, 0x_18, 0x_D4,
		0x_67, 0x_E0, 0x_47, 0x_F7, 0x_E3, 0x_5A, 0x_73, 0x_30, 0x_B2, 0x_D6, 0x_37, 0x_04, 0x_54, 0x_63, 0x_E9,
		0x_E7, 0x_53, 0x_3D, 0x_10, 0x_24, 0x_3C, 0x_AF, 0x_1C, 0x_50, 0x_3B, 0x_E1, 0x_D8, 0x_75, 0x_E4, 0x_86,
		0x_A7, 0x_13, 0x_FA, 0x_64, 0x_26, 0x_3A, 0x_B6,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_signs_and_minus_78_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_78_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_4C, 0x_0D, 0x_AA, 0x_96,
		0x_E3, 0x_AF, 0x_4E, 0x_AC, 0x_EB, 0x_1F, 0x_F7, 0x_EA, 0x_14, 0x_01, 0x_30, 0x_EC, 0x_73, 0x_FF, 0x_48,
		0x_73, 0x_49, 0x_27, 0x_29, 0x_99, 0x_65, 0x_23, 0x_84, 0x_95, 0x_01, 0x_14, 0x_99, 0x_F7, 0x_75, 0x_E7,
		0x_FC, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_AE, 0x_D1, 0x_B0, 0x_97, 0x_44, 0x_A9, 0x_FB, 0x_5F, 0x_80, 0x_C9, 0x_3F, 0x_3E, 0x_39, 0x_B4,
		0x_92, 0x_C2, 0x_A4, 0x_C4, 0x_34, 0x_82, 0x_19, 0x_AF, 0x_91, 0x_B2, 0x_02, 0x_7B, 0x_E7, 0x_0E, 0x_1D,
		0x_8A, 0x_A0, 0x_94, 0x_05, 0x_16, 0x_9E, 0x_FC, 0x_84, 0x_BD, 0x_B9, 0x_89, 0x_23, 0x_87, 0x_9D, 0x_26,
		0x_DC, 0x_6E, 0x_CB, 0x_08, 0x_BB, 0x_B1, 0x_64, 0x_29, 0x_A8, 0x_5B, 0x_D5, 0x_FE, 0x_2A, 0x_28, 0x_A3,
		0x_77, 0x_4D, 0x_D4, 0x_17, 0x_F5, 0x_EF, 0x_EC, 0x_1F, 0x_51, 0x_01, 0x_59, 0x_A6, 0x_60, 0x_B7, 0x_8E,
		0x_52, 0x_FA, 0x_E9, 0x_4C, 0x_EB, 0x_AD, 0x_45, 0x_36, 0x_9B, 0x_25, 0x_8C, 0x_CD, 0x_2E, 0x_65, 0x_CA,
		0x_F9, 0x_D7, 0x_D6, 0x_F7, 0x_D9, 0x_1E, 0x_70, 0x_ED, 0x_78, 0x_3C, 0x_22, 0x_21, 0x_D3, 0x_F8, 0x_67,
		0x_4A, 0x_C3, 0x_74, 0x_B6, 0x_DB, 0x_33, 0x_C5, 0x_9A, 0x_98, 0x_56, 0x_D0, 0x_BA, 0x_54, 0x_FD, 0x_75,
		0x_E4, 0x_6F, 0x_14, 0x_A2, 0x_15, 0x_B8, 0x_D8, 0x_C0, 0x_3D, 0x_73, 0x_AA, 0x_79, 0x_BF, 0x_8F, 0x_88,
		0x_1C, 0x_96, 0x_07, 0x_06, 0x_04, 0x_61, 0x_D2, 0x_6A, 0x_DA, 0x_E8, 0x_27, 0x_62, 0x_A1, 0x_DE, 0x_C7,
		0x_C8, 0x_47, 0x_48, 0x_CC, 0x_7F, 0x_32, 0x_24, 0x_85, 0x_31, 0x_66, 0x_BC, 0x_F6, 0x_C1, 0x_3B, 0x_3A,
		0x_63, 0x_41, 0x_E6, 0x_13, 0x_E5, 0x_57, 0x_AB, 0x_71, 0x_1A, 0x_99, 0x_7C, 0x_5A, 0x_12, 0x_4B, 0x_86,
		0x_BE, 0x_7D, 0x_18, 0x_C6, 0x_53, 0x_95, 0x_35, 0x_5C, 0x_46, 0x_F2, 0x_30, 0x_4F, 0x_E1, 0x_EE, 0x_81,
		0x_F4, 0x_CF, 0x_4E, 0x_11, 0x_A5, 0x_2F, 0x_2C, 0x_EA, 0x_9C, 0x_9F, 0x_CE, 0x_5D, 0x_42, 0x_8D, 0x_90,
		0x_37, 0x_8B, 0x_40, 0x_DD, 0x_83, 0x_DF, 0x_10, 0x_72, 0x_6D, 0x_F1, 0x_68, 0x_58, 0x_0F, 0x_6C, 0x_55,
		0x_43, 0x_F0, 0x_E0, 0x_FF, 0x_03, 0x_B5, 0x_A7, 0x_76, 0x_49, 0x_B3, 0x_1B, 0x_50, 0x_AC, 0x_E2, 0x_E3,
		0x_5E, 0x_7A, 0x_69, 0x_F3, 0x_6B, 0x_93, 0x_7E,
	];

	helper(S, BASE, -78);
}
// endregion
// region: s_has_signs_and_minus_997_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_997_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_44, 0x_2A, 0x_0A, 0x_6E,
		0x_C6, 0x_EB, 0x_9C, 0x_03, 0x_18, 0x_D1, 0x_BB, 0x_2A, 0x_C8, 0x_4A, 0x_22, 0x_9C, 0x_B3, 0x_B7, 0x_7A,
		0x_4A, 0x_60, 0x_B4, 0x_44, 0x_35, 0x_39, 0x_02, 0x_F3, 0x_B3, 0x_80, 0x_39, 0x_55, 0x_53, 0x_E3, 0x_80,
		0x_EC, 0x_26, 0x_E6, 0x_7E, 0x_A7, 0x_10, 0x_70, 0x_7D,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_4F, 0x_F9, 0x_06, 0x_44, 0x_EB, 0x_4C, 0x_6A, 0x_E7, 0x_2A, 0x_FE, 0x_31, 0x_A5, 0x_23, 0x_84,
		0x_C7, 0x_C5, 0x_7F, 0x_F5, 0x_A4, 0x_CC, 0x_B0, 0x_4E, 0x_38, 0x_91, 0x_57, 0x_FB, 0x_70, 0x_29, 0x_A9,
		0x_DC, 0x_E4, 0x_63, 0x_FD, 0x_3D, 0x_F8, 0x_AD, 0x_74, 0x_36, 0x_75, 0x_E9, 0x_85, 0x_14, 0x_72, 0x_CA,
		0x_C9, 0x_9D, 0x_12, 0x_B2, 0x_A8, 0x_DD, 0x_2F, 0x_95, 0x_90, 0x_E1, 0x_81, 0x_93, 0x_BF, 0x_C0, 0x_41,
		0x_94, 0x_64, 0x_BD, 0x_43, 0x_7A, 0x_E3, 0x_8A, 0x_67, 0x_6F, 0x_28, 0x_2E, 0x_8E, 0x_B4, 0x_D6, 0x_05,
		0x_B6, 0x_88, 0x_89, 0x_EC, 0x_01, 0x_1E, 0x_D8, 0x_E5, 0x_30, 0x_9E, 0x_5F, 0x_79, 0x_7B, 0x_65, 0x_ED,
		0x_80, 0x_F4, 0x_76, 0x_8C, 0x_71, 0x_10, 0x_F1, 0x_58, 0x_07, 0x_03, 0x_DF, 0x_AE, 0x_27, 0x_46, 0x_AC,
		0x_52, 0x_B3, 0x_FC, 0x_FA, 0x_15, 0x_B5, 0x_92, 0x_98, 0x_E8, 0x_24, 0x_AB, 0x_BC, 0x_7C, 0x_61, 0x_BB,
		0x_C4, 0x_26, 0x_11, 0x_69, 0x_40, 0x_6B, 0x_22, 0x_47, 0x_E0, 0x_04, 0x_66, 0x_6E, 0x_02, 0x_33, 0x_F3,
		0x_C3, 0x_45, 0x_97, 0x_39, 0x_9F, 0x_D1, 0x_D5, 0x_5E, 0x_EE, 0x_8F, 0x_0F, 0x_86, 0x_A1, 0x_53, 0x_8B,
		0x_CF, 0x_CB, 0x_54, 0x_3E, 0x_9B, 0x_49, 0x_AF, 0x_4B, 0x_17, 0x_9A, 0x_CE, 0x_59, 0x_9C, 0x_96, 0x_E2,
		0x_16, 0x_1B, 0x_5D, 0x_B1, 0x_B8, 0x_73, 0x_7D, 0x_13, 0x_DE, 0x_82, 0x_5A, 0x_62, 0x_D9, 0x_3B, 0x_1A,
		0x_B7, 0x_0E, 0x_34, 0x_A2, 0x_5C, 0x_A3, 0x_37, 0x_F0, 0x_7E, 0x_56, 0x_35, 0x_6C, 0x_8D, 0x_C2, 0x_D7,
		0x_BA, 0x_48, 0x_3C, 0x_1C, 0x_77, 0x_51, 0x_6D, 0x_C6, 0x_B9, 0x_42, 0x_AA, 0x_5B, 0x_D4, 0x_C1, 0x_78,
		0x_F2, 0x_E6, 0x_50, 0x_CD, 0x_99, 0x_60, 0x_4D, 0x_D2, 0x_08, 0x_C8, 0x_68, 0x_EF, 0x_1F, 0x_BE, 0x_F6,
		0x_D0, 0x_18, 0x_25, 0x_DB, 0x_A0, 0x_32, 0x_F7, 0x_A6, 0x_19, 0x_3A, 0x_87, 0x_1D, 0x_3F, 0x_A7, 0x_EA,
		0x_2C, 0x_FF, 0x_D3, 0x_21, 0x_DA, 0x_55, 0x_4A,
	];

	helper(S, BASE, -997);
}
// endregion
// region: s_has_signs_and_minus_9_304_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_9_304_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_24, 0x_05, 0x_20, 0x_55, 0x_F2, 0x_60, 0x_52, 0x_ED, 0x_85, 0x_EB,
		0x_B5, 0x_BD, 0x_12, 0x_49, 0x_3B, 0x_01, 0x_C4, 0x_6A, 0x_63, 0x_3E, 0x_4F, 0x_36, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_C5, 0x_DB, 0x_46, 0x_98, 0x_B3, 0x_CA, 0x_1B, 0x_45, 0x_D8, 0x_04, 0x_3D, 0x_6C, 0x_4B, 0x_37,
		0x_78, 0x_F8, 0x_95, 0x_4E, 0x_DD, 0x_35, 0x_48, 0x_0E, 0x_74, 0x_FA, 0x_D1, 0x_28, 0x_12, 0x_CE, 0x_6F,
		0x_EF, 0x_26, 0x_2F, 0x_FB, 0x_AA, 0x_D5, 0x_9E, 0x_24, 0x_1C, 0x_90, 0x_AD, 0x_A1, 0x_22, 0x_0F, 0x_F9,
		0x_36, 0x_73, 0x_93, 0x_A3, 0x_3B, 0x_30, 0x_25, 0x_50, 0x_57, 0x_BE, 0x_59, 0x_10, 0x_39, 0x_ED, 0x_A6,
		0x_C9, 0x_D9, 0x_F0, 0x_EC, 0x_84, 0x_D4, 0x_8A, 0x_96, 0x_5D, 0x_E1, 0x_56, 0x_C4, 0x_87, 0x_C6, 0x_5E,
		0x_9C, 0x_7F, 0x_BF, 0x_C8, 0x_88, 0x_B5, 0x_BD, 0x_07, 0x_E8, 0x_32, 0x_9B, 0x_15, 0x_D6, 0x_3F, 0x_F2,
		0x_B7, 0x_23, 0x_49, 0x_F1, 0x_3E, 0x_B2, 0x_A4, 0x_A7, 0x_BA, 0x_18, 0x_F3, 0x_AC, 0x_D0, 0x_E4, 0x_E3,
		0x_7C, 0x_69, 0x_4A, 0x_47, 0x_94, 0x_AB, 0x_64, 0x_B4, 0x_B0, 0x_E6, 0x_FE, 0x_7B, 0x_F5, 0x_77, 0x_03,
		0x_79, 0x_60, 0x_01, 0x_9F, 0x_BB, 0x_D2, 0x_86, 0x_E0, 0x_5C, 0x_CD, 0x_8D, 0x_51, 0x_08, 0x_C2, 0x_72,
		0x_1E, 0x_CF, 0x_E9, 0x_42, 0x_62, 0x_97, 0x_68, 0x_8F, 0x_66, 0x_80, 0x_A2, 0x_2E, 0x_75, 0x_CC, 0x_1F,
		0x_4D, 0x_DC, 0x_34, 0x_63, 0x_76, 0x_61, 0x_5B, 0x_3C, 0x_B6, 0x_E5, 0x_CB, 0x_99, 0x_53, 0x_6D, 0x_A0,
		0x_05, 0x_5F, 0x_43, 0x_F7, 0x_A8, 0x_33, 0x_38, 0x_41, 0x_AF, 0x_7D, 0x_DE, 0x_58, 0x_A5, 0x_BC, 0x_14,
		0x_19, 0x_89, 0x_C3, 0x_52, 0x_1A, 0x_81, 0x_92, 0x_2C, 0x_4C, 0x_C7, 0x_EA, 0x_FF, 0x_9A, 0x_FC, 0x_29,
		0x_44, 0x_65, 0x_D3, 0x_11, 0x_83, 0x_AE, 0x_B9, 0x_16, 0x_7A, 0x_91, 0x_06, 0x_67, 0x_EE, 0x_40, 0x_A9,
		0x_9D, 0x_4F, 0x_8C, 0x_2A, 0x_27, 0x_7E, 0x_82, 0x_DA, 0x_8B, 0x_D7, 0x_31, 0x_1D, 0x_F4, 0x_5A, 0x_8E,
		0x_54, 0x_C0, 0x_F6, 0x_70, 0x_6B, 0x_E7, 0x_55, 0x_FD, 0x_EB, 0x_13, 0x_02, 0x_DF, 0x_B8, 0x_E2, 0x_71,
		0x_85, 0x_6A, 0x_B1, 0x_21, 0x_3A, 0x_17, 0x_6E,
	];

	helper(S, BASE, -9_304);
}
// endregion
// region: s_has_signs_and_minus_63_498_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_63_498_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_64, 0x_13, 0x_48,
		0x_0A, 0x_7E, 0x_6A, 0x_F7, 0x_C0, 0x_88, 0x_8B, 0x_D3, 0x_07, 0x_3A, 0x_4B, 0x_8A, 0x_A4, 0x_65, 0x_F5,
		0x_16, 0x_E7, 0x_B6, 0x_74, 0x_37, 0x_BB, 0x_64, 0x_49, 0x_3B, 0x_8E, 0x_F4, 0x_0F, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_64, 0x_55, 0x_97, 0x_6B, 0x_4D, 0x_91, 0x_5A, 0x_29, 0x_6E, 0x_13, 0x_DC, 0x_FE, 0x_15, 0x_81,
		0x_AD, 0x_31, 0x_1D, 0x_BE, 0x_48, 0x_67, 0x_56, 0x_30, 0x_54, 0x_8D, 0x_05, 0x_7A, 0x_DB, 0x_CB, 0x_8A,
		0x_DE, 0x_AE, 0x_35, 0x_A9, 0x_76, 0x_04, 0x_B4, 0x_2F, 0x_7C, 0x_50, 0x_2E, 0x_6D, 0x_8F, 0x_B6, 0x_FC,
		0x_D6, 0x_10, 0x_8E, 0x_2C, 0x_02, 0x_E9, 0x_89, 0x_44, 0x_6F, 0x_C0, 0x_24, 0x_1C, 0x_5F, 0x_99, 0x_B0,
		0x_E3, 0x_25, 0x_F5, 0x_B9, 0x_26, 0x_32, 0x_78, 0x_60, 0x_BA, 0x_FB, 0x_D2, 0x_D0, 0x_22, 0x_9E, 0x_C3,
		0x_DD, 0x_69, 0x_EB, 0x_75, 0x_FD, 0x_C1, 0x_EE, 0x_E4, 0x_E1, 0x_19, 0x_86, 0x_BF, 0x_17, 0x_2A, 0x_F3,
		0x_3E, 0x_B3, 0x_33, 0x_EF, 0x_6A, 0x_7B, 0x_93, 0x_A4, 0x_E0, 0x_F2, 0x_A1, 0x_B8, 0x_4A, 0x_DA, 0x_1B,
		0x_BD, 0x_A2, 0x_3B, 0x_F0, 0x_1E, 0x_68, 0x_7D, 0x_88, 0x_57, 0x_CA, 0x_F4, 0x_6C, 0x_40, 0x_59, 0x_D7,
		0x_F9, 0x_92, 0x_AC, 0x_47, 0x_9A, 0x_01, 0x_21, 0x_4B, 0x_14, 0x_A3, 0x_61, 0x_65, 0x_27, 0x_18, 0x_B7,
		0x_41, 0x_3C, 0x_06, 0x_C5, 0x_A7, 0x_DF, 0x_98, 0x_36, 0x_73, 0x_07, 0x_AB, 0x_3F, 0x_46, 0x_3A, 0x_CC,
		0x_ED, 0x_AF, 0x_63, 0x_7F, 0x_D4, 0x_5E, 0x_80, 0x_A8, 0x_49, 0x_1F, 0x_82, 0x_1A, 0x_71, 0x_AA, 0x_45,
		0x_9B, 0x_E6, 0x_E5, 0x_C6, 0x_08, 0x_CF, 0x_72, 0x_34, 0x_28, 0x_96, 0x_53, 0x_52, 0x_C7, 0x_5B, 0x_7E,
		0x_C8, 0x_C4, 0x_43, 0x_E2, 0x_74, 0x_F1, 0x_F7, 0x_BB, 0x_D5, 0x_B2, 0x_11, 0x_87, 0x_A0, 0x_84, 0x_8B,
		0x_9D, 0x_D1, 0x_5C, 0x_D8, 0x_F6, 0x_12, 0x_70, 0x_0E, 0x_0F, 0x_38, 0x_95, 0x_B5, 0x_16, 0x_FA, 0x_94,
		0x_37, 0x_A6, 0x_C2, 0x_CE, 0x_90, 0x_B1, 0x_83, 0x_F8, 0x_E8, 0x_23, 0x_79, 0x_8C, 0x_A5, 0x_62, 0x_4F,
		0x_BC, 0x_CD, 0x_4C, 0x_42, 0x_E7, 0x_85, 0x_58, 0x_9C, 0x_EA, 0x_9F, 0x_D9, 0x_3D, 0x_77, 0x_4E, 0x_51,
		0x_C9, 0x_66, 0x_EC, 0x_D3, 0x_39, 0x_5D, 0x_03,
	];

	helper(S, BASE, -63_498);
}
// endregion
// region: s_has_signs_and_minus_500_605_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_500_605_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_6E, 0x_ED, 0x_8D, 0x_09, 0x_93, 0x_73, 0x_BD,
		0x_F2, 0x_87, 0x_A3, 0x_57, 0x_A0, 0x_63, 0x_F6, 0x_5B, 0x_48, 0x_12, 0x_ED, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_FE, 0x_E0, 0x_2E, 0x_34, 0x_89, 0x_74, 0x_D1, 0x_45, 0x_6E, 0x_52, 0x_7E, 0x_A3, 0x_42, 0x_F8, 0x_F9,
		0x_4F, 0x_02, 0x_A7, 0x_64, 0x_87, 0x_BC, 0x_C0, 0x_5D, 0x_E8, 0x_AE, 0x_FA, 0x_7F, 0x_61, 0x_E6, 0x_E2,
		0x_22, 0x_1A, 0x_47, 0x_C8, 0x_FD, 0x_14, 0x_72, 0x_48, 0x_60, 0x_F0, 0x_E3, 0x_83, 0x_C2, 0x_E9, 0x_11,
		0x_21, 0x_AC, 0x_90, 0x_49, 0x_D6, 0x_ED, 0x_3B, 0x_3F, 0x_28, 0x_B1, 0x_96, 0x_6D, 0x_F7, 0x_13, 0x_3A,
		0x_04, 0x_76, 0x_DA, 0x_CC, 0x_78, 0x_BF, 0x_A0, 0x_A2, 0x_84, 0x_53, 0x_9B, 0x_B2, 0x_CF, 0x_19, 0x_AF,
		0x_2A, 0x_E7, 0x_D0, 0x_4D, 0x_7D, 0x_3D, 0x_05, 0x_86, 0x_03, 0x_58, 0x_27, 0x_9A, 0x_AA, 0x_B0, 0x_F3,
		0x_B4, 0x_37, 0x_85, 0x_8B, 0x_54, 0x_0F, 0x_17, 0x_BB, 0x_33, 0x_25, 0x_EC, 0x_C3, 0x_38, 0x_C6, 0x_66,
		0x_43, 0x_88, 0x_41, 0x_DF, 0x_A6, 0x_63, 0x_8C, 0x_80, 0x_4C, 0x_B8, 0x_1C, 0x_A1, 0x_DB, 0x_97, 0x_BA,
		0x_EB, 0x_82, 0x_44, 0x_6A, 0x_E5, 0x_DD, 0x_77, 0x_3C, 0x_D8, 0x_94, 0x_D3, 0x_15, 0x_D9, 0x_1F, 0x_6C,
		0x_30, 0x_73, 0x_18, 0x_07, 0x_EE, 0x_4B, 0x_35, 0x_50, 0x_24, 0x_4E, 0x_C9, 0x_8E, 0x_BD, 0x_2F, 0x_93,
		0x_91, 0x_39, 0x_5F, 0x_5C, 0x_29, 0x_16, 0x_C1, 0x_06, 0x_AB, 0x_F4, 0x_12, 0x_E4, 0x_2C, 0x_65, 0x_1E,
		0x_C7, 0x_9F, 0x_99, 0x_9D, 0x_B9, 0x_5B, 0x_D4, 0x_56, 0x_95, 0x_9E, 0x_75, 0x_32, 0x_DC, 0x_B6, 0x_7A,
		0x_71, 0x_1D, 0x_F1, 0x_8D, 0x_6F, 0x_40, 0x_69, 0x_10, 0x_F5, 0x_EA, 0x_CB, 0x_A5, 0x_F6, 0x_5A, 0x_5E,
		0x_62, 0x_D7, 0x_CD, 0x_D5, 0x_68, 0x_9C, 0x_0E, 0x_B5, 0x_31, 0x_EF, 0x_67, 0x_A8, 0x_7C, 0x_DE, 0x_92,
		0x_70, 0x_E1, 0x_FC, 0x_A9, 0x_26, 0x_BE, 0x_01, 0x_59, 0x_51, 0x_C5, 0x_B3, 0x_B7, 0x_8A, 0x_36, 0x_08,
		0x_46, 0x_FF, 0x_CE, 0x_CA, 0x_3E, 0x_81, 0x_AD, 0x_4A, 0x_57, 0x_6B, 0x_7B, 0x_1B, 0x_8F, 0x_55, 0x_FB,
		0x_98, 0x_23, 0x_F2, 0x_A4, 0x_C4, 0x_79, 0x_D2,
	];

	helper(S, BASE, -500_605);
}
// endregion
// region: s_has_signs_and_minus_4_947_094_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_4_947_094_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_18, 0x_2E, 0x_3F, 0x_0C, 0x_67, 0x_AD, 0x_CC, 0x_D9, 0x_D0, 0x_C9, 0x_5F,
		0x_6C, 0x_12, 0x_9A, 0x_F9, 0x_F3, 0x_16, 0x_52, 0x_D1, 0x_DF, 0x_8D, 0x_DD, 0x_12, 0x_A4, 0x_7D, 0x_9B,
		0x_02,
	];
	const BASE: &[u8] = &[
		0x_95, 0x_11, 0x_2C, 0x_F9, 0x_AB, 0x_D8, 0x_01, 0x_28, 0x_83, 0x_6C, 0x_76, 0x_DB, 0x_43, 0x_9F, 0x_68,
		0x_D6, 0x_74, 0x_FB, 0x_53, 0x_D7, 0x_98, 0x_2E, 0x_36, 0x_33, 0x_51, 0x_B5, 0x_89, 0x_A7, 0x_9A, 0x_6E,
		0x_D5, 0x_40, 0x_ED, 0x_38, 0x_A9, 0x_F0, 0x_42, 0x_0F, 0x_C2, 0x_39, 0x_AE, 0x_CA, 0x_EB, 0x_1A, 0x_31,
		0x_71, 0x_DD, 0x_A3, 0x_06, 0x_0E, 0x_4B, 0x_3B, 0x_1E, 0x_5A, 0x_91, 0x_DA, 0x_03, 0x_10, 0x_3A, 0x_07,
		0x_FC, 0x_1B, 0x_A8, 0x_92, 0x_FE, 0x_B2, 0x_B0, 0x_FF, 0x_E1, 0x_30, 0x_E7, 0x_35, 0x_67, 0x_6D, 0x_E4,
		0x_E2, 0x_9E, 0x_41, 0x_96, 0x_C7, 0x_05, 0x_18, 0x_04, 0x_A2, 0x_19, 0x_72, 0x_66, 0x_90, 0x_E9, 0x_3D,
		0x_7C, 0x_5C, 0x_84, 0x_1F, 0x_D0, 0x_64, 0x_57, 0x_F4, 0x_56, 0x_C1, 0x_26, 0x_F8, 0x_47, 0x_1C, 0x_87,
		0x_A6, 0x_B1, 0x_BE, 0x_E6, 0x_80, 0x_17, 0x_54, 0x_F5, 0x_7A, 0x_BF, 0x_C0, 0x_61, 0x_F7, 0x_9B, 0x_C6,
		0x_D9, 0x_63, 0x_29, 0x_F6, 0x_5F, 0x_AA, 0x_60, 0x_44, 0x_7F, 0x_5E, 0x_82, 0x_C3, 0x_55, 0x_81, 0x_8A,
		0x_4C, 0x_45, 0x_A5, 0x_73, 0x_6B, 0x_15, 0x_3E, 0x_8E, 0x_8B, 0x_5B, 0x_CF, 0x_58, 0x_D3, 0x_A4, 0x_4E,
		0x_C4, 0x_70, 0x_E8, 0x_97, 0x_C9, 0x_13, 0x_B7, 0x_EF, 0x_4D, 0x_D2, 0x_DC, 0x_4A, 0x_24, 0x_B8, 0x_7E,
		0x_EC, 0x_E5, 0x_E0, 0x_23, 0x_F2, 0x_7D, 0x_46, 0x_02, 0x_88, 0x_78, 0x_22, 0x_69, 0x_99, 0x_3F, 0x_21,
		0x_AD, 0x_52, 0x_C5, 0x_77, 0x_8D, 0x_9D, 0x_37, 0x_8F, 0x_4F, 0x_BC, 0x_34, 0x_49, 0x_EA, 0x_79, 0x_F1,
		0x_62, 0x_B9, 0x_AC, 0x_2A, 0x_FA, 0x_3C, 0x_85, 0x_D1, 0x_12, 0x_A1, 0x_65, 0x_50, 0x_75, 0x_EE, 0x_6F,
		0x_BB, 0x_DE, 0x_AF, 0x_59, 0x_A0, 0x_1D, 0x_C8, 0x_94, 0x_CB, 0x_DF, 0x_48, 0x_B3, 0x_93, 0x_25, 0x_F3,
		0x_16, 0x_86, 0x_CE, 0x_14, 0x_BA, 0x_27, 0x_08, 0x_B6, 0x_8C, 0x_CC, 0x_CD, 0x_6A, 0x_BD, 0x_7B, 0x_2F,
		0x_9C, 0x_D4, 0x_32, 0x_E3, 0x_FD, 0x_5D, 0x_B4,
	];

	helper(S, BASE, -4_947_094);
}
// endregion
// region: s_has_signs_and_minus_99_893_589_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_99_893_589_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_D5, 0x_F6, 0x_AE, 0x_51,
		0x_20, 0x_26, 0x_18, 0x_C4, 0x_FC, 0x_3E, 0x_74, 0x_58, 0x_19, 0x_F7, 0x_42, 0x_5C, 0x_50, 0x_D9, 0x_B6,
		0x_1E, 0x_76, 0x_8B, 0x_98, 0x_CE, 0x_40, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_C4, 0x_BF, 0x_D3, 0x_4E, 0x_68, 0x_D5, 0x_06, 0x_D4, 0x_04, 0x_A6, 0x_5F, 0x_6E, 0x_26, 0x_87,
		0x_3E, 0x_58, 0x_BA, 0x_E2, 0x_AC, 0x_E9, 0x_D2, 0x_CC, 0x_CA, 0x_EB, 0x_64, 0x_EF, 0x_FB, 0x_4B, 0x_8B,
		0x_90, 0x_82, 0x_7C, 0x_CE, 0x_67, 0x_45, 0x_F8, 0x_A9, 0x_2F, 0x_E0, 0x_D0, 0x_C6, 0x_13, 0x_69, 0x_61,
		0x_03, 0x_38, 0x_32, 0x_E3, 0x_3C, 0x_24, 0x_E5, 0x_60, 0x_28, 0x_F9, 0x_6D, 0x_ED, 0x_75, 0x_E1, 0x_35,
		0x_77, 0x_36, 0x_F5, 0x_BB, 0x_76, 0x_9C, 0x_93, 0x_C2, 0x_8F, 0x_1B, 0x_22, 0x_9B, 0x_AF, 0x_AD, 0x_48,
		0x_DE, 0x_C3, 0x_92, 0x_43, 0x_63, 0x_EA, 0x_95, 0x_4C, 0x_65, 0x_D7, 0x_B7, 0x_23, 0x_2C, 0x_AE, 0x_7A,
		0x_85, 0x_52, 0x_F7, 0x_FD, 0x_2E, 0x_4D, 0x_10, 0x_F0, 0x_B3, 0x_66, 0x_1C, 0x_99, 0x_73, 0x_E6, 0x_1D,
		0x_CF, 0x_6F, 0x_9D, 0x_17, 0x_88, 0x_5C, 0x_DA, 0x_B6, 0x_55, 0x_8C, 0x_6B, 0x_25, 0x_BD, 0x_5E, 0x_B9,
		0x_51, 0x_31, 0x_C9, 0x_3F, 0x_7F, 0x_1A, 0x_80, 0x_33, 0x_EE, 0x_DF, 0x_E7, 0x_62, 0x_A1, 0x_D6, 0x_07,
		0x_46, 0x_EC, 0x_53, 0x_A2, 0x_19, 0x_E8, 0x_83, 0x_6C, 0x_D1, 0x_47, 0x_14, 0x_01, 0x_F4, 0x_D8, 0x_7D,
		0x_C5, 0x_74, 0x_9F, 0x_3B, 0x_AA, 0x_F6, 0x_39, 0x_02, 0x_AB, 0x_9E, 0x_FA, 0x_BE, 0x_8A, 0x_F1, 0x_96,
		0x_40, 0x_DD, 0x_CD, 0x_86, 0x_94, 0x_1E, 0x_B8, 0x_C8, 0x_FC, 0x_37, 0x_70, 0x_8D, 0x_C0, 0x_B4, 0x_18,
		0x_5A, 0x_B1, 0x_72, 0x_F2, 0x_21, 0x_6A, 0x_CB, 0x_50, 0x_4F, 0x_59, 0x_41, 0x_16, 0x_BC, 0x_9A, 0x_29,
		0x_DB, 0x_7B, 0x_B2, 0x_DC, 0x_5D, 0x_11, 0x_44, 0x_05, 0x_12, 0x_A8, 0x_08, 0x_89, 0x_79, 0x_4A, 0x_A3,
		0x_97, 0x_C1, 0x_2A, 0x_54, 0x_C7, 0x_84, 0x_1F, 0x_0E, 0x_57, 0x_8E, 0x_FE, 0x_81, 0x_B0, 0x_3D, 0x_E4,
		0x_A5, 0x_30, 0x_F3, 0x_D9, 0x_34, 0x_B5, 0x_78, 0x_42, 0x_91, 0x_5B, 0x_98, 0x_7E, 0x_27, 0x_0F, 0x_71,
		0x_FF, 0x_49, 0x_56, 0x_3A, 0x_A7, 0x_A0, 0x_15,
	];

	helper(S, BASE, -99_893_589);
}
// endregion
// region: s_has_signs_and_minus_437_403_082_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_minus_437_403_082_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_37, 0x_A0, 0x_CA, 0x_4E, 0x_09, 0x_FE, 0x_5C, 0x_75,
		0x_16, 0x_04, 0x_92, 0x_A2, 0x_BE, 0x_11, 0x_B4, 0x_92, 0x_01, 0x_E6, 0x_83, 0x_68, 0x_BF, 0x_3D, 0x_87,
		0x_62,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_D7, 0x_D8, 0x_4A, 0x_62, 0x_A8, 0x_A0, 0x_C8, 0x_8A, 0x_FF, 0x_A6, 0x_2A, 0x_30, 0x_AF, 0x_72,
		0x_B1, 0x_C5, 0x_A9, 0x_3E, 0x_9C, 0x_6B, 0x_87, 0x_EB, 0x_3F, 0x_91, 0x_58, 0x_22, 0x_56, 0x_F0, 0x_37,
		0x_2E, 0x_F6, 0x_96, 0x_7A, 0x_C6, 0x_92, 0x_E7, 0x_DB, 0x_27, 0x_25, 0x_44, 0x_D5, 0x_11, 0x_F2, 0x_82,
		0x_31, 0x_57, 0x_8C, 0x_3C, 0x_1B, 0x_0F, 0x_5E, 0x_83, 0x_10, 0x_9D, 0x_8F, 0x_49, 0x_BD, 0x_52, 0x_7C,
		0x_47, 0x_80, 0x_34, 0x_F3, 0x_A7, 0x_66, 0x_C2, 0x_1C, 0x_3A, 0x_26, 0x_FC, 0x_02, 0x_DA, 0x_14, 0x_B4,
		0x_C9, 0x_93, 0x_43, 0x_C4, 0x_B2, 0x_16, 0x_03, 0x_EF, 0x_AD, 0x_86, 0x_42, 0x_18, 0x_2C, 0x_E2, 0x_5A,
		0x_FE, 0x_8B, 0x_51, 0x_38, 0x_F7, 0x_13, 0x_AC, 0x_D1, 0x_BE, 0x_BF, 0x_97, 0x_EC, 0x_A4, 0x_53, 0x_2F,
		0x_6A, 0x_3B, 0x_94, 0x_A3, 0x_88, 0x_05, 0x_DF, 0x_95, 0x_46, 0x_07, 0x_77, 0x_B3, 0x_E1, 0x_75, 0x_CA,
		0x_DC, 0x_F9, 0x_67, 0x_D9, 0x_E5, 0x_F1, 0x_84, 0x_E9, 0x_9A, 0x_32, 0x_6C, 0x_68, 0x_DE, 0x_FB, 0x_23,
		0x_EA, 0x_D0, 0x_45, 0x_1F, 0x_D2, 0x_D4, 0x_7B, 0x_9E, 0x_BB, 0x_C0, 0x_65, 0x_FA, 0x_ED, 0x_0E, 0x_1D,
		0x_17, 0x_21, 0x_29, 0x_50, 0x_06, 0x_A2, 0x_CD, 0x_40, 0x_CC, 0x_F4, 0x_54, 0x_8E, 0x_3D, 0x_4B, 0x_A5,
		0x_41, 0x_81, 0x_FD, 0x_4E, 0x_6F, 0x_AE, 0x_63, 0x_BC, 0x_28, 0x_D6, 0x_4D, 0x_1A, 0x_04, 0x_B5, 0x_24,
		0x_6E, 0x_B7, 0x_76, 0x_B8, 0x_9F, 0x_B0, 0x_6D, 0x_7D, 0x_98, 0x_BA, 0x_DD, 0x_19, 0x_69, 0x_5F, 0x_CE,
		0x_1E, 0x_A1, 0x_89, 0x_CB, 0x_D3, 0x_90, 0x_7E, 0x_B6, 0x_4C, 0x_59, 0x_E8, 0x_C1, 0x_E6, 0x_64, 0x_71,
		0x_E0, 0x_C7, 0x_85, 0x_48, 0x_5C, 0x_CF, 0x_35, 0x_B9, 0x_70, 0x_78, 0x_15, 0x_F8, 0x_08, 0x_60, 0x_7F,
		0x_61, 0x_AA, 0x_EE, 0x_39, 0x_4F, 0x_55, 0x_74, 0x_99, 0x_C3, 0x_36, 0x_5B, 0x_F5, 0x_12, 0x_5D, 0x_73,
		0x_79, 0x_E4, 0x_8D, 0x_E3, 0x_AB, 0x_01, 0x_9B,
	];

	helper(S, BASE, -437_403_082);
}
// endregion
// region: s_has_zeros_and_minus_1_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_1_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_DA, 0x_B6, 0x_DA,
		0x_DA, 0x_3D, 0x_DA, 0x_DA, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_3D, 0x_DA,
		0x_DA, 0x_3D, 0x_DA, 0x_DA, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_DA,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_zeros_and_minus_30_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_30_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_62, 0x_62, 0x_62, 0x_62, 0x_EB, 0x_95, 0x_62, 0x_62,
		0x_62, 0x_EB, 0x_EB, 0x_62, 0x_62, 0x_EB, 0x_EB, 0x_62, 0x_EB, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_EB,
		0x_EB, 0x_EB, 0x_62, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_62,
	];

	helper(S, BASE, -30);
}
// endregion
// region: s_has_zeros_and_minus_462_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_462_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_C8, 0x_C8, 0x_C8, 0x_CA,
		0x_CA, 0x_C8, 0x_C8, 0x_C8, 0x_CA, 0x_10, 0x_CA, 0x_C8, 0x_CA, 0x_CA, 0x_CA, 0x_C8, 0x_CA, 0x_C8, 0x_CA,
		0x_C8,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_C8,
	];

	helper(S, BASE, -462);
}
// endregion
// region: s_has_zeros_and_minus_1_595_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_1_595_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_8C, 0x_8C, 0x_10, 0x_10, 0x_10, 0x_8C, 0x_8C, 0x_8C, 0x_10, 0x_8C, 0x_8C, 0x_14, 0x_10, 0x_8C, 0x_10,
		0x_8C, 0x_8C, 0x_8C, 0x_10, 0x_10, 0x_10, 0x_10, 0x_8C, 0x_10, 0x_10, 0x_10, 0x_10, 0x_8C, 0x_8C, 0x_10,
		0x_8C, 0x_8C, 0x_10, 0x_10, 0x_10, 0x_10, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_10, 0x_10, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_8C,
	];

	helper(S, BASE, -1_595);
}
// endregion
// region: s_has_zeros_and_minus_95_093_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_95_093_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D,
		0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D,
		0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_4D, 0x_EC, 0x_4D, 0x_EC,
		0x_EC, 0x_EC, 0x_4D, 0x_4D, 0x_EC, 0x_EC, 0x_4D, 0x_EC, 0x_EC, 0x_EC, 0x_4D, 0x_EC, 0x_4D, 0x_EC, 0x_0B,
		0x_EC, 0x_4D, 0x_EC, 0x_4D, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_4D, 0x_4D, 0x_EC, 0x_4D, 0x_EC, 0x_EC, 0x_4D,
		0x_4D, 0x_EC, 0x_EC, 0x_4D,
	];
	const BASE: &[u8] = &[
		0x_4D, 0x_EC,
	];

	helper(S, BASE, -95_093);
}
// endregion
// region: s_has_zeros_and_minus_756_078_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_756_078_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_C9, 0x_38, 0x_C9, 0x_C9, 0x_C9, 0x_38, 0x_38,
		0x_38, 0x_C9, 0x_38, 0x_38, 0x_C9, 0x_38, 0x_C9, 0x_C9, 0x_38, 0x_C9, 0x_C9, 0x_C9, 0x_38, 0x_16, 0x_38,
		0x_C9, 0x_38, 0x_C9, 0x_38, 0x_C9, 0x_38, 0x_38, 0x_38, 0x_C9, 0x_C9, 0x_38, 0x_C9, 0x_C9, 0x_38, 0x_C9,
		0x_38, 0x_C9, 0x_C9, 0x_38, 0x_38, 0x_38, 0x_38, 0x_C9, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_C9,
	];

	helper(S, BASE, -756_078);
}
// endregion
// region: s_has_zeros_and_minus_1_275_085_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_1_275_085_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_94, 0x_5C, 0x_5C, 0x_94,
		0x_94, 0x_5C, 0x_94, 0x_94, 0x_94, 0x_5C, 0x_94, 0x_5C, 0x_5C, 0x_94, 0x_94, 0x_5C, 0x_5C, 0x_94, 0x_94,
		0x_5C, 0x_94, 0x_A8, 0x_94, 0x_94, 0x_5C, 0x_94, 0x_94, 0x_94,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_94,
	];

	helper(S, BASE, -1_275_085);
}
// endregion
// region: s_has_zeros_and_minus_69_707_910_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_69_707_910_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_7A, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_7A, 0x_41, 0x_41, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_41, 0x_7A, 0x_41, 0x_7A, 0x_41,
		0x_41, 0x_41, 0x_7A, 0x_41, 0x_41, 0x_41, 0x_41, 0x_7A, 0x_7A, 0x_41, 0x_08, 0x_7A, 0x_7A, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_41, 0x_7A,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_7A,
	];

	helper(S, BASE, -69_707_910);
}
// endregion
// region: s_has_zeros_and_minus_683_510_258_in_base_2_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_683_510_258_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04,
		0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_CA, 0x_04, 0x_CA, 0x_04, 0x_04, 0x_04,
		0x_CA, 0x_04, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_04, 0x_CA, 0x_CA, 0x_04, 0x_04, 0x_04, 0x_CA, 0x_04, 0x_04,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_04, 0x_04, 0x_CA, 0x_04, 0x_23, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04,
		0x_04, 0x_04, 0x_CA, 0x_CA, 0x_04, 0x_CA, 0x_CA, 0x_04,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_CA,
	];

	helper(S, BASE, -683_510_258);
}
// endregion
// region: s_has_zeros_and_minus_6_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_6_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_A5, 0x_46, 0x_5A, 0x_46, 0x_D2, 0x_46, 0x_A5, 0x_D2, 0x_A5, 0x_D2,
		0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_D2, 0x_A5, 0x_D2, 0x_46, 0x_D2, 0x_A5, 0x_D2, 0x_A5, 0x_A5, 0x_A5, 0x_A5,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_D2, 0x_A5, 0x_A5, 0x_A5, 0x_D2, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_D2, 0x_A5,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_zeros_and_minus_99_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_99_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25,
		0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25,
		0x_25, 0x_25, 0x_54, 0x_25, 0x_A4, 0x_25, 0x_25, 0x_67, 0x_A4, 0x_A4, 0x_54, 0x_25, 0x_A4, 0x_25, 0x_25,
		0x_54, 0x_54, 0x_A4, 0x_54, 0x_54, 0x_25, 0x_A4, 0x_54, 0x_25, 0x_25, 0x_54, 0x_A4, 0x_25, 0x_25, 0x_54,
		0x_A4, 0x_A4, 0x_25, 0x_A4, 0x_54, 0x_A4, 0x_25, 0x_25, 0x_25, 0x_A4, 0x_25, 0x_A4, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_54, 0x_A4,
	];

	helper(S, BASE, -99);
}
// endregion
// region: s_has_zeros_and_minus_721_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_721_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_F7, 0x_95, 0x_95, 0x_95, 0x_95, 0x_F7, 0x_E8,
		0x_3F, 0x_95, 0x_E8, 0x_F7, 0x_E8, 0x_E8, 0x_F7, 0x_E8, 0x_F7, 0x_F7, 0x_95, 0x_F7, 0x_95, 0x_F7, 0x_E8,
		0x_E8, 0x_95, 0x_F7, 0x_95, 0x_95, 0x_F7, 0x_E8, 0x_F7, 0x_E8, 0x_F7, 0x_F7, 0x_E8, 0x_E8, 0x_E8, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_E8, 0x_95,
	];

	helper(S, BASE, -721);
}
// endregion
// region: s_has_zeros_and_minus_4_650_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_4_650_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_41, 0x_06, 0x_36, 0x_06, 0x_36, 0x_06, 0x_41, 0x_06, 0x_D0, 0x_41,
		0x_06, 0x_06, 0x_36, 0x_06, 0x_06, 0x_06, 0x_36, 0x_41, 0x_41, 0x_36, 0x_36, 0x_36, 0x_41, 0x_36, 0x_41,
		0x_36, 0x_36, 0x_06, 0x_41, 0x_36, 0x_36, 0x_36, 0x_06, 0x_06, 0x_06, 0x_36, 0x_41, 0x_41, 0x_41, 0x_41,
		0x_06, 0x_41, 0x_41, 0x_41, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_36, 0x_41,
	];

	helper(S, BASE, -4_650);
}
// endregion
// region: s_has_zeros_and_minus_47_053_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_47_053_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_68, 0x_68, 0x_68, 0x_68, 0x_D5, 0x_36, 0x_68, 0x_36, 0x_36, 0x_36, 0x_D5, 0x_D5, 0x_68, 0x_36,
		0x_A8, 0x_D5, 0x_36, 0x_D5, 0x_68, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_36, 0x_D5,
	];

	helper(S, BASE, -47_053);
}
// endregion
// region: s_has_zeros_and_minus_632_472_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_632_472_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_E9, 0x_B5, 0x_E9, 0x_E5, 0x_B5, 0x_E9, 0x_B5, 0x_E9, 0x_E5, 0x_B5, 0x_E5,
		0x_E5, 0x_B5, 0x_59, 0x_E5, 0x_B5, 0x_E9, 0x_E5, 0x_E5,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_E9, 0x_E5,
	];

	helper(S, BASE, -632_472);
}
// endregion
// region: s_has_zeros_and_minus_7_712_135_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_7_712_135_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_E3, 0x_E3,
		0x_D6, 0x_E3, 0x_E3, 0x_E3, 0x_D6, 0x_E3, 0x_E3, 0x_B3, 0x_B3, 0x_E3, 0x_E3, 0x_D6, 0x_D6, 0x_76, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_E3, 0x_E3, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_E3, 0x_E3, 0x_E3, 0x_B3, 0x_E3, 0x_E3,
		0x_D6, 0x_B3, 0x_E3, 0x_B3, 0x_E3, 0x_D6, 0x_B3, 0x_E3, 0x_D6, 0x_E3, 0x_D6, 0x_B3, 0x_D6, 0x_D6, 0x_E3,
		0x_E3, 0x_D6, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_E3, 0x_D6,
	];

	helper(S, BASE, -7_712_135);
}
// endregion
// region: s_has_zeros_and_minus_32_203_694_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_32_203_694_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_D9, 0x_9E, 0x_D9, 0x_9E, 0x_51, 0x_D9,
		0x_51, 0x_9E, 0x_51, 0x_9E, 0x_9E, 0x_51, 0x_51, 0x_51, 0x_9E, 0x_D9, 0x_FF, 0x_51, 0x_9E, 0x_51, 0x_9E,
		0x_9E, 0x_9E, 0x_51, 0x_D9, 0x_D9, 0x_D9, 0x_51, 0x_D9, 0x_51, 0x_9E, 0x_D9, 0x_51, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_51, 0x_D9,
	];

	helper(S, BASE, -32_203_694);
}
// endregion
// region: s_has_zeros_and_minus_254_846_291_in_base_3_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_254_846_291_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D,
		0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D,
		0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_7D, 0x_B5, 0x_78,
		0x_78, 0x_78, 0x_7D, 0x_78, 0x_B5, 0x_B5, 0x_78, 0x_B5, 0x_B5, 0x_78, 0x_B5, 0x_7D, 0x_B5, 0x_B5, 0x_B5,
		0x_78, 0x_FB, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_78, 0x_7D, 0x_7D, 0x_B5, 0x_78, 0x_7D, 0x_B5, 0x_78,
		0x_B5, 0x_B5, 0x_7D, 0x_B5, 0x_7D, 0x_B5, 0x_B5, 0x_78, 0x_78, 0x_78, 0x_7D, 0x_7D, 0x_78, 0x_78, 0x_B5,
		0x_B5, 0x_78, 0x_B5, 0x_7D, 0x_7D, 0x_78, 0x_78, 0x_7D, 0x_7D, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_7D, 0x_B5, 0x_78,
	];

	helper(S, BASE, -254_846_291);
}
// endregion
// region: s_has_zeros_and_minus_7_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_7_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_18, 0x_95,
		0x_D6, 0x_A0, 0x_6D,
	];
	const BASE: &[u8] = &[
		0x_B9, 0x_18, 0x_95, 0x_A0, 0x_6D,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_zeros_and_minus_84_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_84_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_82, 0x_59, 0x_DC, 0x_0C,
		0x_48, 0x_DC, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_59, 0x_97, 0x_82, 0x_DC,
	];

	helper(S, BASE, -84);
}
// endregion
// region: s_has_zeros_and_minus_823_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_823_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_22, 0x_22, 0x_4F,
		0x_5B, 0x_A9, 0x_14, 0x_5B, 0x_4F, 0x_F6, 0x_22, 0x_22, 0x_A9,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_22, 0x_4F, 0x_A9, 0x_5B,
	];

	helper(S, BASE, -823);
}
// endregion
// region: s_has_zeros_and_minus_5_697_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_5_697_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_B0, 0x_42, 0x_22, 0x_FB, 0x_42, 0x_FB,
		0x_0B, 0x_FB, 0x_FB, 0x_B9, 0x_42, 0x_22, 0x_B0, 0x_B0, 0x_42, 0x_22, 0x_B9, 0x_42, 0x_42, 0x_B0, 0x_42,
		0x_42, 0x_42, 0x_42, 0x_FB, 0x_FB, 0x_B0, 0x_42, 0x_FB, 0x_22, 0x_22, 0x_B9, 0x_42, 0x_22, 0x_FB, 0x_FB,
		0x_B0, 0x_B9, 0x_22, 0x_FB, 0x_42, 0x_42, 0x_B0, 0x_22, 0x_FB, 0x_FB, 0x_B9, 0x_FB, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_B0, 0x_FB, 0x_B9, 0x_42,
	];

	helper(S, BASE, -5_697);
}
// endregion
// region: s_has_zeros_and_minus_12_931_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_12_931_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_90, 0x_71, 0x_C8, 0x_DC, 0x_19, 0x_19,
		0x_89, 0x_DC, 0x_90, 0x_19, 0x_DC, 0x_DC, 0x_71, 0x_71, 0x_C8, 0x_19, 0x_90, 0x_90, 0x_C8, 0x_DC, 0x_C8,
		0x_71, 0x_71, 0x_DC, 0x_71, 0x_71, 0x_19, 0x_71, 0x_DC, 0x_DC, 0x_DC, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_71, 0x_19, 0x_DC, 0x_C8, 0x_90,
	];

	helper(S, BASE, -12_931);
}
// endregion
// region: s_has_zeros_and_minus_188_637_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_188_637_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_F0, 0x_F0, 0x_07, 0x_A0,
		0x_2C, 0x_07, 0x_F0, 0x_F0, 0x_65, 0x_F0, 0x_F0, 0x_F0, 0x_2C, 0x_07, 0x_07, 0x_A0, 0x_2C, 0x_2C, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_A0, 0x_F0, 0x_6F, 0x_2C,
	];

	helper(S, BASE, -188_637);
}
// endregion
// region: s_has_zeros_and_minus_8_769_058_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_8_769_058_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35,
		0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35,
		0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_96, 0x_FB, 0x_FB,
		0x_A1, 0x_A1, 0x_35, 0x_FB, 0x_FB, 0x_A1, 0x_F7, 0x_6B, 0x_F7, 0x_A1, 0x_A1, 0x_A1, 0x_35, 0x_96, 0x_A1,
		0x_F7, 0x_A1, 0x_35, 0x_F7, 0x_35, 0x_A1, 0x_96, 0x_35, 0x_A1, 0x_35, 0x_35, 0x_FB, 0x_96, 0x_96, 0x_35,
		0x_A1, 0x_A1, 0x_96, 0x_A1, 0x_A1, 0x_FB, 0x_FB, 0x_35, 0x_F7, 0x_FB, 0x_F7, 0x_F7, 0x_96, 0x_FB, 0x_35,
		0x_A1, 0x_A1, 0x_96, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_A1, 0x_FB, 0x_F7, 0x_96,
	];

	helper(S, BASE, -8_769_058);
}
// endregion
// region: s_has_zeros_and_minus_57_873_108_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_57_873_108_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_FB, 0x_33, 0x_A7, 0x_37,
		0x_33, 0x_37, 0x_A7, 0x_FB, 0x_A7, 0x_A7, 0x_FB, 0x_37, 0x_4E, 0x_A7, 0x_37, 0x_37, 0x_37, 0x_33, 0x_37,
		0x_FB, 0x_A7, 0x_37, 0x_33, 0x_FB, 0x_37, 0x_A9, 0x_37, 0x_FB, 0x_37, 0x_37, 0x_A9, 0x_33, 0x_A9, 0x_33,
		0x_A7, 0x_A7,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_FB, 0x_A9, 0x_37, 0x_A7,
	];

	helper(S, BASE, -57_873_108);
}
// endregion
// region: s_has_zeros_and_minus_142_146_134_in_base_5_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_142_146_134_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5, 0x_F5,
		0x_F5, 0x_F5, 0x_F5, 0x_E2, 0x_0F, 0x_E2, 0x_30, 0x_0F, 0x_E2, 0x_FD, 0x_30, 0x_0F, 0x_F5, 0x_FD, 0x_0F,
		0x_86, 0x_FD, 0x_E2, 0x_FD, 0x_F5, 0x_E2, 0x_E2, 0x_0F, 0x_30, 0x_F5, 0x_FD, 0x_0F, 0x_F5, 0x_0F, 0x_E2,
		0x_FD,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_FD, 0x_E2, 0x_30, 0x_0F,
	];

	helper(S, BASE, -142_146_134);
}
// endregion
// region: s_has_zeros_and_minus_5_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_5_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_A1, 0x_DB,
		0x_93, 0x_37, 0x_DB, 0x_4C,
	];
	const BASE: &[u8] = &[
		0x_A1, 0x_D0, 0x_4C, 0x_9B, 0x_37, 0x_DB, 0x_97,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_zeros_and_minus_41_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_41_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_6C, 0x_88, 0x_1B, 0x_2E, 0x_E8, 0x_88,
		0x_2E, 0x_E8, 0x_88, 0x_6C, 0x_A5, 0x_A5, 0x_E8, 0x_9C, 0x_E8, 0x_96, 0x_A5, 0x_9C, 0x_E8, 0x_A5, 0x_96,
		0x_9C, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_2E, 0x_A5, 0x_96, 0x_E8, 0x_6C, 0x_88,
	];

	helper(S, BASE, -41);
}
// endregion
// region: s_has_zeros_and_minus_802_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_802_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_D5, 0x_D5, 0x_D5, 0x_22, 0x_3B, 0x_CB, 0x_D5, 0x_22, 0x_54, 0x_CB, 0x_54,
		0x_D5, 0x_54, 0x_68, 0x_CB, 0x_22, 0x_22, 0x_60, 0x_22, 0x_CB, 0x_CB, 0x_60, 0x_CB, 0x_12, 0x_60, 0x_22,
		0x_68, 0x_D5, 0x_60, 0x_60, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_12, 0x_D5, 0x_54, 0x_22, 0x_60, 0x_CB,
	];

	helper(S, BASE, -802);
}
// endregion
// region: s_has_zeros_and_minus_7_199_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_7_199_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_43, 0x_5A, 0x_5A, 0x_5A, 0x_14,
		0x_EC, 0x_43, 0x_38, 0x_5A, 0x_5A, 0x_14, 0x_38, 0x_83, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_30, 0x_43, 0x_14, 0x_4D, 0x_83, 0x_5A,
	];

	helper(S, BASE, -7_199);
}
// endregion
// region: s_has_zeros_and_minus_60_940_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_60_940_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_61, 0x_3B, 0x_E7, 0x_3B, 0x_3B, 0x_C3, 0x_7E, 0x_3B,
		0x_3B, 0x_C3, 0x_F3, 0x_3B, 0x_1C, 0x_11, 0x_F3, 0x_E7, 0x_1C, 0x_3B, 0x_C3, 0x_1C, 0x_11, 0x_F3, 0x_3B,
		0x_3B, 0x_C3, 0x_C3, 0x_F3, 0x_1C, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_11, 0x_E7, 0x_61, 0x_3B, 0x_C3, 0x_F3,
	];

	helper(S, BASE, -60_940);
}
// endregion
// region: s_has_zeros_and_minus_677_780_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_677_780_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_21, 0x_21, 0x_9B, 0x_9B,
		0x_C9, 0x_E0, 0x_21, 0x_57, 0x_C9, 0x_9B, 0x_D7, 0x_21, 0x_D7, 0x_73, 0x_C9, 0x_73, 0x_21, 0x_C9, 0x_D7,
		0x_C9, 0x_C9,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_E0, 0x_9B, 0x_68, 0x_73, 0x_21, 0x_D7,
	];

	helper(S, BASE, -677_780);
}
// endregion
// region: s_has_zeros_and_minus_7_566_286_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_7_566_286_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_45, 0x_AD,
		0x_45, 0x_AD, 0x_45, 0x_AD, 0x_45, 0x_3F, 0x_3F, 0x_A4, 0x_AD, 0x_BA, 0x_F1, 0x_E3, 0x_AD, 0x_40, 0x_45,
		0x_AD, 0x_BA, 0x_AD, 0x_40, 0x_F1, 0x_AD, 0x_45, 0x_F1, 0x_40, 0x_AD, 0x_40, 0x_40, 0x_F1, 0x_AD, 0x_3F,
		0x_AD, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_45, 0x_AD, 0x_40, 0x_BA, 0x_F1, 0x_E3,
	];

	helper(S, BASE, -7_566_286);
}
// endregion
// region: s_has_zeros_and_minus_22_792_658_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_22_792_658_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_6E, 0x_A4, 0x_27, 0x_B9, 0x_C8, 0x_A4, 0x_A4, 0x_DC,
		0x_C8, 0x_4B, 0x_6E, 0x_4F, 0x_C8, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_4F, 0x_DC, 0x_6E, 0x_27, 0x_B9, 0x_A4,
	];

	helper(S, BASE, -22_792_658);
}
// endregion
// region: s_has_zeros_and_minus_861_048_935_in_base_7_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_861_048_935_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_FC, 0x_23, 0x_5C, 0x_5C, 0x_FC, 0x_1E, 0x_FC,
		0x_4C, 0x_1E, 0x_FB, 0x_1E, 0x_7F, 0x_23, 0x_23, 0x_1E, 0x_4C, 0x_5C, 0x_23, 0x_21, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_FB, 0x_5C, 0x_FC, 0x_21, 0x_1E, 0x_4C,
	];

	helper(S, BASE, -861_048_935);
}
// endregion
// region: s_has_zeros_and_minus_9_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_9_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F,
		0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F,
		0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_93, 0x_2E, 0x_6F, 0x_93, 0x_62, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_92, 0x_9D, 0x_54, 0x_80, 0x_2F, 0x_43, 0x_89, 0x_62, 0x_93, 0x_6E,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_zeros_and_minus_73_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_73_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_D2, 0x_C4, 0x_3E, 0x_DC, 0x_06, 0x_06, 0x_C4, 0x_C4,
		0x_D2, 0x_DC, 0x_86, 0x_E8, 0x_60, 0x_B3, 0x_60, 0x_D2, 0x_E8, 0x_86, 0x_E8, 0x_DC, 0x_B3, 0x_86, 0x_8C,
		0x_D2, 0x_60, 0x_A4, 0x_C4, 0x_DC,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_8C, 0x_60, 0x_DC, 0x_06, 0x_86, 0x_D2, 0x_C4, 0x_E8, 0x_A4, 0x_1A,
	];

	helper(S, BASE, -73);
}
// endregion
// region: s_has_zeros_and_minus_862_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_862_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F4, 0x_F4, 0x_AD, 0x_DF, 0x_5D, 0x_F0, 0x_F4, 0x_AD, 0x_DF, 0x_2F, 0x_DF, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_DF, 0x_94, 0x_2F, 0x_5D, 0x_59, 0x_D8, 0x_AD, 0x_64, 0x_DE, 0x_24,
	];

	helper(S, BASE, -862);
}
// endregion
// region: s_has_zeros_and_minus_7_429_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_7_429_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07,
		0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_CC, 0x_94, 0x_C7, 0x_C7,
		0x_4F, 0x_E4, 0x_E4, 0x_E4, 0x_C7, 0x_A2, 0x_E4, 0x_26, 0x_26, 0x_9C, 0x_D8, 0x_9C, 0x_D8, 0x_E4, 0x_26,
		0x_BF, 0x_BF,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_9C, 0x_E4, 0x_A2, 0x_C7, 0x_CC, 0x_94, 0x_D8, 0x_26, 0x_BF, 0x_AF,
	];

	helper(S, BASE, -7_429);
}
// endregion
// region: s_has_zeros_and_minus_84_472_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_84_472_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_EA, 0x_2F, 0x_EA, 0x_1E, 0x_C3, 0x_BD, 0x_EA,
		0x_B9, 0x_B9, 0x_1E, 0x_2F, 0x_68, 0x_2F, 0x_B7, 0x_DD, 0x_EA, 0x_B9, 0x_EA, 0x_B9, 0x_6C, 0x_B9, 0x_B7,
		0x_B7, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_1E, 0x_DD, 0x_C3, 0x_6C, 0x_EA, 0x_B4, 0x_68, 0x_2F, 0x_B9, 0x_B7,
	];

	helper(S, BASE, -84_472);
}
// endregion
// region: s_has_zeros_and_minus_238_168_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_238_168_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A,
		0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_69, 0x_99, 0x_21, 0x_F8, 0x_2C, 0x_47, 0x_81, 0x_7F, 0x_47,
		0x_2C, 0x_56, 0x_56, 0x_99, 0x_5A, 0x_A5, 0x_78, 0x_99, 0x_99, 0x_99, 0x_A5, 0x_99, 0x_A5, 0x_A5, 0x_A5,
		0x_56, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_69, 0x_21, 0x_2C, 0x_78, 0x_99, 0x_A5, 0x_47, 0x_7F, 0x_56, 0x_F8,
	];

	helper(S, BASE, -238_168);
}
// endregion
// region: s_has_zeros_and_minus_3_620_674_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_3_620_674_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_61, 0x_9B, 0x_18, 0x_74, 0x_61,
		0x_53, 0x_61, 0x_2F, 0x_74, 0x_0F, 0x_85, 0x_74, 0x_85, 0x_AD, 0x_61, 0x_61, 0x_61, 0x_74, 0x_63, 0x_82,
		0x_85, 0x_AD, 0x_85, 0x_0F,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_82, 0x_61, 0x_74, 0x_63, 0x_18, 0x_0F, 0x_D5, 0x_85, 0x_AD, 0x_53,
	];

	helper(S, BASE, -3_620_674);
}
// endregion
// region: s_has_zeros_and_minus_98_574_877_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_98_574_877_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B,
		0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_61, 0x_5B, 0x_7F, 0x_5B, 0x_E9, 0x_E9,
		0x_DD, 0x_61, 0x_6C, 0x_7F, 0x_3E, 0x_4F, 0x_1F, 0x_E9, 0x_1F, 0x_7F, 0x_E9, 0x_DD, 0x_E9, 0x_1F, 0x_1F,
		0x_E9, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_4F, 0x_39, 0x_3E, 0x_DD, 0x_61, 0x_A3, 0x_7F, 0x_E9, 0x_BA, 0x_1F,
	];

	helper(S, BASE, -98_574_877);
}
// endregion
// region: s_has_zeros_and_minus_690_343_677_in_base_11_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_690_343_677_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_8F,
		0x_9C, 0x_12, 0x_CB, 0x_D1, 0x_12, 0x_12, 0x_CB, 0x_A5, 0x_C0, 0x_95, 0x_6E, 0x_12, 0x_9C, 0x_CB, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_A5, 0x_9C, 0x_8F, 0x_12, 0x_D1, 0x_6E, 0x_CB, 0x_97, 0x_37, 0x_95,
	];

	helper(S, BASE, -690_343_677);
}
// endregion
// region: s_has_zeros_and_minus_4_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_4_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_0F, 0x_FA, 0x_33, 0x_52, 0x_77, 0x_1A, 0x_B1, 0x_6A, 0x_6C, 0x_6A,
		0x_33, 0x_6C, 0x_33, 0x_0F, 0x_77, 0x_33, 0x_6C, 0x_52, 0x_8E, 0x_AD, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_6A, 0x_6C, 0x_52, 0x_0F, 0x_AD, 0x_B1, 0x_8E, 0x_1A, 0x_14, 0x_77, 0x_33, 0x_15,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_zeros_and_minus_56_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_56_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85,
		0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85,
		0x_97, 0x_97, 0x_11, 0x_97, 0x_E6, 0x_1D, 0x_F3, 0x_AC, 0x_41, 0x_97, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_7D, 0x_5C, 0x_1D, 0x_97, 0x_89, 0x_F3, 0x_C9, 0x_AC, 0x_E6, 0x_DD, 0x_D2, 0x_41,
	];

	helper(S, BASE, -56);
}
// endregion
// region: s_has_zeros_and_minus_464_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_464_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97,
		0x_97, 0x_97, 0x_97, 0x_97, 0x_30, 0x_70, 0x_70, 0x_AF, 0x_3E, 0x_30, 0x_97, 0x_CF, 0x_EA, 0x_E5, 0x_72,
		0x_8C, 0x_30, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_C0, 0x_30, 0x_EA, 0x_CF, 0x_E5, 0x_8C, 0x_4F, 0x_72, 0x_70, 0x_EF, 0x_E2, 0x_3E,
	];

	helper(S, BASE, -464);
}
// endregion
// region: s_has_zeros_and_minus_8_986_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_8_986_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC,
		0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_FA, 0x_6F, 0x_C0, 0x_74, 0x_C1, 0x_43,
		0x_7B, 0x_6F, 0x_BE, 0x_8E, 0x_77, 0x_7B, 0x_AC, 0x_DC, 0x_7B, 0x_C0, 0x_FA, 0x_8E, 0x_FA, 0x_BE, 0x_DC,
		0x_AC, 0x_BE, 0x_FA, 0x_DC, 0x_C0, 0x_BE, 0x_AC, 0x_C0, 0x_1E, 0x_C0, 0x_1E, 0x_43, 0x_43, 0x_FA, 0x_1E,
		0x_6F, 0x_FA, 0x_1E, 0x_74, 0x_FA,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_6F, 0x_C0, 0x_74, 0x_FA, 0x_43, 0x_BE, 0x_77, 0x_1E, 0x_DC, 0x_8E, 0x_7B, 0x_7F,
	];

	helper(S, BASE, -8_986);
}
// endregion
// region: s_has_zeros_and_minus_54_220_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_54_220_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39,
		0x_39, 0x_49, 0x_21, 0x_8B, 0x_04, 0x_04, 0x_EA, 0x_81, 0x_F9, 0x_5A, 0x_42, 0x_39, 0x_87, 0x_0F, 0x_87,
		0x_39, 0x_30, 0x_04, 0x_42, 0x_30, 0x_0F, 0x_0F, 0x_86, 0x_04, 0x_F9, 0x_49, 0x_49, 0x_39, 0x_49, 0x_39,
		0x_81, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_49, 0x_0F, 0x_42, 0x_F9, 0x_87, 0x_86, 0x_81, 0x_8B, 0x_5A, 0x_04, 0x_21, 0x_30,
	];

	helper(S, BASE, -54_220);
}
// endregion
// region: s_has_zeros_and_minus_525_052_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_525_052_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_60, 0x_9B, 0x_F9, 0x_ED, 0x_8B, 0x_FE, 0x_51, 0x_8B,
		0x_8B, 0x_8B, 0x_A8, 0x_44, 0x_8B, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_60, 0x_A8, 0x_5C, 0x_F9, 0x_9B, 0x_C6, 0x_6A, 0x_FE, 0x_44, 0x_8B, 0x_FC, 0x_ED,
	];

	helper(S, BASE, -525_052);
}
// endregion
// region: s_has_zeros_and_minus_6_180_577_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_6_180_577_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2,
		0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2,
		0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_0E, 0x_6E, 0x_80, 0x_BA, 0x_99, 0x_97, 0x_B2, 0x_9E, 0x_D8, 0x_B2,
		0x_99, 0x_1A, 0x_D8, 0x_99, 0x_42, 0x_DD, 0x_B2, 0x_42, 0x_80, 0x_99, 0x_08, 0x_97, 0x_BA, 0x_99, 0x_42,
		0x_DD, 0x_99, 0x_B2, 0x_0E, 0x_6E, 0x_0E, 0x_1A, 0x_D8, 0x_DD, 0x_1A, 0x_42, 0x_08, 0x_6E, 0x_0E, 0x_1A,
		0x_B2, 0x_42, 0x_DD, 0x_6E, 0x_32, 0x_1A, 0x_97, 0x_DD, 0x_80,
	];
	const BASE: &[u8] = &[
		0x_B2, 0x_0E, 0x_99, 0x_6E, 0x_32, 0x_BA, 0x_97, 0x_1A, 0x_80, 0x_D8, 0x_42, 0x_08, 0x_DD,
	];

	helper(S, BASE, -6_180_577);
}
// endregion
// region: s_has_zeros_and_minus_83_708_809_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_83_708_809_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A,
		0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_C4, 0x_4A, 0x_4A, 0x_21, 0x_F3, 0x_21, 0x_21, 0x_C3, 0x_BA, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_C4, 0x_C3, 0x_F9, 0x_4A, 0x_21, 0x_10, 0x_02, 0x_6B, 0x_D1, 0x_D4, 0x_F3, 0x_66,
	];

	helper(S, BASE, -83_708_809);
}
// endregion
// region: s_has_zeros_and_minus_452_366_572_in_base_13_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_452_366_572_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02,
		0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02,
		0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_90, 0x_8D,
		0x_A9, 0x_15, 0x_90, 0x_83, 0x_96, 0x_E6, 0x_CF, 0x_FE, 0x_15, 0x_86, 0x_83, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_86, 0x_8D, 0x_96, 0x_15, 0x_16, 0x_B2, 0x_90, 0x_E6, 0x_A9, 0x_89, 0x_FE, 0x_83,
	];

	helper(S, BASE, -452_366_572);
}
// endregion
// region: s_has_zeros_and_minus_9_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_9_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78,
		0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_D4, 0x_3E, 0x_1D, 0x_E6, 0x_4F, 0x_4F,
		0x_9B, 0x_34, 0x_34, 0x_47, 0x_34, 0x_84, 0x_1D, 0x_9B, 0x_CE, 0x_1D, 0x_CE, 0x_4F, 0x_5C, 0x_D4, 0x_9C,
		0x_1D, 0x_D5, 0x_9C, 0x_78, 0x_47, 0x_1D, 0x_D5, 0x_74, 0x_4F, 0x_E7, 0x_74, 0x_E9, 0x_29, 0x_D4, 0x_C8,
		0x_29, 0x_78, 0x_9B, 0x_9C, 0x_74, 0x_34, 0x_E7, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_E9, 0x_84, 0x_4F, 0x_9C, 0x_CE, 0x_31, 0x_1D, 0x_C8, 0x_D4, 0x_29, 0x_5C, 0x_E6, 0x_74, 0x_D5,
		0x_47, 0x_E7, 0x_9B, 0x_34,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_zeros_and_minus_60_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_60_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_B9, 0x_B9, 0x_8C, 0x_18, 0x_6C, 0x_66, 0x_29, 0x_FB, 0x_29, 0x_18,
		0x_2F, 0x_93, 0x_E9, 0x_53, 0x_18, 0x_A7, 0x_E9, 0x_3C, 0x_29, 0x_93, 0x_FB, 0x_3C, 0x_E9, 0x_18, 0x_2E,
		0x_66, 0x_53, 0x_6F, 0x_C9, 0x_18, 0x_6F, 0x_C9, 0x_2F, 0x_6F, 0x_A7, 0x_18, 0x_6F, 0x_18, 0x_4B, 0x_E9,
		0x_3C, 0x_E9, 0x_66, 0x_29, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_6C, 0x_FB, 0x_B9, 0x_A7, 0x_E9, 0x_3C, 0x_2F, 0x_18, 0x_93, 0x_29, 0x_D5, 0x_66, 0x_11, 0x_6F,
		0x_2E, 0x_4B, 0x_84, 0x_53,
	];

	helper(S, BASE, -60);
}
// endregion
// region: s_has_zeros_and_minus_136_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_136_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2,
		0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_E2, 0x_B0, 0x_47, 0x_68, 0x_A6, 0x_88, 0x_57, 0x_88,
		0x_9E, 0x_F4, 0x_BB, 0x_E2, 0x_E2, 0x_CD, 0x_E2, 0x_63, 0x_EA, 0x_63, 0x_B7, 0x_F4, 0x_9E, 0x_B7, 0x_47,
		0x_88, 0x_E2, 0x_63, 0x_63, 0x_E2, 0x_CD, 0x_18, 0x_57, 0x_F8, 0x_47, 0x_88, 0x_55, 0x_F4, 0x_E2, 0x_E2,
		0x_CD, 0x_57, 0x_88,
	];
	const BASE: &[u8] = &[
		0x_E2, 0x_CC, 0x_F8, 0x_47, 0x_57, 0x_32, 0x_B7, 0x_B0, 0x_CD, 0x_F4, 0x_9E, 0x_55, 0x_63, 0x_BB, 0x_88,
		0x_A8, 0x_A6, 0x_18, 0x_EA,
	];

	helper(S, BASE, -136);
}
// endregion
// region: s_has_zeros_and_minus_1_587_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_1_587_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_76, 0x_16, 0x_A3, 0x_FC, 0x_B9, 0x_B3, 0x_F6, 0x_56, 0x_6C, 0x_16, 0x_C6, 0x_8B, 0x_3E, 0x_76,
		0x_3E, 0x_8B, 0x_D2, 0x_8B, 0x_5C, 0x_77, 0x_D2, 0x_5C, 0x_16, 0x_3E, 0x_F6, 0x_6C, 0x_5C, 0x_5C, 0x_8B,
		0x_77, 0x_F6, 0x_76, 0x_93, 0x_5C, 0x_93, 0x_D2, 0x_A3, 0x_C7, 0x_3E, 0x_F6, 0x_A3, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_3E, 0x_F6, 0x_90, 0x_16, 0x_C7, 0x_D2, 0x_A3, 0x_B3, 0x_67, 0x_FC, 0x_8B, 0x_77, 0x_5C, 0x_C6,
		0x_56, 0x_93, 0x_6C, 0x_F3,
	];

	helper(S, BASE, -1_587);
}
// endregion
// region: s_has_zeros_and_minus_36_555_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_36_555_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36,
		0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36,
		0x_36, 0x_36, 0x_E4, 0x_59, 0x_64, 0x_B4, 0x_9E, 0x_E6, 0x_B8, 0x_B8, 0x_E0, 0x_39, 0x_E0, 0x_C5, 0x_64,
		0x_1F, 0x_EC, 0x_64, 0x_FA, 0x_64, 0x_9B, 0x_FA, 0x_59, 0x_E4, 0x_59, 0x_B8, 0x_E4, 0x_CA, 0x_84, 0x_EC,
		0x_EC, 0x_1F, 0x_38, 0x_B8, 0x_64, 0x_B4,
	];
	const BASE: &[u8] = &[
		0x_36, 0x_7B, 0x_FA, 0x_F7, 0x_64, 0x_E4, 0x_59, 0x_84, 0x_EC, 0x_B8, 0x_CA, 0x_1F, 0x_C5, 0x_9B, 0x_E0,
		0x_38, 0x_39, 0x_E6, 0x_B4,
	];

	helper(S, BASE, -36_555);
}
// endregion
// region: s_has_zeros_and_minus_273_200_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_273_200_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_1D, 0x_7C, 0x_22, 0x_1E, 0x_2F, 0x_37, 0x_F4, 0x_A0,
		0x_79, 0x_A9, 0x_A0, 0x_2F, 0x_E2, 0x_A0, 0x_22, 0x_F4, 0x_7F, 0x_1C, 0x_C4, 0x_7F, 0x_DA, 0x_1D, 0x_79,
		0x_A0,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_7C, 0x_1D, 0x_A3, 0x_1C, 0x_A9, 0x_1F, 0x_FF, 0x_7F, 0x_C8, 0x_A0, 0x_E2, 0x_79, 0x_DA, 0x_1E,
		0x_22, 0x_46, 0x_F4, 0x_2F,
	];

	helper(S, BASE, -273_200);
}
// endregion
// region: s_has_zeros_and_minus_2_135_771_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_135_771_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_89, 0x_89, 0x_89, 0x_89, 0x_89, 0x_89, 0x_89, 0x_89, 0x_89, 0x_89, 0x_89, 0x_89, 0x_89, 0x_89,
		0x_89, 0x_89, 0x_89, 0x_BF, 0x_9C, 0x_9C, 0x_7E, 0x_89, 0x_C4, 0x_89, 0x_9C, 0x_A0, 0x_BF, 0x_7E, 0x_96,
		0x_46, 0x_7E, 0x_BD, 0x_96, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_A6, 0x_E4, 0x_A0, 0x_CE, 0x_7E, 0x_3E, 0x_9C, 0x_46, 0x_96, 0x_5E, 0x_AB, 0x_BD, 0x_7B, 0x_7F,
		0x_68, 0x_BF, 0x_B0, 0x_6E,
	];

	helper(S, BASE, -2_135_771);
}
// endregion
// region: s_has_zeros_and_minus_18_409_980_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_18_409_980_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_BA, 0x_1F, 0x_EE,
		0x_4C, 0x_5B, 0x_16, 0x_84, 0x_8C, 0x_5B, 0x_61, 0x_4C, 0x_5B, 0x_BA, 0x_26, 0x_1F, 0x_02, 0x_E7, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_4C, 0x_1A, 0x_5B, 0x_2C, 0x_EE, 0x_16, 0x_BA, 0x_1F, 0x_8F, 0x_11, 0x_21, 0x_02, 0x_8D, 0x_B1,
		0x_26, 0x_E7, 0x_8C, 0x_33,
	];

	helper(S, BASE, -18_409_980);
}
// endregion
// region: s_has_zeros_and_minus_431_334_975_in_base_19_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_431_334_975_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_CD, 0x_29,
		0x_29, 0x_B3, 0x_6D, 0x_FE, 0x_53, 0x_D9, 0x_A8, 0x_C8, 0x_7F, 0x_86, 0x_42, 0x_B4, 0x_7F, 0x_42, 0x_B4,
		0x_86, 0x_71, 0x_53, 0x_CD, 0x_CD, 0x_CD, 0x_53, 0x_5F, 0x_ED, 0x_A8,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_71, 0x_31, 0x_29, 0x_ED, 0x_78, 0x_42, 0x_A8, 0x_54, 0x_CD, 0x_86, 0x_74, 0x_7F, 0x_FE, 0x_B3,
		0x_53, 0x_C8, 0x_B4, 0x_6D,
	];

	helper(S, BASE, -431_334_975);
}
// endregion
// region: s_has_zeros_and_minus_6_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_6_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E,
		0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_9E, 0x_26, 0x_DA,
		0x_F7, 0x_42, 0x_25, 0x_3A, 0x_4A, 0x_92, 0x_7E, 0x_E3, 0x_92, 0x_6B, 0x_25, 0x_94, 0x_3A, 0x_26, 0x_64,
		0x_D3, 0x_2F, 0x_AF, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_9E, 0x_3A, 0x_D5, 0x_DF, 0x_C9, 0x_27, 0x_26, 0x_25, 0x_AF, 0x_79, 0x_47, 0x_B3, 0x_BA, 0x_5C, 0x_8F,
		0x_F7, 0x_80, 0x_33, 0x_A2, 0x_89, 0x_2F, 0x_E3, 0x_D0, 0x_E8, 0x_64, 0x_6B, 0x_4A, 0x_99, 0x_B4, 0x_35,
		0x_D3, 0x_92, 0x_85, 0x_42, 0x_7E, 0x_19, 0x_94, 0x_F3, 0x_45, 0x_DD, 0x_93, 0x_4E,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_zeros_and_minus_28_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_28_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_59, 0x_59, 0x_59, 0x_59, 0x_6A, 0x_85, 0x_D6, 0x_84, 0x_2E, 0x_52, 0x_E9, 0x_74, 0x_40, 0x_40,
		0x_43, 0x_2E, 0x_2A, 0x_BA, 0x_DE, 0x_35, 0x_46, 0x_3F, 0x_72, 0x_72, 0x_16, 0x_DE, 0x_E5, 0x_52,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_DE, 0x_F9, 0x_43, 0x_68, 0x_5F, 0x_DF, 0x_DC, 0x_53, 0x_E8, 0x_AE, 0x_52, 0x_84, 0x_BC, 0x_73,
		0x_E9, 0x_BA, 0x_38, 0x_FB, 0x_B6, 0x_07, 0x_16, 0x_3F, 0x_D6, 0x_72, 0x_87, 0x_64, 0x_35, 0x_6A, 0x_6D,
		0x_B5, 0x_74, 0x_EC, 0x_2E, 0x_D0, 0x_E5, 0x_40, 0x_46, 0x_9B, 0x_E7, 0x_A2, 0x_2A,
	];

	helper(S, BASE, -28);
}
// endregion
// region: s_has_zeros_and_minus_167_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_167_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_9F, 0x_EC, 0x_F1, 0x_B6, 0x_67, 0x_0E, 0x_65, 0x_EB, 0x_EB, 0x_8E,
		0x_A6, 0x_AB, 0x_A6, 0x_6A, 0x_AE, 0x_66, 0x_53, 0x_EF, 0x_2F, 0x_67, 0x_47, 0x_B6, 0x_57, 0x_5C, 0x_A6,
		0x_8E, 0x_85, 0x_65, 0x_AB, 0x_72, 0x_67, 0x_6A, 0x_84,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_AE, 0x_8C, 0x_9F, 0x_2F, 0x_E2, 0x_8E, 0x_0E, 0x_B6, 0x_16, 0x_6B, 0x_6A, 0x_C8, 0x_E4, 0x_84,
		0x_1A, 0x_1B, 0x_72, 0x_5F, 0x_DE, 0x_A6, 0x_AF, 0x_67, 0x_53, 0x_AB, 0x_5E, 0x_C7, 0x_65, 0x_85, 0x_3F,
		0x_66, 0x_D9, 0x_35, 0x_C9, 0x_A0, 0x_EF, 0x_47, 0x_EB, 0x_57, 0x_CB, 0x_5C, 0x_EC,
	];

	helper(S, BASE, -167);
}
// endregion
// region: s_has_zeros_and_minus_5_316_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_5_316_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F,
		0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F,
		0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_61, 0x_0F, 0x_F6, 0x_89, 0x_42,
		0x_0F, 0x_30, 0x_4B, 0x_BF, 0x_37, 0x_61, 0x_A1, 0x_65, 0x_0F, 0x_DC, 0x_37, 0x_B2, 0x_6A, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_15, 0x_82, 0x_61, 0x_6F, 0x_37, 0x_98, 0x_C2, 0x_A1, 0x_C1, 0x_53, 0x_8F, 0x_88, 0x_76, 0x_6A,
		0x_1F, 0x_05, 0x_35, 0x_69, 0x_6E, 0x_8A, 0x_4B, 0x_74, 0x_41, 0x_F6, 0x_3D, 0x_50, 0x_33, 0x_30, 0x_5A,
		0x_DC, 0x_65, 0x_2F, 0x_5D, 0x_A0, 0x_3C, 0x_42, 0x_B2, 0x_E3, 0x_11, 0x_0E, 0x_BF,
	];

	helper(S, BASE, -5_316);
}
// endregion
// region: s_has_zeros_and_minus_20_254_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_20_254_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_F3,
		0x_D6, 0x_0F, 0x_2D, 0x_1D, 0x_D7, 0x_A2, 0x_F7, 0x_F3, 0x_71,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_D7, 0x_D9, 0x_F8, 0x_54, 0x_A2, 0x_05, 0x_0E, 0x_DE, 0x_3E, 0x_0F, 0x_F3, 0x_1B, 0x_DF, 0x_B4,
		0x_EA, 0x_65, 0x_71, 0x_F7, 0x_68, 0x_D6, 0x_10, 0x_52, 0x_FA, 0x_82, 0x_DB, 0x_36, 0x_84, 0x_EC, 0x_B3,
		0x_1D, 0x_44, 0x_6D, 0x_50, 0x_D2, 0x_E1, 0x_11, 0x_04, 0x_2F, 0x_AB, 0x_E5, 0x_23,
	];

	helper(S, BASE, -20_254);
}
// endregion
// region: s_has_zeros_and_minus_922_989_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_922_989_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_05, 0x_B2, 0x_4D, 0x_D0, 0x_4B, 0x_5A, 0x_AF, 0x_A5, 0x_7B, 0x_B3, 0x_87,
		0x_08,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_F8, 0x_8E, 0x_3A, 0x_44, 0x_93, 0x_39, 0x_E5, 0x_B4, 0x_4D, 0x_72, 0x_52, 0x_05, 0x_68, 0x_45,
		0x_87, 0x_08, 0x_5A, 0x_07, 0x_B2, 0x_B8, 0x_50, 0x_C6, 0x_7B, 0x_46, 0x_54, 0x_1D, 0x_BE, 0x_A5, 0x_76,
		0x_22, 0x_D2, 0x_7E, 0x_90, 0x_01, 0x_3D, 0x_B3, 0x_3B, 0x_D1, 0x_D0, 0x_F0, 0x_AF,
	];

	helper(S, BASE, -922_989);
}
// endregion
// region: s_has_zeros_and_minus_9_032_461_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_9_032_461_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_90, 0x_02, 0x_AB, 0x_34,
		0x_49, 0x_70, 0x_8B, 0x_90, 0x_C4, 0x_90, 0x_F9, 0x_89, 0x_22, 0x_29, 0x_90, 0x_29, 0x_8B, 0x_AB, 0x_6A,
		0x_BF, 0x_AB, 0x_DB, 0x_19, 0x_CB, 0x_D9, 0x_46, 0x_DB, 0x_90, 0x_07, 0x_25, 0x_02, 0x_5A, 0x_D8, 0x_46,
		0x_4E, 0x_84, 0x_AC, 0x_14, 0x_B1, 0x_07, 0x_D7, 0x_57, 0x_85,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_A2, 0x_90, 0x_03, 0x_89, 0x_5C, 0x_64, 0x_22, 0x_B1, 0x_C4, 0x_91, 0x_12, 0x_57, 0x_46, 0x_F9,
		0x_D4, 0x_5A, 0x_29, 0x_34, 0x_01, 0x_26, 0x_45, 0x_D8, 0x_14, 0x_4E, 0x_49, 0x_BF, 0x_D9, 0x_84, 0x_CB,
		0x_D7, 0x_07, 0x_93, 0x_1F, 0x_DB, 0x_AC, 0x_8B, 0x_02, 0x_AB, 0x_6A, 0x_19, 0x_85,
	];

	helper(S, BASE, -9_032_461);
}
// endregion
// region: s_has_zeros_and_minus_70_897_432_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_70_897_432_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_61, 0x_84,
		0x_54, 0x_16, 0x_83, 0x_C6, 0x_12, 0x_83, 0x_18, 0x_94, 0x_A2, 0x_D7, 0x_93, 0x_25, 0x_91, 0x_CD, 0x_CD,
		0x_61, 0x_A2, 0x_93, 0x_56, 0x_25, 0x_13, 0x_1A, 0x_24, 0x_84, 0x_10, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_6F, 0x_01, 0x_46, 0x_83, 0x_43, 0x_2C, 0x_1B, 0x_D7, 0x_13, 0x_14, 0x_7F, 0x_16, 0x_70, 0x_FD,
		0x_FC, 0x_93, 0x_3C, 0x_24, 0x_25, 0x_91, 0x_80, 0x_61, 0x_4D, 0x_56, 0x_CB, 0x_7D, 0x_CD, 0x_90, 0x_2E,
		0x_10, 0x_1A, 0x_84, 0x_12, 0x_18, 0x_31, 0x_A2, 0x_4B, 0x_94, 0x_54, 0x_BA, 0x_FA,
	];

	helper(S, BASE, -70_897_432);
}
// endregion
// region: s_has_zeros_and_minus_655_891_880_in_base_42_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_655_891_880_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_A8, 0x_8E, 0x_A0, 0x_E0, 0x_5F, 0x_E6, 0x_1D, 0x_9F, 0x_8C, 0x_A7,
		0x_8E, 0x_A1, 0x_B2, 0x_B2, 0x_A7, 0x_07, 0x_57, 0x_96, 0x_A1, 0x_F4, 0x_D2, 0x_A1, 0x_91, 0x_FB, 0x_B2,
		0x_8E,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_57, 0x_34, 0x_91, 0x_D2, 0x_A8, 0x_9F, 0x_A7, 0x_DA, 0x_68, 0x_9B, 0x_AE, 0x_C7, 0x_B2, 0x_E6,
		0x_98, 0x_75, 0x_40, 0x_A9, 0x_A1, 0x_D1, 0x_69, 0x_8C, 0x_4C, 0x_D7, 0x_8A, 0x_AC, 0x_DE, 0x_96, 0x_54,
		0x_F6, 0x_FB, 0x_A0, 0x_5F, 0x_E7, 0x_07, 0x_E0, 0x_9D, 0x_7C, 0x_F4, 0x_85, 0x_8D,
	];

	helper(S, BASE, -655_891_880);
}
// endregion
// region: s_has_zeros_and_minus_6_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_6_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_4D, 0x_C1, 0x_B9, 0x_D6, 0x_78, 0x_B9, 0x_C2,
		0x_EA, 0x_B5, 0x_46, 0x_8D, 0x_FF, 0x_46, 0x_A8, 0x_64, 0x_C6, 0x_4D, 0x_4D, 0x_FF, 0x_8F, 0x_7F, 0x_8D,
		0x_C7, 0x_D8, 0x_F7, 0x_54, 0x_11, 0x_3D, 0x_99, 0x_EC, 0x_5A, 0x_1C, 0x_32, 0x_D8, 0x_32, 0x_59, 0x_49,
		0x_11, 0x_64, 0x_C7, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_29, 0x_7F, 0x_11, 0x_FF, 0x_C6, 0x_4D, 0x_4B, 0x_E2, 0x_EA, 0x_92, 0x_FD, 0x_BC, 0x_DD, 0x_F4,
		0x_59, 0x_C7, 0x_AE, 0x_99, 0x_85, 0x_44, 0x_1C, 0x_49, 0x_46, 0x_F5, 0x_32, 0x_C5, 0x_15, 0x_8F, 0x_4F,
		0x_8D, 0x_67, 0x_D6, 0x_5A, 0x_54, 0x_B4, 0x_B0, 0x_43, 0x_A4, 0x_D8, 0x_8B, 0x_2E, 0x_2C, 0x_B5, 0x_EC,
		0x_53, 0x_5B, 0x_DA, 0x_E9, 0x_78, 0x_64, 0x_A8, 0x_1E, 0x_71, 0x_F2, 0x_D1, 0x_65, 0x_A6, 0x_D9, 0x_9D,
		0x_86, 0x_90, 0x_8A, 0x_C2, 0x_B3, 0x_F7, 0x_C4, 0x_5F, 0x_33, 0x_0E, 0x_BB, 0x_D5, 0x_B9,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_zeros_and_minus_41_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_41_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_BA, 0x_BA, 0x_BA, 0x_BA, 0x_60, 0x_FB, 0x_FC, 0x_9B, 0x_8A, 0x_CE, 0x_C1, 0x_AC, 0x_8A, 0x_E6,
		0x_39, 0x_69, 0x_4F, 0x_3C, 0x_E0, 0x_AC, 0x_CC, 0x_E9, 0x_71, 0x_EE, 0x_78, 0x_41, 0x_67, 0x_B1, 0x_FC,
		0x_9B, 0x_A2, 0x_E9, 0x_47, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_BA, 0x_A0, 0x_EC, 0x_93, 0x_71, 0x_AC, 0x_A8, 0x_3C, 0x_72, 0x_4F, 0x_CE, 0x_33, 0x_3D, 0x_0E, 0x_66,
		0x_78, 0x_08, 0x_FC, 0x_F4, 0x_53, 0x_7E, 0x_02, 0x_7F, 0x_C1, 0x_76, 0x_D8, 0x_9B, 0x_E4, 0x_96, 0x_FF,
		0x_AD, 0x_E8, 0x_F6, 0x_4C, 0x_A5, 0x_47, 0x_E9, 0x_F1, 0x_B8, 0x_18, 0x_69, 0x_60, 0x_6D, 0x_65, 0x_01,
		0x_67, 0x_E6, 0x_A6, 0x_B7, 0x_8A, 0x_FD, 0x_9E, 0x_EE, 0x_29, 0x_CC, 0x_14, 0x_A2, 0x_D1, 0x_FA, 0x_BC,
		0x_F5, 0x_6F, 0x_6C, 0x_48, 0x_63, 0x_F8, 0x_41, 0x_A7, 0x_E0, 0x_28, 0x_C5, 0x_B1, 0x_39,
	];

	helper(S, BASE, -41);
}
// endregion
// region: s_has_zeros_and_minus_662_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_662_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB,
		0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_9B, 0x_31, 0x_FB, 0x_94, 0x_1C, 0x_C3,
		0x_D3, 0x_87, 0x_26, 0x_E1, 0x_22, 0x_5D, 0x_EC, 0x_5D, 0x_C3, 0x_70, 0x_CA, 0x_3B, 0x_1C, 0x_C1, 0x_53,
		0x_80, 0x_CD, 0x_2A, 0x_16, 0x_97, 0x_A6, 0x_C3, 0x_16, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_C1, 0x_41, 0x_05, 0x_BC, 0x_31, 0x_0E, 0x_EC, 0x_A7, 0x_9B, 0x_70, 0x_51, 0x_C5, 0x_28, 0x_33,
		0x_80, 0x_EA, 0x_6E, 0x_C9, 0x_75, 0x_76, 0x_CD, 0x_A1, 0x_F1, 0x_25, 0x_FE, 0x_07, 0x_58, 0x_16, 0x_A5,
		0x_3B, 0x_5D, 0x_3E, 0x_C0, 0x_4A, 0x_8A, 0x_64, 0x_94, 0x_04, 0x_C8, 0x_72, 0x_26, 0x_D5, 0x_36, 0x_BB,
		0x_BF, 0x_2A, 0x_1A, 0x_3F, 0x_43, 0x_A6, 0x_E1, 0x_F0, 0x_87, 0x_DE, 0x_13, 0x_23, 0x_84, 0x_F2, 0x_C3,
		0x_39, 0x_EF, 0x_22, 0x_D3, 0x_56, 0x_78, 0x_53, 0x_40, 0x_5B, 0x_CA, 0x_97, 0x_BE, 0x_1C,
	];

	helper(S, BASE, -662);
}
// endregion
// region: s_has_zeros_and_minus_8_706_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_8_706_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_21, 0x_BB, 0x_84, 0x_1E, 0x_B5, 0x_42, 0x_57, 0x_64, 0x_D6,
		0x_42, 0x_F8, 0x_9D, 0x_30, 0x_C9, 0x_EB, 0x_1D, 0x_FE, 0x_DA, 0x_88, 0x_30, 0x_D6, 0x_25, 0x_30, 0x_25,
		0x_E3, 0x_A7, 0x_3C, 0x_ED, 0x_AF, 0x_51, 0x_13, 0x_AE, 0x_ED, 0x_E6, 0x_E6, 0x_EB, 0x_88, 0x_DA, 0x_A7,
		0x_F4, 0x_CE, 0x_81, 0x_B8, 0x_56, 0x_17, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_21, 0x_9B, 0x_AF, 0x_9E, 0x_70, 0x_88, 0x_90, 0x_65, 0x_A9, 0x_AE, 0x_11, 0x_5B, 0x_AB, 0x_B0,
		0x_13, 0x_5E, 0x_17, 0x_8C, 0x_84, 0x_E0, 0x_55, 0x_89, 0x_EB, 0x_A7, 0x_D6, 0x_B8, 0x_CE, 0x_9D, 0x_24,
		0x_E6, 0x_30, 0x_03, 0x_67, 0x_42, 0x_1D, 0x_F4, 0x_C9, 0x_56, 0x_A0, 0x_4F, 0x_CF, 0x_ED, 0x_F8, 0x_B5,
		0x_BD, 0x_BB, 0x_AA, 0x_2F, 0x_97, 0x_36, 0x_12, 0x_57, 0x_E3, 0x_FE, 0x_50, 0x_47, 0x_6D, 0x_64, 0x_25,
		0x_DA, 0x_51, 0x_81, 0x_E1, 0x_69, 0x_3C, 0x_C5, 0x_CC, 0x_F3, 0x_FC, 0x_61, 0x_BA, 0x_5C,
	];

	helper(S, BASE, -8_706);
}
// endregion
// region: s_has_zeros_and_minus_52_706_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_52_706_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_6C, 0x_7D, 0x_61, 0x_6C, 0x_5E, 0x_DA, 0x_9C, 0x_42, 0x_DB,
		0x_35, 0x_F5, 0x_34, 0x_8E, 0x_8E, 0x_17, 0x_10, 0x_59, 0x_61, 0x_5A, 0x_34, 0x_71, 0x_9C, 0x_39, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_6C, 0x_F5, 0x_2C, 0x_69, 0x_3B, 0x_42, 0x_CA, 0x_B0, 0x_59, 0x_7D, 0x_E9, 0x_62, 0x_73, 0x_BB, 0x_88,
		0x_EA, 0x_D7, 0x_5A, 0x_87, 0x_A8, 0x_9E, 0x_F6, 0x_E7, 0x_C9, 0x_DB, 0x_46, 0x_34, 0x_5C, 0x_4D, 0x_56,
		0x_4E, 0x_21, 0x_38, 0x_64, 0x_7F, 0x_B6, 0x_11, 0x_C1, 0x_17, 0x_71, 0x_A6, 0x_10, 0x_A5, 0x_DA, 0x_77,
		0x_9C, 0x_8E, 0x_89, 0x_E6, 0x_85, 0x_E4, 0x_39, 0x_CE, 0x_EE, 0x_C3, 0x_70, 0x_C6, 0x_AC, 0x_DD, 0x_3D,
		0x_63, 0x_1D, 0x_58, 0x_29, 0x_35, 0x_61, 0x_91, 0x_92, 0x_9A, 0x_6E, 0x_9F, 0x_AB, 0x_43,
	];

	helper(S, BASE, -52_706);
}
// endregion
// region: s_has_zeros_and_minus_581_257_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_581_257_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52,
		0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_6A, 0x_C3, 0x_13,
		0x_88, 0x_D0, 0x_4D, 0x_77,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_6A, 0x_1A, 0x_ED, 0x_D2, 0x_13, 0x_33, 0x_EF, 0x_9C, 0x_9A, 0x_50, 0x_54, 0x_40, 0x_76, 0x_3C,
		0x_F3, 0x_77, 0x_D7, 0x_5B, 0x_F1, 0x_B4, 0x_FE, 0x_04, 0x_E2, 0x_DD, 0x_0E, 0x_43, 0x_C4, 0x_70, 0x_D5,
		0x_42, 0x_88, 0x_AA, 0x_07, 0x_6E, 0x_03, 0x_C3, 0x_95, 0x_BF, 0x_FF, 0x_87, 0x_BB, 0x_39, 0x_19, 0x_B5,
		0x_BE, 0x_99, 0x_24, 0x_97, 0x_6C, 0x_B2, 0x_7C, 0x_18, 0x_30, 0x_DB, 0x_65, 0x_15, 0x_DE, 0x_61, 0x_E4,
		0x_4D, 0x_81, 0x_78, 0x_5D, 0x_C5, 0x_21, 0x_E9, 0x_F0, 0x_F4, 0x_3D, 0x_A8, 0x_AE, 0x_31,
	];

	helper(S, BASE, -581_257);
}
// endregion
// region: s_has_zeros_and_minus_9_899_223_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_9_899_223_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_98, 0x_97, 0x_7E, 0x_14, 0x_CC, 0x_7C,
		0x_57, 0x_A2, 0x_2F, 0x_7C, 0x_7C, 0x_C5, 0x_23, 0x_AE, 0x_2F, 0x_57, 0x_85, 0x_AB, 0x_79, 0x_AC, 0x_26,
		0x_B7, 0x_9D, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_D6, 0x_C9, 0x_BF, 0x_69, 0x_C5, 0x_AC, 0x_39, 0x_F5, 0x_FD, 0x_CB, 0x_B7, 0x_08, 0x_87, 0x_A6,
		0x_11, 0x_AB, 0x_A9, 0x_9D, 0x_D2, 0x_B4, 0x_7F, 0x_23, 0x_AF, 0x_4D, 0x_98, 0x_2E, 0x_DC, 0x_57, 0x_32,
		0x_5A, 0x_5D, 0x_97, 0x_DD, 0x_7C, 0x_2F, 0x_E4, 0x_82, 0x_26, 0x_9F, 0x_4A, 0x_61, 0x_F1, 0x_D5, 0x_7E,
		0x_63, 0x_0E, 0x_3D, 0x_15, 0x_85, 0x_64, 0x_2C, 0x_81, 0x_FA, 0x_18, 0x_2A, 0x_8F, 0x_28, 0x_14, 0x_A2,
		0x_8E, 0x_03, 0x_D0, 0x_6B, 0x_13, 0x_76, 0x_22, 0x_79, 0x_73, 0x_AE, 0x_4C, 0x_34, 0x_58,
	];

	helper(S, BASE, -9_899_223);
}
// endregion
// region: s_has_zeros_and_minus_66_873_070_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_66_873_070_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76,
		0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76,
		0x_76, 0x_76, 0x_76, 0x_4C, 0x_52, 0x_72, 0x_72, 0x_FF, 0x_B7, 0x_E2, 0x_A9, 0x_E2, 0x_6E, 0x_57, 0x_D3,
		0x_E8, 0x_01, 0x_9E, 0x_B1, 0x_13, 0x_67, 0x_8C, 0x_62, 0x_19, 0x_6E, 0x_8B, 0x_CC, 0x_6E, 0x_2E, 0x_93,
		0x_CF, 0x_B8, 0x_61,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_F3, 0x_4C, 0x_8B, 0x_6E, 0x_D3, 0x_E2, 0x_DE, 0x_C0, 0x_FD, 0x_57, 0x_3B, 0x_25, 0x_CB, 0x_CE,
		0x_61, 0x_62, 0x_50, 0x_23, 0x_9E, 0x_CF, 0x_8A, 0x_53, 0x_1F, 0x_FE, 0x_52, 0x_93, 0x_90, 0x_05, 0x_74,
		0x_13, 0x_49, 0x_75, 0x_FF, 0x_1A, 0x_D6, 0x_A9, 0x_A6, 0x_D1, 0x_B1, 0x_E8, 0x_C7, 0x_12, 0x_24, 0x_CC,
		0x_7D, 0x_79, 0x_AD, 0x_59, 0x_17, 0x_01, 0x_5D, 0x_2E, 0x_F0, 0x_30, 0x_5A, 0x_67, 0x_19, 0x_7B, 0x_BB,
		0x_80, 0x_44, 0x_43, 0x_9D, 0x_1E, 0x_72, 0x_B8, 0x_4B, 0x_F5, 0x_A7, 0x_99, 0x_8C, 0x_84,
	];

	helper(S, BASE, -66_873_070);
}
// endregion
// region: s_has_zeros_and_minus_702_395_486_in_base_73_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_702_395_486_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_51,
		0x_66, 0x_D5, 0x_6C, 0x_07, 0x_1B, 0x_A5, 0x_DF, 0x_E2, 0x_6C, 0x_9E, 0x_4B, 0x_0E, 0x_24, 0x_63, 0x_7E,
		0x_25, 0x_19, 0x_0E, 0x_D5, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_A1, 0x_79, 0x_92, 0x_FF, 0x_94, 0x_3E, 0x_E2, 0x_4B, 0x_26, 0x_A3, 0x_CF, 0x_19, 0x_34, 0x_E7,
		0x_13, 0x_84, 0x_6C, 0x_CE, 0x_22, 0x_32, 0x_C8, 0x_9E, 0x_EF, 0x_51, 0x_DC, 0x_E0, 0x_4A, 0x_F7, 0x_42,
		0x_1E, 0x_8C, 0x_2E, 0x_EB, 0x_85, 0x_8A, 0x_E5, 0x_D1, 0x_27, 0x_B8, 0x_6B, 0x_D5, 0x_DF, 0x_24, 0x_29,
		0x_AA, 0x_0E, 0x_DB, 0x_82, 0x_63, 0x_1F, 0x_75, 0x_56, 0x_66, 0x_11, 0x_25, 0x_DA, 0x_02, 0x_7A, 0x_5F,
		0x_47, 0x_F4, 0x_83, 0x_7D, 0x_0F, 0x_EE, 0x_67, 0x_A5, 0x_A0, 0x_96, 0x_7E, 0x_07, 0x_C9,
	];

	helper(S, BASE, -702_395_486);
}
// endregion
// region: s_has_zeros_and_minus_7_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_7_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92,
		0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_92, 0x_99, 0x_A9, 0x_C8, 0x_ED,
		0x_52, 0x_7C, 0x_F5, 0x_5D, 0x_88, 0x_42, 0x_EB, 0x_E4, 0x_B8, 0x_68, 0x_5F, 0x_35, 0x_45, 0x_AD, 0x_62,
		0x_88, 0x_4A, 0x_C6, 0x_77,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_8F, 0x_EA, 0x_29, 0x_A0, 0x_FC, 0x_5F, 0x_99, 0x_51, 0x_72, 0x_FB, 0x_50, 0x_DC, 0x_FE, 0x_48,
		0x_1E, 0x_88, 0x_9B, 0x_AD, 0x_06, 0x_02, 0x_F5, 0x_EF, 0x_C6, 0x_53, 0x_64, 0x_D2, 0x_C4, 0x_4A, 0x_C8,
		0x_CF, 0x_75, 0x_D6, 0x_65, 0x_E4, 0x_4C, 0x_95, 0x_77, 0x_41, 0x_C0, 0x_35, 0x_11, 0x_54, 0x_05, 0x_BD,
		0x_90, 0x_EB, 0x_26, 0x_E2, 0x_61, 0x_F9, 0x_98, 0x_42, 0x_7C, 0x_7F, 0x_62, 0x_D1, 0x_D0, 0x_F4, 0x_FD,
		0x_08, 0x_5D, 0x_1C, 0x_47, 0x_8C, 0x_27, 0x_BC, 0x_21, 0x_CE, 0x_45, 0x_3A, 0x_E6, 0x_34, 0x_81, 0x_23,
		0x_83, 0x_3C, 0x_52, 0x_9A, 0x_AC, 0x_B6, 0x_E9, 0x_68, 0x_59, 0x_B2, 0x_A7, 0x_A1, 0x_B3, 0x_E3, 0x_22,
		0x_46, 0x_85, 0x_C7, 0x_58, 0x_C2, 0x_7A, 0x_ED, 0x_B8, 0x_32, 0x_DA, 0x_A3, 0x_4D, 0x_3D, 0x_66, 0x_1F,
		0x_37, 0x_78, 0x_F7, 0x_10, 0x_9D, 0x_AA, 0x_F8, 0x_2A,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_zeros_and_minus_70_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_70_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_C9, 0x_52, 0x_7A, 0x_ED,
		0x_7C, 0x_D5, 0x_ED, 0x_CE, 0x_F3, 0x_F5, 0x_A2, 0x_B7, 0x_F3, 0x_94, 0x_F9, 0x_1F, 0x_98, 0x_A0, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_30, 0x_9D, 0x_D2, 0x_C8, 0x_F8, 0x_24, 0x_82, 0x_39, 0x_1C, 0x_99, 0x_EA, 0x_DB, 0x_67, 0x_F5,
		0x_69, 0x_9C, 0x_CE, 0x_A3, 0x_7C, 0x_3B, 0x_F9, 0x_75, 0x_6F, 0x_03, 0x_3F, 0x_A0, 0x_F0, 0x_9F, 0x_45,
		0x_ED, 0x_F1, 0x_0E, 0x_E2, 0x_CF, 0x_F3, 0x_8D, 0x_A1, 0x_77, 0x_FE, 0x_38, 0x_19, 0x_4B, 0x_C6, 0x_B0,
		0x_1B, 0x_1F, 0x_02, 0x_B5, 0x_AD, 0x_BE, 0x_E5, 0x_F4, 0x_AB, 0x_B8, 0x_54, 0x_13, 0x_66, 0x_0F, 0x_B7,
		0x_8B, 0x_B2, 0x_57, 0x_92, 0x_68, 0x_BB, 0x_37, 0x_84, 0x_43, 0x_A2, 0x_C9, 0x_60, 0x_1D, 0x_AA, 0x_35,
		0x_94, 0x_C4, 0x_F2, 0x_98, 0x_29, 0x_AE, 0x_26, 0x_10, 0x_CD, 0x_A4, 0x_44, 0x_D5, 0x_5C, 0x_36, 0x_BF,
		0x_49, 0x_55, 0x_6E, 0x_15, 0x_62, 0x_3A, 0x_EE, 0x_CC, 0x_4F, 0x_89, 0x_95, 0x_6A, 0x_E9, 0x_DA, 0x_E4,
		0x_6C, 0x_7A, 0x_18, 0x_81, 0x_28, 0x_AC, 0x_63, 0x_48,
	];

	helper(S, BASE, -70);
}
// endregion
// region: s_has_zeros_and_minus_175_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_175_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_8A, 0x_05, 0x_6C, 0x_19, 0x_F8, 0x_41, 0x_5D, 0x_8B, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_8A, 0x_A9, 0x_83, 0x_61, 0x_45, 0x_5A, 0x_4C, 0x_BC, 0x_79, 0x_40, 0x_02, 0x_C1, 0x_67, 0x_9A,
		0x_63, 0x_B3, 0x_F1, 0x_D1, 0x_68, 0x_52, 0x_5F, 0x_25, 0x_69, 0x_1A, 0x_DF, 0x_B6, 0x_7C, 0x_32, 0x_C9,
		0x_37, 0x_30, 0x_8B, 0x_39, 0x_D7, 0x_33, 0x_F9, 0x_3F, 0x_2F, 0x_59, 0x_98, 0x_DB, 0x_90, 0x_F0, 0x_E3,
		0x_17, 0x_75, 0x_19, 0x_DE, 0x_FA, 0x_DA, 0x_12, 0x_A3, 0x_FC, 0x_9F, 0x_94, 0x_1B, 0x_E2, 0x_53, 0x_E7,
		0x_71, 0x_C6, 0x_05, 0x_64, 0x_4D, 0x_7B, 0x_A6, 0x_01, 0x_88, 0x_9B, 0x_4F, 0x_E0, 0x_AC, 0x_81, 0x_E5,
		0x_AE, 0x_47, 0x_A8, 0x_13, 0x_3C, 0x_F6, 0x_AF, 0x_28, 0x_55, 0x_F8, 0x_D0, 0x_F3, 0x_C0, 0x_1D, 0x_CE,
		0x_41, 0x_EE, 0x_76, 0x_51, 0x_43, 0x_D2, 0x_FD, 0x_E4, 0x_99, 0x_5D, 0x_FE, 0x_91, 0x_B0, 0x_C4, 0x_60,
		0x_06, 0x_36, 0x_18, 0x_26, 0x_87, 0x_8E, 0x_89, 0x_1E,
	];

	helper(S, BASE, -175);
}
// endregion
// region: s_has_zeros_and_minus_2_673_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_673_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_F7, 0x_B4, 0x_93, 0x_57, 0x_D8, 0x_D8, 0x_C9, 0x_E9, 0x_30, 0x_4D, 0x_7B, 0x_C1, 0x_C9,
		0x_BD,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_D0, 0x_15, 0x_7B, 0x_EE, 0x_EA, 0x_73, 0x_A6, 0x_6A, 0x_16, 0x_FC, 0x_7D, 0x_B2, 0x_A4, 0x_BF,
		0x_C3, 0x_4B, 0x_D8, 0x_7E, 0x_3A, 0x_59, 0x_40, 0x_C1, 0x_F7, 0x_68, 0x_37, 0x_F4, 0x_E2, 0x_E6, 0x_D6,
		0x_DD, 0x_9E, 0x_BB, 0x_C2, 0x_BD, 0x_1E, 0x_5F, 0x_6D, 0x_17, 0x_B5, 0x_E5, 0x_F0, 0x_AA, 0x_87, 0x_8F,
		0x_92, 0x_13, 0x_24, 0x_8A, 0x_57, 0x_6C, 0x_12, 0x_9B, 0x_32, 0x_3D, 0x_54, 0x_4D, 0x_C9, 0x_F1, 0x_03,
		0x_53, 0x_7A, 0x_2F, 0x_83, 0x_D5, 0x_E4, 0x_70, 0x_E9, 0x_AC, 0x_CD, 0x_34, 0x_36, 0x_76, 0x_95, 0x_B4,
		0x_79, 0x_96, 0x_FD, 0x_30, 0x_67, 0x_CF, 0x_B7, 0x_35, 0x_DF, 0x_F5, 0x_60, 0x_33, 0x_10, 0x_E1, 0x_DB,
		0x_78, 0x_AE, 0x_C6, 0x_2E, 0x_01, 0x_A8, 0x_A0, 0x_F6, 0x_A3, 0x_7C, 0x_75, 0x_1F, 0x_91, 0x_4F, 0x_64,
		0x_B6, 0x_FF, 0x_55, 0x_41, 0x_71, 0x_1D, 0x_04, 0x_EB,
	];

	helper(S, BASE, -2_673);
}
// endregion
// region: s_has_zeros_and_minus_26_718_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_26_718_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E,
		0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_94, 0x_50, 0x_A6, 0x_B0, 0x_17, 0x_53, 0x_11, 0x_75,
		0x_C0, 0x_2F, 0x_01, 0x_C2, 0x_F3, 0x_DE, 0x_03, 0x_91, 0x_DF, 0x_96, 0x_A8, 0x_6C, 0x_7A, 0x_BB, 0x_01,
		0x_32, 0x_71, 0x_A8, 0x_96, 0x_50, 0x_5F, 0x_02, 0x_DA, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_A8, 0x_94, 0x_55, 0x_A5, 0x_E8, 0x_F6, 0x_73, 0x_7A, 0x_C2, 0x_50, 0x_1B, 0x_0F, 0x_61, 0x_64,
		0x_2C, 0x_B6, 0x_3F, 0x_43, 0x_2E, 0x_69, 0x_78, 0x_75, 0x_06, 0x_EC, 0x_C5, 0x_C3, 0x_56, 0x_D3, 0x_DA,
		0x_8D, 0x_92, 0x_FF, 0x_BC, 0x_96, 0x_93, 0x_1E, 0x_BE, 0x_32, 0x_6C, 0x_D9, 0x_28, 0x_F8, 0x_F5, 0x_16,
		0x_C7, 0x_19, 0x_3A, 0x_24, 0x_9F, 0x_A6, 0x_3E, 0x_3B, 0x_91, 0x_6E, 0x_03, 0x_5F, 0x_A4, 0x_DE, 0x_53,
		0x_6B, 0x_F3, 0x_9A, 0x_F7, 0x_AA, 0x_7C, 0x_17, 0x_A9, 0x_44, 0x_B8, 0x_CC, 0x_37, 0x_66, 0x_A2, 0x_FA,
		0x_8C, 0x_5D, 0x_D8, 0x_0E, 0x_9B, 0x_E9, 0x_4D, 0x_DF, 0x_E2, 0x_CB, 0x_C0, 0x_38, 0x_CE, 0x_47, 0x_AD,
		0x_83, 0x_35, 0x_4C, 0x_E3, 0x_C4, 0x_7B, 0x_4F, 0x_BB, 0x_B4, 0x_9E, 0x_D7, 0x_41, 0x_85, 0x_13, 0x_70,
		0x_11, 0x_AB, 0x_46, 0x_E1, 0x_01, 0x_02, 0x_2F, 0x_71,
	];

	helper(S, BASE, -26_718);
}
// endregion
// region: s_has_zeros_and_minus_693_831_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_693_831_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8E, 0x_8D, 0x_6C, 0x_57, 0x_AB, 0x_8E, 0x_8A, 0x_EA,
		0x_C5, 0x_8D, 0x_A3, 0x_A2, 0x_50, 0x_37, 0x_47, 0x_29, 0x_9E, 0x_CC, 0x_A4, 0x_9E, 0x_52, 0x_1C, 0x_DE,
		0x_07, 0x_6C, 0x_53, 0x_C5, 0x_61, 0x_9D, 0x_B0, 0x_60, 0x_14, 0x_57, 0x_74, 0x_F5, 0x_B6, 0x_93, 0x_CC,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_1F, 0x_50, 0x_43, 0x_EA, 0x_9D, 0x_61, 0x_F2, 0x_A5, 0x_47, 0x_9B, 0x_57, 0x_B7, 0x_3E, 0x_7F,
		0x_1B, 0x_9F, 0x_74, 0x_6B, 0x_FD, 0x_87, 0x_C3, 0x_3A, 0x_EC, 0x_51, 0x_B0, 0x_9A, 0x_BA, 0x_29, 0x_DD,
		0x_1C, 0x_FF, 0x_5A, 0x_0E, 0x_BD, 0x_6A, 0x_19, 0x_84, 0x_6C, 0x_94, 0x_07, 0x_37, 0x_08, 0x_83, 0x_62,
		0x_F8, 0x_85, 0x_40, 0x_5B, 0x_93, 0x_C0, 0x_DE, 0x_79, 0x_24, 0x_8D, 0x_4B, 0x_36, 0x_7E, 0x_60, 0x_A4,
		0x_4E, 0x_13, 0x_B6, 0x_33, 0x_76, 0x_8B, 0x_68, 0x_86, 0x_6E, 0x_FB, 0x_52, 0x_41, 0x_AA, 0x_EE, 0x_A2,
		0x_14, 0x_23, 0x_72, 0x_C6, 0x_4C, 0x_55, 0x_BB, 0x_56, 0x_35, 0x_CC, 0x_99, 0x_F0, 0x_CD, 0x_38, 0x_9E,
		0x_D1, 0x_BF, 0x_2A, 0x_02, 0x_FE, 0x_67, 0x_A6, 0x_03, 0x_A3, 0x_F5, 0x_F3, 0x_8A, 0x_F7, 0x_BE, 0x_4F,
		0x_66, 0x_53, 0x_B3, 0x_78, 0x_DF, 0x_EF, 0x_C5, 0x_69,
	];

	helper(S, BASE, -693_831);
}
// endregion
// region: s_has_zeros_and_minus_6_306_448_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_6_306_448_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_D3, 0x_C4, 0x_E7, 0x_B8,
		0x_50, 0x_86, 0x_E7, 0x_F4,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_3F, 0x_BD, 0x_FF, 0x_D3, 0x_28, 0x_A8, 0x_78, 0x_DE, 0x_D8, 0x_DA, 0x_86, 0x_83, 0x_76, 0x_B7,
		0x_56, 0x_B9, 0x_4A, 0x_16, 0x_B3, 0x_9B, 0x_62, 0x_FE, 0x_43, 0x_44, 0x_DD, 0x_3A, 0x_6B, 0x_27, 0x_D0,
		0x_EB, 0x_B8, 0x_BA, 0x_67, 0x_BC, 0x_EF, 0x_1F, 0x_3C, 0x_47, 0x_52, 0x_F1, 0x_C4, 0x_A0, 0x_FA, 0x_9D,
		0x_03, 0x_39, 0x_4D, 0x_5F, 0x_A4, 0x_C9, 0x_24, 0x_65, 0x_13, 0x_F3, 0x_8E, 0x_F6, 0x_4E, 0x_5A, 0x_75,
		0x_D7, 0x_61, 0x_FD, 0x_34, 0x_4F, 0x_E3, 0x_AB, 0x_05, 0x_EE, 0x_F4, 0x_54, 0x_5D, 0x_7C, 0x_C7, 0x_35,
		0x_7D, 0x_EC, 0x_9F, 0x_A1, 0x_9E, 0x_F5, 0x_18, 0x_73, 0x_79, 0x_A2, 0x_6F, 0x_E6, 0x_07, 0x_0E, 0x_92,
		0x_2A, 0x_11, 0x_04, 0x_2C, 0x_E8, 0x_70, 0x_63, 0x_3E, 0x_30, 0x_95, 0x_E7, 0x_82, 0x_1E, 0x_CC, 0x_D6,
		0x_C0, 0x_D1, 0x_F0, 0x_31, 0x_94, 0x_32, 0x_12, 0x_22,
	];

	helper(S, BASE, -6_306_448);
}
// endregion
// region: s_has_zeros_and_minus_25_385_983_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_25_385_983_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16,
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_FD, 0x_C1, 0x_CD, 0x_A5,
		0x_1E, 0x_3E, 0x_3B, 0x_FD, 0x_3C, 0x_0E, 0x_62, 0x_22, 0x_C5, 0x_B3, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_DF, 0x_DD, 0x_12, 0x_29, 0x_8A, 0x_65, 0x_C8, 0x_7D, 0x_4B, 0x_CD, 0x_3C, 0x_77, 0x_38, 0x_82,
		0x_86, 0x_41, 0x_FD, 0x_73, 0x_54, 0x_1B, 0x_BF, 0x_B3, 0x_A9, 0x_08, 0x_B9, 0x_05, 0x_C2, 0x_45, 0x_79,
		0x_CC, 0x_4F, 0x_9D, 0x_EE, 0x_FF, 0x_E7, 0x_31, 0x_17, 0x_51, 0x_A4, 0x_3F, 0x_D6, 0x_43, 0x_06, 0x_8D,
		0x_4A, 0x_B2, 0x_27, 0x_D0, 0x_25, 0x_E6, 0x_48, 0x_E0, 0x_6A, 0x_9C, 0x_C5, 0x_07, 0x_3D, 0x_84, 0x_72,
		0x_5F, 0x_93, 0x_24, 0x_F3, 0x_26, 0x_5B, 0x_03, 0x_C1, 0x_E3, 0x_36, 0x_22, 0x_C7, 0x_85, 0x_D9, 0x_E1,
		0x_B1, 0x_3B, 0x_56, 0x_C9, 0x_53, 0x_59, 0x_A5, 0x_01, 0x_23, 0x_75, 0x_DE, 0x_1C, 0x_57, 0x_BD, 0x_C4,
		0x_19, 0x_8B, 0x_9B, 0x_0E, 0x_E2, 0x_7C, 0x_76, 0x_62, 0x_1A, 0x_32, 0x_CE, 0x_3E, 0x_8F, 0x_F9, 0x_F8,
		0x_70, 0x_64, 0x_21, 0x_04, 0x_DB, 0x_66, 0x_60, 0x_42,
	];

	helper(S, BASE, -25_385_983);
}
// endregion
// region: s_has_zeros_and_minus_570_785_119_in_base_113_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_570_785_119_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_74, 0x_74, 0x_74, 0x_C9, 0x_22, 0x_43, 0x_3D, 0x_CA, 0x_2C, 0x_55, 0x_A4, 0x_15, 0x_14, 0x_DD,
		0x_3D, 0x_13, 0x_6C, 0x_8D, 0x_7E, 0x_97, 0x_27, 0x_6C, 0x_DC, 0x_3A, 0x_E8, 0x_F7, 0x_65, 0x_B8, 0x_97,
		0x_C6, 0x_DD, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_A3, 0x_78, 0x_C9, 0x_4F, 0x_E3, 0x_E9, 0x_36, 0x_9D, 0x_92, 0x_F2, 0x_EE, 0x_72, 0x_64, 0x_AC,
		0x_49, 0x_FC, 0x_27, 0x_80, 0x_6B, 0x_3A, 0x_AB, 0x_6E, 0x_DA, 0x_DB, 0x_C2, 0x_BC, 0x_DD, 0x_96, 0x_B9,
		0x_55, 0x_3F, 0x_52, 0x_40, 0x_F7, 0x_26, 0x_C7, 0x_5C, 0x_DF, 0x_A7, 0x_15, 0x_7E, 0x_67, 0x_21, 0x_EC,
		0x_91, 0x_58, 0x_AE, 0x_B4, 0x_BD, 0x_A4, 0x_60, 0x_25, 0x_AF, 0x_13, 0x_C1, 0x_22, 0x_A5, 0x_35, 0x_82,
		0x_6C, 0x_FB, 0x_D5, 0x_B8, 0x_E8, 0x_43, 0x_F6, 0x_3E, 0x_37, 0x_68, 0x_1E, 0x_50, 0x_44, 0x_08, 0x_E2,
		0x_86, 0x_7C, 0x_1C, 0x_6A, 0x_93, 0x_65, 0x_47, 0x_C6, 0x_CE, 0x_CA, 0x_8D, 0x_B7, 0x_D0, 0x_41, 0x_5E,
		0x_E6, 0x_7A, 0x_53, 0x_28, 0x_EA, 0x_3D, 0x_DC, 0x_FF, 0x_84, 0x_95, 0x_87, 0x_16, 0x_F9, 0x_07, 0x_17,
		0x_97, 0x_BA, 0x_AA, 0x_14, 0x_6F, 0x_FA, 0x_AD, 0x_7D,
	];

	helper(S, BASE, -570_785_119);
}
// endregion
// region: s_has_zeros_and_minus_7_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_7_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50,
		0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50,
		0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_54, 0x_77, 0x_37, 0x_CC, 0x_CE, 0x_16, 0x_D7, 0x_FA,
		0x_DE, 0x_AF, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_C7, 0x_FF, 0x_43, 0x_F0, 0x_5E, 0x_46, 0x_54, 0x_F9, 0x_30, 0x_EB, 0x_AD, 0x_C6, 0x_4E, 0x_A2,
		0x_79, 0x_A5, 0x_28, 0x_BA, 0x_BC, 0x_14, 0x_FC, 0x_1B, 0x_69, 0x_A9, 0x_DC, 0x_F8, 0x_21, 0x_57, 0x_B0,
		0x_3B, 0x_ED, 0x_6C, 0x_58, 0x_CF, 0x_C5, 0x_C2, 0x_3E, 0x_84, 0x_98, 0x_BD, 0x_37, 0x_41, 0x_9B, 0x_A4,
		0x_7F, 0x_3C, 0x_FB, 0x_A3, 0x_DB, 0x_F5, 0x_B2, 0x_E9, 0x_89, 0x_31, 0x_07, 0x_36, 0x_59, 0x_10, 0x_D4,
		0x_F7, 0x_D0, 0x_7A, 0x_BF, 0x_17, 0x_E4, 0x_B8, 0x_2E, 0x_2C, 0x_49, 0x_34, 0x_16, 0x_63, 0x_AF, 0x_CB,
		0x_42, 0x_CC, 0x_A0, 0x_11, 0x_9F, 0x_1F, 0x_4C, 0x_80, 0x_22, 0x_BE, 0x_E3, 0x_8E, 0x_9D, 0x_8D, 0x_74,
		0x_CD, 0x_90, 0x_99, 0x_27, 0x_24, 0x_D5, 0x_D3, 0x_EF, 0x_FA, 0x_5B, 0x_48, 0x_A8, 0x_91, 0x_04, 0x_C0,
		0x_F6, 0x_6F, 0x_C3, 0x_C4, 0x_35, 0x_52, 0x_3F, 0x_4D, 0x_03, 0x_E7, 0x_7E, 0x_26, 0x_5C, 0x_CA, 0x_81,
		0x_8A, 0x_5D, 0x_E1, 0x_4A, 0x_AB, 0x_D2, 0x_64, 0x_71, 0x_EA, 0x_55, 0x_AC, 0x_C1, 0x_47, 0x_6D, 0x_D7,
		0x_72, 0x_B1, 0x_E8, 0x_70, 0x_DA, 0x_8C, 0x_1C, 0x_2A, 0x_40, 0x_9C, 0x_38, 0x_8F, 0x_33, 0x_DE, 0x_8B,
		0x_B9, 0x_02, 0x_44, 0x_92, 0x_67, 0x_B5, 0x_4F, 0x_3A, 0x_62, 0x_56, 0x_85, 0x_13, 0x_95, 0x_9A, 0x_1E,
		0x_39, 0x_53, 0x_68, 0x_08, 0x_CE, 0x_29, 0x_96, 0x_A1, 0x_9E, 0x_B3, 0x_FE, 0x_D8, 0x_05, 0x_18, 0x_88,
		0x_AA, 0x_78, 0x_65, 0x_EC, 0x_06, 0x_F1, 0x_82, 0x_B7, 0x_97, 0x_12, 0x_73, 0x_2F, 0x_4B,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_zeros_and_minus_88_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_88_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98,
		0x_A5, 0x_BC, 0x_6C, 0x_93, 0x_ED, 0x_0F, 0x_07, 0x_7F, 0x_E9, 0x_4D, 0x_5D, 0x_DE, 0x_EF, 0x_4E, 0x_44,
		0x_96, 0x_31, 0x_24, 0x_38, 0x_B0, 0x_FA, 0x_CE, 0x_44, 0x_E8, 0x_D1, 0x_9A, 0x_E5, 0x_91, 0x_DB, 0x_DC,
		0x_A2, 0x_BF, 0x_6F, 0x_34, 0x_2A, 0x_99, 0x_07, 0x_FC, 0x_14, 0x_50, 0x_E1, 0x_5C, 0x_7A,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_7C, 0x_A1, 0x_04, 0x_64, 0x_EE, 0x_B0, 0x_9F, 0x_07, 0x_15, 0x_EF, 0x_2F, 0x_BD, 0x_FD, 0x_F0,
		0x_26, 0x_F1, 0x_1C, 0x_57, 0x_08, 0x_6E, 0x_51, 0x_E2, 0x_F6, 0x_AB, 0x_55, 0x_FC, 0x_A4, 0x_92, 0x_78,
		0x_FE, 0x_06, 0x_18, 0x_22, 0x_24, 0x_3F, 0x_77, 0x_E1, 0x_AD, 0x_AC, 0x_C6, 0x_81, 0x_23, 0x_72, 0x_DD,
		0x_89, 0x_71, 0x_28, 0x_BA, 0x_A9, 0x_34, 0x_CE, 0x_88, 0x_C9, 0x_36, 0x_03, 0x_47, 0x_75, 0x_56, 0x_CF,
		0x_CA, 0x_63, 0x_9B, 0x_90, 0x_97, 0x_41, 0x_44, 0x_8C, 0x_65, 0x_E0, 0x_DB, 0x_2A, 0x_A3, 0x_31, 0x_84,
		0x_5D, 0x_D6, 0x_A7, 0x_9C, 0x_8D, 0x_10, 0x_19, 0x_D1, 0x_F9, 0x_F8, 0x_5C, 0x_5E, 0x_3A, 0x_A5, 0x_A2,
		0x_91, 0x_32, 0x_11, 0x_EA, 0x_4D, 0x_C7, 0x_A8, 0x_C3, 0x_62, 0x_8B, 0x_DE, 0x_F4, 0x_67, 0x_7F, 0x_48,
		0x_01, 0x_E9, 0x_9A, 0x_D7, 0x_B9, 0x_46, 0x_6C, 0x_40, 0x_79, 0x_50, 0x_05, 0x_E7, 0x_ED, 0x_E6, 0x_8E,
		0x_83, 0x_9E, 0x_D4, 0x_C1, 0x_B2, 0x_35, 0x_1E, 0x_0F, 0x_AA, 0x_B3, 0x_E3, 0x_B7, 0x_5A, 0x_B6, 0x_B5,
		0x_43, 0x_16, 0x_6B, 0x_25, 0x_4C, 0x_8F, 0x_C0, 0x_76, 0x_38, 0x_60, 0x_12, 0x_E5, 0x_86, 0x_95, 0x_1D,
		0x_E8, 0x_99, 0x_EB, 0x_6F, 0x_37, 0x_BF, 0x_17, 0x_33, 0x_70, 0x_73, 0x_66, 0x_5B, 0x_DC, 0x_F7, 0x_93,
		0x_61, 0x_14, 0x_4E, 0x_CB, 0x_C8, 0x_D5, 0x_CC, 0x_68, 0x_D0, 0x_45, 0x_3B, 0x_AF, 0x_52, 0x_F2, 0x_96,
		0x_D8, 0x_CD, 0x_13, 0x_87, 0x_D3, 0x_FA, 0x_FB, 0x_5F, 0x_8A, 0x_C2, 0x_7A, 0x_4F, 0x_1A,
	];

	helper(S, BASE, -88);
}
// endregion
// region: s_has_zeros_and_minus_595_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_595_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_41, 0x_53, 0x_3A, 0x_D7, 0x_99, 0x_6E, 0x_8C,
		0x_6A, 0x_15, 0x_C1, 0x_A4, 0x_C9, 0x_14, 0x_08, 0x_90, 0x_B9, 0x_3D, 0x_88, 0x_EA, 0x_33, 0x_24, 0x_3B,
		0x_33, 0x_FB, 0x_CF, 0x_1F, 0x_C0, 0x_B3, 0x_8E, 0x_F5, 0x_B5, 0x_21, 0x_41, 0x_9C, 0x_F9, 0x_08, 0x_CE,
		0x_2E, 0x_E0, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_8C, 0x_07, 0x_41, 0x_88, 0x_44, 0x_C5, 0x_87, 0x_B5, 0x_5F, 0x_D9, 0x_69, 0x_B9, 0x_F7, 0x_E0,
		0x_CB, 0x_53, 0x_B0, 0x_30, 0x_F2, 0x_C6, 0x_2A, 0x_C0, 0x_9E, 0x_40, 0x_D0, 0x_47, 0x_6C, 0x_BD, 0x_9D,
		0x_A2, 0x_AD, 0x_03, 0x_F6, 0x_9B, 0x_2F, 0x_56, 0x_D1, 0x_82, 0x_B2, 0x_C9, 0x_1D, 0x_2E, 0x_A6, 0x_94,
		0x_3B, 0x_F4, 0x_7A, 0x_FB, 0x_63, 0x_7D, 0x_F0, 0x_CA, 0x_BF, 0x_18, 0x_B3, 0x_C2, 0x_85, 0x_CE, 0x_FA,
		0x_77, 0x_6E, 0x_CF, 0x_E7, 0x_EF, 0x_84, 0x_05, 0x_7C, 0x_52, 0x_46, 0x_E1, 0x_02, 0x_1C, 0x_E5, 0x_5A,
		0x_60, 0x_C1, 0x_21, 0x_83, 0x_FC, 0x_95, 0x_A1, 0x_32, 0x_12, 0x_8A, 0x_F9, 0x_A4, 0x_1F, 0x_39, 0x_FD,
		0x_5E, 0x_B7, 0x_91, 0x_23, 0x_F8, 0x_AA, 0x_9F, 0x_58, 0x_15, 0x_F5, 0x_29, 0x_8E, 0x_EE, 0x_28, 0x_11,
		0x_3E, 0x_37, 0x_81, 0x_48, 0x_14, 0x_C8, 0x_AF, 0x_CC, 0x_72, 0x_22, 0x_0F, 0x_04, 0x_8B, 0x_E2, 0x_33,
		0x_5B, 0x_D3, 0x_DD, 0x_D5, 0x_A0, 0x_78, 0x_7B, 0x_2C, 0x_D7, 0x_25, 0x_1B, 0x_A8, 0x_C3, 0x_4E, 0x_BB,
		0x_4B, 0x_43, 0x_27, 0x_62, 0x_E6, 0x_9C, 0x_55, 0x_1E, 0x_6A, 0x_66, 0x_8D, 0x_EA, 0x_8F, 0x_4F, 0x_3C,
		0x_89, 0x_E4, 0x_BC, 0x_F1, 0x_DC, 0x_A9, 0x_D8, 0x_CD, 0x_E9, 0x_D4, 0x_01, 0x_86, 0x_1A, 0x_71, 0x_EC,
		0x_67, 0x_ED, 0x_DB, 0x_13, 0x_08, 0x_4A, 0x_3D, 0x_64, 0x_5D, 0x_38, 0x_93, 0x_4C, 0x_73, 0x_49, 0x_70,
		0x_E3, 0x_B6, 0x_FE, 0x_90, 0x_24, 0x_34, 0x_51, 0x_99, 0x_36, 0x_0E, 0x_4D, 0x_B1, 0x_BA,
	];

	helper(S, BASE, -595);
}
// endregion
// region: s_has_zeros_and_minus_2_625_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_625_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_80, 0x_7A, 0x_D3,
		0x_68, 0x_B8, 0x_C4, 0x_44, 0x_74, 0x_9B, 0x_80, 0x_96, 0x_E9, 0x_51,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_13, 0x_66, 0x_22, 0x_EA, 0x_0F, 0x_6C, 0x_A1, 0x_5C, 0x_71, 0x_BB, 0x_AE, 0x_52, 0x_80, 0x_46,
		0x_24, 0x_F6, 0x_07, 0x_C3, 0x_90, 0x_BD, 0x_1D, 0x_3F, 0x_19, 0x_38, 0x_C0, 0x_32, 0x_05, 0x_95, 0x_6E,
		0x_37, 0x_E8, 0x_39, 0x_89, 0x_D5, 0x_8E, 0x_FD, 0x_D6, 0x_4B, 0x_26, 0x_04, 0x_4D, 0x_A0, 0x_44, 0x_B2,
		0x_D8, 0x_49, 0x_EE, 0x_F5, 0x_AB, 0x_72, 0x_6F, 0x_99, 0x_4A, 0x_56, 0x_53, 0x_C9, 0x_18, 0x_03, 0x_E4,
		0x_DB, 0x_08, 0x_84, 0x_B6, 0x_4C, 0x_9B, 0x_68, 0x_5B, 0x_36, 0x_1B, 0x_AD, 0x_DA, 0x_76, 0x_BF, 0x_5D,
		0x_58, 0x_7B, 0x_B7, 0x_E3, 0x_DE, 0x_02, 0x_BE, 0x_E2, 0x_A7, 0x_59, 0x_93, 0x_4F, 0x_98, 0x_31, 0x_1C,
		0x_FC, 0x_3C, 0x_88, 0x_F3, 0x_C6, 0x_74, 0x_01, 0x_C7, 0x_67, 0x_B4, 0x_4E, 0x_F9, 0x_65, 0x_E6, 0x_8D,
		0x_C4, 0x_45, 0x_D9, 0x_C2, 0x_62, 0x_F8, 0x_BC, 0x_5E, 0x_E1, 0x_D1, 0x_FB, 0x_7A, 0x_34, 0x_9C, 0x_27,
		0x_42, 0x_DC, 0x_B9, 0x_DF, 0x_A6, 0x_64, 0x_69, 0x_E9, 0x_12, 0x_96, 0x_17, 0x_F4, 0x_75, 0x_48, 0x_F2,
		0x_EB, 0x_A5, 0x_73, 0x_B0, 0x_41, 0x_8A, 0x_CF, 0x_AA, 0x_14, 0x_28, 0x_F7, 0x_60, 0x_7F, 0x_CA, 0x_82,
		0x_85, 0x_51, 0x_9D, 0x_7D, 0x_FA, 0x_2C, 0x_77, 0x_7C, 0x_FF, 0x_C8, 0x_30, 0x_A4, 0x_AC, 0x_57, 0x_D7,
		0x_3B, 0x_EC, 0x_9F, 0x_10, 0x_DD, 0x_2F, 0x_63, 0x_FE, 0x_11, 0x_B8, 0x_E7, 0x_CE, 0x_6A, 0x_35, 0x_29,
		0x_81, 0x_92, 0x_C5, 0x_6D, 0x_83, 0x_2A, 0x_91, 0x_CB, 0x_5A, 0x_A2, 0x_8C, 0x_A3, 0x_7E,
	];

	helper(S, BASE, -2_625);
}
// endregion
// region: s_has_zeros_and_minus_24_768_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_24_768_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_A2, 0x_C6, 0x_64, 0x_33, 0x_7D, 0x_43, 0x_C7, 0x_77, 0x_A7, 0x_DE, 0x_34, 0x_5C, 0x_EC, 0x_21,
		0x_ED, 0x_D9, 0x_EE, 0x_40, 0x_79, 0x_99, 0x_D9, 0x_B9, 0x_43, 0x_DC, 0x_A9, 0x_4C, 0x_1E, 0x_8D, 0x_7E,
		0x_BA, 0x_8E, 0x_9B, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_31, 0x_1E, 0x_83, 0x_F8, 0x_A1, 0x_75, 0x_04, 0x_D2, 0x_B8, 0x_2A, 0x_E3, 0x_69, 0x_DE, 0x_ED,
		0x_66, 0x_78, 0x_73, 0x_6A, 0x_B6, 0x_FB, 0x_50, 0x_98, 0x_CB, 0x_81, 0x_8F, 0x_4B, 0x_B2, 0x_4C, 0x_3B,
		0x_35, 0x_8C, 0x_D5, 0x_5D, 0x_25, 0x_E6, 0x_18, 0x_57, 0x_21, 0x_F0, 0x_4F, 0x_74, 0x_24, 0x_DC, 0x_0E,
		0x_4D, 0x_BF, 0x_AC, 0x_A6, 0x_B4, 0x_E0, 0x_8E, 0x_1B, 0x_F2, 0x_23, 0x_3A, 0x_38, 0x_FE, 0x_60, 0x_0F,
		0x_D9, 0x_D4, 0x_43, 0x_2C, 0x_C6, 0x_E1, 0x_7A, 0x_3C, 0x_03, 0x_6E, 0x_5A, 0x_65, 0x_93, 0x_28, 0x_59,
		0x_D3, 0x_87, 0x_51, 0x_E8, 0x_41, 0x_6F, 0x_49, 0x_10, 0x_AD, 0x_77, 0x_DA, 0x_92, 0x_08, 0x_C1, 0x_C3,
		0x_D8, 0x_E9, 0x_FF, 0x_B9, 0x_15, 0x_67, 0x_6B, 0x_34, 0x_27, 0x_D1, 0x_9D, 0x_A5, 0x_BA, 0x_3D, 0x_1D,
		0x_7C, 0x_D0, 0x_7D, 0x_FA, 0x_1A, 0x_3F, 0x_C7, 0x_BB, 0x_F7, 0x_AE, 0x_EE, 0x_9C, 0x_8B, 0x_A9, 0x_5B,
		0x_AB, 0x_7F, 0x_88, 0x_DF, 0x_BD, 0x_11, 0x_39, 0x_E4, 0x_A2, 0x_02, 0x_55, 0x_F3, 0x_C0, 0x_12, 0x_9A,
		0x_29, 0x_AA, 0x_17, 0x_46, 0x_1C, 0x_89, 0x_22, 0x_1F, 0x_C4, 0x_44, 0x_A3, 0x_A7, 0x_E5, 0x_FD, 0x_54,
		0x_5C, 0x_33, 0x_79, 0x_97, 0x_CA, 0x_A0, 0x_E7, 0x_C8, 0x_82, 0x_9B, 0x_52, 0x_EC, 0x_7E, 0x_30, 0x_68,
		0x_40, 0x_DD, 0x_07, 0x_70, 0x_6C, 0x_D7, 0x_F6, 0x_62, 0x_06, 0x_F5, 0x_9F, 0x_B0, 0x_91, 0x_7B, 0x_8D,
		0x_85, 0x_5E, 0x_B3, 0x_99, 0x_C2, 0x_16, 0x_F4, 0x_36, 0x_BC, 0x_BE, 0x_C9, 0x_95, 0x_53,
	];

	helper(S, BASE, -24_768);
}
// endregion
// region: s_has_zeros_and_minus_882_821_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_882_821_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD,
		0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_FC, 0x_27, 0x_1A, 0x_3B, 0x_D9, 0x_E5, 0x_81, 0x_3A, 0x_64, 0x_6B,
		0x_D4, 0x_61, 0x_90, 0x_84, 0x_DD, 0x_1A, 0x_A4, 0x_EA, 0x_0E, 0x_06, 0x_36, 0x_BD, 0x_29, 0x_25, 0x_FD,
		0x_76, 0x_1E, 0x_79, 0x_34, 0x_BB, 0x_11, 0x_EB, 0x_3F, 0x_03, 0x_34, 0x_92, 0x_A8, 0x_25, 0x_BE, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_03, 0x_01, 0x_9B, 0x_B3, 0x_5B, 0x_8F, 0x_7F, 0x_39, 0x_18, 0x_E7, 0x_4A, 0x_36, 0x_D8, 0x_65,
		0x_B7, 0x_7E, 0x_D5, 0x_69, 0x_EC, 0x_50, 0x_89, 0x_DA, 0x_FC, 0x_08, 0x_67, 0x_17, 0x_8B, 0x_4B, 0x_EA,
		0x_76, 0x_6E, 0x_B5, 0x_58, 0x_9C, 0x_16, 0x_DC, 0x_21, 0x_64, 0x_1A, 0x_75, 0x_93, 0x_6C, 0x_43, 0x_8A,
		0x_B6, 0x_23, 0x_F5, 0x_7B, 0x_81, 0x_F2, 0x_EB, 0x_41, 0x_22, 0x_A8, 0x_A4, 0x_45, 0x_1E, 0x_4E, 0x_BB,
		0x_63, 0x_31, 0x_5C, 0x_6D, 0x_F4, 0x_78, 0x_7C, 0x_1D, 0x_FB, 0x_9F, 0x_BE, 0x_42, 0x_57, 0x_8E, 0x_A2,
		0x_55, 0x_83, 0x_37, 0x_E9, 0x_C1, 0x_F7, 0x_82, 0x_4C, 0x_F6, 0x_F0, 0x_C3, 0x_9E, 0x_73, 0x_A0, 0x_5D,
		0x_B4, 0x_C0, 0x_6B, 0x_38, 0x_AA, 0x_D0, 0x_B9, 0x_29, 0x_84, 0x_EF, 0x_0F, 0x_3C, 0x_E2, 0x_11, 0x_F9,
		0x_E1, 0x_86, 0x_40, 0x_47, 0x_7A, 0x_04, 0x_E6, 0x_D9, 0x_79, 0x_68, 0x_99, 0x_80, 0x_98, 0x_AD, 0x_B8,
		0x_52, 0x_74, 0x_5A, 0x_E4, 0x_26, 0x_6F, 0x_DE, 0x_0E, 0x_35, 0x_13, 0x_72, 0x_59, 0x_FA, 0x_3F, 0x_2E,
		0x_27, 0x_85, 0x_A1, 0x_A6, 0x_DB, 0x_1F, 0x_30, 0x_90, 0x_9A, 0x_34, 0x_FE, 0x_AC, 0x_33, 0x_32, 0x_2F,
		0x_15, 0x_F3, 0x_EE, 0x_AF, 0x_94, 0x_BC, 0x_06, 0x_49, 0x_E5, 0x_60, 0x_A3, 0x_B1, 0x_96, 0x_AB, 0x_BD,
		0x_53, 0x_B2, 0x_CE, 0x_C5, 0x_14, 0x_07, 0x_9D, 0x_25, 0x_E0, 0x_54, 0x_8C, 0x_7D, 0x_51, 0x_FD, 0x_70,
		0x_D4, 0x_F1, 0x_61, 0x_88, 0x_D3, 0x_D1, 0x_CC, 0x_A9, 0x_92, 0x_3A, 0x_A7, 0x_91, 0x_CD,
	];

	helper(S, BASE, -882_821);
}
// endregion
// region: s_has_zeros_and_minus_6_286_221_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_6_286_221_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F,
		0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F,
		0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_1E, 0x_4F, 0x_23, 0x_DA, 0x_12, 0x_9E, 0x_8F, 0x_1D, 0x_CD, 0x_E5,
		0x_33, 0x_2F, 0x_22, 0x_90, 0x_DC, 0x_24, 0x_B5, 0x_14, 0x_CF, 0x_EE, 0x_A9, 0x_8F,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_3A, 0x_1B, 0x_B6, 0x_76, 0x_B2, 0x_43, 0x_74, 0x_11, 0x_FA, 0x_92, 0x_E2, 0x_B7, 0x_58, 0x_C8,
		0x_60, 0x_9B, 0x_21, 0x_23, 0x_9E, 0x_49, 0x_91, 0x_DB, 0x_8D, 0x_1C, 0x_65, 0x_C0, 0x_6C, 0x_9F, 0x_E3,
		0x_9D, 0x_0F, 0x_A9, 0x_4D, 0x_17, 0x_C6, 0x_C9, 0x_B9, 0x_F7, 0x_8B, 0x_3E, 0x_88, 0x_51, 0x_C5, 0x_DF,
		0x_72, 0x_24, 0x_F1, 0x_A4, 0x_22, 0x_E5, 0x_48, 0x_01, 0x_FE, 0x_13, 0x_F5, 0x_59, 0x_E9, 0x_6B, 0x_1A,
		0x_A6, 0x_B4, 0x_12, 0x_84, 0x_AE, 0x_BC, 0x_2A, 0x_3B, 0x_36, 0x_FC, 0x_A8, 0x_C1, 0x_04, 0x_D1, 0x_66,
		0x_BE, 0x_BF, 0x_8F, 0x_18, 0x_34, 0x_F6, 0x_AC, 0x_64, 0x_CC, 0x_A2, 0x_EA, 0x_DD, 0x_CA, 0x_D7, 0x_07,
		0x_D8, 0x_3F, 0x_33, 0x_14, 0x_55, 0x_E0, 0x_5A, 0x_C3, 0x_ED, 0x_57, 0x_C2, 0x_CD, 0x_DC, 0x_35, 0x_B8,
		0x_52, 0x_1D, 0x_26, 0x_EE, 0x_46, 0x_16, 0x_E4, 0x_08, 0x_86, 0x_28, 0x_73, 0x_BD, 0x_A5, 0x_96, 0x_FD,
		0x_8C, 0x_83, 0x_C7, 0x_AD, 0x_D9, 0x_B5, 0x_FF, 0x_DE, 0x_44, 0x_2E, 0x_94, 0x_89, 0x_D6, 0x_9C, 0x_31,
		0x_37, 0x_70, 0x_CF, 0x_45, 0x_D4, 0x_03, 0x_E6, 0x_6A, 0x_EB, 0x_F4, 0x_C4, 0x_6D, 0x_4F, 0x_71, 0x_68,
		0x_B0, 0x_5D, 0x_93, 0x_A3, 0x_30, 0x_AA, 0x_7C, 0x_06, 0x_7A, 0x_1F, 0x_69, 0x_90, 0x_75, 0x_02, 0x_7D,
		0x_F0, 0x_67, 0x_27, 0x_1E, 0x_05, 0x_2C, 0x_42, 0x_0E, 0x_7B, 0x_D3, 0x_62, 0x_47, 0x_53, 0x_5C, 0x_D0,
		0x_F9, 0x_98, 0x_E1, 0x_80, 0x_10, 0x_40, 0x_2F, 0x_56, 0x_B1, 0x_38, 0x_EC, 0x_5B, 0x_82,
	];

	helper(S, BASE, -6_286_221);
}
// endregion
// region: s_has_zeros_and_minus_99_533_755_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_99_533_755_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7,
		0x_D7, 0x_D7, 0x_35, 0x_C7, 0x_A0, 0x_EA, 0x_7F, 0x_2A, 0x_AD, 0x_88, 0x_7C, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_58, 0x_3C, 0x_4A, 0x_06, 0x_59, 0x_B9, 0x_F0, 0x_FC, 0x_2C, 0x_85, 0x_F1, 0x_27, 0x_35, 0x_1F,
		0x_2A, 0x_B0, 0x_6D, 0x_91, 0x_D2, 0x_B2, 0x_18, 0x_A0, 0x_2F, 0x_8E, 0x_DF, 0x_4C, 0x_E1, 0x_15, 0x_61,
		0x_F6, 0x_30, 0x_36, 0x_FF, 0x_99, 0x_14, 0x_C3, 0x_66, 0x_7C, 0x_F7, 0x_F4, 0x_CA, 0x_BF, 0x_7B, 0x_CF,
		0x_EF, 0x_EB, 0x_F8, 0x_E0, 0x_40, 0x_3E, 0x_73, 0x_5D, 0x_BC, 0x_81, 0x_AB, 0x_74, 0x_29, 0x_B5, 0x_50,
		0x_C4, 0x_8F, 0x_D3, 0x_2E, 0x_6B, 0x_5E, 0x_C5, 0x_43, 0x_C2, 0x_CD, 0x_5B, 0x_EC, 0x_3F, 0x_88, 0x_C0,
		0x_D6, 0x_94, 0x_7D, 0x_EE, 0x_97, 0x_A5, 0x_0F, 0x_9A, 0x_65, 0x_49, 0x_D0, 0x_C1, 0x_FE, 0x_34, 0x_D8,
		0x_01, 0x_3A, 0x_AA, 0x_16, 0x_22, 0x_1B, 0x_31, 0x_93, 0x_89, 0x_9F, 0x_1C, 0x_63, 0x_4D, 0x_79, 0x_C8,
		0x_1E, 0x_E8, 0x_B7, 0x_0E, 0x_13, 0x_4F, 0x_7E, 0x_DB, 0x_82, 0x_A7, 0x_E7, 0x_60, 0x_E5, 0x_52, 0x_75,
		0x_37, 0x_56, 0x_A4, 0x_9C, 0x_F3, 0x_21, 0x_04, 0x_46, 0x_77, 0x_A3, 0x_55, 0x_76, 0x_5A, 0x_B3, 0x_68,
		0x_AC, 0x_86, 0x_3D, 0x_6A, 0x_12, 0x_E4, 0x_98, 0x_1A, 0x_CC, 0x_9E, 0x_B1, 0x_9D, 0x_9B, 0x_8C, 0x_8B,
		0x_07, 0x_AD, 0x_69, 0x_03, 0x_8D, 0x_FD, 0x_45, 0x_D5, 0x_48, 0x_AF, 0x_24, 0x_CB, 0x_BE, 0x_C7, 0x_51,
		0x_4E, 0x_B4, 0x_8A, 0x_67, 0x_05, 0x_A1, 0x_64, 0x_47, 0x_DC, 0x_DA, 0x_78, 0x_87, 0x_4B, 0x_A8, 0x_23,
		0x_38, 0x_EA, 0x_A2, 0x_42, 0x_33, 0x_FA, 0x_90, 0x_5F, 0x_F9, 0x_39, 0x_41, 0x_BB, 0x_E3,
	];

	helper(S, BASE, -99_533_755);
}
// endregion
// region: s_has_zeros_and_minus_403_326_102_in_base_193_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_403_326_102_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_48, 0x_03, 0x_6E, 0x_EE, 0x_CA, 0x_7E, 0x_C5, 0x_FA, 0x_DE,
		0x_C4, 0x_CB, 0x_C9, 0x_9C, 0x_44, 0x_3F, 0x_92, 0x_E4, 0x_EA, 0x_3D, 0x_35, 0x_3A, 0x_96, 0x_A1, 0x_A5,
		0x_1A, 0x_23, 0x_1F, 0x_12, 0x_54, 0x_AB, 0x_8F, 0x_ED, 0x_B8, 0x_59, 0x_F0, 0x_82, 0x_32, 0x_67, 0x_DB,
		0x_57, 0x_3D, 0x_C0, 0x_A5, 0x_BD, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_A2, 0x_BA, 0x_63, 0x_A5, 0x_95, 0x_1C, 0x_3C, 0x_A6, 0x_93, 0x_F6, 0x_29, 0x_78, 0x_4B, 0x_1E, 0x_CB,
		0x_F0, 0x_A1, 0x_C5, 0x_9C, 0x_03, 0x_31, 0x_1D, 0x_8C, 0x_21, 0x_6C, 0x_23, 0x_04, 0x_6D, 0x_42, 0x_37,
		0x_BF, 0x_BE, 0x_91, 0x_8F, 0x_51, 0x_D1, 0x_7F, 0x_6B, 0x_41, 0x_D7, 0x_92, 0x_89, 0x_C4, 0x_83, 0x_7D,
		0x_DE, 0x_26, 0x_52, 0x_19, 0x_5D, 0x_5F, 0x_3B, 0x_77, 0x_EF, 0x_47, 0x_AB, 0x_48, 0x_85, 0x_28, 0x_35,
		0x_2A, 0x_6A, 0x_36, 0x_BD, 0x_45, 0x_59, 0x_02, 0x_6F, 0x_72, 0x_3F, 0x_82, 0x_2C, 0x_C8, 0x_C9, 0x_C3,
		0x_58, 0x_68, 0x_27, 0x_DC, 0x_E8, 0x_44, 0x_49, 0x_F7, 0x_B2, 0x_B8, 0x_B9, 0x_EA, 0x_A8, 0x_99, 0x_8E,
		0x_C1, 0x_38, 0x_9E, 0x_10, 0x_B4, 0x_1F, 0x_74, 0x_5A, 0x_1B, 0x_BB, 0x_73, 0x_17, 0x_E6, 0x_67, 0x_DD,
		0x_1A, 0x_EE, 0x_FE, 0x_9D, 0x_11, 0x_7A, 0x_2E, 0x_12, 0x_90, 0x_0F, 0x_C0, 0x_E7, 0x_88, 0x_14, 0x_E9,
		0x_CC, 0x_AE, 0x_D3, 0x_D8, 0x_DF, 0x_75, 0x_97, 0x_F8, 0x_30, 0x_3A, 0x_96, 0x_94, 0x_F9, 0x_3D, 0x_32,
		0x_D0, 0x_8B, 0x_AF, 0x_7E, 0x_FC, 0x_9A, 0x_55, 0x_24, 0x_A3, 0x_DB, 0x_50, 0x_C7, 0x_86, 0x_15, 0x_EB,
		0x_54, 0x_4D, 0x_C6, 0x_E0, 0x_4A, 0x_64, 0x_B0, 0x_F2, 0x_5C, 0x_01, 0x_4F, 0x_6E, 0x_5E, 0x_84, 0x_06,
		0x_B3, 0x_9F, 0x_16, 0x_13, 0x_18, 0x_53, 0x_40, 0x_39, 0x_F4, 0x_FD, 0x_2F, 0x_B7, 0x_80, 0x_A7, 0x_A9,
		0x_FA, 0x_87, 0x_3E, 0x_81, 0x_66, 0x_E4, 0x_46, 0x_EC, 0x_57, 0x_CE, 0x_98, 0x_ED, 0x_FB,
	];

	helper(S, BASE, -403_326_102);
}
// endregion
// region: s_has_zeros_and_minus_5_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_5_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_58, 0x_0A, 0x_15, 0x_45, 0x_A3, 0x_04, 0x_E1, 0x_FD, 0x_A0,
		0x_BF, 0x_8E, 0x_88,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_03, 0x_48, 0x_42, 0x_A4, 0x_58, 0x_B1, 0x_08, 0x_2A, 0x_B7, 0x_E4, 0x_D1, 0x_81, 0x_78, 0x_8C,
		0x_86, 0x_BE, 0x_77, 0x_5E, 0x_E3, 0x_E6, 0x_4C, 0x_35, 0x_3E, 0x_CD, 0x_8A, 0x_9D, 0x_6A, 0x_EB, 0x_23,
		0x_C0, 0x_E8, 0x_18, 0x_45, 0x_79, 0x_A1, 0x_1F, 0x_2C, 0x_21, 0x_56, 0x_A0, 0x_C4, 0x_05, 0x_51, 0x_5F,
		0x_8F, 0x_0F, 0x_F4, 0x_26, 0x_99, 0x_9E, 0x_9F, 0x_2F, 0x_8B, 0x_49, 0x_83, 0x_46, 0x_E1, 0x_17, 0x_84,
		0x_40, 0x_F0, 0x_0E, 0x_FD, 0x_4F, 0x_AF, 0x_31, 0x_3C, 0x_3D, 0x_7A, 0x_41, 0x_CA, 0x_F9, 0x_D3, 0x_25,
		0x_C1, 0x_EE, 0x_87, 0x_DC, 0x_F8, 0x_A6, 0x_4B, 0x_D7, 0x_16, 0x_43, 0x_80, 0x_1D, 0x_65, 0x_FC, 0x_5C,
		0x_54, 0x_1A, 0x_5B, 0x_4D, 0x_D8, 0x_44, 0x_75, 0x_12, 0x_30, 0x_47, 0x_7F, 0x_72, 0x_E2, 0x_A7, 0x_F1,
		0x_C7, 0x_A3, 0x_06, 0x_D4, 0x_96, 0x_68, 0x_C6, 0x_AA, 0x_F6, 0x_88, 0x_07, 0x_BB, 0x_DD, 0x_66, 0x_F2,
		0x_7E, 0x_39, 0x_95, 0x_A8, 0x_CC, 0x_C8, 0x_5A, 0x_DF, 0x_53, 0x_63, 0x_8D, 0x_3B, 0x_34, 0x_CB, 0x_D9,
		0x_1E, 0x_AC, 0x_F5, 0x_92, 0x_AB, 0x_B0, 0x_7D, 0x_33, 0x_60, 0x_3F, 0x_C2, 0x_9A, 0x_D6, 0x_29, 0x_9B,
		0x_11, 0x_BF, 0x_B2, 0x_04, 0x_4A, 0x_C5, 0x_74, 0x_2E, 0x_57, 0x_D0, 0x_E7, 0x_AE, 0x_50, 0x_EC, 0x_CF,
		0x_64, 0x_02, 0x_13, 0x_B5, 0x_67, 0x_D2, 0x_90, 0x_EA, 0x_1C, 0x_82, 0x_E0, 0x_93, 0x_B4, 0x_98, 0x_76,
		0x_A2, 0x_69, 0x_70, 0x_59, 0x_19, 0x_7B, 0x_B3, 0x_73, 0x_55, 0x_24, 0x_A9, 0x_FA, 0x_71, 0x_15, 0x_B9,
		0x_6D, 0x_A5, 0x_91, 0x_89, 0x_B6, 0x_38, 0x_27, 0x_D5, 0x_62, 0x_52, 0x_8E, 0x_ED, 0x_FE, 0x_DB, 0x_FF,
		0x_BC, 0x_7C, 0x_EF, 0x_B8, 0x_4E, 0x_3A, 0x_E9, 0x_BA, 0x_9C, 0x_CE, 0x_97, 0x_DE, 0x_C9, 0x_14, 0x_6C,
		0x_C3, 0x_37, 0x_01, 0x_36, 0x_FB, 0x_22, 0x_85, 0x_DA, 0x_F7, 0x_10, 0x_28, 0x_61, 0x_E5, 0x_6F, 0x_6B,
		0x_5D, 0x_AD, 0x_BD, 0x_1B, 0x_F3, 0x_32, 0x_6E,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_zeros_and_minus_49_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_49_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87,
		0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_69, 0x_0D, 0x_F5, 0x_05, 0x_10, 0x_30,
		0x_4E, 0x_E6, 0x_23, 0x_30, 0x_24, 0x_A4, 0x_D9, 0x_D7, 0x_A2, 0x_90, 0x_EB, 0x_40, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_87, 0x_FF, 0x_33, 0x_5F, 0x_C6, 0x_F2, 0x_8D, 0x_EC, 0x_02, 0x_B8, 0x_F3, 0x_60, 0x_9A, 0x_24, 0x_90,
		0x_9F, 0x_42, 0x_B3, 0x_54, 0x_30, 0x_05, 0x_2C, 0x_DF, 0x_28, 0x_39, 0x_4D, 0x_BB, 0x_FD, 0x_45, 0x_CD,
		0x_86, 0x_C0, 0x_E4, 0x_E6, 0x_96, 0x_1D, 0x_E9, 0x_D3, 0x_9E, 0x_BC, 0x_BF, 0x_A9, 0x_A1, 0x_49, 0x_73,
		0x_26, 0x_57, 0x_DB, 0x_46, 0x_69, 0x_40, 0x_BA, 0x_99, 0x_FE, 0x_C4, 0x_12, 0x_07, 0x_92, 0x_41, 0x_BE,
		0x_1A, 0x_6D, 0x_23, 0x_5D, 0x_E0, 0x_6F, 0x_D8, 0x_A2, 0x_CE, 0x_10, 0x_B9, 0x_83, 0x_06, 0x_6B, 0x_1F,
		0x_B6, 0x_E2, 0x_FB, 0x_F9, 0x_DE, 0x_7F, 0x_FC, 0x_51, 0x_16, 0x_A3, 0x_71, 0x_F4, 0x_17, 0x_5A, 0x_DD,
		0x_53, 0x_59, 0x_F5, 0x_56, 0x_4A, 0x_F6, 0x_03, 0x_74, 0x_3B, 0x_1E, 0x_1C, 0x_B2, 0x_C3, 0x_29, 0x_7E,
		0x_8B, 0x_91, 0x_DA, 0x_5B, 0x_55, 0x_89, 0x_6A, 0x_48, 0x_8E, 0x_76, 0x_7A, 0x_C7, 0x_EF, 0x_F8, 0x_98,
		0x_C2, 0x_AA, 0x_8A, 0x_14, 0x_36, 0x_50, 0x_7B, 0x_3F, 0x_6C, 0x_CB, 0x_38, 0x_22, 0x_B1, 0x_4E, 0x_B4,
		0x_8F, 0x_97, 0x_3C, 0x_AB, 0x_EB, 0x_7D, 0x_A5, 0x_A7, 0x_88, 0x_66, 0x_35, 0x_FA, 0x_72, 0x_E5, 0x_D6,
		0x_25, 0x_31, 0x_C8, 0x_01, 0x_3D, 0x_A8, 0x_4F, 0x_43, 0x_D0, 0x_63, 0x_79, 0x_B0, 0x_D9, 0x_27, 0x_A6,
		0x_67, 0x_52, 0x_3E, 0x_D4, 0x_EE, 0x_B7, 0x_61, 0x_BD, 0x_94, 0x_ED, 0x_13, 0x_18, 0x_F1, 0x_34, 0x_9C,
		0x_95, 0x_58, 0x_8C, 0x_A0, 0x_B5, 0x_15, 0x_64, 0x_75, 0x_9D, 0x_4B, 0x_62, 0x_E1, 0x_81, 0x_11, 0x_D1,
		0x_C5, 0x_08, 0x_85, 0x_19, 0x_CA, 0x_A4, 0x_68, 0x_EA, 0x_80, 0x_AC, 0x_47, 0x_F0, 0x_CC, 0x_37, 0x_F7,
		0x_9B, 0x_2E, 0x_CF, 0x_2A, 0x_82, 0x_1B, 0x_AE, 0x_70, 0x_D5, 0x_C9, 0x_77, 0x_5C, 0x_DC, 0x_6E, 0x_3A,
		0x_4C, 0x_44, 0x_21, 0x_2F, 0x_D2, 0x_93, 0x_32, 0x_E7, 0x_65, 0x_0F, 0x_7C, 0x_E3, 0x_E8, 0x_84, 0x_5E,
		0x_78, 0x_04, 0x_C1, 0x_AF, 0x_0E, 0x_AD, 0x_D7,
	];

	helper(S, BASE, -49);
}
// endregion
// region: s_has_zeros_and_minus_903_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_903_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70,
		0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_70, 0x_CA, 0x_C6, 0x_09,
		0x_6C, 0x_1A, 0x_CF, 0x_11, 0x_EE, 0x_95, 0x_F2, 0x_01, 0x_17, 0x_FE, 0x_57, 0x_82, 0x_B8, 0x_12, 0x_A4,
		0x_72, 0x_EB, 0x_E4, 0x_CC, 0x_62, 0x_F5, 0x_47, 0x_43, 0x_8F, 0x_A3, 0x_AA, 0x_6F, 0x_27, 0x_74, 0x_06,
		0x_4F, 0x_02, 0x_16, 0x_D1, 0x_5D, 0x_FB, 0x_E1, 0x_C3,
	];
	const BASE: &[u8] = &[
		0x_70, 0x_9C, 0x_DF, 0x_CA, 0x_9D, 0x_18, 0x_6A, 0x_E7, 0x_E6, 0x_8A, 0x_CD, 0x_21, 0x_34, 0x_F6, 0x_2E,
		0x_88, 0x_AC, 0x_9A, 0x_97, 0x_35, 0x_C1, 0x_86, 0x_EE, 0x_A3, 0x_22, 0x_D9, 0x_77, 0x_94, 0x_B4, 0x_C9,
		0x_55, 0x_68, 0x_C8, 0x_CF, 0x_7C, 0x_D8, 0x_96, 0x_7D, 0x_EB, 0x_7E, 0x_6B, 0x_D6, 0x_BB, 0x_03, 0x_5B,
		0x_42, 0x_36, 0x_0F, 0x_27, 0x_F2, 0x_74, 0x_AE, 0x_E2, 0x_90, 0x_12, 0x_24, 0x_5E, 0x_B3, 0x_33, 0x_26,
		0x_85, 0x_71, 0x_FD, 0x_78, 0x_4D, 0x_83, 0x_95, 0x_CC, 0x_61, 0x_29, 0x_41, 0x_E9, 0x_8E, 0x_ED, 0x_62,
		0x_3E, 0x_75, 0x_64, 0x_5C, 0x_52, 0x_01, 0x_7F, 0x_E3, 0x_8F, 0x_79, 0x_91, 0x_81, 0x_F9, 0x_AD, 0x_10,
		0x_B8, 0x_D4, 0x_B9, 0x_63, 0x_FF, 0x_8D, 0x_2A, 0x_C2, 0x_16, 0x_AF, 0x_D1, 0x_1D, 0x_BE, 0x_60, 0x_73,
		0x_B2, 0x_89, 0x_92, 0x_08, 0x_98, 0x_2F, 0x_49, 0x_4B, 0x_2C, 0x_46, 0x_17, 0x_A6, 0x_D5, 0x_A7, 0x_6C,
		0x_84, 0x_CB, 0x_EC, 0x_4A, 0x_CE, 0x_B6, 0x_FA, 0x_C0, 0x_8B, 0x_9F, 0x_A5, 0x_BA, 0x_F4, 0x_40, 0x_05,
		0x_66, 0x_37, 0x_80, 0x_65, 0x_28, 0x_6E, 0x_99, 0x_EF, 0x_6F, 0x_E5, 0x_93, 0x_4E, 0x_DE, 0x_7A, 0x_23,
		0x_3F, 0x_51, 0x_1B, 0x_14, 0x_04, 0x_E0, 0x_6D, 0x_BC, 0x_54, 0x_58, 0x_F5, 0x_30, 0x_C6, 0x_D3, 0x_C3,
		0x_76, 0x_D7, 0x_3D, 0x_32, 0x_50, 0x_A4, 0x_A1, 0x_5F, 0x_87, 0x_1A, 0x_1F, 0x_06, 0x_B5, 0x_C7, 0x_3A,
		0x_A8, 0x_DB, 0x_BD, 0x_82, 0x_7B, 0x_E8, 0x_F3, 0x_59, 0x_F8, 0x_15, 0x_E1, 0x_8C, 0x_47, 0x_D0, 0x_A9,
		0x_02, 0x_5A, 0x_11, 0x_1E, 0x_57, 0x_F0, 0x_38, 0x_FB, 0x_13, 0x_B1, 0x_FE, 0x_A2, 0x_DD, 0x_1C, 0x_DA,
		0x_F7, 0x_B0, 0x_4F, 0x_07, 0x_E4, 0x_AB, 0x_48, 0x_56, 0x_FC, 0x_44, 0x_67, 0x_9E, 0x_25, 0x_69, 0x_4C,
		0x_45, 0x_F1, 0x_43, 0x_BF, 0x_31, 0x_19, 0x_B7, 0x_39, 0x_D2, 0x_9B, 0x_A0, 0x_72, 0x_0E, 0x_DC, 0x_53,
		0x_3B, 0x_C5, 0x_3C, 0x_5D, 0x_EA, 0x_AA, 0x_C4,
	];

	helper(S, BASE, -903);
}
// endregion
// region: s_has_zeros_and_minus_2_824_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_2_824_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_75, 0x_13, 0x_0D, 0x_52,
		0x_0F, 0x_D5, 0x_8C, 0x_C9, 0x_E2, 0x_CB, 0x_93, 0x_C7, 0x_DC, 0x_9D, 0x_97, 0x_B1, 0x_BB, 0x_A8, 0x_AB,
		0x_5A, 0x_9F, 0x_F8, 0x_A7, 0x_4F, 0x_DA, 0x_54, 0x_47, 0x_61, 0x_FD, 0x_F1, 0x_D4, 0x_B7, 0x_07, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_08, 0x_06, 0x_5C, 0x_3C, 0x_73, 0x_84, 0x_62, 0x_F6, 0x_56, 0x_3D, 0x_75, 0x_95, 0x_7A, 0x_E4,
		0x_1F, 0x_B8, 0x_8A, 0x_4E, 0x_B3, 0x_C1, 0x_2C, 0x_22, 0x_2F, 0x_E1, 0x_E5, 0x_36, 0x_54, 0x_F2, 0x_D3,
		0x_A7, 0x_39, 0x_B2, 0x_CD, 0x_B7, 0x_92, 0x_6F, 0x_5A, 0x_7F, 0x_ED, 0x_2A, 0x_40, 0x_77, 0x_28, 0x_D8,
		0x_66, 0x_8D, 0x_3B, 0x_AA, 0x_5F, 0x_48, 0x_32, 0x_42, 0x_E9, 0x_B5, 0x_43, 0x_C2, 0x_45, 0x_83, 0x_57,
		0x_B1, 0x_4D, 0x_90, 0x_A9, 0x_50, 0x_94, 0x_B0, 0x_04, 0x_9B, 0x_64, 0x_14, 0x_EF, 0x_D7, 0x_2E, 0x_D4,
		0x_B4, 0x_1D, 0x_19, 0x_9C, 0x_4F, 0x_6D, 0x_BE, 0x_61, 0x_02, 0x_DF, 0x_7C, 0x_74, 0x_9F, 0x_98, 0x_EE,
		0x_76, 0x_5D, 0x_3E, 0x_17, 0x_EB, 0x_49, 0x_53, 0x_BF, 0x_A4, 0x_D0, 0x_C9, 0x_AB, 0x_10, 0x_E6, 0x_60,
		0x_4A, 0x_01, 0x_13, 0x_47, 0x_BA, 0x_E3, 0x_67, 0x_03, 0x_15, 0x_8C, 0x_69, 0x_46, 0x_21, 0x_6C, 0x_4C,
		0x_6B, 0x_7B, 0x_1E, 0x_58, 0x_35, 0x_FD, 0x_E8, 0x_99, 0x_7E, 0x_12, 0x_8E, 0x_71, 0x_8B, 0x_1B, 0x_87,
		0x_70, 0x_6A, 0x_CA, 0x_5B, 0x_F1, 0x_9E, 0x_E2, 0x_78, 0x_26, 0x_41, 0x_81, 0x_CB, 0x_F5, 0x_F7, 0x_FA,
		0x_B6, 0x_63, 0x_29, 0x_C7, 0x_38, 0x_85, 0x_CE, 0x_82, 0x_16, 0x_05, 0x_31, 0x_D6, 0x_C0, 0x_AC, 0x_EC,
		0x_91, 0x_8F, 0x_F3, 0x_A8, 0x_D1, 0x_F8, 0x_E0, 0x_5E, 0x_30, 0x_55, 0x_A3, 0x_93, 0x_D2, 0x_97, 0x_7D,
		0x_A1, 0x_FF, 0x_4B, 0x_07, 0x_DB, 0x_51, 0x_AE, 0x_CC, 0x_6E, 0x_FE, 0x_9D, 0x_C3, 0x_72, 0x_0E, 0x_18,
		0x_33, 0x_C4, 0x_88, 0x_F9, 0x_B9, 0x_CF, 0x_25, 0x_A6, 0x_A0, 0x_34, 0x_AF, 0x_BD, 0x_DC, 0x_1A, 0x_44,
		0x_BC, 0x_9A, 0x_C8, 0x_11, 0x_65, 0x_C5, 0x_1C, 0x_E7, 0x_A5, 0x_79, 0x_86, 0x_37, 0x_80, 0x_89, 0x_59,
		0x_DA, 0x_FC, 0x_D9, 0x_FB, 0x_EA, 0x_DE, 0x_F0, 0x_DD, 0x_F4, 0x_68, 0x_D5, 0x_0F, 0x_24, 0x_52, 0x_3A,
		0x_96, 0x_C6, 0x_BB, 0x_27, 0x_3F, 0x_A2, 0x_AD,
	];

	helper(S, BASE, -2_824);
}
// endregion
// region: s_has_zeros_and_minus_13_155_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_13_155_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_4E, 0x_6E, 0x_EE, 0x_0A, 0x_A6, 0x_BA, 0x_61, 0x_A1, 0x_A9,
		0x_42, 0x_65, 0x_94, 0x_71, 0x_8A, 0x_6B, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_4E, 0x_1D, 0x_91, 0x_9A, 0x_F6, 0x_AB, 0x_ED, 0x_F8, 0x_DB, 0x_A9, 0x_1B, 0x_40, 0x_F0, 0x_52, 0x_21,
		0x_BF, 0x_73, 0x_98, 0x_56, 0x_C5, 0x_5F, 0x_02, 0x_B0, 0x_EA, 0x_78, 0x_5C, 0x_D2, 0x_1A, 0x_0E, 0x_F4,
		0x_97, 0x_85, 0x_9D, 0x_84, 0x_15, 0x_28, 0x_F2, 0x_BD, 0x_F3, 0x_22, 0x_E9, 0x_41, 0x_FD, 0x_55, 0x_61,
		0x_2C, 0x_C1, 0x_B5, 0x_34, 0x_8D, 0x_2E, 0x_A6, 0x_B7, 0x_6E, 0x_99, 0x_D6, 0x_2F, 0x_82, 0x_D3, 0x_D5,
		0x_94, 0x_7E, 0x_A8, 0x_FC, 0x_EE, 0x_57, 0x_66, 0x_17, 0x_43, 0x_6F, 0x_8C, 0x_23, 0x_74, 0x_E3, 0x_11,
		0x_53, 0x_5B, 0x_44, 0x_F1, 0x_A2, 0x_4D, 0x_3F, 0x_54, 0x_E5, 0x_A1, 0x_E1, 0x_06, 0x_39, 0x_13, 0x_B1,
		0x_CF, 0x_77, 0x_FF, 0x_A7, 0x_25, 0x_3D, 0x_7D, 0x_B8, 0x_8F, 0x_42, 0x_26, 0x_E6, 0x_03, 0x_FA, 0x_BC,
		0x_6A, 0x_07, 0x_16, 0x_6B, 0x_E2, 0x_E8, 0x_CD, 0x_DD, 0x_C4, 0x_33, 0x_08, 0x_36, 0x_59, 0x_48, 0x_5D,
		0x_A5, 0x_D4, 0x_3E, 0x_EB, 0x_B6, 0x_AA, 0x_BE, 0x_35, 0x_3A, 0x_81, 0x_63, 0x_95, 0x_45, 0x_19, 0x_BA,
		0x_86, 0x_64, 0x_32, 0x_FB, 0x_9B, 0x_7C, 0x_70, 0x_B3, 0x_68, 0x_D7, 0x_93, 0x_38, 0x_A0, 0x_A4, 0x_37,
		0x_D1, 0x_E7, 0x_E0, 0x_89, 0x_6C, 0x_DE, 0x_47, 0x_4F, 0x_4B, 0x_D9, 0x_96, 0x_72, 0x_C6, 0x_6D, 0x_D0,
		0x_3B, 0x_27, 0x_62, 0x_F5, 0x_04, 0x_01, 0x_9C, 0x_DA, 0x_7B, 0x_67, 0x_B4, 0x_C3, 0x_CC, 0x_10, 0x_8A,
		0x_1F, 0x_69, 0x_79, 0x_0F, 0x_7A, 0x_24, 0x_B9, 0x_18, 0x_5A, 0x_87, 0x_E4, 0x_1C, 0x_C2, 0x_4C, 0x_80,
		0x_C8, 0x_71, 0x_8B, 0x_50, 0x_14, 0x_EF, 0x_1E, 0x_92, 0x_46, 0x_F7, 0x_C0, 0x_AD, 0x_CB, 0x_8E, 0x_58,
		0x_5E, 0x_9E, 0x_3C, 0x_FE, 0x_AC, 0x_49, 0x_EC, 0x_AF, 0x_05, 0x_4A, 0x_12, 0x_BB, 0x_B2, 0x_65, 0x_90,
		0x_F9, 0x_9F, 0x_7F, 0x_AE, 0x_C7, 0x_A3, 0x_CA, 0x_76, 0x_C9, 0x_30, 0x_31, 0x_88, 0x_75, 0x_2A, 0x_DF,
		0x_60, 0x_D8, 0x_83, 0x_51, 0x_29, 0x_CE, 0x_DC,
	];

	helper(S, BASE, -13_155);
}
// endregion
// region: s_has_zeros_and_minus_469_252_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_469_252_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_06, 0x_4A, 0x_3F, 0x_0D, 0x_42, 0x_AE, 0x_BE, 0x_16,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_15, 0x_75, 0x_24, 0x_3E, 0x_F0, 0x_42, 0x_06, 0x_6A, 0x_D9, 0x_E2, 0x_9E, 0x_22, 0x_8E, 0x_DC,
		0x_BA, 0x_65, 0x_63, 0x_16, 0x_C3, 0x_58, 0x_99, 0x_96, 0x_40, 0x_7C, 0x_9D, 0x_57, 0x_93, 0x_BB, 0x_25,
		0x_80, 0x_13, 0x_A9, 0x_B9, 0x_7F, 0x_71, 0x_87, 0x_FA, 0x_A0, 0x_8A, 0x_B4, 0x_19, 0x_FD, 0x_33, 0x_0E,
		0x_1F, 0x_A1, 0x_62, 0x_E7, 0x_AB, 0x_38, 0x_7E, 0x_01, 0x_B3, 0x_F7, 0x_C6, 0x_CA, 0x_46, 0x_F5, 0x_E9,
		0x_29, 0x_77, 0x_23, 0x_11, 0x_CC, 0x_3A, 0x_79, 0x_E4, 0x_CB, 0x_A3, 0x_8C, 0x_4C, 0x_5E, 0x_07, 0x_6C,
		0x_64, 0x_28, 0x_1A, 0x_91, 0x_F1, 0x_50, 0x_BF, 0x_82, 0x_56, 0x_E0, 0x_3D, 0x_A2, 0x_8F, 0x_12, 0x_3C,
		0x_C7, 0x_5C, 0x_D2, 0x_B1, 0x_B5, 0x_CF, 0x_EE, 0x_F9, 0x_1C, 0x_A4, 0x_BC, 0x_69, 0x_43, 0x_C0, 0x_8B,
		0x_02, 0x_EA, 0x_F6, 0x_34, 0x_45, 0x_D0, 0x_1D, 0x_95, 0x_C2, 0x_EC, 0x_37, 0x_C1, 0x_31, 0x_DF, 0x_73,
		0x_E1, 0x_5B, 0x_6E, 0x_47, 0x_4E, 0x_14, 0x_48, 0x_98, 0x_35, 0x_D4, 0x_74, 0x_49, 0x_D1, 0x_2C, 0x_90,
		0x_E8, 0x_F2, 0x_FC, 0x_C4, 0x_BD, 0x_AE, 0x_55, 0x_70, 0x_0F, 0x_C9, 0x_DA, 0x_6B, 0x_3B, 0x_B2, 0x_D8,
		0x_2F, 0x_F4, 0x_83, 0x_84, 0x_F8, 0x_DB, 0x_60, 0x_9C, 0x_E6, 0x_D3, 0x_1E, 0x_D5, 0x_9A, 0x_AA, 0x_61,
		0x_5F, 0x_51, 0x_32, 0x_ED, 0x_27, 0x_4A, 0x_88, 0x_21, 0x_D6, 0x_FF, 0x_86, 0x_04, 0x_53, 0x_AD, 0x_6F,
		0x_1B, 0x_EF, 0x_F3, 0x_97, 0x_DE, 0x_BE, 0x_94, 0x_44, 0x_18, 0x_5D, 0x_7A, 0x_54, 0x_78, 0x_A7, 0x_39,
		0x_5A, 0x_7D, 0x_CD, 0x_2A, 0x_3F, 0x_E5, 0x_2E, 0x_66, 0x_92, 0x_6D, 0x_C5, 0x_4B, 0x_FB, 0x_AF, 0x_26,
		0x_C8, 0x_59, 0x_EB, 0x_CE, 0x_DD, 0x_FE, 0x_81, 0x_8D, 0x_03, 0x_9B, 0x_A5, 0x_D7, 0x_A8, 0x_B6, 0x_A6,
		0x_17, 0x_30, 0x_B7, 0x_85, 0x_9F, 0x_36, 0x_89, 0x_7B, 0x_10, 0x_67, 0x_52, 0x_4D, 0x_08, 0x_72, 0x_B8,
		0x_E3, 0x_B0, 0x_4F, 0x_05, 0x_76, 0x_68, 0x_41,
	];

	helper(S, BASE, -469_252);
}
// endregion
// region: s_has_zeros_and_minus_8_742_541_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_8_742_541_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A,
		0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A,
		0x_6A, 0x_6A, 0x_6A, 0x_38, 0x_C2, 0x_1F, 0x_20, 0x_61, 0x_23, 0x_82, 0x_53, 0x_E4, 0x_B0, 0x_43, 0x_34,
		0x_A0, 0x_95, 0x_DA, 0x_CE, 0x_1A, 0x_A3, 0x_4D, 0x_40, 0x_12, 0x_79, 0x_43, 0x_AB, 0x_9D, 0x_B7, 0x_F1,
		0x_24, 0x_F1, 0x_79, 0x_CD, 0x_DD, 0x_FF, 0x_F3, 0x_7C, 0x_8F, 0x_BF, 0x_D7, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_6A, 0x_03, 0x_7B, 0x_12, 0x_39, 0x_92, 0x_64, 0x_97, 0x_C3, 0x_D0, 0x_46, 0x_72, 0x_1D, 0x_B2, 0x_47,
		0x_99, 0x_58, 0x_D7, 0x_BF, 0x_F9, 0x_A6, 0x_D1, 0x_22, 0x_7A, 0x_2F, 0x_FA, 0x_94, 0x_69, 0x_DD, 0x_E5,
		0x_1C, 0x_2E, 0x_1E, 0x_73, 0x_95, 0x_50, 0x_3F, 0x_48, 0x_52, 0x_D4, 0x_8E, 0x_B8, 0x_DC, 0x_7F, 0x_E6,
		0x_25, 0x_11, 0x_91, 0x_E9, 0x_84, 0x_D2, 0x_27, 0x_EC, 0x_8D, 0x_17, 0x_06, 0x_6C, 0x_5D, 0x_29, 0x_9F,
		0x_18, 0x_0E, 0x_30, 0x_C4, 0x_DF, 0x_9D, 0x_53, 0x_78, 0x_D3, 0x_54, 0x_90, 0x_28, 0x_56, 0x_C2, 0x_9B,
		0x_0F, 0x_75, 0x_7E, 0x_8B, 0x_5F, 0x_4F, 0x_7C, 0x_2A, 0x_82, 0x_6F, 0x_DE, 0x_3B, 0x_19, 0x_07, 0x_A1,
		0x_FD, 0x_74, 0x_F8, 0x_45, 0x_67, 0x_CA, 0x_CD, 0x_DA, 0x_86, 0x_F4, 0x_65, 0x_BB, 0x_77, 0x_E2, 0x_24,
		0x_89, 0x_66, 0x_CC, 0x_33, 0x_6D, 0x_A2, 0x_01, 0x_C9, 0x_59, 0x_35, 0x_AB, 0x_5A, 0x_B6, 0x_02, 0x_8F,
		0x_7D, 0x_B7, 0x_83, 0x_F2, 0x_70, 0x_BD, 0x_88, 0x_FC, 0x_68, 0x_D8, 0x_93, 0x_87, 0x_15, 0x_10, 0x_AE,
		0x_8C, 0x_9C, 0x_E1, 0x_4B, 0x_C0, 0x_EF, 0x_44, 0x_CF, 0x_38, 0x_C8, 0x_AA, 0x_2C, 0x_57, 0x_BE, 0x_63,
		0x_F7, 0x_21, 0x_EA, 0x_C1, 0x_6E, 0x_1B, 0x_61, 0x_EB, 0x_4A, 0x_BA, 0x_F1, 0x_55, 0x_31, 0x_79, 0x_E7,
		0x_5E, 0x_43, 0x_E4, 0x_08, 0x_37, 0x_B5, 0x_9A, 0x_B9, 0x_EE, 0x_49, 0x_81, 0x_A4, 0x_A7, 0x_4D, 0x_B1,
		0x_1A, 0x_E0, 0x_AD, 0x_A5, 0x_E3, 0x_F3, 0x_5B, 0x_80, 0x_FE, 0x_41, 0x_42, 0x_26, 0x_A9, 0x_CB, 0x_96,
		0x_98, 0x_D9, 0x_85, 0x_34, 0x_B4, 0x_40, 0x_8A, 0x_3E, 0x_5C, 0x_A0, 0x_CE, 0x_4E, 0x_23, 0x_C6, 0x_C5,
		0x_62, 0x_3C, 0x_3D, 0x_A8, 0x_F6, 0x_4C, 0x_C7, 0x_BC, 0x_51, 0x_DB, 0x_B3, 0x_B0, 0x_60, 0x_1F, 0x_E8,
		0x_FB, 0x_F0, 0x_FF, 0x_6B, 0x_32, 0x_D5, 0x_AC, 0x_F5, 0x_AF, 0x_71, 0x_05, 0x_14, 0x_ED, 0x_16, 0x_36,
		0x_04, 0x_A3, 0x_13, 0x_D6, 0x_76, 0x_9E, 0x_3A,
	];

	helper(S, BASE, -8_742_541);
}
// endregion
// region: s_has_zeros_and_minus_70_706_895_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_70_706_895_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_D9, 0x_4D, 0x_5E,
		0x_AB, 0x_0A, 0x_66, 0x_39, 0x_1A, 0x_B4, 0x_26, 0x_6B, 0x_86, 0x_21, 0x_A9, 0x_29, 0x_1E, 0x_F9, 0x_A2,
		0x_7E, 0x_6F, 0x_5B, 0x_94, 0x_CA, 0x_B7, 0x_15, 0x_93, 0x_9A, 0x_FB, 0x_2C, 0x_59, 0x_97, 0x_F6, 0x_57,
		0x_5C, 0x_56, 0x_9E, 0x_98, 0x_2C, 0x_48, 0x_6D, 0x_DF, 0x_CF, 0x_B6, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_EF, 0x_91, 0x_BD, 0x_D9, 0x_04, 0x_B3, 0x_19, 0x_31, 0x_CB, 0x_AF, 0x_E2, 0x_4F, 0x_D5, 0x_98,
		0x_62, 0x_FA, 0x_12, 0x_7E, 0x_72, 0x_FF, 0x_C4, 0x_53, 0x_36, 0x_9D, 0x_A4, 0x_95, 0x_D6, 0x_97, 0x_55,
		0x_8E, 0x_83, 0x_67, 0x_63, 0x_40, 0x_54, 0x_61, 0x_9A, 0x_CC, 0x_1C, 0x_A0, 0x_45, 0x_7D, 0x_74, 0x_6C,
		0x_8D, 0x_69, 0x_DE, 0x_DB, 0x_F6, 0x_70, 0x_9B, 0x_A6, 0x_A2, 0x_9F, 0x_1B, 0x_CE, 0x_96, 0x_8F, 0x_29,
		0x_47, 0x_5D, 0x_5B, 0x_CF, 0x_F3, 0x_E4, 0x_15, 0x_F7, 0x_F1, 0x_EB, 0x_33, 0x_86, 0x_D2, 0x_E7, 0x_92,
		0x_3E, 0x_B5, 0x_4E, 0x_11, 0x_A9, 0x_3A, 0x_49, 0x_77, 0x_10, 0x_60, 0x_E9, 0x_57, 0x_B7, 0x_94, 0x_22,
		0x_8C, 0x_06, 0x_F2, 0x_3B, 0x_7A, 0x_2F, 0x_2C, 0x_68, 0x_F9, 0x_E3, 0x_8A, 0x_39, 0x_41, 0x_D0, 0x_03,
		0x_F8, 0x_84, 0x_79, 0x_28, 0x_EA, 0x_C2, 0x_78, 0x_66, 0x_08, 0x_BA, 0x_82, 0x_A1, 0x_B4, 0x_A3, 0x_18,
		0x_A5, 0x_1F, 0x_C1, 0x_30, 0x_35, 0x_FE, 0x_E6, 0x_37, 0x_6D, 0x_8B, 0x_25, 0x_59, 0x_DF, 0x_A7, 0x_52,
		0x_C9, 0x_DD, 0x_1D, 0x_B8, 0x_4C, 0x_B2, 0x_B6, 0x_E1, 0x_16, 0x_BE, 0x_D8, 0x_1A, 0x_C3, 0x_C8, 0x_50,
		0x_23, 0x_90, 0x_B9, 0x_4B, 0x_C5, 0x_1E, 0x_0E, 0x_99, 0x_5F, 0x_17, 0x_27, 0x_EC, 0x_81, 0x_7B, 0x_65,
		0x_F0, 0x_01, 0x_56, 0x_21, 0x_D1, 0x_4D, 0x_24, 0x_88, 0x_07, 0x_2A, 0x_5C, 0x_EE, 0x_DC, 0x_02, 0x_7F,
		0x_71, 0x_AB, 0x_AC, 0x_D7, 0x_AD, 0x_0F, 0x_51, 0x_6F, 0x_4A, 0x_89, 0x_5A, 0x_BF, 0x_26, 0x_6E, 0x_E8,
		0x_3F, 0x_34, 0x_64, 0x_AA, 0x_CD, 0x_3D, 0x_7C, 0x_58, 0x_DA, 0x_75, 0x_32, 0x_9E, 0x_14, 0x_2E, 0x_E5,
		0x_93, 0x_F5, 0x_D4, 0x_42, 0x_ED, 0x_6B, 0x_76, 0x_B0, 0x_05, 0x_CA, 0x_85, 0x_9C, 0x_13, 0x_44, 0x_80,
		0x_C7, 0x_AE, 0x_FD, 0x_46, 0x_FB, 0x_73, 0x_F4, 0x_C0, 0x_6A, 0x_E0, 0x_38, 0x_5E, 0x_48, 0x_BB, 0x_D3,
		0x_87, 0x_B1, 0x_3C, 0x_A8, 0x_FC, 0x_C6, 0x_43,
	];

	helper(S, BASE, -70_706_895);
}
// endregion
// region: s_has_zeros_and_minus_112_358_023_in_base_247_and_insignificant_bytes
#[test]
fn s_has_zeros_and_minus_112_358_023_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1,
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_11, 0x_76, 0x_BD, 0x_BC, 0x_20, 0x_1B,
		0x_5B, 0x_E3, 0x_D1, 0x_7F, 0x_C0, 0x_C5, 0x_E9, 0x_EF, 0x_36, 0x_1E, 0x_AE, 0x_6C, 0x_B3, 0x_C0, 0x_25,
		0x_8C, 0x_BD, 0x_99, 0x_0E, 0x_5C, 0x_C5,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_3E, 0x_85, 0x_80, 0x_9B, 0x_A1, 0x_2F, 0x_11, 0x_7D, 0x_9E, 0x_46, 0x_01, 0x_B6, 0x_A7, 0x_F4,
		0x_5B, 0x_61, 0x_33, 0x_3A, 0x_5E, 0x_99, 0x_51, 0x_17, 0x_DE, 0x_DA, 0x_5C, 0x_1B, 0x_54, 0x_21, 0x_A5,
		0x_DF, 0x_45, 0x_BF, 0x_52, 0x_98, 0x_A4, 0x_AB, 0x_27, 0x_7F, 0x_0E, 0x_31, 0x_E1, 0x_72, 0x_5F, 0x_F3,
		0x_D4, 0x_C8, 0x_A0, 0x_FB, 0x_8D, 0x_50, 0x_44, 0x_49, 0x_58, 0x_C4, 0x_1C, 0x_28, 0x_57, 0x_6A, 0x_A6,
		0x_37, 0x_42, 0x_0F, 0x_78, 0x_CF, 0x_E3, 0x_8C, 0x_3B, 0x_C7, 0x_EC, 0x_FA, 0x_77, 0x_C1, 0x_E9, 0x_86,
		0x_D1, 0x_6D, 0x_D5, 0x_D0, 0x_71, 0x_F2, 0x_7B, 0x_7C, 0x_BB, 0x_DD, 0x_30, 0x_84, 0x_35, 0x_F9, 0x_E8,
		0x_D8, 0x_2C, 0x_DC, 0x_A3, 0x_25, 0x_55, 0x_B4, 0x_75, 0x_4A, 0x_29, 0x_EE, 0x_88, 0x_EB, 0x_B3, 0x_81,
		0x_47, 0x_91, 0x_40, 0x_03, 0x_95, 0x_4B, 0x_E2, 0x_76, 0x_68, 0x_C0, 0x_6E, 0x_CB, 0x_F5, 0x_70, 0x_43,
		0x_BE, 0x_60, 0x_3F, 0x_8A, 0x_9F, 0x_08, 0x_9D, 0x_F7, 0x_10, 0x_9A, 0x_9C, 0x_AD, 0x_D7, 0x_15, 0x_4D,
		0x_4E, 0x_13, 0x_2E, 0x_94, 0x_67, 0x_89, 0x_6F, 0x_63, 0x_B2, 0x_E0, 0x_AC, 0x_53, 0x_E4, 0x_AE, 0x_73,
		0x_82, 0x_DB, 0x_D3, 0x_23, 0x_8F, 0x_39, 0x_66, 0x_62, 0x_07, 0x_B7, 0x_C9, 0x_AA, 0x_5D, 0x_BD, 0x_CD,
		0x_59, 0x_C3, 0x_41, 0x_CA, 0x_A9, 0x_1F, 0x_22, 0x_D2, 0x_24, 0x_92, 0x_E6, 0x_E7, 0x_97, 0x_7A, 0x_F8,
		0x_CE, 0x_4C, 0x_02, 0x_FE, 0x_64, 0x_36, 0x_8E, 0x_5A, 0x_87, 0x_74, 0x_AF, 0x_69, 0x_2A, 0x_BC, 0x_7E,
		0x_65, 0x_FD, 0x_B1, 0x_C5, 0x_26, 0x_3C, 0x_C2, 0x_EF, 0x_32, 0x_79, 0x_05, 0x_34, 0x_1E, 0x_E5, 0x_16,
		0x_93, 0x_12, 0x_90, 0x_ED, 0x_6C, 0x_1D, 0x_FC, 0x_BA, 0x_B8, 0x_04, 0x_19, 0x_18, 0x_8B, 0x_56, 0x_83,
		0x_FF, 0x_D6, 0x_F0, 0x_1A, 0x_38, 0x_D9, 0x_48, 0x_06, 0x_EA, 0x_3D, 0x_A2, 0x_B9, 0x_4F, 0x_B0, 0x_B5,
		0x_F6, 0x_96, 0x_6B, 0x_C6, 0x_CC, 0x_14, 0x_A8,
	];

	helper(S, BASE, -112_358_023);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_8_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_8_in_base_2() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0B,
		0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_FD, 0x_DE, 0x_DE, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_FD,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_74_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_74_in_base_2() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7,
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_EA, 0x_B7, 0x_B7, 0x_EA, 0x_B7, 0x_EA, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_EA,
	];

	helper(S, BASE, -74);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_554_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_554_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_91, 0x_91, 0x_D1, 0x_91, 0x_91, 0x_91, 0x_D1, 0x_91, 0x_D1, 0x_91, 0x_D1, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_D1,
	];

	helper(S, BASE, -554);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_3_073_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_3_073_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0A,
		0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_79, 0x_79, 0x_79, 0x_79,
		0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79,
		0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_8B, 0x_8B, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79, 0x_79,
		0x_79, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_79, 0x_8B,
	];

	helper(S, BASE, -3_073);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_13_875_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_13_875_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_0B,
		0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0B,
		0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_34, 0x_34, 0x_60, 0x_34, 0x_34, 0x_60, 0x_60, 0x_60, 0x_34,
		0x_34, 0x_60, 0x_60, 0x_34, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_34,
	];

	helper(S, BASE, -13_875);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_778_559_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_778_559_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_09,
		0x_09, 0x_0B, 0x_0D, 0x_09, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_AE, 0x_4C, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_AE, 0x_4C, 0x_4C,
		0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_AE,
	];

	helper(S, BASE, -778_559);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_7_530_064_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_7_530_064_in_base_2() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0D,
		0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_82, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_99, 0x_99, 0x_99, 0x_82, 0x_82, 0x_99, 0x_82, 0x_99, 0x_99, 0x_99, 0x_82, 0x_82,
		0x_99, 0x_99, 0x_82, 0x_82, 0x_99, 0x_82, 0x_99, 0x_82, 0x_82, 0x_82, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_99,
	];

	helper(S, BASE, -7_530_064);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_28_949_776_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_28_949_776_in_base_2() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0D,
		0x_09, 0x_0A, 0x_0B, 0x_09, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_CB, 0x_CB,
		0x_86, 0x_CB, 0x_CB, 0x_CB, 0x_86, 0x_86, 0x_CB, 0x_CB, 0x_86, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_86, 0x_CB,
		0x_86, 0x_86, 0x_86, 0x_CB, 0x_86, 0x_86, 0x_86, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_CB,
	];

	helper(S, BASE, -28_949_776);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_419_087_698_in_base_2
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_419_087_698_in_base_2() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_0B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_61, 0x_61, 0x_15, 0x_15, 0x_15,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_15, 0x_61, 0x_15, 0x_61, 0x_61, 0x_15, 0x_15, 0x_15, 0x_61, 0x_15,
		0x_61, 0x_15, 0x_61, 0x_15, 0x_61, 0x_15, 0x_15, 0x_61, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_61,
	];

	helper(S, BASE, -419_087_698);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_7A, 0x_66, 0x_7A,
		0x_7A,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_66, 0x_DF,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_64_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_64_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_20,
		0x_09, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0D,
		0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90,
		0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90,
		0x_90, 0x_DA, 0x_1A, 0x_90, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_1A, 0x_DA,
	];

	helper(S, BASE, -64);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_608_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_608_in_base_3() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_26, 0x_26, 0x_26, 0x_13, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_13,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_4C, 0x_13,
	];

	helper(S, BASE, -608);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_6_876_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_6_876_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0A,
		0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0D,
		0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0,
		0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_D0, 0x_67, 0x_D0, 0x_D0, 0x_67, 0x_D0,
		0x_A3, 0x_A3, 0x_D0, 0x_D0,
	];
	const BASE: &[u8] = &[
		0x_D0, 0x_67, 0x_A3,
	];

	helper(S, BASE, -6_876);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_89_070_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_89_070_in_base_3() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_09,
		0x_09, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_0D,
		0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_F5,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_EB, 0x_F5, 0x_38, 0x_38, 0x_EB, 0x_EB, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_F5, 0x_38, 0x_EB,
	];

	helper(S, BASE, -89_070);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_343_295_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_343_295_in_base_3() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0C,
		0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_A3, 0x_96, 0x_96, 0x_A3, 0x_C4, 0x_96, 0x_96, 0x_96, 0x_C4, 0x_A3, 0x_96, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_A3, 0x_96,
	];

	helper(S, BASE, -343_295);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_5_566_725_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_5_566_725_in_base_3() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_43, 0x_43, 0x_43, 0x_D0, 0x_43, 0x_D0, 0x_D0, 0x_D0, 0x_43, 0x_BD, 0x_D0, 0x_D0, 0x_43, 0x_D0, 0x_43,
		0x_43, 0x_43, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_43, 0x_D0, 0x_BD,
	];

	helper(S, BASE, -5_566_725);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_88_015_931_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_88_015_931_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_37, 0x_37, 0x_37, 0x_37,
		0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37,
		0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_79, 0x_37, 0x_37, 0x_A4,
		0x_37, 0x_A4, 0x_79, 0x_A4, 0x_79, 0x_37, 0x_37, 0x_37, 0x_A4, 0x_A4, 0x_37, 0x_79, 0x_79,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_A4, 0x_79,
	];

	helper(S, BASE, -88_015_931);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_802_076_445_in_base_3
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_802_076_445_in_base_3() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0B,
		0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_20,
		0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7,
		0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_B7, 0x_AF, 0x_B7, 0x_B7, 0x_8F,
		0x_AF, 0x_AF, 0x_B7, 0x_B7, 0x_AF, 0x_B7, 0x_AF, 0x_B7, 0x_8F, 0x_B7, 0x_B7, 0x_8F, 0x_B7, 0x_B7, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_B7, 0x_8F, 0x_AF,
	];

	helper(S, BASE, -802_076_445);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_4_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_4_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_F3, 0x_04, 0x_76, 0x_C1,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_57_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_57_in_base_5() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_0D,
		0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_75, 0x_FD,
		0x_75,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_FD, 0x_75, 0x_42, 0x_BB,
	];

	helper(S, BASE, -57);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_326_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_326_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_0A,
		0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_0B,
		0x_09, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_A9, 0x_A9, 0x_A9, 0x_D9, 0x_6D, 0x_A9,
		0x_9C,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_9C, 0x_D9, 0x_6D, 0x_64,
	];

	helper(S, BASE, -326);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_1_267_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_1_267_in_base_5() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_09,
		0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47,
		0x_47, 0x_55, 0x_47, 0x_47, 0x_34, 0x_55,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_1F, 0x_55, 0x_34, 0x_B8,
	];

	helper(S, BASE, -1_267);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_41_627_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_41_627_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_1D, 0x_3B, 0x_95, 0x_3B,
		0x_82, 0x_82, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_95, 0x_1D, 0x_3B, 0x_CA,
	];

	helper(S, BASE, -41_627);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_474_203_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_474_203_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_09,
		0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_09,
		0x_0A, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_80,
		0x_80, 0x_3D, 0x_80, 0x_19, 0x_19, 0x_19, 0x_3D, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_80, 0x_8D, 0x_19, 0x_32,
	];

	helper(S, BASE, -474_203);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_4_922_088_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_4_922_088_in_base_5() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_0F, 0x_E1, 0x_E1, 0x_24, 0x_0F, 0x_0F, 0x_0F,
		0x_EE, 0x_24, 0x_E1, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_EE, 0x_E1, 0x_24, 0x_52,
	];

	helper(S, BASE, -4_922_088);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_27_412_301_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_27_412_301_in_base_5() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_0D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_FE, 0x_FC,
		0x_F2, 0x_F2, 0x_FC, 0x_2C, 0x_FC, 0x_F5, 0x_FE, 0x_F2, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_2C, 0x_FE, 0x_F5, 0x_FC,
	];

	helper(S, BASE, -27_412_301);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_132_006_680_in_base_5
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_132_006_680_in_base_5() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0B,
		0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0D,
		0x_0B, 0x_0B, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_6E, 0x_6E, 0x_6E,
		0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E,
		0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E,
		0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_AF, 0x_0E, 0x_AF, 0x_AF, 0x_14, 0x_0E, 0x_AF,
		0x_6E, 0x_0E, 0x_AF, 0x_D2, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_D2, 0x_AF, 0x_0E, 0x_14,
	];

	helper(S, BASE, -132_006_680);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_1_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_1_in_base_7() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_09, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_ED,
		0x_ED, 0x_ED, 0x_ED, 0x_EC,
	];
	const BASE: &[u8] = &[
		0x_ED, 0x_EC, 0x_BC, 0x_7C, 0x_17, 0x_AC, 0x_3B,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_47_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_47_in_base_7() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_0B,
		0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F,
		0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_CD, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_0F, 0x_81, 0x_3D, 0x_75, 0x_36, 0x_CD,
	];

	helper(S, BASE, -47);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_754_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_754_in_base_7() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_20,
		0x_09, 0x_0C, 0x_20, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_DF, 0x_DF, 0x_DF,
		0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF,
		0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_2A,
		0x_2C, 0x_2A, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_2C, 0x_2A, 0x_56, 0x_13, 0x_11, 0x_36,
	];

	helper(S, BASE, -754);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_8_854_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_8_854_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0D,
		0x_20, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0C,
		0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_B2, 0x_70, 0x_50, 0x_70, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_29, 0x_25, 0x_B2, 0x_70, 0x_50, 0x_A0,
	];

	helper(S, BASE, -8_854);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_46_663_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_46_663_in_base_7() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0A,
		0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_77, 0x_7B,
		0x_18, 0x_9C, 0x_77, 0x_12,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_12, 0x_77, 0x_18, 0x_F6, 0x_7B, 0x_83,
	];

	helper(S, BASE, -46_663);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_676_934_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_676_934_in_base_7() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_F9,
		0x_F9, 0x_7E, 0x_AF, 0x_91, 0x_AF, 0x_AF,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_7E, 0x_84, 0x_91, 0x_94, 0x_F9, 0x_AF,
	];

	helper(S, BASE, -676_934);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_4_048_419_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_4_048_419_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0B,
		0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_09,
		0x_0B, 0x_0B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_95, 0x_D9, 0x_69, 0x_D9, 0x_9F, 0x_D9, 0x_BA, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_F1, 0x_69, 0x_D1, 0x_95, 0x_BA, 0x_D9,
	];

	helper(S, BASE, -4_048_419);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_35_874_668_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_35_874_668_in_base_7() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_83, 0x_7E, 0x_A8, 0x_83, 0x_A8, 0x_A8, 0x_83, 0x_44, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_7E, 0x_7C, 0x_A8, 0x_86, 0x_E7, 0x_83,
	];

	helper(S, BASE, -35_874_668);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_111_031_352_in_base_7
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_111_031_352_in_base_7() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_20,
		0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_0A,
		0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06,
		0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_06, 0x_85, 0x_FE, 0x_D5, 0x_FE, 0x_FE, 0x_D5, 0x_FE, 0x_5E,
		0x_E3, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_06, 0x_D5, 0x_85, 0x_5E, 0x_4B, 0x_FE, 0x_E3,
	];

	helper(S, BASE, -111_031_352);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_4_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_4_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0D,
		0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0D,
		0x_09, 0x_0C, 0x_0D, 0x_20, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_5A, 0x_89, 0x_86, 0x_93, 0x_3F, 0x_CA, 0x_28, 0x_7A, 0x_47, 0x_DA,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_82_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_82_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_20,
		0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_09,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_71, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_D2, 0x_96, 0x_69, 0x_CE, 0x_C2, 0x_E3, 0x_71, 0x_6A, 0x_62, 0x_16,
	];

	helper(S, BASE, -82);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_332_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_332_in_base_11() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0A,
		0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_09, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9,
		0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9, 0x_B9,
		0x_94, 0x_24, 0x_94,
	];
	const BASE: &[u8] = &[
		0x_B9, 0x_76, 0x_94, 0x_A3, 0x_95, 0x_51, 0x_40, 0x_29, 0x_24, 0x_F2, 0x_93,
	];

	helper(S, BASE, -332);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_7_138_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_7_138_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_0C,
		0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_0A,
		0x_0B, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60,
		0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_60, 0x_EC, 0x_34, 0x_39, 0x_39,
	];
	const BASE: &[u8] = &[
		0x_60, 0x_7E, 0x_BE, 0x_34, 0x_AE, 0x_EC, 0x_B7, 0x_D8, 0x_96, 0x_5F, 0x_39,
	];

	helper(S, BASE, -7_138);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_99_810_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_99_810_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_59, 0x_29,
		0x_AB, 0x_B9, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_DA, 0x_A3, 0x_50, 0x_CA, 0x_CC, 0x_59, 0x_E8, 0x_29, 0x_B9, 0x_AB,
	];

	helper(S, BASE, -99_810);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_664_752_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_664_752_in_base_11() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0C,
		0x_09, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_09,
		0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_DB, 0x_58, 0x_DB, 0x_DB, 0x_18, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_58, 0x_EB, 0x_38, 0x_DB, 0x_E8, 0x_04, 0x_9C, 0x_A3, 0x_18, 0x_61,
	];

	helper(S, BASE, -664_752);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_1_283_785_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_1_283_785_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0D,
		0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0B,
		0x_0C, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_2B, 0x_2D, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13,
		0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_13, 0x_8F, 0x_2E, 0x_8F, 0x_29, 0x_1F, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_C6, 0x_CE, 0x_B7, 0x_42, 0x_29, 0x_AE, 0x_8F, 0x_1F, 0x_FD, 0x_2E,
	];

	helper(S, BASE, -1_283_785);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_26_727_181_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_26_727_181_in_base_11() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_0D,
		0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_0A,
		0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_DE,
		0x_88, 0x_F8, 0x_DE, 0x_E6, 0x_67, 0x_67, 0x_08, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_88, 0x_A3, 0x_3E, 0x_F8, 0x_67, 0x_FB, 0x_29, 0x_08, 0x_EB, 0x_E6,
	];

	helper(S, BASE, -26_727_181);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_989_154_762_in_base_11
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_989_154_762_in_base_11() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_09,
		0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_0D,
		0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_2E, 0x_F5, 0x_3B, 0x_72, 0x_70, 0x_F5, 0x_F5, 0x_3B, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_12, 0x_F0, 0x_72, 0x_2E, 0x_B9, 0x_F5, 0x_8D, 0x_3B, 0x_70, 0x_BE,
	];

	helper(S, BASE, -989_154_762);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_6_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_6_in_base_13() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_AD,
		0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD,
		0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD, 0x_AD,
		0x_AD, 0x_AD, 0x_AD, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_AD, 0x_9A, 0x_B7, 0x_D9, 0x_4F, 0x_54, 0x_D5, 0x_92, 0x_A7, 0x_E1, 0x_F8, 0x_1F, 0x_66,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_65_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_65_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0C,
		0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21,
		0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_21, 0x_5F, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_21, 0x_72, 0x_E5, 0x_53, 0x_05, 0x_5F, 0x_F1, 0x_C3, 0x_EF, 0x_C5, 0x_BB, 0x_82, 0x_CB,
	];

	helper(S, BASE, -65);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_562_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_562_in_base_13() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47,
		0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_08, 0x_75, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_5A, 0x_4A, 0x_08, 0x_75, 0x_96, 0x_49, 0x_6B, 0x_AC, 0x_BF, 0x_F1, 0x_81, 0x_34,
	];

	helper(S, BASE, -562);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_361_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_361_in_base_13() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0B,
		0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_63, 0x_C8, 0x_46,
		0x_A7,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_A7, 0x_72, 0x_C8, 0x_63, 0x_46, 0x_3A, 0x_B0, 0x_E6, 0x_3B, 0x_E1, 0x_88, 0x_54,
	];

	helper(S, BASE, -9_361);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_26_626_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_26_626_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_B2, 0x_32, 0x_F7, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_32, 0x_53, 0x_65, 0x_C9, 0x_C8, 0x_7A, 0x_F7, 0x_06, 0x_1D, 0x_FC, 0x_CC, 0x_B2,
	];

	helper(S, BASE, -26_626);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_984_216_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_984_216_in_base_13() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0D,
		0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_52,
		0x_52, 0x_52, 0x_52, 0x_52, 0x_B1, 0x_16, 0x_5C, 0x_FE, 0x_F7, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_74, 0x_B1, 0x_95, 0x_C9, 0x_5C, 0x_E0, 0x_FA, 0x_16, 0x_F7, 0x_B2, 0x_06, 0x_FE,
	];

	helper(S, BASE, -984_216);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_6_629_206_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_6_629_206_in_base_13() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_F3, 0x_F9,
		0x_69, 0x_F3, 0x_A8, 0x_1A, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_F3, 0x_51, 0x_6E, 0x_F9, 0x_A8, 0x_92, 0x_98, 0x_BC, 0x_57, 0x_38, 0x_69, 0x_7B,
	];

	helper(S, BASE, -6_629_206);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_88_374_315_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_88_374_315_in_base_13() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_0B,
		0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD,
		0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD,
		0x_DD, 0x_6D, 0x_65, 0x_4A, 0x_DD, 0x_F0, 0x_CE, 0x_CE, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_6D, 0x_F0, 0x_90, 0x_4A, 0x_65, 0x_EF, 0x_48, 0x_3E, 0x_35, 0x_A2, 0x_5E, 0x_CE,
	];

	helper(S, BASE, -88_374_315);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_160_629_845_in_base_13
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_160_629_845_in_base_13() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_20,
		0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0B,
		0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_ED, 0x_BE, 0x_88, 0x_2C, 0x_B1, 0x_88,
		0x_5B, 0x_C5,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_B1, 0x_ED, 0x_88, 0x_1C, 0x_5B, 0x_7D, 0x_BE, 0x_2C, 0x_4D, 0x_EE, 0x_DA, 0x_C5,
	];

	helper(S, BASE, -160_629_845);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_8_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_8_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_20,
		0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_0D,
		0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_1C, 0x_15, 0x_AC, 0x_AD, 0x_85, 0x_AB, 0x_86, 0x_95, 0x_F6, 0x_6C, 0x_D7, 0x_2F, 0x_6D, 0x_FB,
		0x_D3, 0x_57, 0x_47, 0x_34,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_65_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_65_in_base_19() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0B,
		0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83,
		0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_83, 0x_55,
		0x_8E,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_45, 0x_B3, 0x_55, 0x_4E, 0x_0E, 0x_8C, 0x_FC, 0x_8E, 0x_77, 0x_2F, 0x_D7, 0x_67, 0x_94, 0x_DA,
		0x_D6, 0x_E2, 0x_E3, 0x_F9,
	];

	helper(S, BASE, -65);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_563_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_563_in_base_19() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_0B,
		0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0B,
		0x_20, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B,
		0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B,
		0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_B8, 0x_6E,
		0x_EB,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_B8, 0x_75, 0x_DA, 0x_28, 0x_DB, 0x_60, 0x_76, 0x_23, 0x_6C, 0x_6E, 0x_51, 0x_EB, 0x_57, 0x_E8,
		0x_4E, 0x_98, 0x_D7, 0x_53,
	];

	helper(S, BASE, -563);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_6_566_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_6_566_in_base_19() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0B,
		0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E,
		0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_33, 0x_39,
		0x_12,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_11, 0x_81, 0x_39, 0x_42, 0x_61, 0x_53, 0x_CC, 0x_CB, 0x_EB, 0x_4F, 0x_12, 0x_CF, 0x_9B, 0x_6A,
		0x_56, 0x_2A, 0x_05, 0x_33,
	];

	helper(S, BASE, -6_566);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_26_020_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_26_020_in_base_19() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_20,
		0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0D,
		0x_0D, 0x_0A, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B2, 0x_B6, 0x_EE,
		0x_96, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_B2, 0x_96, 0x_BF, 0x_B6, 0x_72, 0x_C5, 0x_31, 0x_C4, 0x_F4, 0x_D7, 0x_6E, 0x_C9, 0x_35, 0x_BC, 0x_2F,
		0x_EE, 0x_8B, 0x_A9, 0x_4F,
	];

	helper(S, BASE, -26_020);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_202_064_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_202_064_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0C,
		0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_CF, 0x_1C, 0x_60, 0x_A6, 0x_6C,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_CF, 0x_72, 0x_E1, 0x_80, 0x_5C, 0x_2C, 0x_F5, 0x_60, 0x_B6, 0x_1C, 0x_D4, 0x_1B, 0x_A6, 0x_A2,
		0x_17, 0x_3B, 0x_A1, 0x_6C,
	];

	helper(S, BASE, -202_064);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_869_820_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_869_820_in_base_19() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_97, 0x_6A, 0x_FE, 0x_6A, 0x_96, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_8E, 0x_82, 0x_97, 0x_96, 0x_C4, 0x_0E, 0x_4C, 0x_71, 0x_B8, 0x_7A, 0x_C1, 0x_2A, 0x_FE, 0x_79,
		0x_A2, 0x_5D, 0x_84, 0x_6A,
	];

	helper(S, BASE, -9_869_820);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_39_008_227_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_39_008_227_in_base_19() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_42,
		0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42,
		0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_E9, 0x_FB, 0x_58, 0x_13, 0x_42, 0x_2C,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_27, 0x_98, 0x_13, 0x_33, 0x_DB, 0x_58, 0x_CE, 0x_03, 0x_E6, 0x_DF, 0x_2C, 0x_17, 0x_44, 0x_FB,
		0x_E9, 0x_EB, 0x_BA, 0x_71,
	];

	helper(S, BASE, -39_008_227);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_139_388_822_in_base_19
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_139_388_822_in_base_19() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0D,
		0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0,
		0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0, 0x_F0,
		0x_F0, 0x_F0, 0x_F0, 0x_39, 0x_BB, 0x_DF, 0x_65, 0x_F0, 0x_65, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_F0, 0x_2C, 0x_39, 0x_70, 0x_DC, 0x_DF, 0x_67, 0x_74, 0x_47, 0x_D5, 0x_3F, 0x_65, 0x_46, 0x_EA, 0x_51,
		0x_01, 0x_5D, 0x_BD, 0x_BB,
	];

	helper(S, BASE, -139_388_822);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_1_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_1_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0D,
		0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0C,
		0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_7B, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_D4, 0x_F4, 0x_32, 0x_68, 0x_59, 0x_98, 0x_B6, 0x_AA, 0x_11, 0x_29, 0x_A3, 0x_71, 0x_EF, 0x_C6,
		0x_35, 0x_F1, 0x_5E, 0x_BC, 0x_AD, 0x_DE, 0x_B0, 0x_87, 0x_F9, 0x_BD, 0x_B1, 0x_82, 0x_97, 0x_CB, 0x_2C,
		0x_E0, 0x_7D, 0x_44, 0x_D5, 0x_74, 0x_4E, 0x_8E, 0x_D3, 0x_EB, 0x_58, 0x_DD, 0x_46,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_36_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_36_in_base_42() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B,
		0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_5B, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_5B, 0x_23, 0x_2A, 0x_ED, 0x_1F, 0x_71, 0x_22, 0x_54, 0x_7B, 0x_1B, 0x_95, 0x_B8, 0x_CF, 0x_B0, 0x_1D,
		0x_BC, 0x_98, 0x_33, 0x_7D, 0x_CC, 0x_F4, 0x_AB, 0x_F0, 0x_7A, 0x_08, 0x_F8, 0x_15, 0x_FD, 0x_82, 0x_43,
		0x_AD, 0x_26, 0x_63, 0x_83, 0x_6A, 0x_D6, 0x_40, 0x_70, 0x_D8, 0x_17, 0x_3C, 0x_34,
	];

	helper(S, BASE, -36);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_175_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_175_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D,
		0x_3D, 0x_96, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_5E, 0x_E4, 0x_59, 0x_96, 0x_62, 0x_92, 0x_45, 0x_D4, 0x_A0, 0x_76, 0x_6D, 0x_D3, 0x_A5, 0x_C9,
		0x_C3, 0x_86, 0x_31, 0x_06, 0x_FF, 0x_F6, 0x_FC, 0x_BE, 0x_2C, 0x_CC, 0x_50, 0x_F1, 0x_16, 0x_1D, 0x_C0,
		0x_8B, 0x_53, 0x_E8, 0x_DC, 0x_A6, 0x_87, 0x_7A, 0x_F3, 0x_11, 0x_FD, 0x_8A, 0x_93,
	];

	helper(S, BASE, -175);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_8_405_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_8_405_in_base_42() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0B,
		0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_18, 0x_7D, 0x_63,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_F0, 0x_3C, 0x_A3, 0x_18, 0x_63, 0x_E3, 0x_C4, 0x_F5, 0x_8E, 0x_AF, 0x_F9, 0x_13, 0x_7A, 0x_B4,
		0x_AA, 0x_5D, 0x_94, 0x_25, 0x_B9, 0x_F6, 0x_5B, 0x_DA, 0x_A5, 0x_7C, 0x_11, 0x_7F, 0x_2A, 0x_81, 0x_C5,
		0x_9E, 0x_B1, 0x_7D, 0x_62, 0x_57, 0x_46, 0x_24, 0x_70, 0x_72, 0x_BF, 0x_EF, 0x_F1,
	];

	helper(S, BASE, -8_405);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_15_303_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_15_303_in_base_42() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0D,
		0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0C,
		0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6, 0x_E6,
		0x_E6, 0x_E6, 0x_13, 0x_DA, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_C9, 0x_3F, 0x_8E, 0x_69, 0x_06, 0x_26, 0x_D8, 0x_13, 0x_D5, 0x_88, 0x_37, 0x_1C, 0x_62, 0x_5B,
		0x_F8, 0x_91, 0x_EA, 0x_F6, 0x_7B, 0x_21, 0x_9F, 0x_B2, 0x_5A, 0x_6F, 0x_17, 0x_DF, 0x_2A, 0x_DA, 0x_86,
		0x_DD, 0x_C5, 0x_6D, 0x_35, 0x_C1, 0x_3A, 0x_55, 0x_CE, 0x_7E, 0x_44, 0x_FA, 0x_9B,
	];

	helper(S, BASE, -15_303);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_236_027_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_236_027_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_0D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B,
		0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B,
		0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B,
		0x_9B, 0x_9B, 0x_2C, 0x_6E, 0x_B4, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_C2, 0x_08, 0x_2C, 0x_01, 0x_21, 0x_84, 0x_6E, 0x_F1, 0x_AB, 0x_85, 0x_E5, 0x_36, 0x_D5, 0x_EB,
		0x_B9, 0x_A8, 0x_AA, 0x_7F, 0x_6A, 0x_88, 0x_55, 0x_7E, 0x_DB, 0x_9E, 0x_A2, 0x_95, 0x_2E, 0x_12, 0x_7C,
		0x_3E, 0x_B3, 0x_A6, 0x_B4, 0x_F8, 0x_6D, 0x_78, 0x_1B, 0x_59, 0x_EF, 0x_A4, 0x_29,
	];

	helper(S, BASE, -236_027);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_5_294_561_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_5_294_561_in_base_42() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_2E, 0x_18, 0x_7C, 0x_B4, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_2E, 0x_69, 0x_D8, 0x_8F, 0x_5E, 0x_37, 0x_E1, 0x_59, 0x_A0, 0x_7D, 0x_25, 0x_40, 0x_FB, 0x_5D,
		0x_81, 0x_04, 0x_4B, 0x_B4, 0x_7C, 0x_71, 0x_8A, 0x_D3, 0x_66, 0x_DF, 0x_08, 0x_01, 0x_9B, 0x_E6, 0x_18,
		0x_F3, 0x_6C, 0x_49, 0x_DD, 0x_A5, 0x_9C, 0x_EB, 0x_B6, 0x_19, 0x_A8, 0x_D5, 0x_BC,
	];

	helper(S, BASE, -5_294_561);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_87_261_485_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_87_261_485_in_base_42() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_E0, 0x_B2, 0x_A1, 0x_02, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_B2, 0x_51, 0x_E3, 0x_2C, 0x_B0, 0x_B3, 0x_BB, 0x_BC, 0x_D3, 0x_CA, 0x_9D, 0x_F6, 0x_F3, 0x_8A,
		0x_9B, 0x_72, 0x_87, 0x_CD, 0x_1A, 0x_E9, 0x_E6, 0x_A2, 0x_46, 0x_3F, 0x_8E, 0x_38, 0x_BD, 0x_E0, 0x_63,
		0x_6E, 0x_65, 0x_26, 0x_A1, 0x_C8, 0x_1D, 0x_37, 0x_17, 0x_E4, 0x_62, 0x_02, 0x_A3,
	];

	helper(S, BASE, -87_261_485);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_755_964_651_in_base_42
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_755_964_651_in_base_42() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_04, 0x_5D, 0x_4D, 0x_FB, 0x_7C, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_E3, 0x_7D, 0x_9A, 0x_89, 0x_04, 0x_46, 0x_50, 0x_22, 0x_1D, 0x_E9, 0x_62, 0x_1C, 0x_44, 0x_E1,
		0x_18, 0x_7C, 0x_7A, 0x_5A, 0x_78, 0x_13, 0x_39, 0x_D6, 0x_F7, 0x_A5, 0x_FB, 0x_E4, 0x_D9, 0x_34, 0x_36,
		0x_CD, 0x_D4, 0x_5D, 0x_83, 0x_81, 0x_DF, 0x_3D, 0x_12, 0x_1B, 0x_4D, 0x_EA, 0x_9D,
	];

	helper(S, BASE, -755_964_651);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_5_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_5_in_base_73() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_0C,
		0x_0C, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_3C, 0x_3C, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_7F, 0x_F2, 0x_90, 0x_38, 0x_46, 0x_DE, 0x_62, 0x_48, 0x_72, 0x_D9, 0x_EE, 0x_9D, 0x_51, 0x_85,
		0x_FB, 0x_BE, 0x_C7, 0x_2C, 0x_1E, 0x_E8, 0x_5A, 0x_97, 0x_50, 0x_E4, 0x_D4, 0x_18, 0x_44, 0x_65, 0x_3D,
		0x_66, 0x_C4, 0x_77, 0x_E3, 0x_DF, 0x_68, 0x_99, 0x_08, 0x_4F, 0x_26, 0x_BC, 0x_E1, 0x_E7, 0x_17, 0x_6A,
		0x_33, 0x_96, 0x_74, 0x_63, 0x_82, 0x_7E, 0x_5F, 0x_1B, 0x_80, 0x_81, 0x_BA, 0x_76, 0x_32, 0x_CF, 0x_E5,
		0x_69, 0x_6B, 0x_A6, 0x_47, 0x_3E, 0x_EC, 0x_34, 0x_40, 0x_D1, 0x_F8, 0x_93, 0x_DD, 0x_75,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_21_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_21_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_BF, 0x_E3, 0x_35, 0x_40, 0x_D3, 0x_4B, 0x_DB, 0x_6E, 0x_9B, 0x_65, 0x_CB, 0x_50, 0x_C3, 0x_D9,
		0x_43, 0x_91, 0x_94, 0x_D4, 0x_A9, 0x_D1, 0x_96, 0x_90, 0x_A2, 0x_77, 0x_C8, 0x_59, 0x_92, 0x_74, 0x_F6,
		0x_B7, 0x_6F, 0x_79, 0x_EE, 0x_88, 0x_71, 0x_10, 0x_53, 0x_4D, 0x_FE, 0x_05, 0x_41, 0x_B8, 0x_31, 0x_42,
		0x_8E, 0x_C1, 0x_BA, 0x_E6, 0x_34, 0x_95, 0x_37, 0x_6A, 0x_E4, 0x_E2, 0x_17, 0x_07, 0x_13, 0x_F2, 0x_A6,
		0x_80, 0x_C7, 0x_E7, 0x_75, 0x_9F, 0x_85, 0x_82, 0x_22, 0x_0F, 0x_AA, 0x_1F, 0x_C5, 0x_48,
	];

	helper(S, BASE, -21);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_572_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_572_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_80, 0x_80,
		0x_80, 0x_80, 0x_80, 0x_80, 0x_DB, 0x_82,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_67, 0x_84, 0x_E1, 0x_A6, 0x_9B, 0x_C3, 0x_DB, 0x_6D, 0x_2C, 0x_FC, 0x_9C, 0x_6B, 0x_AF, 0x_5C,
		0x_0F, 0x_59, 0x_75, 0x_C8, 0x_C9, 0x_CF, 0x_A9, 0x_95, 0x_21, 0x_24, 0x_ED, 0x_44, 0x_2E, 0x_E3, 0x_9E,
		0x_78, 0x_6A, 0x_64, 0x_2F, 0x_03, 0x_71, 0x_B1, 0x_08, 0x_9F, 0x_D2, 0x_8C, 0x_58, 0x_4B, 0x_50, 0x_40,
		0x_4F, 0x_16, 0x_4D, 0x_81, 0x_A4, 0x_D6, 0x_4A, 0x_A2, 0x_8A, 0x_9D, 0x_F4, 0x_68, 0x_51, 0x_CC, 0x_46,
		0x_8E, 0x_82, 0x_AA, 0x_04, 0x_30, 0x_D3, 0x_A8, 0x_CA, 0x_F7, 0x_85, 0x_1D, 0x_E7, 0x_26,
	];

	helper(S, BASE, -572);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_617_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_617_in_base_73() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_06, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_D7, 0x_17, 0x_32, 0x_58, 0x_9C, 0x_D1, 0x_96, 0x_19, 0x_6B, 0x_D5, 0x_A2, 0x_AD, 0x_6C, 0x_D6,
		0x_84, 0x_C3, 0x_C6, 0x_C7, 0x_C2, 0x_F4, 0x_36, 0x_9A, 0x_38, 0x_73, 0x_15, 0x_91, 0x_74, 0x_F5, 0x_97,
		0x_27, 0x_D9, 0x_F0, 0x_67, 0x_86, 0x_06, 0x_1D, 0x_59, 0x_7F, 0x_3C, 0x_B5, 0x_6D, 0x_5F, 0x_AA, 0x_E6,
		0x_87, 0x_2C, 0x_42, 0x_71, 0x_C0, 0x_DF, 0x_FF, 0x_F3, 0x_0F, 0x_A1, 0x_8D, 0x_F7, 0x_B6, 0x_2A, 0x_08,
		0x_01, 0x_1E, 0x_E2, 0x_E3, 0x_53, 0x_F2, 0x_6A, 0x_F1, 0x_04, 0x_7B, 0x_55, 0x_8F, 0x_92,
	];

	helper(S, BASE, -2_617);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_22_306_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_22_306_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_0A,
		0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0D,
		0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76,
		0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_76, 0x_AC, 0x_33, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_76, 0x_BB, 0x_D4, 0x_3F, 0x_AC, 0x_3A, 0x_96, 0x_4C, 0x_54, 0x_A1, 0x_9D, 0x_91, 0x_AE, 0x_33, 0x_31,
		0x_9F, 0x_94, 0x_51, 0x_D7, 0x_8A, 0x_6C, 0x_A7, 0x_03, 0x_3C, 0x_83, 0x_30, 0x_D0, 0x_C7, 0x_57, 0x_6F,
		0x_63, 0x_05, 0x_7E, 0x_89, 0x_D9, 0x_CD, 0x_A6, 0x_40, 0x_CC, 0x_EE, 0x_AD, 0x_5A, 0x_56, 0x_EC, 0x_01,
		0x_B3, 0x_87, 0x_08, 0x_F5, 0x_C9, 0x_7A, 0x_E2, 0x_1D, 0x_DD, 0x_60, 0x_B9, 0x_C2, 0x_35, 0x_41, 0x_C6,
		0x_5F, 0x_6A, 0x_4E, 0x_EF, 0x_24, 0x_9C, 0x_1E, 0x_78, 0x_F6, 0x_4F, 0x_1A, 0x_84, 0x_27,
	];

	helper(S, BASE, -22_306);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_336_423_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_336_423_in_base_73() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_A5, 0x_40, 0x_15, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_A5, 0x_04, 0x_8F, 0x_C4, 0x_B2, 0x_08, 0x_DA, 0x_41, 0x_72, 0x_15, 0x_B9, 0x_68, 0x_27, 0x_CC, 0x_38,
		0x_EE, 0x_DC, 0x_E9, 0x_31, 0x_CD, 0x_86, 0x_2C, 0x_C0, 0x_F8, 0x_CE, 0x_45, 0x_E0, 0x_4C, 0x_97, 0x_77,
		0x_83, 0x_D1, 0x_1A, 0x_FC, 0x_13, 0x_24, 0x_BA, 0x_4A, 0x_37, 0x_21, 0x_98, 0x_7E, 0x_16, 0x_F7, 0x_D8,
		0x_AF, 0x_D7, 0x_1D, 0x_F5, 0x_BD, 0x_E6, 0x_9F, 0x_14, 0x_6E, 0x_46, 0x_F4, 0x_85, 0x_96, 0x_0F, 0x_8E,
		0x_2A, 0x_B8, 0x_12, 0x_40, 0x_79, 0x_B3, 0x_95, 0x_C9, 0x_48, 0x_0E, 0x_A9, 0x_57, 0x_89,
	];

	helper(S, BASE, -336_423);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_777_251_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_777_251_in_base_73() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_0B,
		0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_F1, 0x_F1, 0x_F1, 0x_F1,
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1,
		0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_F1, 0x_85, 0x_52,
		0x_34, 0x_13,
	];
	const BASE: &[u8] = &[
		0x_F1, 0x_EF, 0x_EA, 0x_6D, 0x_7D, 0x_56, 0x_9D, 0x_B3, 0x_7C, 0x_52, 0x_DC, 0x_18, 0x_3C, 0x_F0, 0x_19,
		0x_5F, 0x_F6, 0x_1E, 0x_6E, 0x_74, 0x_6B, 0x_ED, 0x_60, 0x_E1, 0x_32, 0x_85, 0x_27, 0x_61, 0x_F4, 0x_45,
		0x_CE, 0x_11, 0x_03, 0x_2F, 0x_07, 0x_39, 0x_71, 0x_24, 0x_C1, 0x_6C, 0x_4B, 0x_C2, 0x_E4, 0x_C8, 0x_84,
		0x_D2, 0x_DF, 0x_2E, 0x_CD, 0x_BC, 0x_EE, 0x_88, 0x_34, 0x_89, 0x_14, 0x_B6, 0x_DA, 0x_D5, 0x_E8, 0x_72,
		0x_3D, 0x_BB, 0x_0E, 0x_EB, 0x_D1, 0x_1A, 0x_CA, 0x_CC, 0x_7E, 0x_13, 0x_3A, 0x_B7, 0x_26,
	];

	helper(S, BASE, -9_777_251);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_18_486_452_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_18_486_452_in_base_73() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0B,
		0x_20, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_20,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_58, 0x_58, 0x_58,
		0x_58, 0x_77, 0x_CC, 0x_42, 0x_6D,
	];
	const BASE: &[u8] = &[
		0x_58, 0x_FF, 0x_42, 0x_24, 0x_AD, 0x_6D, 0x_3C, 0x_16, 0x_C6, 0x_70, 0x_72, 0x_6A, 0x_07, 0x_64, 0x_C8,
		0x_40, 0x_1B, 0x_59, 0x_DC, 0x_F7, 0x_C3, 0x_79, 0x_45, 0x_93, 0x_F4, 0x_B1, 0x_FB, 0x_CB, 0x_32, 0x_1E,
		0x_FC, 0x_A5, 0x_6C, 0x_44, 0x_AB, 0x_26, 0x_9F, 0x_AC, 0x_CC, 0x_A1, 0x_D2, 0x_3E, 0x_9B, 0x_A8, 0x_95,
		0x_D6, 0x_31, 0x_77, 0x_22, 0x_02, 0x_2E, 0x_69, 0x_D7, 0x_8F, 0x_E1, 0x_73, 0x_E9, 0x_25, 0x_57, 0x_13,
		0x_27, 0x_08, 0x_2C, 0x_3D, 0x_82, 0x_EC, 0x_81, 0x_E3, 0x_EA, 0x_49, 0x_A0, 0x_05, 0x_4E,
	];

	helper(S, BASE, -18_486_452);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_564_393_318_in_base_73
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_564_393_318_in_base_73() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_20,
		0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_BC,
		0x_BC, 0x_BC, 0x_BC, 0x_BC, 0x_8B, 0x_1F, 0x_22, 0x_5F, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_BC, 0x_B6, 0x_A9, 0x_C2, 0x_86, 0x_92, 0x_F1, 0x_6D, 0x_1E, 0x_03, 0x_85, 0x_47, 0x_C1, 0x_4F, 0x_33,
		0x_4E, 0x_88, 0x_17, 0x_8E, 0x_8B, 0x_FF, 0x_B2, 0x_9B, 0x_01, 0x_06, 0x_2A, 0x_89, 0x_23, 0x_58, 0x_08,
		0x_27, 0x_54, 0x_66, 0x_F7, 0x_16, 0x_E8, 0x_10, 0x_15, 0x_71, 0x_CC, 0x_DB, 0x_A0, 0x_39, 0x_FD, 0x_84,
		0x_3D, 0x_CD, 0x_BB, 0x_F9, 0x_BD, 0x_97, 0x_FB, 0x_7E, 0x_AB, 0x_78, 0x_2C, 0x_CB, 0x_D9, 0x_5F, 0x_22,
		0x_74, 0x_55, 0x_35, 0x_1F, 0x_52, 0x_E9, 0x_44, 0x_7A, 0x_B7, 0x_EC, 0x_5C, 0x_8A, 0x_04,
	];

	helper(S, BASE, -564_393_318);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_4_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_4_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_0B,
		0x_20, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72,
		0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72,
		0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_72, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_72, 0x_5A, 0x_4C, 0x_73, 0x_29, 0x_4A, 0x_78, 0x_9C, 0x_2C, 0x_31, 0x_51, 0x_F5, 0x_8C, 0x_50, 0x_C9,
		0x_83, 0x_45, 0x_D1, 0x_AF, 0x_25, 0x_4E, 0x_EB, 0x_80, 0x_ED, 0x_DB, 0x_49, 0x_AD, 0x_69, 0x_DA, 0x_10,
		0x_40, 0x_15, 0x_84, 0x_E9, 0x_EA, 0x_AA, 0x_9F, 0x_2F, 0x_A0, 0x_F0, 0x_19, 0x_D7, 0x_FE, 0x_D8, 0x_A2,
		0x_3A, 0x_EF, 0x_7B, 0x_08, 0x_6E, 0x_E7, 0x_3E, 0x_36, 0x_16, 0x_8D, 0x_E5, 0x_60, 0x_18, 0x_53, 0x_7E,
		0x_8F, 0x_98, 0x_74, 0x_88, 0x_CE, 0x_70, 0x_EE, 0x_43, 0x_1B, 0x_C2, 0x_64, 0x_D9, 0x_5B, 0x_5C, 0x_91,
		0x_24, 0x_C6, 0x_12, 0x_B4, 0x_F9, 0x_C7, 0x_32, 0x_13, 0x_7D, 0x_1D, 0x_97, 0x_A3, 0x_A6, 0x_BB, 0x_8B,
		0x_BC, 0x_77, 0x_96, 0x_E8, 0x_FC, 0x_4B, 0x_BE, 0x_68, 0x_6F, 0x_44, 0x_17, 0x_3C, 0x_C1, 0x_9A, 0x_A1,
		0x_DF, 0x_A8, 0x_39, 0x_CC, 0x_E4, 0x_94, 0x_65, 0x_F8,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_33_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_33_in_base_113() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2,
		0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2,
		0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_A2, 0x_38,
	];
	const BASE: &[u8] = &[
		0x_A2, 0x_81, 0x_B6, 0x_76, 0x_32, 0x_27, 0x_74, 0x_DC, 0x_D7, 0x_75, 0x_58, 0x_FF, 0x_03, 0x_19, 0x_2A,
		0x_B4, 0x_67, 0x_D4, 0x_29, 0x_73, 0x_EA, 0x_3F, 0x_D0, 0x_30, 0x_7A, 0x_62, 0x_EC, 0x_82, 0x_A0, 0x_D9,
		0x_91, 0x_8B, 0x_89, 0x_38, 0x_26, 0x_0F, 0x_53, 0x_7B, 0x_24, 0x_4D, 0x_D6, 0x_07, 0x_48, 0x_54, 0x_1C,
		0x_85, 0x_C2, 0x_D3, 0x_2C, 0x_D1, 0x_A8, 0x_B1, 0x_1E, 0x_E4, 0x_18, 0x_CC, 0x_B3, 0x_10, 0x_AB, 0x_8F,
		0x_D8, 0x_AC, 0x_8D, 0x_21, 0x_06, 0x_5B, 0x_CF, 0x_1D, 0x_AE, 0x_39, 0x_A4, 0x_16, 0x_66, 0x_79, 0x_AF,
		0x_E0, 0x_9D, 0x_A7, 0x_EB, 0x_23, 0x_86, 0x_BE, 0x_3A, 0x_59, 0x_9F, 0x_B7, 0x_F9, 0x_4C, 0x_FD, 0x_87,
		0x_25, 0x_5D, 0x_17, 0x_08, 0x_0E, 0x_CD, 0x_F2, 0x_E1, 0x_77, 0x_BA, 0x_6A, 0x_FE, 0x_57, 0x_3E, 0x_80,
		0x_6C, 0x_6D, 0x_AA, 0x_C5, 0x_B8, 0x_1B, 0x_90, 0x_A6,
	];

	helper(S, BASE, -33);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_351_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_351_in_base_113() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_09, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55,
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_26, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_6A, 0x_B4, 0x_26, 0x_8A, 0x_57, 0x_73, 0x_78, 0x_3E, 0x_D4, 0x_A0, 0x_5E, 0x_5F, 0x_B8, 0x_08,
		0x_F0, 0x_44, 0x_F2, 0x_40, 0x_80, 0x_B2, 0x_69, 0x_22, 0x_C5, 0x_5B, 0x_7A, 0x_14, 0x_EC, 0x_99, 0x_11,
		0x_75, 0x_FA, 0x_59, 0x_24, 0x_B6, 0x_87, 0x_38, 0x_29, 0x_05, 0x_A5, 0x_93, 0x_4A, 0x_25, 0x_1B, 0x_28,
		0x_7F, 0x_C0, 0x_DD, 0x_8B, 0x_CE, 0x_81, 0x_03, 0x_02, 0x_16, 0x_A3, 0x_71, 0x_CF, 0x_50, 0x_83, 0x_C9,
		0x_43, 0x_4C, 0x_97, 0x_77, 0x_D9, 0x_27, 0x_13, 0x_47, 0x_84, 0x_B1, 0x_CD, 0x_95, 0x_31, 0x_96, 0x_AC,
		0x_91, 0x_CB, 0x_C4, 0x_B5, 0x_4D, 0x_2F, 0x_48, 0x_90, 0x_FD, 0x_C8, 0x_04, 0x_32, 0x_3F, 0x_9B, 0x_18,
		0x_6B, 0x_7B, 0x_FE, 0x_BC, 0x_36, 0x_F7, 0x_6C, 0x_86, 0x_F6, 0x_D1, 0x_BD, 0x_67, 0x_60, 0x_10, 0x_56,
		0x_ED, 0x_94, 0x_DB, 0x_8C, 0x_0F, 0x_53, 0x_8F, 0x_A8,
	];

	helper(S, BASE, -351);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_082_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_082_in_base_113() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_20,
		0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_C6, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_B3, 0x_9A, 0x_C0, 0x_6D, 0x_75, 0x_F8, 0x_5F, 0x_05, 0x_50, 0x_65, 0x_76, 0x_44, 0x_A4, 0x_63,
		0x_97, 0x_7F, 0x_04, 0x_C6, 0x_AA, 0x_3C, 0x_FD, 0x_C9, 0x_CA, 0x_36, 0x_59, 0x_40, 0x_2C, 0x_E1, 0x_AC,
		0x_A1, 0x_F6, 0x_D0, 0x_BF, 0x_95, 0x_AD, 0x_D3, 0x_33, 0x_0E, 0x_08, 0x_3B, 0x_E2, 0x_38, 0x_12, 0x_C3,
		0x_B8, 0x_74, 0x_17, 0x_F9, 0x_C2, 0x_A9, 0x_87, 0x_29, 0x_FE, 0x_CF, 0x_9C, 0x_D8, 0x_F5, 0x_9F, 0x_7C,
		0x_CC, 0x_9B, 0x_E9, 0x_4E, 0x_69, 0x_48, 0x_3E, 0x_19, 0x_27, 0x_C7, 0x_D5, 0x_E0, 0x_72, 0x_5A, 0x_01,
		0x_DB, 0x_91, 0x_6B, 0x_3F, 0x_21, 0x_24, 0x_F4, 0x_56, 0x_A8, 0x_B2, 0x_4C, 0x_42, 0x_4A, 0x_07, 0x_6F,
		0x_28, 0x_13, 0x_16, 0x_96, 0x_4B, 0x_F2, 0x_10, 0x_EA, 0x_CB, 0x_EB, 0x_64, 0x_BC, 0x_6E, 0x_4F, 0x_ED,
		0x_6C, 0x_F0, 0x_BB, 0x_5B, 0x_3A, 0x_51, 0x_89, 0x_58,
	];

	helper(S, BASE, -2_082);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_12_341_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_12_341_in_base_113() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_0D,
		0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_0C,
		0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26,
		0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_26, 0x_90, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_2A, 0x_E3, 0x_2E, 0x_35, 0x_5A, 0x_D8, 0x_1C, 0x_41, 0x_83, 0x_34, 0x_B4, 0x_49, 0x_82, 0x_7F,
		0x_44, 0x_A8, 0x_62, 0x_2C, 0x_CE, 0x_43, 0x_EB, 0x_37, 0x_BA, 0x_67, 0x_7E, 0x_56, 0x_AB, 0x_F4, 0x_54,
		0x_D9, 0x_76, 0x_BB, 0x_C8, 0x_EA, 0x_3B, 0x_81, 0x_F0, 0x_4C, 0x_88, 0x_4D, 0x_FA, 0x_3D, 0x_5F, 0x_F6,
		0x_59, 0x_6B, 0x_6F, 0x_36, 0x_BC, 0x_8F, 0x_24, 0x_8D, 0x_C0, 0x_65, 0x_28, 0x_F9, 0x_72, 0x_05, 0x_B5,
		0x_A9, 0x_68, 0x_98, 0x_BD, 0x_8B, 0x_9B, 0x_B7, 0x_29, 0x_6C, 0x_40, 0x_A2, 0x_23, 0x_B3, 0x_EF, 0x_55,
		0x_31, 0x_E1, 0x_0E, 0x_38, 0x_B1, 0x_FE, 0x_DD, 0x_FF, 0x_48, 0x_7A, 0x_91, 0x_DB, 0x_19, 0x_D1, 0x_46,
		0x_E6, 0x_78, 0x_B0, 0x_87, 0x_CF, 0x_27, 0x_85, 0x_89, 0x_17, 0x_15, 0x_92, 0x_9A, 0x_5B, 0x_AE, 0x_DE,
		0x_02, 0x_BF, 0x_32, 0x_F5, 0x_90, 0x_52, 0x_C6, 0x_FD,
	];

	helper(S, BASE, -12_341);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_748_636_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_748_636_in_base_113() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3,
		0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3,
		0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_BD, 0x_EA, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_86, 0x_DA, 0x_3A, 0x_53, 0x_BF, 0x_6F, 0x_95, 0x_EB, 0x_01, 0x_75, 0x_1E, 0x_F1, 0x_72, 0x_88,
		0x_30, 0x_42, 0x_18, 0x_DE, 0x_4D, 0x_9C, 0x_94, 0x_6C, 0x_AE, 0x_74, 0x_F9, 0x_3C, 0x_7F, 0x_3F, 0x_DB,
		0x_2A, 0x_82, 0x_AD, 0x_F7, 0x_54, 0x_D0, 0x_57, 0x_69, 0x_C2, 0x_B4, 0x_5E, 0x_44, 0x_B6, 0x_4B, 0x_99,
		0x_7E, 0x_B1, 0x_8A, 0x_17, 0x_BC, 0x_A7, 0x_71, 0x_D3, 0x_1C, 0x_4F, 0x_97, 0x_DF, 0x_A4, 0x_BD, 0x_89,
		0x_2C, 0x_D5, 0x_FB, 0x_64, 0x_BA, 0x_C8, 0x_D9, 0x_80, 0x_9B, 0x_1A, 0x_6B, 0x_EA, 0x_CB, 0x_10, 0x_2F,
		0x_9F, 0x_A5, 0x_C7, 0x_E0, 0x_A8, 0x_63, 0x_E4, 0x_EC, 0x_1F, 0x_B7, 0x_B5, 0x_ED, 0x_2E, 0x_38, 0x_7B,
		0x_C0, 0x_BE, 0x_4E, 0x_6A, 0x_DC, 0x_24, 0x_C3, 0x_66, 0x_9D, 0x_E7, 0x_9E, 0x_62, 0x_15, 0x_16, 0x_49,
		0x_6E, 0x_43, 0x_58, 0x_4C, 0x_93, 0x_5F, 0x_F0, 0x_5C,
	];

	helper(S, BASE, -748_636);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_193_794_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_193_794_in_base_113() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_20,
		0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_20,
		0x_0D, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_4B, 0x_8F, 0x_6B, 0x_6B,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_6B, 0x_B1, 0x_63, 0x_36, 0x_11, 0x_4B, 0x_62, 0x_F1, 0x_9F, 0x_DA, 0x_CC, 0x_38, 0x_51, 0x_3F,
		0x_69, 0x_A3, 0x_1C, 0x_C3, 0x_A5, 0x_59, 0x_66, 0x_D6, 0x_04, 0x_84, 0x_BC, 0x_72, 0x_C8, 0x_AA, 0x_5D,
		0x_B8, 0x_97, 0x_AE, 0x_73, 0x_34, 0x_C6, 0x_2A, 0x_40, 0x_75, 0x_FF, 0x_7C, 0x_0E, 0x_8F, 0x_7A, 0x_33,
		0x_B6, 0x_21, 0x_FA, 0x_96, 0x_18, 0x_B0, 0x_1F, 0x_A4, 0x_26, 0x_28, 0x_8D, 0x_9B, 0x_E5, 0x_43, 0x_D8,
		0x_E6, 0x_64, 0x_7E, 0x_15, 0x_8B, 0x_74, 0x_17, 0x_85, 0x_B2, 0x_08, 0x_E4, 0x_42, 0x_F5, 0x_29, 0x_F2,
		0x_10, 0x_1A, 0x_C5, 0x_9E, 0x_52, 0x_27, 0x_CA, 0x_C0, 0x_DB, 0x_07, 0x_57, 0x_E3, 0x_C4, 0x_FE, 0x_B7,
		0x_89, 0x_98, 0x_A9, 0x_BB, 0x_49, 0x_58, 0x_D7, 0x_E8, 0x_9C, 0x_A8, 0x_41, 0x_70, 0x_5C, 0x_95, 0x_EC,
		0x_55, 0x_7F, 0x_FB, 0x_01, 0x_A0, 0x_65, 0x_30, 0x_BF,
	];

	helper(S, BASE, -9_193_794);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_79_232_012_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_79_232_012_in_base_113() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA, 0x_EA,
		0x_EA, 0x_42, 0x_F7, 0x_96, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_E7, 0x_27, 0x_96, 0x_41, 0x_35, 0x_61, 0x_4C, 0x_88, 0x_3B, 0x_2E, 0x_DB, 0x_F4, 0x_3A, 0x_72,
		0x_B1, 0x_21, 0x_84, 0x_29, 0x_6A, 0x_5B, 0x_A5, 0x_93, 0x_DA, 0x_BB, 0x_31, 0x_08, 0x_6E, 0x_86, 0x_6C,
		0x_A3, 0x_47, 0x_62, 0x_14, 0x_6B, 0x_15, 0x_8C, 0x_F2, 0x_A2, 0x_0E, 0x_77, 0x_5D, 0x_1C, 0x_8D, 0x_95,
		0x_70, 0x_EC, 0x_99, 0x_13, 0x_EB, 0x_2A, 0x_36, 0x_02, 0x_AB, 0x_42, 0x_E0, 0x_D8, 0x_2C, 0x_05, 0x_33,
		0x_37, 0x_F3, 0x_56, 0x_24, 0x_7A, 0x_C2, 0x_52, 0x_CC, 0x_AD, 0x_92, 0x_68, 0x_CB, 0x_91, 0x_F6, 0x_BA,
		0x_9D, 0x_65, 0x_B4, 0x_D0, 0x_30, 0x_67, 0x_89, 0x_C8, 0x_CD, 0x_A1, 0x_45, 0x_ED, 0x_C5, 0x_C9, 0x_85,
		0x_7C, 0x_E4, 0x_2F, 0x_46, 0x_FE, 0x_9E, 0x_AE, 0x_4B, 0x_06, 0x_0F, 0x_81, 0x_7E, 0x_59, 0x_F7, 0x_BE,
		0x_58, 0x_C3, 0x_F5, 0x_DF, 0x_E1, 0x_01, 0x_A9, 0x_76,
	];

	helper(S, BASE, -79_232_012);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_565_132_311_in_base_113
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_565_132_311_in_base_113() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0A,
		0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_20,
		0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_DF,
		0x_DF, 0x_DF, 0x_DE, 0x_5E, 0x_36, 0x_17, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_E0, 0x_BC, 0x_DE, 0x_02, 0x_8D, 0x_98, 0x_3C, 0x_7B, 0x_51, 0x_5B, 0x_30, 0x_D9, 0x_39, 0x_7A,
		0x_1B, 0x_17, 0x_24, 0x_82, 0x_4B, 0x_9C, 0x_D6, 0x_03, 0x_BD, 0x_C8, 0x_C7, 0x_BE, 0x_21, 0x_67, 0x_6C,
		0x_D1, 0x_E1, 0x_01, 0x_1D, 0x_28, 0x_EB, 0x_B0, 0x_BF, 0x_FF, 0x_6D, 0x_6B, 0x_8F, 0x_6A, 0x_55, 0x_59,
		0x_F1, 0x_E2, 0x_35, 0x_4E, 0x_B8, 0x_72, 0x_BB, 0x_5E, 0x_5A, 0x_15, 0x_FD, 0x_31, 0x_A8, 0x_23, 0x_53,
		0x_44, 0x_10, 0x_54, 0x_2C, 0x_62, 0x_AD, 0x_A3, 0x_2E, 0x_CF, 0x_C5, 0x_80, 0x_84, 0x_F3, 0x_56, 0x_D8,
		0x_36, 0x_B5, 0x_ED, 0x_61, 0x_52, 0x_83, 0x_9D, 0x_47, 0x_57, 0x_C6, 0x_D2, 0x_93, 0x_FE, 0x_88, 0x_CA,
		0x_EE, 0x_78, 0x_D3, 0x_D0, 0x_22, 0x_C4, 0x_5C, 0x_18, 0x_F5, 0x_38, 0x_C1, 0x_B2, 0x_F2, 0x_4A, 0x_75,
		0x_26, 0x_DD, 0x_CD, 0x_AB, 0x_79, 0x_05, 0x_6F, 0x_63,
	];

	helper(S, BASE, -565_132_311);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_09,
		0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_F9, 0x_DD, 0x_FF, 0x_27, 0x_B6, 0x_FA, 0x_CE, 0x_42, 0x_99, 0x_8C, 0x_57, 0x_58, 0x_A4, 0x_18,
		0x_48, 0x_86, 0x_7B, 0x_A2, 0x_5F, 0x_15, 0x_77, 0x_D6, 0x_87, 0x_17, 0x_C8, 0x_E1, 0x_4A, 0x_9C, 0x_9E,
		0x_40, 0x_D0, 0x_C5, 0x_DA, 0x_AB, 0x_DB, 0x_81, 0x_26, 0x_88, 0x_47, 0x_5B, 0x_1B, 0x_9D, 0x_02, 0x_EC,
		0x_EE, 0x_74, 0x_C1, 0x_28, 0x_1F, 0x_65, 0x_0F, 0x_A6, 0x_72, 0x_BE, 0x_C0, 0x_B8, 0x_66, 0x_4B, 0x_D3,
		0x_30, 0x_56, 0x_B7, 0x_E7, 0x_19, 0x_B4, 0x_B9, 0x_9F, 0x_82, 0x_5E, 0x_9A, 0x_1A, 0x_BC, 0x_D2, 0x_4F,
		0x_B5, 0x_D9, 0x_AD, 0x_51, 0x_1D, 0x_D4, 0x_34, 0x_98, 0x_B3, 0x_5C, 0x_CF, 0x_45, 0x_62, 0x_6B, 0x_1E,
		0x_21, 0x_73, 0x_6A, 0x_C9, 0x_F2, 0x_08, 0x_84, 0x_FD, 0x_7C, 0x_C3, 0x_CC, 0x_64, 0x_A3, 0x_3F, 0x_46,
		0x_53, 0x_7D, 0x_E2, 0x_5D, 0x_F8, 0x_38, 0x_3C, 0x_BB, 0x_41, 0x_B2, 0x_5A, 0x_A5, 0x_01, 0x_D7, 0x_2F,
		0x_A7, 0x_F7, 0x_2E, 0x_97, 0x_BD, 0x_A1, 0x_AC, 0x_6C, 0x_39, 0x_49, 0x_9B, 0x_6E, 0x_A8, 0x_60, 0x_07,
		0x_DC, 0x_8E, 0x_54, 0x_CD, 0x_B0, 0x_E3, 0x_3B, 0x_59, 0x_6F, 0x_03, 0x_B1, 0x_75, 0x_4E, 0x_16, 0x_43,
		0x_DF, 0x_8F, 0x_8D, 0x_92, 0x_95, 0x_AA, 0x_4C, 0x_3D, 0x_11, 0x_10, 0x_61, 0x_32, 0x_C2, 0x_FC, 0x_E5,
		0x_37, 0x_83, 0x_F4, 0x_06, 0x_EB, 0x_BA, 0x_12, 0x_14, 0x_13, 0x_3E, 0x_85, 0x_C6, 0x_24, 0x_71, 0x_04,
		0x_1C, 0x_E8, 0x_3A, 0x_D8, 0x_55, 0x_23, 0x_C4, 0x_78, 0x_D5, 0x_AF, 0x_76, 0x_35, 0x_F5,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_40_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_40_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A,
		0x_9A, 0x_9A, 0x_9A, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_2E, 0x_D4, 0x_C3, 0x_B3, 0x_3B, 0x_61, 0x_AB, 0x_31, 0x_A7, 0x_B8, 0x_28, 0x_AA, 0x_B2, 0x_93,
		0x_7C, 0x_42, 0x_7F, 0x_A1, 0x_5A, 0x_1B, 0x_53, 0x_7B, 0x_6B, 0x_1A, 0x_D0, 0x_FE, 0x_4B, 0x_3F, 0x_A3,
		0x_64, 0x_D8, 0x_07, 0x_B6, 0x_CE, 0x_4E, 0x_87, 0x_86, 0x_B4, 0x_E5, 0x_BC, 0x_F5, 0x_23, 0x_69, 0x_D6,
		0x_97, 0x_35, 0x_10, 0x_34, 0x_C1, 0x_AC, 0x_C8, 0x_73, 0x_E9, 0x_0E, 0x_6F, 0x_88, 0x_84, 0x_9D, 0x_B0,
		0x_C5, 0x_9E, 0x_24, 0x_54, 0x_62, 0x_37, 0x_59, 0x_D9, 0x_91, 0x_EE, 0x_A6, 0x_A8, 0x_39, 0x_DD, 0x_BE,
		0x_75, 0x_27, 0x_D7, 0x_94, 0x_18, 0x_B5, 0x_98, 0x_FD, 0x_57, 0x_78, 0x_3E, 0x_1D, 0x_04, 0x_E8, 0x_A9,
		0x_05, 0x_3A, 0x_22, 0x_2A, 0x_55, 0x_1C, 0x_38, 0x_C0, 0x_F1, 0x_D1, 0x_AF, 0x_E7, 0x_14, 0x_FA, 0x_CD,
		0x_E2, 0x_EC, 0x_BA, 0x_DC, 0x_DB, 0x_76, 0x_F7, 0x_F0, 0x_66, 0x_89, 0x_26, 0x_56, 0x_63, 0x_D3, 0x_C9,
		0x_A2, 0x_B1, 0x_6E, 0x_99, 0x_48, 0x_52, 0x_C6, 0x_32, 0x_6D, 0x_65, 0x_02, 0x_8B, 0x_A5, 0x_50, 0x_1F,
		0x_AE, 0x_80, 0x_2F, 0x_83, 0x_8A, 0x_40, 0x_F6, 0x_E4, 0x_6A, 0x_70, 0x_6C, 0x_71, 0x_72, 0x_FB, 0x_8E,
		0x_03, 0x_EA, 0x_F9, 0x_13, 0x_17, 0x_60, 0x_CB, 0x_46, 0x_47, 0x_E3, 0x_1E, 0x_16, 0x_FF, 0x_C4, 0x_E6,
		0x_F8, 0x_F3, 0x_12, 0x_F4, 0x_68, 0x_5C, 0x_A4, 0x_41, 0x_0F, 0x_19, 0x_F2, 0x_9B, 0x_C2, 0x_D5, 0x_BD,
		0x_8F, 0x_77, 0x_82, 0x_ED, 0x_8C, 0x_FC, 0x_9C, 0x_51, 0x_DE, 0x_BB, 0x_4A, 0x_15, 0x_4C,
	];

	helper(S, BASE, -40);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_691_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_691_in_base_193() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0D,
		0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_20,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_45, 0x_14, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_83, 0x_82, 0x_14, 0x_A9, 0x_51, 0x_F0, 0x_52, 0x_63, 0x_34, 0x_3F, 0x_1A, 0x_FD, 0x_BB, 0x_D8,
		0x_24, 0x_58, 0x_32, 0x_5A, 0x_88, 0x_68, 0x_55, 0x_79, 0x_10, 0x_4A, 0x_C8, 0x_EC, 0x_6E, 0x_99, 0x_96,
		0x_3C, 0x_4B, 0x_93, 0x_CB, 0x_6B, 0x_E6, 0x_8C, 0x_5C, 0x_3B, 0x_9C, 0x_02, 0x_D3, 0x_E1, 0x_EE, 0x_87,
		0x_28, 0x_46, 0x_75, 0x_23, 0x_59, 0x_D7, 0x_39, 0x_57, 0x_0E, 0x_E2, 0x_A5, 0x_C3, 0x_18, 0x_1B, 0x_38,
		0x_72, 0x_B7, 0x_0F, 0x_F6, 0x_E7, 0x_62, 0x_69, 0x_6C, 0x_7D, 0x_EA, 0x_89, 0x_FA, 0x_01, 0x_C6, 0x_78,
		0x_6F, 0x_66, 0x_9F, 0x_BE, 0x_1C, 0x_F9, 0x_A1, 0x_3E, 0x_9A, 0x_8D, 0x_95, 0x_F7, 0x_8B, 0x_42, 0x_2C,
		0x_17, 0x_DA, 0x_AD, 0x_49, 0x_4C, 0x_7E, 0x_86, 0x_77, 0x_BA, 0x_AF, 0x_15, 0x_B4, 0x_7B, 0x_B8, 0x_29,
		0x_07, 0x_C1, 0x_AA, 0x_8F, 0x_C9, 0x_21, 0x_97, 0x_8E, 0x_F3, 0x_A7, 0x_C0, 0x_65, 0x_F8, 0x_D9, 0x_B9,
		0x_7A, 0x_F4, 0x_1F, 0x_E5, 0x_56, 0x_33, 0x_B5, 0x_B3, 0x_E9, 0x_F2, 0x_C2, 0x_CC, 0x_4D, 0x_81, 0x_31,
		0x_30, 0x_71, 0x_36, 0x_40, 0x_AE, 0x_60, 0x_D4, 0x_47, 0x_B2, 0x_E4, 0x_2E, 0x_22, 0x_B1, 0x_F1, 0x_D0,
		0x_64, 0x_90, 0x_9E, 0x_FE, 0x_ED, 0x_EB, 0x_BC, 0x_9B, 0x_2F, 0x_DC, 0x_1D, 0x_C7, 0x_74, 0x_67, 0x_4F,
		0x_11, 0x_D5, 0x_05, 0x_A0, 0x_C4, 0x_A2, 0x_54, 0x_CE, 0x_B6, 0x_A8, 0x_D6, 0x_DB, 0x_D1, 0x_08, 0x_61,
		0x_5D, 0x_06, 0x_3D, 0x_7C, 0x_7F, 0x_BF, 0x_50, 0x_25, 0x_E8, 0x_04, 0x_BD, 0x_27, 0x_5E,
	];

	helper(S, BASE, -691);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_445_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_445_in_base_193() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_08, 0x_D7, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_CB, 0x_C7, 0x_2F, 0x_BC, 0x_DF, 0x_50, 0x_11, 0x_AC, 0x_05, 0x_DA, 0x_BD, 0x_86, 0x_A6, 0x_77,
		0x_25, 0x_18, 0x_3D, 0x_41, 0x_DD, 0x_16, 0x_98, 0x_63, 0x_C9, 0x_19, 0x_CC, 0x_B9, 0x_7A, 0x_E8, 0x_7C,
		0x_82, 0x_7F, 0x_B0, 0x_9A, 0x_7E, 0x_A8, 0x_BE, 0x_30, 0x_CF, 0x_44, 0x_EF, 0x_9E, 0x_E2, 0x_D9, 0x_4A,
		0x_01, 0x_A9, 0x_48, 0x_D7, 0x_FE, 0x_8E, 0x_71, 0x_FC, 0x_C4, 0x_40, 0x_72, 0x_1B, 0x_3F, 0x_5A, 0x_39,
		0x_84, 0x_E1, 0x_89, 0x_1E, 0x_E3, 0x_EE, 0x_33, 0x_D5, 0x_D3, 0x_E0, 0x_90, 0x_51, 0x_62, 0x_9C, 0x_6B,
		0x_2C, 0x_F8, 0x_B6, 0x_AD, 0x_5D, 0x_B5, 0x_4D, 0x_CE, 0x_C1, 0x_7B, 0x_26, 0x_4F, 0x_91, 0x_8F, 0x_45,
		0x_42, 0x_93, 0x_B7, 0x_70, 0x_95, 0x_3C, 0x_D4, 0x_17, 0x_13, 0x_F2, 0x_F5, 0x_E6, 0x_15, 0x_35, 0x_22,
		0x_02, 0x_FA, 0x_DC, 0x_ED, 0x_85, 0x_07, 0x_49, 0x_8C, 0x_AF, 0x_E9, 0x_80, 0x_F6, 0x_EB, 0x_55, 0x_F7,
		0x_87, 0x_C0, 0x_5E, 0x_34, 0x_3B, 0x_6A, 0x_A5, 0x_03, 0x_1F, 0x_A2, 0x_EC, 0x_76, 0x_F1, 0x_F3, 0x_52,
		0x_C2, 0x_F9, 0x_43, 0x_C8, 0x_CA, 0x_73, 0x_EA, 0x_10, 0x_1A, 0x_96, 0x_6F, 0x_B2, 0x_E4, 0x_D8, 0x_24,
		0x_12, 0x_31, 0x_6C, 0x_D6, 0x_65, 0x_0E, 0x_79, 0x_92, 0x_97, 0x_AE, 0x_37, 0x_E7, 0x_78, 0x_B3, 0x_0F,
		0x_59, 0x_9D, 0x_14, 0x_4C, 0x_27, 0x_75, 0x_57, 0x_1D, 0x_BF, 0x_9F, 0x_4B, 0x_FD, 0x_60, 0x_61, 0x_28,
		0x_6D, 0x_8D, 0x_32, 0x_06, 0x_99, 0x_54, 0x_AB, 0x_BB, 0x_8B, 0x_B1, 0x_88, 0x_1C, 0x_4E,
	];

	helper(S, BASE, -9_445);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_87_359_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_87_359_in_base_193() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_09,
		0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_90, 0x_90,
		0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90,
		0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90, 0x_90,
		0x_90, 0x_90, 0x_90, 0x_90, 0x_DD, 0x_9F, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_90, 0x_BE, 0x_DD, 0x_D2, 0x_47, 0x_6E, 0x_BC, 0x_01, 0x_F5, 0x_6C, 0x_4D, 0x_F8, 0x_1C, 0x_E5, 0x_22,
		0x_94, 0x_7A, 0x_65, 0x_C2, 0x_67, 0x_3C, 0x_48, 0x_68, 0x_AA, 0x_45, 0x_37, 0x_73, 0x_4C, 0x_70, 0x_59,
		0x_F2, 0x_81, 0x_F0, 0x_AB, 0x_1D, 0x_C1, 0x_63, 0x_23, 0x_87, 0x_B6, 0x_F7, 0x_62, 0x_E8, 0x_52, 0x_27,
		0x_CD, 0x_E4, 0x_64, 0x_D6, 0x_2F, 0x_EA, 0x_5B, 0x_15, 0x_0F, 0x_CE, 0x_60, 0x_E0, 0x_08, 0x_43, 0x_05,
		0x_58, 0x_56, 0x_44, 0x_30, 0x_F9, 0x_A6, 0x_9F, 0x_95, 0x_80, 0x_86, 0x_BA, 0x_53, 0x_76, 0x_79, 0x_1A,
		0x_FB, 0x_88, 0x_71, 0x_1F, 0x_6A, 0x_89, 0x_A3, 0x_AC, 0x_EB, 0x_6B, 0x_B7, 0x_C5, 0x_12, 0x_F4, 0x_4A,
		0x_9B, 0x_75, 0x_C9, 0x_B4, 0x_B9, 0x_C8, 0x_26, 0x_10, 0x_EE, 0x_A2, 0x_7D, 0x_46, 0x_8B, 0x_C3, 0x_B8,
		0x_07, 0x_8E, 0x_5D, 0x_49, 0x_55, 0x_5E, 0x_E6, 0x_18, 0x_A8, 0x_5F, 0x_9A, 0x_61, 0x_C0, 0x_DF, 0x_C4,
		0x_7E, 0x_CA, 0x_FC, 0x_17, 0x_C6, 0x_0E, 0x_D5, 0x_21, 0x_85, 0x_B1, 0x_97, 0x_FD, 0x_03, 0x_06, 0x_E7,
		0x_D9, 0x_9D, 0x_3B, 0x_B3, 0x_74, 0x_4F, 0x_78, 0x_ED, 0x_2E, 0x_3F, 0x_9E, 0x_99, 0x_A1, 0x_3D, 0x_1E,
		0x_B2, 0x_CF, 0x_8D, 0x_E9, 0x_93, 0x_29, 0x_F3, 0x_D8, 0x_FA, 0x_19, 0x_54, 0x_41, 0x_7B, 0x_C7, 0x_04,
		0x_AE, 0x_28, 0x_77, 0x_35, 0x_7C, 0x_4E, 0x_CC, 0x_83, 0x_D3, 0x_FE, 0x_BB, 0x_B5, 0x_9C, 0x_E1, 0x_DA,
		0x_A5, 0x_D7, 0x_82, 0x_AD, 0x_7F, 0x_D4, 0x_CB, 0x_31, 0x_42, 0x_6D, 0x_96, 0x_24, 0x_BF,
	];

	helper(S, BASE, -87_359);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_928_083_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_928_083_in_base_193() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_EE, 0x_90, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_A0, 0x_86, 0x_35, 0x_98, 0x_EC, 0x_D7, 0x_22, 0x_BB, 0x_8C, 0x_CD, 0x_6A, 0x_0E, 0x_2E, 0x_CB,
		0x_34, 0x_BD, 0x_A9, 0x_15, 0x_72, 0x_BF, 0x_E9, 0x_A8, 0x_E5, 0x_EE, 0x_6F, 0x_33, 0x_DF, 0x_D0, 0x_C5,
		0x_C4, 0x_1D, 0x_37, 0x_F5, 0x_9D, 0x_62, 0x_69, 0x_77, 0x_3F, 0x_DD, 0x_04, 0x_64, 0x_57, 0x_81, 0x_63,
		0x_91, 0x_7B, 0x_C2, 0x_E0, 0x_53, 0x_68, 0x_80, 0x_DE, 0x_F7, 0x_D1, 0x_EF, 0x_16, 0x_A5, 0x_74, 0x_FA,
		0x_E4, 0x_A4, 0x_ED, 0x_F0, 0x_BE, 0x_AF, 0x_F4, 0x_31, 0x_B9, 0x_A6, 0x_65, 0x_4C, 0x_8D, 0x_D4, 0x_CF,
		0x_23, 0x_FE, 0x_EB, 0x_1F, 0x_D9, 0x_6C, 0x_02, 0x_01, 0x_F9, 0x_1C, 0x_B7, 0x_E7, 0x_D6, 0x_8A, 0x_4D,
		0x_70, 0x_6B, 0x_D8, 0x_FB, 0x_5C, 0x_4B, 0x_55, 0x_6D, 0x_58, 0x_C9, 0x_F1, 0x_41, 0x_7A, 0x_47, 0x_50,
		0x_06, 0x_AE, 0x_F8, 0x_8F, 0x_9C, 0x_A2, 0x_89, 0x_36, 0x_94, 0x_F2, 0x_B4, 0x_A3, 0x_19, 0x_61, 0x_2F,
		0x_FD, 0x_4E, 0x_87, 0x_03, 0x_DC, 0x_11, 0x_27, 0x_7D, 0x_9B, 0x_1B, 0x_1A, 0x_24, 0x_56, 0x_3B, 0x_B8,
		0x_9A, 0x_14, 0x_3E, 0x_28, 0x_FC, 0x_54, 0x_C0, 0x_E2, 0x_97, 0x_30, 0x_96, 0x_B5, 0x_6E, 0x_E6, 0x_2A,
		0x_AD, 0x_07, 0x_08, 0x_D3, 0x_13, 0x_99, 0x_85, 0x_66, 0x_E3, 0x_10, 0x_67, 0x_40, 0x_43, 0x_FF, 0x_2C,
		0x_B6, 0x_29, 0x_F6, 0x_25, 0x_5A, 0x_5E, 0x_3D, 0x_88, 0x_1E, 0x_AA, 0x_73, 0x_90, 0x_BC, 0x_E8, 0x_BA,
		0x_93, 0x_DB, 0x_52, 0x_32, 0x_B2, 0x_46, 0x_4A, 0x_5D, 0x_48, 0x_DA, 0x_60, 0x_44, 0x_B1,
	];

	helper(S, BASE, -928_083);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_1_581_834_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_1_581_834_in_base_193() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A,
		0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A,
		0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_7E, 0x_77, 0x_F1,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_A0, 0x_B4, 0x_AA, 0x_02, 0x_35, 0x_F1, 0x_43, 0x_62, 0x_DE, 0x_F3, 0x_D0, 0x_65, 0x_9B, 0x_05,
		0x_CB, 0x_AE, 0x_80, 0x_EC, 0x_1C, 0x_51, 0x_C8, 0x_8F, 0x_C0, 0x_52, 0x_95, 0x_CF, 0x_DC, 0x_2C, 0x_38,
		0x_E0, 0x_FB, 0x_45, 0x_5F, 0x_D6, 0x_87, 0x_4C, 0x_54, 0x_F8, 0x_04, 0x_DA, 0x_A7, 0x_7E, 0x_9A, 0x_9D,
		0x_23, 0x_42, 0x_86, 0x_85, 0x_01, 0x_AC, 0x_16, 0x_FE, 0x_C1, 0x_13, 0x_CE, 0x_1B, 0x_B5, 0x_6C, 0x_D7,
		0x_AB, 0x_E9, 0x_A6, 0x_F6, 0x_93, 0x_D1, 0x_B8, 0x_8D, 0x_67, 0x_27, 0x_D2, 0x_44, 0x_E6, 0x_72, 0x_64,
		0x_79, 0x_3A, 0x_DB, 0x_7D, 0x_03, 0x_15, 0x_D8, 0x_90, 0x_D4, 0x_96, 0x_92, 0x_19, 0x_F5, 0x_78, 0x_ED,
		0x_77, 0x_21, 0x_4E, 0x_26, 0x_57, 0x_B0, 0x_1D, 0x_4F, 0x_14, 0x_E5, 0x_66, 0x_1A, 0x_5A, 0x_F0, 0x_30,
		0x_6A, 0x_B1, 0x_B6, 0x_CC, 0x_5B, 0x_C5, 0x_70, 0x_6F, 0x_49, 0x_EB, 0x_A2, 0x_F7, 0x_98, 0x_C2, 0x_34,
		0x_A8, 0x_3B, 0x_CD, 0x_3F, 0x_B7, 0x_46, 0x_F4, 0x_5E, 0x_E7, 0x_C6, 0x_7A, 0x_9E, 0x_9C, 0x_0E, 0x_E8,
		0x_B9, 0x_A4, 0x_06, 0x_47, 0x_6E, 0x_18, 0x_55, 0x_48, 0x_39, 0x_56, 0x_E1, 0x_74, 0x_68, 0x_FD, 0x_7B,
		0x_2E, 0x_60, 0x_10, 0x_D9, 0x_BB, 0x_11, 0x_2F, 0x_EF, 0x_F9, 0x_41, 0x_59, 0x_94, 0x_63, 0x_76, 0x_4D,
		0x_71, 0x_1F, 0x_3E, 0x_E3, 0x_58, 0x_EE, 0x_BE, 0x_61, 0x_4B, 0x_12, 0x_08, 0x_BA, 0x_91, 0x_24, 0x_EA,
		0x_D5, 0x_3C, 0x_FA, 0x_A3, 0x_A5, 0x_A9, 0x_88, 0x_50, 0x_DF, 0x_B3, 0x_81, 0x_6D, 0x_73,
	];

	helper(S, BASE, -1_581_834);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_72_233_635_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_72_233_635_in_base_193() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0C,
		0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_09,
		0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_B6,
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_8B, 0x_68, 0x_5A, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_49, 0x_64, 0x_86, 0x_5E, 0x_53, 0x_29, 0x_B4, 0x_1F, 0x_68, 0x_8B, 0x_C3, 0x_36, 0x_B2, 0x_8F,
		0x_9D, 0x_52, 0x_BD, 0x_9A, 0x_2E, 0x_5C, 0x_87, 0x_95, 0x_34, 0x_60, 0x_C0, 0x_0E, 0x_45, 0x_75, 0x_CE,
		0x_11, 0x_E5, 0x_04, 0x_F6, 0x_48, 0x_27, 0x_A2, 0x_FA, 0x_FF, 0x_01, 0x_5A, 0x_BC, 0x_47, 0x_74, 0x_3A,
		0x_21, 0x_E7, 0x_51, 0x_E4, 0x_23, 0x_73, 0x_32, 0x_DE, 0x_90, 0x_8E, 0x_9B, 0x_2A, 0x_92, 0x_38, 0x_8D,
		0x_7B, 0x_5F, 0x_BB, 0x_4A, 0x_F4, 0x_1D, 0x_1A, 0x_D5, 0x_14, 0x_57, 0x_56, 0x_E8, 0x_26, 0x_35, 0x_AD,
		0x_FC, 0x_30, 0x_CA, 0x_D9, 0x_EA, 0x_CB, 0x_96, 0x_97, 0x_AC, 0x_2C, 0x_98, 0x_7D, 0x_A9, 0x_AB, 0x_39,
		0x_76, 0x_2F, 0x_83, 0x_15, 0x_67, 0x_88, 0x_F9, 0x_85, 0x_F7, 0x_07, 0x_A0, 0x_8C, 0x_4F, 0x_81, 0x_19,
		0x_BA, 0x_F2, 0x_4C, 0x_69, 0x_78, 0x_1C, 0x_9F, 0x_33, 0x_03, 0x_E9, 0x_02, 0x_62, 0x_82, 0x_C1, 0x_E2,
		0x_65, 0x_0F, 0x_16, 0x_FD, 0x_71, 0x_12, 0x_41, 0x_C8, 0x_6B, 0x_44, 0x_1B, 0x_F1, 0x_13, 0x_9C, 0x_66,
		0x_3D, 0x_43, 0x_42, 0x_40, 0x_7F, 0x_E3, 0x_BE, 0x_91, 0x_A1, 0x_D8, 0x_FB, 0x_F0, 0x_C2, 0x_D7, 0x_77,
		0x_ED, 0x_4E, 0x_3B, 0x_A5, 0x_80, 0x_50, 0x_5D, 0x_6C, 0x_6F, 0x_18, 0x_94, 0x_C9, 0x_46, 0x_B1, 0x_D2,
		0x_24, 0x_DF, 0x_DA, 0x_22, 0x_1E, 0x_58, 0x_9E, 0x_93, 0x_DB, 0x_8A, 0x_79, 0x_AF, 0x_EC, 0x_72, 0x_55,
		0x_EF, 0x_5B, 0x_CF, 0x_E1, 0x_37, 0x_08, 0x_7A, 0x_A4, 0x_BF, 0x_05, 0x_D1, 0x_A7, 0x_C5,
	];

	helper(S, BASE, -72_233_635);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_448_672_762_in_base_193
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_448_672_762_in_base_193() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_F3, 0x_E3, 0x_AA, 0x_03,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_E1, 0x_6B, 0x_C4, 0x_DB, 0x_5F, 0x_68, 0x_84, 0x_90, 0x_2F, 0x_9D, 0x_CE, 0x_01, 0x_E8, 0x_16,
		0x_12, 0x_F8, 0x_F2, 0x_EE, 0x_D0, 0x_B8, 0x_B4, 0x_3E, 0x_AD, 0x_0E, 0x_41, 0x_44, 0x_37, 0x_94, 0x_6C,
		0x_30, 0x_C2, 0x_C6, 0x_4D, 0x_8F, 0x_3C, 0x_FD, 0x_26, 0x_F5, 0x_81, 0x_1B, 0x_C8, 0x_25, 0x_8B, 0x_AA,
		0x_2C, 0x_A5, 0x_B5, 0x_5B, 0x_96, 0x_72, 0x_59, 0x_6F, 0x_45, 0x_E2, 0x_48, 0x_FE, 0x_43, 0x_95, 0x_9C,
		0x_36, 0x_22, 0x_F3, 0x_54, 0x_E0, 0x_03, 0x_BE, 0x_EB, 0x_A9, 0x_3F, 0x_4E, 0x_08, 0x_62, 0x_7D, 0x_5D,
		0x_40, 0x_7F, 0x_B9, 0x_EF, 0x_E3, 0x_BC, 0x_F1, 0x_AE, 0x_CF, 0x_D3, 0x_B3, 0x_DD, 0x_BB, 0x_17, 0x_3B,
		0x_E7, 0x_0F, 0x_A0, 0x_85, 0x_C3, 0x_DF, 0x_CC, 0x_24, 0x_50, 0x_99, 0x_65, 0x_B0, 0x_EC, 0x_A2, 0x_FC,
		0x_86, 0x_31, 0x_9F, 0x_35, 0x_A4, 0x_70, 0x_58, 0x_10, 0x_FF, 0x_79, 0x_BD, 0x_D1, 0x_49, 0x_C7, 0x_B7,
		0x_D9, 0x_6D, 0x_D6, 0x_1C, 0x_A3, 0x_DA, 0x_38, 0x_1A, 0x_CD, 0x_9A, 0x_8D, 0x_4B, 0x_15, 0x_A6, 0x_82,
		0x_07, 0x_55, 0x_98, 0x_97, 0x_3D, 0x_A8, 0x_19, 0x_C0, 0x_8E, 0x_D8, 0x_D5, 0x_ED, 0x_51, 0x_9B, 0x_27,
		0x_1D, 0x_2A, 0x_47, 0x_EA, 0x_B6, 0x_E5, 0x_8C, 0x_74, 0x_69, 0x_AC, 0x_06, 0x_32, 0x_28, 0x_87, 0x_4C,
		0x_66, 0x_C5, 0x_C9, 0x_D2, 0x_4F, 0x_5E, 0x_F0, 0x_91, 0x_E4, 0x_E9, 0x_D4, 0x_F7, 0x_F4, 0x_75, 0x_63,
		0x_23, 0x_56, 0x_BA, 0x_29, 0x_9E, 0x_14, 0x_B1, 0x_AB, 0x_F9, 0x_5A, 0x_88, 0x_B2, 0x_CB,
	];

	helper(S, BASE, -448_672_762);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_5_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_5_in_base_247() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_42, 0x_42, 0x_5B,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_A6, 0x_60, 0x_E8, 0x_C5, 0x_5B, 0x_DA, 0x_40, 0x_27, 0x_63, 0x_29, 0x_E3, 0x_E5, 0x_54, 0x_5E,
		0x_F2, 0x_13, 0x_21, 0x_16, 0x_96, 0x_8F, 0x_9D, 0x_BC, 0x_3A, 0x_72, 0x_1F, 0x_48, 0x_F8, 0x_7A, 0x_06,
		0x_8E, 0x_DB, 0x_B6, 0x_E9, 0x_F6, 0x_3C, 0x_6D, 0x_81, 0x_39, 0x_0E, 0x_83, 0x_90, 0x_6E, 0x_E2, 0x_F9,
		0x_32, 0x_84, 0x_B7, 0x_1A, 0x_1E, 0x_8C, 0x_BE, 0x_CC, 0x_EE, 0x_14, 0x_1D, 0x_B0, 0x_C7, 0x_FF, 0x_08,
		0x_3D, 0x_89, 0x_A2, 0x_F3, 0x_28, 0x_79, 0x_65, 0x_EB, 0x_97, 0x_3E, 0x_E7, 0x_A7, 0x_D6, 0x_AD, 0x_94,
		0x_37, 0x_4C, 0x_11, 0x_23, 0x_DD, 0x_3F, 0x_07, 0x_99, 0x_52, 0x_80, 0x_6A, 0x_49, 0x_CB, 0x_C3, 0x_B4,
		0x_A3, 0x_FC, 0x_7B, 0x_2C, 0x_AE, 0x_01, 0x_C1, 0x_FA, 0x_68, 0x_15, 0x_A9, 0x_55, 0x_2F, 0x_74, 0x_DF,
		0x_77, 0x_BF, 0x_57, 0x_75, 0x_87, 0x_25, 0x_D8, 0x_C9, 0x_61, 0x_41, 0x_5C, 0x_D1, 0x_BB, 0x_8D, 0x_04,
		0x_D0, 0x_7F, 0x_51, 0x_E6, 0x_92, 0x_34, 0x_31, 0x_E0, 0x_8A, 0x_A8, 0x_EF, 0x_AF, 0x_F7, 0x_9E, 0x_A5,
		0x_7E, 0x_B2, 0x_2A, 0x_98, 0x_A4, 0x_4F, 0x_F0, 0x_A1, 0x_ED, 0x_85, 0x_DC, 0x_F4, 0x_26, 0x_B5, 0x_76,
		0x_1B, 0x_24, 0x_6B, 0x_BD, 0x_6C, 0x_02, 0x_AC, 0x_9A, 0x_88, 0x_4A, 0x_6F, 0x_FE, 0x_C6, 0x_B8, 0x_78,
		0x_BA, 0x_AA, 0x_50, 0x_43, 0x_4E, 0x_D5, 0x_AB, 0x_CF, 0x_5D, 0x_C8, 0x_36, 0x_0F, 0x_44, 0x_C0, 0x_7C,
		0x_86, 0x_1C, 0x_05, 0x_C2, 0x_D9, 0x_17, 0x_30, 0x_4B, 0x_7D, 0x_12, 0x_35, 0x_82, 0x_2E, 0x_9F, 0x_33,
		0x_22, 0x_71, 0x_70, 0x_64, 0x_9C, 0x_91, 0x_E4, 0x_D2, 0x_D7, 0x_A0, 0x_4D, 0x_E1, 0x_93, 0x_D3, 0x_47,
		0x_FD, 0x_DE, 0x_8B, 0x_59, 0x_C4, 0x_03, 0x_F1, 0x_EA, 0x_5F, 0x_46, 0x_95, 0x_FB, 0x_CE, 0x_19, 0x_5A,
		0x_CA, 0x_3B, 0x_69, 0x_CD, 0x_62, 0x_56, 0x_58, 0x_67, 0x_18, 0x_B1, 0x_B9, 0x_73, 0x_66, 0x_45, 0x_10,
		0x_D4, 0x_F5, 0x_9B, 0x_53, 0x_EC, 0x_B3, 0x_38,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_75_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_75_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_0B,
		0x_09, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_F4,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_CD, 0x_B2, 0x_5C, 0x_7A, 0x_F8, 0x_49, 0x_C0, 0x_FF, 0x_37, 0x_FE, 0x_6C, 0x_81, 0x_3B, 0x_52,
		0x_38, 0x_15, 0x_58, 0x_73, 0x_AD, 0x_42, 0x_30, 0x_13, 0x_96, 0x_33, 0x_BA, 0x_70, 0x_C5, 0x_12, 0x_5E,
		0x_DB, 0x_53, 0x_B8, 0x_9E, 0x_07, 0x_32, 0x_80, 0x_E5, 0x_EF, 0x_A6, 0x_6F, 0x_4E, 0x_AB, 0x_C4, 0x_A1,
		0x_90, 0x_86, 0x_E4, 0x_7F, 0x_19, 0x_68, 0x_8D, 0x_C9, 0x_03, 0x_04, 0x_71, 0x_5A, 0x_29, 0x_6B, 0x_39,
		0x_3C, 0x_F0, 0x_41, 0x_A0, 0x_F1, 0x_5F, 0x_77, 0x_24, 0x_21, 0x_ED, 0x_87, 0x_CB, 0x_82, 0x_8A, 0x_1B,
		0x_F4, 0x_DA, 0x_F9, 0x_55, 0x_4C, 0x_23, 0x_31, 0x_76, 0x_94, 0x_EE, 0x_F6, 0x_17, 0x_25, 0x_99, 0x_51,
		0x_B9, 0x_05, 0x_83, 0x_2F, 0x_06, 0x_F2, 0x_F5, 0x_DF, 0x_D6, 0x_AF, 0x_3A, 0x_C1, 0x_26, 0x_40, 0x_35,
		0x_54, 0x_72, 0x_67, 0x_8F, 0x_63, 0x_B1, 0x_B4, 0x_C8, 0x_BB, 0x_4B, 0x_16, 0x_AE, 0x_97, 0x_36, 0x_59,
		0x_E2, 0x_C2, 0x_DE, 0x_2A, 0x_A8, 0x_64, 0x_CA, 0x_7D, 0x_6A, 0x_D7, 0x_E6, 0x_48, 0x_A9, 0x_FB, 0x_65,
		0x_2E, 0x_E7, 0x_D9, 0x_1A, 0x_EC, 0x_34, 0x_BE, 0x_91, 0x_C3, 0x_F3, 0x_AA, 0x_7E, 0x_57, 0x_69, 0x_6E,
		0x_47, 0x_F7, 0x_78, 0x_D5, 0x_7C, 0x_E8, 0x_0F, 0x_46, 0x_9A, 0x_85, 0x_61, 0x_8B, 0x_2C, 0x_9C, 0x_1C,
		0x_89, 0x_DD, 0x_60, 0x_92, 0x_45, 0x_E3, 0x_95, 0x_10, 0x_D0, 0x_28, 0x_50, 0x_7B, 0x_BD, 0x_9F, 0x_98,
		0x_1F, 0x_D2, 0x_A2, 0x_BC, 0x_C6, 0x_EA, 0x_43, 0x_84, 0x_18, 0x_5B, 0x_75, 0x_01, 0x_3D, 0x_5D, 0x_8C,
		0x_AC, 0x_88, 0x_EB, 0x_CF, 0x_A3, 0x_22, 0x_0E, 0x_4F, 0x_B0, 0x_27, 0x_E9, 0x_9B, 0x_CC, 0x_A7, 0x_FC,
		0x_14, 0x_02, 0x_D1, 0x_B6, 0x_A4, 0x_E1, 0x_74, 0x_C7, 0x_D3, 0x_62, 0x_D8, 0x_CE, 0x_B7, 0x_4D, 0x_93,
		0x_3F, 0x_11, 0x_4A, 0x_3E, 0x_B3, 0x_66, 0x_1D, 0x_44, 0x_9D, 0x_8E, 0x_BF, 0x_1E, 0x_B5, 0x_6D, 0x_FD,
		0x_08, 0x_D4, 0x_FA, 0x_56, 0x_A5, 0x_E0, 0x_79,
	];

	helper(S, BASE, -75);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_522_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_522_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_0A,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71,
		0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71,
		0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71, 0x_71,
		0x_71, 0x_95, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_71, 0x_F7, 0x_95, 0x_46, 0x_EF, 0x_FC, 0x_49, 0x_BA, 0x_63, 0x_C5, 0x_9C, 0x_44, 0x_57, 0x_C0, 0x_8D,
		0x_A5, 0x_A7, 0x_51, 0x_CB, 0x_B0, 0x_AA, 0x_7D, 0x_E8, 0x_F0, 0x_7C, 0x_7E, 0x_AB, 0x_32, 0x_35, 0x_A4,
		0x_85, 0x_D5, 0x_10, 0x_47, 0x_5E, 0x_86, 0x_DB, 0x_E3, 0x_D0, 0x_7F, 0x_CD, 0x_16, 0x_2F, 0x_77, 0x_9F,
		0x_3C, 0x_BC, 0x_B6, 0x_7A, 0x_4E, 0x_6C, 0x_33, 0x_76, 0x_39, 0x_24, 0x_53, 0x_13, 0x_28, 0x_41, 0x_D3,
		0x_B3, 0x_F9, 0x_BB, 0x_5D, 0x_27, 0x_A2, 0x_B4, 0x_E2, 0x_69, 0x_74, 0x_45, 0x_80, 0x_CF, 0x_DC, 0x_93,
		0x_B5, 0x_C9, 0x_A3, 0x_08, 0x_FD, 0x_A8, 0x_C2, 0x_1C, 0x_56, 0x_67, 0x_1F, 0x_F1, 0x_6A, 0x_4A, 0x_37,
		0x_5C, 0x_F5, 0x_A6, 0x_F8, 0x_5A, 0x_ED, 0x_79, 0x_23, 0x_B1, 0x_26, 0x_81, 0x_01, 0x_3B, 0x_DD, 0x_91,
		0x_3A, 0x_FE, 0x_98, 0x_21, 0x_F6, 0x_78, 0x_66, 0x_03, 0x_19, 0x_48, 0x_25, 0x_4D, 0x_3D, 0x_43, 0x_FB,
		0x_F4, 0x_61, 0x_8F, 0x_18, 0x_50, 0x_9D, 0x_D7, 0x_D2, 0x_2A, 0x_55, 0x_4B, 0x_68, 0x_2C, 0x_AC, 0x_92,
		0x_6E, 0x_B2, 0x_AD, 0x_AE, 0x_17, 0x_12, 0x_A0, 0x_CC, 0x_A9, 0x_90, 0x_34, 0x_64, 0x_8A, 0x_AF, 0x_EE,
		0x_C3, 0x_02, 0x_8B, 0x_0F, 0x_BF, 0x_38, 0x_FF, 0x_E0, 0x_C8, 0x_1E, 0x_A1, 0x_E7, 0x_65, 0x_C4, 0x_99,
		0x_36, 0x_75, 0x_E1, 0x_B9, 0x_D4, 0x_05, 0x_06, 0x_97, 0x_CE, 0x_F3, 0x_29, 0x_5F, 0x_84, 0x_60, 0x_BE,
		0x_2E, 0x_82, 0x_94, 0x_BD, 0x_31, 0x_DE, 0x_E5, 0x_4F, 0x_D1, 0x_F2, 0x_52, 0x_42, 0x_E9, 0x_D9, 0x_3F,
		0x_C1, 0x_9A, 0x_C7, 0x_D6, 0x_6B, 0x_87, 0x_07, 0x_EB, 0x_D8, 0x_0E, 0x_22, 0x_B8, 0x_9B, 0x_11, 0x_8E,
		0x_54, 0x_1D, 0x_14, 0x_DA, 0x_DF, 0x_72, 0x_62, 0x_30, 0x_88, 0x_C6, 0x_7B, 0x_FA, 0x_15, 0x_4C, 0x_5B,
		0x_70, 0x_9E, 0x_6F, 0x_CA, 0x_1A, 0x_B7, 0x_89, 0x_E4, 0x_40, 0x_8C, 0x_96, 0x_3E, 0x_73, 0x_83, 0x_59,
		0x_E6, 0x_58, 0x_6D, 0x_EC, 0x_04, 0x_EA, 0x_1B,
	];

	helper(S, BASE, -522);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_6_011_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_6_011_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_35, 0x_6B,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_90, 0x_28, 0x_41, 0x_50, 0x_17, 0x_99, 0x_52, 0x_ED, 0x_1B, 0x_02, 0x_12, 0x_C1, 0x_81, 0x_0F,
		0x_19, 0x_E2, 0x_69, 0x_F0, 0x_87, 0x_8B, 0x_38, 0x_96, 0x_0E, 0x_35, 0x_01, 0x_B3, 0x_8F, 0x_A9, 0x_EE,
		0x_A8, 0x_8C, 0x_B9, 0x_72, 0x_A5, 0x_82, 0x_6E, 0x_10, 0x_60, 0x_EA, 0x_4C, 0x_88, 0x_4D, 0x_1E, 0x_37,
		0x_3C, 0x_7F, 0x_BB, 0x_9D, 0x_EF, 0x_56, 0x_BA, 0x_A0, 0x_5D, 0x_7D, 0x_D5, 0x_DF, 0x_A1, 0x_CE, 0x_34,
		0x_24, 0x_64, 0x_AE, 0x_79, 0x_D7, 0x_49, 0x_9F, 0x_55, 0x_42, 0x_9B, 0x_4E, 0x_2F, 0x_A3, 0x_F2, 0x_CB,
		0x_54, 0x_76, 0x_B4, 0x_B5, 0x_94, 0x_30, 0x_22, 0x_E1, 0x_6B, 0x_BC, 0x_27, 0x_F5, 0x_3F, 0x_11, 0x_4A,
		0x_A7, 0x_F9, 0x_E6, 0x_C2, 0x_EB, 0x_B7, 0x_1D, 0x_1A, 0x_BD, 0x_97, 0x_7A, 0x_31, 0x_18, 0x_05, 0x_D1,
		0x_CD, 0x_67, 0x_5F, 0x_7B, 0x_5E, 0x_F3, 0x_2E, 0x_8A, 0x_23, 0x_FC, 0x_C0, 0x_E4, 0x_D9, 0x_D0, 0x_AD,
		0x_4F, 0x_E3, 0x_8D, 0x_8E, 0x_B1, 0x_B8, 0x_E9, 0x_FF, 0x_CC, 0x_AC, 0x_07, 0x_C9, 0x_2C, 0x_73, 0x_04,
		0x_59, 0x_45, 0x_2A, 0x_B2, 0x_29, 0x_B6, 0x_58, 0x_AF, 0x_91, 0x_57, 0x_13, 0x_B0, 0x_DC, 0x_25, 0x_D4,
		0x_A2, 0x_A6, 0x_E7, 0x_95, 0x_68, 0x_43, 0x_F4, 0x_92, 0x_C8, 0x_E0, 0x_C6, 0x_9A, 0x_DA, 0x_DD, 0x_EC,
		0x_C4, 0x_77, 0x_D6, 0x_66, 0x_14, 0x_93, 0x_3B, 0x_40, 0x_DB, 0x_33, 0x_39, 0x_74, 0x_21, 0x_5B, 0x_03,
		0x_6A, 0x_65, 0x_61, 0x_70, 0x_51, 0x_D8, 0x_9C, 0x_1F, 0x_16, 0x_06, 0x_FE, 0x_A4, 0x_CA, 0x_89, 0x_85,
		0x_1C, 0x_F1, 0x_80, 0x_84, 0x_CF, 0x_3E, 0x_53, 0x_7E, 0x_FD, 0x_F8, 0x_6F, 0x_26, 0x_FA, 0x_44, 0x_62,
		0x_DE, 0x_F7, 0x_3D, 0x_E8, 0x_C3, 0x_C7, 0x_78, 0x_15, 0x_C5, 0x_08, 0x_86, 0x_48, 0x_32, 0x_83, 0x_BF,
		0x_5A, 0x_E5, 0x_98, 0x_5C, 0x_4B, 0x_3A, 0x_AB, 0x_D2, 0x_7C, 0x_AA, 0x_BE, 0x_71, 0x_6C, 0x_9E, 0x_D3,
		0x_46, 0x_75, 0x_F6, 0x_63, 0x_36, 0x_47, 0x_6D,
	];

	helper(S, BASE, -6_011);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_87_717_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_87_717_in_base_247() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_20,
		0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_62, 0x_14, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_E4, 0x_62, 0x_A9, 0x_24, 0x_B3, 0x_DB, 0x_61, 0x_9E, 0x_34, 0x_7D, 0x_A5, 0x_D3, 0x_F3, 0x_9B, 0x_66,
		0x_DE, 0x_63, 0x_A2, 0x_F1, 0x_E5, 0x_AB, 0x_7F, 0x_25, 0x_80, 0x_B6, 0x_40, 0x_B0, 0x_FD, 0x_9D, 0x_8C,
		0x_4D, 0x_3B, 0x_D4, 0x_0F, 0x_5C, 0x_7C, 0x_6A, 0x_9F, 0x_CF, 0x_5D, 0x_E6, 0x_B4, 0x_12, 0x_18, 0x_F8,
		0x_EF, 0x_1D, 0x_94, 0x_43, 0x_D9, 0x_76, 0x_A1, 0x_6F, 0x_22, 0x_79, 0x_68, 0x_21, 0x_4B, 0x_10, 0x_2F,
		0x_2E, 0x_19, 0x_AC, 0x_5F, 0x_7B, 0x_35, 0x_AE, 0x_77, 0x_A3, 0x_FA, 0x_13, 0x_67, 0x_0E, 0x_B7, 0x_F9,
		0x_FB, 0x_93, 0x_D6, 0x_DA, 0x_33, 0x_A7, 0x_E1, 0x_05, 0x_C6, 0x_97, 0x_64, 0x_EB, 0x_39, 0x_37, 0x_49,
		0x_4E, 0x_6E, 0x_45, 0x_E7, 0x_2A, 0x_F6, 0x_C7, 0x_95, 0x_11, 0x_D0, 0x_4F, 0x_07, 0x_54, 0x_5A, 0x_70,
		0x_BD, 0x_6C, 0x_84, 0x_14, 0x_31, 0x_C1, 0x_81, 0x_F5, 0x_FF, 0x_CD, 0x_8E, 0x_E0, 0x_82, 0x_8A, 0x_1A,
		0x_FE, 0x_CE, 0x_C3, 0x_04, 0x_9A, 0x_72, 0x_86, 0x_1C, 0x_2C, 0x_D8, 0x_F2, 0x_C9, 0x_5E, 0x_42, 0x_1B,
		0x_96, 0x_01, 0x_57, 0x_C2, 0x_02, 0x_5B, 0x_A8, 0x_88, 0x_90, 0x_EE, 0x_D7, 0x_BF, 0x_3C, 0x_EC, 0x_8F,
		0x_8D, 0x_D1, 0x_3A, 0x_3F, 0x_44, 0x_CA, 0x_E3, 0x_32, 0x_A0, 0x_CB, 0x_BB, 0x_CC, 0x_65, 0x_71, 0x_9C,
		0x_27, 0x_15, 0x_AA, 0x_91, 0x_7A, 0x_B8, 0x_F0, 0x_AD, 0x_1F, 0x_08, 0x_8B, 0x_59, 0x_99, 0x_52, 0x_C5,
		0x_60, 0x_E2, 0x_C0, 0x_D5, 0x_7E, 0x_85, 0x_87, 0x_C8, 0x_B2, 0x_3E, 0x_30, 0x_56, 0x_DF, 0x_75, 0x_ED,
		0x_DD, 0x_73, 0x_98, 0x_FC, 0x_58, 0x_4A, 0x_36, 0x_46, 0x_41, 0x_78, 0x_C4, 0x_DC, 0x_AF, 0x_6D, 0x_53,
		0x_29, 0x_1E, 0x_48, 0x_D2, 0x_6B, 0x_38, 0x_06, 0x_A6, 0x_83, 0x_4C, 0x_28, 0x_F4, 0x_B9, 0x_BE, 0x_BC,
		0x_26, 0x_47, 0x_BA, 0x_17, 0x_03, 0x_E9, 0x_16, 0x_A4, 0x_50, 0x_B5, 0x_69, 0x_3D, 0x_89, 0x_23, 0x_F7,
		0x_E8, 0x_51, 0x_EA, 0x_92, 0x_55, 0x_B1, 0x_74,
	];

	helper(S, BASE, -87_717);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_878_567_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_878_567_in_base_247() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0D,
		0x_20, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_06, 0x_39, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_A6, 0x_DE, 0x_31, 0x_14, 0x_A7, 0x_CD, 0x_C4, 0x_2A, 0x_50, 0x_C2, 0x_EA, 0x_FD, 0x_97, 0x_06,
		0x_A9, 0x_08, 0x_2F, 0x_8D, 0x_EC, 0x_81, 0x_6D, 0x_8C, 0x_45, 0x_58, 0x_B9, 0x_76, 0x_12, 0x_E6, 0x_A3,
		0x_DA, 0x_85, 0x_9B, 0x_D5, 0x_DC, 0x_D1, 0x_E5, 0x_07, 0x_D3, 0x_D8, 0x_87, 0x_10, 0x_24, 0x_5F, 0x_BE,
		0x_CB, 0x_DF, 0x_89, 0x_7F, 0x_32, 0x_D9, 0x_F2, 0x_DD, 0x_D6, 0x_EF, 0x_88, 0x_F7, 0x_BD, 0x_3B, 0x_CC,
		0x_03, 0x_72, 0x_E8, 0x_ED, 0x_17, 0x_AA, 0x_3E, 0x_EB, 0x_8B, 0x_8E, 0x_92, 0x_1B, 0x_0F, 0x_19, 0x_9F,
		0x_33, 0x_5C, 0x_1D, 0x_FF, 0x_55, 0x_65, 0x_99, 0x_51, 0x_C0, 0x_22, 0x_86, 0x_CA, 0x_E7, 0x_38, 0x_61,
		0x_4A, 0x_9A, 0x_64, 0x_4F, 0x_78, 0x_79, 0x_AF, 0x_46, 0x_39, 0x_67, 0x_13, 0x_69, 0x_47, 0x_5B, 0x_7D,
		0x_05, 0x_4E, 0x_68, 0x_B7, 0x_B6, 0x_C9, 0x_6B, 0x_C5, 0x_83, 0x_E9, 0x_02, 0x_11, 0x_4B, 0x_3A, 0x_FA,
		0x_A4, 0x_DB, 0x_C3, 0x_21, 0x_98, 0x_EE, 0x_A5, 0x_D2, 0x_04, 0x_9D, 0x_7A, 0x_D7, 0x_44, 0x_1E, 0x_2C,
		0x_5A, 0x_B4, 0x_93, 0x_F0, 0x_B2, 0x_CE, 0x_43, 0x_3F, 0x_70, 0x_62, 0x_16, 0x_6F, 0x_D4, 0x_E3, 0x_35,
		0x_C1, 0x_AC, 0x_3C, 0x_6A, 0x_4D, 0x_9E, 0x_E0, 0x_CF, 0x_77, 0x_F1, 0x_48, 0x_91, 0x_28, 0x_BA, 0x_BC,
		0x_66, 0x_74, 0x_36, 0x_F5, 0x_1C, 0x_37, 0x_26, 0x_80, 0x_8F, 0x_56, 0x_57, 0x_3D, 0x_01, 0x_AE, 0x_63,
		0x_30, 0x_95, 0x_A0, 0x_5D, 0x_6E, 0x_BB, 0x_94, 0x_B8, 0x_25, 0x_29, 0x_7B, 0x_7C, 0x_FB, 0x_C6, 0x_60,
		0x_7E, 0x_73, 0x_1F, 0x_54, 0x_71, 0x_96, 0x_59, 0x_B5, 0x_E4, 0x_B1, 0x_E2, 0x_15, 0x_D0, 0x_A8, 0x_6C,
		0x_49, 0x_AB, 0x_1A, 0x_41, 0x_82, 0x_27, 0x_C7, 0x_F6, 0x_34, 0x_B0, 0x_FC, 0x_A1, 0x_BF, 0x_52, 0x_F4,
		0x_4C, 0x_90, 0x_B3, 0x_AD, 0x_5E, 0x_A2, 0x_40, 0x_F9, 0x_23, 0x_F3, 0x_8A, 0x_9C, 0x_75, 0x_E1, 0x_2E,
		0x_18, 0x_84, 0x_F8, 0x_42, 0x_53, 0x_0E, 0x_FE,
	];

	helper(S, BASE, -878_567);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_4_845_810_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_4_845_810_in_base_247() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84,
		0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84,
		0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_BD, 0x_6C, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_4C, 0x_EB, 0x_8E, 0x_8C, 0x_01, 0x_57, 0x_8A, 0x_79, 0x_D1, 0x_85, 0x_41, 0x_36, 0x_FA, 0x_75,
		0x_6A, 0x_AB, 0x_43, 0x_B4, 0x_26, 0x_6B, 0x_B1, 0x_23, 0x_9E, 0x_E1, 0x_B9, 0x_18, 0x_1F, 0x_CA, 0x_08,
		0x_4E, 0x_60, 0x_95, 0x_33, 0x_8F, 0x_1A, 0x_21, 0x_2A, 0x_CB, 0x_88, 0x_5E, 0x_93, 0x_7D, 0x_CD, 0x_53,
		0x_A9, 0x_1C, 0x_4A, 0x_9F, 0x_FD, 0x_8D, 0x_49, 0x_D3, 0x_96, 0x_37, 0x_F1, 0x_07, 0x_EE, 0x_BE, 0x_F3,
		0x_98, 0x_3C, 0x_03, 0x_05, 0x_B3, 0x_9C, 0x_04, 0x_9D, 0x_28, 0x_DE, 0x_6D, 0x_3F, 0x_45, 0x_1E, 0x_A6,
		0x_D0, 0x_97, 0x_46, 0x_52, 0x_BD, 0x_D9, 0x_7A, 0x_66, 0x_E5, 0x_90, 0x_87, 0x_73, 0x_C8, 0x_63, 0x_67,
		0x_3E, 0x_4B, 0x_77, 0x_F6, 0x_80, 0x_78, 0x_BC, 0x_86, 0x_D4, 0x_AD, 0x_92, 0x_6F, 0x_C1, 0x_A2, 0x_7B,
		0x_6C, 0x_DC, 0x_C4, 0x_02, 0x_72, 0x_3B, 0x_4D, 0x_C7, 0x_CE, 0x_3A, 0x_68, 0x_E8, 0x_F2, 0x_5F, 0x_BB,
		0x_71, 0x_C2, 0x_BA, 0x_58, 0x_F8, 0x_99, 0x_54, 0x_5C, 0x_FF, 0x_06, 0x_ED, 0x_B7, 0x_74, 0x_1D, 0x_0E,
		0x_C3, 0x_AE, 0x_13, 0x_1B, 0x_F9, 0x_E2, 0x_14, 0x_76, 0x_2C, 0x_48, 0x_BF, 0x_17, 0x_27, 0x_2E, 0x_D8,
		0x_4F, 0x_A7, 0x_C0, 0x_5A, 0x_83, 0x_AC, 0x_D7, 0x_34, 0x_50, 0x_91, 0x_5D, 0x_6E, 0x_10, 0x_0F, 0x_70,
		0x_B5, 0x_61, 0x_35, 0x_DD, 0x_42, 0x_81, 0x_19, 0x_2F, 0x_C6, 0x_8B, 0x_22, 0x_AA, 0x_FE, 0x_B2, 0x_DA,
		0x_E9, 0x_EC, 0x_E3, 0x_65, 0x_E4, 0x_A3, 0x_5B, 0x_E7, 0x_59, 0x_94, 0x_62, 0x_A0, 0x_55, 0x_24, 0x_C5,
		0x_32, 0x_CF, 0x_D2, 0x_F5, 0x_31, 0x_12, 0x_E0, 0x_3D, 0x_89, 0x_F0, 0x_F4, 0x_7F, 0x_40, 0x_15, 0x_69,
		0x_F7, 0x_9B, 0x_AF, 0x_30, 0x_47, 0x_A8, 0x_B6, 0x_A1, 0x_A5, 0x_D6, 0x_82, 0x_D5, 0x_B0, 0x_CC, 0x_C9,
		0x_FB, 0x_DB, 0x_EA, 0x_A4, 0x_E6, 0x_56, 0x_39, 0x_FC, 0x_B8, 0x_38, 0x_9A, 0x_11, 0x_29, 0x_44, 0x_7E,
		0x_64, 0x_DF, 0x_EF, 0x_25, 0x_16, 0x_7C, 0x_51,
	];

	helper(S, BASE, -4_845_810);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_20_991_690_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_20_991_690_in_base_247() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0D,
		0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_0B,
		0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AF, 0x_D6, 0x_A0,
		0x_EB,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_AF, 0x_5F, 0x_07, 0x_38, 0x_6F, 0x_2C, 0x_45, 0x_5E, 0x_F9, 0x_60, 0x_0E, 0x_5D, 0x_FC, 0x_B1,
		0x_1A, 0x_E1, 0x_F1, 0x_A0, 0x_7E, 0x_34, 0x_41, 0x_B9, 0x_97, 0x_10, 0x_6B, 0x_36, 0x_13, 0x_4B, 0x_B3,
		0x_4A, 0x_55, 0x_EA, 0x_44, 0x_8C, 0x_08, 0x_CD, 0x_D4, 0x_BE, 0x_BB, 0x_F0, 0x_A6, 0x_CC, 0x_21, 0x_8E,
		0x_3D, 0x_7F, 0x_1F, 0x_6D, 0x_A3, 0x_CB, 0x_D3, 0x_57, 0x_72, 0x_A5, 0x_69, 0x_F7, 0x_D2, 0x_D5, 0x_43,
		0x_E9, 0x_D7, 0x_49, 0x_73, 0x_C2, 0x_BF, 0x_03, 0x_4F, 0x_FA, 0x_CE, 0x_6C, 0x_70, 0x_B5, 0x_11, 0x_C8,
		0x_8D, 0x_61, 0x_32, 0x_18, 0x_C6, 0x_2F, 0x_4C, 0x_3F, 0x_F4, 0x_B2, 0x_62, 0x_6E, 0x_C3, 0x_ED, 0x_CF,
		0x_81, 0x_AC, 0x_96, 0x_E5, 0x_7C, 0x_71, 0x_58, 0x_D6, 0x_35, 0x_8B, 0x_F2, 0x_BA, 0x_9C, 0x_FF, 0x_A2,
		0x_D8, 0x_EE, 0x_17, 0x_37, 0x_FE, 0x_E4, 0x_B8, 0x_9D, 0x_D0, 0x_DC, 0x_24, 0x_80, 0x_A9, 0x_1C, 0x_B0,
		0x_68, 0x_77, 0x_95, 0x_1B, 0x_C7, 0x_1D, 0x_9F, 0x_78, 0x_04, 0x_84, 0x_FD, 0x_3E, 0x_7D, 0x_BC, 0x_12,
		0x_A8, 0x_66, 0x_31, 0x_A4, 0x_63, 0x_BD, 0x_30, 0x_74, 0x_01, 0x_E7, 0x_89, 0x_87, 0x_23, 0x_EB, 0x_88,
		0x_B7, 0x_48, 0x_98, 0x_5B, 0x_28, 0x_50, 0x_27, 0x_2A, 0x_EF, 0x_46, 0x_F3, 0x_C5, 0x_91, 0x_8A, 0x_9A,
		0x_5A, 0x_25, 0x_E6, 0x_3C, 0x_E8, 0x_93, 0x_39, 0x_0F, 0x_29, 0x_DD, 0x_54, 0x_E0, 0x_51, 0x_16, 0x_52,
		0x_14, 0x_C4, 0x_90, 0x_E2, 0x_26, 0x_C9, 0x_B4, 0x_86, 0x_7B, 0x_DB, 0x_99, 0x_5C, 0x_75, 0x_82, 0x_D1,
		0x_15, 0x_22, 0x_CA, 0x_AE, 0x_19, 0x_4D, 0x_9B, 0x_85, 0x_AB, 0x_8F, 0x_56, 0x_76, 0x_4E, 0x_AD, 0x_F6,
		0x_DA, 0x_67, 0x_47, 0x_A7, 0x_FB, 0x_C0, 0x_33, 0x_F5, 0x_C1, 0x_F8, 0x_B6, 0x_42, 0x_92, 0x_1E, 0x_3B,
		0x_DE, 0x_DF, 0x_02, 0x_06, 0x_64, 0x_53, 0x_6A, 0x_83, 0x_2E, 0x_D9, 0x_79, 0x_9E, 0x_E3, 0x_7A, 0x_3A,
		0x_65, 0x_EC, 0x_94, 0x_05, 0x_A1, 0x_40, 0x_59,
	];

	helper(S, BASE, -20_991_690);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_767_682_112_in_base_247
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_767_682_112_in_base_247() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0D,
		0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0D,
		0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_67, 0x_98,
		0x_A7, 0x_75,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_88, 0x_0E, 0x_4E, 0x_C6, 0x_F1, 0x_E6, 0x_24, 0x_8F, 0x_21, 0x_45, 0x_FB, 0x_53, 0x_4B, 0x_95,
		0x_63, 0x_7C, 0x_57, 0x_C7, 0x_9B, 0x_08, 0x_30, 0x_87, 0x_A7, 0x_6C, 0x_06, 0x_3B, 0x_F4, 0x_B2, 0x_29,
		0x_18, 0x_46, 0x_AB, 0x_B9, 0x_78, 0x_BA, 0x_02, 0x_D1, 0x_19, 0x_83, 0x_60, 0x_C2, 0x_DB, 0x_1C, 0x_B7,
		0x_A2, 0x_7F, 0x_E2, 0x_2E, 0x_14, 0x_67, 0x_C8, 0x_77, 0x_A1, 0x_C4, 0x_6A, 0x_59, 0x_C3, 0x_52, 0x_CE,
		0x_31, 0x_FE, 0x_6E, 0x_71, 0x_F6, 0x_5D, 0x_51, 0x_CF, 0x_93, 0x_9D, 0x_81, 0x_36, 0x_3A, 0x_68, 0x_34,
		0x_38, 0x_32, 0x_E5, 0x_91, 0x_48, 0x_E0, 0x_6F, 0x_05, 0x_E8, 0x_E4, 0x_E3, 0x_22, 0x_D4, 0x_A9, 0x_7B,
		0x_CA, 0x_3F, 0x_23, 0x_C5, 0x_66, 0x_7A, 0x_1E, 0x_2A, 0x_5E, 0x_B4, 0x_F2, 0x_F7, 0x_FC, 0x_D7, 0x_B6,
		0x_E9, 0x_92, 0x_0F, 0x_2F, 0x_E7, 0x_80, 0x_B3, 0x_03, 0x_4F, 0x_11, 0x_3C, 0x_DD, 0x_76, 0x_D9, 0x_17,
		0x_04, 0x_7E, 0x_F8, 0x_8A, 0x_86, 0x_DE, 0x_FF, 0x_F5, 0x_FD, 0x_37, 0x_73, 0x_69, 0x_43, 0x_1F, 0x_8C,
		0x_12, 0x_C0, 0x_33, 0x_44, 0x_EF, 0x_2C, 0x_62, 0x_5B, 0x_07, 0x_7D, 0x_94, 0x_70, 0x_E1, 0x_55, 0x_13,
		0x_DF, 0x_D0, 0x_72, 0x_3E, 0x_99, 0x_ED, 0x_10, 0x_A4, 0x_61, 0x_79, 0x_C9, 0x_4C, 0x_5A, 0x_3D, 0x_1D,
		0x_9A, 0x_B1, 0x_90, 0x_26, 0x_A8, 0x_5C, 0x_9F, 0x_FA, 0x_CB, 0x_4A, 0x_65, 0x_1B, 0x_F9, 0x_96, 0x_BD,
		0x_56, 0x_85, 0x_74, 0x_16, 0x_75, 0x_39, 0x_BE, 0x_AC, 0x_9E, 0x_D8, 0x_89, 0x_28, 0x_BB, 0x_8D, 0x_01,
		0x_A0, 0x_5F, 0x_49, 0x_EC, 0x_40, 0x_15, 0x_D6, 0x_84, 0x_C1, 0x_F3, 0x_82, 0x_A3, 0x_B5, 0x_B0, 0x_F0,
		0x_EE, 0x_4D, 0x_AD, 0x_DA, 0x_25, 0x_58, 0x_41, 0x_BC, 0x_6D, 0x_8E, 0x_A6, 0x_6B, 0x_47, 0x_BF, 0x_54,
		0x_A5, 0x_D2, 0x_50, 0x_9C, 0x_D3, 0x_EA, 0x_8B, 0x_D5, 0x_98, 0x_B8, 0x_42, 0x_27, 0x_DC, 0x_AE, 0x_AF,
		0x_64, 0x_CC, 0x_EB, 0x_97, 0x_35, 0x_CD, 0x_1A,
	];

	helper(S, BASE, -767_682_112);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_0B,
		0x_09, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_02,
		0x_02, 0x_02, 0x_6E, 0x_02, 0x_78, 0x_78, 0x_02, 0x_78, 0x_02, 0x_02, 0x_78, 0x_02, 0x_02, 0x_02, 0x_02,
		0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_02, 0x_78, 0x_78, 0x_02, 0x_02, 0x_78,
		0x_02, 0x_02, 0x_02, 0x_78, 0x_78, 0x_78, 0x_02, 0x_02, 0x_78, 0x_02, 0x_02, 0x_02, 0x_78, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_02,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_31_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_31_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_CA, 0x_56, 0x_C6, 0x_56,
		0x_56, 0x_56, 0x_C6, 0x_C6, 0x_56, 0x_C6, 0x_C6, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_C6, 0x_56,
	];

	helper(S, BASE, -31);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_901_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_901_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_BB, 0x_BB, 0x_BB, 0x_14, 0x_14, 0x_14, 0x_14, 0x_BB, 0x_14, 0x_BB, 0x_EB, 0x_14, 0x_14, 0x_14,
		0x_14, 0x_14, 0x_BB, 0x_14, 0x_14, 0x_14, 0x_14, 0x_BB, 0x_14, 0x_BB, 0x_BB, 0x_BB, 0x_14, 0x_BB, 0x_14,
		0x_BB, 0x_BB, 0x_14, 0x_14, 0x_14, 0x_BB, 0x_14, 0x_14, 0x_14, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB, 0x_BB,
		0x_BB, 0x_14, 0x_14, 0x_14, 0x_BB, 0x_14, 0x_BB, 0x_BB, 0x_BB,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_BB,
	];

	helper(S, BASE, -901);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_976_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_976_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0C,
		0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_77, 0x_3E, 0x_77, 0x_77, 0x_77, 0x_3E,
		0x_77, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_46, 0x_3E, 0x_3E, 0x_3E, 0x_3E, 0x_77, 0x_77, 0x_77, 0x_3E,
		0x_77, 0x_77, 0x_3E, 0x_3E, 0x_77, 0x_3E, 0x_3E, 0x_3E, 0x_3E,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_77,
	];

	helper(S, BASE, -2_976);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_50_964_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_50_964_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_09,
		0x_20, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0D,
		0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_B5, 0x_B5, 0x_3D, 0x_3D, 0x_3D, 0x_B5, 0x_B5, 0x_B5,
		0x_3D, 0x_3D, 0x_3D, 0x_B5, 0x_3D, 0x_B5, 0x_3D, 0x_3D, 0x_CC, 0x_B5, 0x_3D, 0x_B5, 0x_3D, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_3D, 0x_3D, 0x_3D, 0x_B5, 0x_3D, 0x_B5, 0x_3D, 0x_B5, 0x_3D, 0x_B5, 0x_3D, 0x_3D, 0x_B5,
		0x_3D, 0x_B5, 0x_3D, 0x_B5, 0x_B5, 0x_3D, 0x_B5, 0x_3D, 0x_B5, 0x_B5, 0x_3D, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_B5,
	];

	helper(S, BASE, -50_964);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_519_528_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_519_528_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_F7, 0x_12, 0x_12, 0x_F7, 0x_12,
		0x_F7, 0x_12, 0x_12, 0x_F7, 0x_12, 0x_F7, 0x_F7, 0x_F7, 0x_D8, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_12,
	];

	helper(S, BASE, -519_528);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_707_569_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_707_569_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_09, 0x_20,
		0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_20,
		0x_0A, 0x_20, 0x_20, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_C1, 0x_C1,
		0x_C1, 0x_65, 0x_65, 0x_65, 0x_C1, 0x_65, 0x_65, 0x_C1, 0x_65, 0x_65, 0x_C1, 0x_65, 0x_C1, 0x_65, 0x_C1,
		0x_C1, 0x_65, 0x_65, 0x_65, 0x_C1, 0x_5F, 0x_65, 0x_C1, 0x_C1, 0x_65, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_65, 0x_C1,
	];

	helper(S, BASE, -3_707_569);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_86_398_532_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_86_398_532_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_E4, 0x_C6, 0x_E4, 0x_C6, 0x_C6, 0x_E4,
		0x_C6, 0x_C6, 0x_E4, 0x_E4, 0x_C6, 0x_C6, 0x_E4, 0x_C6, 0x_E4, 0x_C6, 0x_E4, 0x_E4, 0x_C6, 0x_C6, 0x_E4,
		0x_C6, 0x_C6, 0x_C6, 0x_E4, 0x_C6, 0x_C6, 0x_E8, 0x_C6, 0x_E4, 0x_E4, 0x_C6, 0x_E4, 0x_C6, 0x_C6, 0x_E4,
		0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_C6, 0x_C6, 0x_E4, 0x_C6, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_E4, 0x_C6, 0x_C6,
		0x_E4, 0x_C6, 0x_C6, 0x_E4, 0x_E4, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_C6, 0x_E4, 0x_C6, 0x_C6, 0x_E4,
		0x_C6, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_C6, 0x_E4,
	];

	helper(S, BASE, -86_398_532);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_605_127_553_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_605_127_553_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0A,
		0x_0C, 0x_09, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0C,
		0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_69, 0x_25, 0x_25, 0x_69, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_69, 0x_25, 0x_25, 0x_25,
		0x_69, 0x_69, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_69, 0x_69, 0x_69, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25,
		0x_25, 0x_69, 0x_0F, 0x_25, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_69,
	];

	helper(S, BASE, -605_127_553);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_1_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_1_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_09, 0x_0C,
		0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_D5, 0x_4C, 0x_E0, 0x_E0, 0x_E0, 0x_D5, 0x_D5,
		0x_18, 0x_E0, 0x_E0, 0x_18, 0x_E0, 0x_18, 0x_E0, 0x_18, 0x_D5, 0x_E0, 0x_D5, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_D5, 0x_E0,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_97_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_97_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_62, 0x_59, 0x_62,
		0x_55, 0x_62, 0x_26, 0x_59, 0x_59, 0x_62, 0x_55, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_59, 0x_62, 0x_55,
	];

	helper(S, BASE, -97);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_828_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_828_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_20,
		0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_D7, 0x_92, 0x_D7, 0x_92, 0x_67, 0x_92, 0x_92,
		0x_D1, 0x_D7, 0x_67, 0x_67, 0x_D7, 0x_D7, 0x_D7, 0x_67, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_D7, 0x_67,
	];

	helper(S, BASE, -828);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_169_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_169_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0A,
		0x_0D, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0A,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_44, 0x_26, 0x_26, 0x_58, 0x_5F, 0x_5F, 0x_5F, 0x_26, 0x_26, 0x_26, 0x_5F, 0x_5F, 0x_26, 0x_5F,
		0x_26, 0x_44, 0x_5F, 0x_44, 0x_26, 0x_5F, 0x_44, 0x_44, 0x_5F, 0x_26, 0x_26, 0x_5F, 0x_5F, 0x_5F, 0x_44,
		0x_44, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_26, 0x_26, 0x_44, 0x_44, 0x_44, 0x_5F, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_44, 0x_5F,
	];

	helper(S, BASE, -2_169);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_33_899_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_33_899_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_20,
		0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0A, 0x_0C,
		0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_32, 0x_31, 0x_5D, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_31, 0x_C3, 0x_32,
		0x_31, 0x_32, 0x_5D, 0x_5D, 0x_31, 0x_5D, 0x_31, 0x_5D, 0x_32, 0x_32, 0x_32, 0x_31, 0x_5D, 0x_32, 0x_5D,
		0x_5D, 0x_32, 0x_5D, 0x_5D, 0x_5D, 0x_31, 0x_5D, 0x_5D, 0x_32, 0x_31, 0x_31, 0x_5D, 0x_5D, 0x_5D, 0x_5D,
		0x_32, 0x_32, 0x_32, 0x_5D, 0x_32, 0x_5D, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_32, 0x_31,
	];

	helper(S, BASE, -33_899);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_126_065_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_126_065_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0A,
		0x_0A, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_09,
		0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_6E, 0x_1F, 0x_46, 0x_1F, 0x_46, 0x_6E,
		0x_6E, 0x_46, 0x_1F, 0x_1F, 0x_6E, 0x_DC, 0x_1F, 0x_6E, 0x_1F, 0x_6E, 0x_1F, 0x_46, 0x_6E, 0x_6E, 0x_1F,
		0x_1F, 0x_46, 0x_46, 0x_46, 0x_46, 0x_1F, 0x_1F, 0x_46, 0x_6E, 0x_6E, 0x_1F, 0x_6E, 0x_6E, 0x_6E, 0x_6E,
		0x_1F, 0x_6E, 0x_1F, 0x_46, 0x_46, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_1F, 0x_46, 0x_6E,
	];

	helper(S, BASE, -126_065);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_9_831_692_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_9_831_692_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_4B, 0x_18, 0x_18, 0x_66, 0x_66,
		0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_66, 0x_4B, 0x_4B, 0x_18, 0x_4B, 0x_EF, 0x_18, 0x_18, 0x_18, 0x_4B,
		0x_66, 0x_66, 0x_4B, 0x_66, 0x_18, 0x_66, 0x_4B, 0x_18, 0x_66, 0x_66, 0x_66, 0x_18, 0x_4B, 0x_18, 0x_66,
		0x_18, 0x_4B, 0x_66, 0x_4B, 0x_66, 0x_4B, 0x_18, 0x_66, 0x_18, 0x_66, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_66, 0x_4B,
	];

	helper(S, BASE, -9_831_692);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_41_454_023_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_41_454_023_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_FF, 0x_FF,
		0x_FF, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_FF, 0x_E1, 0x_FF, 0x_E1, 0x_E1, 0x_2E, 0x_FF, 0x_67,
		0x_2E, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_2E, 0x_FF,
	];

	helper(S, BASE, -41_454_023);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_631_656_371_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_631_656_371_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0B,
		0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0D,
		0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_FD, 0x_FD, 0x_11, 0x_11, 0x_EA, 0x_EA, 0x_EA, 0x_FD, 0x_11, 0x_EA, 0x_FD, 0x_FD, 0x_EA, 0x_FD,
		0x_11, 0x_11, 0x_FD, 0x_EA, 0x_11, 0x_B6, 0x_FD, 0x_FD, 0x_11, 0x_11, 0x_EA, 0x_FD, 0x_11, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_FD, 0x_11,
	];

	helper(S, BASE, -631_656_371);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0D,
		0x_0D, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_20,
		0x_20, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_5A, 0x_F8,
		0x_45, 0x_B1, 0x_79, 0x_77, 0x_79, 0x_F8, 0x_F8, 0x_77, 0x_79, 0x_77, 0x_77, 0x_79, 0x_F8, 0x_B1, 0x_B1,
		0x_79, 0x_77, 0x_79, 0x_77, 0x_5A, 0x_5A, 0x_79, 0x_77, 0x_F8, 0x_79, 0x_B1, 0x_77, 0x_F8, 0x_79, 0x_5A,
		0x_F8, 0x_5A, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_5A, 0x_F8, 0x_79, 0x_B1,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_19_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_19_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_09, 0x_20,
		0x_20, 0x_09, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0A,
		0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_09, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_91, 0x_E5, 0x_A7, 0x_AA, 0x_6D, 0x_AA, 0x_91, 0x_6D, 0x_6D, 0x_AA,
		0x_E5, 0x_91, 0x_AA, 0x_6D, 0x_E5, 0x_6D, 0x_6D, 0x_E5, 0x_6D, 0x_E5, 0x_E5, 0x_AA, 0x_91, 0x_91, 0x_AA,
		0x_6D, 0x_E5, 0x_7B, 0x_E5, 0x_7B, 0x_AA, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_6D, 0x_AA, 0x_91, 0x_E5,
	];

	helper(S, BASE, -19);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_772_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_772_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_0C,
		0x_0A, 0x_0B, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_6D, 0x_6D, 0x_E5, 0x_44, 0x_C7,
		0x_FF, 0x_6D, 0x_44, 0x_A6, 0x_E5, 0x_C7, 0x_A6, 0x_E5, 0x_6D, 0x_E5, 0x_A6, 0x_A6, 0x_E5, 0x_A6, 0x_44,
		0x_A6, 0x_6D, 0x_44, 0x_44, 0x_6D, 0x_C7, 0x_E5, 0x_A6, 0x_6D, 0x_44, 0x_E5, 0x_A6, 0x_6D, 0x_6D, 0x_C7,
		0x_C7, 0x_E5, 0x_6D, 0x_E5, 0x_E5, 0x_E5, 0x_A6, 0x_A6, 0x_E5,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_6D, 0x_C7, 0x_A6, 0x_44,
	];

	helper(S, BASE, -772);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_6_141_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_6_141_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_20,
		0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_E2, 0x_29, 0x_29, 0x_1D, 0x_7B, 0x_E2, 0x_FD,
		0x_1D, 0x_E2, 0x_29, 0x_7B, 0x_7B, 0x_29, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_E2, 0x_23, 0x_7B, 0x_29,
	];

	helper(S, BASE, -6_141);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_19_573_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_19_573_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_BB,
		0x_BB, 0x_BB, 0x_BB, 0x_F7, 0x_07, 0x_02, 0x_4E, 0x_83, 0x_F7, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_83, 0x_BB, 0x_F7, 0x_02, 0x_07,
	];

	helper(S, BASE, -19_573);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_668_013_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_668_013_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_09,
		0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_0C,
		0x_0D, 0x_09, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_D6, 0x_9F, 0x_3D, 0x_9F,
		0x_9F, 0x_EF, 0x_37, 0x_3D, 0x_9F, 0x_B4, 0x_37, 0x_37, 0x_EF, 0x_EF, 0x_3D, 0x_3D, 0x_D6, 0x_D6, 0x_3D,
		0x_3D, 0x_3D, 0x_9F, 0x_3D, 0x_3D, 0x_3D, 0x_9F, 0x_EF, 0x_D6, 0x_9F, 0x_37, 0x_37, 0x_9F, 0x_D6, 0x_EF,
		0x_3D, 0x_EF, 0x_9F, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_D6, 0x_3D, 0x_9F, 0x_EF,
	];

	helper(S, BASE, -668_013);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_9_141_766_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_9_141_766_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_0C,
		0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_16, 0x_8C, 0x_C2, 0x_77, 0x_77, 0x_B5, 0x_16, 0x_77, 0x_8C, 0x_B5,
		0x_2C, 0x_C2, 0x_16, 0x_16, 0x_16, 0x_C2, 0x_B5, 0x_B5, 0x_8C, 0x_77, 0x_8C, 0x_77, 0x_8C, 0x_77, 0x_C2,
		0x_16, 0x_C2, 0x_16, 0x_C2, 0x_B5, 0x_16, 0x_8C, 0x_77, 0x_C2, 0x_77, 0x_B5, 0x_C2, 0x_B5, 0x_16, 0x_77,
		0x_B5, 0x_C2, 0x_16, 0x_B5, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_B5, 0x_C2, 0x_8C, 0x_16,
	];

	helper(S, BASE, -9_141_766);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_47_601_023_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_47_601_023_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_4B, 0x_4B, 0x_E9, 0x_4B,
		0x_E9, 0x_8E, 0x_E9, 0x_AF, 0x_4A, 0x_4B, 0x_AF, 0x_9B, 0x_AF, 0x_4A, 0x_4A, 0x_8E, 0x_4A, 0x_E9, 0x_4B,
		0x_8E,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_E9, 0x_8E, 0x_AF, 0x_4B,
	];

	helper(S, BASE, -47_601_023);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_581_459_872_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_581_459_872_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_F1, 0x_AF, 0x_D9, 0x_F1, 0x_CB, 0x_F1, 0x_CB, 0x_F1, 0x_50, 0x_CB, 0x_D9,
		0x_D9, 0x_F1, 0x_EF, 0x_50, 0x_D9, 0x_AF, 0x_50, 0x_AF, 0x_F1, 0x_F1, 0x_CB, 0x_50, 0x_CB, 0x_50, 0x_F1,
		0x_F1, 0x_50, 0x_F1, 0x_D9, 0x_CB, 0x_CB, 0x_CB, 0x_AF, 0x_50, 0x_50, 0x_D9, 0x_CB, 0x_F1, 0x_CB, 0x_CB,
		0x_AF, 0x_50, 0x_D9, 0x_D9, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_AF, 0x_F1, 0x_CB, 0x_D9,
	];

	helper(S, BASE, -581_459_872);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0A,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_30, 0x_57, 0x_3E, 0x_AC, 0x_D8, 0x_3E, 0x_3E, 0x_3E, 0x_30, 0x_97, 0x_97, 0x_30, 0x_D8, 0x_6D, 0x_6D,
		0x_AC, 0x_32, 0x_3E, 0x_32, 0x_97, 0x_D8, 0x_6D, 0x_D8, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_D8, 0x_32, 0x_30, 0x_97, 0x_6D, 0x_AC,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_73_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_73_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_A8, 0x_DF, 0x_DF, 0x_04,
		0x_8E, 0x_A8, 0x_A8, 0x_03, 0x_34, 0x_DF, 0x_03, 0x_A8, 0x_F8, 0x_A8, 0x_F8, 0x_03, 0x_DF, 0x_F8, 0x_25,
		0x_A8, 0x_8E, 0x_8E, 0x_8E, 0x_03, 0x_03, 0x_F8, 0x_25, 0x_A8, 0x_A8, 0x_25, 0x_DF, 0x_25, 0x_A8, 0x_8E,
		0x_F8, 0x_F8, 0x_03, 0x_A8, 0x_25, 0x_34, 0x_DF, 0x_DF, 0x_03, 0x_8E, 0x_8E, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_A8, 0x_F8, 0x_DF, 0x_25, 0x_03, 0x_34,
	];

	helper(S, BASE, -73);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_710_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_710_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_09,
		0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0B,
		0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2C, 0x_02, 0x_F5, 0x_F5, 0x_47,
		0x_2C, 0x_EA, 0x_C6, 0x_C6, 0x_01, 0x_2C, 0x_EA, 0x_01, 0x_F5, 0x_F5, 0x_2C, 0x_2C, 0x_C6, 0x_02, 0x_F5,
		0x_C6, 0x_C6, 0x_EE, 0x_01, 0x_02, 0x_EE, 0x_F5, 0x_2C, 0x_EE, 0x_01, 0x_C6, 0x_01, 0x_EA, 0x_C6, 0x_EE,
		0x_EA, 0x_C6, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_EA, 0x_2C, 0x_F5, 0x_C6, 0x_EE, 0x_01,
	];

	helper(S, BASE, -710);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_630_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_630_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_CB, 0x_8B, 0x_8B, 0x_5E, 0x_08, 0x_25, 0x_CA, 0x_EA, 0x_08, 0x_CA, 0x_CA, 0x_08, 0x_08, 0x_91, 0x_5E,
		0x_91, 0x_8B, 0x_CA, 0x_CA, 0x_91, 0x_91, 0x_CB, 0x_91, 0x_91, 0x_08, 0x_91, 0x_91, 0x_08, 0x_5E, 0x_8B,
		0x_EA, 0x_5E, 0x_CB, 0x_5E, 0x_5E, 0x_91, 0x_08, 0x_EA, 0x_08, 0x_5E, 0x_8B, 0x_91, 0x_CB, 0x_5E, 0x_CB,
		0x_CA,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_8B, 0x_CA, 0x_CB, 0x_EA, 0x_5E, 0x_91,
	];

	helper(S, BASE, -7_630);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_55_444_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_55_444_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_09,
		0x_20, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_B8, 0x_E8, 0x_03, 0x_B4, 0x_B8,
		0x_B4, 0x_C3, 0x_E8, 0x_03, 0x_0F, 0x_77, 0x_03, 0x_0F, 0x_E8, 0x_B8, 0x_0F, 0x_E0, 0x_E0, 0x_E0, 0x_E8,
		0x_B4, 0x_03, 0x_B4, 0x_E0, 0x_E0, 0x_0F, 0x_77, 0x_77, 0x_E0, 0x_E0, 0x_B8, 0x_B4, 0x_E8, 0x_B4, 0x_0F,
		0x_E0, 0x_0F, 0x_77, 0x_0F, 0x_E0, 0x_E0, 0x_03, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_77, 0x_E8, 0x_B8, 0x_B4, 0x_E0, 0x_0F,
	];

	helper(S, BASE, -55_444);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_150_127_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_150_127_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_20, 0x_0C, 0x_09,
		0x_09, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0A,
		0x_0C, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_D8, 0x_D8, 0x_8F, 0x_15, 0x_06, 0x_3D, 0x_3D, 0x_8B, 0x_15, 0x_8F, 0x_26, 0x_06, 0x_C3, 0x_06,
		0x_8F, 0x_3D, 0x_D8, 0x_D8, 0x_06, 0x_15, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_D8, 0x_C3, 0x_15, 0x_06, 0x_3D, 0x_8F,
	];

	helper(S, BASE, -150_127);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_5_221_425_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_5_221_425_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_0C, 0x_0B,
		0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0B,
		0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_B1, 0x_5A,
		0x_5A, 0x_6B, 0x_6B, 0x_AD, 0x_6B, 0x_B1, 0x_96, 0x_5A, 0x_B1, 0x_5A, 0x_B1, 0x_6B, 0x_B1, 0x_52, 0x_5A,
		0x_A1, 0x_6B, 0x_6B, 0x_52, 0x_52, 0x_52, 0x_4F, 0x_AD, 0x_5A, 0x_A1, 0x_4F, 0x_A1, 0x_4F, 0x_52, 0x_AD,
		0x_B1, 0x_A1, 0x_52, 0x_5A, 0x_A1, 0x_52, 0x_52, 0x_6B, 0x_5A, 0x_B1, 0x_5A, 0x_5A, 0x_4F, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_A1, 0x_5A, 0x_4F, 0x_6B, 0x_AD, 0x_B1,
	];

	helper(S, BASE, -5_221_425);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_62_902_537_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_62_902_537_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0B,
		0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_BD, 0x_EA, 0x_5C, 0x_82, 0x_6D, 0x_6D, 0x_EA, 0x_82, 0x_BD, 0x_B3, 0x_70, 0x_B3,
		0x_BD, 0x_5C, 0x_EA, 0x_5C, 0x_82, 0x_82, 0x_6D, 0x_6D, 0x_78, 0x_78, 0x_B3, 0x_82, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_BD, 0x_82, 0x_EA, 0x_6D, 0x_B3, 0x_5C,
	];

	helper(S, BASE, -62_902_537);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_332_766_409_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_332_766_409_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_09,
		0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_09, 0x_0B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_79, 0x_79, 0x_79, 0x_D1, 0x_05, 0x_43, 0x_79,
		0x_CF, 0x_43, 0x_79, 0x_43, 0x_78, 0x_DD, 0x_D1, 0x_DD, 0x_05, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_05, 0x_79, 0x_66, 0x_43, 0x_DD, 0x_D1, 0x_CF,
	];

	helper(S, BASE, -332_766_409);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_8_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_8_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_09, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_05, 0x_7E, 0x_F3, 0x_E1, 0x_52, 0x_96, 0x_93, 0x_FB, 0x_F3, 0x_F3, 0x_F3, 0x_C7, 0x_61, 0x_52, 0x_85,
		0x_52, 0x_C7, 0x_61, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_F3, 0x_93, 0x_61, 0x_52, 0x_C7, 0x_FB, 0x_5B, 0x_E1, 0x_05, 0x_96, 0x_85,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_81_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_81_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_6C, 0x_DD, 0x_29, 0x_BA, 0x_C1, 0x_6C, 0x_30, 0x_19, 0x_6E, 0x_BA,
		0x_F8, 0x_6C, 0x_6E, 0x_BA, 0x_1D, 0x_1D, 0x_6E, 0x_19, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_30, 0x_BA, 0x_19, 0x_DD, 0x_F8, 0x_1D, 0x_6C, 0x_C1, 0x_2A, 0x_6E,
	];

	helper(S, BASE, -81);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_788_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_788_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0B, 0x_20, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_51, 0x_CE, 0x_97, 0x_60, 0x_51, 0x_51, 0x_6B, 0x_F4, 0x_B0, 0x_3D, 0x_B0,
		0x_B6, 0x_51, 0x_6B, 0x_6B, 0x_7F, 0x_B6, 0x_7F, 0x_7F, 0x_B6, 0x_B6, 0x_9C, 0x_7F, 0x_97,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_B0, 0x_3D, 0x_F4, 0x_6B, 0x_CE, 0x_51, 0x_97, 0x_7F, 0x_9C, 0x_E0,
	];

	helper(S, BASE, -788);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_544_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_544_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_09,
		0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0A,
		0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_11,
		0x_2E, 0x_46, 0x_57, 0x_A7, 0x_46, 0x_D8,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_D8, 0x_99, 0x_46, 0x_9A, 0x_11, 0x_40, 0x_2E, 0x_18, 0x_57, 0x_AE,
	];

	helper(S, BASE, -7_544);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_22_098_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_22_098_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_0D,
		0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_79, 0x_A7, 0x_F9, 0x_F9, 0x_4A, 0x_A0,
		0x_71, 0x_79, 0x_F9, 0x_DF, 0x_DF, 0x_F9, 0x_71, 0x_05, 0x_05, 0x_3C, 0x_71, 0x_71, 0x_71, 0x_DF, 0x_FE,
		0x_3C,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_79, 0x_BD, 0x_05, 0x_71, 0x_A7, 0x_F9, 0x_03, 0x_DF, 0x_FE, 0x_4A,
	];

	helper(S, BASE, -22_098);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_900_985_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_900_985_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_09,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_D1, 0x_72, 0x_D1, 0x_AC, 0x_58, 0x_7D, 0x_93, 0x_58, 0x_30, 0x_AC, 0x_D1, 0x_72, 0x_AC, 0x_F9, 0x_7A,
		0x_41, 0x_F9, 0x_30, 0x_28, 0x_D1, 0x_28,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_58, 0x_28, 0x_41, 0x_30, 0x_D1, 0x_72, 0x_F9, 0x_7D, 0x_7A, 0x_AC,
	];

	helper(S, BASE, -900_985);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_903_587_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_903_587_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_9F, 0x_BD, 0x_02, 0x_6E, 0x_02, 0x_6E, 0x_3B, 0x_A4, 0x_29, 0x_6E, 0x_52, 0x_AB, 0x_93, 0x_93, 0x_4F,
		0x_44, 0x_02, 0x_AB, 0x_AB, 0x_6E, 0x_93, 0x_4F, 0x_02, 0x_02, 0x_BD, 0x_AB, 0x_29, 0x_52, 0x_AB, 0x_AB,
		0x_4F, 0x_29, 0x_52, 0x_29, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_93, 0x_AB, 0x_44, 0x_9F, 0x_BD, 0x_52, 0x_29, 0x_4F, 0x_6E, 0x_3B,
	];

	helper(S, BASE, -7_903_587);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_52_844_573_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_52_844_573_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0B,
		0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_DA,
		0x_19, 0x_AA, 0x_B8, 0x_5B, 0x_F3, 0x_0F, 0x_B8, 0x_63, 0x_4B, 0x_DA, 0x_92, 0x_36, 0x_92, 0x_0F, 0x_4B,
		0x_5B, 0x_AA, 0x_0F, 0x_F3, 0x_0F, 0x_F3, 0x_B8, 0x_F3, 0x_DA, 0x_B8, 0x_F3, 0x_DA, 0x_5B, 0x_5B, 0x_4B,
		0x_DA, 0x_0F, 0x_0F,
	];
	const BASE: &[u8] = &[
		0x_0F, 0x_B8, 0x_DA, 0x_5B, 0x_92, 0x_36, 0x_E3, 0x_19, 0x_4B, 0x_AA, 0x_F3,
	];

	helper(S, BASE, -52_844_573);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_448_451_668_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_448_451_668_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_09,
		0x_20, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_11, 0x_C2, 0x_B1, 0x_C2, 0x_94, 0x_7C, 0x_06, 0x_C2, 0x_94, 0x_80, 0x_EC, 0x_55, 0x_11,
		0x_42, 0x_9C, 0x_EC, 0x_06, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_B1, 0x_C2, 0x_11, 0x_EC, 0x_06, 0x_94, 0x_9C, 0x_5F, 0x_42, 0x_7C, 0x_55,
	];

	helper(S, BASE, -448_451_668);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_1D, 0x_CF, 0x_FC, 0x_EA, 0x_E6, 0x_EA, 0x_4B, 0x_E7, 0x_4B, 0x_AA, 0x_5E, 0x_5E, 0x_74, 0x_D3,
		0x_FC, 0x_74, 0x_E6, 0x_1D, 0x_1D, 0x_D3, 0x_5E, 0x_FC, 0x_D3, 0x_74, 0x_C7, 0x_D3, 0x_C7, 0x_51, 0x_AA,
		0x_4B, 0x_4B, 0x_4B, 0x_A0, 0x_4B, 0x_4B, 0x_5E, 0x_AA, 0x_5E, 0x_E7, 0x_4B,
	];
	const BASE: &[u8] = &[
		0x_EA, 0x_E6, 0x_E7, 0x_1D, 0x_51, 0x_5E, 0x_FC, 0x_AA, 0x_D3, 0x_C7, 0x_A0, 0x_74, 0x_4B,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_92_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_92_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_F2,
		0x_85, 0x_A3, 0x_A9, 0x_85, 0x_BC, 0x_A9, 0x_62, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_85, 0x_29, 0x_BC, 0x_46, 0x_AA, 0x_A9, 0x_F2, 0x_6B, 0x_B0, 0x_73, 0x_62, 0x_E8,
	];

	helper(S, BASE, -92);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_217_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_217_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0D,
		0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_08, 0x_DA, 0x_77, 0x_3C, 0x_08, 0x_DA, 0x_56, 0x_DA, 0x_B3, 0x_08, 0x_49, 0x_56,
		0x_A3, 0x_11, 0x_06, 0x_42, 0x_08, 0x_DF, 0x_DF,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_08, 0x_6D, 0x_DA, 0x_42, 0x_56, 0x_B3, 0x_A3, 0x_49, 0x_77, 0x_69, 0x_DF, 0x_06,
	];

	helper(S, BASE, -217);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_4_230_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_4_230_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_20, 0x_20, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_DD, 0x_AA, 0x_44, 0x_B2, 0x_6A, 0x_B2, 0x_DD, 0x_25, 0x_B2,
		0x_DB, 0x_EE, 0x_DB, 0x_25, 0x_25, 0x_25, 0x_AA, 0x_DB, 0x_18, 0x_D9, 0x_DB, 0x_AA, 0x_44, 0x_EE, 0x_DB,
		0x_25, 0x_C9, 0x_AA, 0x_BC, 0x_DD, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_DD, 0x_D9, 0x_BC, 0x_DB, 0x_B2, 0x_25, 0x_C9, 0x_30, 0x_9A, 0x_18, 0x_EE, 0x_AA,
	];

	helper(S, BASE, -4_230);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_21_080_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_21_080_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_0D,
		0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_09,
		0x_09, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_E8, 0x_0E, 0x_E8, 0x_0E, 0x_A6, 0x_AC, 0x_9F, 0x_C0, 0x_66, 0x_10, 0x_C0, 0x_EF, 0x_9F, 0x_57, 0x_9F,
		0x_EF, 0x_57, 0x_57, 0x_C0, 0x_57, 0x_E0, 0x_10, 0x_3D, 0x_57, 0x_E0, 0x_A4, 0x_E8, 0x_08, 0x_57, 0x_C0,
		0x_A4, 0x_10, 0x_A4, 0x_A4, 0x_08, 0x_A4, 0x_08, 0x_E0, 0x_E0, 0x_08, 0x_08,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_10, 0x_08, 0x_EF, 0x_C0, 0x_AC, 0x_66, 0x_0E, 0x_57, 0x_E8, 0x_9F, 0x_3D, 0x_A4,
	];

	helper(S, BASE, -21_080);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_878_821_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_878_821_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_8F, 0x_86, 0x_90, 0x_88,
		0x_D8, 0x_38, 0x_EA, 0x_5A, 0x_88, 0x_90, 0x_17, 0x_88, 0x_03, 0x_90, 0x_88, 0x_D8, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_D8, 0x_8F, 0x_5A, 0x_86, 0x_41, 0x_1D, 0x_17, 0x_38, 0x_CF, 0x_90, 0x_4A, 0x_03,
	];

	helper(S, BASE, -878_821);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_1_487_936_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_1_487_936_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_0D,
		0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_F3, 0x_8E, 0x_B2, 0x_87, 0x_F3, 0x_25, 0x_A1, 0x_87, 0x_87, 0x_EF, 0x_EF, 0x_E9, 0x_72, 0x_87, 0x_F3,
		0x_B2, 0x_06, 0x_DA, 0x_25, 0x_8E, 0x_DA, 0x_E9, 0x_DA, 0x_F3, 0x_EF, 0x_DA, 0x_87, 0x_DA, 0x_DA, 0x_DA,
		0x_EF, 0x_25, 0x_F3, 0x_25, 0x_B2, 0x_06, 0x_06, 0x_F3, 0x_72, 0x_91, 0x_87, 0x_B2, 0x_EF, 0x_EF,
	];
	const BASE: &[u8] = &[
		0x_8E, 0x_B2, 0x_62, 0x_87, 0x_F3, 0x_3F, 0x_72, 0x_06, 0x_25, 0x_91, 0x_E9, 0x_EF, 0x_DA,
	];

	helper(S, BASE, -1_487_936);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_41_361_914_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_41_361_914_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_20,
		0x_0D, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_20, 0x_0A,
		0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_A5, 0x_60, 0x_0E,
		0x_37, 0x_60, 0x_B4, 0x_1B, 0x_A7, 0x_A5, 0x_C6, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_69, 0x_37, 0x_9F, 0x_4A, 0x_0E, 0x_3D, 0x_60, 0x_A5, 0x_1B, 0x_C6, 0x_22, 0x_12,
	];

	helper(S, BASE, -41_361_914);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_789_185_040_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_789_185_040_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_6F, 0x_21, 0x_69, 0x_69, 0x_21, 0x_A2, 0x_6F, 0x_21, 0x_F8, 0x_6F, 0x_6F, 0x_3F, 0x_DF,
		0x_39, 0x_DF, 0x_69, 0x_6F, 0x_5B, 0x_3F,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_39, 0x_DF, 0x_A2, 0x_3F, 0x_3B, 0x_69, 0x_21, 0x_5B, 0x_82, 0x_F4, 0x_4F, 0x_6F,
	];

	helper(S, BASE, -789_185_040);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_1_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_1_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_20,
		0x_0A, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_51, 0x_08, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_51, 0x_99, 0x_E8, 0x_9E, 0x_4F, 0x_77, 0x_7A, 0x_D6, 0x_8D, 0x_29, 0x_D1, 0x_10, 0x_A0, 0x_DC,
		0x_2E, 0x_3D, 0x_14, 0x_AF,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_82_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_82_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_C4, 0x_BE, 0x_30, 0x_E2, 0x_A6, 0x_44, 0x_07, 0x_A6,
		0x_02, 0x_C4, 0x_19, 0x_BE, 0x_BE, 0x_A1, 0x_C4, 0x_A1, 0x_3D, 0x_02, 0x_B6, 0x_62, 0x_12, 0x_A6, 0x_19,
		0x_3D, 0x_12, 0x_9F, 0x_07, 0x_BE, 0x_86, 0x_8D, 0x_19, 0x_A1, 0x_78, 0x_A6, 0x_86, 0x_02, 0x_B6, 0x_BE,
		0x_8D, 0x_B6, 0x_A1, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_3D, 0x_12, 0x_55, 0x_C4, 0x_A1, 0x_BE, 0x_62, 0x_07, 0x_9F, 0x_B6, 0x_45, 0x_A6, 0x_19, 0x_78,
		0x_E2, 0x_02, 0x_86, 0x_44,
	];

	helper(S, BASE, -82);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_531_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_531_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_7F, 0x_D2, 0x_76, 0x_57, 0x_3E, 0x_3E, 0x_1B, 0x_6F, 0x_14, 0x_7C, 0x_B6,
		0x_6F, 0x_76, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_7F, 0x_33, 0x_7C, 0x_6F, 0x_E8, 0x_03, 0x_5F, 0x_D2, 0x_B6, 0x_1B, 0x_3E, 0x_45, 0x_41, 0x_DF,
		0x_14, 0x_B4, 0x_74, 0x_76,
	];

	helper(S, BASE, -531);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_618_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_618_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0A,
		0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_C9,
		0x_5F, 0x_7B, 0x_FD, 0x_45, 0x_1D, 0x_05, 0x_4B, 0x_87, 0x_45, 0x_52, 0x_EB, 0x_45, 0x_C2, 0x_87, 0x_5F,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_13, 0x_82, 0x_4B, 0x_01, 0x_DE, 0x_71, 0x_52, 0x_7B, 0x_EE, 0x_C9, 0x_05, 0x_C2, 0x_1D, 0x_EB,
		0x_83, 0x_8A, 0x_45, 0x_87,
	];

	helper(S, BASE, -3_618);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_68_861_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_68_861_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_C4,
		0x_ED, 0x_B4, 0x_46, 0x_3E, 0x_B4, 0x_81, 0x_46, 0x_ED, 0x_DF, 0x_ED, 0x_81, 0x_39, 0x_2F, 0x_F3, 0x_E4,
		0x_E5, 0x_2F, 0x_39, 0x_81, 0x_DF, 0x_DF, 0x_81, 0x_61, 0x_6D, 0x_7F, 0x_B4, 0x_46, 0x_6D, 0x_7F, 0x_6F,
		0x_22, 0x_92, 0x_6D, 0x_7F, 0x_61, 0x_DD, 0x_B4, 0x_2F, 0x_ED, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_ED, 0x_6F, 0x_F3, 0x_E4, 0x_61, 0x_46, 0x_92, 0x_7F, 0x_E5, 0x_39, 0x_C4, 0x_6D, 0x_22, 0x_DF, 0x_B4,
		0x_2F, 0x_81, 0x_50, 0x_DD,
	];

	helper(S, BASE, -68_861);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_969_993_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_969_993_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_EA, 0x_8F,
		0x_EA, 0x_8E, 0x_BE, 0x_92, 0x_75, 0x_F1, 0x_75, 0x_B1, 0x_BE, 0x_29, 0x_EA, 0x_5E, 0x_8F, 0x_8D, 0x_03,
		0x_8D, 0x_5E, 0x_05, 0x_4F, 0x_A0, 0x_F1, 0x_8E, 0x_88, 0x_BE, 0x_88, 0x_FE, 0x_1A, 0x_4F, 0x_05, 0x_FE,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_C9, 0x_29, 0x_75, 0x_03, 0x_BE, 0x_05, 0x_EA, 0x_8F, 0x_8D, 0x_5E, 0x_FE, 0x_1A, 0x_A0, 0x_F1,
		0x_B1, 0x_79, 0x_88, 0x_8E,
	];

	helper(S, BASE, -969_993);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_8_248_054_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_8_248_054_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_09,
		0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_9F, 0x_01, 0x_6A, 0x_1B, 0x_A1, 0x_24, 0x_14, 0x_8C, 0x_50, 0x_2F, 0x_F2, 0x_94,
		0x_D5, 0x_24, 0x_94, 0x_2F, 0x_1B, 0x_24, 0x_D5, 0x_F2, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_F7, 0x_4E, 0x_24, 0x_9F, 0x_9C, 0x_6A, 0x_01, 0x_A5, 0x_38, 0x_1B, 0x_B5, 0x_2E, 0x_F2, 0x_94, 0x_D5,
		0x_A1, 0x_2F, 0x_50, 0x_8C,
	];

	helper(S, BASE, -8_248_054);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_35_375_141_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_35_375_141_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_FA, 0x_11, 0x_79, 0x_9E,
		0x_BB, 0x_70, 0x_83, 0x_99, 0x_EB, 0x_EB, 0x_FA, 0x_BB, 0x_11, 0x_70, 0x_FA, 0x_9E, 0x_11, 0x_70, 0x_79,
		0x_BB, 0x_6D, 0x_C2, 0x_5C, 0x_5C, 0x_AE, 0x_DA, 0x_E4, 0x_EE, 0x_50, 0x_EB, 0x_D2, 0x_99, 0x_FA, 0x_11,
		0x_99, 0x_EE, 0x_E4, 0x_EE, 0x_50, 0x_9E, 0x_C2, 0x_EB, 0x_EE, 0x_70, 0x_BB,
	];
	const BASE: &[u8] = &[
		0x_AE, 0x_BB, 0x_DA, 0x_E4, 0x_50, 0x_11, 0x_14, 0x_D2, 0x_79, 0x_9E, 0x_70, 0x_6D, 0x_5C, 0x_EE, 0x_FA,
		0x_C2, 0x_DC, 0x_99, 0x_EB,
	];

	helper(S, BASE, -35_375_141);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_914_773_369_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_914_773_369_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_9A, 0x_54, 0x_7E, 0x_7E, 0x_B4, 0x_E4, 0x_BB, 0x_32, 0x_ED, 0x_91, 0x_BB, 0x_23, 0x_B9,
		0x_79, 0x_0E, 0x_61, 0x_23, 0x_F8, 0x_BB, 0x_27, 0x_B9, 0x_9A, 0x_BB, 0x_4D, 0x_4D, 0x_54, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_9A, 0x_A1, 0x_0E, 0x_BB, 0x_27, 0x_E4, 0x_B4, 0x_7E, 0x_F8, 0x_79, 0x_4D, 0x_1F, 0x_23, 0x_61,
		0x_32, 0x_92, 0x_91, 0x_B9,
	];

	helper(S, BASE, -914_773_369);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_1_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_1_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_BA, 0x_C1, 0x_61, 0x_D0, 0x_5A, 0x_DC, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_BA, 0x_CD, 0x_6F, 0x_4B, 0x_E4, 0x_D0, 0x_AA, 0x_80, 0x_71, 0x_5A, 0x_A8, 0x_07, 0x_61, 0x_7C,
		0x_AB, 0x_36, 0x_D9, 0x_C3, 0x_38, 0x_88, 0x_B2, 0x_8E, 0x_A1, 0x_27, 0x_42, 0x_FC, 0x_A0, 0x_56, 0x_DB,
		0x_10, 0x_13, 0x_6D, 0x_46, 0x_31, 0x_4C, 0x_F8, 0x_DC, 0x_67, 0x_4E, 0x_04, 0x_79,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_48_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_48_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0C,
		0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_0B,
		0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_C5, 0x_D1, 0x_76, 0x_D2, 0x_6D, 0x_D1, 0x_BD, 0x_E1, 0x_32, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_C5, 0x_94, 0x_7E, 0x_03, 0x_79, 0x_D1, 0x_64, 0x_11, 0x_01, 0x_3F, 0x_E7, 0x_6D, 0x_E4, 0x_C3,
		0x_02, 0x_32, 0x_46, 0x_C4, 0x_74, 0x_CC, 0x_E1, 0x_7C, 0x_C8, 0x_31, 0x_1C, 0x_BE, 0x_63, 0x_99, 0x_66,
		0x_8D, 0x_A7, 0x_61, 0x_1A, 0x_E8, 0x_AE, 0x_9D, 0x_BD, 0x_65, 0x_F3, 0x_58, 0x_D2,
	];

	helper(S, BASE, -48);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_650_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_650_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_20,
		0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_E6, 0x_32, 0x_82, 0x_A0, 0x_B4, 0x_06, 0x_DA, 0x_44, 0x_27, 0x_01, 0x_D5, 0x_C7, 0x_32, 0x_34,
		0x_B4, 0x_79, 0x_D5, 0x_1F, 0x_B4, 0x_C3, 0x_B4, 0x_DA, 0x_49, 0x_46, 0x_01, 0x_DE, 0x_C7, 0x_A0, 0x_5A,
		0x_86, 0x_B4, 0x_E6, 0x_86, 0x_86, 0x_81,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_81, 0x_C3, 0x_5A, 0x_C0, 0x_13, 0x_9C, 0x_B4, 0x_D9, 0x_34, 0x_A0, 0x_07, 0x_D5, 0x_49, 0x_DA,
		0x_E6, 0x_86, 0x_C8, 0x_44, 0x_FB, 0x_32, 0x_C2, 0x_46, 0x_E7, 0x_FE, 0x_79, 0x_01, 0x_DB, 0x_27, 0x_E4,
		0x_06, 0x_BF, 0x_5D, 0x_D4, 0x_DE, 0x_9B, 0x_41, 0x_6F, 0x_1F, 0x_C7, 0x_16, 0x_AA,
	];

	helper(S, BASE, -650);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_4_701_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_4_701_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_F5, 0x_5C, 0x_3D, 0x_C0, 0x_B0, 0x_9C, 0x_19, 0x_C2, 0x_A0, 0x_FD,
		0x_7A, 0x_59, 0x_33, 0x_A0, 0x_E0, 0x_5B, 0x_13, 0x_3D, 0x_36, 0x_A5, 0x_A8, 0x_FD, 0x_13, 0x_78, 0x_FD,
		0x_B0, 0x_59, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_97, 0x_F5, 0x_81, 0x_A0, 0x_55, 0x_E0, 0x_96, 0x_F2, 0x_D4, 0x_5B, 0x_7A, 0x_CD, 0x_36, 0x_B8,
		0x_9C, 0x_BD, 0x_A8, 0x_5E, 0x_A5, 0x_B0, 0x_17, 0x_59, 0x_61, 0x_6C, 0x_18, 0x_AD, 0x_5C, 0x_78, 0x_A9,
		0x_C6, 0x_90, 0x_65, 0x_13, 0x_19, 0x_47, 0x_33, 0x_FD, 0x_C2, 0x_3D, 0x_2E, 0x_E7,
	];

	helper(S, BASE, -4_701);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_81_417_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_81_417_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_3F, 0x_25, 0x_CF, 0x_B9,
		0x_1D, 0x_65, 0x_65, 0x_71, 0x_5F, 0x_31, 0x_65, 0x_5F, 0x_A2, 0x_D7, 0x_DA, 0x_71, 0x_25, 0x_5D, 0x_FA,
		0x_74, 0x_92, 0x_31, 0x_FA, 0x_B9, 0x_B5, 0x_EC, 0x_63, 0x_39, 0x_D7, 0x_EC, 0x_04, 0x_71, 0x_25, 0x_B6,
		0x_A2, 0x_CF, 0x_FA, 0x_CB, 0x_B5, 0x_B6, 0x_92, 0x_F3, 0x_EC, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_71, 0x_3F, 0x_DB, 0x_F1, 0x_25, 0x_B5, 0x_CF, 0x_17, 0x_74, 0x_A2, 0x_EC, 0x_B6, 0x_5D, 0x_79, 0x_D7,
		0x_F3, 0x_31, 0x_39, 0x_C0, 0x_47, 0x_5F, 0x_B9, 0x_63, 0x_28, 0x_2F, 0x_6C, 0x_D9, 0x_CB, 0x_29, 0x_04,
		0x_3A, 0x_FA, 0x_32, 0x_16, 0x_65, 0x_FF, 0x_DA, 0x_85, 0x_F7, 0x_92, 0x_36, 0x_3E,
	];

	helper(S, BASE, -81_417);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_739_499_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_739_499_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_09,
		0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0B,
		0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_6B,
		0x_0F, 0x_6B, 0x_42, 0x_63, 0x_E4, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_F6, 0x_8C, 0x_AC, 0x_CB, 0x_42, 0x_1E, 0x_B7, 0x_6E, 0x_6B, 0x_46, 0x_5F, 0x_FC, 0x_4D, 0x_AD,
		0x_FB, 0x_E4, 0x_23, 0x_B4, 0x_25, 0x_66, 0x_F4, 0x_A4, 0x_DB, 0x_5C, 0x_F9, 0x_1C, 0x_39, 0x_E1, 0x_D8,
		0x_13, 0x_E5, 0x_30, 0x_FF, 0x_E3, 0x_AF, 0x_FD, 0x_E8, 0x_C2, 0x_D9, 0x_4A, 0x_0F,
	];

	helper(S, BASE, -739_499);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_8_574_891_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_8_574_891_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_20,
		0x_0C, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_43, 0x_AF, 0x_AF, 0x_43, 0x_D3, 0x_17, 0x_58, 0x_A9, 0x_76, 0x_D3, 0x_51,
		0x_BE, 0x_65, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_CB, 0x_8C, 0x_43, 0x_D3, 0x_11, 0x_DC, 0x_02, 0x_D4, 0x_A4, 0x_A1, 0x_48, 0x_B4, 0x_D0, 0x_76, 0x_4B,
		0x_86, 0x_E0, 0x_CF, 0x_25, 0x_C4, 0x_51, 0x_65, 0x_10, 0x_75, 0x_CE, 0x_74, 0x_14, 0x_21, 0x_FF, 0x_AC,
		0x_D9, 0x_AF, 0x_30, 0x_58, 0x_3B, 0x_53, 0x_45, 0x_35, 0x_F2, 0x_A9, 0x_BE, 0x_0E,
	];

	helper(S, BASE, -8_574_891);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_81_761_295_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_81_761_295_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_20,
		0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0B,
		0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_14, 0x_03, 0x_91, 0x_36, 0x_CF, 0x_2B, 0x_33, 0x_34, 0x_52, 0x_8B, 0x_DF,
		0x_03, 0x_66, 0x_CF, 0x_03, 0x_54, 0x_97, 0x_DF, 0x_62, 0x_66, 0x_17, 0x_5F, 0x_D7, 0x_AD, 0x_5F, 0x_A8,
		0x_66, 0x_94, 0x_4F, 0x_62, 0x_C8, 0x_15,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_F7, 0x_9E, 0x_34, 0x_94, 0x_AD, 0x_E2, 0x_F8, 0x_CA, 0x_66, 0x_A8, 0x_03, 0x_59, 0x_E1, 0x_AA,
		0x_D7, 0x_17, 0x_E7, 0x_33, 0x_40, 0x_15, 0x_CF, 0x_1F, 0x_91, 0x_C8, 0x_30, 0x_14, 0x_3F, 0x_79, 0x_97,
		0x_62, 0x_4F, 0x_EE, 0x_CB, 0x_52, 0x_38, 0x_54, 0x_8B, 0x_5F, 0x_36, 0x_F2, 0x_0F,
	];

	helper(S, BASE, -81_761_295);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_157_360_559_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_157_360_559_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_20, 0x_0D,
		0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_B2, 0x_AD, 0x_D3, 0x_D6, 0x_CD, 0x_F2, 0x_76, 0x_5C, 0x_B7, 0x_8F, 0x_F1, 0x_BC, 0x_8F,
		0x_B2, 0x_40, 0x_B7, 0x_D3, 0x_CA, 0x_97, 0x_B7, 0x_8F, 0x_BC, 0x_12, 0x_1E, 0x_D2, 0x_96, 0x_0E, 0x_93,
		0x_AD, 0x_E2, 0x_24, 0x_F1, 0x_8F, 0x_40, 0x_68, 0x_F1, 0x_9D, 0x_BC, 0x_D9, 0x_96, 0x_BA, 0x_B7, 0x_1D,
		0x_24,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_B2, 0x_93, 0x_24, 0x_D9, 0x_F6, 0x_07, 0x_6A, 0x_AD, 0x_6B, 0x_0E, 0x_6F, 0x_9F, 0x_5C, 0x_BC,
		0x_27, 0x_AF, 0x_CA, 0x_B7, 0x_D0, 0x_8F, 0x_BA, 0x_40, 0x_D3, 0x_D2, 0x_F1, 0x_97, 0x_CD, 0x_1D, 0x_47,
		0x_AA, 0x_E2, 0x_1E, 0x_96, 0x_9D, 0x_EE, 0x_68, 0x_A5, 0x_12, 0x_E8, 0x_D6, 0x_F2,
	];

	helper(S, BASE, -157_360_559);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_9_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_9_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_0B,
		0x_0B, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0D,
		0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_CE, 0x_FD, 0x_8F,
		0x_67, 0x_C5, 0x_98, 0x_D8, 0x_A8, 0x_54, 0x_D9, 0x_6A, 0x_95, 0x_6D, 0x_D8, 0x_89, 0x_23, 0x_D8, 0x_1D,
		0x_D8, 0x_D4, 0x_03, 0x_1F, 0x_C2, 0x_5C, 0x_03, 0x_AD, 0x_D8, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_92, 0x_54, 0x_A3, 0x_D8, 0x_F2, 0x_9C, 0x_7E, 0x_23, 0x_25, 0x_CE, 0x_11, 0x_6D, 0x_3B, 0x_55, 0x_67,
		0x_0F, 0x_88, 0x_B3, 0x_BE, 0x_10, 0x_34, 0x_E3, 0x_EA, 0x_B9, 0x_75, 0x_3D, 0x_C5, 0x_99, 0x_2E, 0x_1B,
		0x_E7, 0x_08, 0x_12, 0x_D5, 0x_18, 0x_79, 0x_A8, 0x_02, 0x_5A, 0x_94, 0x_70, 0x_0E, 0x_56, 0x_D4, 0x_C2,
		0x_5C, 0x_8F, 0x_95, 0x_ED, 0x_7A, 0x_49, 0x_40, 0x_98, 0x_3A, 0x_47, 0x_BB, 0x_03, 0x_1D, 0x_DD, 0x_B1,
		0x_46, 0x_1F, 0x_FF, 0x_BC, 0x_89, 0x_AD, 0x_DF, 0x_B4, 0x_51, 0x_35, 0x_6A, 0x_BA, 0x_D9,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_51_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_51_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_09,
		0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_B7, 0x_40, 0x_51, 0x_F7, 0x_5D, 0x_77, 0x_75, 0x_4E, 0x_57,
		0x_B8, 0x_75, 0x_59, 0x_D4, 0x_1E, 0x_CE, 0x_13, 0x_7B, 0x_75, 0x_D0, 0x_59, 0x_3C, 0x_79, 0x_92, 0x_75,
		0x_77, 0x_E9, 0x_E5, 0x_77, 0x_D3, 0x_77,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_92, 0x_95, 0x_7D, 0x_D1, 0x_1B, 0x_77, 0x_9A, 0x_2E, 0x_84, 0x_AD, 0x_34, 0x_FC, 0x_57, 0x_D0,
		0x_45, 0x_CE, 0x_68, 0x_62, 0x_51, 0x_4C, 0x_F5, 0x_54, 0x_5B, 0x_76, 0x_C3, 0x_64, 0x_E9, 0x_D8, 0x_4F,
		0x_75, 0x_19, 0x_82, 0x_59, 0x_9E, 0x_F2, 0x_6E, 0x_F4, 0x_E6, 0x_04, 0x_83, 0x_B8, 0x_5E, 0x_BF, 0x_4E,
		0x_C4, 0x_86, 0x_4D, 0x_22, 0x_33, 0x_93, 0x_B7, 0x_79, 0x_13, 0x_6B, 0x_B9, 0x_3C, 0x_E8, 0x_BB, 0x_E5,
		0x_7B, 0x_70, 0x_CC, 0x_DE, 0x_88, 0x_D4, 0x_5D, 0x_F7, 0x_D3, 0x_1C, 0x_DB, 0x_14, 0x_D9,
	];

	helper(S, BASE, -51);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_812_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_812_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_5C, 0x_A6, 0x_3F, 0x_96, 0x_D5, 0x_FD, 0x_51, 0x_3E, 0x_19, 0x_6C, 0x_54,
		0x_66, 0x_69, 0x_F2, 0x_AD, 0x_69, 0x_41, 0x_3E, 0x_AD, 0x_74, 0x_5E, 0x_FA, 0x_EE, 0x_AD, 0x_26, 0x_3D,
		0x_6E, 0x_28, 0x_F9, 0x_69, 0x_82, 0x_D1, 0x_EE, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_BB, 0x_D9, 0x_F7, 0x_D3, 0x_3D, 0x_EE, 0x_87, 0x_A0, 0x_E4, 0x_A6, 0x_7B, 0x_5C, 0x_AD, 0x_F2, 0x_54,
		0x_26, 0x_45, 0x_22, 0x_96, 0x_5E, 0x_E1, 0x_66, 0x_11, 0x_65, 0x_A8, 0x_E3, 0x_B7, 0x_D4, 0x_CC, 0x_81,
		0x_C9, 0x_34, 0x_82, 0x_28, 0x_1A, 0x_6C, 0x_3E, 0x_69, 0x_08, 0x_7F, 0x_35, 0x_83, 0x_51, 0x_19, 0x_DF,
		0x_FA, 0x_F9, 0x_C7, 0x_1C, 0x_74, 0x_4B, 0x_85, 0x_F6, 0x_4D, 0x_6E, 0x_BD, 0x_D1, 0x_9D, 0x_38, 0x_CB,
		0x_40, 0x_FD, 0x_A2, 0x_12, 0x_1D, 0x_5B, 0x_D5, 0x_BE, 0x_6A, 0x_41, 0x_FE, 0x_8F, 0x_91,
	];

	helper(S, BASE, -812);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_445_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_445_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_0A,
		0x_09, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_07, 0x_45, 0x_42, 0x_EB, 0x_31, 0x_0E, 0x_31, 0x_91, 0x_A6, 0x_7D, 0x_E2,
		0x_CA, 0x_B5, 0x_04, 0x_7E, 0x_5D, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_FD, 0x_EA, 0x_30, 0x_60, 0x_68, 0x_72, 0x_06, 0x_16, 0x_C2, 0x_55, 0x_76, 0x_CA, 0x_7C, 0x_45,
		0x_18, 0x_5B, 0x_B5, 0x_7F, 0x_5D, 0x_21, 0x_75, 0x_04, 0x_F4, 0x_58, 0x_51, 0x_E0, 0x_23, 0x_80, 0x_F3,
		0x_91, 0x_9B, 0x_83, 0x_7D, 0x_C3, 0x_4B, 0x_A2, 0x_31, 0x_0E, 0x_98, 0x_F0, 0x_A6, 0x_DD, 0x_26, 0x_8E,
		0x_59, 0x_7E, 0x_07, 0x_F6, 0x_39, 0x_94, 0x_C6, 0x_32, 0x_E2, 0x_78, 0x_DA, 0x_43, 0x_B8, 0x_53, 0x_6A,
		0x_FB, 0x_CF, 0x_8A, 0x_97, 0x_A7, 0x_F2, 0x_93, 0x_EB, 0x_35, 0x_84, 0x_CD, 0x_AF, 0x_61,
	];

	helper(S, BASE, -3_445);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_68_501_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_68_501_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_20,
		0x_20, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_75, 0x_98, 0x_8A, 0x_48, 0x_26, 0x_E5, 0x_B8, 0x_78, 0x_29, 0x_16, 0x_9C, 0x_89, 0x_33,
		0x_84, 0x_7D, 0x_29,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_71, 0x_26, 0x_86, 0x_61, 0x_3B, 0x_7D, 0x_14, 0x_F1, 0x_EA, 0x_58, 0x_89, 0x_75, 0x_62, 0x_5D,
		0x_1A, 0x_D1, 0x_B2, 0x_74, 0x_6F, 0x_88, 0x_44, 0x_37, 0x_7C, 0x_81, 0x_E5, 0x_F5, 0x_8A, 0x_29, 0x_92,
		0x_13, 0x_A9, 0x_D8, 0x_D4, 0x_B1, 0x_B5, 0x_A4, 0x_79, 0x_3D, 0x_4E, 0x_B8, 0x_82, 0x_C2, 0x_69, 0x_AA,
		0x_E2, 0x_CD, 0x_9C, 0x_D0, 0x_34, 0x_42, 0x_94, 0x_33, 0x_B4, 0x_E0, 0x_72, 0x_8D, 0x_2C, 0x_52, 0x_E1,
		0x_78, 0x_32, 0x_98, 0x_24, 0x_5A, 0x_16, 0x_07, 0x_40, 0x_D2, 0x_F6, 0x_84, 0x_6C, 0x_AF,
	];

	helper(S, BASE, -68_501);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_552_034_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_552_034_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0C,
		0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_B0, 0x_5B, 0x_1C, 0x_50, 0x_E7, 0x_10, 0x_C8, 0x_A5, 0x_AF, 0x_50, 0x_D5, 0x_9C,
		0x_91, 0x_29, 0x_38, 0x_AF, 0x_2A, 0x_26, 0x_7B, 0x_74, 0x_CE, 0x_C1, 0x_B9, 0x_F7, 0x_81, 0x_72, 0x_D1,
		0x_68, 0x_A5, 0x_97, 0x_C6, 0x_37, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_B0, 0x_74, 0x_D1, 0x_28, 0x_24, 0x_1D, 0x_D5, 0x_50, 0x_81, 0x_42, 0x_B9, 0x_1F, 0x_C1, 0x_03,
		0x_B7, 0x_5C, 0x_B5, 0x_B8, 0x_9C, 0x_39, 0x_E2, 0x_BA, 0x_6D, 0x_70, 0x_11, 0x_CE, 0x_04, 0x_A5, 0x_B2,
		0x_5B, 0x_26, 0x_08, 0x_38, 0x_F7, 0x_58, 0x_72, 0x_14, 0x_43, 0x_60, 0x_7F, 0x_68, 0x_78, 0x_1C, 0x_4E,
		0x_05, 0x_7B, 0x_37, 0x_18, 0x_10, 0x_3B, 0x_29, 0x_AF, 0x_E4, 0x_AD, 0x_07, 0x_2A, 0x_DC, 0x_EE, 0x_A9,
		0x_A6, 0x_C6, 0x_1B, 0x_91, 0x_75, 0x_C8, 0x_97, 0x_A3, 0x_15, 0x_BD, 0x_1A, 0x_A7, 0x_45,
	];

	helper(S, BASE, -552_034);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_7_073_816_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_7_073_816_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_09,
		0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_09, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_3D, 0x_E8, 0x_4F,
		0x_99, 0x_1A, 0x_AF, 0x_66, 0x_74, 0x_2E, 0x_9A, 0x_C5, 0x_DD, 0x_66, 0x_3D, 0x_BC, 0x_99, 0x_F2, 0x_AB,
		0x_92, 0x_C3, 0x_43, 0x_99, 0x_8B, 0x_1E, 0x_10, 0x_3F, 0x_BC, 0x_E2, 0x_9B, 0x_F9, 0x_3B, 0x_7B, 0x_29,
		0x_BA, 0x_F9, 0x_1D, 0x_4B, 0x_E4, 0x_A4,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_BE, 0x_8B, 0x_9B, 0x_75, 0x_B3, 0x_C3, 0x_66, 0x_1B, 0x_C1, 0x_87, 0x_1D, 0x_B9, 0x_E8, 0x_7B,
		0x_36, 0x_3F, 0x_0F, 0x_3D, 0x_47, 0x_10, 0x_02, 0x_F8, 0x_AD, 0x_92, 0x_3B, 0x_1E, 0x_9A, 0x_29, 0x_F9,
		0x_4F, 0x_71, 0x_DD, 0x_B7, 0x_63, 0x_03, 0x_4C, 0x_23, 0x_C5, 0x_F7, 0x_80, 0x_4D, 0x_74, 0x_99, 0x_AF,
		0x_90, 0x_EE, 0x_49, 0x_9E, 0x_A4, 0x_43, 0x_21, 0x_AB, 0x_79, 0x_F0, 0x_33, 0x_BC, 0x_15, 0x_4B, 0x_E7,
		0x_95, 0x_8D, 0x_BA, 0x_E4, 0x_7C, 0x_8A, 0x_97, 0x_2E, 0x_01, 0x_E2, 0x_F2, 0x_F6, 0x_1C,
	];

	helper(S, BASE, -7_073_816);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_46_528_569_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_46_528_569_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_20,
		0x_09, 0x_2B, 0x_2D, 0x_6F, 0x_51, 0x_46, 0x_87, 0x_1B, 0x_DB, 0x_DA, 0x_F4, 0x_E5, 0x_40, 0x_75, 0x_40,
		0x_EA, 0x_87, 0x_E1, 0x_C4, 0x_29, 0x_CB, 0x_E1, 0x_93, 0x_59, 0x_D0, 0x_6D, 0x_98, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_6F, 0x_F4, 0x_E6, 0x_74, 0x_29, 0x_3D, 0x_1A, 0x_86, 0x_8B, 0x_FA, 0x_6D, 0x_12, 0x_85, 0x_87,
		0x_22, 0x_3A, 0x_D0, 0x_D8, 0x_08, 0x_A2, 0x_03, 0x_A0, 0x_EE, 0x_8D, 0x_78, 0x_AF, 0x_CB, 0x_B4, 0x_4F,
		0x_DA, 0x_EA, 0x_7A, 0x_E5, 0x_EC, 0x_8F, 0x_C4, 0x_75, 0x_65, 0x_25, 0x_C0, 0x_98, 0x_1E, 0x_59, 0x_46,
		0x_AB, 0x_51, 0x_FB, 0x_1B, 0x_E8, 0x_DE, 0x_72, 0x_0F, 0x_6A, 0x_30, 0x_C9, 0x_A9, 0x_DF, 0x_40, 0x_3F,
		0x_32, 0x_BF, 0x_04, 0x_53, 0x_ED, 0x_FE, 0x_95, 0x_99, 0x_5D, 0x_93, 0x_2F, 0x_90, 0x_E1,
	];

	helper(S, BASE, -46_528_569);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_677_845_659_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_677_845_659_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0C,
		0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_0B,
		0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_32, 0x_04, 0x_7C, 0x_18,
		0x_FD, 0x_F5, 0x_E4, 0x_5E, 0x_FE, 0x_D4, 0x_1C, 0x_30, 0x_22, 0x_54, 0x_D8, 0x_B7, 0x_07, 0x_84, 0x_E8,
		0x_9A, 0x_37, 0x_17, 0x_61, 0x_06, 0x_9B, 0x_6A, 0x_37, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_6E, 0x_41, 0x_9B, 0x_75, 0x_87, 0x_61, 0x_54, 0x_1B, 0x_1A, 0x_BB, 0x_AA, 0x_AD, 0x_21, 0x_24,
		0x_D3, 0x_37, 0x_33, 0x_4F, 0x_02, 0x_0F, 0x_84, 0x_E9, 0x_32, 0x_51, 0x_FE, 0x_6F, 0x_9A, 0x_B7, 0x_18,
		0x_E2, 0x_D5, 0x_B1, 0x_7C, 0x_DC, 0x_BE, 0x_42, 0x_B5, 0x_A0, 0x_2E, 0x_D4, 0x_C6, 0x_6A, 0x_E1, 0x_AF,
		0x_92, 0x_06, 0x_3B, 0x_EF, 0x_35, 0x_86, 0x_3A, 0x_F4, 0x_30, 0x_B4, 0x_8B, 0x_D9, 0x_17, 0x_6B, 0x_E8,
		0x_1C, 0x_D8, 0x_A6, 0x_04, 0x_22, 0x_5E, 0x_CB, 0x_8C, 0x_3E, 0x_50, 0x_E4, 0x_FD, 0x_F0,
	];

	helper(S, BASE, -677_845_659);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_4_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_4_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_68, 0x_71, 0x_CE, 0x_28, 0x_1F, 0x_04,
	];
	const BASE: &[u8] = &[
		0x_E6, 0x_87, 0x_69, 0x_7A, 0x_68, 0x_61, 0x_21, 0x_18, 0x_7C, 0x_A9, 0x_19, 0x_06, 0x_FD, 0x_25, 0x_62,
		0x_12, 0x_D9, 0x_C9, 0x_52, 0x_5D, 0x_E7, 0x_E8, 0x_D6, 0x_DE, 0x_CC, 0x_3F, 0x_54, 0x_C5, 0x_58, 0x_9D,
		0x_8A, 0x_8B, 0x_A1, 0x_B3, 0x_EF, 0x_7E, 0x_1C, 0x_75, 0x_AF, 0x_14, 0x_8C, 0x_34, 0x_67, 0x_BF, 0x_AC,
		0x_4B, 0x_59, 0x_FC, 0x_51, 0x_F2, 0x_22, 0x_C1, 0x_C2, 0x_43, 0x_F6, 0x_94, 0x_40, 0x_F5, 0x_4A, 0x_E3,
		0x_26, 0x_32, 0x_97, 0x_55, 0x_39, 0x_60, 0x_77, 0x_BA, 0x_89, 0x_0F, 0x_76, 0x_9C, 0x_FB, 0x_04, 0x_EE,
		0x_F0, 0x_5B, 0x_1F, 0x_70, 0x_CE, 0x_92, 0x_90, 0x_1A, 0x_3C, 0x_6B, 0x_85, 0x_9B, 0x_BD, 0x_28, 0x_27,
		0x_8F, 0x_2A, 0x_23, 0x_4F, 0x_91, 0x_31, 0x_6A, 0x_3D, 0x_AE, 0x_65, 0x_EC, 0x_93, 0x_83, 0x_6D, 0x_72,
		0x_DA, 0x_EA, 0x_4C, 0x_FF, 0x_2C, 0x_73, 0x_EB, 0x_5E,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_42_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_42_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0A,
		0x_0A, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_8C, 0x_2F, 0x_84, 0x_BD,
		0x_C5, 0x_82, 0x_62, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_AA, 0x_65, 0x_36, 0x_F6, 0x_79, 0x_D2, 0x_85, 0x_3D, 0x_1E, 0x_92, 0x_94, 0x_D3, 0x_08, 0x_DA,
		0x_88, 0x_4F, 0x_DE, 0x_2E, 0x_54, 0x_FA, 0x_82, 0x_7E, 0x_9A, 0x_96, 0x_D9, 0x_76, 0x_AD, 0x_57, 0x_5A,
		0x_EC, 0x_48, 0x_46, 0x_E3, 0x_98, 0x_77, 0x_A2, 0x_7A, 0x_91, 0x_72, 0x_C9, 0x_66, 0x_8C, 0x_F3, 0x_F0,
		0x_DB, 0x_59, 0x_64, 0x_11, 0x_28, 0x_86, 0x_6A, 0x_1C, 0x_F9, 0x_70, 0x_6D, 0x_4A, 0x_34, 0x_E8, 0x_84,
		0x_21, 0x_7F, 0x_B3, 0x_CD, 0x_6C, 0x_22, 0x_02, 0x_3B, 0x_B4, 0x_BD, 0x_26, 0x_A5, 0x_2A, 0x_A0, 0x_A1,
		0x_C5, 0x_53, 0x_89, 0x_FC, 0x_DD, 0x_62, 0x_04, 0x_37, 0x_E2, 0x_BE, 0x_F8, 0x_0F, 0x_05, 0x_DC, 0x_9F,
		0x_BA, 0x_41, 0x_F1, 0x_07, 0x_E6, 0x_D1, 0x_24, 0x_EE, 0x_81, 0x_C1, 0x_75, 0x_CB, 0x_63, 0x_5D, 0x_19,
		0x_3E, 0x_E9, 0x_87, 0x_7B, 0x_71, 0x_17, 0x_1A, 0x_97,
	];

	helper(S, BASE, -42);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_976_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_976_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_C2, 0x_C4, 0x_D7, 0x_98, 0x_9B, 0x_9D, 0x_08, 0x_71, 0x_42,
		0x_05, 0x_F2, 0x_54, 0x_A7, 0x_31, 0x_AA, 0x_5A, 0x_F4, 0x_C9, 0x_2C, 0x_6C, 0x_B6, 0x_68, 0x_C8, 0x_25,
		0x_A5, 0x_C2, 0x_F2, 0x_95, 0x_4C, 0x_F6, 0x_75, 0x_80, 0x_F4, 0x_82, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_25, 0x_D3, 0x_4C, 0x_E4, 0x_C8, 0x_C5, 0x_BA, 0x_C2, 0x_6D, 0x_03, 0x_98, 0x_3A, 0x_C9, 0x_AB,
		0x_48, 0x_15, 0x_8F, 0x_75, 0x_9A, 0x_91, 0x_10, 0x_F6, 0x_BC, 0x_BD, 0x_82, 0x_35, 0x_60, 0x_1A, 0x_FC,
		0x_21, 0x_D5, 0x_81, 0x_92, 0x_31, 0x_D4, 0x_AA, 0x_7B, 0x_37, 0x_2F, 0x_C3, 0x_A2, 0x_3B, 0x_95, 0x_A4,
		0x_64, 0x_C6, 0x_3D, 0x_71, 0x_66, 0x_A7, 0x_04, 0x_90, 0x_BF, 0x_89, 0x_12, 0x_4F, 0x_22, 0x_51, 0x_7F,
		0x_F0, 0x_D1, 0x_F4, 0x_2C, 0x_93, 0x_5D, 0x_7C, 0x_D9, 0x_F3, 0x_8B, 0x_72, 0x_9D, 0x_C4, 0x_0E, 0x_7E,
		0x_F2, 0x_9B, 0x_6C, 0x_80, 0x_A5, 0x_08, 0x_3F, 0x_53, 0x_05, 0x_7D, 0x_E3, 0x_FE, 0x_1F, 0x_B0, 0x_E8,
		0x_88, 0x_D2, 0x_5E, 0x_54, 0x_B6, 0x_27, 0x_67, 0x_F9, 0x_55, 0x_1E, 0x_C0, 0x_02, 0x_2E, 0x_DB, 0x_63,
		0x_5A, 0x_07, 0x_E6, 0x_5B, 0x_18, 0x_4B, 0x_68, 0x_34,
	];

	helper(S, BASE, -976);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_1_883_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_1_883_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_8B, 0x_9F, 0x_AB, 0x_8C, 0x_A3, 0x_9D, 0x_D1, 0x_3B, 0x_46, 0x_FA, 0x_7B,
		0x_48, 0x_8A, 0x_FE, 0x_A5, 0x_56, 0x_D8, 0x_B6, 0x_97, 0x_FB, 0x_D0, 0x_96, 0x_8E, 0x_E3, 0x_8C, 0x_35,
		0x_65, 0x_D2, 0x_BE, 0x_08, 0x_B3, 0x_EA, 0x_5B, 0x_1F, 0x_DA, 0x_FD, 0x_EF, 0x_56, 0x_24, 0x_CF, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_88, 0x_C2, 0x_8C, 0x_FA, 0x_F1, 0x_3B, 0x_8F, 0x_6D, 0x_A2, 0x_F2, 0x_B1, 0x_24, 0x_BE, 0x_03,
		0x_10, 0x_8B, 0x_5D, 0x_14, 0x_66, 0x_08, 0x_7A, 0x_EF, 0x_2E, 0x_56, 0x_06, 0x_1F, 0x_AD, 0x_D5, 0x_D2,
		0x_97, 0x_13, 0x_D1, 0x_8A, 0x_E0, 0x_A4, 0x_46, 0x_65, 0x_F3, 0x_35, 0x_19, 0x_E3, 0x_B4, 0x_37, 0x_96,
		0x_EB, 0x_3F, 0x_1A, 0x_5E, 0x_33, 0x_C9, 0x_41, 0x_A1, 0x_89, 0x_E4, 0x_CD, 0x_30, 0x_AF, 0x_23, 0x_71,
		0x_8E, 0x_DC, 0x_86, 0x_47, 0x_FE, 0x_4C, 0x_D8, 0x_DA, 0x_CF, 0x_43, 0x_E2, 0x_C3, 0x_F6, 0x_75, 0x_74,
		0x_9F, 0x_93, 0x_5C, 0x_A5, 0x_E8, 0x_72, 0x_16, 0x_FD, 0x_AE, 0x_29, 0x_0E, 0x_2C, 0x_EA, 0x_ED, 0x_79,
		0x_48, 0x_A8, 0x_C0, 0x_58, 0x_7E, 0x_D0, 0x_05, 0x_59, 0x_A3, 0x_B3, 0x_85, 0x_B6, 0x_9D, 0x_D3, 0x_50,
		0x_7B, 0x_5B, 0x_A7, 0x_BD, 0x_6E, 0x_FB, 0x_C1, 0x_42,
	];

	helper(S, BASE, -1_883);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_79_840_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_79_840_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_F3, 0x_4E, 0x_AB, 0x_D9, 0x_47, 0x_CD, 0x_F1, 0x_44, 0x_49, 0x_92, 0x_66,
		0x_AD, 0x_B0, 0x_86, 0x_56, 0x_CB, 0x_25, 0x_CB, 0x_EC, 0x_93, 0x_61, 0x_BC, 0x_A7, 0x_8C, 0x_40, 0x_99,
		0x_60, 0x_5C, 0x_24, 0x_AB, 0x_A2, 0x_88, 0x_F5, 0x_E1, 0x_61, 0x_4E, 0x_3A, 0x_56, 0x_2C, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_E8, 0x_21, 0x_7B, 0x_98, 0x_CA, 0x_EB, 0x_F3, 0x_45, 0x_ED, 0x_6B, 0x_66, 0x_95, 0x_37, 0x_90, 0x_72,
		0x_D3, 0x_FA, 0x_C8, 0x_3B, 0x_BF, 0x_80, 0x_16, 0x_93, 0x_97, 0x_F1, 0x_30, 0x_68, 0x_EC, 0x_4E, 0x_AE,
		0x_76, 0x_AF, 0x_41, 0x_40, 0x_91, 0x_3F, 0x_71, 0x_EA, 0x_F6, 0x_8C, 0x_B8, 0x_44, 0x_E3, 0x_D6, 0x_AD,
		0x_C3, 0x_83, 0x_11, 0x_E2, 0x_49, 0x_55, 0x_DF, 0x_3A, 0x_F2, 0x_E1, 0x_0F, 0x_FC, 0x_88, 0x_A7, 0x_60,
		0x_1F, 0x_C9, 0x_AB, 0x_CB, 0x_5D, 0x_24, 0x_B5, 0x_35, 0x_E4, 0x_84, 0x_04, 0x_58, 0x_54, 0x_A4, 0x_0E,
		0x_F7, 0x_2C, 0x_42, 0x_56, 0x_7A, 0x_69, 0x_07, 0x_BC, 0x_48, 0x_CD, 0x_9B, 0x_8B, 0x_B3, 0x_A3, 0x_64,
		0x_99, 0x_FB, 0x_F5, 0x_BA, 0x_C2, 0x_A2, 0x_94, 0x_14, 0x_7D, 0x_86, 0x_C6, 0x_27, 0x_23, 0x_61, 0x_26,
		0x_B0, 0x_D5, 0x_F9, 0x_5C, 0x_92, 0x_25, 0x_65, 0x_47,
	];

	helper(S, BASE, -79_840);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_898_647_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_898_647_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_0C,
		0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0D,
		0x_20, 0x_20, 0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_F8, 0x_97, 0x_FE, 0x_62, 0x_33, 0x_77, 0x_B4,
		0x_19, 0x_55, 0x_8B, 0x_1E, 0x_05, 0x_54, 0x_03, 0x_06, 0x_B4, 0x_9C, 0x_86, 0x_CF, 0x_B1, 0x_F6, 0x_53,
		0x_06, 0x_27, 0x_C5, 0x_E9, 0x_6C, 0x_E3, 0x_93, 0x_4E, 0x_B4, 0x_75, 0x_1E, 0x_0E, 0x_31, 0x_16, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_4A, 0x_4E, 0x_83, 0x_31, 0x_10, 0x_1B, 0x_08, 0x_72, 0x_D8, 0x_9C, 0x_04, 0x_1D, 0x_6C, 0x_55,
		0x_9E, 0x_7C, 0x_E4, 0x_51, 0x_96, 0x_D4, 0x_E5, 0x_D9, 0x_A2, 0x_7D, 0x_AC, 0x_B2, 0x_35, 0x_65, 0x_2C,
		0x_67, 0x_A7, 0x_E0, 0x_79, 0x_B0, 0x_7F, 0x_87, 0x_D6, 0x_05, 0x_E3, 0x_C9, 0x_FA, 0x_97, 0x_A8, 0x_5C,
		0x_54, 0x_38, 0x_C3, 0x_27, 0x_D7, 0x_23, 0x_F6, 0x_F5, 0x_1F, 0x_9B, 0x_33, 0x_5F, 0x_A9, 0x_84, 0x_E1,
		0x_68, 0x_03, 0x_01, 0x_D3, 0x_1E, 0x_07, 0x_95, 0x_19, 0x_75, 0x_89, 0x_F8, 0x_FE, 0x_93, 0x_42, 0x_BA,
		0x_34, 0x_53, 0x_13, 0x_E2, 0x_AA, 0x_86, 0x_8B, 0x_9A, 0x_70, 0x_B4, 0x_F4, 0x_B5, 0x_C1, 0x_EF, 0x_06,
		0x_21, 0x_CE, 0x_E8, 0x_0E, 0x_DC, 0x_16, 0x_CF, 0x_C5, 0x_44, 0x_DD, 0x_7B, 0x_B1, 0x_E9, 0x_1C, 0x_EA,
		0x_6B, 0x_BE, 0x_A5, 0x_58, 0x_77, 0x_76, 0x_22, 0x_18,
	];

	helper(S, BASE, -898_647);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_926_665_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_926_665_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_69, 0x_83, 0x_35,
		0x_23, 0x_6A, 0x_FA, 0x_E7, 0x_CD, 0x_B1, 0x_4E, 0x_F9, 0x_DE, 0x_BA, 0x_70, 0x_11, 0x_08, 0x_CB, 0x_02,
		0x_F4, 0x_8B, 0x_F1, 0x_DE, 0x_4D, 0x_8F, 0x_8A, 0x_3D, 0x_B7, 0x_5F, 0x_E5, 0x_63,
	];
	const BASE: &[u8] = &[
		0x_7D, 0x_4B, 0x_69, 0x_C0, 0x_3C, 0x_81, 0x_BA, 0x_76, 0x_79, 0x_4D, 0x_B9, 0x_2A, 0x_70, 0x_E7, 0x_BB,
		0x_82, 0x_AF, 0x_3F, 0x_C8, 0x_F9, 0x_7F, 0x_AC, 0x_A1, 0x_DE, 0x_8C, 0x_E6, 0x_7A, 0x_11, 0x_23, 0x_F0,
		0x_93, 0x_5D, 0x_21, 0x_A6, 0x_60, 0x_58, 0x_41, 0x_39, 0x_24, 0x_7E, 0x_8A, 0x_EB, 0x_5A, 0x_43, 0x_C6,
		0x_3D, 0x_1D, 0x_14, 0x_52, 0x_D8, 0x_A0, 0x_44, 0x_F4, 0x_28, 0x_DD, 0x_E8, 0x_45, 0x_E0, 0x_35, 0x_72,
		0x_C7, 0x_4E, 0x_5F, 0x_61, 0x_E2, 0x_FA, 0x_27, 0x_FF, 0x_F6, 0x_EE, 0x_90, 0x_29, 0x_08, 0x_87, 0x_34,
		0x_51, 0x_CD, 0x_CB, 0x_E5, 0x_9B, 0x_8E, 0x_83, 0x_BD, 0x_33, 0x_0F, 0x_10, 0x_8D, 0x_A9, 0x_AE, 0x_1A,
		0x_A7, 0x_C1, 0x_AB, 0x_8B, 0x_42, 0x_EA, 0x_02, 0x_F1, 0x_B1, 0x_8F, 0x_63, 0x_2F, 0x_B7, 0x_FD, 0x_ED,
		0x_6F, 0x_1E, 0x_C9, 0x_5B, 0x_D0, 0x_71, 0x_E1, 0x_EF,
	];

	helper(S, BASE, -3_926_665);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_96_611_991_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_96_611_991_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_09,
		0x_20, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0A,
		0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_98, 0x_96, 0x_2C, 0x_DA, 0x_D7, 0x_80, 0x_8A, 0x_4E, 0x_4B, 0x_5B, 0x_9E, 0x_96, 0x_8A, 0x_77, 0x_14,
		0x_80, 0x_5D, 0x_98, 0x_9F, 0x_36, 0x_61,
	];
	const BASE: &[u8] = &[
		0x_D9, 0x_E0, 0x_75, 0x_9F, 0x_2F, 0x_C3, 0x_7A, 0x_92, 0x_F9, 0x_0E, 0x_33, 0x_13, 0x_22, 0x_D4, 0x_B1,
		0x_2C, 0x_AC, 0x_5F, 0x_FA, 0x_B2, 0x_7E, 0x_CF, 0x_5E, 0x_41, 0x_A1, 0x_80, 0x_DD, 0x_47, 0x_83, 0x_C0,
		0x_42, 0x_FC, 0x_EF, 0x_8A, 0x_8F, 0x_10, 0x_5D, 0x_E7, 0x_BB, 0x_AA, 0x_A8, 0x_D8, 0x_DA, 0x_F2, 0x_11,
		0x_A4, 0x_6D, 0x_3E, 0x_65, 0x_C2, 0x_DB, 0x_4B, 0x_04, 0x_26, 0x_A5, 0x_08, 0x_91, 0x_64, 0x_77, 0x_85,
		0x_E1, 0x_15, 0x_A3, 0x_43, 0x_90, 0x_F3, 0x_98, 0x_36, 0x_E4, 0x_16, 0x_71, 0x_5A, 0x_3D, 0x_CD, 0x_F8,
		0x_F4, 0x_B3, 0x_29, 0x_14, 0x_E2, 0x_76, 0x_5B, 0x_4E, 0x_31, 0x_6A, 0x_BA, 0x_1B, 0x_01, 0x_9C, 0x_FD,
		0x_E3, 0x_58, 0x_BD, 0x_9E, 0x_38, 0x_81, 0x_53, 0x_ED, 0x_4F, 0x_57, 0x_D3, 0x_25, 0x_78, 0x_B8, 0x_61,
		0x_32, 0x_6F, 0x_F7, 0x_96, 0x_62, 0x_3B, 0x_F1, 0x_DE,
	];

	helper(S, BASE, -96_611_991);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_907_767_633_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_907_767_633_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0A,
		0x_0D, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_D5, 0x_5B, 0x_36, 0x_0F, 0x_99, 0x_35, 0x_AF, 0x_28, 0x_3E, 0x_FF, 0x_06,
		0x_7F, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_22, 0x_FF, 0x_C1, 0x_FE, 0x_D5, 0x_DE, 0x_B9, 0x_DA, 0x_43, 0x_B5, 0x_4A, 0x_1C, 0x_2A, 0x_36,
		0x_C4, 0x_C6, 0x_3C, 0x_C8, 0x_2F, 0x_8F, 0x_C7, 0x_27, 0x_55, 0x_A9, 0x_32, 0x_F5, 0x_E9, 0x_8B, 0x_97,
		0x_3D, 0x_91, 0x_63, 0x_31, 0x_CC, 0x_A1, 0x_26, 0x_5C, 0x_8C, 0x_F6, 0x_A4, 0x_7B, 0x_FC, 0x_84, 0x_39,
		0x_7D, 0x_49, 0x_E2, 0x_56, 0x_51, 0x_12, 0x_9B, 0x_06, 0x_3F, 0x_6D, 0x_FB, 0x_7F, 0x_A2, 0x_0F, 0x_75,
		0x_4C, 0x_D0, 0x_03, 0x_D9, 0x_5B, 0x_6E, 0x_14, 0x_73, 0x_1F, 0x_29, 0x_81, 0x_77, 0x_15, 0x_BB, 0x_28,
		0x_FA, 0x_11, 0x_45, 0x_16, 0x_96, 0x_41, 0x_AD, 0x_50, 0x_54, 0x_93, 0x_DD, 0x_48, 0x_A0, 0x_19, 0x_82,
		0x_90, 0x_4B, 0x_F3, 0x_85, 0x_18, 0x_CA, 0x_AF, 0x_FD, 0x_D2, 0x_EE, 0x_99, 0x_6C, 0x_01, 0x_66, 0x_7E,
		0x_57, 0x_07, 0x_44, 0x_80, 0x_42, 0x_A3, 0x_8D, 0x_C2,
	];

	helper(S, BASE, -907_767_633);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_09,
		0x_0A, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_94, 0x_09, 0x_10, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_88, 0x_D2, 0x_94, 0x_36, 0x_D8, 0x_E0, 0x_03, 0x_3F, 0x_29, 0x_50, 0x_9E, 0x_B9, 0x_E9, 0x_F6, 0x_7E,
		0x_AB, 0x_19, 0x_0E, 0x_1F, 0x_14, 0x_C2, 0x_4F, 0x_F9, 0x_C8, 0x_44, 0x_90, 0x_61, 0x_D0, 0x_6E, 0x_21,
		0x_A6, 0x_F7, 0x_60, 0x_10, 0x_30, 0x_B5, 0x_EB, 0x_FD, 0x_5A, 0x_15, 0x_57, 0x_2C, 0x_16, 0x_8C, 0x_33,
		0x_34, 0x_06, 0x_C7, 0x_5E, 0x_42, 0x_77, 0x_AF, 0x_4A, 0x_D4, 0x_ED, 0x_86, 0x_3D, 0x_25, 0x_FC, 0x_73,
		0x_DD, 0x_B1, 0x_31, 0x_FB, 0x_D7, 0x_DF, 0x_51, 0x_5F, 0x_54, 0x_81, 0x_A7, 0x_1B, 0x_71, 0x_E1, 0x_59,
		0x_AE, 0x_6A, 0x_E6, 0x_43, 0x_93, 0x_7A, 0x_87, 0x_9B, 0x_BE, 0x_D6, 0x_EE, 0x_D1, 0x_BD, 0x_01, 0x_55,
		0x_89, 0x_0F, 0x_23, 0x_C5, 0x_05, 0x_A4, 0x_7B, 0x_F4, 0x_64, 0x_70, 0x_02, 0x_6F, 0x_4E, 0x_9F, 0x_CB,
		0x_68, 0x_04, 0x_BB, 0x_CD, 0x_07, 0x_5D, 0x_FE, 0x_56, 0x_DB, 0x_22, 0x_72, 0x_3C, 0x_1C, 0x_80, 0x_E3,
		0x_C1, 0x_B3, 0x_1D, 0x_A2, 0x_6B, 0x_18, 0x_A0, 0x_48, 0x_9A, 0x_E4, 0x_28, 0x_9C, 0x_62, 0x_91, 0x_84,
		0x_C6, 0x_13, 0x_AA, 0x_41, 0x_6C, 0x_69, 0x_26, 0x_92, 0x_EA, 0x_7C, 0x_5C, 0x_C9, 0x_38, 0x_2F, 0x_B4,
		0x_D3, 0x_99, 0x_32, 0x_8F, 0x_CF, 0x_E8, 0x_76, 0x_8A, 0x_A1, 0x_74, 0x_DE, 0x_5B, 0x_53, 0x_FF, 0x_B2,
		0x_58, 0x_40, 0x_9D, 0x_12, 0x_DA, 0x_F3, 0x_4D, 0x_24, 0x_75, 0x_CC, 0x_BF, 0x_AD, 0x_78, 0x_65, 0x_39,
		0x_8D, 0x_CA, 0x_52, 0x_45, 0x_08, 0x_DC, 0x_CE, 0x_8B, 0x_66, 0x_47, 0x_96, 0x_46, 0x_A5,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_81_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_81_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0C,
		0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0C, 0x_09, 0x_0A, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_8A,
		0x_A1, 0x_D1, 0x_45, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_40, 0x_35, 0x_AE, 0x_82, 0x_51, 0x_97, 0x_E4, 0x_EA, 0x_42, 0x_53, 0x_72, 0x_93, 0x_45, 0x_8C, 0x_DA,
		0x_FB, 0x_1F, 0x_FC, 0x_83, 0x_F4, 0x_4A, 0x_9F, 0x_ED, 0x_01, 0x_79, 0x_C5, 0x_BF, 0x_56, 0x_E7, 0x_D2,
		0x_5F, 0x_F0, 0x_2A, 0x_BD, 0x_EF, 0x_FD, 0x_81, 0x_4F, 0x_FE, 0x_87, 0x_F6, 0x_22, 0x_DE, 0x_43, 0x_54,
		0x_68, 0x_94, 0x_E1, 0x_7D, 0x_CD, 0x_6A, 0x_33, 0x_7A, 0x_47, 0x_B3, 0x_5A, 0x_3D, 0x_41, 0x_A0, 0x_46,
		0x_58, 0x_28, 0x_3C, 0x_F2, 0x_17, 0x_6D, 0x_98, 0x_FA, 0x_89, 0x_44, 0x_AC, 0x_85, 0x_CA, 0x_EB, 0x_CE,
		0x_1E, 0x_D1, 0x_75, 0x_59, 0x_AB, 0x_E2, 0x_8A, 0x_5E, 0x_9A, 0x_E9, 0x_F9, 0x_39, 0x_52, 0x_9C, 0x_8F,
		0x_7C, 0x_CB, 0x_C1, 0x_4E, 0x_2C, 0x_66, 0x_26, 0x_49, 0x_16, 0x_5D, 0x_64, 0x_A7, 0x_A2, 0x_1D, 0x_32,
		0x_1B, 0x_92, 0x_4C, 0x_7B, 0x_27, 0x_D0, 0x_0E, 0x_C9, 0x_EE, 0x_F1, 0x_57, 0x_E6, 0x_96, 0x_6F, 0x_C4,
		0x_70, 0x_67, 0x_8B, 0x_C2, 0x_5B, 0x_7F, 0x_1A, 0x_DF, 0x_31, 0x_AA, 0x_71, 0x_91, 0x_E3, 0x_DD, 0x_34,
		0x_77, 0x_A4, 0x_CC, 0x_19, 0x_65, 0x_E0, 0x_23, 0x_BB, 0x_48, 0x_74, 0x_DC, 0x_F5, 0x_B2, 0x_10, 0x_BE,
		0x_12, 0x_8E, 0x_15, 0x_18, 0x_D7, 0x_A5, 0x_37, 0x_55, 0x_C6, 0x_11, 0x_30, 0x_78, 0x_B1, 0x_B0, 0x_24,
		0x_13, 0x_73, 0x_36, 0x_F8, 0x_BC, 0x_6C, 0x_6B, 0x_E5, 0x_9E, 0x_2E, 0x_08, 0x_86, 0x_04, 0x_80, 0x_E8,
		0x_60, 0x_5C, 0x_D8, 0x_06, 0x_3A, 0x_EC, 0x_F7, 0x_9B, 0x_D6, 0x_AF, 0x_A8, 0x_84, 0x_25,
	];

	helper(S, BASE, -81);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_984_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_984_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_09,
		0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_D0, 0x_D9, 0x_B7, 0x_7A, 0x_92, 0x_8B, 0x_34, 0x_CD, 0x_C2, 0x_35, 0x_59, 0x_57, 0x_32, 0x_69,
		0x_D0, 0x_58, 0x_DC, 0x_95, 0x_98, 0x_16, 0x_3B, 0x_8B, 0x_DD, 0x_2C, 0x_E9, 0x_90, 0x_6F, 0x_C3, 0x_7C,
		0x_59, 0x_83, 0x_62, 0x_83, 0x_89, 0x_E0, 0x_B1, 0x_F7, 0x_DA,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_50, 0x_47, 0x_7B, 0x_AF, 0x_D0, 0x_4C, 0x_8E, 0x_94, 0x_89, 0x_62, 0x_6E, 0x_79, 0x_F3, 0x_7C,
		0x_5F, 0x_D6, 0x_EF, 0x_12, 0x_D9, 0x_B6, 0x_5A, 0x_2F, 0x_9B, 0x_A9, 0x_C5, 0x_52, 0x_0F, 0x_DF, 0x_80,
		0x_5D, 0x_38, 0x_1A, 0x_13, 0x_2E, 0x_75, 0x_C6, 0x_F7, 0x_FB, 0x_8F, 0x_ED, 0x_07, 0x_F2, 0x_F4, 0x_4F,
		0x_3A, 0x_14, 0x_CE, 0x_B3, 0x_D3, 0x_36, 0x_A6, 0x_F8, 0x_D5, 0x_1B, 0x_70, 0x_21, 0x_7E, 0x_6B, 0x_84,
		0x_15, 0x_EE, 0x_7A, 0x_BD, 0x_4E, 0x_46, 0x_A0, 0x_9A, 0x_7D, 0x_7F, 0x_3E, 0x_A7, 0x_27, 0x_37, 0x_F6,
		0x_4B, 0x_25, 0x_34, 0x_18, 0x_11, 0x_D7, 0x_5E, 0x_3F, 0x_55, 0x_CD, 0x_B2, 0x_C2, 0x_A4, 0x_35, 0x_A2,
		0x_23, 0x_FA, 0x_F0, 0x_49, 0x_E2, 0x_0E, 0x_CF, 0x_A3, 0x_83, 0x_E0, 0x_BA, 0x_99, 0x_6C, 0x_02, 0x_B9,
		0x_72, 0x_92, 0x_28, 0x_DC, 0x_AE, 0x_CC, 0x_19, 0x_24, 0x_C3, 0x_6D, 0x_9D, 0x_1D, 0x_04, 0x_9F, 0x_65,
		0x_32, 0x_EA, 0x_3B, 0x_66, 0x_8B, 0x_DD, 0x_D8, 0x_A5, 0x_61, 0x_81, 0x_E3, 0x_16, 0x_B8, 0x_EC, 0x_4D,
		0x_CA, 0x_85, 0x_9C, 0x_6F, 0x_D2, 0x_3C, 0x_41, 0x_73, 0x_05, 0x_45, 0x_22, 0x_87, 0x_5C, 0x_86, 0x_58,
		0x_44, 0x_E7, 0x_67, 0x_F1, 0x_2C, 0x_DB, 0x_B1, 0x_57, 0x_FC, 0x_43, 0x_3D, 0x_C9, 0x_98, 0x_F9, 0x_2A,
		0x_39, 0x_30, 0x_D4, 0x_78, 0x_EB, 0x_68, 0x_FF, 0x_AC, 0x_76, 0x_90, 0x_69, 0x_BF, 0x_88, 0x_10, 0x_59,
		0x_FD, 0x_71, 0x_82, 0x_8C, 0x_77, 0x_DA, 0x_E8, 0x_5B, 0x_E9, 0x_95, 0x_1F, 0x_D1, 0x_63,
	];

	helper(S, BASE, -984);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_6_752_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_6_752_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_C7, 0x_F8, 0x_1A, 0x_5C, 0x_E8, 0x_A9, 0x_03, 0x_3F, 0x_B2, 0x_8D, 0x_C7, 0x_58, 0x_02, 0x_1F,
		0x_DE, 0x_3C, 0x_67, 0x_4B, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_78, 0x_CB, 0x_F5, 0x_CE, 0x_BE, 0x_7A, 0x_F6, 0x_77, 0x_9B, 0x_3C, 0x_4E, 0x_9C, 0x_F9, 0x_73,
		0x_BB, 0x_E4, 0x_54, 0x_6D, 0x_89, 0x_8B, 0x_5A, 0x_D1, 0x_A2, 0x_5C, 0x_2C, 0x_34, 0x_08, 0x_C8, 0x_07,
		0x_79, 0x_95, 0x_94, 0x_3D, 0x_C7, 0x_52, 0x_80, 0x_67, 0x_AF, 0x_41, 0x_6F, 0x_22, 0x_1F, 0x_E6, 0x_83,
		0x_E0, 0x_C3, 0x_68, 0x_B6, 0x_D7, 0x_45, 0x_19, 0x_A1, 0x_AA, 0x_DE, 0x_A8, 0x_46, 0x_82, 0x_0F, 0x_B0,
		0x_29, 0x_17, 0x_31, 0x_B8, 0x_02, 0x_87, 0x_56, 0x_13, 0x_F4, 0x_39, 0x_50, 0x_D5, 0x_48, 0x_E2, 0x_AE,
		0x_2E, 0x_47, 0x_5B, 0x_B9, 0x_40, 0x_CF, 0x_EC, 0x_4A, 0x_EF, 0x_1E, 0x_18, 0x_C0, 0x_FF, 0x_3A, 0x_9D,
		0x_A0, 0x_04, 0x_61, 0x_7C, 0x_23, 0x_84, 0x_A9, 0x_10, 0x_76, 0x_25, 0x_BD, 0x_38, 0x_DD, 0x_5D, 0x_D9,
		0x_AB, 0x_1C, 0x_85, 0x_98, 0x_8D, 0x_55, 0x_36, 0x_D8, 0x_63, 0x_6C, 0x_26, 0x_59, 0x_90, 0x_FD, 0x_C2,
		0x_27, 0x_72, 0x_7E, 0x_EB, 0x_FC, 0x_88, 0x_58, 0x_7F, 0x_24, 0x_93, 0x_DF, 0x_AD, 0x_4F, 0x_F2, 0x_3F,
		0x_81, 0x_32, 0x_8C, 0x_49, 0x_92, 0x_C6, 0x_60, 0x_EA, 0x_B3, 0x_33, 0x_71, 0x_B7, 0x_7B, 0x_E1, 0x_FE,
		0x_AC, 0x_C1, 0x_A7, 0x_28, 0x_69, 0x_11, 0x_53, 0x_E8, 0x_F0, 0x_DA, 0x_51, 0x_3B, 0x_CA, 0x_BA, 0x_6A,
		0x_CD, 0x_DC, 0x_E7, 0x_70, 0x_D3, 0x_03, 0x_86, 0x_9F, 0x_D4, 0x_B2, 0x_12, 0x_9A, 0x_6E, 0x_A5, 0x_1D,
		0x_4D, 0x_A3, 0x_30, 0x_2F, 0x_96, 0x_BF, 0x_21, 0x_ED, 0x_06, 0x_F7, 0x_F8, 0x_4B, 0x_64,
	];

	helper(S, BASE, -6_752);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_85_282_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_85_282_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_0C, 0x_0A,
		0x_09, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0B,
		0x_0D, 0x_0C, 0x_2B, 0x_2D, 0x_8C, 0x_CA, 0x_75, 0x_85, 0x_AE, 0x_63, 0x_DA, 0x_63, 0x_65, 0x_6C, 0x_A0,
		0x_BD, 0x_F8, 0x_71, 0x_87, 0x_8C, 0x_84, 0x_9A, 0x_50, 0x_35, 0x_F0, 0x_D0, 0x_96, 0x_13, 0x_9C, 0x_9A,
		0x_A0, 0x_BD, 0x_03, 0x_3C, 0x_21, 0x_FC, 0x_46, 0x_72, 0x_C3, 0x_32, 0x_D0, 0x_05, 0x_BD, 0x_10, 0x_11,
		0x_AE, 0x_06, 0x_37,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_50, 0x_8C, 0x_34, 0x_C7, 0x_26, 0x_C9, 0x_F4, 0x_87, 0x_3D, 0x_4C, 0x_7E, 0x_B1, 0x_07, 0x_43,
		0x_66, 0x_57, 0x_E4, 0x_03, 0x_BB, 0x_BD, 0x_59, 0x_D0, 0x_81, 0x_F3, 0x_6F, 0x_21, 0x_94, 0x_73, 0x_29,
		0x_D4, 0x_F2, 0x_41, 0x_65, 0x_F5, 0x_CE, 0x_76, 0x_84, 0x_2F, 0x_C4, 0x_5D, 0x_60, 0x_3A, 0x_53, 0x_71,
		0x_F8, 0x_EC, 0x_2C, 0x_AA, 0x_05, 0x_DF, 0x_CF, 0x_F1, 0x_5B, 0x_D1, 0x_CA, 0x_82, 0x_AC, 0x_D5, 0x_06,
		0x_E3, 0x_32, 0x_88, 0x_14, 0x_72, 0x_E1, 0x_D3, 0x_8F, 0x_69, 0x_E6, 0x_12, 0x_B0, 0x_7A, 0x_10, 0x_C3,
		0x_42, 0x_C0, 0x_EF, 0x_3C, 0x_A5, 0x_86, 0x_40, 0x_64, 0x_9C, 0x_8E, 0x_77, 0x_BC, 0x_1C, 0x_B9, 0x_5E,
		0x_D8, 0x_BA, 0x_3F, 0x_98, 0x_E0, 0x_15, 0x_B5, 0x_08, 0x_22, 0x_54, 0x_BF, 0x_13, 0x_CD, 0x_4D, 0x_D2,
		0x_A9, 0x_68, 0x_38, 0x_99, 0x_B6, 0x_37, 0x_4B, 0x_A0, 0x_83, 0x_02, 0x_A1, 0x_35, 0x_D6, 0x_FF, 0x_B7,
		0x_18, 0x_C6, 0x_EE, 0x_E7, 0x_01, 0x_30, 0x_C2, 0x_1E, 0x_4F, 0x_C1, 0x_8D, 0x_95, 0x_7F, 0x_1D, 0x_A8,
		0x_63, 0x_1A, 0x_92, 0x_61, 0x_96, 0x_79, 0x_44, 0x_E5, 0x_FB, 0x_0F, 0x_74, 0x_89, 0x_28, 0x_55, 0x_48,
		0x_49, 0x_1B, 0x_ED, 0x_EA, 0x_FC, 0x_FD, 0x_DE, 0x_A3, 0x_6B, 0x_52, 0x_91, 0x_9A, 0x_17, 0x_E9, 0x_5A,
		0x_6E, 0x_6A, 0x_F7, 0x_90, 0x_75, 0x_16, 0x_31, 0x_56, 0x_9E, 0x_9B, 0x_11, 0x_6C, 0x_4E, 0x_8A, 0x_E8,
		0x_46, 0x_D7, 0x_97, 0x_F0, 0x_2A, 0x_A7, 0x_45, 0x_DD, 0x_78, 0x_7B, 0x_51, 0x_AE, 0x_3E,
	];

	helper(S, BASE, -85_282);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_841_908_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_841_908_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_DD, 0x_15, 0x_70, 0x_23, 0x_08,
		0x_3F, 0x_DA, 0x_DD, 0x_5C, 0x_27, 0x_1F, 0x_DE, 0x_80, 0x_A2, 0x_67, 0x_38, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_93, 0x_12, 0x_F7, 0x_98, 0x_54, 0x_28, 0x_2A, 0x_AC, 0x_39, 0x_71, 0x_A0, 0x_97, 0x_1F, 0x_81,
		0x_36, 0x_9B, 0x_26, 0x_50, 0x_A7, 0x_1D, 0x_D6, 0x_DD, 0x_CA, 0x_27, 0x_F3, 0x_2C, 0x_BE, 0x_52, 0x_55,
		0x_8D, 0x_6F, 0x_7C, 0x_72, 0x_A9, 0x_3E, 0x_94, 0x_A2, 0x_DF, 0x_F2, 0x_49, 0x_C7, 0x_70, 0x_FE, 0x_38,
		0x_46, 0x_D0, 0x_FA, 0x_87, 0x_DA, 0x_E0, 0x_19, 0x_24, 0x_8F, 0x_4F, 0x_76, 0x_60, 0x_5A, 0x_F0, 0x_34,
		0x_D7, 0x_BB, 0x_8A, 0x_EF, 0x_FF, 0x_E3, 0x_56, 0x_B6, 0x_13, 0x_E7, 0x_59, 0x_32, 0x_6D, 0x_B1, 0x_C0,
		0x_40, 0x_53, 0x_21, 0x_C4, 0x_E9, 0x_A8, 0x_86, 0x_EE, 0x_CF, 0x_B0, 0x_14, 0x_7D, 0x_3D, 0x_05, 0x_2F,
		0x_61, 0x_82, 0x_78, 0x_2E, 0x_74, 0x_B2, 0x_C1, 0x_F9, 0x_A1, 0x_0F, 0x_C9, 0x_F4, 0x_D5, 0x_AE, 0x_B3,
		0x_C5, 0x_67, 0x_83, 0x_42, 0x_E6, 0x_DC, 0x_C8, 0x_3B, 0x_FC, 0x_7B, 0x_F8, 0x_15, 0x_31, 0x_17, 0x_5C,
		0x_B5, 0x_57, 0x_B4, 0x_58, 0x_4E, 0x_CE, 0x_41, 0x_3C, 0x_A6, 0x_89, 0x_5F, 0x_CC, 0x_E8, 0x_E5, 0x_4B,
		0x_BF, 0x_37, 0x_25, 0x_3A, 0x_4C, 0x_AF, 0x_5E, 0x_9F, 0x_F1, 0x_DE, 0x_92, 0x_84, 0x_69, 0x_3F, 0x_80,
		0x_EC, 0x_08, 0x_29, 0x_BA, 0x_6B, 0x_B7, 0x_33, 0x_95, 0x_E4, 0x_10, 0x_0E, 0x_35, 0x_91, 0x_E1, 0x_75,
		0x_9D, 0x_D8, 0x_6C, 0x_06, 0x_11, 0x_8E, 0x_7F, 0x_96, 0x_79, 0x_07, 0x_9A, 0x_F5, 0x_77, 0x_AD, 0x_BC,
		0x_8C, 0x_B8, 0x_D3, 0x_D2, 0x_88, 0x_45, 0x_D1, 0x_FD, 0x_4D, 0x_D9, 0x_01, 0x_CD, 0x_48,
	];

	helper(S, BASE, -841_908);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_3_762_031_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_3_762_031_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0B,
		0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_2B, 0x_2D, 0x_AF,
		0x_D7, 0x_FE, 0x_D3, 0x_F9, 0x_10, 0x_12, 0x_69, 0x_DB, 0x_49, 0x_46, 0x_88, 0x_E1, 0x_55, 0x_E9, 0x_BD,
		0x_02, 0x_D9, 0x_4C, 0x_11, 0x_BC, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_95, 0x_AC, 0x_F4, 0x_B5, 0x_70, 0x_3B, 0x_D4, 0x_48, 0x_CE, 0x_9C, 0x_A4, 0x_7F, 0x_F8, 0x_52, 0x_78,
		0x_41, 0x_56, 0x_E8, 0x_5B, 0x_4B, 0x_2F, 0x_FB, 0x_CD, 0x_54, 0x_47, 0x_E9, 0x_A3, 0x_88, 0x_B1, 0x_42,
		0x_4A, 0x_27, 0x_DD, 0x_D6, 0x_BE, 0x_F9, 0x_9A, 0x_91, 0x_53, 0x_E6, 0x_65, 0x_A1, 0x_15, 0x_94, 0x_83,
		0x_45, 0x_F0, 0x_C6, 0x_B8, 0x_DB, 0x_77, 0x_C7, 0x_4C, 0x_8D, 0x_74, 0x_17, 0x_8B, 0x_9B, 0x_FC, 0x_6D,
		0x_E1, 0x_40, 0x_C2, 0x_C3, 0x_21, 0x_C8, 0x_06, 0x_6F, 0x_8C, 0x_97, 0x_5E, 0x_E5, 0x_0E, 0x_08, 0x_D0,
		0x_FE, 0x_69, 0x_6C, 0x_68, 0x_25, 0x_EE, 0x_26, 0x_EA, 0x_2C, 0x_18, 0x_89, 0x_71, 0x_7E, 0x_29, 0x_33,
		0x_ED, 0x_92, 0x_BC, 0x_60, 0x_22, 0x_FA, 0x_58, 0x_BF, 0x_46, 0x_98, 0x_AF, 0x_76, 0x_7B, 0x_B0, 0x_81,
		0x_E7, 0x_63, 0x_D1, 0x_6B, 0x_73, 0x_1E, 0x_64, 0x_4E, 0x_02, 0x_A2, 0x_DE, 0x_C9, 0x_84, 0x_AA, 0x_32,
		0x_3A, 0x_38, 0x_D2, 0x_D8, 0x_FD, 0x_07, 0x_5C, 0x_F5, 0x_1F, 0x_B4, 0x_A8, 0x_BA, 0x_AB, 0x_DF, 0x_A6,
		0x_C0, 0x_CB, 0x_23, 0x_12, 0x_CA, 0x_36, 0x_DA, 0x_7A, 0x_C4, 0x_F7, 0x_96, 0x_87, 0x_C1, 0x_75, 0x_F6,
		0x_EC, 0x_0F, 0x_B7, 0x_10, 0x_55, 0x_44, 0x_BD, 0x_B3, 0x_A9, 0x_F2, 0x_B9, 0x_EB, 0x_C5, 0x_90, 0x_05,
		0x_99, 0x_1D, 0x_31, 0x_A7, 0x_9E, 0x_9F, 0x_66, 0x_39, 0x_3F, 0x_4F, 0x_F1, 0x_51, 0x_79, 0x_49, 0x_CF,
		0x_28, 0x_34, 0x_11, 0x_04, 0x_82, 0x_57, 0x_AE, 0x_62, 0x_43, 0x_61, 0x_D9, 0x_37, 0x_D7,
	];

	helper(S, BASE, -3_762_031);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_26_541_314_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_26_541_314_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0D,
		0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_09,
		0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_08, 0x_38, 0x_31, 0x_D6, 0x_19,
		0x_E4, 0x_83, 0x_63, 0x_24, 0x_A5, 0x_48, 0x_76, 0x_38, 0x_47, 0x_7D, 0x_D4, 0x_A6, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_8B, 0x_A3, 0x_08, 0x_8C, 0x_EC, 0x_29, 0x_B2, 0x_AA, 0x_69, 0x_98, 0x_F0, 0x_9B, 0x_36, 0x_02,
		0x_66, 0x_FA, 0x_D4, 0x_5D, 0x_A8, 0x_62, 0x_65, 0x_5E, 0x_99, 0x_D7, 0x_75, 0x_5B, 0x_35, 0x_74, 0x_7A,
		0x_E6, 0x_81, 0x_2F, 0x_64, 0x_14, 0x_83, 0x_FF, 0x_23, 0x_D0, 0x_9F, 0x_E4, 0x_E0, 0x_B7, 0x_AC, 0x_AB,
		0x_3D, 0x_9E, 0x_10, 0x_C7, 0x_97, 0x_F6, 0x_DD, 0x_E5, 0x_85, 0x_77, 0x_A5, 0x_CC, 0x_44, 0x_C6, 0x_86,
		0x_F3, 0x_42, 0x_A7, 0x_A1, 0x_53, 0x_E9, 0x_76, 0x_54, 0x_BF, 0x_5A, 0x_CF, 0x_AD, 0x_26, 0x_CD, 0x_56,
		0x_8D, 0x_21, 0x_C0, 0x_A0, 0x_93, 0x_12, 0x_BB, 0x_6F, 0x_94, 0x_22, 0x_F5, 0x_B8, 0x_F2, 0x_63, 0x_51,
		0x_78, 0x_4F, 0x_E8, 0x_0E, 0x_61, 0x_4C, 0x_5F, 0x_F9, 0x_68, 0x_3A, 0x_E7, 0x_D3, 0x_B9, 0x_31, 0x_72,
		0x_AE, 0x_DF, 0x_FD, 0x_4D, 0x_EB, 0x_E1, 0x_45, 0x_A9, 0x_91, 0x_79, 0x_40, 0x_67, 0x_F7, 0x_D2, 0x_EE,
		0x_8E, 0x_87, 0x_07, 0x_2E, 0x_33, 0x_4A, 0x_15, 0x_48, 0x_6A, 0x_B6, 0x_C3, 0x_DA, 0x_01, 0x_38, 0x_A4,
		0x_7D, 0x_60, 0x_1F, 0x_FE, 0x_B1, 0x_A2, 0x_0F, 0x_30, 0x_80, 0x_17, 0x_C1, 0x_C9, 0x_D6, 0x_7B, 0x_55,
		0x_EA, 0x_ED, 0x_FB, 0x_28, 0x_3B, 0x_8F, 0x_A6, 0x_04, 0x_F8, 0x_82, 0x_8A, 0x_16, 0x_89, 0x_B4, 0x_1C,
		0x_39, 0x_52, 0x_E3, 0x_6E, 0x_3E, 0x_7F, 0x_AF, 0x_6D, 0x_D9, 0x_92, 0x_58, 0x_34, 0x_4E, 0x_B5, 0x_E2,
		0x_43, 0x_50, 0x_90, 0x_73, 0x_9D, 0x_05, 0x_47, 0x_9C, 0x_24, 0x_49, 0x_71, 0x_59, 0x_88,
	];

	helper(S, BASE, -26_541_314);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_890_386_500_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_890_386_500_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_AA,
		0x_A1, 0x_CD, 0x_8E, 0x_5D, 0x_F2, 0x_84, 0x_A7, 0x_CF, 0x_5C, 0x_7F, 0x_C7, 0x_CF, 0x_E0, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_F0, 0x_88, 0x_58, 0x_90, 0x_E5, 0x_32, 0x_C0, 0x_AC, 0x_49, 0x_2C, 0x_BB, 0x_E2, 0x_DA, 0x_DE, 0x_B8,
		0x_06, 0x_60, 0x_D5, 0x_01, 0x_84, 0x_87, 0x_E9, 0x_AB, 0x_35, 0x_B9, 0x_70, 0x_AF, 0x_15, 0x_C6, 0x_D0,
		0x_FA, 0x_3F, 0x_47, 0x_2E, 0x_14, 0x_A8, 0x_42, 0x_DB, 0x_34, 0x_FE, 0x_31, 0x_64, 0x_17, 0x_BE, 0x_D4,
		0x_18, 0x_10, 0x_4E, 0x_16, 0x_13, 0x_08, 0x_25, 0x_65, 0x_7C, 0x_D7, 0x_EA, 0x_CE, 0x_EE, 0x_05, 0x_53,
		0x_3C, 0x_86, 0x_26, 0x_03, 0x_6F, 0x_99, 0x_EF, 0x_4D, 0x_72, 0x_9E, 0x_5C, 0x_EC, 0x_E8, 0x_75, 0x_29,
		0x_AD, 0x_07, 0x_B5, 0x_04, 0x_A0, 0x_46, 0x_74, 0x_23, 0x_59, 0x_63, 0x_6A, 0x_55, 0x_B0, 0x_89, 0x_1E,
		0x_50, 0x_9B, 0x_27, 0x_A7, 0x_9D, 0x_F7, 0x_E0, 0x_3D, 0x_69, 0x_BC, 0x_B3, 0x_A6, 0x_71, 0x_9C, 0x_5E,
		0x_40, 0x_95, 0x_8E, 0x_19, 0x_E7, 0x_F2, 0x_A5, 0x_22, 0x_96, 0x_52, 0x_92, 0x_CF, 0x_36, 0x_B1, 0x_8B,
		0x_66, 0x_5A, 0x_CD, 0x_AA, 0x_F4, 0x_BD, 0x_F6, 0x_9A, 0x_D9, 0x_3A, 0x_73, 0x_6C, 0x_1C, 0x_4A, 0x_91,
		0x_8C, 0x_24, 0x_DC, 0x_A3, 0x_C4, 0x_6B, 0x_30, 0x_3B, 0x_7E, 0x_E4, 0x_DF, 0x_21, 0x_7F, 0x_2A, 0x_67,
		0x_48, 0x_D3, 0x_A4, 0x_FC, 0x_FB, 0x_ED, 0x_1B, 0x_C9, 0x_80, 0x_11, 0x_7B, 0x_E3, 0x_56, 0x_61, 0x_A1,
		0x_51, 0x_2F, 0x_F1, 0x_AE, 0x_38, 0x_33, 0x_4C, 0x_C3, 0x_4B, 0x_B7, 0x_45, 0x_93, 0x_B6, 0x_3E, 0x_B2,
		0x_7A, 0x_41, 0x_62, 0x_F5, 0x_BA, 0x_54, 0x_76, 0x_C7, 0x_FD, 0x_A9, 0x_C5, 0x_02, 0x_DD,
	];

	helper(S, BASE, -890_386_500);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_8_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_8_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_0F, 0x_2D, 0x_7D, 0x_9E, 0x_69, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_7A, 0x_A6, 0x_3A, 0x_B2, 0x_1E, 0x_17, 0x_2A, 0x_D1, 0x_0F, 0x_7F, 0x_C2, 0x_4F, 0x_D2, 0x_44, 0x_70,
		0x_A2, 0x_83, 0x_69, 0x_96, 0x_33, 0x_87, 0x_3B, 0x_4B, 0x_7C, 0x_A0, 0x_45, 0x_F9, 0x_E4, 0x_C3, 0x_53,
		0x_6C, 0x_B6, 0x_50, 0x_B9, 0x_4A, 0x_56, 0x_CC, 0x_BD, 0x_82, 0x_FA, 0x_76, 0x_AA, 0x_AC, 0x_90, 0x_1C,
		0x_4E, 0x_4C, 0x_42, 0x_9B, 0x_10, 0x_A8, 0x_60, 0x_79, 0x_F5, 0x_B7, 0x_D8, 0x_18, 0x_91, 0x_6A, 0x_CD,
		0x_02, 0x_B4, 0x_59, 0x_16, 0x_ED, 0x_78, 0x_AF, 0x_E0, 0x_5D, 0x_F1, 0x_77, 0x_9D, 0x_80, 0x_CE, 0x_C7,
		0x_39, 0x_22, 0x_E7, 0x_FC, 0x_62, 0x_74, 0x_0E, 0x_86, 0x_89, 0x_A1, 0x_C0, 0x_EF, 0x_E8, 0x_CB, 0x_EE,
		0x_21, 0x_3D, 0x_AD, 0x_EA, 0x_67, 0x_71, 0x_72, 0x_C6, 0x_F0, 0x_93, 0x_E6, 0x_E5, 0x_65, 0x_38, 0x_29,
		0x_14, 0x_08, 0x_7E, 0x_97, 0x_85, 0x_46, 0x_5F, 0x_55, 0x_2C, 0x_03, 0x_92, 0x_DC, 0x_E1, 0x_63, 0x_36,
		0x_13, 0x_25, 0x_CF, 0x_43, 0x_F7, 0x_75, 0x_E2, 0x_88, 0x_FE, 0x_7B, 0x_84, 0x_BF, 0x_A3, 0x_C8, 0x_1D,
		0x_57, 0x_C5, 0x_AE, 0x_DE, 0x_FB, 0x_99, 0x_58, 0x_B8, 0x_30, 0x_37, 0x_F6, 0x_C9, 0x_8A, 0x_FD, 0x_32,
		0x_BB, 0x_2F, 0x_48, 0x_8C, 0x_DD, 0x_12, 0x_05, 0x_64, 0x_47, 0x_07, 0x_41, 0x_81, 0x_5E, 0x_24, 0x_3E,
		0x_1B, 0x_D7, 0x_11, 0x_5A, 0x_C1, 0x_28, 0x_01, 0x_DA, 0x_E3, 0x_EB, 0x_B3, 0x_6F, 0x_73, 0x_D6, 0x_A4,
		0x_9A, 0x_DF, 0x_8F, 0x_D4, 0x_27, 0x_68, 0x_DB, 0x_B1, 0x_51, 0x_8E, 0x_F4, 0x_3C, 0x_6D, 0x_5C, 0x_D9,
		0x_15, 0x_B0, 0x_6E, 0x_35, 0x_4D, 0x_5B, 0x_9F, 0x_2E, 0x_54, 0x_EC, 0x_C4, 0x_52, 0x_31, 0x_AB, 0x_D3,
		0x_40, 0x_1F, 0x_FF, 0x_7D, 0x_F3, 0x_1A, 0x_98, 0x_A7, 0x_A5, 0x_8B, 0x_F2, 0x_D0, 0x_95, 0x_B5, 0x_9E,
		0x_34, 0x_A9, 0x_D5, 0x_E9, 0x_06, 0x_9C, 0x_BC, 0x_CA, 0x_66, 0x_04, 0x_BE, 0x_26, 0x_49, 0x_F8, 0x_23,
		0x_BA, 0x_6B, 0x_3F, 0x_94, 0x_19, 0x_8D, 0x_61,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_48_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_48_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_20,
		0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_09,
		0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_38, 0x_0A, 0x_DE, 0x_43, 0x_AD,
		0x_9E, 0x_53, 0x_A7, 0x_29, 0x_3F, 0x_56, 0x_63, 0x_A7, 0x_91, 0x_57, 0x_A9, 0x_DF, 0x_90, 0x_19, 0x_9C,
		0x_F7, 0x_F7, 0x_71, 0x_6A, 0x_2E, 0x_9C, 0x_7F, 0x_0E, 0x_D5, 0x_A2, 0x_4C, 0x_9B, 0x_A7, 0x_F3, 0x_8D,
		0x_3C, 0x_69, 0x_60, 0x_3A, 0x_F2, 0x_6A,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_FF, 0x_7F, 0x_0F, 0x_D8, 0x_7E, 0x_B2, 0x_1D, 0x_43, 0x_AA, 0x_59, 0x_75, 0x_CA, 0x_82, 0x_AC,
		0x_22, 0x_7B, 0x_67, 0x_6F, 0x_07, 0x_60, 0x_26, 0x_DB, 0x_C6, 0x_02, 0x_C2, 0x_25, 0x_63, 0x_F3, 0x_EE,
		0x_E7, 0x_16, 0x_3F, 0x_21, 0x_55, 0x_8B, 0x_3C, 0x_B4, 0x_7C, 0x_F6, 0x_CF, 0x_01, 0x_E3, 0x_08, 0x_A4,
		0x_56, 0x_76, 0x_10, 0x_38, 0x_66, 0x_BA, 0x_8E, 0x_47, 0x_18, 0x_D9, 0x_45, 0x_8A, 0x_5B, 0x_53, 0x_C3,
		0x_28, 0x_03, 0x_6B, 0x_74, 0x_D7, 0x_35, 0x_DE, 0x_61, 0x_DA, 0x_2E, 0x_FD, 0x_42, 0x_30, 0x_48, 0x_57,
		0x_31, 0x_84, 0x_13, 0x_4D, 0x_2A, 0x_C9, 0x_4A, 0x_A0, 0x_FB, 0x_70, 0x_49, 0x_72, 0x_96, 0x_9B, 0x_E6,
		0x_46, 0x_7A, 0x_5F, 0x_7D, 0x_90, 0x_1A, 0x_C1, 0x_BB, 0x_3A, 0x_A7, 0x_CC, 0x_44, 0x_DD, 0x_E5, 0x_B8,
		0x_3B, 0x_EB, 0x_B1, 0x_32, 0x_04, 0x_79, 0x_D3, 0x_33, 0x_5A, 0x_C4, 0x_17, 0x_BD, 0x_E9, 0x_F8, 0x_FE,
		0x_65, 0x_05, 0x_A8, 0x_AF, 0x_9C, 0x_54, 0x_A5, 0x_87, 0x_B7, 0x_1C, 0x_DF, 0x_11, 0x_86, 0x_9F, 0x_C5,
		0x_F9, 0x_F7, 0x_8F, 0x_A2, 0x_A1, 0x_ED, 0x_64, 0x_71, 0x_41, 0x_CB, 0x_24, 0x_0E, 0x_B0, 0x_14, 0x_40,
		0x_99, 0x_29, 0x_52, 0x_D2, 0x_77, 0x_80, 0x_D5, 0x_73, 0x_D1, 0x_AB, 0x_12, 0x_81, 0x_9E, 0x_6E, 0x_2F,
		0x_E2, 0x_8D, 0x_69, 0x_5C, 0x_4B, 0x_D4, 0x_93, 0x_5E, 0x_6A, 0x_BF, 0x_5D, 0x_C7, 0x_AD, 0x_EC, 0x_F2,
		0x_27, 0x_F0, 0x_23, 0x_A6, 0x_34, 0x_58, 0x_F1, 0x_3E, 0x_B6, 0x_A9, 0x_F4, 0x_37, 0x_92, 0x_97, 0x_94,
		0x_83, 0x_9A, 0x_FC, 0x_CE, 0x_A3, 0x_62, 0x_1B, 0x_4C, 0x_EF, 0x_B9, 0x_B5, 0x_89, 0x_CD, 0x_BE, 0x_98,
		0x_19, 0x_3D, 0x_6D, 0x_36, 0x_BC, 0x_E0, 0x_39, 0x_2C, 0x_F5, 0x_1F, 0x_B3, 0x_8C, 0x_68, 0x_9D, 0x_C8,
		0x_C0, 0x_6C, 0x_50, 0x_51, 0x_DC, 0x_78, 0x_AE, 0x_1E, 0x_D0, 0x_E8, 0x_D6, 0x_4F, 0x_88, 0x_95, 0x_91,
		0x_06, 0x_15, 0x_E1, 0x_E4, 0x_4E, 0x_EA, 0x_85,
	];

	helper(S, BASE, -48);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_692_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_692_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_6E, 0x_1F, 0x_20, 0x_1C, 0x_99, 0x_48, 0x_CE, 0x_56, 0x_D9, 0x_98, 0x_E6, 0x_BA, 0x_B1, 0x_BF,
		0x_63, 0x_52, 0x_FF, 0x_AE, 0x_38, 0x_65, 0x_5A, 0x_9D, 0x_4F, 0x_13, 0x_37, 0x_05, 0x_76, 0x_82, 0x_C9,
		0x_9E, 0x_E4, 0x_36, 0x_70, 0x_56, 0x_B4, 0x_1B, 0x_DB, 0x_0E, 0x_83, 0x_C2, 0x_8E, 0x_BE, 0x_35, 0x_1D,
		0x_60,
	];
	const BASE: &[u8] = &[
		0x_C5, 0x_49, 0x_6E, 0x_28, 0x_A0, 0x_6C, 0x_F3, 0x_3E, 0x_E4, 0x_39, 0x_33, 0x_54, 0x_D6, 0x_FE, 0x_71,
		0x_B1, 0x_2E, 0x_FA, 0x_2C, 0x_DC, 0x_78, 0x_6D, 0x_83, 0x_82, 0x_0F, 0x_4A, 0x_CC, 0x_01, 0x_42, 0x_15,
		0x_E7, 0x_6A, 0x_23, 0x_3F, 0x_48, 0x_85, 0x_D1, 0x_44, 0x_87, 0x_D0, 0x_AB, 0x_6F, 0x_97, 0x_5B, 0x_A7,
		0x_E8, 0x_E2, 0x_89, 0x_D5, 0x_69, 0x_21, 0x_75, 0x_02, 0x_AD, 0x_30, 0x_D2, 0x_3C, 0x_F4, 0x_55, 0x_32,
		0x_EB, 0x_86, 0x_4D, 0x_22, 0x_C4, 0x_5C, 0x_51, 0x_F9, 0x_B4, 0x_DB, 0x_61, 0x_B6, 0x_7B, 0x_05, 0x_8F,
		0x_9D, 0x_AA, 0x_13, 0x_88, 0x_CA, 0x_BB, 0x_1C, 0x_70, 0x_4F, 0x_62, 0x_58, 0x_79, 0x_DA, 0x_FD, 0x_9B,
		0x_F5, 0x_3A, 0x_3B, 0x_EE, 0x_CE, 0x_E1, 0x_72, 0x_F7, 0x_FB, 0x_A2, 0x_90, 0x_C8, 0x_7D, 0x_C0, 0x_31,
		0x_73, 0x_46, 0x_14, 0x_B8, 0x_9E, 0x_C3, 0x_5F, 0x_64, 0x_16, 0x_AE, 0x_AF, 0x_E5, 0x_38, 0x_25, 0x_8A,
		0x_41, 0x_8B, 0x_9F, 0x_1E, 0x_60, 0x_37, 0x_BA, 0x_DE, 0x_68, 0x_93, 0x_8D, 0x_11, 0x_1D, 0x_24, 0x_B0,
		0x_D7, 0x_DD, 0x_EA, 0x_E6, 0x_AC, 0x_10, 0x_92, 0x_9C, 0x_8E, 0x_1A, 0x_F1, 0x_7F, 0x_CD, 0x_96, 0x_7A,
		0x_50, 0x_47, 0x_A5, 0x_08, 0x_77, 0x_40, 0x_99, 0x_B9, 0x_A6, 0x_81, 0x_F2, 0x_80, 0x_9A, 0x_8C, 0x_CF,
		0x_06, 0x_2A, 0x_F8, 0x_EC, 0x_BD, 0x_18, 0x_F6, 0x_35, 0x_95, 0x_34, 0x_2F, 0x_D4, 0x_B5, 0x_C2, 0x_67,
		0x_DF, 0x_56, 0x_D8, 0x_12, 0x_ED, 0x_C7, 0x_27, 0x_63, 0x_07, 0x_3D, 0x_26, 0x_84, 0x_57, 0x_7C, 0x_4E,
		0x_1B, 0x_4C, 0x_43, 0x_1F, 0x_C9, 0x_E0, 0x_94, 0x_F0, 0x_D3, 0x_6B, 0x_A9, 0x_7E, 0x_98, 0x_B2, 0x_EF,
		0x_17, 0x_FF, 0x_A8, 0x_BC, 0x_76, 0x_4B, 0x_5E, 0x_B3, 0x_59, 0x_C1, 0x_36, 0x_52, 0x_03, 0x_45, 0x_E9,
		0x_19, 0x_91, 0x_5A, 0x_BE, 0x_29, 0x_A1, 0x_5D, 0x_D9, 0x_A4, 0x_04, 0x_E3, 0x_53, 0x_FC, 0x_66, 0x_0E,
		0x_65, 0x_C6, 0x_BF, 0x_74, 0x_CB, 0x_B7, 0x_A3,
	];

	helper(S, BASE, -692);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_2_789_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_2_789_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_20, 0x_0B,
		0x_09, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_A2,
		0x_D3, 0x_20, 0x_47, 0x_A5, 0x_C2, 0x_E3, 0x_70, 0x_44, 0x_B9, 0x_AB, 0x_A7, 0x_61, 0x_1A, 0x_A4, 0x_F9,
		0x_15, 0x_8D, 0x_D3, 0x_67, 0x_2A, 0x_41, 0x_D6, 0x_B2, 0x_76, 0x_66, 0x_03, 0x_87, 0x_DF, 0x_42, 0x_FE,
		0x_2E, 0x_34, 0x_92, 0x_BA, 0x_BD, 0x_5E, 0x_0F, 0x_AE, 0x_08, 0x_D8, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_F1, 0x_97, 0x_95, 0x_7B, 0x_DD, 0x_71, 0x_32, 0x_33, 0x_CF, 0x_53, 0x_A2, 0x_CE, 0x_FA, 0x_D8,
		0x_31, 0x_AC, 0x_E7, 0x_A7, 0x_AE, 0x_68, 0x_9F, 0x_EE, 0x_55, 0x_AB, 0x_39, 0x_80, 0x_8B, 0x_41, 0x_4B,
		0x_64, 0x_2F, 0x_35, 0x_EC, 0x_6F, 0x_F9, 0x_F6, 0x_5B, 0x_8D, 0x_BB, 0x_66, 0x_14, 0x_50, 0x_88, 0x_77,
		0x_DC, 0x_A8, 0x_61, 0x_94, 0x_3B, 0x_E4, 0x_57, 0x_C3, 0x_1B, 0x_25, 0x_E1, 0x_F0, 0x_F7, 0x_92, 0x_FD,
		0x_28, 0x_43, 0x_AF, 0x_D6, 0x_10, 0x_83, 0x_18, 0x_A9, 0x_02, 0x_6B, 0x_0E, 0x_8E, 0x_D3, 0x_21, 0x_F2,
		0x_EF, 0x_91, 0x_07, 0x_C2, 0x_E9, 0x_8F, 0x_3D, 0x_A1, 0x_A0, 0x_7C, 0x_EA, 0x_D9, 0x_59, 0x_70, 0x_29,
		0x_17, 0x_65, 0x_67, 0x_F3, 0x_60, 0x_3E, 0x_38, 0x_01, 0x_7A, 0x_FE, 0x_D5, 0x_56, 0x_A5, 0x_45, 0x_BA,
		0x_5C, 0x_93, 0x_BF, 0x_49, 0x_3F, 0x_7E, 0x_74, 0x_54, 0x_11, 0x_D4, 0x_C8, 0x_1C, 0x_75, 0x_4A, 0x_19,
		0x_86, 0x_8A, 0x_E0, 0x_EB, 0x_A4, 0x_1F, 0x_2C, 0x_B8, 0x_D0, 0x_BC, 0x_6A, 0x_1D, 0x_BD, 0x_C1, 0x_78,
		0x_B6, 0x_2A, 0x_B9, 0x_05, 0x_26, 0x_5F, 0x_9D, 0x_9C, 0x_23, 0x_0F, 0x_6C, 0x_9A, 0x_E6, 0x_46, 0x_1A,
		0x_9B, 0x_FC, 0x_C6, 0x_C5, 0x_7F, 0x_E8, 0x_51, 0x_B0, 0x_D2, 0x_A3, 0x_82, 0x_DB, 0x_BE, 0x_CB, 0x_15,
		0x_69, 0x_58, 0x_1E, 0x_CA, 0x_B5, 0x_04, 0x_B3, 0x_73, 0x_C7, 0x_27, 0x_16, 0x_72, 0x_44, 0x_48, 0x_42,
		0x_E2, 0x_D7, 0x_62, 0x_C9, 0x_89, 0x_98, 0x_7D, 0x_F5, 0x_4D, 0x_FF, 0x_B7, 0x_C4, 0x_DA, 0x_3A, 0x_87,
		0x_24, 0x_13, 0x_E3, 0x_B4, 0x_3C, 0x_22, 0x_96, 0x_79, 0x_76, 0x_63, 0x_5A, 0x_4F, 0x_9E, 0x_03, 0x_A6,
		0x_90, 0x_D1, 0x_E5, 0x_B2, 0x_AA, 0x_ED, 0x_4C, 0x_CC, 0x_F4, 0x_DE, 0x_81, 0x_47, 0x_FB, 0x_84, 0x_2E,
		0x_8C, 0x_5E, 0x_CD, 0x_08, 0x_F8, 0x_4E, 0x_40, 0x_36, 0x_30, 0x_12, 0x_06, 0x_85, 0x_B1, 0x_DF, 0x_AD,
		0x_6D, 0x_37, 0x_99, 0x_C0, 0x_5D, 0x_6E, 0x_52,
	];

	helper(S, BASE, -2_789);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_55_846_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_55_846_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_01, 0x_E5, 0x_0D, 0x_87, 0x_9F, 0x_E5, 0x_F3, 0x_61,
		0x_0F, 0x_2F, 0x_5A, 0x_3A, 0x_77, 0x_50, 0x_2A, 0x_5B, 0x_48, 0x_34, 0x_44, 0x_F0, 0x_87, 0x_0E, 0x_2F,
		0x_B5, 0x_DE, 0x_41, 0x_3D, 0x_7C, 0x_CA, 0x_EB, 0x_05, 0x_52, 0x_84,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_BB, 0x_57, 0x_C9, 0x_BC, 0x_F2, 0x_C7, 0x_5F, 0x_D4, 0x_2E, 0x_65, 0x_3B, 0x_12, 0x_E3, 0x_43,
		0x_CA, 0x_3E, 0x_F6, 0x_7A, 0x_FA, 0x_B6, 0x_D3, 0x_83, 0x_B3, 0x_E5, 0x_CF, 0x_24, 0x_C1, 0x_85, 0x_44,
		0x_4F, 0x_2C, 0x_9B, 0x_82, 0x_7B, 0x_FF, 0x_B1, 0x_41, 0x_94, 0x_BD, 0x_8C, 0x_15, 0x_A0, 0x_D6, 0x_54,
		0x_ED, 0x_FE, 0x_89, 0x_EF, 0x_05, 0x_F9, 0x_F0, 0x_55, 0x_E2, 0x_33, 0x_D8, 0x_1C, 0x_8B, 0x_96, 0x_A3,
		0x_1B, 0x_63, 0x_92, 0x_76, 0x_A4, 0x_FB, 0x_D1, 0x_7C, 0x_9F, 0x_87, 0x_1E, 0x_30, 0x_9D, 0x_DB, 0x_B9,
		0x_CC, 0x_3F, 0x_8A, 0x_45, 0x_73, 0x_16, 0x_A6, 0x_04, 0x_BF, 0x_52, 0x_CE, 0x_93, 0x_4E, 0x_08, 0x_5C,
		0x_7F, 0x_FC, 0x_95, 0x_E7, 0x_9C, 0x_34, 0x_7E, 0x_50, 0x_32, 0x_61, 0x_2A, 0x_4B, 0x_D7, 0x_6C, 0x_C0,
		0x_17, 0x_AF, 0x_6E, 0x_1A, 0x_31, 0x_64, 0x_35, 0x_49, 0x_62, 0x_88, 0x_42, 0x_A5, 0x_02, 0x_8E, 0x_59,
		0x_60, 0x_21, 0x_C5, 0x_70, 0x_4A, 0x_D2, 0x_F1, 0x_06, 0x_58, 0x_71, 0x_9E, 0x_4D, 0x_99, 0x_19, 0x_46,
		0x_EA, 0x_81, 0x_D9, 0x_84, 0x_BA, 0x_E6, 0x_B0, 0x_86, 0x_77, 0x_A1, 0x_E0, 0x_26, 0x_68, 0x_AB, 0x_5A,
		0x_8D, 0x_6B, 0x_7D, 0x_69, 0x_36, 0x_F4, 0x_C3, 0x_B4, 0x_29, 0x_11, 0x_EB, 0x_A9, 0x_D0, 0x_E8, 0x_E4,
		0x_CB, 0x_DA, 0x_CD, 0x_F3, 0x_AC, 0x_10, 0x_DF, 0x_AE, 0x_5B, 0x_91, 0x_F7, 0x_A8, 0x_C6, 0x_13, 0x_51,
		0x_C8, 0x_98, 0x_B7, 0x_6A, 0x_22, 0x_B5, 0x_0E, 0x_97, 0x_67, 0x_25, 0x_EE, 0x_3A, 0x_23, 0x_38, 0x_E9,
		0x_DC, 0x_78, 0x_1F, 0x_28, 0x_74, 0x_40, 0x_14, 0x_DE, 0x_FD, 0x_AA, 0x_F5, 0x_D5, 0x_A2, 0x_AD, 0x_3C,
		0x_B8, 0x_C2, 0x_48, 0x_1D, 0x_37, 0x_47, 0x_39, 0x_79, 0x_6D, 0x_18, 0x_4C, 0x_72, 0x_A7, 0x_EC, 0x_B2,
		0x_BE, 0x_01, 0x_2F, 0x_0F, 0x_C4, 0x_F8, 0x_DD, 0x_5E, 0x_6F, 0x_03, 0x_66, 0x_3D, 0x_75, 0x_9A, 0x_E1,
		0x_56, 0x_90, 0x_80, 0x_8F, 0x_07, 0x_27, 0x_53,
	];

	helper(S, BASE, -55_846);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_388_222_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_388_222_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_0C,
		0x_20, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0B,
		0x_0A, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_81, 0x_A7, 0x_84, 0x_2D, 0x_2E, 0x_0E, 0x_3D, 0x_4B, 0x_6B, 0x_75, 0x_E4, 0x_48,
		0x_6B, 0x_C0, 0x_97, 0x_BF, 0x_5E, 0x_CA, 0x_98, 0x_D8, 0x_A5, 0x_B0, 0x_06, 0x_D6, 0x_C5, 0x_22, 0x_C3,
		0x_8D, 0x_4E, 0x_BC, 0x_56, 0x_88, 0x_E1, 0x_8A, 0x_F8, 0x_8E, 0x_14, 0x_23, 0x_BF, 0x_50,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_5A, 0x_F1, 0x_8A, 0x_E4, 0x_A8, 0x_81, 0x_62, 0x_AA, 0x_CE, 0x_36, 0x_6B, 0x_B4, 0x_B7, 0x_46,
		0x_30, 0x_E0, 0x_1A, 0x_05, 0x_5B, 0x_FB, 0x_D8, 0x_50, 0x_2C, 0x_F7, 0x_E6, 0x_92, 0x_23, 0x_EC, 0x_D9,
		0x_68, 0x_53, 0x_1E, 0x_C0, 0x_1B, 0x_CF, 0x_96, 0x_4C, 0x_E2, 0x_1F, 0x_74, 0x_02, 0x_9D, 0x_60, 0x_27,
		0x_41, 0x_BD, 0x_DD, 0x_C4, 0x_03, 0x_AB, 0x_94, 0x_15, 0x_5C, 0x_07, 0x_47, 0x_86, 0x_45, 0x_B1, 0x_BE,
		0x_F8, 0x_9E, 0x_BA, 0x_C5, 0x_8F, 0x_79, 0x_A2, 0x_72, 0x_35, 0x_EB, 0x_4E, 0x_FD, 0x_D0, 0x_91, 0x_5F,
		0x_97, 0x_D2, 0x_7B, 0x_5E, 0x_17, 0x_5D, 0x_F6, 0x_A4, 0x_EF, 0x_C9, 0x_88, 0x_6A, 0x_71, 0x_CC, 0x_A7,
		0x_14, 0x_9A, 0x_2F, 0x_F5, 0x_44, 0x_6F, 0x_F0, 0x_32, 0x_AD, 0x_6C, 0x_8D, 0x_D6, 0x_CD, 0x_E9, 0x_67,
		0x_DE, 0x_C7, 0x_8B, 0x_D4, 0x_D7, 0x_C1, 0x_58, 0x_16, 0x_33, 0x_06, 0x_8E, 0x_D1, 0x_7C, 0x_83, 0x_3B,
		0x_08, 0x_82, 0x_BC, 0x_DC, 0x_69, 0x_66, 0x_85, 0x_BF, 0x_A0, 0x_4B, 0x_34, 0x_FA, 0x_F9, 0x_93, 0x_B9,
		0x_38, 0x_49, 0x_0F, 0x_DA, 0x_4F, 0x_D5, 0x_BB, 0x_A6, 0x_CA, 0x_B8, 0x_11, 0x_E8, 0x_4A, 0x_7F, 0x_55,
		0x_B5, 0x_65, 0x_4D, 0x_C3, 0x_ED, 0x_89, 0x_7E, 0x_57, 0x_2E, 0x_01, 0x_87, 0x_D3, 0x_3A, 0x_18, 0x_AE,
		0x_3E, 0x_B2, 0x_29, 0x_8C, 0x_43, 0x_12, 0x_51, 0x_C2, 0x_F2, 0x_25, 0x_48, 0x_EE, 0x_9C, 0x_FE, 0x_E1,
		0x_37, 0x_40, 0x_56, 0x_24, 0x_7D, 0x_84, 0x_3D, 0x_6E, 0x_90, 0x_13, 0x_0E, 0x_FC, 0x_E7, 0x_A1, 0x_61,
		0x_AC, 0x_B6, 0x_10, 0x_1C, 0x_7A, 0x_E3, 0x_59, 0x_AF, 0x_9F, 0x_21, 0x_C8, 0x_3F, 0x_54, 0x_42, 0x_63,
		0x_99, 0x_98, 0x_95, 0x_73, 0x_A3, 0x_28, 0x_EA, 0x_04, 0x_3C, 0x_26, 0x_FF, 0x_80, 0x_E5, 0x_A9, 0x_77,
		0x_2A, 0x_39, 0x_75, 0x_76, 0x_70, 0x_B3, 0x_64, 0x_78, 0x_DF, 0x_9B, 0x_F4, 0x_22, 0x_6D, 0x_C6, 0x_31,
		0x_DB, 0x_1D, 0x_B0, 0x_19, 0x_F3, 0x_CB, 0x_A5,
	];

	helper(S, BASE, -388_222);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_1_574_693_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_1_574_693_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_09,
		0x_09, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_A2, 0x_92, 0x_2C, 0x_2D, 0x_AB, 0x_AE, 0x_4F, 0x_03, 0x_30, 0x_BA, 0x_B5,
		0x_7B, 0x_60,
	];
	const BASE: &[u8] = &[
		0x_73, 0x_60, 0x_4B, 0x_3D, 0x_37, 0x_45, 0x_CF, 0x_A1, 0x_A4, 0x_C9, 0x_38, 0x_80, 0x_14, 0x_DE, 0x_0E,
		0x_56, 0x_8A, 0x_7C, 0x_D2, 0x_B3, 0x_7B, 0x_1C, 0x_48, 0x_02, 0x_9C, 0x_A2, 0x_3B, 0x_87, 0x_9E, 0x_63,
		0x_FE, 0x_05, 0x_F8, 0x_33, 0x_4D, 0x_D8, 0x_94, 0x_34, 0x_E9, 0x_74, 0x_72, 0x_DC, 0x_18, 0x_EA, 0x_59,
		0x_C6, 0x_76, 0x_26, 0x_27, 0x_90, 0x_E7, 0x_1E, 0x_8C, 0x_F7, 0x_BA, 0x_5B, 0x_EF, 0x_B8, 0x_C0, 0x_2E,
		0x_C2, 0x_7A, 0x_29, 0x_CD, 0x_43, 0x_EC, 0x_47, 0x_F6, 0x_2C, 0x_61, 0x_21, 0x_88, 0x_96, 0x_5F, 0x_3E,
		0x_17, 0x_E5, 0x_4E, 0x_F4, 0x_91, 0x_16, 0x_30, 0x_9A, 0x_12, 0x_BB, 0x_BD, 0x_01, 0x_97, 0x_D1, 0x_F3,
		0x_E3, 0x_8E, 0x_A3, 0x_3A, 0x_65, 0x_C4, 0x_39, 0x_03, 0x_67, 0x_6C, 0x_B2, 0x_E6, 0x_11, 0x_8D, 0x_64,
		0x_84, 0x_95, 0x_CA, 0x_52, 0x_41, 0x_CB, 0x_7F, 0x_FF, 0x_E1, 0x_58, 0x_1F, 0x_C1, 0x_04, 0x_A8, 0x_1A,
		0x_B0, 0x_86, 0x_42, 0x_4A, 0x_5E, 0x_FD, 0x_70, 0x_4C, 0x_57, 0x_8B, 0x_BE, 0x_08, 0x_62, 0x_78, 0x_D0,
		0x_DB, 0x_22, 0x_D4, 0x_66, 0x_15, 0x_40, 0x_31, 0x_13, 0x_5C, 0x_10, 0x_06, 0x_75, 0x_98, 0x_C7, 0x_68,
		0x_D5, 0x_BF, 0x_28, 0x_4F, 0x_E8, 0x_1D, 0x_79, 0x_FC, 0x_A6, 0x_CC, 0x_6D, 0x_6B, 0x_2A, 0x_1B, 0x_71,
		0x_A7, 0x_44, 0x_7D, 0x_82, 0x_BC, 0x_50, 0x_9B, 0x_6A, 0x_AB, 0x_77, 0x_2F, 0x_C8, 0x_07, 0x_A0, 0x_7E,
		0x_35, 0x_CE, 0x_99, 0x_89, 0x_46, 0x_AA, 0x_85, 0x_54, 0x_F0, 0x_EB, 0x_FA, 0x_B4, 0x_51, 0x_0F, 0x_EE,
		0x_B6, 0x_D7, 0x_D6, 0x_36, 0x_3F, 0x_92, 0x_19, 0x_A9, 0x_AF, 0x_93, 0x_8F, 0x_5A, 0x_E0, 0x_DD, 0x_49,
		0x_F1, 0x_6F, 0x_9F, 0x_55, 0x_DF, 0x_9D, 0x_B1, 0x_B7, 0x_C5, 0x_25, 0x_83, 0x_23, 0x_3C, 0x_F9, 0x_53,
		0x_D3, 0x_F5, 0x_B9, 0x_DA, 0x_69, 0x_F2, 0x_24, 0x_A5, 0x_5D, 0x_D9, 0x_32, 0x_E4, 0x_FB, 0x_81, 0x_C3,
		0x_6E, 0x_AE, 0x_B5, 0x_AD, 0x_ED, 0x_E2, 0x_AC,
	];

	helper(S, BASE, -1_574_693);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_53_636_027_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_53_636_027_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_20,
		0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_CA, 0x_07, 0x_A1, 0x_8B, 0x_0D, 0x_02, 0x_70, 0x_62, 0x_07,
		0x_4D, 0x_25, 0x_23, 0x_A9, 0x_CD, 0x_13, 0x_33, 0x_48, 0x_3E, 0x_FB, 0x_FF, 0x_D7, 0x_2F, 0x_FA, 0x_8A,
		0x_24, 0x_2F, 0x_90, 0x_4A, 0x_47, 0x_9B, 0x_73, 0x_E8, 0x_75, 0x_5B, 0x_DA, 0x_F5, 0x_B2, 0x_FD, 0x_A1,
		0x_26, 0x_88, 0x_E0, 0x_41, 0x_0F, 0x_BC, 0x_4E, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_B9, 0x_1B, 0x_CA, 0x_B8, 0x_64, 0x_3B, 0x_9F, 0x_E1, 0x_FF, 0x_B7, 0x_F9, 0x_67, 0x_08, 0x_0F,
		0x_3A, 0x_48, 0x_ED, 0x_5B, 0x_7A, 0x_F4, 0x_7C, 0x_A2, 0x_0E, 0x_E0, 0x_51, 0x_D6, 0x_8E, 0x_E8, 0x_E5,
		0x_BB, 0x_E4, 0x_75, 0x_BC, 0x_A7, 0x_3E, 0x_A1, 0x_18, 0x_DF, 0x_C5, 0x_13, 0x_FC, 0x_A0, 0x_93, 0x_DC,
		0x_74, 0x_10, 0x_27, 0x_30, 0x_3D, 0x_19, 0x_1A, 0x_8C, 0x_78, 0x_6B, 0x_98, 0x_2A, 0x_31, 0x_CC, 0x_A4,
		0x_E7, 0x_17, 0x_28, 0x_DD, 0x_F6, 0x_BA, 0x_EB, 0x_2E, 0x_C3, 0x_04, 0x_C2, 0x_F0, 0x_6F, 0x_53, 0x_9D,
		0x_86, 0x_33, 0x_A5, 0x_82, 0x_69, 0x_97, 0x_8F, 0x_85, 0x_42, 0x_4D, 0x_87, 0x_36, 0x_55, 0x_02, 0x_05,
		0x_C7, 0x_47, 0x_CD, 0x_39, 0x_03, 0x_6E, 0x_B4, 0x_EF, 0x_44, 0x_77, 0x_2C, 0x_B5, 0x_4A, 0x_06, 0x_32,
		0x_12, 0x_E3, 0x_A8, 0x_F5, 0x_EA, 0x_73, 0x_B2, 0x_23, 0x_84, 0x_D1, 0x_FD, 0x_E6, 0x_AD, 0x_6A, 0x_DA,
		0x_D5, 0x_34, 0x_59, 0x_70, 0x_F1, 0x_CE, 0x_D8, 0x_1D, 0x_D4, 0x_90, 0x_C9, 0x_79, 0x_11, 0x_E9, 0x_FE,
		0x_92, 0x_68, 0x_25, 0x_07, 0x_61, 0x_C8, 0x_4E, 0x_50, 0x_72, 0x_B0, 0x_A3, 0x_76, 0x_BF, 0x_CB, 0x_66,
		0x_6C, 0x_5F, 0x_94, 0x_56, 0x_F3, 0x_58, 0x_21, 0x_FB, 0x_63, 0x_9A, 0x_D2, 0x_54, 0x_7F, 0x_24, 0x_96,
		0x_38, 0x_6D, 0x_DB, 0x_62, 0x_99, 0x_57, 0x_43, 0x_AF, 0x_E2, 0x_AB, 0x_1C, 0x_D9, 0x_CF, 0x_F7, 0x_A9,
		0x_83, 0x_B3, 0x_EE, 0x_FA, 0x_7E, 0x_41, 0x_C0, 0x_4F, 0x_52, 0x_4B, 0x_F8, 0x_C4, 0x_9C, 0x_DE, 0x_4C,
		0x_65, 0x_8D, 0x_C6, 0x_7D, 0x_BE, 0x_B1, 0x_71, 0x_9B, 0x_D7, 0x_1F, 0x_3C, 0x_5D, 0x_81, 0x_60, 0x_A6,
		0x_35, 0x_AC, 0x_80, 0x_BD, 0x_26, 0x_5C, 0x_AE, 0x_8A, 0x_15, 0x_5E, 0x_3F, 0x_45, 0x_9E, 0x_88, 0x_8B,
		0x_14, 0x_01, 0x_22, 0x_89, 0x_49, 0x_40, 0x_F2, 0x_16, 0x_95, 0x_1E, 0x_C1, 0x_7B, 0x_5A, 0x_46, 0x_D3,
		0x_EC, 0x_91, 0x_B6, 0x_D0, 0x_37, 0x_29, 0x_AA,
	];

	helper(S, BASE, -53_636_027);
}
// endregion
// region: s_has_whitespaces_and_signs_and_minus_637_292_654_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_minus_637_292_654_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0A,
		0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_44, 0x_C5, 0x_3D, 0x_A7, 0x_0A, 0x_5A, 0x_BF, 0x_F2, 0x_0F,
		0x_35, 0x_19, 0x_BF, 0x_2C, 0x_8F, 0x_EA, 0x_56, 0x_8C, 0x_D2, 0x_13, 0x_DD, 0x_7A, 0x_69, 0x_DF, 0x_C6,
		0x_E2, 0x_9D, 0x_8D, 0x_B3, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_4F, 0x_A8, 0x_49, 0x_80, 0x_6D, 0x_F2, 0x_B6, 0x_61, 0x_AC, 0x_D9, 0x_3A, 0x_5E, 0x_72, 0x_9D,
		0x_BB, 0x_62, 0x_43, 0x_8B, 0x_F6, 0x_3E, 0x_C7, 0x_C4, 0x_B2, 0x_DF, 0x_73, 0x_28, 0x_42, 0x_57, 0x_E8,
		0x_47, 0x_94, 0x_D7, 0x_C0, 0x_CA, 0x_F4, 0x_89, 0x_9F, 0x_BA, 0x_A9, 0x_45, 0x_E3, 0x_44, 0x_85, 0x_74,
		0x_7F, 0x_7B, 0x_8F, 0x_7A, 0x_8D, 0x_A7, 0x_B5, 0x_9C, 0x_33, 0x_D5, 0x_26, 0x_6F, 0x_D0, 0x_6A, 0x_87,
		0x_C1, 0x_DE, 0x_15, 0x_4C, 0x_81, 0x_E9, 0x_B0, 0x_07, 0x_19, 0x_34, 0x_9A, 0x_C5, 0x_D3, 0x_B3, 0x_BE,
		0x_B1, 0x_5B, 0x_64, 0x_98, 0x_03, 0x_92, 0x_CD, 0x_93, 0x_56, 0x_08, 0x_FE, 0x_0F, 0x_99, 0x_DA, 0x_E5,
		0x_31, 0x_CC, 0x_54, 0x_11, 0x_B9, 0x_78, 0x_18, 0x_F5, 0x_10, 0x_FD, 0x_24, 0x_91, 0x_B8, 0x_88, 0x_8A,
		0x_71, 0x_36, 0x_AD, 0x_A2, 0x_35, 0x_A6, 0x_DB, 0x_F0, 0x_D8, 0x_ED, 0x_46, 0x_EC, 0x_FB, 0x_EE, 0x_BC,
		0x_2E, 0x_1B, 0x_27, 0x_37, 0x_1F, 0x_63, 0x_DC, 0x_2F, 0x_65, 0x_6C, 0x_75, 0x_69, 0x_52, 0x_1D, 0x_21,
		0x_01, 0x_D1, 0x_2A, 0x_E6, 0x_A5, 0x_82, 0x_EA, 0x_E0, 0x_48, 0x_AA, 0x_5A, 0x_DD, 0x_A4, 0x_EF, 0x_1A,
		0x_14, 0x_D4, 0x_C3, 0x_CE, 0x_4E, 0x_97, 0x_3C, 0x_51, 0x_12, 0x_6B, 0x_AB, 0x_D2, 0x_23, 0x_66, 0x_CF,
		0x_FF, 0x_95, 0x_BD, 0x_05, 0x_1C, 0x_A3, 0x_29, 0x_EB, 0x_E4, 0x_59, 0x_50, 0x_55, 0x_C6, 0x_4B, 0x_5F,
		0x_06, 0x_CB, 0x_90, 0x_A1, 0x_9B, 0x_4D, 0x_67, 0x_39, 0x_38, 0x_77, 0x_8C, 0x_22, 0x_E1, 0x_0E, 0x_1E,
		0x_60, 0x_5C, 0x_AF, 0x_9E, 0x_5D, 0x_FA, 0x_4A, 0x_6E, 0x_04, 0x_B7, 0x_84, 0x_96, 0x_58, 0x_8E, 0x_BF,
		0x_F3, 0x_FC, 0x_41, 0x_F9, 0x_E2, 0x_B4, 0x_40, 0x_3D, 0x_7E, 0x_86, 0x_A0, 0x_F8, 0x_30, 0x_C9, 0x_25,
		0x_79, 0x_7C, 0x_7D, 0x_76, 0x_3F, 0x_32, 0x_3B, 0x_AE, 0x_02, 0x_83, 0x_2C, 0x_17, 0x_F1, 0x_53, 0x_70,
		0x_68, 0x_16, 0x_F7, 0x_E7, 0x_D6, 0x_C8, 0x_13,
	];

	helper(S, BASE, -637_292_654);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_6_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_6_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_20,
		0x_0B, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_20, 0x_0B,
		0x_20, 0x_09, 0x_0D, 0x_2D, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78, 0x_78,
		0x_78, 0x_78, 0x_78, 0x_A2, 0x_A2, 0x_78, 0x_CE, 0x_A2, 0x_A2, 0x_A2, 0x_78, 0x_78, 0x_A2, 0x_A2, 0x_78,
		0x_A2, 0x_A2, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_78, 0x_A2,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_61_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_61_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_20,
		0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_2D, 0x_E1, 0x_E1, 0x_E1,
		0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1,
		0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1,
		0x_E1, 0x_E1, 0x_E1, 0x_87, 0x_87, 0x_87, 0x_87, 0x_E1, 0x_87, 0x_DC, 0x_E1, 0x_E1, 0x_87, 0x_87, 0x_E1,
		0x_87, 0x_87, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_87,
	];

	helper(S, BASE, -61);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_689_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_689_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_0D,
		0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_2D, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4,
		0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_C4, 0x_82, 0x_C4,
		0x_82, 0x_C4, 0x_82, 0x_82, 0x_C4, 0x_C4, 0x_C4, 0x_82, 0x_55, 0x_C4, 0x_C4, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_C4, 0x_82,
	];

	helper(S, BASE, -689);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_356_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_356_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_2D, 0x_5F, 0x_BA, 0x_5F, 0x_5F, 0x_BA, 0x_5F, 0x_5F, 0x_BA, 0x_BA, 0x_5F, 0x_BA, 0x_5F,
		0x_5F, 0x_F0, 0x_5F, 0x_5F, 0x_BA, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_BA, 0x_5F, 0x_BA, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_BA,
	];

	helper(S, BASE, -2_356);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_90_102_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_90_102_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_0A,
		0x_0C, 0x_2D, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF,
		0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_BF, 0x_F9, 0x_BF, 0x_F9, 0x_BF, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9,
		0x_F9, 0x_F9, 0x_F9, 0x_BF, 0x_F9, 0x_F9, 0x_BF, 0x_EE, 0x_F9, 0x_F9, 0x_BF, 0x_BF, 0x_BF, 0x_F9, 0x_BF,
		0x_F9, 0x_BF, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_BF, 0x_BF, 0x_BF, 0x_F9, 0x_F9, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_BF, 0x_F9,
	];

	helper(S, BASE, -90_102);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_672_413_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_672_413_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0D, 0x_0D,
		0x_0D, 0x_2D, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F,
		0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_5D, 0x_7F, 0x_5D, 0x_7F, 0x_7F,
		0x_5D, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_5D, 0x_7F, 0x_5D, 0x_7F, 0x_7F, 0x_5D, 0x_5D, 0x_5D, 0x_7F, 0x_5D,
		0x_A1, 0x_7F, 0x_5D, 0x_7F, 0x_7F, 0x_7F, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_7F, 0x_5D,
		0x_5D, 0x_7F, 0x_5D, 0x_5D, 0x_7F, 0x_7F, 0x_7F, 0x_5D, 0x_5D, 0x_5D, 0x_7F, 0x_7F, 0x_7F, 0x_7F, 0x_7F,
		0x_5D, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_7F, 0x_5D,
	];

	helper(S, BASE, -672_413);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_8_937_401_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_8_937_401_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_20,
		0x_20, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_2D, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_5E, 0x_30, 0x_30, 0x_30, 0x_5E, 0x_30, 0x_30, 0x_30, 0x_30, 0x_5E, 0x_30, 0x_5E, 0x_5E, 0x_5E, 0x_5E,
		0x_5E, 0x_5E, 0x_30, 0x_5E, 0x_5E, 0x_5E, 0x_30, 0x_30, 0x_5E, 0x_47, 0x_30, 0x_5E, 0x_30, 0x_5E, 0x_5E,
		0x_5E, 0x_30, 0x_30, 0x_30, 0x_30, 0x_5E, 0x_30, 0x_5E, 0x_5E, 0x_30, 0x_5E, 0x_30, 0x_5E, 0x_5E, 0x_30,
		0x_5E, 0x_5E, 0x_5E, 0x_30, 0x_30, 0x_30, 0x_5E, 0x_30, 0x_30, 0x_30,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_5E,
	];

	helper(S, BASE, -8_937_401);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_19_763_271_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_19_763_271_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_20, 0x_2D, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF,
		0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF,
		0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_ED, 0x_DF, 0x_DF, 0x_ED, 0x_DF, 0x_ED, 0x_ED, 0x_DF,
		0x_ED, 0x_ED, 0x_DF, 0x_DF, 0x_ED, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_ED, 0x_DF, 0x_DF, 0x_DF, 0x_ED,
		0x_ED, 0x_ED, 0x_A0, 0x_ED, 0x_ED, 0x_DF, 0x_DF, 0x_ED, 0x_DF, 0x_ED, 0x_DF, 0x_ED, 0x_ED, 0x_DF, 0x_DF,
		0x_ED,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_ED,
	];

	helper(S, BASE, -19_763_271);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_678_132_492_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_678_132_492_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_0B,
		0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_20,
		0x_09, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_2D, 0x_42, 0x_42, 0x_42,
		0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42,
		0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_ED, 0x_42, 0x_ED, 0x_42, 0x_42, 0x_42, 0x_42, 0x_ED, 0x_ED, 0x_42,
		0x_ED, 0x_42, 0x_ED, 0x_ED, 0x_42, 0x_ED, 0x_ED, 0x_ED, 0x_ED, 0x_42, 0x_ED, 0x_ED, 0x_42, 0x_42, 0x_42,
		0x_42, 0x_ED, 0x_ED, 0x_42, 0x_42, 0x_B5, 0x_ED, 0x_ED, 0x_ED, 0x_42, 0x_ED, 0x_ED, 0x_42, 0x_42, 0x_42,
		0x_ED, 0x_42, 0x_ED, 0x_ED, 0x_ED, 0x_42, 0x_42, 0x_ED, 0x_ED, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42,
		0x_ED, 0x_42, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_ED,
	];

	helper(S, BASE, -678_132_492);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_7_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_7_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0D, 0x_2D, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7,
		0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7,
		0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_35,
		0x_2C, 0x_55, 0x_2C, 0x_A7, 0x_A7, 0x_2C, 0x_2C, 0x_35, 0x_2C, 0x_A7, 0x_35, 0x_35, 0x_2C, 0x_35, 0x_35,
		0x_35, 0x_35, 0x_35, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_35, 0x_A7, 0x_35, 0x_35, 0x_2C, 0x_A7, 0x_A7,
		0x_35, 0x_35, 0x_35, 0x_2C, 0x_2C, 0x_A7, 0x_2C, 0x_2C, 0x_35, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_2C, 0x_35,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_59_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_59_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0C,
		0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_0C, 0x_0C,
		0x_09, 0x_2D, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2,
		0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2,
		0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_47, 0x_D2, 0x_64, 0x_47, 0x_44, 0x_D2, 0x_64, 0x_64, 0x_D2, 0x_64, 0x_D2,
		0x_D2, 0x_D2, 0x_47, 0x_64, 0x_D2, 0x_64, 0x_D2, 0x_64, 0x_47, 0x_D2, 0x_D2, 0x_64, 0x_D2, 0x_47, 0x_47,
		0x_64,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_64, 0x_47,
	];

	helper(S, BASE, -59);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_500_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_500_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0A,
		0x_20, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_2D, 0x_02, 0x_02, 0x_02,
		0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02,
		0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02, 0x_02,
		0x_02, 0x_02, 0x_D9, 0x_02, 0x_02, 0x_31, 0x_31, 0x_D9, 0x_C7, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_02, 0x_31, 0x_D9,
	];

	helper(S, BASE, -500);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_815_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_815_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_2D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_56, 0x_8D, 0x_C7, 0x_56, 0x_C7, 0x_8D, 0x_C7, 0x_56, 0x_AD, 0x_56, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_56, 0x_C7,
	];

	helper(S, BASE, -2_815);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_62_694_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_62_694_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_2D, 0x_2C, 0x_2C, 0x_2C, 0x_88, 0x_2C, 0x_2C, 0x_88, 0x_72, 0x_2C, 0x_2C, 0x_2C, 0x_2C,
		0x_2C, 0x_2C, 0x_42, 0x_72, 0x_88, 0x_2C, 0x_72, 0x_72, 0x_72, 0x_72, 0x_88, 0x_88, 0x_72, 0x_2C, 0x_2C,
		0x_2C, 0x_2C, 0x_2C, 0x_2C, 0x_88, 0x_2C, 0x_72, 0x_72, 0x_88, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_2C, 0x_88, 0x_72,
	];

	helper(S, BASE, -62_694);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_309_390_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_309_390_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_09,
		0x_0A, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0B,
		0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0B, 0x_2D, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19,
		0x_19, 0x_E9, 0x_1E, 0x_19, 0x_1E, 0x_19, 0x_E9, 0x_E9, 0x_19, 0x_E9, 0x_1E, 0x_1E, 0x_19, 0x_80, 0x_1E,
		0x_E9, 0x_E9, 0x_E9, 0x_1E, 0x_E9, 0x_E9, 0x_1E, 0x_E9, 0x_E9, 0x_E9, 0x_1E, 0x_1E, 0x_E9, 0x_1E, 0x_E9,
		0x_E9, 0x_E9, 0x_1E, 0x_E9, 0x_E9, 0x_E9, 0x_E9, 0x_1E, 0x_19, 0x_E9, 0x_1E, 0x_19, 0x_19, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_E9, 0x_1E,
	];

	helper(S, BASE, -309_390);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_1_805_241_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_1_805_241_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_2D, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_C8, 0x_17, 0x_C8,
		0x_17, 0x_C8, 0x_F1, 0x_17, 0x_C8, 0x_17, 0x_F1, 0x_F1, 0x_F1, 0x_C8, 0x_17, 0x_95, 0x_C8, 0x_17, 0x_C8,
		0x_C8, 0x_F1, 0x_17, 0x_F1, 0x_F1, 0x_C8, 0x_17, 0x_C8, 0x_F1, 0x_C8, 0x_17, 0x_F1, 0x_F1, 0x_C8, 0x_F1,
		0x_C8, 0x_C8, 0x_C8, 0x_17, 0x_17, 0x_C8, 0x_F1, 0x_F1, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_F1, 0x_17, 0x_F1,
		0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_17, 0x_C8, 0x_17, 0x_17,
	];
	const BASE: &[u8] = &[
		0x_17, 0x_C8, 0x_F1,
	];

	helper(S, BASE, -1_805_241);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_88_370_534_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_88_370_534_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0A,
		0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_09,
		0x_09, 0x_0B, 0x_0A, 0x_2D, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7,
		0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_40, 0x_A7, 0x_A7, 0x_83, 0x_83, 0x_A7, 0x_40, 0x_83, 0x_40, 0x_A7, 0x_A7,
		0x_83, 0x_40, 0x_A7, 0x_40, 0x_A7, 0x_40, 0x_85, 0x_A7, 0x_83, 0x_A7, 0x_40,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_83, 0x_40,
	];

	helper(S, BASE, -88_370_534);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_583_666_358_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_583_666_358_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_20,
		0x_0C, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_09,
		0x_20, 0x_20, 0x_0C, 0x_2D, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_E1, 0x_CD, 0x_CD, 0x_CD, 0x_E1, 0x_68, 0x_CD, 0x_E1, 0x_E1, 0x_E1, 0x_CD, 0x_68, 0x_68,
		0x_68, 0x_E1, 0x_50, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_E1, 0x_CD, 0x_E1, 0x_68, 0x_E1, 0x_CD, 0x_68,
		0x_68, 0x_E1, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_CD, 0x_68, 0x_E1,
	];

	helper(S, BASE, -583_666_358);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_4_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_4_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_20,
		0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_09, 0x_0A,
		0x_20, 0x_20, 0x_09, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_2D, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_7F, 0x_4D, 0x_7F, 0x_F2, 0x_CB, 0x_F2, 0x_7F,
		0x_F2, 0x_CB, 0x_F2, 0x_F2, 0x_CB, 0x_61, 0x_61, 0x_CB, 0x_F5, 0x_7F, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_CB, 0x_61, 0x_F5, 0x_7F,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_80_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_80_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_0A,
		0x_0A, 0x_20, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0C,
		0x_20, 0x_0D, 0x_20, 0x_0A, 0x_2D, 0x_35, 0x_5F, 0x_6A, 0x_35, 0x_93, 0x_6A, 0x_64, 0x_35, 0x_5F, 0x_6A,
		0x_35, 0x_5F, 0x_6A, 0x_43, 0x_43,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_6A, 0x_43, 0x_5F, 0x_64,
	];

	helper(S, BASE, -80);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_146_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_146_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0C, 0x_0A,
		0x_0B, 0x_0A, 0x_2D, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4,
		0x_B4, 0x_91, 0x_B4, 0x_B7, 0x_91, 0x_1F, 0x_91, 0x_91, 0x_D1, 0x_B7, 0x_B7, 0x_B7, 0x_4D, 0x_4D, 0x_91,
		0x_4D, 0x_4D, 0x_B7, 0x_B7, 0x_D1, 0x_4D, 0x_4D, 0x_91, 0x_B7, 0x_B7, 0x_D1, 0x_D1, 0x_D1, 0x_B4, 0x_91,
		0x_B4, 0x_4D, 0x_91, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_91, 0x_4D, 0x_4D, 0x_4D, 0x_B7,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_91, 0x_4D, 0x_D1, 0x_B7,
	];

	helper(S, BASE, -146);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_7_849_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_7_849_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0D,
		0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0B,
		0x_2D, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84,
		0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_84, 0x_56, 0x_56, 0x_56, 0x_17,
		0x_23, 0x_23, 0x_09, 0x_56, 0x_0E, 0x_84, 0x_23, 0x_17, 0x_84, 0x_84, 0x_84, 0x_17, 0x_56, 0x_23, 0x_56,
		0x_0E, 0x_17, 0x_84, 0x_84, 0x_23, 0x_56, 0x_23, 0x_56, 0x_23, 0x_56,
	];
	const BASE: &[u8] = &[
		0x_84, 0x_0E, 0x_56, 0x_17, 0x_23,
	];

	helper(S, BASE, -7_849);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_22_850_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_22_850_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_2D, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3,
		0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3,
		0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_2A, 0x_35, 0x_2A, 0x_35, 0x_86, 0x_E3, 0x_E3,
		0x_E2, 0x_86, 0x_A9, 0x_E3, 0x_35, 0x_E3, 0x_E3, 0x_2A, 0x_86, 0x_A9, 0x_E3, 0x_35, 0x_E3, 0x_86, 0x_86,
		0x_86,
	];
	const BASE: &[u8] = &[
		0x_E3, 0x_2A, 0x_35, 0x_A9, 0x_86,
	];

	helper(S, BASE, -22_850);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_238_110_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_238_110_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_2D, 0x_E1, 0x_E1, 0x_E1, 0x_E1,
		0x_68, 0x_E1, 0x_6C, 0x_E1, 0x_CA, 0x_CA, 0x_A9, 0x_E1, 0x_7F, 0x_E1, 0x_6C, 0x_6C, 0x_E1, 0x_68, 0x_E1,
		0x_A9, 0x_A9, 0x_E1, 0x_A9, 0x_CA, 0x_CA, 0x_A9, 0x_CA, 0x_E1, 0x_CA, 0x_CA, 0x_6C, 0x_A9, 0x_A9, 0x_CA,
		0x_E1, 0x_6C, 0x_CA, 0x_CA, 0x_CA, 0x_6C, 0x_68, 0x_E1, 0x_A9, 0x_CA, 0x_6C, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_6C, 0x_A9, 0x_68, 0x_CA,
	];

	helper(S, BASE, -238_110);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_725_269_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_725_269_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_09,
		0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_09,
		0x_0A, 0x_0A, 0x_2D, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_FF, 0x_FF, 0x_06, 0x_06, 0x_56, 0x_7E, 0x_56, 0x_7E, 0x_75, 0x_06, 0x_3B, 0x_56, 0x_7E,
		0x_06, 0x_7E, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_FF, 0x_56, 0x_75, 0x_06,
	];

	helper(S, BASE, -2_725_269);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_80_922_986_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_80_922_986_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0B,
		0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_2D, 0x_E1, 0x_E1, 0x_E1,
		0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1,
		0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_26, 0x_E8, 0x_26,
		0x_38, 0x_E1, 0x_A7, 0x_E1, 0x_26, 0x_E8, 0x_A7, 0x_38, 0x_26, 0x_6E, 0x_26, 0x_A7, 0x_E8, 0x_E8, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_26, 0x_38, 0x_E8, 0x_A7,
	];

	helper(S, BASE, -80_922_986);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_802_153_959_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_802_153_959_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_09,
		0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_20,
		0x_09, 0x_0A, 0x_0C, 0x_2D, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_C8, 0x_72, 0x_C9, 0x_B3, 0x_C8, 0x_72, 0x_B3,
		0x_B3, 0x_9A, 0x_C9, 0x_C9, 0x_72, 0x_C9, 0x_9A, 0x_56, 0x_C8, 0x_72, 0x_B3, 0x_C8, 0x_C8, 0x_72, 0x_C8,
		0x_C8, 0x_C8, 0x_C8, 0x_9A, 0x_9A, 0x_9A, 0x_C9, 0x_72, 0x_72, 0x_B3, 0x_B3, 0x_C8, 0x_9A, 0x_B3, 0x_72,
		0x_72, 0x_C9, 0x_72, 0x_9A, 0x_C8, 0x_C8, 0x_9A, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_C8, 0x_C9, 0x_B3, 0x_72, 0x_9A,
	];

	helper(S, BASE, -802_153_959);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_7_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_7_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0A,
		0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_20,
		0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_2D, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E, 0x_7E,
		0x_7E, 0x_9D, 0x_7E, 0x_A4, 0x_F2, 0x_7E, 0x_9D, 0x_5B, 0x_A7, 0x_F2, 0x_CE, 0x_A7, 0x_CE, 0x_5B, 0x_F2,
		0x_7E, 0x_7E, 0x_A3, 0x_5B, 0x_7E, 0x_A7, 0x_CE, 0x_A7, 0x_7E, 0x_9D, 0x_CE, 0x_A7, 0x_5B, 0x_9D, 0x_A3,
		0x_9D, 0x_9D, 0x_9D, 0x_CE, 0x_CE, 0x_9D, 0x_5B, 0x_CE, 0x_7E, 0x_CE,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_9D, 0x_5B, 0x_A3, 0x_F2, 0x_CE, 0x_A7,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_14_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_14_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_0B,
		0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_09, 0x_0D,
		0x_0D, 0x_0A, 0x_2D, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_28, 0x_AB, 0x_57, 0x_C7, 0x_28, 0x_7B, 0x_A9, 0x_AB,
		0x_7B, 0x_E2, 0x_C7, 0x_7B, 0x_C7, 0x_C7, 0x_C7, 0x_28, 0x_7B, 0x_7B, 0x_A3, 0x_AB, 0x_AB, 0x_C7, 0x_A3,
		0x_E2, 0x_A3, 0x_AB, 0x_C7, 0x_E2, 0x_C7, 0x_A3, 0x_A9, 0x_7B, 0x_E2, 0x_AB, 0x_28, 0x_C7, 0x_A9, 0x_E2,
		0x_A3, 0x_C7, 0x_28, 0x_C7, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_E2, 0x_28, 0x_A9, 0x_C7, 0x_7B, 0x_A3,
	];

	helper(S, BASE, -14);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_246_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_246_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_2D, 0x_A3, 0x_A3,
		0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_A3, 0x_82, 0x_A3, 0x_24, 0x_99, 0x_82, 0x_7B,
		0x_B4, 0x_A3, 0x_B4, 0x_A3,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_24, 0x_6D, 0x_89, 0x_7B, 0x_82, 0x_B4,
	];

	helper(S, BASE, -246);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_9_621_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_9_621_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_09, 0x_2D, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50,
		0x_50, 0x_50, 0x_7C, 0x_50, 0x_50, 0x_88, 0x_34, 0x_1E, 0x_B2, 0x_B2, 0x_88, 0x_15, 0x_50, 0x_7C, 0x_50,
		0x_50, 0x_7C, 0x_7C, 0x_7C, 0x_34, 0x_13, 0x_34, 0x_34, 0x_B2, 0x_50, 0x_15, 0x_B2, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_13, 0x_88, 0x_34, 0x_7C, 0x_B2, 0x_15,
	];

	helper(S, BASE, -9_621);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_40_829_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_40_829_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_09,
		0x_20, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_20, 0x_20,
		0x_09, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0D, 0x_20, 0x_2D, 0x_1D, 0x_1D, 0x_1D, 0x_1D,
		0x_1D, 0x_4C, 0x_05, 0x_1D, 0x_1D, 0x_DC, 0x_D0, 0x_F6, 0x_4C, 0x_4C, 0x_70, 0x_D0, 0x_1D, 0x_1D, 0x_1D,
		0x_1E, 0x_05, 0x_70,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_DC, 0x_4C, 0x_05, 0x_1E, 0x_D0, 0x_70,
	];

	helper(S, BASE, -40_829);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_841_033_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_841_033_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_20,
		0x_0B, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0C,
		0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_2D, 0x_96, 0x_96, 0x_96, 0x_96,
		0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_81, 0x_96, 0x_81, 0x_96, 0x_81, 0x_A6, 0x_A6, 0x_F1,
		0x_F4, 0x_81, 0x_2A, 0x_F1, 0x_81, 0x_F1, 0x_F1, 0x_F1, 0x_03, 0x_03, 0x_A6, 0x_81,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_81, 0x_2A, 0x_36, 0x_F1, 0x_03, 0x_A6,
	];

	helper(S, BASE, -841_033);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_4_540_109_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_4_540_109_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_0B, 0x_0B,
		0x_0A, 0x_2D, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32,
		0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32,
		0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_FA, 0x_A0, 0x_3A, 0x_32, 0x_50, 0x_A0,
		0x_3B, 0x_32, 0x_F6, 0x_3B, 0x_10, 0x_10, 0x_10, 0x_50, 0x_FA, 0x_10, 0x_10, 0x_FA, 0x_32, 0x_32, 0x_A0,
		0x_50, 0x_3A, 0x_A0, 0x_3A, 0x_FA, 0x_A0, 0x_A0, 0x_32, 0x_10, 0x_50, 0x_50, 0x_FA, 0x_10, 0x_3A, 0x_32,
		0x_32, 0x_32, 0x_10, 0x_32, 0x_FA, 0x_3B, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_10, 0x_3B, 0x_A0, 0x_3A, 0x_FA, 0x_50,
	];

	helper(S, BASE, -4_540_109);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_75_120_688_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_75_120_688_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_2D, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A,
		0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_62, 0x_24, 0x_2A, 0x_62, 0x_21, 0x_55, 0x_62,
		0x_A2, 0x_62, 0x_24, 0x_CC, 0x_2A, 0x_73, 0x_73, 0x_A2, 0x_24, 0x_A2, 0x_2A, 0x_2A, 0x_24, 0x_55, 0x_24,
		0x_73, 0x_24, 0x_2A, 0x_73, 0x_73, 0x_A2, 0x_55, 0x_73, 0x_2A, 0x_55, 0x_73, 0x_24, 0x_A2, 0x_2A, 0x_55,
		0x_73, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_62, 0x_73, 0x_21, 0x_55, 0x_A2, 0x_24,
	];

	helper(S, BASE, -75_120_688);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_707_183_749_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_707_183_749_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_20,
		0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0B,
		0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_2D, 0x_51, 0x_51, 0x_51,
		0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51,
		0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_C0, 0x_9A, 0x_9A, 0x_93, 0x_93, 0x_49,
		0x_BE, 0x_BF, 0x_BF, 0x_C0, 0x_49, 0x_A8, 0x_C0, 0x_BF, 0x_C0, 0x_49, 0x_93, 0x_93, 0x_9A, 0x_93, 0x_BF,
		0x_9A, 0x_BF, 0x_BE, 0x_51, 0x_9A, 0x_BF, 0x_49, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_BF, 0x_C0, 0x_9A, 0x_93, 0x_BE, 0x_49,
	];

	helper(S, BASE, -707_183_749);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_9_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_9_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_0A,
		0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_2D,
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_E7, 0x_5B, 0x_CB, 0x_E7,
		0x_55, 0x_0E, 0x_FC, 0x_FC, 0x_8D, 0x_3E, 0x_B6, 0x_FC, 0x_CB, 0x_3E, 0x_EB, 0x_78, 0x_CB, 0x_0E, 0x_99,
		0x_EB, 0x_CB, 0x_3E, 0x_78, 0x_0E, 0x_E7, 0x_FC, 0x_55, 0x_FC, 0x_55, 0x_55, 0x_8D, 0x_8D, 0x_99, 0x_78,
		0x_0E, 0x_EB, 0x_99, 0x_99, 0x_B6, 0x_8D, 0x_EB, 0x_E7, 0x_B6, 0x_CB,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_3E, 0x_8D, 0x_EB, 0x_CB, 0x_78, 0x_0E, 0x_FC, 0x_B6, 0x_E7, 0x_99,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_93_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_93_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0C, 0x_0A,
		0x_20, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_09,
		0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_2D, 0x_26, 0x_E3, 0x_28, 0x_EB,
		0x_2C, 0x_8F, 0x_8A, 0x_28, 0x_2C, 0x_F3, 0x_8F, 0x_8A, 0x_8A, 0x_26, 0x_D5, 0x_6E, 0x_8F, 0x_2C, 0x_0F,
		0x_D5, 0x_1E, 0x_D5, 0x_F3, 0x_28, 0x_6E, 0x_D5, 0x_6E, 0x_8F, 0x_2C, 0x_0F, 0x_D5, 0x_26, 0x_28, 0x_6E,
	];
	const BASE: &[u8] = &[
		0x_26, 0x_F3, 0x_1E, 0x_8A, 0x_6E, 0x_28, 0x_0F, 0x_8F, 0x_E3, 0x_D5, 0x_2C,
	];

	helper(S, BASE, -93);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_163_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_163_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_0B,
		0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_2D, 0x_33, 0x_33, 0x_33, 0x_B8, 0x_92, 0x_17, 0x_FE, 0x_B8, 0x_92,
		0x_92, 0x_33, 0x_16, 0x_33, 0x_17, 0x_78, 0x_21, 0x_33, 0x_B8, 0x_D5, 0x_17, 0x_92, 0x_D6, 0x_92, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_B8, 0x_21, 0x_92, 0x_78, 0x_16, 0x_D6, 0x_10, 0x_F9, 0x_17, 0x_D5,
	];

	helper(S, BASE, -163);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_3_139_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_3_139_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_2D, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_4A, 0x_C7, 0x_94, 0x_61, 0x_57, 0x_4A, 0x_15, 0x_61, 0x_68, 0x_61,
		0x_15, 0x_68, 0x_4A, 0x_08, 0x_83, 0x_08, 0x_FA, 0x_5A, 0x_5A, 0x_08, 0x_15, 0x_5A, 0x_15, 0x_83, 0x_C7,
		0x_FA, 0x_11, 0x_68, 0x_94, 0x_08, 0x_94, 0x_11, 0x_83, 0x_FA, 0x_11, 0x_68, 0x_68, 0x_08, 0x_FA, 0x_83,
		0x_5A, 0x_15, 0x_83, 0x_5A, 0x_5A,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_11, 0x_4A, 0x_C7, 0x_61, 0x_5A, 0x_68, 0x_83, 0x_08, 0x_15, 0x_94,
	];

	helper(S, BASE, -3_139);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_80_126_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_80_126_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_2D, 0x_F3,
		0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_F3,
		0x_F3, 0x_F3, 0x_F3, 0x_F3, 0x_58, 0x_58, 0x_FD, 0x_FD, 0x_FD, 0x_50, 0x_94, 0x_4C, 0x_A6, 0x_A6, 0x_FD,
		0x_B9, 0x_94, 0x_19, 0x_19, 0x_94, 0x_BB, 0x_FD, 0x_94, 0x_BB, 0x_74, 0x_FD, 0x_BB, 0x_F3, 0x_A6, 0x_58,
		0x_F3, 0x_F3, 0x_B9, 0x_4C, 0x_F3, 0x_94, 0x_19, 0x_F3, 0x_4C, 0x_B9, 0x_74, 0x_74, 0x_A6, 0x_BB, 0x_74,
		0x_74, 0x_BB,
	];
	const BASE: &[u8] = &[
		0x_F3, 0x_19, 0x_FD, 0x_94, 0x_4C, 0x_58, 0x_A6, 0x_74, 0x_A2, 0x_B9, 0x_BB,
	];

	helper(S, BASE, -80_126);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_726_849_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_726_849_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_2D, 0x_EC, 0x_EC, 0x_EC, 0x_EC,
		0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_EC,
		0x_EC, 0x_EC, 0x_EC, 0x_EC, 0x_C3, 0x_21, 0x_7B, 0x_B1, 0x_EC, 0x_7E, 0x_05, 0x_7B, 0x_7B, 0x_7E, 0x_39,
		0x_39, 0x_B1, 0x_39, 0x_C3, 0x_9E, 0x_7B, 0x_C3, 0x_7B, 0x_90, 0x_EC, 0x_90, 0x_7E, 0x_39, 0x_EC, 0x_7B,
		0x_B1, 0x_21, 0x_B1, 0x_9E, 0x_A3, 0x_21, 0x_21, 0x_9E, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_EC, 0x_B1, 0x_7E, 0x_A3, 0x_C3, 0x_21, 0x_A1, 0x_7B, 0x_39, 0x_9E, 0x_90,
	];

	helper(S, BASE, -726_849);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_4_592_684_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_4_592_684_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_2D, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32,
		0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_18, 0x_25, 0x_8E,
		0x_17, 0x_25, 0x_32, 0x_FD, 0x_6D, 0x_CF, 0x_25, 0x_B6, 0x_32, 0x_18, 0x_B6, 0x_B6, 0x_18, 0x_18, 0x_B6,
		0x_C1, 0x_17, 0x_CF, 0x_FD, 0x_CF, 0x_FD, 0x_CF, 0x_CF, 0x_FD, 0x_8E, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_CF, 0x_18, 0x_C1, 0x_B6, 0x_8E, 0x_25, 0x_17, 0x_FD, 0x_30, 0x_63,
	];

	helper(S, BASE, -4_592_684);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_99_709_964_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_99_709_964_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_20,
		0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_2D, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_ED, 0x_9C, 0x_4E, 0x_9C, 0x_4E, 0x_C6, 0x_4E, 0x_5A, 0x_13, 0x_5A,
		0x_16, 0x_44, 0x_16, 0x_16, 0x_3F, 0x_44, 0x_5A, 0x_16, 0x_1B, 0x_B2, 0x_5A, 0x_9C, 0x_5A, 0x_CE, 0x_16,
		0x_1B, 0x_4E, 0x_9C, 0x_B2, 0x_5A, 0x_1B, 0x_16, 0x_4E, 0x_C6, 0x_5A, 0x_CE, 0x_B2, 0x_C6, 0x_16, 0x_9C,
		0x_CE, 0x_CE, 0x_5A, 0x_1B, 0x_B2, 0x_1B, 0x_16, 0x_16, 0x_ED,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_9C, 0x_5A, 0x_4E, 0x_44, 0x_ED, 0x_C6, 0x_CE, 0x_B2, 0x_1B, 0x_16,
	];

	helper(S, BASE, -99_709_964);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_509_319_376_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_509_319_376_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_20,
		0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_09, 0x_2D, 0x_57, 0x_CD, 0x_19, 0x_53, 0x_30,
		0x_30, 0x_CD, 0x_CD, 0x_57, 0x_30, 0x_AD, 0x_19, 0x_88, 0x_69, 0x_57, 0x_88, 0x_E3, 0x_5C, 0x_CD, 0x_69,
		0x_53, 0x_CD, 0x_23, 0x_53, 0x_CD, 0x_88, 0x_69, 0x_5C, 0x_88, 0x_23, 0x_53, 0x_69, 0x_5C, 0x_23, 0x_5C,
		0x_19, 0x_23, 0x_69, 0x_E3, 0x_E3, 0x_30, 0x_5C, 0x_57, 0x_E6, 0x_5C, 0x_19, 0x_19, 0x_69, 0x_E3, 0x_19,
	];
	const BASE: &[u8] = &[
		0x_57, 0x_53, 0x_CD, 0x_E3, 0x_19, 0x_30, 0x_23, 0x_5C, 0x_E6, 0x_69, 0x_88,
	];

	helper(S, BASE, -509_319_376);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_7_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_7_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0B, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0B, 0x_0B,
		0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_2D, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C,
		0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_9C, 0x_A9, 0x_BA, 0x_60, 0x_FF, 0x_92, 0x_92, 0x_A3,
	];
	const BASE: &[u8] = &[
		0x_9C, 0x_CB, 0x_60, 0x_E1, 0x_2A, 0x_BC, 0x_A3, 0x_A9, 0x_79, 0x_DA, 0x_FF, 0x_92, 0x_02,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_76_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_76_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0B,
		0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_09, 0x_0A, 0x_2D, 0x_5E,
		0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E,
		0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_13, 0x_86, 0x_7A, 0x_86, 0x_49,
		0x_BC, 0x_34, 0x_5E, 0x_86, 0x_B8, 0x_E2, 0x_34, 0x_13, 0x_C2, 0x_5E, 0x_5E, 0x_E2,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_B8, 0x_23, 0x_DC, 0x_34, 0x_13, 0x_49, 0x_C9, 0x_79, 0x_E2, 0x_C2, 0x_86, 0x_BC,
	];

	helper(S, BASE, -76);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_771_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_771_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_0B,
		0x_09, 0x_0D, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0A, 0x_0B,
		0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_2D, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_7F, 0x_FA, 0x_7F, 0x_88, 0x_65, 0x_7F,
		0x_65, 0x_36, 0x_03, 0x_2E, 0x_B2, 0x_FD, 0x_F4, 0x_7F, 0x_36, 0x_B2, 0x_7F, 0x_B2, 0x_7F, 0x_FA, 0x_B2,
		0x_FD, 0x_65, 0x_30, 0x_7F, 0x_DD, 0x_F4, 0x_30, 0x_DD, 0x_2E,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_36, 0x_30, 0x_2E, 0x_7F, 0x_FD, 0x_DD, 0x_FA, 0x_65, 0x_B2, 0x_03, 0x_C4, 0x_51,
	];

	helper(S, BASE, -771);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_866_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_866_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_0A,
		0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_2D, 0x_14, 0x_14,
		0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_14, 0x_1A,
		0x_A0, 0x_D6, 0x_93, 0x_FE, 0x_1D, 0x_93, 0x_14, 0x_95, 0x_1D, 0x_93, 0x_86, 0x_14, 0x_14, 0x_93, 0x_D6,
	];
	const BASE: &[u8] = &[
		0x_14, 0x_1A, 0x_2C, 0x_A0, 0x_FB, 0x_1D, 0x_93, 0x_8E, 0x_95, 0x_86, 0x_C1, 0x_7E, 0x_D6,
	];

	helper(S, BASE, -2_866);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_77_800_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_77_800_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_20,
		0x_0B, 0x_0D, 0x_0C, 0x_2D, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC,
		0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_DC, 0x_40, 0x_CC,
		0x_96, 0x_1A, 0x_FA, 0x_A0, 0x_3C, 0x_D7, 0x_DC, 0x_1A, 0x_CC, 0x_DC, 0x_3C, 0x_1A, 0x_7B, 0x_CC, 0x_DC,
		0x_40, 0x_FA, 0x_FA, 0x_40, 0x_1A, 0x_CC, 0x_55, 0x_CC, 0x_DC,
	];
	const BASE: &[u8] = &[
		0x_DC, 0x_DA, 0x_40, 0x_7B, 0x_1A, 0x_96, 0x_55, 0x_3C, 0x_FA, 0x_CC, 0x_D7, 0x_8A, 0x_FD,
	];

	helper(S, BASE, -77_800);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_797_412_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_797_412_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_09,
		0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_2D, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A,
		0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_1B, 0x_1F,
		0x_5F, 0x_98, 0x_BB, 0x_BB, 0x_EF, 0x_A8, 0x_5F, 0x_9A, 0x_1F, 0x_23, 0x_23, 0x_9A, 0x_F9, 0x_E7, 0x_3C,
		0x_F9, 0x_9A, 0x_5F, 0x_23, 0x_30, 0x_1B, 0x_F8, 0x_30, 0x_9A, 0x_F9, 0x_98, 0x_23, 0x_30, 0x_1F, 0x_A8,
		0x_E7, 0x_F8, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_1F, 0x_1B, 0x_30, 0x_A8, 0x_BB, 0x_23, 0x_F9, 0x_E7, 0x_F8, 0x_3C, 0x_5F, 0x_98,
	];

	helper(S, BASE, -797_412);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_8_749_172_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_8_749_172_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_09,
		0x_0D, 0x_2D, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_FD, 0x_C3, 0x_35, 0x_19,
		0x_D3, 0x_D3, 0x_4F, 0x_4F, 0x_B8, 0x_C3, 0x_62, 0x_A3, 0x_A3, 0x_19, 0x_35, 0x_62, 0x_D3, 0x_B3, 0x_77,
		0x_E2, 0x_77, 0x_9C, 0x_FD, 0x_C3, 0x_D3, 0x_62, 0x_FD, 0x_35, 0x_62, 0x_77, 0x_E2, 0x_44, 0x_9C, 0x_77,
		0x_D3, 0x_4F, 0x_B3, 0x_C3, 0x_62, 0x_E2, 0x_4F, 0x_77, 0x_44, 0x_19, 0x_9C, 0x_77, 0x_D3, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_FD, 0x_C3, 0x_A3, 0x_4F, 0x_D3, 0x_62, 0x_E2, 0x_19, 0x_B3, 0x_9C, 0x_35, 0x_44, 0x_77,
	];

	helper(S, BASE, -8_749_172);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_21_893_298_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_21_893_298_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0A, 0x_2D, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_07, 0x_8D, 0x_12, 0x_D7, 0x_5C,
		0x_5C, 0x_6A, 0x_93, 0x_07, 0x_01, 0x_12, 0x_6A, 0x_8D,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_5C, 0x_D5, 0x_B8, 0x_07, 0x_01, 0x_8D, 0x_D7, 0x_CE, 0x_DD, 0x_16, 0x_6A, 0x_12,
	];

	helper(S, BASE, -21_893_298);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_901_421_422_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_901_421_422_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0D,
		0x_0D, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_09,
		0x_20, 0x_20, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_2D, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF,
		0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_AF, 0x_B6,
		0x_B6, 0x_50, 0x_92, 0x_52, 0x_F0, 0x_59, 0x_FE, 0x_98, 0x_5A, 0x_59, 0x_F5, 0x_59, 0x_98, 0x_5E, 0x_59,
		0x_98, 0x_5E, 0x_94, 0x_94, 0x_98, 0x_B6, 0x_98, 0x_98, 0x_52, 0x_94, 0x_92, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_AF, 0x_B6, 0x_5E, 0x_F0, 0x_50, 0x_98, 0x_59, 0x_FE, 0x_A4, 0x_92, 0x_52, 0x_F5, 0x_94,
	];

	helper(S, BASE, -901_421_422);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0C, 0x_20,
		0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_20,
		0x_0D, 0x_0A, 0x_0C, 0x_2D, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8,
		0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8,
		0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8,
		0x_A8, 0x_17, 0x_6C, 0x_04, 0x_B0, 0x_68, 0x_17, 0x_E6, 0x_7D, 0x_A1, 0x_52, 0x_17, 0x_17, 0x_04, 0x_04,
		0x_EF, 0x_01, 0x_1A, 0x_A1, 0x_02, 0x_52, 0x_68, 0x_EF, 0x_A1, 0x_A8, 0x_17, 0x_68, 0x_01, 0x_17, 0x_A8,
		0x_32, 0x_04, 0x_02, 0x_05, 0x_EF, 0x_04, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_1A, 0x_17, 0x_EF, 0x_04, 0x_8B, 0x_02, 0x_7D, 0x_D4, 0x_52, 0x_24, 0x_32, 0x_68, 0x_E6, 0x_6B,
		0x_05, 0x_01, 0x_A1, 0x_B0,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_79_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_79_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0B,
		0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0B,
		0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_2D, 0x_39, 0x_39,
		0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_39, 0x_D3,
		0x_78, 0x_8A, 0x_78, 0x_E0, 0x_39, 0x_22, 0x_67, 0x_22, 0x_F7, 0x_2C, 0x_44, 0x_D3, 0x_E4, 0x_39, 0x_F0,
		0x_E4, 0x_E4, 0x_1B, 0x_F7, 0x_C5, 0x_BF, 0x_1F, 0x_C5, 0x_22, 0x_1F, 0x_AA, 0x_7E, 0x_E0, 0x_39, 0x_F0,
	];
	const BASE: &[u8] = &[
		0x_39, 0x_2C, 0x_F7, 0x_78, 0x_D3, 0x_44, 0x_1B, 0x_F0, 0x_C5, 0x_7E, 0x_E4, 0x_67, 0x_BF, 0x_AA, 0x_22,
		0x_1F, 0x_CE, 0x_E0, 0x_E5,
	];

	helper(S, BASE, -79);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_452_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_452_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_2D, 0x_E5,
		0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_0F, 0x_AF, 0x_F9, 0x_BA, 0x_C7, 0x_C7, 0x_A5, 0x_C7,
		0x_65, 0x_1D, 0x_D5, 0x_9B, 0x_E5, 0x_C7, 0x_1D, 0x_A0, 0x_F7, 0x_E5, 0x_18, 0x_AF, 0x_F9, 0x_F7, 0x_C7,
		0x_F6, 0x_D5, 0x_DD, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_0F, 0x_C1, 0x_1D, 0x_AF, 0x_43, 0x_18, 0x_F7, 0x_65, 0x_A5, 0x_9B, 0x_DD, 0x_F6, 0x_D5, 0x_CD,
		0x_F9, 0x_5C, 0x_C7, 0x_A0,
	];

	helper(S, BASE, -452);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_3_625_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_3_625_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0B, 0x_0B,
		0x_20, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0A,
		0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_2D, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_75, 0x_27, 0x_AF, 0x_42, 0x_72, 0x_18, 0x_18, 0x_75, 0x_72, 0x_AF, 0x_72, 0x_69, 0x_E2, 0x_BF, 0x_C9,
		0x_69, 0x_AB, 0x_C9, 0x_75, 0x_E2, 0x_C9, 0x_7D, 0x_8B, 0x_18, 0x_8A, 0x_8A, 0x_8B, 0x_7D, 0x_69, 0x_E2,
		0x_18,
	];
	const BASE: &[u8] = &[
		0x_27, 0x_18, 0x_9A, 0x_69, 0x_3F, 0x_72, 0x_AB, 0x_74, 0x_31, 0x_8A, 0x_75, 0x_C9, 0x_7D, 0x_8B, 0x_E2,
		0x_AF, 0x_77, 0x_BF, 0x_EC,
	];

	helper(S, BASE, -3_625);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_45_921_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_45_921_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0C,
		0x_2D, 0x_80, 0x_80, 0x_80, 0x_80, 0x_45, 0x_6C, 0x_11, 0x_5D, 0x_28, 0x_E3, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_69, 0x_57, 0x_11, 0x_68, 0x_96, 0x_45, 0x_83, 0x_E3, 0x_ED, 0x_53, 0x_B2, 0x_BF, 0x_6C, 0x_B3,
		0x_70, 0x_F7, 0x_5D, 0x_86,
	];

	helper(S, BASE, -45_921);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_489_232_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_489_232_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_0B,
		0x_2D, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_10, 0x_10, 0x_10, 0x_10, 0x_77, 0x_CD, 0x_4A, 0x_79, 0x_FA, 0x_5B, 0x_98, 0x_CD, 0x_53, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_FA, 0x_53, 0x_77, 0x_79, 0x_36, 0x_4A, 0x_E4, 0x_3A, 0x_98, 0x_83, 0x_C1, 0x_45, 0x_43, 0x_CD,
		0x_FC, 0x_6D, 0x_52, 0x_A4,
	];

	helper(S, BASE, -489_232);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_4_916_661_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_4_916_661_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_20,
		0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_2D, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB,
		0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_F2, 0x_1D, 0x_60, 0x_4F, 0x_D9,
		0x_AB, 0x_04, 0x_F9, 0x_87, 0x_EB, 0x_2C, 0x_FF, 0x_F5, 0x_AB, 0x_F7, 0x_77, 0x_F2, 0x_77, 0x_F7, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_EB, 0x_F2, 0x_FF, 0x_F7, 0x_D2, 0x_F5, 0x_87, 0x_D7, 0x_77, 0x_66, 0x_D9, 0x_2C, 0x_AB, 0x_60, 0x_FA,
		0x_4F, 0x_27, 0x_F9, 0x_1D,
	];

	helper(S, BASE, -4_916_661);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_24_663_041_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_24_663_041_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_0B,
		0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_2D, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45, 0x_45,
		0x_45, 0x_45, 0x_45, 0x_74, 0x_AB, 0x_E1, 0x_26, 0x_04, 0x_BA, 0x_2C, 0x_FC, 0x_6D, 0x_D9, 0x_E1, 0x_97,
		0x_D9, 0x_74, 0x_FB, 0x_1A, 0x_45, 0x_04,
	];
	const BASE: &[u8] = &[
		0x_45, 0x_6D, 0x_FC, 0x_FB, 0x_E1, 0x_4B, 0x_97, 0x_1A, 0x_4E, 0x_74, 0x_D9, 0x_82, 0x_04, 0x_26, 0x_67,
		0x_BA, 0x_B4, 0x_1F, 0x_AB,
	];

	helper(S, BASE, -24_663_041);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_833_266_772_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_833_266_772_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_09,
		0x_09, 0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_0A,
		0x_20, 0x_0A, 0x_20, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_2D, 0x_98, 0x_98, 0x_98,
		0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_98, 0x_C3, 0x_9A, 0x_58, 0x_66, 0x_63, 0x_63,
		0x_C3, 0x_22, 0x_14, 0x_7F, 0x_58, 0x_8E, 0x_63, 0x_E0, 0x_C8, 0x_BB, 0x_98, 0x_4B, 0x_4B, 0x_4B, 0x_A6,
		0x_D9, 0x_BB, 0x_A6, 0x_A6, 0x_58, 0x_BB, 0x_58, 0x_A6, 0x_A6, 0x_63, 0x_34, 0x_63, 0x_C3, 0x_E0, 0x_BB,
		0x_E0, 0x_9A, 0x_98, 0x_58, 0x_4B, 0x_8E, 0x_34, 0x_4B, 0x_63, 0x_4B, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_98, 0x_D9, 0x_C8, 0x_63, 0x_14, 0x_A6, 0x_BB, 0x_4B, 0x_75, 0x_58, 0x_7F, 0x_BA, 0x_A3, 0x_9A, 0x_34,
		0x_8E, 0x_E0, 0x_C3, 0x_66,
	];

	helper(S, BASE, -833_266_772);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_5_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_5_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0D,
		0x_0D, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0B, 0x_2D, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_6E, 0x_0A, 0x_26, 0x_AE, 0x_90, 0x_16, 0x_F4, 0x_AE, 0x_7E, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_49, 0x_B6, 0x_42, 0x_92, 0x_6E, 0x_75, 0x_BA, 0x_47, 0x_16, 0x_3A, 0x_26, 0x_64, 0x_13, 0x_F2,
		0x_E7, 0x_AE, 0x_BC, 0x_A1, 0x_3F, 0x_4C, 0x_72, 0x_6C, 0x_E8, 0x_8D, 0x_D7, 0x_CD, 0x_7E, 0x_36, 0x_61,
		0x_DD, 0x_84, 0x_90, 0x_44, 0x_69, 0x_39, 0x_B2, 0x_18, 0x_57, 0x_03, 0x_DC, 0x_19,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_53_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_53_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_2D, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82,
		0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_82, 0x_8B, 0x_8F, 0x_28, 0x_76, 0x_8F, 0x_73,
		0x_73, 0x_7E, 0x_31, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_82, 0x_8B, 0x_35, 0x_D8, 0x_C8, 0x_AE, 0x_A6, 0x_1C, 0x_76, 0x_7E, 0x_EA, 0x_8F, 0x_53, 0x_78, 0x_D2,
		0x_FE, 0x_6D, 0x_F9, 0x_C0, 0x_17, 0x_B7, 0x_49, 0x_F4, 0x_D0, 0x_EB, 0x_C9, 0x_5B, 0x_4A, 0x_14, 0x_42,
		0x_31, 0x_AA, 0x_45, 0x_2C, 0x_9A, 0x_F8, 0x_6A, 0x_9F, 0x_CF, 0x_73, 0x_87, 0x_38,
	];

	helper(S, BASE, -53);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_600_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_600_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_0B,
		0x_20, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0A,
		0x_2D, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_CC, 0x_77, 0x_0F, 0x_CD, 0x_AC, 0x_93, 0x_DE, 0x_A9, 0x_4A, 0x_92, 0x_7D,
		0x_E1, 0x_C9, 0x_11, 0x_59, 0x_DE, 0x_69, 0x_FA, 0x_62, 0x_02, 0x_1B, 0x_99, 0x_83, 0x_83, 0x_89, 0x_11,
		0x_7C,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_F5, 0x_96, 0x_5F, 0x_92, 0x_75, 0x_62, 0x_34, 0x_7C, 0x_CD, 0x_DE, 0x_02, 0x_77, 0x_83, 0x_CC,
		0x_99, 0x_7D, 0x_6F, 0x_C9, 0x_89, 0x_1B, 0x_4A, 0x_78, 0x_17, 0x_8F, 0x_59, 0x_AC, 0x_6E, 0x_EC, 0x_F0,
		0x_11, 0x_E1, 0x_69, 0x_9D, 0x_FD, 0x_8B, 0x_86, 0x_FA, 0x_93, 0x_3C, 0x_CF, 0x_EB,
	];

	helper(S, BASE, -600);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_5_269_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_5_269_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_2D, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C,
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_EB, 0x_FC, 0x_4C,
		0x_BC, 0x_CD, 0x_07, 0x_07, 0x_CD, 0x_E2, 0x_D7, 0x_54, 0x_83, 0x_3B, 0x_44, 0x_42, 0x_C2, 0x_46, 0x_46,
		0x_5A, 0x_44, 0x_E9, 0x_36, 0x_F9, 0x_B7, 0x_76, 0x_DE, 0x_18, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_FA, 0x_EB, 0x_1C, 0x_EA, 0x_CD, 0x_3B, 0x_46, 0x_B4, 0x_0F, 0x_25, 0x_C2, 0x_8D, 0x_B7, 0x_83,
		0x_52, 0x_E9, 0x_C8, 0x_76, 0x_4C, 0x_D7, 0x_6A, 0x_99, 0x_01, 0x_F3, 0x_35, 0x_10, 0x_42, 0x_E2, 0x_07,
		0x_18, 0x_44, 0x_36, 0x_F9, 0x_5A, 0x_5B, 0x_D4, 0x_54, 0x_DE, 0x_AF, 0x_72, 0x_FC,
	];

	helper(S, BASE, -5_269);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_80_665_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_80_665_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_20,
		0x_0C, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_09, 0x_20, 0x_0A,
		0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_2D, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8D, 0x_D4, 0x_49, 0x_B4, 0x_55, 0x_A9, 0x_5E, 0x_04, 0x_D2, 0x_04, 0x_34, 0x_D4, 0x_FF, 0x_FC,
		0x_49, 0x_69, 0x_23, 0x_34,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_8D, 0x_4F, 0x_D4, 0x_E0, 0x_0E, 0x_CC, 0x_77, 0x_A9, 0x_1C, 0x_95, 0x_CE, 0x_DE, 0x_5E, 0x_50,
		0x_43, 0x_23, 0x_04, 0x_03, 0x_DF, 0x_FC, 0x_64, 0x_10, 0x_2E, 0x_34, 0x_B4, 0x_D1, 0x_E6, 0x_A1, 0x_06,
		0x_49, 0x_3A, 0x_FF, 0x_D0, 0x_F0, 0x_61, 0x_F5, 0x_D2, 0x_4B, 0x_69, 0x_B9, 0x_F4,
	];

	helper(S, BASE, -80_665);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_743_350_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_743_350_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_09, 0x_2D, 0x_1B, 0x_1B, 0x_B3, 0x_E4, 0x_8B, 0x_30,
		0x_FB, 0x_3B, 0x_AB, 0x_06, 0x_49, 0x_52, 0x_06, 0x_B4, 0x_B3, 0x_B3, 0x_C3, 0x_89, 0x_9D, 0x_E4, 0x_06,
		0x_EB, 0x_1C, 0x_30, 0x_DD, 0x_B3, 0x_F1, 0x_06, 0x_1B, 0x_E9, 0x_73, 0x_B4, 0x_DD, 0x_AB, 0x_B8, 0x_A8,
		0x_8B, 0x_B4, 0x_36, 0x_9D, 0x_AB, 0x_AA, 0x_56, 0x_49, 0x_DD, 0x_4E, 0x_97,
	];
	const BASE: &[u8] = &[
		0x_1B, 0x_E4, 0x_58, 0x_B8, 0x_52, 0x_73, 0x_F4, 0x_06, 0x_31, 0x_F1, 0x_B3, 0x_4E, 0x_04, 0x_EB, 0x_AA,
		0x_BF, 0x_8B, 0x_E9, 0x_89, 0x_3E, 0x_C5, 0x_3B, 0x_05, 0x_B0, 0x_AB, 0x_36, 0x_25, 0x_97, 0x_A8, 0x_5E,
		0x_56, 0x_1C, 0x_DD, 0x_B4, 0x_30, 0x_24, 0x_49, 0x_6A, 0x_8A, 0x_C1, 0x_9D, 0x_C3,
	];

	helper(S, BASE, -743_350);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_4_654_074_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_4_654_074_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_09,
		0x_0D, 0x_09, 0x_09, 0x_2D, 0x_6C, 0x_6C, 0x_66, 0x_10, 0x_87, 0x_56, 0x_C6, 0x_5F, 0x_46, 0x_DA, 0x_5D,
		0x_66, 0x_70, 0x_C6, 0x_78, 0x_AF, 0x_65, 0x_11,
	];
	const BASE: &[u8] = &[
		0x_6C, 0x_66, 0x_5D, 0x_AC, 0x_78, 0x_B4, 0x_A3, 0x_BA, 0x_2F, 0x_12, 0x_11, 0x_73, 0x_C6, 0x_C0, 0x_E4,
		0x_56, 0x_8A, 0x_4A, 0x_2E, 0x_39, 0x_10, 0x_57, 0x_65, 0x_70, 0x_B7, 0x_0F, 0x_EF, 0x_F6, 0x_4B, 0x_50,
		0x_DF, 0x_2C, 0x_AF, 0x_FB, 0x_87, 0x_C2, 0x_DA, 0x_22, 0x_E0, 0x_AA, 0x_47, 0x_46,
	];

	helper(S, BASE, -4_654_074);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_45_614_613_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_45_614_613_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_09,
		0x_0A, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0D,
		0x_2D, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3,
		0x_C3, 0x_56, 0x_2C, 0x_DD, 0x_1E, 0x_F2, 0x_E2, 0x_DD, 0x_66, 0x_7E, 0x_7E, 0x_0E, 0x_85, 0x_85, 0x_AA,
		0x_A0, 0x_D4, 0x_77, 0x_B8, 0x_7E, 0x_E0, 0x_1E, 0x_5C, 0x_59, 0x_4B, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_2F, 0x_16, 0x_85, 0x_A8, 0x_F6, 0x_88, 0x_72, 0x_FC, 0x_F2, 0x_1D, 0x_F9, 0x_73, 0x_D4, 0x_56,
		0x_B8, 0x_4B, 0x_C5, 0x_E0, 0x_59, 0x_A1, 0x_05, 0x_17, 0x_03, 0x_60, 0x_95, 0x_1E, 0x_2C, 0x_DD, 0x_D8,
		0x_AA, 0x_0E, 0x_2A, 0x_7E, 0x_10, 0x_CC, 0x_80, 0x_A0, 0x_06, 0x_77, 0x_66, 0x_5C,
	];

	helper(S, BASE, -45_614_613);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_625_225_164_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_625_225_164_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_20,
		0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_2D, 0x_6D, 0x_6D, 0x_6D, 0x_D9, 0x_24, 0x_DC,
		0x_48, 0x_CE, 0x_69, 0x_2C, 0x_EA, 0x_FD, 0x_14, 0x_D3, 0x_8F, 0x_7A, 0x_4C, 0x_FD, 0x_11, 0x_E6, 0x_72,
		0x_90, 0x_2E, 0x_AC, 0x_8F, 0x_90, 0x_CA, 0x_7B, 0x_D9, 0x_72, 0x_48, 0x_E5, 0x_D3, 0x_DC, 0x_6D, 0x_19,
		0x_FD, 0x_72, 0x_72, 0x_AC, 0x_A1, 0x_1E, 0x_D9, 0x_7A, 0x_48, 0x_19, 0x_7F,
	];
	const BASE: &[u8] = &[
		0x_6D, 0x_CE, 0x_AC, 0x_E5, 0x_D9, 0x_D3, 0x_4C, 0x_19, 0x_F2, 0x_A2, 0x_F5, 0x_C8, 0x_EA, 0x_8F, 0x_1E,
		0x_90, 0x_FD, 0x_72, 0x_69, 0x_DD, 0x_92, 0x_4B, 0x_C4, 0x_14, 0x_E6, 0x_A1, 0x_7A, 0x_7B, 0x_2F, 0x_7F,
		0x_0F, 0x_06, 0x_24, 0x_2E, 0x_3C, 0x_EF, 0x_11, 0x_5C, 0x_DC, 0x_CA, 0x_48, 0x_89,
	];

	helper(S, BASE, -625_225_164);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_6_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_6_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0A,
		0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_2D, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E,
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_A9,
		0x_C3, 0x_74, 0x_3A, 0x_B2, 0x_BA, 0x_1B, 0x_5C, 0x_8F, 0x_E8, 0x_1A, 0x_48, 0x_53, 0x_B2, 0x_3A, 0x_E4,
		0x_E4, 0x_8F, 0x_86, 0x_95, 0x_37, 0x_BA, 0x_E5, 0x_9F, 0x_3B, 0x_9A, 0x_EC, 0x_48, 0x_9A, 0x_F5, 0x_BC,
		0x_A8, 0x_7A,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_B5, 0x_E4, 0x_3F, 0x_53, 0x_1F, 0x_A9, 0x_16, 0x_B0, 0x_4A, 0x_E5, 0x_3A, 0x_D4, 0x_9A, 0x_CC,
		0x_86, 0x_D3, 0x_37, 0x_E8, 0x_23, 0x_5F, 0x_D0, 0x_42, 0x_BD, 0x_97, 0x_91, 0x_7B, 0x_F7, 0x_A6, 0x_1D,
		0x_A3, 0x_94, 0x_48, 0x_12, 0x_B2, 0x_3B, 0x_04, 0x_C1, 0x_64, 0x_FC, 0x_E9, 0x_11, 0x_BA, 0x_5E, 0x_6E,
		0x_CA, 0x_34, 0x_F9, 0x_9B, 0x_7A, 0x_9F, 0x_1A, 0x_6B, 0x_8B, 0x_17, 0x_F5, 0x_8F, 0x_26, 0x_95, 0x_33,
		0x_AC, 0x_EC, 0x_4E, 0x_BC, 0x_AD, 0x_A2, 0x_1B, 0x_BE, 0x_0E, 0x_5C, 0x_A8, 0x_58, 0x_74,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_33_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_33_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_20,
		0x_20, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_20, 0x_0B,
		0x_0C, 0x_2D, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A, 0x_5A,
		0x_5A, 0x_31, 0x_1F, 0x_31, 0x_74, 0x_7D, 0x_1D, 0x_7C, 0x_C1, 0x_6F, 0x_37, 0x_11, 0x_C3, 0x_06, 0x_F6,
		0x_C1, 0x_1D, 0x_F2, 0x_87, 0x_45, 0x_AA, 0x_D3, 0x_8A, 0x_06, 0x_D9, 0x_CB, 0x_10, 0x_C1, 0x_FB, 0x_F2,
		0x_92, 0x_86, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_5A, 0x_45, 0x_6F, 0x_1D, 0x_81, 0x_7D, 0x_C3, 0x_86, 0x_A0, 0x_50, 0x_F4, 0x_E8, 0x_F0, 0x_17, 0x_41,
		0x_EA, 0x_39, 0x_37, 0x_3A, 0x_D2, 0x_62, 0x_4D, 0x_AF, 0x_D5, 0x_46, 0x_CB, 0x_11, 0x_12, 0x_FB, 0x_0E,
		0x_BC, 0x_AA, 0x_4B, 0x_31, 0x_98, 0x_55, 0x_7B, 0x_87, 0x_C1, 0x_A5, 0x_5F, 0x_8F, 0x_85, 0x_01, 0x_05,
		0x_3B, 0x_FD, 0x_60, 0x_D3, 0x_DB, 0x_F2, 0x_F1, 0x_90, 0x_74, 0x_7C, 0x_38, 0x_E0, 0x_6D, 0x_D9, 0x_9F,
		0x_06, 0x_C9, 0x_91, 0x_F6, 0x_33, 0x_10, 0x_92, 0x_E9, 0x_79, 0x_19, 0x_8A, 0x_7E, 0x_47,
	];

	helper(S, BASE, -33);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_196_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_196_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0A,
		0x_0C, 0x_0A, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_2D, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_F2,
		0x_F2, 0x_F2, 0x_F2, 0x_F2, 0x_B0, 0x_7E, 0x_0A, 0x_1D, 0x_F5, 0x_82, 0x_9B, 0x_79, 0x_8A, 0x_32, 0x_D4,
		0x_F5, 0x_8E, 0x_2C, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_F2, 0x_17, 0x_B0, 0x_36, 0x_F8, 0x_35, 0x_2E, 0x_81, 0x_73, 0x_21, 0x_57, 0x_43, 0x_8A, 0x_42, 0x_CF,
		0x_AA, 0x_4A, 0x_E3, 0x_A1, 0x_74, 0x_F9, 0x_BC, 0x_37, 0x_01, 0x_82, 0x_3A, 0x_8C, 0x_DC, 0x_89, 0x_28,
		0x_2C, 0x_EB, 0x_C5, 0x_9B, 0x_8B, 0x_B7, 0x_1D, 0x_D4, 0x_45, 0x_1A, 0x_A7, 0x_BE, 0x_8E, 0x_51, 0x_88,
		0x_62, 0x_26, 0x_79, 0x_D3, 0x_AC, 0x_7E, 0x_A9, 0x_5A, 0x_AE, 0x_4F, 0x_52, 0x_A6, 0x_33, 0x_19, 0x_91,
		0x_95, 0x_DA, 0x_63, 0x_5E, 0x_29, 0x_32, 0x_86, 0x_F5, 0x_9A, 0x_7B, 0x_EC, 0x_7F, 0x_E0,
	];

	helper(S, BASE, -196);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_3_863_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_3_863_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_09,
		0x_0B, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0D,
		0x_0A, 0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_2D, 0x_28, 0x_28, 0x_28, 0x_28, 0x_28, 0x_28, 0x_06, 0x_18,
		0x_5F, 0x_24, 0x_B8, 0x_BF, 0x_28, 0x_3C, 0x_52, 0x_7E, 0x_0E, 0x_76, 0x_D0, 0x_F2, 0x_AE, 0x_A8, 0x_F9,
		0x_D8, 0x_1A, 0x_54, 0x_C1, 0x_CC, 0x_BE, 0x_BE, 0x_1C, 0x_E9, 0x_9B,
	];
	const BASE: &[u8] = &[
		0x_28, 0x_54, 0x_E8, 0x_C7, 0x_08, 0x_7E, 0x_93, 0x_1E, 0x_FA, 0x_D8, 0x_76, 0x_CC, 0x_32, 0x_85, 0x_48,
		0x_8D, 0x_A9, 0x_F9, 0x_B8, 0x_E6, 0x_B1, 0x_BE, 0x_E9, 0x_C1, 0x_9E, 0x_9A, 0x_1A, 0x_5D, 0x_05, 0x_E1,
		0x_7F, 0x_AA, 0x_23, 0x_BF, 0x_73, 0x_DC, 0x_9B, 0x_24, 0x_94, 0x_0E, 0x_BC, 0x_2E, 0x_9D, 0x_A8, 0x_F8,
		0x_D5, 0x_3C, 0x_AE, 0x_33, 0x_63, 0x_F2, 0x_80, 0x_06, 0x_62, 0x_E3, 0x_F1, 0x_39, 0x_1C, 0x_69, 0x_49,
		0x_67, 0x_EA, 0x_FF, 0x_D0, 0x_CD, 0x_F3, 0x_96, 0x_18, 0x_52, 0x_DA, 0x_7B, 0x_75, 0x_F0,
	];

	helper(S, BASE, -3_863);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_41_429_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_41_429_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0A,
		0x_0B, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0B, 0x_2D,
		0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_86, 0x_79, 0x_E5, 0x_C5, 0x_88, 0x_0F, 0x_FB, 0x_07, 0x_C3,
		0x_83, 0x_EC, 0x_07, 0x_97, 0x_C3, 0x_17, 0x_83, 0x_C5, 0x_86, 0x_0F, 0x_A6, 0x_33, 0x_5C, 0x_97, 0x_B9,
		0x_33, 0x_46, 0x_43, 0x_46, 0x_D2, 0x_E2, 0x_5C, 0x_1A, 0x_86, 0x_A2,
	];
	const BASE: &[u8] = &[
		0x_86, 0x_95, 0x_1A, 0x_DA, 0x_89, 0x_22, 0x_A6, 0x_79, 0x_6E, 0x_45, 0x_E7, 0x_4E, 0x_E4, 0x_01, 0x_49,
		0x_B2, 0x_C6, 0x_E2, 0x_58, 0x_17, 0x_33, 0x_DE, 0x_E1, 0x_21, 0x_EB, 0x_37, 0x_F6, 0x_A1, 0x_13, 0x_C1,
		0x_05, 0x_98, 0x_43, 0x_64, 0x_E9, 0x_6A, 0x_BD, 0x_83, 0x_C5, 0x_C4, 0x_15, 0x_4A, 0x_F1, 0x_B9, 0x_14,
		0x_19, 0x_EC, 0x_97, 0x_62, 0x_AA, 0x_82, 0x_4D, 0x_5C, 0x_07, 0x_B5, 0x_DB, 0x_E5, 0x_3C, 0x_24, 0x_C3,
		0x_FB, 0x_2F, 0x_46, 0x_25, 0x_6F, 0x_0F, 0x_59, 0x_85, 0x_B3, 0x_A2, 0x_D7, 0x_5E, 0x_D2,
	];

	helper(S, BASE, -41_429);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_566_344_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_566_344_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_0B,
		0x_2D, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A,
		0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A,
		0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_49, 0x_6E, 0x_5B, 0x_BF, 0x_67, 0x_2E, 0x_2F, 0x_1B,
		0x_06, 0x_9F, 0x_C4, 0x_26, 0x_2F, 0x_89, 0x_49, 0x_23, 0x_56, 0x_07, 0x_B5, 0x_26, 0x_CA, 0x_B7, 0x_C7,
		0x_91, 0x_AC, 0x_A0, 0x_6A, 0x_D6, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_6A, 0x_49, 0x_46, 0x_8F, 0x_91, 0x_89, 0x_8C, 0x_06, 0x_D6, 0x_23, 0x_BF, 0x_D2, 0x_03, 0x_05, 0x_16,
		0x_36, 0x_FE, 0x_C4, 0x_26, 0x_EA, 0x_5B, 0x_6C, 0x_74, 0x_7B, 0x_48, 0x_2A, 0x_A0, 0x_28, 0x_B7, 0x_2E,
		0x_F8, 0x_ED, 0x_69, 0x_6E, 0x_B3, 0x_CB, 0x_2F, 0x_F3, 0x_CA, 0x_35, 0x_61, 0x_AC, 0x_FF, 0x_68, 0x_CC,
		0x_C7, 0x_EF, 0x_5E, 0x_C1, 0x_56, 0x_2C, 0x_C8, 0x_44, 0x_D8, 0x_CD, 0x_C2, 0x_8E, 0x_66, 0x_1B, 0x_E1,
		0x_85, 0x_75, 0x_B5, 0x_01, 0x_E5, 0x_57, 0x_07, 0x_F5, 0x_9F, 0x_37, 0x_6D, 0x_F9, 0x_B6,
	];

	helper(S, BASE, -566_344);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_2_587_031_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_2_587_031_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_0A, 0x_20, 0x_20,
		0x_20, 0x_20, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0A,
		0x_20, 0x_09, 0x_0D, 0x_2D, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_3A,
		0x_3C, 0x_08, 0x_B0, 0x_4D, 0x_5C, 0x_9C, 0x_DF, 0x_9F, 0x_F4, 0x_D4, 0x_58, 0x_D1, 0x_C3, 0x_F6, 0x_B1,
		0x_3F, 0x_1A, 0x_39, 0x_CF, 0x_54, 0x_86, 0x_F4, 0x_A8, 0x_F6, 0x_F8,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_DB, 0x_E0, 0x_87, 0x_9E, 0x_14, 0x_3A, 0x_D2, 0x_3F, 0x_B1, 0x_86, 0x_28, 0x_5B, 0x_66, 0x_FC,
		0x_92, 0x_54, 0x_CA, 0x_4C, 0x_43, 0x_2A, 0x_96, 0x_F8, 0x_DF, 0x_17, 0x_89, 0x_03, 0x_3B, 0x_FF, 0x_D8,
		0x_A3, 0x_E7, 0x_79, 0x_08, 0x_8C, 0x_5F, 0x_D1, 0x_62, 0x_D4, 0x_1A, 0x_99, 0x_5D, 0x_16, 0x_1E, 0x_7B,
		0x_95, 0x_EA, 0x_3C, 0x_24, 0x_19, 0x_CF, 0x_AE, 0x_C3, 0x_7C, 0x_F4, 0x_04, 0x_D7, 0x_B0, 0x_7A, 0x_74,
		0x_15, 0x_A6, 0x_35, 0x_39, 0x_9F, 0x_58, 0x_9C, 0x_F6, 0x_ED, 0x_A8, 0x_BE, 0x_E8, 0x_A2,
	];

	helper(S, BASE, -2_587_031);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_30_356_042_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_30_356_042_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_2D, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33,
		0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33,
		0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_CF, 0x_50, 0x_45, 0x_10, 0x_75, 0x_F7, 0x_AF,
		0x_E2, 0x_95, 0x_4C, 0x_AD, 0x_9F, 0x_87, 0x_02, 0x_91, 0x_C6, 0x_EB, 0x_E5,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_CF, 0x_45, 0x_2E, 0x_93, 0x_50, 0x_95, 0x_52, 0x_8D, 0x_AC, 0x_86, 0x_EA, 0x_64, 0x_3D, 0x_75,
		0x_43, 0x_65, 0x_A1, 0x_F5, 0x_02, 0x_1E, 0x_B1, 0x_99, 0x_78, 0x_81, 0x_61, 0x_9D, 0x_A9, 0x_10, 0x_8C,
		0x_6A, 0x_79, 0x_47, 0x_B5, 0x_EB, 0x_C5, 0x_9A, 0x_F0, 0x_E7, 0x_16, 0x_98, 0x_9F, 0x_C6, 0x_87, 0x_B9,
		0x_E5, 0x_E6, 0x_D5, 0x_BA, 0x_CA, 0x_62, 0x_8B, 0x_5F, 0x_AF, 0x_AD, 0x_35, 0x_5A, 0x_FE, 0x_E2, 0x_60,
		0x_5E, 0x_91, 0x_32, 0x_4C, 0x_FD, 0x_7F, 0x_B3, 0x_15, 0x_1D, 0x_89, 0x_11, 0x_14, 0x_19,
	];

	helper(S, BASE, -30_356_042);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_504_042_876_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_504_042_876_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0B,
		0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_09, 0x_2D, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A,
		0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_C7, 0x_08, 0x_2C, 0x_BE, 0x_8A, 0x_AA, 0x_F3, 0x_CD, 0x_34, 0x_8F,
		0x_7D, 0x_BE, 0x_56, 0x_9E, 0x_F2, 0x_64, 0x_B6, 0x_01, 0x_B9, 0x_1D, 0x_B5, 0x_05, 0x_F1, 0x_8F, 0x_1C,
		0x_D7, 0x_2F, 0x_CD, 0x_47, 0x_71, 0x_6E, 0x_75, 0x_64, 0x_6E, 0x_83, 0x_83, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_86, 0x_33, 0x_1F, 0x_56, 0x_B8, 0x_DE, 0x_E4, 0x_11, 0x_7D, 0x_C2, 0x_3B, 0x_47, 0x_05, 0x_64,
		0x_F1, 0x_D0, 0x_C7, 0x_D2, 0x_30, 0x_D9, 0x_13, 0x_66, 0x_1E, 0x_01, 0x_48, 0x_E3, 0x_19, 0x_CD, 0x_02,
		0x_B9, 0x_53, 0x_A1, 0x_89, 0x_C9, 0x_1D, 0x_B7, 0x_2F, 0x_EF, 0x_34, 0x_F2, 0x_FF, 0x_4B, 0x_75, 0x_21,
		0x_F7, 0x_6F, 0x_A2, 0x_12, 0x_2C, 0x_8F, 0x_2A, 0x_C5, 0x_8D, 0x_08, 0x_3C, 0x_7B, 0x_82, 0x_72, 0x_F3,
		0x_6E, 0x_D1, 0x_38, 0x_B5, 0x_BE, 0x_71, 0x_9E, 0x_1C, 0x_8A, 0x_E9, 0x_D7, 0x_83, 0x_B6,
	];

	helper(S, BASE, -504_042_876);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_7_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_7_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0C,
		0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_20, 0x_20, 0x_0A,
		0x_0B, 0x_20, 0x_0C, 0x_2D, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_6A,
		0x_B7, 0x_A3, 0x_BD, 0x_27, 0x_53, 0x_70, 0x_63, 0x_C6, 0x_D0, 0x_FB, 0x_45, 0x_74, 0x_DC, 0x_BF, 0x_CE,
		0x_4E, 0x_06, 0x_65, 0x_F6, 0x_99, 0x_ED, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_64, 0x_90, 0x_DD, 0x_A6, 0x_FD, 0x_F8, 0x_6A, 0x_57, 0x_C6, 0x_4B, 0x_4E, 0x_CE, 0x_5F, 0x_9F,
		0x_DA, 0x_AB, 0x_C0, 0x_41, 0x_49, 0x_E4, 0x_FB, 0x_A0, 0x_BA, 0x_16, 0x_52, 0x_93, 0x_F6, 0x_5B, 0x_2F,
		0x_E8, 0x_65, 0x_BC, 0x_11, 0x_01, 0x_48, 0x_C3, 0x_D5, 0x_4F, 0x_E7, 0x_E1, 0x_CC, 0x_8B, 0x_14, 0x_1A,
		0x_B0, 0x_FE, 0x_72, 0x_BB, 0x_D9, 0x_27, 0x_7F, 0x_6D, 0x_ED, 0x_8F, 0x_E9, 0x_CB, 0x_1D, 0x_7D, 0x_BD,
		0x_59, 0x_99, 0x_74, 0x_B6, 0x_BF, 0x_C2, 0x_67, 0x_45, 0x_51, 0x_92, 0x_70, 0x_47, 0x_68, 0x_FC, 0x_89,
		0x_A3, 0x_DE, 0x_43, 0x_E2, 0x_EF, 0x_9E, 0x_86, 0x_24, 0x_0F, 0x_94, 0x_38, 0x_06, 0x_DF, 0x_10, 0x_8D,
		0x_D2, 0x_D0, 0x_33, 0x_75, 0x_DC, 0x_73, 0x_69, 0x_C1, 0x_F9, 0x_F7, 0x_84, 0x_53, 0x_C7, 0x_63, 0x_AC,
		0x_77, 0x_61, 0x_82, 0x_40, 0x_6B, 0x_58, 0x_87, 0x_54,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_17_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_17_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_2D, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6,
		0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6, 0x_A6,
		0x_A6, 0x_A6, 0x_AC, 0x_3C, 0x_A1, 0x_EE, 0x_A0, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_A6, 0x_73, 0x_1C, 0x_67, 0x_12, 0x_5E, 0x_99, 0x_C4, 0x_B2, 0x_40, 0x_4C, 0x_93, 0x_96, 0x_A8, 0x_EC,
		0x_8F, 0x_62, 0x_AC, 0x_DA, 0x_51, 0x_46, 0x_24, 0x_56, 0x_FB, 0x_D5, 0x_BB, 0x_F5, 0x_32, 0x_BC, 0x_EA,
		0x_11, 0x_90, 0x_D0, 0x_CA, 0x_6A, 0x_21, 0x_2E, 0x_74, 0x_3E, 0x_1B, 0x_5C, 0x_F9, 0x_7D, 0x_D9, 0x_EE,
		0x_A3, 0x_D2, 0x_77, 0x_A2, 0x_91, 0x_C1, 0x_61, 0x_BD, 0x_BF, 0x_DF, 0x_5D, 0x_A1, 0x_AF, 0x_7E, 0x_D4,
		0x_AE, 0x_C7, 0x_4F, 0x_92, 0x_5F, 0x_CF, 0x_E4, 0x_AB, 0x_01, 0x_A0, 0x_DB, 0x_70, 0x_02, 0x_D1, 0x_9A,
		0x_C0, 0x_80, 0x_9B, 0x_F0, 0x_57, 0x_FC, 0x_82, 0x_34, 0x_FD, 0x_9F, 0x_72, 0x_60, 0x_33, 0x_EB, 0x_D6,
		0x_03, 0x_E2, 0x_C9, 0x_F6, 0x_6E, 0x_8E, 0x_3F, 0x_E5, 0x_07, 0x_DC, 0x_39, 0x_A9, 0x_2A, 0x_43, 0x_15,
		0x_DD, 0x_ED, 0x_08, 0x_D3, 0x_4E, 0x_53, 0x_8A, 0x_7F,
	];

	helper(S, BASE, -17);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_226_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_226_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_20, 0x_0B, 0x_2D, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55,
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_B7,
		0x_55, 0x_DA, 0x_62, 0x_8A, 0x_CC, 0x_9D, 0x_6A, 0x_C2, 0x_D3, 0x_66, 0x_85, 0x_88, 0x_4B, 0x_14, 0x_58,
		0x_5E, 0x_A4, 0x_18, 0x_05, 0x_62, 0x_29, 0x_89, 0x_1B, 0x_DB, 0x_22, 0x_47, 0x_D0, 0x_57, 0x_F0, 0x_6A,
		0x_A6, 0x_60, 0x_67, 0x_33, 0x_E1, 0x_95, 0x_88, 0x_CF, 0x_5C, 0x_9B, 0x_5F, 0x_46, 0x_F0, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_5A, 0x_B7, 0x_38, 0x_E7, 0x_ED, 0x_BF, 0x_9D, 0x_CA, 0x_7F, 0x_FE, 0x_A4, 0x_98, 0x_2A, 0x_60,
		0x_94, 0x_63, 0x_B0, 0x_D4, 0x_1A, 0x_62, 0x_F0, 0x_86, 0x_07, 0x_C2, 0x_8C, 0x_01, 0x_64, 0x_57, 0x_88,
		0x_D6, 0x_6D, 0x_A6, 0x_29, 0x_58, 0x_1C, 0x_22, 0x_D2, 0x_AF, 0x_D0, 0x_E4, 0x_99, 0x_56, 0x_4C, 0x_46,
		0x_5E, 0x_61, 0x_18, 0x_BA, 0x_72, 0x_05, 0x_7C, 0x_67, 0x_66, 0x_AB, 0x_FD, 0x_21, 0x_5B, 0x_E2, 0x_CD,
		0x_33, 0x_40, 0x_76, 0x_5F, 0x_3C, 0x_89, 0x_CF, 0x_37, 0x_4B, 0x_9E, 0x_1B, 0x_D3, 0x_4D, 0x_8A, 0x_26,
		0x_2E, 0x_0F, 0x_30, 0x_B4, 0x_F4, 0x_3A, 0x_B3, 0x_1F, 0x_CC, 0x_C0, 0x_E3, 0x_14, 0x_F7, 0x_BB, 0x_F6,
		0x_AE, 0x_23, 0x_E1, 0x_85, 0x_8F, 0x_9B, 0x_95, 0x_5C, 0x_3F, 0x_39, 0x_54, 0x_DB, 0x_31, 0x_87, 0x_6A,
		0x_C8, 0x_73, 0x_4E, 0x_04, 0x_E9, 0x_47, 0x_35, 0x_65,
	];

	helper(S, BASE, -226);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_7_872_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_7_872_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_0D,
		0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_0C,
		0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_2D, 0x_50, 0x_50, 0x_50, 0x_50,
		0x_50, 0x_57, 0x_DE, 0x_C3, 0x_B0, 0x_98, 0x_52, 0x_19, 0x_A5, 0x_50, 0x_CC, 0x_54, 0x_3E, 0x_F2, 0x_A7,
		0x_14, 0x_9E, 0x_77, 0x_50, 0x_AB, 0x_08, 0x_54, 0x_FB, 0x_80, 0x_63, 0x_C2, 0x_BE, 0x_14, 0x_52, 0x_AB,
		0x_D5, 0x_70, 0x_50, 0x_24, 0x_08, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_32, 0x_C1, 0x_2C, 0x_BB, 0x_DF, 0x_12, 0x_E5, 0x_67, 0x_03, 0x_9A, 0x_A9, 0x_3A, 0x_FB, 0x_1E,
		0x_98, 0x_7D, 0x_E7, 0x_49, 0x_4C, 0x_0E, 0x_5A, 0x_9E, 0x_8E, 0x_01, 0x_58, 0x_47, 0x_66, 0x_CE, 0x_DB,
		0x_E3, 0x_D4, 0x_BF, 0x_AF, 0x_BA, 0x_80, 0x_C9, 0x_63, 0x_C2, 0x_FC, 0x_3E, 0x_D0, 0x_F6, 0x_A5, 0x_89,
		0x_8F, 0x_BC, 0x_08, 0x_56, 0x_D2, 0x_A7, 0x_22, 0x_72, 0x_93, 0x_5D, 0x_91, 0x_85, 0x_D5, 0x_62, 0x_5C,
		0x_97, 0x_19, 0x_5B, 0x_05, 0x_A2, 0x_73, 0x_1C, 0x_8B, 0x_F2, 0x_57, 0x_6A, 0x_84, 0x_7A, 0x_6C, 0x_F9,
		0x_DE, 0x_46, 0x_76, 0x_61, 0x_41, 0x_8D, 0x_44, 0x_F0, 0x_77, 0x_26, 0x_FF, 0x_35, 0x_54, 0x_14, 0x_52,
		0x_99, 0x_70, 0x_DC, 0x_7F, 0x_BE, 0x_B0, 0x_B4, 0x_28, 0x_24, 0x_DA, 0x_D7, 0x_8C, 0x_B6, 0x_CC, 0x_A4,
		0x_B3, 0x_AB, 0x_75, 0x_81, 0x_3D, 0x_F5, 0x_74, 0x_4F,
	];

	helper(S, BASE, -7_872);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_70_249_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_70_249_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_0B,
		0x_20, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_2D, 0x_2A, 0x_2A,
		0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A,
		0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_2A, 0x_FA, 0x_C0, 0x_37, 0x_DD, 0x_AD, 0x_2A,
		0x_35, 0x_46, 0x_2E, 0x_51, 0x_C1, 0x_1B, 0x_D7, 0x_FA, 0x_C0, 0x_5D, 0x_ED, 0x_2A, 0x_E0, 0x_AE, 0x_9A,
		0x_B0, 0x_C0, 0x_01, 0x_D2, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_2A, 0x_E8, 0x_35, 0x_BE, 0x_95, 0x_FA, 0x_F2, 0x_24, 0x_E0, 0x_70, 0x_0F, 0x_26, 0x_3C, 0x_4E, 0x_ED,
		0x_9D, 0x_78, 0x_1A, 0x_AE, 0x_56, 0x_6C, 0x_6F, 0x_82, 0x_EF, 0x_D8, 0x_CE, 0x_A1, 0x_AA, 0x_92, 0x_FD,
		0x_08, 0x_9A, 0x_C2, 0x_2E, 0x_21, 0x_51, 0x_FF, 0x_EC, 0x_B0, 0x_D0, 0x_01, 0x_29, 0x_74, 0x_BD, 0x_D2,
		0x_B8, 0x_11, 0x_F1, 0x_73, 0x_23, 0x_5A, 0x_C3, 0x_48, 0x_C4, 0x_5C, 0x_5D, 0x_C0, 0x_0E, 0x_1B, 0x_46,
		0x_54, 0x_71, 0x_A4, 0x_4F, 0x_96, 0x_38, 0x_44, 0x_34, 0x_1E, 0x_E9, 0x_EE, 0x_CF, 0x_7D, 0x_81, 0x_62,
		0x_D3, 0x_37, 0x_A2, 0x_1F, 0x_FC, 0x_43, 0x_D7, 0x_F7, 0x_C1, 0x_25, 0x_B9, 0x_EB, 0x_63, 0x_E2, 0x_18,
		0x_68, 0x_4B, 0x_59, 0x_DB, 0x_3E, 0x_87, 0x_27, 0x_8A, 0x_60, 0x_19, 0x_F6, 0x_D5, 0x_3B, 0x_A5, 0x_3D,
		0x_03, 0x_D4, 0x_12, 0x_E3, 0x_F0, 0x_CD, 0x_69, 0x_AD,
	];

	helper(S, BASE, -70_249);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_970_390_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_970_390_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_2D, 0x_31, 0x_A1, 0x_CA, 0x_57, 0x_E2, 0x_A2, 0x_04,
		0x_39, 0x_66, 0x_05, 0x_30, 0x_14, 0x_53,
	];
	const BASE: &[u8] = &[
		0x_31, 0x_E6, 0x_4B, 0x_BA, 0x_1B, 0x_07, 0x_72, 0x_10, 0x_24, 0x_6C, 0x_AD, 0x_BB, 0x_DE, 0x_E4, 0x_77,
		0x_49, 0x_D4, 0x_6D, 0x_26, 0x_AE, 0x_38, 0x_B9, 0x_7E, 0x_9C, 0x_35, 0x_04, 0x_FD, 0x_78, 0x_74, 0x_40,
		0x_C4, 0x_B0, 0x_62, 0x_71, 0x_39, 0x_14, 0x_66, 0x_19, 0x_53, 0x_63, 0x_97, 0x_2C, 0x_E1, 0x_45, 0x_DD,
		0x_E8, 0x_7D, 0x_80, 0x_25, 0x_B2, 0x_D5, 0x_D0, 0x_37, 0x_52, 0x_11, 0x_79, 0x_C6, 0x_7F, 0x_4E, 0x_57,
		0x_A4, 0x_D9, 0x_1A, 0x_F2, 0x_AF, 0x_05, 0x_EF, 0x_5D, 0x_ED, 0x_65, 0x_76, 0x_3E, 0x_C2, 0x_5F, 0x_D3,
		0x_A1, 0x_82, 0x_DA, 0x_D6, 0x_F3, 0x_5C, 0x_A2, 0x_28, 0x_75, 0x_3B, 0x_55, 0x_5B, 0x_A8, 0x_7C, 0x_68,
		0x_A3, 0x_CB, 0x_E7, 0x_51, 0x_EC, 0x_61, 0x_59, 0x_69, 0x_15, 0x_08, 0x_9A, 0x_B5, 0x_F4, 0x_B8, 0x_FC,
		0x_3C, 0x_43, 0x_17, 0x_30, 0x_A7, 0x_3F, 0x_2A, 0x_CA,
	];

	helper(S, BASE, -970_390);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_1_741_296_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_1_741_296_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_0A,
		0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_0D,
		0x_20, 0x_20, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_0D, 0x_2D, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_E7, 0x_46, 0x_97, 0x_26, 0x_23, 0x_C2, 0x_BC, 0x_2A, 0x_AA, 0x_89, 0x_67, 0x_B0, 0x_37, 0x_67, 0x_F9,
		0x_90, 0x_BE, 0x_8C, 0x_D9,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_E7, 0x_D9, 0x_98, 0x_D0, 0x_9F, 0x_43, 0x_5E, 0x_1C, 0x_74, 0x_A6, 0x_2F, 0x_76, 0x_66, 0x_5B,
		0x_4B, 0x_BA, 0x_E6, 0x_37, 0x_F4, 0x_78, 0x_96, 0x_48, 0x_46, 0x_4D, 0x_15, 0x_91, 0x_5A, 0x_C0, 0x_2A,
		0x_AE, 0x_99, 0x_40, 0x_82, 0x_39, 0x_4E, 0x_6F, 0x_A9, 0x_4A, 0x_EB, 0x_BC, 0x_97, 0x_C5, 0x_14, 0x_CF,
		0x_73, 0x_6E, 0x_FC, 0x_DD, 0x_AF, 0x_CD, 0x_51, 0x_FA, 0x_9D, 0x_38, 0x_C2, 0x_EA, 0x_41, 0x_B0, 0x_71,
		0x_79, 0x_F9, 0x_D7, 0x_90, 0x_8B, 0x_77, 0x_EF, 0x_5F, 0x_10, 0x_8A, 0x_8D, 0x_9A, 0x_80, 0x_F2, 0x_D3,
		0x_B5, 0x_31, 0x_A8, 0x_69, 0x_26, 0x_67, 0x_58, 0x_75, 0x_94, 0x_84, 0x_83, 0x_12, 0x_DF, 0x_B8, 0x_0F,
		0x_BE, 0x_FF, 0x_8C, 0x_27, 0x_D6, 0x_B3, 0x_25, 0x_ED, 0x_CC, 0x_01, 0x_19, 0x_88, 0x_32, 0x_3E, 0x_AD,
		0x_EC, 0x_B7, 0x_D8, 0x_2C, 0x_89, 0x_36, 0x_54, 0x_E0,
	];

	helper(S, BASE, -1_741_296);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_80_021_922_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_80_021_922_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_09,
		0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_2D, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A,
		0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A,
		0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_88, 0x_DF, 0x_E3,
		0x_9B, 0x_C9, 0x_DA, 0x_1B, 0x_63, 0x_39, 0x_9E, 0x_1B,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_3F, 0x_52, 0x_35, 0x_0F, 0x_CD, 0x_C7, 0x_E5, 0x_02, 0x_7D, 0x_32, 0x_28, 0x_4E, 0x_E9, 0x_4A,
		0x_A5, 0x_B8, 0x_C4, 0x_FE, 0x_6F, 0x_E7, 0x_A2, 0x_39, 0x_75, 0x_E1, 0x_7A, 0x_13, 0x_7E, 0x_7B, 0x_D1,
		0x_4D, 0x_64, 0x_C3, 0x_43, 0x_2F, 0x_73, 0x_FF, 0x_37, 0x_51, 0x_45, 0x_31, 0x_B5, 0x_CC, 0x_A3, 0x_8D,
		0x_2C, 0x_87, 0x_79, 0x_B6, 0x_A1, 0x_10, 0x_DF, 0x_C5, 0x_5C, 0x_56, 0x_88, 0x_66, 0x_93, 0x_15, 0x_6B,
		0x_42, 0x_D6, 0x_A4, 0x_1B, 0x_BF, 0x_29, 0x_DA, 0x_F4, 0x_9B, 0x_91, 0x_D9, 0x_86, 0x_65, 0x_81, 0x_A0,
		0x_EA, 0x_05, 0x_72, 0x_C8, 0x_EE, 0x_1D, 0x_90, 0x_F6, 0x_5E, 0x_F8, 0x_5A, 0x_99, 0x_7C, 0x_FA, 0x_B0,
		0x_BA, 0x_24, 0x_69, 0x_9E, 0x_F5, 0x_50, 0x_76, 0x_3B, 0x_D7, 0x_71, 0x_E3, 0x_EB, 0x_78, 0x_25, 0x_6D,
		0x_9F, 0x_63, 0x_5D, 0x_D3, 0x_FD, 0x_98, 0x_CF, 0x_40,
	];

	helper(S, BASE, -80_021_922);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_970_542_838_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_970_542_838_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_20,
		0x_0A, 0x_0D, 0x_20, 0x_20, 0x_0C, 0x_20, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0C,
		0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_0A, 0x_20, 0x_2D, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_88, 0x_2A,
		0x_63, 0x_49, 0x_62, 0x_C0, 0x_45, 0x_48, 0x_05, 0x_A4, 0x_BB, 0x_A4, 0x_C6, 0x_1D, 0x_E1, 0x_02, 0x_CB,
		0x_FC, 0x_A9, 0x_D1, 0x_FC, 0x_DA, 0x_88, 0x_05, 0x_84, 0x_B3, 0x_C4, 0x_AF, 0x_D8, 0x_D8, 0x_1F, 0x_DB,
		0x_F8, 0x_76, 0x_B1, 0x_E9, 0x_FC,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_90, 0x_69, 0x_E6, 0x_36, 0x_88, 0x_4D, 0x_CE, 0x_D1, 0x_CD, 0x_21, 0x_50, 0x_C3, 0x_23, 0x_08,
		0x_35, 0x_96, 0x_59, 0x_53, 0x_43, 0x_BF, 0x_93, 0x_64, 0x_B6, 0x_CB, 0x_16, 0x_3C, 0x_7B, 0x_FE, 0x_1B,
		0x_7C, 0x_A2, 0x_F8, 0x_E9, 0x_9B, 0x_7D, 0x_C7, 0x_D7, 0x_92, 0x_AB, 0x_14, 0x_C6, 0x_D9, 0x_C4, 0x_A6,
		0x_DD, 0x_55, 0x_5F, 0x_51, 0x_AE, 0x_77, 0x_7A, 0x_12, 0x_BD, 0x_8C, 0x_29, 0x_E1, 0x_A9, 0x_76, 0x_02,
		0x_48, 0x_1D, 0x_68, 0x_BB, 0x_66, 0x_DB, 0x_1E, 0x_81, 0x_56, 0x_A4, 0x_33, 0x_63, 0x_3B, 0x_E5, 0x_17,
		0x_B1, 0x_62, 0x_A0, 0x_B3, 0x_1F, 0x_F3, 0x_5E, 0x_D8, 0x_49, 0x_DA, 0x_0E, 0x_84, 0x_6F, 0x_9E, 0x_22,
		0x_FC, 0x_44, 0x_05, 0x_EC, 0x_2F, 0x_91, 0x_B9, 0x_8F, 0x_AF, 0x_6A, 0x_EF, 0x_41, 0x_01, 0x_18, 0x_15,
		0x_40, 0x_4F, 0x_2A, 0x_27, 0x_AA, 0x_78, 0x_75, 0x_45,
	];

	helper(S, BASE, -970_542_838);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_1_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_1_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0B,
		0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_2D, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F,
		0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F,
		0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_4F, 0x_EE, 0x_94, 0x_A0, 0x_16, 0x_04, 0x_6A, 0x_9A,
		0x_C0, 0x_96, 0x_7A, 0x_EA, 0x_AB, 0x_86, 0x_6B, 0x_A4, 0x_8B, 0x_46, 0x_C9, 0x_21, 0x_E9, 0x_E8, 0x_44,
		0x_5A,
	];
	const BASE: &[u8] = &[
		0x_4F, 0x_EE, 0x_01, 0x_CD, 0x_95, 0x_F3, 0x_CE, 0x_7B, 0x_71, 0x_4C, 0x_B6, 0x_03, 0x_FA, 0x_D2, 0x_AD,
		0x_63, 0x_1D, 0x_A4, 0x_BF, 0x_C7, 0x_58, 0x_8C, 0x_5E, 0x_5A, 0x_15, 0x_7E, 0x_F6, 0x_3B, 0x_76, 0x_A5,
		0x_92, 0x_E8, 0x_16, 0x_19, 0x_A0, 0x_04, 0x_7D, 0x_54, 0x_6B, 0x_90, 0x_C4, 0x_97, 0x_2A, 0x_79, 0x_67,
		0x_49, 0x_64, 0x_9E, 0x_08, 0x_6C, 0x_E9, 0x_AE, 0x_86, 0x_A1, 0x_0E, 0x_BB, 0x_D5, 0x_A8, 0x_ED, 0x_11,
		0x_3A, 0x_F2, 0x_13, 0x_EC, 0x_10, 0x_E2, 0x_51, 0x_29, 0x_39, 0x_06, 0x_A7, 0x_8D, 0x_7A, 0x_14, 0x_CF,
		0x_60, 0x_AB, 0x_78, 0x_44, 0x_C2, 0x_FF, 0x_43, 0x_B7, 0x_81, 0x_45, 0x_BE, 0x_41, 0x_CC, 0x_9F, 0x_4B,
		0x_D8, 0x_2C, 0x_D6, 0x_75, 0x_61, 0x_AA, 0x_BD, 0x_E5, 0x_59, 0x_17, 0x_D0, 0x_80, 0x_3D, 0x_DD, 0x_42,
		0x_0F, 0x_7C, 0x_FC, 0x_A9, 0x_66, 0x_A2, 0x_28, 0x_82, 0x_68, 0x_12, 0x_FE, 0x_D9, 0x_6E, 0x_3E, 0x_5C,
		0x_A3, 0x_B5, 0x_5D, 0x_33, 0x_6A, 0x_1F, 0x_1C, 0x_8E, 0x_4D, 0x_F0, 0x_3F, 0x_88, 0x_DE, 0x_62, 0x_1A,
		0x_37, 0x_87, 0x_77, 0x_EB, 0x_B8, 0x_9C, 0x_F8, 0x_9A, 0x_EA, 0x_53, 0x_40, 0x_52, 0x_1B, 0x_56, 0x_32,
		0x_D7, 0x_B4, 0x_5F, 0x_F7, 0x_21, 0x_D3, 0x_6D, 0x_C9, 0x_27, 0x_23, 0x_5B, 0x_C3, 0x_D1, 0x_38, 0x_84,
		0x_85, 0x_55, 0x_FD, 0x_96, 0x_2F, 0x_E1, 0x_B9, 0x_50, 0x_91, 0x_98, 0x_C0, 0x_E0, 0x_8F, 0x_74, 0x_9D,
		0x_89, 0x_EF, 0x_4E, 0x_8B, 0x_F1, 0x_69, 0x_25, 0x_22, 0x_CA, 0x_D4, 0x_18, 0x_46, 0x_99,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_94_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_94_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0A,
		0x_0A, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0D, 0x_2D, 0x_F8, 0x_F8, 0x_F8,
		0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_C1,
		0x_A7, 0x_E7, 0x_91, 0x_71, 0x_3D, 0x_10, 0x_D0, 0x_E4, 0x_33, 0x_C8, 0x_C1, 0x_CA, 0x_2C, 0x_E6, 0x_6B,
		0x_E6, 0x_FA, 0x_26, 0x_5A, 0x_12, 0x_1D, 0x_FE, 0x_A5, 0x_3E, 0x_4C, 0x_BD, 0x_A6, 0x_22, 0x_99, 0x_A0,
		0x_3D, 0x_4B, 0x_75, 0x_A0, 0x_65, 0x_0E, 0x_67, 0x_B4,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_DC, 0x_5C, 0x_FF, 0x_5E, 0x_6A, 0x_94, 0x_B1, 0x_F2, 0x_2E, 0x_F3, 0x_7B, 0x_13, 0x_03, 0x_D7,
		0x_17, 0x_43, 0x_6F, 0x_71, 0x_98, 0x_E4, 0x_4B, 0x_AA, 0x_C7, 0x_4C, 0x_D1, 0x_CC, 0x_D3, 0x_49, 0x_22,
		0x_31, 0x_C9, 0x_EB, 0x_01, 0x_F4, 0x_86, 0x_5F, 0x_7E, 0x_F6, 0x_12, 0x_1A, 0x_7D, 0x_8D, 0x_BF, 0x_BE,
		0x_58, 0x_EA, 0x_62, 0x_CB, 0x_83, 0x_76, 0x_7C, 0x_28, 0x_37, 0x_10, 0x_72, 0x_E9, 0x_36, 0x_41, 0x_D5,
		0x_60, 0x_B4, 0x_47, 0x_52, 0x_3E, 0x_35, 0x_19, 0x_C6, 0x_89, 0x_DB, 0x_C8, 0x_40, 0x_97, 0x_4D, 0x_A8,
		0x_33, 0x_96, 0x_48, 0x_AB, 0x_3D, 0x_AC, 0x_08, 0x_D0, 0x_FC, 0x_0F, 0x_DE, 0x_FB, 0x_7A, 0x_9E, 0x_14,
		0x_DA, 0x_75, 0x_8B, 0x_FE, 0x_C1, 0x_6E, 0x_24, 0x_B2, 0x_A4, 0x_F1, 0x_5A, 0x_0E, 0x_91, 0x_99, 0x_6D,
		0x_50, 0x_3A, 0x_B0, 0x_D9, 0x_23, 0x_CF, 0x_8E, 0x_61, 0x_65, 0x_CA, 0x_A5, 0x_93, 0x_34, 0x_87, 0x_AF,
		0x_05, 0x_B6, 0x_B8, 0x_27, 0x_EE, 0x_C5, 0x_A1, 0x_46, 0x_82, 0x_E2, 0x_79, 0x_AE, 0x_E1, 0x_2A, 0x_C0,
		0x_CE, 0x_3C, 0x_85, 0x_95, 0x_67, 0x_54, 0x_E7, 0x_A9, 0x_1D, 0x_E6, 0x_42, 0x_FA, 0x_4A, 0x_44, 0x_A3,
		0x_F0, 0x_E0, 0x_BB, 0x_39, 0x_8C, 0x_BD, 0x_ED, 0x_D6, 0x_F5, 0x_16, 0x_69, 0x_D4, 0x_66, 0x_E3, 0x_B5,
		0x_2C, 0x_FD, 0x_1F, 0x_68, 0x_A2, 0x_C4, 0x_45, 0x_3F, 0x_B3, 0x_84, 0x_07, 0x_78, 0x_C3, 0x_26, 0x_15,
		0x_53, 0x_8A, 0x_38, 0x_D2, 0x_55, 0x_06, 0x_BC, 0x_A6, 0x_F7, 0x_63, 0x_A0, 0x_B7, 0x_6B,
	];

	helper(S, BASE, -94);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_756_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_756_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0D,
		0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0A, 0x_09,
		0x_0B, 0x_20, 0x_2D, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96,
		0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96, 0x_96,
		0x_76, 0x_0F, 0x_6B, 0x_02, 0x_A4, 0x_81,
	];
	const BASE: &[u8] = &[
		0x_96, 0x_F3, 0x_22, 0x_76, 0x_89, 0x_CE, 0x_0E, 0x_68, 0x_1F, 0x_57, 0x_C8, 0x_28, 0x_33, 0x_02, 0x_3B,
		0x_AE, 0x_F5, 0x_7E, 0x_12, 0x_AA, 0x_4F, 0x_DA, 0x_C7, 0x_01, 0x_54, 0x_41, 0x_6D, 0x_1B, 0x_D0, 0x_61,
		0x_B2, 0x_E2, 0x_36, 0x_F1, 0x_23, 0x_93, 0x_E8, 0x_6E, 0x_FA, 0x_19, 0x_F2, 0x_47, 0x_F6, 0x_50, 0x_2E,
		0x_EB, 0x_6C, 0x_C2, 0x_67, 0x_92, 0x_14, 0x_A0, 0x_85, 0x_78, 0x_56, 0x_1C, 0x_DD, 0x_5D, 0x_5C, 0x_B1,
		0x_26, 0x_69, 0x_38, 0x_E1, 0x_BA, 0x_FD, 0x_17, 0x_D5, 0x_74, 0x_08, 0x_AD, 0x_4E, 0x_D8, 0x_37, 0x_1E,
		0x_2A, 0x_E6, 0x_97, 0x_CB, 0x_DC, 0x_7C, 0x_40, 0x_15, 0x_C1, 0x_DE, 0x_2F, 0x_CC, 0x_BE, 0x_94, 0x_FE,
		0x_70, 0x_B0, 0x_AB, 0x_FF, 0x_3D, 0x_99, 0x_55, 0x_31, 0x_42, 0x_C6, 0x_A7, 0x_58, 0x_A8, 0x_DB, 0x_BB,
		0x_81, 0x_32, 0x_44, 0x_10, 0x_A1, 0x_98, 0x_EA, 0x_79, 0x_39, 0x_8C, 0x_AC, 0x_4B, 0x_7B, 0x_D3, 0x_BC,
		0x_9F, 0x_11, 0x_4D, 0x_05, 0x_7A, 0x_25, 0x_60, 0x_F8, 0x_D1, 0x_F9, 0x_B8, 0x_FB, 0x_A4, 0x_87, 0x_C9,
		0x_91, 0x_86, 0x_52, 0x_5B, 0x_90, 0x_F7, 0x_EC, 0x_80, 0x_07, 0x_E7, 0x_EE, 0x_A2, 0x_2C, 0x_AF, 0x_E0,
		0x_45, 0x_BF, 0x_5E, 0x_B9, 0x_C3, 0x_C5, 0x_27, 0x_C0, 0x_73, 0x_8E, 0x_B3, 0x_63, 0x_B6, 0x_B7, 0x_3A,
		0x_9A, 0x_CA, 0x_B4, 0x_CD, 0x_BD, 0x_E3, 0x_16, 0x_84, 0x_8D, 0x_88, 0x_CF, 0x_1D, 0x_0F, 0x_E5, 0x_C4,
		0x_75, 0x_9C, 0x_ED, 0x_3E, 0x_18, 0x_F0, 0x_F4, 0x_D6, 0x_66, 0x_6A, 0x_5F, 0x_03, 0x_06,
	];

	helper(S, BASE, -756);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_7_843_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_7_843_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0A,
		0x_0C, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_2D, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99,
		0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99,
		0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_7B, 0x_5A, 0x_63,
		0x_74, 0x_45, 0x_F4, 0x_1C, 0x_4D, 0x_38, 0x_73, 0x_3F, 0x_C7, 0x_C4, 0x_35, 0x_C6, 0x_9B, 0x_A2, 0x_C8,
		0x_6A, 0x_B5, 0x_C3, 0x_A2, 0x_F6, 0x_05, 0x_9E, 0x_D1, 0x_79, 0x_4A, 0x_AD, 0x_AA, 0x_A4, 0x_C0, 0x_BB,
		0x_BF, 0x_08, 0x_22, 0x_1F, 0x_47, 0x_FF, 0x_9F,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_70, 0x_97, 0x_14, 0x_AC, 0x_AF, 0x_BE, 0x_93, 0x_21, 0x_CA, 0x_17, 0x_BF, 0x_16, 0x_83, 0x_C0,
		0x_A2, 0x_90, 0x_25, 0x_8F, 0x_18, 0x_F8, 0x_E8, 0x_B2, 0x_3F, 0x_D0, 0x_9B, 0x_A3, 0x_F6, 0x_E0, 0x_53,
		0x_43, 0x_F0, 0x_4D, 0x_0E, 0x_71, 0x_E3, 0x_36, 0x_DA, 0x_87, 0x_9E, 0x_7B, 0x_6A, 0x_45, 0x_CF, 0x_FF,
		0x_A5, 0x_2C, 0x_5B, 0x_34, 0x_AA, 0x_69, 0x_4A, 0x_CC, 0x_23, 0x_DE, 0x_CE, 0x_62, 0x_A4, 0x_7C, 0x_1D,
		0x_22, 0x_E2, 0x_B6, 0x_1B, 0x_C3, 0x_D2, 0x_B5, 0x_BB, 0x_5F, 0x_EB, 0x_F3, 0x_27, 0x_FB, 0x_42, 0x_C6,
		0x_FC, 0x_BA, 0x_EC, 0x_D7, 0x_32, 0x_81, 0x_57, 0x_1F, 0x_1E, 0x_C1, 0x_47, 0x_3E, 0x_C7, 0x_84, 0x_12,
		0x_6C, 0x_40, 0x_37, 0x_04, 0x_9A, 0x_E6, 0x_E9, 0x_A6, 0x_D1, 0x_A8, 0x_13, 0x_1A, 0x_9F, 0x_66, 0x_49,
		0x_11, 0x_6D, 0x_AB, 0x_3A, 0x_79, 0x_74, 0x_DC, 0x_73, 0x_7D, 0x_B3, 0x_24, 0x_EE, 0x_8C, 0x_4E, 0x_EA,
		0x_E5, 0x_77, 0x_8A, 0x_5A, 0x_7F, 0x_65, 0x_F2, 0x_05, 0x_5E, 0x_DF, 0x_06, 0x_1C, 0x_85, 0x_26, 0x_46,
		0x_68, 0x_60, 0x_8D, 0x_50, 0x_AD, 0x_31, 0x_08, 0x_B8, 0x_B4, 0x_67, 0x_30, 0x_9C, 0x_29, 0x_E4, 0x_F1,
		0x_D8, 0x_4F, 0x_6E, 0x_52, 0x_2F, 0x_41, 0x_0F, 0x_B0, 0x_E7, 0x_98, 0x_02, 0x_2A, 0x_C9, 0x_03, 0x_F4,
		0x_86, 0x_7E, 0x_4C, 0x_CB, 0x_54, 0x_48, 0x_44, 0x_3D, 0x_FA, 0x_3B, 0x_A0, 0x_B1, 0x_72, 0x_33, 0x_D4,
		0x_38, 0x_07, 0x_76, 0x_C4, 0x_DD, 0x_AE, 0x_EF, 0x_35, 0x_D9, 0x_6F, 0x_59, 0x_C8, 0x_F9,
	];

	helper(S, BASE, -7_843);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_10_318_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_10_318_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_09, 0x_2D, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_4A, 0x_57, 0x_34, 0x_F2, 0x_6E, 0x_FF, 0x_E8, 0x_44, 0x_13, 0x_CF, 0x_CC, 0x_83, 0x_DF, 0x_32, 0x_5D,
		0x_A2, 0x_68, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_8D, 0x_12, 0x_1B, 0x_94, 0x_8B, 0x_24, 0x_FF, 0x_C9, 0x_04, 0x_8F, 0x_DA, 0x_2F, 0x_81, 0x_1E,
		0x_D0, 0x_EA, 0x_49, 0x_E2, 0x_32, 0x_89, 0x_6D, 0x_50, 0x_80, 0x_A8, 0x_FA, 0x_6B, 0x_BD, 0x_5E, 0x_7D,
		0x_A5, 0x_86, 0x_84, 0x_EE, 0x_DC, 0x_28, 0x_F1, 0x_C0, 0x_64, 0x_D5, 0x_A9, 0x_7F, 0x_B8, 0x_47, 0x_29,
		0x_CC, 0x_55, 0x_44, 0x_FC, 0x_B6, 0x_1C, 0x_C3, 0x_C6, 0x_57, 0x_A7, 0x_BB, 0x_33, 0x_DE, 0x_7A, 0x_C1,
		0x_D2, 0x_01, 0x_9C, 0x_8A, 0x_67, 0x_39, 0x_A1, 0x_4C, 0x_98, 0x_37, 0x_97, 0x_F6, 0x_EC, 0x_06, 0x_5A,
		0x_D8, 0x_B2, 0x_07, 0x_59, 0x_27, 0x_4E, 0x_5C, 0x_92, 0x_B1, 0x_83, 0x_30, 0x_FE, 0x_AD, 0x_B3, 0x_34,
		0x_19, 0x_48, 0x_D7, 0x_6E, 0x_0F, 0x_F5, 0x_B0, 0x_99, 0x_D6, 0x_35, 0x_6A, 0x_DD, 0x_E7, 0x_9F, 0x_13,
		0x_78, 0x_41, 0x_FB, 0x_E8, 0x_95, 0x_8C, 0x_E1, 0x_62, 0x_53, 0x_87, 0x_9A, 0x_CA, 0x_FD, 0x_45, 0x_A2,
		0x_AC, 0x_17, 0x_A4, 0x_5F, 0x_E9, 0x_BA, 0x_E6, 0x_18, 0x_DF, 0x_21, 0x_5D, 0x_AF, 0x_D3, 0x_F4, 0x_71,
		0x_3C, 0x_40, 0x_85, 0x_88, 0x_D9, 0x_ED, 0x_0E, 0x_BC, 0x_91, 0x_F3, 0x_76, 0x_A3, 0x_C7, 0x_9E, 0x_CE,
		0x_26, 0x_DB, 0x_F9, 0x_EF, 0x_90, 0x_3A, 0x_68, 0x_4D, 0x_7C, 0x_D1, 0x_70, 0x_56, 0x_CF, 0x_96, 0x_22,
		0x_63, 0x_79, 0x_31, 0x_82, 0x_51, 0x_3B, 0x_2C, 0x_B4, 0x_9B, 0x_CB, 0x_7B, 0x_AA, 0x_73, 0x_60, 0x_02,
		0x_25, 0x_E5, 0x_14, 0x_F0, 0x_A6, 0x_E4, 0x_54, 0x_61, 0x_2A, 0x_7E, 0x_52, 0x_EB, 0x_1F,
	];

	helper(S, BASE, -10_318);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_893_336_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_893_336_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_09,
		0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_0C,
		0x_0D, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_2D, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_F5, 0x_9B,
		0x_BD, 0x_1E, 0x_8B, 0x_21, 0x_DA, 0x_D1, 0x_80, 0x_E8, 0x_74, 0x_90, 0x_EA, 0x_DC, 0x_72, 0x_91, 0x_2E,
		0x_90, 0x_9B, 0x_9D, 0x_D2, 0x_42, 0x_E5, 0x_24, 0x_12, 0x_7B, 0x_CF, 0x_84, 0x_83, 0x_27, 0x_6F, 0x_ED,
		0x_5E, 0x_8F, 0x_D5, 0x_71, 0x_EF, 0x_CF,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_26, 0x_7C, 0x_D4, 0x_1A, 0x_5F, 0x_52, 0x_13, 0x_D8, 0x_45, 0x_6C, 0x_A7, 0x_12, 0x_F3, 0x_A6,
		0x_FC, 0x_3E, 0x_72, 0x_21, 0x_FB, 0x_55, 0x_EC, 0x_18, 0x_F5, 0x_D3, 0x_7F, 0x_CB, 0x_B9, 0x_38, 0x_C9,
		0x_A3, 0x_24, 0x_48, 0x_F9, 0x_47, 0x_E5, 0x_CC, 0x_66, 0x_4B, 0x_B5, 0x_D1, 0x_37, 0x_BF, 0x_11, 0x_88,
		0x_6A, 0x_87, 0x_DA, 0x_92, 0x_06, 0x_07, 0x_28, 0x_BE, 0x_8D, 0x_B8, 0x_27, 0x_C1, 0x_9E, 0x_42, 0x_CD,
		0x_94, 0x_C4, 0x_AE, 0x_99, 0x_30, 0x_53, 0x_9F, 0x_C2, 0x_4A, 0x_6F, 0x_8B, 0x_03, 0x_D7, 0x_3C, 0x_DD,
		0x_E7, 0x_8F, 0x_E0, 0x_50, 0x_EA, 0x_AC, 0x_DB, 0x_C6, 0x_7E, 0x_17, 0x_9C, 0x_D5, 0x_4C, 0x_DC, 0x_74,
		0x_61, 0x_FD, 0x_64, 0x_3D, 0x_D2, 0x_A5, 0x_71, 0x_29, 0x_C5, 0x_62, 0x_02, 0x_6D, 0x_65, 0x_91, 0x_ED,
		0x_DF, 0x_3B, 0x_5D, 0x_8A, 0x_3A, 0x_84, 0x_E3, 0x_04, 0x_A1, 0x_8E, 0x_CA, 0x_E6, 0x_95, 0x_35, 0x_9D,
		0x_D6, 0x_56, 0x_FE, 0x_43, 0x_4E, 0x_7D, 0x_82, 0x_EF, 0x_E8, 0x_05, 0x_1C, 0x_22, 0x_BD, 0x_78, 0x_01,
		0x_25, 0x_E2, 0x_68, 0x_34, 0x_C8, 0x_98, 0x_AA, 0x_E1, 0x_2E, 0x_89, 0x_7B, 0x_BA, 0x_F0, 0x_31, 0x_F7,
		0x_83, 0x_BC, 0x_58, 0x_FA, 0x_EE, 0x_D9, 0x_FF, 0x_C3, 0x_A4, 0x_B4, 0x_2C, 0x_90, 0x_CF, 0x_40, 0x_5E,
		0x_2F, 0x_73, 0x_F4, 0x_19, 0x_F2, 0x_1D, 0x_B7, 0x_D0, 0x_08, 0x_85, 0x_F6, 0x_B0, 0x_2A, 0x_80, 0x_96,
		0x_4F, 0x_57, 0x_E4, 0x_51, 0x_6B, 0x_39, 0x_C7, 0x_A9, 0x_DE, 0x_9B, 0x_59, 0x_44, 0x_C0,
	];

	helper(S, BASE, -893_336);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_5_461_210_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_5_461_210_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_20,
		0x_20, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_09,
		0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_2D, 0x_5E, 0x_5E, 0x_5E, 0x_5E,
		0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_5E, 0x_61, 0x_AD, 0x_5F, 0x_AC, 0x_D2, 0x_4B, 0x_52, 0x_2F, 0x_6D,
		0x_43, 0x_32, 0x_66, 0x_D2, 0x_B8, 0x_3E, 0x_A7, 0x_F0, 0x_3F, 0x_38, 0x_DF, 0x_BC, 0x_58, 0x_F6, 0x_8F,
		0x_0E,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_C7, 0x_05, 0x_34, 0x_67, 0x_99, 0x_29, 0x_B9, 0x_CA, 0x_AF, 0x_08, 0x_7E, 0x_6D, 0x_D2, 0x_C3,
		0x_40, 0x_18, 0x_69, 0x_7A, 0x_A2, 0x_F8, 0x_2C, 0x_EF, 0x_9E, 0x_F0, 0x_A5, 0x_51, 0x_36, 0x_F4, 0x_C4,
		0x_D5, 0x_86, 0x_87, 0x_78, 0x_25, 0x_85, 0x_8C, 0x_BC, 0x_52, 0x_3B, 0x_A1, 0x_C2, 0x_4F, 0x_12, 0x_62,
		0x_10, 0x_BA, 0x_E9, 0x_04, 0x_4D, 0x_FB, 0x_7C, 0x_E0, 0x_06, 0x_D0, 0x_BF, 0x_FF, 0x_65, 0x_6A, 0x_7F,
		0x_F6, 0x_3A, 0x_1A, 0x_91, 0x_16, 0x_1E, 0x_90, 0x_5A, 0x_FE, 0x_32, 0x_50, 0x_9A, 0x_DC, 0x_D9, 0x_56,
		0x_EC, 0x_AE, 0x_E5, 0x_89, 0x_9B, 0x_74, 0x_0F, 0x_5F, 0x_AA, 0x_14, 0x_39, 0x_3F, 0x_27, 0x_8F, 0x_58,
		0x_9D, 0x_22, 0x_23, 0x_96, 0x_C6, 0x_3E, 0x_7B, 0x_F3, 0x_8B, 0x_11, 0x_59, 0x_D6, 0x_FC, 0x_68, 0x_DA,
		0x_77, 0x_CB, 0x_CC, 0x_46, 0x_8E, 0x_01, 0x_4B, 0x_0E, 0x_48, 0x_2E, 0x_D3, 0x_D8, 0x_45, 0x_AD, 0x_E1,
		0x_38, 0x_44, 0x_DF, 0x_6F, 0x_24, 0x_DD, 0x_A7, 0x_F1, 0x_43, 0x_6B, 0x_BE, 0x_98, 0x_15, 0x_33, 0x_CD,
		0x_8A, 0x_FA, 0x_5B, 0x_92, 0x_30, 0x_A4, 0x_DE, 0x_B5, 0x_79, 0x_1C, 0x_C8, 0x_61, 0x_4C, 0x_A6, 0x_EA,
		0x_7D, 0x_66, 0x_28, 0x_57, 0x_C5, 0x_95, 0x_D4, 0x_F2, 0x_4A, 0x_64, 0x_6C, 0x_84, 0x_E4, 0x_B8, 0x_3D,
		0x_82, 0x_76, 0x_B0, 0x_E7, 0x_2A, 0x_A0, 0x_53, 0x_BB, 0x_F5, 0x_42, 0x_E2, 0x_D7, 0x_CF, 0x_35, 0x_F7,
		0x_ED, 0x_AB, 0x_5D, 0x_93, 0x_1F, 0x_1B, 0x_72, 0x_C1, 0x_C0, 0x_70, 0x_B7, 0x_97, 0x_2F,
	];

	helper(S, BASE, -5_461_210);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_43_352_064_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_43_352_064_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0A,
		0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0B, 0x_2D, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_61, 0x_F1, 0x_5D, 0x_E3, 0x_E4, 0x_96, 0x_3A, 0x_D5, 0x_05, 0x_3D, 0x_CF, 0x_9A, 0x_6A, 0x_02, 0x_AC,
		0x_92, 0x_7F, 0x_A0, 0x_44, 0x_76, 0x_86, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_05, 0x_EB, 0x_29, 0x_63, 0x_F1, 0x_61, 0x_D5, 0x_9D, 0x_65, 0x_86, 0x_04, 0x_A9, 0x_87, 0x_45,
		0x_97, 0x_1B, 0x_78, 0x_E3, 0x_1A, 0x_6E, 0x_7F, 0x_E5, 0x_A8, 0x_7D, 0x_49, 0x_6A, 0x_4B, 0x_88, 0x_22,
		0x_8D, 0x_02, 0x_85, 0x_24, 0x_83, 0x_43, 0x_AC, 0x_4A, 0x_98, 0x_41, 0x_B8, 0x_EE, 0x_40, 0x_50, 0x_30,
		0x_DB, 0x_9F, 0x_8A, 0x_5B, 0x_08, 0x_1F, 0x_BC, 0x_52, 0x_3A, 0x_3D, 0x_12, 0x_10, 0x_0F, 0x_A3, 0x_F3,
		0x_31, 0x_3E, 0x_6C, 0x_99, 0x_81, 0x_E8, 0x_96, 0x_EF, 0x_C1, 0x_55, 0x_C2, 0x_42, 0x_ED, 0x_CD, 0x_06,
		0x_5C, 0x_D9, 0x_2F, 0x_BE, 0x_CF, 0x_90, 0x_73, 0x_58, 0x_C5, 0x_5A, 0x_84, 0x_7C, 0x_C7, 0x_FA, 0x_F8,
		0x_FC, 0x_1C, 0x_DF, 0x_19, 0x_AA, 0x_BB, 0x_A0, 0x_C3, 0x_D0, 0x_23, 0x_17, 0x_CB, 0x_27, 0x_07, 0x_44,
		0x_8F, 0x_71, 0x_75, 0x_39, 0x_13, 0x_A7, 0x_B2, 0x_C6, 0x_E7, 0x_70, 0x_9A, 0x_DC, 0x_62, 0x_F7, 0x_D8,
		0x_FF, 0x_D2, 0x_93, 0x_A4, 0x_92, 0x_EA, 0x_AE, 0x_51, 0x_A1, 0x_B5, 0x_B7, 0x_9B, 0x_26, 0x_4D, 0x_25,
		0x_AF, 0x_15, 0x_CE, 0x_5F, 0x_F2, 0x_37, 0x_46, 0x_6D, 0x_7B, 0x_69, 0x_C9, 0x_21, 0x_E6, 0x_18, 0x_76,
		0x_D4, 0x_AD, 0x_80, 0x_28, 0x_F0, 0x_4F, 0x_6B, 0x_E0, 0x_11, 0x_56, 0x_DE, 0x_F5, 0x_E9, 0x_5D, 0x_5E,
		0x_EC, 0x_01, 0x_A5, 0x_8E, 0x_03, 0x_82, 0x_1D, 0x_8B, 0x_60, 0x_0E, 0x_B6, 0x_F6, 0x_CC, 0x_AB, 0x_FB,
		0x_3C, 0x_7E, 0x_64, 0x_32, 0x_72, 0x_3B, 0x_D7, 0x_D1, 0x_74, 0x_57, 0x_66, 0x_35, 0x_A2,
	];

	helper(S, BASE, -43_352_064);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_924_659_481_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_924_659_481_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0C,
		0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_0C, 0x_0D,
		0x_0C, 0x_2D, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_B4, 0x_C1, 0x_23, 0x_A4,
		0x_C8, 0x_D0, 0x_C0, 0x_96,
	];
	const BASE: &[u8] = &[
		0x_B4, 0x_7F, 0x_46, 0x_71, 0x_5F, 0x_A5, 0x_84, 0x_8B, 0x_EB, 0x_B2, 0x_CC, 0x_AE, 0x_9E, 0x_06, 0x_9D,
		0x_36, 0x_CE, 0x_50, 0x_6F, 0x_80, 0x_96, 0x_49, 0x_34, 0x_7D, 0x_14, 0x_97, 0x_82, 0x_4E, 0x_AA, 0x_3C,
		0x_52, 0x_9A, 0x_17, 0x_05, 0x_25, 0x_CD, 0x_E3, 0x_BD, 0x_F9, 0x_5A, 0x_F1, 0x_7E, 0x_38, 0x_D4, 0x_19,
		0x_87, 0x_A7, 0x_D3, 0x_F5, 0x_43, 0x_12, 0x_1B, 0x_5E, 0x_78, 0x_24, 0x_51, 0x_E0, 0x_18, 0x_47, 0x_04,
		0x_AF, 0x_1D, 0x_BB, 0x_C9, 0x_0E, 0x_BA, 0x_E7, 0x_A0, 0x_72, 0x_03, 0x_73, 0x_4F, 0x_D8, 0x_79, 0x_2C,
		0x_EA, 0x_3A, 0x_07, 0x_69, 0x_10, 0x_93, 0x_ED, 0x_92, 0x_37, 0x_32, 0x_01, 0x_CF, 0x_A2, 0x_41, 0x_90,
		0x_FE, 0x_D9, 0x_1F, 0x_F8, 0x_2E, 0x_48, 0x_B5, 0x_F6, 0x_44, 0x_E5, 0x_EC, 0x_75, 0x_3B, 0x_F0, 0x_5D,
		0x_6E, 0x_D5, 0x_E9, 0x_70, 0x_C0, 0x_74, 0x_81, 0x_BC, 0x_45, 0x_35, 0x_B3, 0x_D1, 0x_2A, 0x_C7, 0x_23,
		0x_DD, 0x_95, 0x_13, 0x_66, 0x_8F, 0x_B1, 0x_1C, 0x_6C, 0x_C1, 0x_DE, 0x_22, 0x_E2, 0x_29, 0x_39, 0x_C5,
		0x_4C, 0x_88, 0x_C2, 0x_B8, 0x_B7, 0x_F2, 0x_59, 0x_A4, 0x_11, 0x_8D, 0x_E8, 0x_EE, 0x_B6, 0x_C8, 0x_53,
		0x_A9, 0x_83, 0x_5C, 0x_31, 0x_64, 0x_7C, 0x_4B, 0x_E1, 0x_21, 0x_AC, 0x_61, 0x_DA, 0x_55, 0x_E6, 0x_33,
		0x_89, 0x_9C, 0x_B9, 0x_30, 0x_28, 0x_98, 0x_CA, 0x_DB, 0x_86, 0x_91, 0x_68, 0x_D7, 0x_AD, 0x_A8, 0x_65,
		0x_E4, 0x_16, 0x_B0, 0x_57, 0x_6D, 0x_C3, 0x_76, 0x_7A, 0x_7B, 0x_94, 0x_3D, 0x_1E, 0x_C4,
	];

	helper(S, BASE, -924_659_481);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_5_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_5_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_0A, 0x_0D,
		0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_2D, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_5B, 0x_0A,
		0x_5B, 0x_4B, 0x_BF, 0x_D0, 0x_1D, 0x_1E, 0x_76, 0x_DE, 0x_42, 0x_EB, 0x_22, 0x_8B, 0x_2F, 0x_E0, 0x_FF,
		0x_30, 0x_A8, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_2F, 0x_D9, 0x_13, 0x_12, 0x_5B, 0x_A3, 0x_05, 0x_9C, 0x_F0, 0x_FB, 0x_1F, 0x_82, 0x_55, 0x_9A,
		0x_B7, 0x_D7, 0x_89, 0x_A1, 0x_15, 0x_73, 0x_E3, 0x_16, 0x_77, 0x_D6, 0x_EF, 0x_BB, 0x_C3, 0x_F2, 0x_FE,
		0x_B3, 0x_C1, 0x_26, 0x_53, 0x_6E, 0x_E0, 0x_5C, 0x_A2, 0x_A5, 0x_92, 0x_C6, 0x_06, 0x_CC, 0x_29, 0x_39,
		0x_96, 0x_3D, 0x_79, 0x_FC, 0x_84, 0x_CB, 0x_85, 0x_F9, 0x_4F, 0x_E6, 0x_59, 0x_14, 0x_44, 0x_DA, 0x_EA,
		0x_32, 0x_D2, 0x_99, 0x_45, 0x_F1, 0x_54, 0x_40, 0x_95, 0x_28, 0x_BA, 0x_5D, 0x_7B, 0x_F8, 0x_BF, 0x_FA,
		0x_08, 0x_34, 0x_A9, 0x_19, 0x_8C, 0x_DC, 0x_25, 0x_C8, 0x_D5, 0x_94, 0x_04, 0x_46, 0x_69, 0x_91, 0x_8B,
		0x_DD, 0x_D0, 0x_7A, 0x_5E, 0x_65, 0x_CA, 0x_DF, 0x_31, 0x_98, 0x_CE, 0x_58, 0x_3B, 0x_8D, 0x_6A, 0x_2A,
		0x_C9, 0x_9E, 0x_83, 0x_56, 0x_35, 0x_22, 0x_DE, 0x_2E, 0x_A4, 0x_E9, 0x_52, 0x_41, 0x_B8, 0x_42, 0x_FF,
		0x_5F, 0x_23, 0x_86, 0x_74, 0x_EC, 0x_47, 0x_51, 0x_1A, 0x_3E, 0x_27, 0x_B6, 0x_43, 0x_18, 0x_33, 0x_DB,
		0x_9D, 0x_72, 0x_EE, 0x_7F, 0x_E5, 0x_71, 0x_1C, 0x_E4, 0x_11, 0x_9B, 0x_03, 0x_D1, 0x_1B, 0x_1D, 0x_66,
		0x_7E, 0x_F6, 0x_E1, 0x_CD, 0x_88, 0x_CF, 0x_6B, 0x_E2, 0x_07, 0x_17, 0x_76, 0x_F4, 0x_70, 0x_93, 0x_48,
		0x_F5, 0x_BC, 0x_36, 0x_24, 0x_D8, 0x_B9, 0x_49, 0x_4D, 0x_62, 0x_A7, 0x_01, 0x_AD, 0x_E7, 0x_A6, 0x_90,
		0x_67, 0x_C7, 0x_B2, 0x_97, 0x_AF, 0x_87, 0x_D4, 0x_21, 0x_6F, 0x_A0, 0x_0F, 0x_4A, 0x_81, 0x_8F, 0x_ED,
		0x_4B, 0x_6C, 0x_3A, 0x_5A, 0x_FD, 0x_64, 0x_2C, 0x_AB, 0x_37, 0x_30, 0x_F3, 0x_3F, 0x_B4, 0x_F7, 0x_7C,
		0x_8E, 0x_63, 0x_B1, 0x_AA, 0x_68, 0x_B0, 0x_60, 0x_D3, 0x_02, 0x_1E, 0x_AE, 0x_8A, 0x_57, 0x_7D, 0x_B5,
		0x_80, 0x_3C, 0x_50, 0x_BE, 0x_78, 0x_6D, 0x_4C, 0x_0E, 0x_C5, 0x_75, 0x_EB, 0x_BD, 0x_AC, 0x_10, 0x_C4,
		0x_C0, 0x_9F, 0x_61, 0x_38, 0x_4E, 0x_E8, 0x_C2,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_83_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_83_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_0D, 0x_2D, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_8B, 0x_F3,
		0x_2D, 0x_C4, 0x_7C, 0x_E5, 0x_D2, 0x_9C, 0x_C2, 0x_10, 0x_97, 0x_D6, 0x_E2, 0x_4E, 0x_CC, 0x_59, 0x_68,
		0x_60, 0x_4E, 0x_FD, 0x_E1, 0x_B4, 0x_92, 0x_A2, 0x_1A, 0x_DE, 0x_B1, 0x_68, 0x_FF, 0x_D8, 0x_A4, 0x_13,
		0x_30, 0x_0E, 0x_D2, 0x_BA, 0x_F3, 0x_7A, 0x_C8, 0x_AA, 0x_C7, 0x_A3, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_8B, 0x_A9, 0x_F0, 0x_13, 0x_A8, 0x_A3, 0x_84, 0x_1C, 0x_4A, 0x_3C, 0x_E5, 0x_88, 0x_51, 0x_C9, 0x_8C,
		0x_27, 0x_21, 0x_01, 0x_94, 0x_D4, 0x_B6, 0x_77, 0x_43, 0x_78, 0x_6A, 0x_93, 0x_C2, 0x_D6, 0x_50, 0x_CA,
		0x_53, 0x_1D, 0x_DE, 0x_AD, 0x_74, 0x_71, 0x_1A, 0x_B9, 0x_E7, 0x_18, 0x_C8, 0x_46, 0x_F6, 0x_A1, 0x_D5,
		0x_6C, 0x_38, 0x_75, 0x_F4, 0x_3B, 0x_EA, 0x_CB, 0x_FA, 0x_2C, 0x_07, 0x_1F, 0x_64, 0x_95, 0x_41, 0x_29,
		0x_AE, 0x_44, 0x_C3, 0x_C6, 0x_7B, 0x_32, 0x_BC, 0x_AB, 0x_28, 0x_15, 0x_EC, 0x_F1, 0x_0F, 0x_70, 0x_BF,
		0x_5E, 0x_79, 0x_52, 0x_FB, 0x_AF, 0x_EB, 0x_CC, 0x_B1, 0x_F3, 0x_45, 0x_05, 0x_89, 0x_1B, 0x_C0, 0x_14,
		0x_9A, 0x_1E, 0x_C1, 0x_7F, 0x_73, 0x_DB, 0x_6B, 0x_76, 0x_81, 0x_CF, 0x_22, 0x_59, 0x_16, 0x_A0, 0x_19,
		0x_61, 0x_66, 0x_7A, 0x_9C, 0x_4D, 0x_B2, 0x_B4, 0x_91, 0x_E1, 0x_7C, 0x_7D, 0x_7E, 0x_37, 0x_8F, 0x_E3,
		0x_FE, 0x_B7, 0x_60, 0x_F2, 0x_D2, 0x_B3, 0x_31, 0x_17, 0x_8D, 0x_25, 0x_54, 0x_47, 0x_EF, 0x_92, 0x_36,
		0x_4B, 0x_72, 0x_55, 0x_2F, 0x_3D, 0x_62, 0x_83, 0x_A4, 0x_4E, 0x_6E, 0x_63, 0x_F8, 0x_C5, 0x_04, 0x_90,
		0x_9B, 0x_85, 0x_5C, 0x_33, 0x_40, 0x_48, 0x_FD, 0x_97, 0x_99, 0x_5A, 0x_24, 0x_26, 0x_69, 0x_F9, 0x_03,
		0x_56, 0x_D8, 0x_AC, 0x_12, 0x_E4, 0x_D3, 0x_BB, 0x_A7, 0x_9E, 0x_9D, 0x_F5, 0x_96, 0x_35, 0x_B5, 0x_DD,
		0x_A6, 0x_42, 0x_BA, 0x_D9, 0x_80, 0x_F7, 0x_A2, 0x_5B, 0x_6F, 0x_FC, 0x_8E, 0x_39, 0x_B8, 0x_CD, 0x_65,
		0x_9F, 0x_30, 0x_DC, 0x_EE, 0x_2A, 0x_5D, 0x_E2, 0x_4F, 0x_6D, 0x_8A, 0x_BD, 0x_C4, 0x_5F, 0x_E0, 0x_B0,
		0x_49, 0x_68, 0x_82, 0x_0E, 0x_58, 0x_06, 0x_34, 0x_4C, 0x_FF, 0x_AA, 0x_67, 0x_86, 0x_3A, 0x_D0, 0x_C7,
		0x_02, 0x_D1, 0x_10, 0x_11, 0x_08, 0x_DA, 0x_ED, 0x_3E, 0x_BE, 0x_D7, 0x_A5, 0x_87, 0x_2E, 0x_E9, 0x_3F,
		0x_DF, 0x_E8, 0x_CE, 0x_57, 0x_E6, 0x_98, 0x_23,
	];

	helper(S, BASE, -83);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_326_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_326_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0A, 0x_0C, 0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0D,
		0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0A, 0x_0A,
		0x_0C, 0x_09, 0x_0D, 0x_20, 0x_2D, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4,
		0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_F4, 0x_EA, 0x_D7, 0x_2D, 0x_74, 0x_C0, 0x_CC,
		0x_A2, 0x_70, 0x_3F, 0x_71, 0x_B5, 0x_7E, 0x_8D, 0x_4E, 0x_CC, 0x_DE, 0x_C8, 0x_30, 0x_61, 0x_57, 0x_D1,
		0x_02, 0x_9D, 0x_53, 0x_AF, 0x_5B, 0x_2E, 0x_6A, 0x_17, 0x_30, 0x_22, 0x_35, 0x_88, 0x_51, 0x_51, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_F4, 0x_EA, 0x_67, 0x_17, 0x_8C, 0x_E0, 0x_F7, 0x_7A, 0x_AB, 0x_33, 0x_7F, 0x_4A, 0x_98, 0x_37, 0x_D3,
		0x_C5, 0x_41, 0x_CC, 0x_A5, 0x_31, 0x_60, 0x_6E, 0x_87, 0x_FB, 0x_EF, 0x_B2, 0x_75, 0x_24, 0x_40, 0x_2C,
		0x_BB, 0x_3E, 0x_55, 0x_B3, 0x_A1, 0x_82, 0x_68, 0x_4F, 0x_0E, 0x_B6, 0x_FD, 0x_85, 0x_D8, 0x_7C, 0x_9F,
		0x_94, 0x_46, 0x_6B, 0x_36, 0x_90, 0x_88, 0x_3D, 0x_79, 0x_CF, 0x_F1, 0x_AA, 0x_6F, 0x_D1, 0x_EC, 0x_1E,
		0x_8F, 0x_C2, 0x_65, 0x_E5, 0x_71, 0x_B4, 0x_DD, 0x_50, 0x_BC, 0x_01, 0x_7D, 0x_D6, 0x_47, 0x_C6, 0x_45,
		0x_13, 0x_06, 0x_52, 0x_70, 0x_D7, 0x_62, 0x_D9, 0x_03, 0x_8E, 0x_CE, 0x_04, 0x_5C, 0x_6D, 0x_AE, 0x_CD,
		0x_9C, 0x_74, 0x_4B, 0x_59, 0x_61, 0x_42, 0x_97, 0x_BA, 0x_A7, 0x_99, 0x_16, 0x_3C, 0x_E6, 0x_F0, 0x_1A,
		0x_8A, 0x_51, 0x_9B, 0x_B9, 0x_10, 0x_F2, 0x_86, 0x_1D, 0x_35, 0x_F8, 0x_1C, 0x_E2, 0x_DE, 0x_C9, 0x_38,
		0x_FE, 0x_14, 0x_07, 0x_F6, 0x_EB, 0x_1F, 0x_B5, 0x_8B, 0x_34, 0x_A0, 0x_E3, 0x_49, 0x_76, 0x_D4, 0x_DB,
		0x_9E, 0x_77, 0x_4D, 0x_39, 0x_83, 0x_CB, 0x_18, 0x_AC, 0x_FF, 0x_15, 0x_5A, 0x_19, 0x_1B, 0x_27, 0x_05,
		0x_32, 0x_C4, 0x_54, 0x_A4, 0x_C3, 0x_66, 0x_D0, 0x_22, 0x_C8, 0x_FA, 0x_C7, 0x_28, 0x_D2, 0x_A8, 0x_C0,
		0x_5D, 0x_95, 0x_ED, 0x_91, 0x_D5, 0x_9D, 0x_DC, 0x_64, 0x_11, 0x_56, 0x_58, 0x_69, 0x_A6, 0x_BD, 0x_F3,
		0x_72, 0x_6C, 0x_E7, 0x_25, 0x_92, 0x_48, 0x_DF, 0x_F5, 0x_B0, 0x_B7, 0x_E9, 0x_29, 0x_7B, 0x_5B, 0x_63,
		0x_3F, 0x_81, 0x_26, 0x_02, 0x_C1, 0x_5E, 0x_8D, 0x_93, 0x_89, 0x_12, 0x_78, 0x_A3, 0x_5F, 0x_80, 0x_2F,
		0x_53, 0x_84, 0x_AD, 0x_6A, 0x_4E, 0x_08, 0x_9A, 0x_0F, 0x_AF, 0x_43, 0x_44, 0x_73, 0x_BE, 0x_30, 0x_2A,
		0x_E8, 0x_E4, 0x_B1, 0x_DA, 0x_57, 0x_E1, 0x_B8, 0x_3B, 0x_2E, 0x_A9, 0x_FC, 0x_7E, 0x_A2, 0x_4C, 0x_CA,
		0x_BF, 0x_F9, 0x_96, 0x_3A, 0x_23, 0x_21, 0x_EE,
	];

	helper(S, BASE, -326);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_4_290_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_4_290_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0D,
		0x_09, 0x_2D, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_87, 0x_AD, 0x_6E, 0x_0C, 0x_8F, 0x_EE, 0x_26,
		0x_3B, 0x_FA, 0x_7C, 0x_BB, 0x_F6, 0x_22, 0x_F5, 0x_F4, 0x_3E, 0x_94, 0x_8B, 0x_F9, 0x_F0, 0x_07, 0x_BA,
		0x_BD, 0x_8A, 0x_11, 0x_E9, 0x_BC, 0x_83, 0x_DF, 0x_A9, 0x_D0, 0x_A6, 0x_A2, 0x_4C, 0x_93, 0x_90, 0x_12,
		0x_C1, 0x_34, 0x_05, 0x_2F, 0x_3D, 0x_9D, 0x_EB, 0x_82, 0x_1F,
	];
	const BASE: &[u8] = &[
		0x_87, 0x_B8, 0x_5F, 0x_01, 0x_FC, 0x_E0, 0x_84, 0x_B2, 0x_34, 0x_F5, 0x_D3, 0x_ED, 0x_BE, 0x_A0, 0x_4C,
		0x_F6, 0x_B4, 0x_AD, 0x_41, 0x_C5, 0x_3D, 0x_16, 0x_74, 0x_58, 0x_E5, 0x_F3, 0x_3B, 0x_CD, 0x_D7, 0x_CC,
		0x_66, 0x_5B, 0x_9B, 0x_56, 0x_9A, 0x_A6, 0x_3E, 0x_98, 0x_D8, 0x_37, 0x_88, 0x_7A, 0x_D2, 0x_15, 0x_19,
		0x_A1, 0x_7D, 0x_8D, 0x_5C, 0x_75, 0x_BD, 0x_96, 0x_83, 0x_E6, 0x_23, 0x_45, 0x_BC, 0x_80, 0x_1E, 0x_17,
		0x_F2, 0x_AA, 0x_0F, 0x_35, 0x_CA, 0x_04, 0x_07, 0x_18, 0x_10, 0x_21, 0x_52, 0x_B3, 0x_9D, 0x_2F, 0x_22,
		0x_8B, 0x_E1, 0x_68, 0x_DE, 0x_55, 0x_BA, 0x_81, 0x_4A, 0x_73, 0x_E9, 0x_C0, 0x_64, 0x_91, 0x_C3, 0x_B5,
		0x_08, 0x_6E, 0x_42, 0x_1A, 0x_EC, 0x_A7, 0x_7E, 0x_1D, 0x_76, 0x_E8, 0x_62, 0x_3F, 0x_8E, 0x_7C, 0x_6F,
		0x_2A, 0x_02, 0x_8A, 0x_31, 0x_24, 0x_71, 0x_D0, 0x_F1, 0x_12, 0x_DB, 0x_E7, 0x_EA, 0x_61, 0x_1C, 0x_C1,
		0x_4B, 0x_11, 0x_FF, 0x_92, 0x_13, 0x_C7, 0x_CE, 0x_DA, 0x_54, 0x_6B, 0x_CF, 0x_6A, 0x_30, 0x_B1, 0x_B7,
		0x_47, 0x_79, 0x_43, 0x_99, 0x_F8, 0x_5D, 0x_27, 0x_97, 0x_3A, 0x_33, 0x_14, 0x_36, 0x_C2, 0x_D9, 0x_90,
		0x_EF, 0x_28, 0x_BB, 0x_4F, 0x_A4, 0x_1B, 0x_4D, 0x_5E, 0x_F7, 0x_95, 0x_50, 0x_AB, 0x_F0, 0x_FD, 0x_DD,
		0x_D4, 0x_9E, 0x_06, 0x_D1, 0x_72, 0x_44, 0x_70, 0x_89, 0x_67, 0x_F4, 0x_D5, 0x_DC, 0x_AF, 0x_63, 0x_0E,
		0x_46, 0x_1F, 0x_B0, 0x_85, 0x_8C, 0x_9C, 0x_59, 0x_40, 0x_AC, 0x_82, 0x_E3, 0x_94, 0x_51, 0x_38, 0x_32,
		0x_EE, 0x_FA, 0x_77, 0x_E2, 0x_A3, 0x_DF, 0x_7B, 0x_39, 0x_9F, 0x_A8, 0x_60, 0x_4E, 0x_48, 0x_B6, 0x_65,
		0x_8F, 0x_B9, 0x_53, 0x_69, 0x_93, 0x_EB, 0x_25, 0x_6D, 0x_26, 0x_49, 0x_FE, 0x_D6, 0x_7F, 0x_C8, 0x_BF,
		0x_3C, 0x_86, 0x_2E, 0x_57, 0x_03, 0x_E4, 0x_78, 0x_6C, 0x_FB, 0x_A5, 0x_05, 0x_29, 0x_C9, 0x_CB, 0x_2C,
		0x_C4, 0x_F9, 0x_A9, 0x_AE, 0x_C6, 0x_5A, 0x_A2,
	];

	helper(S, BASE, -4_290);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_45_760_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_45_760_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_2D, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_8A, 0x_81, 0x_0D, 0x_FB,
		0x_DE, 0x_86, 0x_D3, 0x_BC, 0x_46, 0x_19, 0x_1C, 0x_BD, 0x_24, 0x_6E, 0x_D9, 0x_D4, 0x_30, 0x_A4, 0x_3C,
		0x_6C, 0x_D7, 0x_B3, 0x_A3, 0x_6D, 0x_9D, 0x_7C, 0x_F7, 0x_A6, 0x_A2, 0x_30, 0x_BE, 0x_10, 0x_71, 0x_40,
		0x_96, 0x_8B, 0x_D8, 0x_57, 0x_B9, 0x_55, 0x_40, 0x_3B, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_39, 0x_C9, 0x_C5, 0x_46, 0x_90, 0x_BB, 0x_A0, 0x_F8, 0x_F1, 0x_22, 0x_7B, 0x_52, 0x_D4, 0x_E1,
		0x_43, 0x_94, 0x_1B, 0x_3E, 0x_5F, 0x_4D, 0x_48, 0x_9C, 0x_7D, 0x_D2, 0x_D1, 0x_7E, 0x_CB, 0x_34, 0x_85,
		0x_15, 0x_B1, 0x_93, 0x_DA, 0x_E9, 0x_19, 0x_F6, 0x_14, 0x_FA, 0x_B8, 0x_95, 0x_88, 0x_62, 0x_8F, 0x_AB,
		0x_02, 0x_04, 0x_1C, 0x_75, 0x_6A, 0x_D9, 0x_A3, 0x_30, 0x_26, 0x_96, 0x_C6, 0x_F3, 0x_2A, 0x_0F, 0x_F5,
		0x_41, 0x_63, 0x_9A, 0x_DF, 0x_10, 0x_81, 0x_A7, 0x_08, 0x_56, 0x_ED, 0x_60, 0x_3D, 0x_74, 0x_45, 0x_A9,
		0x_6E, 0x_1F, 0x_4E, 0x_A4, 0x_1A, 0x_EF, 0x_5C, 0x_B9, 0x_8B, 0x_31, 0x_16, 0x_65, 0x_36, 0x_50, 0x_8E,
		0x_9D, 0x_32, 0x_F0, 0x_70, 0x_C7, 0x_29, 0x_01, 0x_13, 0x_23, 0x_11, 0x_5D, 0x_21, 0x_5B, 0x_B4, 0x_B6,
		0x_97, 0x_FD, 0x_4A, 0x_17, 0x_07, 0x_61, 0x_7C, 0x_BA, 0x_99, 0x_CC, 0x_BF, 0x_CF, 0x_EB, 0x_44, 0x_DD,
		0x_D7, 0x_E6, 0x_F9, 0x_37, 0x_66, 0x_33, 0x_58, 0x_E8, 0x_71, 0x_E2, 0x_54, 0x_6C, 0x_DB, 0x_FE, 0x_69,
		0x_35, 0x_EA, 0x_84, 0x_40, 0x_EC, 0x_AD, 0x_18, 0x_A2, 0x_64, 0x_C0, 0x_C3, 0x_B5, 0x_3A, 0x_82, 0x_A1,
		0x_91, 0x_89, 0x_D8, 0x_51, 0x_5A, 0x_79, 0x_C1, 0x_9F, 0x_D6, 0x_FF, 0x_AA, 0x_E7, 0x_F2, 0x_6D, 0x_A5,
		0x_AE, 0x_2C, 0x_E0, 0x_C2, 0x_EE, 0x_86, 0x_FB, 0x_A8, 0x_3F, 0x_72, 0x_D0, 0x_49, 0x_53, 0x_4B, 0x_BD,
		0x_B0, 0x_E3, 0x_92, 0x_E4, 0x_12, 0x_8A, 0x_CA, 0x_0E, 0x_24, 0x_CE, 0x_7A, 0x_83, 0x_AC, 0x_47, 0x_2F,
		0x_8D, 0x_76, 0x_06, 0x_5E, 0x_D3, 0x_03, 0x_F7, 0x_FC, 0x_77, 0x_3C, 0x_59, 0x_8C, 0x_6F, 0x_87, 0x_B3,
		0x_42, 0x_73, 0x_55, 0x_4F, 0x_BC, 0x_AF, 0x_B2, 0x_57, 0x_A6, 0x_27, 0x_1D, 0x_D5, 0x_38, 0x_6B, 0x_DC,
		0x_28, 0x_1E, 0x_05, 0x_9E, 0x_E5, 0x_F4, 0x_3B, 0x_C8, 0x_CD, 0x_BE, 0x_67, 0x_98, 0x_DE, 0x_68, 0x_B7,
		0x_4C, 0x_80, 0x_78, 0x_C4, 0x_2E, 0x_7F, 0x_25,
	];

	helper(S, BASE, -45_760);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_439_768_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_439_768_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_0D,
		0x_09, 0x_0A, 0x_2D, 0x_42, 0x_42, 0x_42, 0x_42, 0x_42, 0x_EA, 0x_48, 0x_9A, 0x_09, 0x_57, 0x_F5, 0x_6F,
		0x_48, 0x_43, 0x_F0, 0x_C7,
	];
	const BASE: &[u8] = &[
		0x_42, 0x_E5, 0x_07, 0x_EE, 0x_BE, 0x_E9, 0x_6D, 0x_EA, 0x_65, 0x_D7, 0x_35, 0x_3C, 0x_F4, 0x_63, 0x_D9,
		0x_D8, 0x_FE, 0x_10, 0x_23, 0x_A6, 0x_71, 0x_94, 0x_37, 0x_24, 0x_7D, 0x_05, 0x_F8, 0x_BB, 0x_8B, 0x_70,
		0x_B1, 0x_79, 0x_6F, 0x_DB, 0x_54, 0x_B8, 0x_4E, 0x_4D, 0x_3F, 0x_18, 0x_8D, 0x_96, 0x_CC, 0x_84, 0x_19,
		0x_01, 0x_DF, 0x_6A, 0x_D1, 0x_56, 0x_33, 0x_48, 0x_AB, 0x_46, 0x_F5, 0x_8A, 0x_E2, 0x_32, 0x_29, 0x_97,
		0x_C7, 0x_AD, 0x_C2, 0x_B4, 0x_EC, 0x_5C, 0x_E3, 0x_C9, 0x_50, 0x_BA, 0x_7B, 0x_87, 0x_4F, 0x_D6, 0x_9F,
		0x_C8, 0x_AA, 0x_D0, 0x_0E, 0x_57, 0x_74, 0x_ED, 0x_B3, 0x_9B, 0x_91, 0x_34, 0x_8E, 0x_3E, 0x_49, 0x_76,
		0x_1A, 0x_28, 0x_A1, 0x_C5, 0x_C0, 0x_03, 0x_08, 0x_CD, 0x_D5, 0x_90, 0x_F0, 0x_26, 0x_4A, 0x_D2, 0x_5D,
		0x_C4, 0x_64, 0x_38, 0x_9A, 0x_8F, 0x_5A, 0x_A2, 0x_B9, 0x_21, 0x_9E, 0x_02, 0x_E6, 0x_4B, 0x_DD, 0x_2C,
		0x_A3, 0x_72, 0x_62, 0x_FA, 0x_44, 0x_E4, 0x_1D, 0x_A8, 0x_D4, 0x_FF, 0x_F2, 0x_C1, 0x_12, 0x_AF, 0x_EF,
		0x_5B, 0x_CA, 0x_14, 0x_55, 0x_22, 0x_7A, 0x_31, 0x_6C, 0x_1E, 0x_6B, 0x_98, 0x_C6, 0x_1C, 0x_9D, 0x_93,
		0x_B6, 0x_2A, 0x_3A, 0x_8C, 0x_39, 0x_7E, 0x_47, 0x_B2, 0x_59, 0x_3D, 0x_E8, 0x_95, 0x_40, 0x_9C, 0x_69,
		0x_60, 0x_DC, 0x_D3, 0x_27, 0x_77, 0x_AE, 0x_16, 0x_C3, 0x_A7, 0x_BC, 0x_7C, 0x_A0, 0x_58, 0x_88, 0x_92,
		0x_5E, 0x_6E, 0x_30, 0x_4C, 0x_A5, 0x_15, 0x_FD, 0x_F6, 0x_81, 0x_2E, 0x_B0, 0x_F3, 0x_A4, 0x_E1, 0x_41,
		0x_3B, 0x_51, 0x_43, 0x_AC, 0x_CF, 0x_04, 0x_F1, 0x_89, 0x_52, 0x_06, 0x_73, 0x_66, 0x_7F, 0x_61, 0x_82,
		0x_36, 0x_CB, 0x_CE, 0x_B5, 0x_13, 0x_E0, 0x_0F, 0x_E7, 0x_FB, 0x_F9, 0x_25, 0x_67, 0x_53, 0x_85, 0x_EB,
		0x_5F, 0x_78, 0x_68, 0x_1F, 0x_2F, 0x_80, 0x_FC, 0x_F7, 0x_99, 0x_83, 0x_A9, 0x_DA, 0x_86, 0x_1B, 0x_17,
		0x_DE, 0x_45, 0x_BF, 0x_75, 0x_11, 0x_B7, 0x_BD,
	];

	helper(S, BASE, -439_768);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_6_325_000_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_6_325_000_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_2D, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_4D, 0x_88, 0x_A8, 0x_0B,
		0x_EF, 0x_61, 0x_D2, 0x_63, 0x_7C, 0x_64, 0x_08, 0x_9C, 0x_55, 0x_86,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_F5, 0x_62, 0x_37, 0x_A0, 0x_96, 0x_81, 0x_5A, 0x_C6, 0x_F0, 0x_B9, 0x_CC, 0x_C8, 0x_B8, 0x_51,
		0x_02, 0x_2E, 0x_0E, 0x_EF, 0x_11, 0x_CF, 0x_7F, 0x_E0, 0x_B7, 0x_AF, 0x_76, 0x_FF, 0x_53, 0x_3D, 0x_69,
		0x_6B, 0x_AB, 0x_B3, 0x_D3, 0x_25, 0x_B1, 0x_C3, 0x_58, 0x_72, 0x_B0, 0x_E8, 0x_03, 0x_DB, 0x_45, 0x_6E,
		0x_65, 0x_52, 0x_38, 0x_F7, 0x_FB, 0x_EB, 0x_D9, 0x_EA, 0x_16, 0x_30, 0x_39, 0x_91, 0x_1E, 0x_10, 0x_7E,
		0x_92, 0x_F8, 0x_77, 0x_2A, 0x_B6, 0x_61, 0x_40, 0x_19, 0x_EC, 0x_E7, 0x_49, 0x_A8, 0x_AE, 0x_47, 0x_6F,
		0x_14, 0x_29, 0x_8A, 0x_8D, 0x_55, 0x_46, 0x_07, 0x_B2, 0x_24, 0x_F2, 0x_9B, 0x_AD, 0x_9F, 0x_E6, 0x_A6,
		0x_34, 0x_79, 0x_B5, 0x_F3, 0x_D6, 0x_18, 0x_4A, 0x_DE, 0x_E1, 0x_71, 0x_28, 0x_68, 0x_54, 0x_4D, 0x_E5,
		0x_A9, 0x_6D, 0x_BF, 0x_F4, 0x_F1, 0x_0F, 0x_95, 0x_A7, 0x_8F, 0x_83, 0x_6A, 0x_74, 0x_36, 0x_3E, 0x_22,
		0x_66, 0x_DA, 0x_90, 0x_4E, 0x_64, 0x_56, 0x_31, 0x_13, 0x_1F, 0x_98, 0x_33, 0x_CD, 0x_2F, 0x_12, 0x_BD,
		0x_D7, 0x_C9, 0x_B4, 0x_C1, 0x_08, 0x_DC, 0x_1A, 0x_73, 0x_44, 0x_CA, 0x_C7, 0x_D2, 0x_80, 0x_A5, 0x_BB,
		0x_1D, 0x_FA, 0x_57, 0x_FD, 0x_9C, 0x_7C, 0x_48, 0x_17, 0x_C2, 0x_AC, 0x_86, 0x_FE, 0x_60, 0x_84, 0x_5F,
		0x_78, 0x_88, 0x_AA, 0x_5D, 0x_A4, 0x_82, 0x_EE, 0x_BA, 0x_A3, 0x_87, 0x_50, 0x_E4, 0x_1B, 0x_15, 0x_D8,
		0x_8C, 0x_23, 0x_ED, 0x_7D, 0x_05, 0x_4F, 0x_BE, 0x_F6, 0x_67, 0x_63, 0x_5B, 0x_D1, 0x_9A, 0x_99, 0x_2C,
		0x_A2, 0x_FC, 0x_3A, 0x_4B, 0x_E9, 0x_85, 0x_F9, 0x_D4, 0x_E3, 0x_6C, 0x_1C, 0x_A1, 0x_75, 0x_D0, 0x_94,
		0x_C4, 0x_59, 0x_3B, 0x_35, 0x_8E, 0x_D5, 0x_7A, 0x_01, 0x_06, 0x_C0, 0x_DD, 0x_32, 0x_42, 0x_43, 0x_E2,
		0x_5C, 0x_04, 0x_BC, 0x_5E, 0x_9E, 0x_CE, 0x_26, 0x_97, 0x_CB, 0x_7B, 0x_89, 0x_3C, 0x_21, 0x_9D, 0x_4C,
		0x_C5, 0x_27, 0x_DF, 0x_8B, 0x_70, 0x_93, 0x_41,
	];

	helper(S, BASE, -6_325_000);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_48_948_588_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_48_948_588_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0C,
		0x_2D, 0x_35, 0x_52, 0x_E4, 0x_E7, 0x_84, 0x_0C, 0x_11, 0x_31, 0x_90, 0x_4A, 0x_36, 0x_DF, 0x_C7, 0x_6C,
		0x_FB, 0x_32, 0x_8D, 0x_C2, 0x_E7, 0x_C6, 0x_76, 0x_F8, 0x_06, 0x_4E, 0x_83,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_48, 0x_5B, 0x_52, 0x_9A, 0x_9C, 0x_16, 0x_D5, 0x_D4, 0x_69, 0x_D1, 0x_0F, 0x_7E, 0x_F0, 0x_6A,
		0x_3F, 0x_C9, 0x_FF, 0x_F4, 0x_DB, 0x_BF, 0x_C2, 0x_4F, 0x_C5, 0x_E8, 0x_7A, 0x_6D, 0x_1C, 0x_9D, 0x_F2,
		0x_94, 0x_AD, 0x_EF, 0x_28, 0x_95, 0x_BE, 0x_EE, 0x_58, 0x_E3, 0x_01, 0x_D2, 0x_6F, 0x_26, 0x_98, 0x_56,
		0x_FD, 0x_50, 0x_81, 0x_B5, 0x_11, 0x_40, 0x_3D, 0x_05, 0x_73, 0x_42, 0x_07, 0x_C8, 0x_9B, 0x_91, 0x_E0,
		0x_85, 0x_E4, 0x_D8, 0x_99, 0x_37, 0x_32, 0x_C0, 0x_A2, 0x_AB, 0x_86, 0x_A6, 0x_22, 0x_6E, 0x_D9, 0x_67,
		0x_14, 0x_5F, 0x_7F, 0x_E7, 0x_CD, 0x_70, 0x_74, 0x_65, 0x_B3, 0x_CF, 0x_54, 0x_A8, 0x_5A, 0x_5E, 0x_90,
		0x_71, 0x_F5, 0x_46, 0x_4B, 0x_10, 0x_96, 0x_DA, 0x_3C, 0x_89, 0x_55, 0x_FC, 0x_47, 0x_53, 0x_E9, 0x_84,
		0x_B8, 0x_2F, 0x_24, 0x_CE, 0x_F6, 0x_51, 0x_75, 0x_D0, 0x_BC, 0x_8B, 0x_59, 0x_B0, 0x_92, 0x_68, 0x_9F,
		0x_77, 0x_21, 0x_F1, 0x_1E, 0x_C6, 0x_A1, 0x_3A, 0x_DF, 0x_BA, 0x_80, 0x_15, 0x_E1, 0x_02, 0x_1F, 0x_C1,
		0x_63, 0x_B9, 0x_44, 0x_CC, 0x_39, 0x_7B, 0x_33, 0x_82, 0x_3B, 0x_04, 0x_06, 0x_7C, 0x_27, 0x_A7, 0x_DD,
		0x_8D, 0x_CA, 0x_C4, 0x_23, 0x_64, 0x_88, 0x_E6, 0x_FB, 0x_62, 0x_87, 0x_43, 0x_29, 0x_A3, 0x_0E, 0x_B1,
		0x_AC, 0x_B7, 0x_8A, 0x_1D, 0x_B4, 0x_34, 0x_2E, 0x_BB, 0x_7D, 0x_B2, 0x_ED, 0x_08, 0x_AE, 0x_EA, 0x_4E,
		0x_9E, 0x_13, 0x_45, 0x_D6, 0x_DE, 0x_6C, 0x_2C, 0x_2A, 0x_A4, 0x_C3, 0x_E5, 0x_3E, 0x_18, 0x_12, 0x_5C,
		0x_17, 0x_1B, 0x_97, 0x_D3, 0x_EC, 0x_F8, 0x_4D, 0x_6B, 0x_D7, 0x_93, 0x_DC, 0x_AF, 0x_38, 0x_78, 0x_8C,
		0x_FA, 0x_30, 0x_E2, 0x_4A, 0x_EB, 0x_C7, 0x_FE, 0x_5D, 0x_B6, 0x_25, 0x_83, 0x_61, 0x_BD, 0x_79, 0x_4C,
		0x_49, 0x_66, 0x_8E, 0x_CB, 0x_F3, 0x_60, 0x_31, 0x_A0, 0x_8F, 0x_41, 0x_A9, 0x_F7, 0x_57, 0x_A5, 0x_72,
		0x_19, 0x_1A, 0x_F9, 0x_76, 0x_03, 0x_36, 0x_AA,
	];

	helper(S, BASE, -48_948_588);
}
// endregion
// region: s_has_whitespaces_and_zeros_and_minus_238_661_454_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_zeros_and_minus_238_661_454_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_0A,
		0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_0D, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_20,
		0x_0A, 0x_0C, 0x_2D, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_1A, 0x_22, 0x_37,
		0x_A3, 0x_0C, 0x_C2, 0x_5F, 0x_6C, 0x_5A, 0x_82, 0x_B8, 0x_78, 0x_62, 0x_A6, 0x_A8, 0x_C1, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_C0, 0x_5F, 0x_10, 0x_EF, 0x_96, 0x_54, 0x_E1, 0x_AE, 0x_45, 0x_63, 0x_40, 0x_B1, 0x_C5, 0x_58,
		0x_1A, 0x_74, 0x_AD, 0x_A8, 0x_3B, 0x_F9, 0x_FC, 0x_35, 0x_A5, 0x_F3, 0x_9B, 0x_C2, 0x_BC, 0x_DE, 0x_8F,
		0x_33, 0x_07, 0x_F0, 0x_EB, 0x_18, 0x_E8, 0x_A0, 0x_68, 0x_6E, 0x_4F, 0x_5B, 0x_86, 0x_D1, 0x_44, 0x_52,
		0x_DC, 0x_12, 0x_7E, 0x_F5, 0x_59, 0x_89, 0x_75, 0x_B7, 0x_28, 0x_DB, 0x_66, 0x_57, 0x_32, 0x_AB, 0x_A9,
		0x_CA, 0x_2A, 0x_FB, 0x_85, 0x_BD, 0x_BF, 0x_73, 0x_2C, 0x_47, 0x_FD, 0x_26, 0x_9D, 0x_B3, 0x_51, 0x_F6,
		0x_83, 0x_A7, 0x_D0, 0x_F1, 0x_72, 0x_A1, 0x_1E, 0x_67, 0x_E5, 0x_D3, 0x_91, 0x_80, 0x_0E, 0x_61, 0x_C6,
		0x_7B, 0x_A4, 0x_4A, 0x_C9, 0x_ED, 0x_27, 0x_76, 0x_CD, 0x_B5, 0x_4D, 0x_56, 0x_3A, 0x_1F, 0x_3E, 0x_7A,
		0x_B6, 0x_64, 0x_D8, 0x_0F, 0x_36, 0x_30, 0x_08, 0x_69, 0x_03, 0x_19, 0x_39, 0x_02, 0x_8B, 0x_6B, 0x_24,
		0x_25, 0x_A6, 0x_E0, 0x_E6, 0x_B4, 0x_C8, 0x_1D, 0x_D5, 0x_8D, 0x_AF, 0x_4B, 0x_97, 0x_DD, 0x_62, 0x_F7,
		0x_17, 0x_94, 0x_EA, 0x_7D, 0x_9C, 0x_99, 0x_41, 0x_5C, 0x_FA, 0x_49, 0x_DA, 0x_3D, 0x_E9, 0x_16, 0x_2F,
		0x_78, 0x_8C, 0x_95, 0x_29, 0x_1C, 0x_13, 0x_6C, 0x_C7, 0x_23, 0x_FF, 0x_F2, 0x_92, 0x_70, 0x_9A, 0x_D7,
		0x_DF, 0x_43, 0x_87, 0x_D9, 0x_21, 0x_BA, 0x_7C, 0x_06, 0x_9E, 0x_A3, 0x_14, 0x_BB, 0x_D6, 0x_38, 0x_6A,
		0x_CF, 0x_5E, 0x_7F, 0x_79, 0x_4C, 0x_1B, 0x_88, 0x_42, 0x_BE, 0x_46, 0x_90, 0x_E3, 0x_2E, 0x_55, 0x_01,
		0x_11, 0x_F8, 0x_6D, 0x_8A, 0x_CB, 0x_D4, 0x_05, 0x_B8, 0x_E7, 0x_98, 0x_E4, 0x_22, 0x_C1, 0x_65, 0x_6F,
		0x_4E, 0x_B9, 0x_53, 0x_34, 0x_77, 0x_AC, 0x_48, 0x_04, 0x_93, 0x_9F, 0x_EC, 0x_60, 0x_CC, 0x_37, 0x_E2,
		0x_82, 0x_CE, 0x_B0, 0x_84, 0x_50, 0x_81, 0x_FE, 0x_31, 0x_5A, 0x_5D, 0x_EE, 0x_8E, 0x_3C, 0x_B2, 0x_3F,
		0x_F4, 0x_C4, 0x_D2, 0x_15, 0x_C3, 0x_A2, 0x_71,
	];

	helper(S, BASE, -238_661_454);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_7_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_7_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_36, 0x_36, 0x_36,
		0x_55, 0x_FF, 0x_FF, 0x_FF, 0x_36, 0x_FF, 0x_FF, 0x_FF, 0x_36, 0x_36, 0x_36, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_36, 0x_36, 0x_FF, 0x_FF, 0x_FF, 0x_36, 0x_36, 0x_36, 0x_36, 0x_FF, 0x_36, 0x_36, 0x_FF, 0x_FF, 0x_36,
		0x_FF, 0x_36, 0x_FF, 0x_36, 0x_FF, 0x_FF, 0x_36, 0x_FF, 0x_36, 0x_36, 0x_36, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_36,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_73_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_73_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80,
		0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80,
		0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_F7, 0x_80, 0x_80, 0x_F7, 0x_80, 0x_80, 0x_F7, 0x_C0, 0x_F7, 0x_80,
		0x_F7, 0x_80, 0x_80, 0x_F7, 0x_F7, 0x_80, 0x_80, 0x_F7, 0x_F7, 0x_80, 0x_80, 0x_F7, 0x_F7, 0x_80, 0x_80,
		0x_F7, 0x_F7, 0x_80, 0x_F7, 0x_80, 0x_80, 0x_F7, 0x_80, 0x_80, 0x_80, 0x_80, 0x_F7, 0x_F7, 0x_F7, 0x_F7,
		0x_80, 0x_80, 0x_F7, 0x_80,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_F7,
	];

	helper(S, BASE, -73);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_619_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_619_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B,
		0x_9D, 0x_6B, 0x_6B, 0x_9D, 0x_9D, 0x_6B, 0x_9D, 0x_6B, 0x_9D, 0x_9D, 0x_18, 0x_6B, 0x_9D, 0x_6B, 0x_9D,
		0x_9D, 0x_9D, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_9D,
	];

	helper(S, BASE, -619);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_8_265_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_8_265_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2,
		0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_E1, 0x_C2,
		0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_E1, 0x_C2, 0x_C2, 0x_E1, 0x_C2, 0x_C2, 0x_E1, 0x_0D, 0x_C2, 0x_E1,
		0x_E1, 0x_E1, 0x_E1, 0x_C2, 0x_E1, 0x_C2, 0x_E1, 0x_E1, 0x_E1, 0x_C2, 0x_E1, 0x_C2, 0x_C2, 0x_E1, 0x_E1,
		0x_E1, 0x_E1, 0x_C2, 0x_C2, 0x_E1, 0x_E1, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_E1, 0x_E1, 0x_C2, 0x_E1, 0x_C2,
		0x_E1, 0x_E1, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_E1,
	];

	helper(S, BASE, -8_265);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_43_166_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_43_166_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_64, 0x_CF,
		0x_64, 0x_CF, 0x_64, 0x_CF, 0x_CF, 0x_CF, 0x_64, 0x_CF, 0x_CF, 0x_64, 0x_64, 0x_64, 0x_64, 0x_CF, 0x_FC,
		0x_64, 0x_CF, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_64,
	];

	helper(S, BASE, -43_166);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_119_633_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_119_633_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_63,
		0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63,
		0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_27, 0x_27, 0x_27, 0x_63, 0x_27, 0x_63, 0x_63, 0x_27,
		0x_27, 0x_63, 0x_27, 0x_63, 0x_27, 0x_63, 0x_63, 0x_63, 0x_27, 0x_7D, 0x_63, 0x_27, 0x_27, 0x_27, 0x_27,
		0x_27, 0x_63, 0x_63, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_63, 0x_27,
	];

	helper(S, BASE, -119_633);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_9_837_025_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_9_837_025_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_24, 0x_64, 0x_64, 0x_24, 0x_64, 0x_24, 0x_24, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_24, 0x_24, 0x_64, 0x_64, 0x_24, 0x_24, 0x_24, 0x_24, 0x_64, 0x_64, 0x_64, 0x_64, 0x_24, 0x_04,
		0x_64, 0x_64, 0x_64, 0x_64, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_64, 0x_24, 0x_24, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_24,
	];

	helper(S, BASE, -9_837_025);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_90_839_513_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_90_839_513_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2F, 0x_2F, 0x_2F,
		0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F,
		0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_C1, 0x_2F,
		0x_C1, 0x_2F, 0x_C1, 0x_C1, 0x_2F, 0x_C1, 0x_2F, 0x_C1, 0x_2F, 0x_2F, 0x_2F, 0x_2F, 0x_C1, 0x_C1, 0x_2F,
		0x_2F, 0x_C1, 0x_C1, 0x_C1, 0x_2F, 0x_C1, 0x_C1, 0x_2F, 0x_2F, 0x_C1, 0x_1A, 0x_C1, 0x_C1, 0x_2F, 0x_C1,
		0x_2F, 0x_2F, 0x_2F, 0x_C1, 0x_C1, 0x_C1, 0x_2F, 0x_2F, 0x_2F, 0x_C1, 0x_2F, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_2F, 0x_C1,
	];

	helper(S, BASE, -90_839_513);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_555_802_490_in_base_2_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_555_802_490_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93,
		0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_69, 0x_93, 0x_93,
		0x_93, 0x_93, 0x_69, 0x_93, 0x_93, 0x_69, 0x_93, 0x_93, 0x_93, 0x_93, 0x_93, 0x_69, 0x_69, 0x_93, 0x_69,
		0x_69, 0x_69, 0x_69, 0x_69, 0x_93, 0x_69, 0x_69, 0x_69, 0x_69, 0x_93, 0x_69, 0x_93, 0x_62, 0x_69, 0x_93,
		0x_93, 0x_93, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_93, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_93, 0x_69,
	];

	helper(S, BASE, -555_802_490);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_8_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_8_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_35, 0x_35, 0x_D0, 0x_F6, 0x_35, 0x_35, 0x_35, 0x_01, 0x_F6,
		0x_F6, 0x_35, 0x_01, 0x_F6, 0x_F6, 0x_01, 0x_F6, 0x_01, 0x_35, 0x_F6,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_01, 0x_35,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_37_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_37_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_EE, 0x_EE, 0x_EE, 0x_EE, 0x_F5, 0x_F5, 0x_EE, 0x_F5, 0x_CF, 0x_EE, 0x_F5, 0x_96,
		0x_96, 0x_EE, 0x_EE, 0x_EE, 0x_F5, 0x_EE, 0x_EE, 0x_96, 0x_EE, 0x_96, 0x_96, 0x_F5, 0x_EE, 0x_F5, 0x_96,
		0x_F5, 0x_F5, 0x_96, 0x_F5, 0x_96, 0x_96, 0x_96, 0x_EE, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_EE, 0x_F5, 0x_96,
	];

	helper(S, BASE, -37);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_977_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_977_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A,
		0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_8A, 0x_21, 0x_21, 0x_8A, 0x_8A, 0x_8A, 0x_21,
		0x_87, 0x_C1, 0x_8A, 0x_21, 0x_8A, 0x_21, 0x_8A, 0x_87, 0x_21, 0x_8A, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_21, 0x_87,
	];

	helper(S, BASE, -977);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_670_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_6_670_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_AC, 0x_AC, 0x_AC, 0x_AC,
		0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC,
		0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_EB,
		0x_AC, 0x_AC, 0x_AC, 0x_EB, 0x_EB, 0x_AC, 0x_AC, 0x_EB, 0x_1A, 0x_EB, 0x_EB, 0x_EB, 0x_EB, 0x_AC, 0x_87,
		0x_EB, 0x_AC, 0x_EB, 0x_87, 0x_AC, 0x_AC, 0x_87, 0x_EB, 0x_AC, 0x_AC, 0x_AC, 0x_EB, 0x_87, 0x_87, 0x_AC,
		0x_AC, 0x_EB, 0x_EB, 0x_AC, 0x_87, 0x_87, 0x_87, 0x_AC, 0x_AC, 0x_87, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_EB, 0x_87,
	];

	helper(S, BASE, -6_670);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_33_774_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_33_774_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_07, 0x_07,
		0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_07, 0x_0F, 0x_93,
		0x_07, 0x_0F, 0x_07, 0x_93, 0x_93, 0x_93, 0x_93, 0x_07, 0x_08, 0x_0F, 0x_07, 0x_93, 0x_0F, 0x_0F, 0x_0F,
		0x_0F, 0x_0F, 0x_0F, 0x_93, 0x_07, 0x_0F, 0x_07, 0x_0F, 0x_0F, 0x_0F, 0x_07, 0x_93, 0x_93,
	];
	const BASE: &[u8] = &[
		0x_07, 0x_0F, 0x_93,
	];

	helper(S, BASE, -33_774);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_891_357_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_891_357_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C,
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C,
		0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_7C, 0x_FB, 0x_CD, 0x_7C, 0x_7C,
		0x_7C, 0x_CD, 0x_FB, 0x_CD, 0x_7C, 0x_FB, 0x_7C, 0x_CD, 0x_7C, 0x_E1, 0x_7C, 0x_CD, 0x_CD, 0x_CD, 0x_CD,
		0x_7C, 0x_7C, 0x_CD, 0x_7C, 0x_FB, 0x_7C, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_7C, 0x_FB, 0x_CD,
	];

	helper(S, BASE, -891_357);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_4_216_602_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_4_216_602_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_B8, 0x_B8, 0x_B8,
		0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8,
		0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_B8,
		0x_B8, 0x_B8, 0x_B8, 0x_B8, 0x_E3, 0x_D2, 0x_E3, 0x_E3, 0x_D2, 0x_B8, 0x_E3, 0x_B8, 0x_B8, 0x_B8, 0x_E3,
		0x_D2, 0x_D2, 0x_B8, 0x_D5, 0x_D2, 0x_B8, 0x_B8, 0x_E3, 0x_B8, 0x_D2, 0x_D2, 0x_B8, 0x_E3, 0x_E3, 0x_B8,
		0x_D2, 0x_E3, 0x_E3, 0x_D2, 0x_E3, 0x_B8, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_E3, 0x_D2,
	];
	const BASE: &[u8] = &[
		0x_B8, 0x_D2, 0x_E3,
	];

	helper(S, BASE, -4_216_602);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_11_541_103_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_11_541_103_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE,
		0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_BE, 0x_90,
		0x_7C, 0x_BE, 0x_90, 0x_BE, 0x_7C, 0x_7C, 0x_BE, 0x_BE, 0x_7C, 0x_BE, 0x_90, 0x_BE, 0x_90, 0x_7C, 0x_C0,
		0x_90, 0x_7C, 0x_90, 0x_BE, 0x_BE, 0x_BE, 0x_90, 0x_BE, 0x_90, 0x_90, 0x_7C, 0x_7C, 0x_BE, 0x_7C, 0x_BE,
		0x_90, 0x_BE, 0x_90, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_BE, 0x_7C, 0x_90,
	];

	helper(S, BASE, -11_541_103);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_893_332_670_in_base_3_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_893_332_670_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_D3,
		0x_D3, 0x_D3, 0x_25, 0x_D3, 0x_25, 0x_25, 0x_D3, 0x_25, 0x_D3, 0x_25, 0x_25, 0x_25, 0x_D3, 0x_D3, 0x_D3,
		0x_D3, 0x_D3, 0x_C5, 0x_D3, 0x_C5, 0x_25, 0x_ED, 0x_25, 0x_D3, 0x_D3, 0x_C5, 0x_25, 0x_C5, 0x_C5, 0x_D3,
		0x_25, 0x_C5, 0x_C5, 0x_D3, 0x_25, 0x_C5, 0x_D3, 0x_25, 0x_C5, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_D3, 0x_C5, 0x_25,
	];

	helper(S, BASE, -893_332_670);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_7_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_7_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_85, 0x_85, 0x_85,
		0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85,
		0x_85, 0x_85, 0x_8A, 0x_A8, 0x_0E, 0x_8A,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_8A, 0x_A8, 0x_71, 0x_E2,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_31_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_31_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_7F, 0x_7F, 0x_7F, 0x_41, 0x_67, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_7F, 0x_67, 0x_35, 0x_40,
	];

	helper(S, BASE, -31);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_217_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_217_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55,
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55,
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_C1,
		0x_FB, 0x_FB, 0x_C4, 0x_3B, 0x_C1, 0x_55, 0x_FB, 0x_C1, 0x_C4, 0x_19, 0x_C1, 0x_FB, 0x_C1, 0x_FB, 0x_C4,
		0x_19, 0x_FB, 0x_FB, 0x_FB, 0x_19, 0x_19, 0x_FB, 0x_19, 0x_55, 0x_FB, 0x_FB, 0x_FB, 0x_C4, 0x_55, 0x_C4,
		0x_FB, 0x_55, 0x_FB, 0x_C1, 0x_19, 0x_55,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_C1, 0x_C4, 0x_FB, 0x_19,
	];

	helper(S, BASE, -217);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_9_090_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_9_090_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_55, 0x_55, 0x_55, 0x_55,
		0x_55, 0x_55, 0x_68, 0x_10, 0x_68, 0x_98, 0x_98, 0x_55, 0x_F6, 0x_98, 0x_10, 0x_FB, 0x_55, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_FB, 0x_68, 0x_98, 0x_10,
	];

	helper(S, BASE, -9_090);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_30_960_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_30_960_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA,
		0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_DA, 0x_7D, 0x_DF, 0x_DF, 0x_CA, 0x_36, 0x_CA,
		0x_DA, 0x_99, 0x_DA, 0x_CA, 0x_7D, 0x_7D, 0x_DA, 0x_7D,
	];
	const BASE: &[u8] = &[
		0x_DA, 0x_7D, 0x_CA, 0x_36, 0x_DF,
	];

	helper(S, BASE, -30_960);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_652_860_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_652_860_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_18,
		0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18,
		0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18,
		0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_18, 0x_AC, 0x_78, 0x_AC, 0x_78, 0x_3E, 0x_CE, 0x_3E,
		0x_CE, 0x_18, 0x_E7, 0x_78, 0x_18, 0x_78, 0x_3E, 0x_CE, 0x_18, 0x_18, 0x_78, 0x_3E, 0x_CE, 0x_AC, 0x_18,
		0x_CE, 0x_78, 0x_AC, 0x_AC, 0x_AC, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_18, 0x_AC, 0x_CE, 0x_78, 0x_3E,
	];

	helper(S, BASE, -652_860);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_686_265_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_686_265_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_BC, 0x_BC, 0x_33, 0x_BC, 0x_33, 0x_AD, 0x_3F, 0x_3F, 0x_AD, 0x_3F, 0x_9F, 0x_BC, 0x_44, 0x_33, 0x_44,
		0x_44, 0x_3F, 0x_3F, 0x_AD, 0x_BC, 0x_AD, 0x_3F, 0x_3F, 0x_BC, 0x_44, 0x_44, 0x_3F, 0x_BC, 0x_BC, 0x_3F,
		0x_BC, 0x_AD, 0x_33, 0x_33, 0x_33, 0x_BC, 0x_3F, 0x_33, 0x_3F, 0x_AD, 0x_BC, 0x_AD, 0x_44, 0x_AD, 0x_BC,
		0x_3F, 0x_33, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_BC, 0x_44, 0x_AD, 0x_33,
	];

	helper(S, BASE, -2_686_265);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_19_045_118_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_19_045_118_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0,
		0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_B0, 0x_64, 0x_F2, 0x_6B, 0x_6B, 0x_6B, 0x_F2, 0x_5B,
		0x_B0, 0x_F2, 0x_6B, 0x_6B, 0x_5F, 0x_5B, 0x_B0, 0x_F2, 0x_64, 0x_64, 0x_5B, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_B0, 0x_64, 0x_5B, 0x_6B, 0x_F2,
	];

	helper(S, BASE, -19_045_118);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_377_527_831_in_base_5_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_377_527_831_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E,
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E,
		0x_BE, 0x_9A, 0x_99, 0x_99, 0x_BE, 0x_9A, 0x_BE, 0x_99, 0x_7B, 0x_9A, 0x_99, 0x_BE, 0x_BE, 0x_46, 0x_1E,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_BE, 0x_9A, 0x_99, 0x_7B,
	];

	helper(S, BASE, -377_527_831);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_5_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_5_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_C3, 0x_3F, 0x_C3, 0x_F5, 0x_F5, 0x_D3, 0x_C3, 0x_F5, 0x_74,
		0x_74, 0x_74, 0x_D8, 0x_F5, 0x_C3, 0x_5F, 0x_74, 0x_D3, 0x_74, 0x_D8, 0x_C3, 0x_D3, 0x_D8, 0x_74, 0x_C3,
		0x_C3, 0x_F5, 0x_D8, 0x_D3, 0x_F5, 0x_D3, 0x_5F, 0x_F5, 0x_D8,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_F5, 0x_22, 0x_D8, 0x_74, 0x_C3, 0x_D3,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_66_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_66_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_94, 0x_F2, 0x_34, 0x_1C, 0x_0F, 0x_34, 0x_34,
		0x_1C, 0x_90, 0x_16, 0x_1C, 0x_F2, 0x_94, 0x_94, 0x_16, 0x_34, 0x_34, 0x_94, 0x_74, 0x_F2,
	];
	const BASE: &[u8] = &[
		0x_94, 0x_F2, 0x_34, 0x_1C, 0x_74, 0x_90, 0x_16,
	];

	helper(S, BASE, -66);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_215_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_215_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_C7, 0x_C7,
		0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_D1, 0x_9D, 0x_D0, 0x_D7, 0x_68, 0x_D0,
		0x_BB, 0x_D0, 0x_D1, 0x_BB, 0x_63, 0x_9D, 0x_BB, 0x_BB, 0x_C7, 0x_C7, 0x_9D, 0x_63, 0x_63, 0x_9D, 0x_9D,
		0x_68, 0x_BB, 0x_63, 0x_68,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_63, 0x_9D, 0x_68, 0x_D1, 0x_D0, 0x_BB,
	];

	helper(S, BASE, -215);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_721_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_6_721_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38,
		0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_38, 0x_7B, 0x_04, 0x_5A, 0x_B1, 0x_B1, 0x_24, 0x_38, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_B1, 0x_7B, 0x_41, 0x_5A, 0x_04, 0x_35,
	];

	helper(S, BASE, -6_721);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_86_044_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_86_044_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_63, 0x_0E, 0x_63, 0x_8F, 0x_0E, 0x_0E, 0x_99,
		0x_0E, 0x_B1, 0x_89, 0x_0E, 0x_0E, 0x_8F, 0x_89, 0x_CA, 0x_89, 0x_CA, 0x_B1, 0x_0E, 0x_B1, 0x_8F, 0x_8F,
		0x_0E,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_CA, 0x_B1, 0x_89, 0x_8E, 0x_63, 0x_8F,
	];

	helper(S, BASE, -86_044);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_658_357_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_658_357_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_6B, 0x_6B, 0x_6B, 0x_6B,
		0x_AC, 0x_E7, 0x_04, 0x_04, 0x_B0, 0x_84, 0x_6B, 0x_3C, 0x_16, 0x_6B, 0x_84, 0x_04, 0x_16, 0x_16, 0x_16,
		0x_B0, 0x_04, 0x_AC, 0x_04, 0x_84, 0x_B0, 0x_04, 0x_16, 0x_84, 0x_84, 0x_AC, 0x_E7, 0x_B0, 0x_6B, 0x_04,
		0x_6B, 0x_6B, 0x_E7, 0x_16, 0x_E7, 0x_04, 0x_84, 0x_AC, 0x_84, 0x_84, 0x_B0,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_04, 0x_B0, 0x_16, 0x_E7, 0x_AC, 0x_84,
	];

	helper(S, BASE, -658_357);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_1_216_682_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_1_216_682_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77, 0x_77,
		0x_5A, 0x_D1, 0x_46, 0x_46, 0x_C6, 0x_5A, 0x_5A, 0x_C6, 0x_6B, 0x_5A, 0x_77, 0x_E7, 0x_D1, 0x_D1, 0x_5A,
		0x_E7, 0x_C6, 0x_77, 0x_C6, 0x_5A, 0x_5A, 0x_5A, 0x_D1, 0x_5A, 0x_C6, 0x_46, 0x_77, 0x_42, 0x_77, 0x_77,
		0x_5A, 0x_42, 0x_46, 0x_46, 0x_42, 0x_46, 0x_D1, 0x_42, 0x_C6, 0x_D1, 0x_E7, 0x_D1, 0x_46, 0x_E7, 0x_D1,
		0x_5A, 0x_5A, 0x_C6,
	];
	const BASE: &[u8] = &[
		0x_77, 0x_5A, 0x_46, 0x_D1, 0x_42, 0x_C6, 0x_E7,
	];

	helper(S, BASE, -1_216_682);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_28_551_571_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_28_551_571_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_CB,
		0x_CB, 0x_CB, 0x_CB, 0x_CB, 0x_0F, 0x_73, 0x_0F, 0x_0F, 0x_06, 0x_95, 0x_06, 0x_CB, 0x_73, 0x_2C, 0x_CB,
		0x_0F, 0x_D8, 0x_73, 0x_95, 0x_73, 0x_CB, 0x_0F, 0x_CB, 0x_0F, 0x_97, 0x_CB, 0x_D8, 0x_73, 0x_97, 0x_06,
		0x_95, 0x_0F, 0x_73, 0x_73, 0x_97, 0x_CB, 0x_0F, 0x_95, 0x_97, 0x_D8, 0x_D8, 0x_95, 0x_95,
	];
	const BASE: &[u8] = &[
		0x_CB, 0x_97, 0x_D8, 0x_95, 0x_0F, 0x_06, 0x_73,
	];

	helper(S, BASE, -28_551_571);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_125_744_136_in_base_7_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_125_744_136_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22,
		0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22, 0x_22,
		0x_22, 0x_72, 0x_22, 0x_5E, 0x_3F, 0x_5E, 0x_3F, 0x_72, 0x_D3, 0x_D3, 0x_22, 0x_D1, 0x_D3, 0x_22, 0x_95,
		0x_3F, 0x_D3, 0x_3F, 0x_22, 0x_42,
	];
	const BASE: &[u8] = &[
		0x_22, 0x_95, 0x_42, 0x_72, 0x_3F, 0x_5E, 0x_D3,
	];

	helper(S, BASE, -125_744_136);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_7_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_7_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0,
		0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0,
		0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_90, 0x_CF, 0x_90, 0x_EA, 0x_AA, 0x_AA, 0x_57, 0x_6C, 0x_6C, 0x_AA, 0x_5E,
		0x_5E, 0x_E0, 0x_EA, 0x_6C, 0x_6C, 0x_5E, 0x_5E, 0x_E0, 0x_34, 0x_34, 0x_E0, 0x_F9, 0x_EA,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_F9, 0x_34, 0x_6C, 0x_AA, 0x_47, 0x_5E, 0x_90, 0x_57, 0x_EA, 0x_DA,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_16_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_16_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_FD, 0x_B2, 0x_85, 0x_FD, 0x_5E,
		0x_8D, 0x_8D, 0x_8D, 0x_B2, 0x_17, 0x_04, 0x_E1, 0x_B2,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_FD, 0x_5E, 0x_8D, 0x_04, 0x_B2, 0x_B4, 0x_17, 0x_DB, 0x_94, 0x_E1,
	];

	helper(S, BASE, -16);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_432_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_432_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_82, 0x_C1, 0x_82, 0x_F1, 0x_C1,
		0x_EE, 0x_C0, 0x_96, 0x_EE, 0x_6F, 0x_96, 0x_82, 0x_42, 0x_C6, 0x_F6, 0x_AD, 0x_96, 0x_EE, 0x_C6, 0x_96,
		0x_F6, 0x_42, 0x_F6, 0x_C6, 0x_F6, 0x_80, 0x_80, 0x_AD, 0x_96, 0x_C1, 0x_96, 0x_AD, 0x_EE, 0x_96, 0x_C6,
		0x_C6, 0x_EE,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_96, 0x_42, 0x_82, 0x_AD, 0x_EE, 0x_C1, 0x_C6, 0x_C0, 0x_6F, 0x_F6,
	];

	helper(S, BASE, -432);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_4_673_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_4_673_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99,
		0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_99, 0x_F4, 0x_D1, 0x_5C, 0x_0F,
		0x_72, 0x_40, 0x_5C, 0x_F4, 0x_40, 0x_88, 0x_F4, 0x_05, 0x_40, 0x_05, 0x_D1, 0x_05, 0x_D1, 0x_05, 0x_0F,
		0x_5C, 0x_05, 0x_B9, 0x_99, 0x_0F, 0x_88, 0x_06, 0x_0F, 0x_50, 0x_99, 0x_88, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_99, 0x_06, 0x_50, 0x_F4, 0x_40, 0x_D1, 0x_5C, 0x_05, 0x_88, 0x_0F, 0x_B9,
	];

	helper(S, BASE, -4_673);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_46_338_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_46_338_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_54, 0x_5D, 0x_71, 0x_1A, 0x_9F, 0x_AD, 0x_79, 0x_1A, 0x_79, 0x_71, 0x_9F,
		0x_54, 0x_27, 0x_5D, 0x_71, 0x_24, 0x_27, 0x_5D, 0x_54, 0x_54, 0x_EE, 0x_5D, 0x_68, 0x_EE, 0x_9F, 0x_24,
		0x_68, 0x_21, 0x_54, 0x_EE, 0x_54, 0x_24, 0x_24,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_5D, 0x_27, 0x_54, 0x_79, 0x_21, 0x_9F, 0x_24, 0x_71, 0x_EE, 0x_1A,
	];

	helper(S, BASE, -46_338);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_940_913_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_940_913_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85,
		0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_85, 0x_24, 0x_DE, 0x_15, 0x_E2, 0x_A2,
		0x_28, 0x_3D, 0x_0E, 0x_A2, 0x_0E, 0x_0E, 0x_15, 0x_A2, 0x_3A, 0x_E2, 0x_E2, 0x_85, 0x_B2, 0x_B2, 0x_A2,
		0x_B2, 0x_DE,
	];
	const BASE: &[u8] = &[
		0x_85, 0x_A2, 0x_15, 0x_3A, 0x_0E, 0x_24, 0x_28, 0x_B2, 0x_01, 0x_DE, 0x_E2,
	];

	helper(S, BASE, -940_913);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_726_050_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_726_050_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_D1, 0x_D1,
		0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_D1, 0x_9B,
		0x_A1, 0x_2E, 0x_51, 0x_9B, 0x_66, 0x_16, 0x_E8, 0x_2E, 0x_D1, 0x_2E, 0x_D1, 0x_A1, 0x_51, 0x_66, 0x_06,
	];
	const BASE: &[u8] = &[
		0x_D1, 0x_9B, 0x_51, 0x_66, 0x_06, 0x_A1, 0x_CA, 0x_15, 0x_16, 0x_DF, 0x_2E,
	];

	helper(S, BASE, -2_726_050);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_97_416_385_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_97_416_385_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_19, 0x_19, 0x_67, 0x_A2, 0x_A2, 0x_E2, 0x_29, 0x_67, 0x_7C, 0x_19, 0x_D7, 0x_29, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_7C, 0x_CB, 0x_52, 0x_67, 0x_37, 0x_9C, 0x_29, 0x_FE, 0x_E2, 0x_A2,
	];

	helper(S, BASE, -97_416_385);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_763_937_126_in_base_11_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_763_937_126_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_D7, 0x_D7,
		0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7, 0x_D7,
		0x_CD, 0x_45, 0x_91, 0x_91, 0x_D1, 0x_57, 0x_91, 0x_57, 0x_80, 0x_9B, 0x_D1, 0x_5B, 0x_CD, 0x_5B, 0x_57,
		0x_D1, 0x_AA, 0x_B0, 0x_5B, 0x_80, 0x_80,
	];
	const BASE: &[u8] = &[
		0x_D7, 0x_5B, 0x_91, 0x_CD, 0x_D1, 0x_AA, 0x_45, 0x_80, 0x_B0, 0x_55, 0x_57,
	];

	helper(S, BASE, -763_937_126);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_D3, 0x_7A, 0x_3D, 0x_5F,
		0x_BD, 0x_67, 0x_A5, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_AA, 0x_D3, 0x_CE, 0x_3D, 0x_BF, 0x_FF, 0x_1D, 0x_A5, 0x_72, 0x_C5, 0x_67, 0x_BD,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_58_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_58_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_51, 0x_DD, 0x_6A, 0x_C2, 0x_E3,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_C3, 0x_C2, 0x_8D, 0x_51, 0x_D8, 0x_DD, 0x_5C, 0x_3E, 0x_E1, 0x_E3, 0x_D2, 0x_0E,
	];

	helper(S, BASE, -58);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_128_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_128_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE,
		0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_17, 0x_F7, 0x_EC, 0x_17, 0x_D7, 0x_F7, 0x_C7, 0x_FE,
		0x_25, 0x_55, 0x_17, 0x_C7, 0x_26, 0x_1A, 0x_25, 0x_F7, 0x_06, 0x_55, 0x_17, 0x_1A, 0x_FE, 0x_45, 0x_06,
		0x_F2, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_FE, 0x_55, 0x_45, 0x_F2, 0x_C7, 0x_D7, 0x_26, 0x_25, 0x_1A, 0x_17, 0x_04, 0x_F7, 0x_06,
	];

	helper(S, BASE, -128);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_776_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_6_776_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_44, 0x_44, 0x_44, 0x_B4,
		0x_C4, 0x_C4, 0x_B4, 0x_36, 0x_6F, 0x_88, 0x_B4, 0x_9A, 0x_44, 0x_AC, 0x_34, 0x_06, 0x_B4, 0x_27, 0x_C4,
		0x_06, 0x_44, 0x_27, 0x_64, 0x_C4, 0x_64, 0x_27, 0x_44, 0x_B4, 0x_44, 0x_A9, 0x_34, 0x_06, 0x_6F, 0x_A9,
		0x_27, 0x_27, 0x_44, 0x_C4, 0x_A9, 0x_27,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_C4, 0x_E2, 0x_B4, 0x_27, 0x_A9, 0x_64, 0x_AC, 0x_6F, 0x_06, 0x_9A, 0x_88, 0x_34,
	];

	helper(S, BASE, -6_776);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_69_601_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_69_601_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6,
		0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6,
		0x_D6, 0x_D6, 0x_B6, 0x_CB, 0x_54, 0x_23, 0x_9B, 0x_E4, 0x_9B, 0x_9B, 0x_AE, 0x_23, 0x_54, 0x_48, 0x_54,
		0x_AE, 0x_12, 0x_B2, 0x_12, 0x_12, 0x_B6, 0x_CB, 0x_CB, 0x_01, 0x_23, 0x_22, 0x_B6, 0x_23, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_AE, 0x_B6, 0x_B2, 0x_01, 0x_CB, 0x_FB, 0x_22, 0x_54, 0x_48, 0x_23, 0x_12, 0x_9B,
	];

	helper(S, BASE, -69_601);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_613_707_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_613_707_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_63, 0x_63, 0x_63, 0x_63,
		0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63,
		0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63, 0x_63,
		0x_63, 0x_63, 0x_63, 0x_14, 0x_79, 0x_C5, 0x_F5, 0x_E9, 0x_78, 0x_8C, 0x_1E, 0x_15, 0x_1E, 0x_15, 0x_15,
		0x_78, 0x_C5, 0x_15, 0x_D1, 0x_23, 0x_D1, 0x_1E, 0x_23, 0x_63, 0x_63, 0x_15, 0x_F5, 0x_63, 0x_78, 0x_79,
		0x_1E, 0x_15, 0x_79, 0x_23, 0x_78, 0x_78, 0x_14,
	];
	const BASE: &[u8] = &[
		0x_63, 0x_14, 0x_1E, 0x_78, 0x_F5, 0x_E9, 0x_C5, 0x_DC, 0x_79, 0x_23, 0x_D1, 0x_3D, 0x_15,
	];

	helper(S, BASE, -613_707);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_4_121_388_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_4_121_388_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_24, 0x_89, 0x_97, 0x_43, 0x_89, 0x_89,
		0x_89, 0x_2D, 0x_6E, 0x_C6, 0x_50, 0x_7D, 0x_27, 0x_C6, 0x_89,
	];
	const BASE: &[u8] = &[
		0x_24, 0x_97, 0x_6E, 0x_43, 0x_C6, 0x_7D, 0x_67, 0x_27, 0x_C9, 0x_AA, 0x_50, 0x_89, 0x_DF,
	];

	helper(S, BASE, -4_121_388);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_70_404_254_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_70_404_254_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_50, 0x_50, 0x_50,
		0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_50, 0x_F5, 0x_F5, 0x_83, 0x_E2, 0x_50, 0x_E2, 0x_C4, 0x_02,
		0x_DD, 0x_50, 0x_83, 0x_50, 0x_C4, 0x_02, 0x_83, 0x_D0, 0x_C4, 0x_B7, 0x_C4, 0x_88, 0x_02, 0x_19, 0x_B7,
		0x_02, 0x_50, 0x_83, 0x_D0, 0x_F5, 0x_B7, 0x_88, 0x_83, 0x_50, 0x_C4, 0x_B7, 0x_83, 0x_D0, 0x_F5, 0x_B7,
		0x_D0, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_50, 0x_F5, 0x_C4, 0x_7B, 0x_B7, 0x_88, 0x_19, 0x_83, 0x_E2, 0x_D0, 0x_58, 0x_02, 0x_BD,
	];

	helper(S, BASE, -70_404_254);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_688_473_739_in_base_13_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_688_473_739_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0,
		0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0, 0x_E0,
		0x_E0, 0x_E0, 0x_BF, 0x_6D, 0x_04, 0x_B9, 0x_80, 0x_6D, 0x_08, 0x_CB, 0x_85, 0x_80, 0x_CB, 0x_BF, 0x_80,
		0x_BF, 0x_9F, 0x_04, 0x_80, 0x_BF, 0x_6D, 0x_80, 0x_DF, 0x_80, 0x_04, 0x_B9, 0x_B9, 0x_BF, 0x_9F, 0x_E0,
		0x_04, 0x_BF, 0x_DF, 0x_A3, 0x_9F, 0x_C0, 0x_DF, 0x_CB, 0x_B9, 0x_9F, 0x_08, 0x_C0, 0x_9F, 0x_9F, 0x_6D,
		0x_DF, 0x_CB, 0x_B9, 0x_E0, 0x_08, 0x_B9, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_E0, 0x_08, 0x_A3, 0x_B9, 0x_80, 0x_CB, 0x_46, 0x_9F, 0x_04, 0x_C0, 0x_BF, 0x_DF, 0x_6D,
	];

	helper(S, BASE, -688_473_739);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_9_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_9_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_1C, 0x_72, 0x_BE, 0x_5E, 0x_5E, 0x_56,
		0x_72, 0x_82, 0x_5E, 0x_E6, 0x_72, 0x_5A, 0x_43, 0x_DB, 0x_56, 0x_4B, 0x_A1, 0x_82, 0x_5E, 0x_DB, 0x_E6,
		0x_99, 0x_E6, 0x_DB, 0x_E6,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_5E, 0x_E6, 0x_9D, 0x_56, 0x_43, 0x_29, 0x_A1, 0x_99, 0x_72, 0x_DE, 0x_E3, 0x_5A, 0x_67, 0x_CC,
		0x_4B, 0x_39, 0x_DB, 0x_82,
	];

	helper(S, BASE, -9);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_23_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_23_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_69,
		0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_69, 0x_06,
		0x_6D, 0x_C3, 0x_AF, 0x_3D, 0x_A6, 0x_1D, 0x_F9,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_06, 0x_8D, 0x_87, 0x_6D, 0x_77, 0x_1D, 0x_12, 0x_A6, 0x_31, 0x_91, 0x_7B, 0x_AF, 0x_3D, 0x_F9,
		0x_36, 0x_DD, 0x_D3, 0x_5F,
	];

	helper(S, BASE, -23);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_584_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_584_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_A4, 0x_1A, 0x_E4, 0x_76, 0x_12, 0x_6F,
		0x_76, 0x_9D, 0x_E4, 0x_6D, 0x_B5, 0x_1A, 0x_32, 0x_E4, 0x_1A, 0x_44, 0x_8B, 0x_76, 0x_B5, 0x_44, 0x_44,
		0x_94, 0x_AC, 0x_90, 0x_90, 0x_90, 0x_94, 0x_8B, 0x_89, 0x_8B, 0x_9D, 0x_6F, 0x_94, 0x_E4, 0x_1A, 0x_68,
		0x_68, 0x_AC, 0x_8B, 0x_A4, 0x_89, 0x_E4,
	];
	const BASE: &[u8] = &[
		0x_A4, 0x_1A, 0x_32, 0x_B5, 0x_89, 0x_9D, 0x_90, 0x_23, 0x_6F, 0x_44, 0x_8B, 0x_E4, 0x_68, 0x_94, 0x_76,
		0x_FD, 0x_6D, 0x_DC, 0x_AC,
	];

	helper(S, BASE, -584);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_1_721_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_1_721_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E, 0x_6E,
		0x_6E, 0x_6E, 0x_6E, 0x_78, 0x_AA, 0x_8B, 0x_B4, 0x_7F, 0x_7C, 0x_8B, 0x_F9, 0x_F9, 0x_8B, 0x_F5, 0x_BF,
		0x_3A, 0x_10, 0x_1C, 0x_F9, 0x_19, 0x_3A, 0x_78, 0x_1C, 0x_F9, 0x_95, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_6E, 0x_48, 0x_BF, 0x_08, 0x_78, 0x_7C, 0x_95, 0x_10, 0x_F5, 0x_19, 0x_1C, 0x_8B, 0x_3A, 0x_5C, 0x_AA,
		0x_B0, 0x_F9, 0x_11, 0x_7F,
	];

	helper(S, BASE, -1_721);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_24_612_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_24_612_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_62, 0x_62, 0x_62, 0x_62,
		0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62,
		0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_B9, 0x_3E, 0x_B9, 0x_E2, 0x_25,
		0x_5E, 0x_57, 0x_98,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_E1, 0x_71, 0x_B9, 0x_B1, 0x_98, 0x_4F, 0x_E2, 0x_B5, 0x_1E, 0x_B7, 0x_3E, 0x_0F, 0x_0E, 0x_24,
		0x_19, 0x_5E, 0x_70, 0x_57,
	];

	helper(S, BASE, -24_612);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_882_779_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_882_779_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8,
		0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_D8, 0x_C8, 0x_74, 0x_0E, 0x_59, 0x_5A,
		0x_E9, 0x_D8, 0x_C8, 0x_74, 0x_26, 0x_47, 0x_85, 0x_41, 0x_26, 0x_26, 0x_3D, 0x_85, 0x_E7, 0x_0E, 0x_E0,
		0x_C8, 0x_21, 0x_C3, 0x_41, 0x_66, 0x_0E, 0x_5A, 0x_B8, 0x_26, 0x_66, 0x_74, 0x_3D, 0x_85, 0x_E7, 0x_41,
		0x_E0, 0x_5A, 0x_C8, 0x_26, 0x_21, 0x_BC, 0x_E0,
	];
	const BASE: &[u8] = &[
		0x_D8, 0x_5A, 0x_BC, 0x_21, 0x_66, 0x_26, 0x_C8, 0x_59, 0x_B8, 0x_E7, 0x_3D, 0x_C3, 0x_E0, 0x_0E, 0x_74,
		0x_85, 0x_47, 0x_41, 0x_08,
	];

	helper(S, BASE, -882_779);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_3_918_131_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_3_918_131_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_1E,
		0x_98, 0x_1E, 0x_36, 0x_41, 0x_10, 0x_5F, 0x_64, 0x_79, 0x_8A, 0x_98, 0x_25, 0x_83, 0x_1E, 0x_83, 0x_36,
		0x_E9, 0x_B8, 0x_83, 0x_51, 0x_B8,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_1E, 0x_32, 0x_1A, 0x_36, 0x_79, 0x_E9, 0x_9C, 0x_10, 0x_8B, 0x_41, 0x_98, 0x_B8, 0x_51, 0x_66,
		0x_83, 0x_8A, 0x_64, 0x_D7,
	];

	helper(S, BASE, -3_918_131);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_35_476_074_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_35_476_074_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_56, 0x_79, 0x_99, 0x_58, 0x_24, 0x_11, 0x_B7, 0x_24, 0x_96, 0x_96, 0x_54, 0x_11,
		0x_FB, 0x_27, 0x_24, 0x_FB, 0x_94, 0x_CD, 0x_99, 0x_27, 0x_79, 0x_58, 0x_99, 0x_56, 0x_0F, 0x_11, 0x_96,
		0x_DB, 0x_54, 0x_79, 0x_CD, 0x_99, 0x_66, 0x_EE, 0x_69, 0x_96, 0x_69, 0x_56, 0x_DB, 0x_79, 0x_96, 0x_24,
		0x_66, 0x_69, 0x_CD, 0x_56, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_66, 0x_27, 0x_58, 0x_99, 0x_AF, 0x_79, 0x_DB, 0x_94, 0x_EE, 0x_FB, 0x_69, 0x_24, 0x_96, 0x_56,
		0x_11, 0x_0F, 0x_CD, 0x_07,
	];

	helper(S, BASE, -35_476_074);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_992_477_229_in_base_19_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_992_477_229_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_9B, 0x_6C, 0x_FB, 0x_6C, 0x_6E,
		0x_CE, 0x_6C, 0x_6B, 0x_CE, 0x_1F, 0x_AF, 0x_E4, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_9B, 0x_6C, 0x_FB, 0x_78, 0x_43, 0x_BE, 0x_65, 0x_6B, 0x_88, 0x_6A, 0x_05, 0x_5F, 0x_CE, 0x_E4, 0x_A3,
		0x_6E, 0x_98, 0x_AF, 0x_A5,
	];

	helper(S, BASE, -992_477_229);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_1_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_1_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_7E, 0x_4A, 0x_02,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_7E, 0x_1D, 0x_B8, 0x_88, 0x_F6, 0x_78, 0x_AF, 0x_95, 0x_94, 0x_D8, 0x_A6, 0x_9D, 0x_E4, 0x_CD,
		0x_34, 0x_D9, 0x_C0, 0x_6F, 0x_44, 0x_F8, 0x_21, 0x_57, 0x_51, 0x_4B, 0x_22, 0x_B4, 0x_0E, 0x_C5, 0x_38,
		0x_14, 0x_D2, 0x_96, 0x_75, 0x_80, 0x_DA, 0x_02, 0x_B9, 0x_C4, 0x_FE, 0x_A5, 0x_CF,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_17_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_17_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01, 0x_01,
		0x_01, 0x_01, 0x_01, 0x_01, 0x_D0, 0x_EC, 0x_4B, 0x_C6, 0x_45, 0x_BC, 0x_B5, 0x_FC, 0x_4B, 0x_4D, 0x_C6,
		0x_D0, 0x_07, 0x_14, 0x_14, 0x_BC, 0x_BC, 0x_14, 0x_F8, 0x_01, 0x_35, 0x_60, 0x_C4, 0x_B4, 0x_DF, 0x_14,
		0x_DF, 0x_19, 0x_DA, 0x_DF,
	];
	const BASE: &[u8] = &[
		0x_01, 0x_DD, 0x_75, 0x_B4, 0x_02, 0x_B5, 0x_9D, 0x_DA, 0x_BC, 0x_79, 0x_7A, 0x_07, 0x_66, 0x_CD, 0x_E0,
		0x_C4, 0x_6A, 0x_D0, 0x_4D, 0x_FC, 0x_4B, 0x_24, 0x_05, 0x_DF, 0x_35, 0x_83, 0x_10, 0x_91, 0x_25, 0x_04,
		0x_48, 0x_60, 0x_29, 0x_19, 0x_C6, 0x_6D, 0x_45, 0x_D5, 0x_47, 0x_8F, 0x_F8, 0x_14,
	];

	helper(S, BASE, -17);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_232_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_232_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15,
		0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_15, 0x_F2, 0x_84, 0x_C0, 0x_83, 0x_E8, 0x_96, 0x_84, 0x_69,
		0x_84,
	];
	const BASE: &[u8] = &[
		0x_15, 0x_FD, 0x_99, 0x_CD, 0x_3A, 0x_F2, 0x_BC, 0x_96, 0x_86, 0x_7E, 0x_4A, 0x_F6, 0x_4B, 0x_83, 0x_E8,
		0x_69, 0x_F1, 0x_6C, 0x_3B, 0x_C3, 0x_6A, 0x_FC, 0x_84, 0x_04, 0x_A1, 0x_6B, 0x_8C, 0x_B4, 0x_78, 0x_4F,
		0x_8E, 0x_4E, 0x_AC, 0x_88, 0x_A4, 0x_1F, 0x_36, 0x_58, 0x_A8, 0x_37, 0x_94, 0x_97,
	];

	helper(S, BASE, -232);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_1_118_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_1_118_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_FC, 0x_FC, 0x_FC,
		0x_1A, 0x_1A, 0x_64, 0x_58, 0x_91, 0x_1B, 0x_45, 0x_B7, 0x_EF, 0x_40, 0x_9A, 0x_45, 0x_C1, 0x_B7, 0x_22,
		0x_62, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_FC, 0x_D6, 0x_1B, 0x_2F, 0x_B7, 0x_5C, 0x_99, 0x_8D, 0x_91, 0x_DC, 0x_22, 0x_D0, 0x_F0, 0x_62, 0x_58,
		0x_40, 0x_03, 0x_54, 0x_25, 0x_DF, 0x_04, 0x_15, 0x_7A, 0x_1E, 0x_13, 0x_FA, 0x_1A, 0x_EF, 0x_9A, 0x_6B,
		0x_72, 0x_0E, 0x_44, 0x_DD, 0x_B3, 0x_4F, 0x_45, 0x_C1, 0x_3D, 0x_BA, 0x_28, 0x_CE,
	];

	helper(S, BASE, -1_118);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_72_793_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_72_793_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35,
		0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35,
		0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_35, 0x_7B, 0x_91, 0x_26, 0x_3D,
		0x_DA, 0x_91, 0x_37, 0x_F9, 0x_1B, 0x_60, 0x_B9, 0x_DC, 0x_DA, 0x_5E, 0x_3B, 0x_54, 0x_7B, 0x_18, 0x_18,
		0x_4E, 0x_DC,
	];
	const BASE: &[u8] = &[
		0x_35, 0x_F2, 0x_D2, 0x_9C, 0x_24, 0x_D1, 0x_54, 0x_26, 0x_45, 0x_13, 0x_4E, 0x_91, 0x_D9, 0x_37, 0x_32,
		0x_9E, 0x_FE, 0x_2C, 0x_F5, 0x_DA, 0x_74, 0x_DC, 0x_3B, 0x_FF, 0x_EE, 0x_C4, 0x_60, 0x_E3, 0x_DB, 0x_01,
		0x_5E, 0x_B9, 0x_F7, 0x_53, 0x_18, 0x_CF, 0x_1B, 0x_61, 0x_F9, 0x_40, 0x_6F, 0x_7B,
	];

	helper(S, BASE, -72_793);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_524_478_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_524_478_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61,
		0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_61, 0x_44, 0x_9C, 0x_D5, 0x_06, 0x_55, 0x_53, 0x_C3, 0x_AB,
		0x_63, 0x_06, 0x_7E, 0x_4E, 0x_2C, 0x_44, 0x_12, 0x_83, 0x_9D, 0x_73, 0x_A6, 0x_62, 0x_D3, 0x_82, 0x_3D,
		0x_F8, 0x_3D, 0x_FF, 0x_51, 0x_51, 0x_66, 0x_A6, 0x_F8, 0x_72, 0x_4E, 0x_C9, 0x_73, 0x_FF, 0x_51, 0x_FA,
		0x_82, 0x_F8, 0x_A9, 0x_51, 0x_AD,
	];
	const BASE: &[u8] = &[
		0x_61, 0x_51, 0x_7E, 0x_9C, 0x_38, 0x_82, 0x_F9, 0x_44, 0x_1B, 0x_9D, 0x_2C, 0x_AB, 0x_B7, 0x_D5, 0x_62,
		0x_AD, 0x_3D, 0x_A9, 0x_73, 0x_66, 0x_3C, 0x_12, 0x_83, 0x_DC, 0x_06, 0x_C3, 0x_63, 0x_D3, 0x_A6, 0x_B2,
		0x_F5, 0x_72, 0x_50, 0x_BE, 0x_A7, 0x_08, 0x_C9, 0x_FF, 0x_4E, 0x_53, 0x_FA, 0x_F8,
	];

	helper(S, BASE, -524_478);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_7_818_178_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_7_818_178_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_18, 0x_A0, 0x_6F, 0x_EB, 0x_AC, 0x_5F, 0x_18, 0x_17, 0x_EA, 0x_CD,
		0x_CB, 0x_9E, 0x_2F, 0x_33, 0x_08, 0x_6F, 0x_80, 0x_84, 0x_65, 0x_11, 0x_B0, 0x_F1, 0x_75, 0x_73, 0x_68,
		0x_44, 0x_F1, 0x_67, 0x_98, 0x_73, 0x_74, 0x_F2, 0x_6B, 0x_B4, 0x_33, 0x_18, 0x_08, 0x_B4, 0x_EB, 0x_44,
		0x_CD, 0x_17, 0x_F5, 0x_FF, 0x_67, 0x_8C, 0x_6B, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_9F, 0x_18, 0x_EB, 0x_AC, 0x_33, 0x_1E, 0x_3C, 0x_67, 0x_D9, 0x_8C, 0x_68, 0x_2F, 0x_EA, 0x_FF,
		0x_11, 0x_66, 0x_84, 0x_8E, 0x_B0, 0x_F1, 0x_A0, 0x_6F, 0x_44, 0x_42, 0x_F5, 0x_65, 0x_74, 0x_6B, 0x_F4,
		0x_DE, 0x_17, 0x_CB, 0x_80, 0x_30, 0x_9E, 0x_08, 0x_F2, 0x_98, 0x_CD, 0x_73, 0x_B4,
	];

	helper(S, BASE, -7_818_178);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_60_404_609_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_60_404_609_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_EF, 0x_EF, 0x_EF,
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF,
		0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_EF, 0x_9F, 0x_BD, 0x_94,
		0x_26, 0x_74, 0x_FA, 0x_6D, 0x_96, 0x_F0, 0x_F6, 0x_7F, 0x_71, 0x_9D, 0x_FB, 0x_94, 0x_D7, 0x_9C, 0x_E2,
		0x_44, 0x_8E, 0x_56, 0x_67, 0x_D6, 0x_94, 0x_6D, 0x_CC, 0x_EF, 0x_6C, 0x_74, 0x_CC, 0x_67, 0x_F6, 0x_42,
		0x_5D, 0x_BA, 0x_BB, 0x_CA, 0x_BA, 0x_56, 0x_F6, 0x_BD, 0x_35, 0x_AB, 0x_6C, 0x_5D, 0x_26,
	];
	const BASE: &[u8] = &[
		0x_EF, 0x_B3, 0x_CA, 0x_8A, 0x_76, 0x_56, 0x_44, 0x_6D, 0x_7F, 0x_AB, 0x_96, 0x_BA, 0x_94, 0x_B5, 0x_E2,
		0x_F6, 0x_B0, 0x_BD, 0x_CC, 0x_9F, 0x_FB, 0x_67, 0x_6C, 0x_35, 0x_71, 0x_42, 0x_8E, 0x_5D, 0x_4F, 0x_D7,
		0x_F5, 0x_93, 0x_BB, 0x_9B, 0x_D6, 0x_F0, 0x_75, 0x_9C, 0x_31, 0x_9D, 0x_26, 0x_74,
	];

	helper(S, BASE, -60_404_609);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_965_767_591_in_base_42_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_965_767_591_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C,
		0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8E, 0x_A6, 0x_BC, 0x_49, 0x_4D, 0x_C1, 0x_21,
		0x_03, 0x_EE, 0x_14, 0x_3E, 0x_90, 0x_E3, 0x_38, 0x_35, 0x_EC, 0x_DE, 0x_FE, 0x_58, 0x_1E, 0x_03, 0x_8B,
		0x_F4, 0x_AF, 0x_90, 0x_D2, 0x_F9, 0x_88, 0x_1E, 0x_CF, 0x_AF, 0x_3E, 0x_C1, 0x_AF, 0x_58, 0x_58, 0x_14,
		0x_35,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_A4, 0x_AF, 0x_90, 0x_58, 0x_F4, 0x_1A, 0x_8E, 0x_9C, 0x_14, 0x_F9, 0x_D2, 0x_4D, 0x_2C, 0x_FE,
		0x_BC, 0x_A6, 0x_49, 0x_74, 0x_C1, 0x_A1, 0x_7B, 0x_EC, 0x_38, 0x_86, 0x_E3, 0x_43, 0x_3E, 0x_1E, 0x_40,
		0x_8B, 0x_03, 0x_05, 0x_EE, 0x_B7, 0x_7C, 0x_CF, 0x_88, 0x_96, 0x_35, 0x_84, 0x_DE,
	];

	helper(S, BASE, -965_767_591);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_6_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_FB, 0x_FB, 0x_FB,
		0x_FB, 0x_FB, 0x_FB, 0x_A3, 0x_F5, 0x_83, 0x_5A, 0x_33, 0x_71, 0x_E1, 0x_F0, 0x_9A,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_50, 0x_98, 0x_91, 0x_DA, 0x_AD, 0x_A3, 0x_9B, 0x_7E, 0x_73, 0x_FD, 0x_B0, 0x_7C, 0x_62, 0x_37,
		0x_6C, 0x_68, 0x_63, 0x_DB, 0x_A2, 0x_93, 0x_71, 0x_7B, 0x_35, 0x_70, 0x_9A, 0x_AF, 0x_32, 0x_CF, 0x_27,
		0x_15, 0x_46, 0x_8F, 0x_C6, 0x_13, 0x_5A, 0x_E1, 0x_4A, 0x_33, 0x_C1, 0x_97, 0x_BC, 0x_14, 0x_D7, 0x_6E,
		0x_49, 0x_D2, 0x_DE, 0x_F0, 0x_6D, 0x_54, 0x_CC, 0x_8D, 0x_EA, 0x_1A, 0x_88, 0x_F9, 0x_75, 0x_3A, 0x_E8,
		0x_CA, 0x_83, 0x_69, 0x_5C, 0x_DF, 0x_A9, 0x_25, 0x_06, 0x_02, 0x_F8, 0x_C9, 0x_2C, 0x_C0,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_84_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_84_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08,
		0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_DD, 0x_CF, 0x_0A, 0x_92, 0x_F7,
		0x_C0, 0x_CB, 0x_E5, 0x_A6, 0x_9E, 0x_29, 0x_C5, 0x_1D, 0x_C0, 0x_76, 0x_31, 0x_29, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_DD, 0x_29, 0x_31, 0x_75, 0x_F6, 0x_98, 0x_4E, 0x_72, 0x_41, 0x_28, 0x_CF, 0x_73, 0x_63, 0x_A6,
		0x_07, 0x_F3, 0x_68, 0x_64, 0x_97, 0x_C1, 0x_D3, 0x_ED, 0x_9E, 0x_CB, 0x_0E, 0x_B7, 0x_FD, 0x_5A, 0x_92,
		0x_6E, 0x_02, 0x_35, 0x_C7, 0x_8B, 0x_43, 0x_F0, 0x_D6, 0x_19, 0x_D7, 0x_3D, 0x_A5, 0x_76, 0x_14, 0x_71,
		0x_C5, 0x_F7, 0x_FE, 0x_5C, 0x_E2, 0x_50, 0x_2E, 0x_60, 0x_01, 0x_B1, 0x_E7, 0x_D4, 0x_12, 0x_52, 0x_1D,
		0x_F1, 0x_77, 0x_17, 0x_A7, 0x_B6, 0x_C0, 0x_2F, 0x_C4, 0x_E5, 0x_11, 0x_E4, 0x_37, 0x_87,
	];

	helper(S, BASE, -84);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_995_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_995_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36,
		0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36,
		0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_36, 0x_48, 0x_40, 0x_30, 0x_C9,
		0x_B2, 0x_6B, 0x_B3, 0x_AB, 0x_CE, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_36, 0x_67, 0x_4D, 0x_DB, 0x_B5, 0x_B8, 0x_B0, 0x_1D, 0x_7B, 0x_B2, 0x_6A, 0x_A7, 0x_C9, 0x_48, 0x_10,
		0x_F5, 0x_22, 0x_7F, 0x_CE, 0x_9B, 0x_75, 0x_A1, 0x_A2, 0x_26, 0x_71, 0x_39, 0x_77, 0x_AB, 0x_0F, 0x_BB,
		0x_06, 0x_6F, 0x_90, 0x_2C, 0x_37, 0x_6B, 0x_55, 0x_16, 0x_4A, 0x_E8, 0x_BE, 0x_E5, 0x_43, 0x_F3, 0x_88,
		0x_42, 0x_40, 0x_A4, 0x_89, 0x_D8, 0x_86, 0x_3E, 0x_8D, 0x_ED, 0x_50, 0x_D4, 0x_9D, 0x_EF, 0x_38, 0x_05,
		0x_8B, 0x_FC, 0x_47, 0x_E1, 0x_1E, 0x_B3, 0x_8C, 0x_D9, 0x_6D, 0x_2F, 0x_DE, 0x_29, 0x_9A,
	];

	helper(S, BASE, -995);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_1_097_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_1_097_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_E3, 0x_E3, 0x_E3,
		0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3,
		0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3,
		0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E3, 0x_E0, 0x_1C, 0x_6E, 0x_8E,
	];
	const BASE: &[u8] = &[
		0x_E3, 0x_5F, 0x_1C, 0x_D5, 0x_CD, 0x_12, 0x_8D, 0x_63, 0x_A2, 0x_AD, 0x_BD, 0x_4F, 0x_F8, 0x_2C, 0x_40,
		0x_E0, 0x_C5, 0x_9B, 0x_96, 0x_52, 0x_6F, 0x_EA, 0x_72, 0x_76, 0x_1D, 0x_A6, 0x_59, 0x_AF, 0x_28, 0x_56,
		0x_5B, 0x_E9, 0x_C6, 0x_E5, 0x_07, 0x_CC, 0x_1A, 0x_6A, 0x_D9, 0x_65, 0x_14, 0x_37, 0x_FD, 0x_29, 0x_7C,
		0x_11, 0x_A3, 0x_BF, 0x_04, 0x_85, 0x_17, 0x_39, 0x_88, 0x_4C, 0x_D1, 0x_AB, 0x_84, 0x_E1, 0x_6D, 0x_B7,
		0x_C4, 0x_8C, 0x_D0, 0x_82, 0x_B9, 0x_7D, 0x_9C, 0x_A0, 0x_8E, 0x_8B, 0x_DA, 0x_AE, 0x_35,
	];

	helper(S, BASE, -1_097);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_71_214_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_71_214_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A,
		0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A,
		0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A,
		0x_3A, 0x_DE, 0x_B4, 0x_0E, 0x_5D, 0x_E8, 0x_CC, 0x_43, 0x_7D, 0x_F4, 0x_80, 0x_71, 0x_71, 0x_D5, 0x_85,
		0x_7B, 0x_93, 0x_DF, 0x_01, 0x_FE, 0x_7B, 0x_76, 0x_FE, 0x_F4, 0x_E7, 0x_F4, 0x_65,
	];
	const BASE: &[u8] = &[
		0x_3A, 0x_59, 0x_91, 0x_6A, 0x_52, 0x_5E, 0x_19, 0x_26, 0x_E8, 0x_E3, 0x_CE, 0x_07, 0x_10, 0x_DE, 0x_F0,
		0x_A0, 0x_57, 0x_CC, 0x_9C, 0x_0F, 0x_9B, 0x_3E, 0x_BF, 0x_18, 0x_72, 0x_FB, 0x_B4, 0x_2F, 0x_B8, 0x_F4,
		0x_93, 0x_73, 0x_90, 0x_85, 0x_C3, 0x_6C, 0x_22, 0x_A1, 0x_82, 0x_0E, 0x_EC, 0x_ED, 0x_78, 0x_8E, 0x_B9,
		0x_DF, 0x_44, 0x_7D, 0x_65, 0x_70, 0x_99, 0x_FE, 0x_AC, 0x_23, 0x_28, 0x_77, 0x_5F, 0x_30, 0x_F7, 0x_E7,
		0x_76, 0x_A4, 0x_01, 0x_6F, 0x_80, 0x_43, 0x_71, 0x_7B, 0x_67, 0x_69, 0x_6B, 0x_7C, 0x_D5,
	];

	helper(S, BASE, -71_214);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_120_821_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_120_821_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_69, 0x_69, 0x_69, 0x_D3, 0x_48, 0x_59, 0x_58, 0x_1B, 0x_6A, 0x_A2,
		0x_6A, 0x_91, 0x_F0, 0x_B9, 0x_C4, 0x_B8, 0x_48, 0x_30, 0x_AF, 0x_A2, 0x_91, 0x_69,
	];
	const BASE: &[u8] = &[
		0x_69, 0x_26, 0x_DB, 0x_22, 0x_1B, 0x_2C, 0x_59, 0x_7C, 0x_9B, 0x_33, 0x_E4, 0x_21, 0x_02, 0x_57, 0x_FD,
		0x_16, 0x_F5, 0x_EC, 0x_6A, 0x_D0, 0x_7D, 0x_F9, 0x_D3, 0x_A2, 0x_D1, 0x_AF, 0x_1E, 0x_6D, 0x_6C, 0x_9D,
		0x_75, 0x_11, 0x_99, 0x_5C, 0x_05, 0x_DC, 0x_C3, 0x_2F, 0x_30, 0x_DE, 0x_78, 0x_A6, 0x_B8, 0x_34, 0x_08,
		0x_DF, 0x_B5, 0x_CA, 0x_AA, 0x_48, 0x_BF, 0x_7E, 0x_74, 0x_A8, 0x_E3, 0x_53, 0x_AB, 0x_2E, 0x_C4, 0x_B9,
		0x_B2, 0x_15, 0x_91, 0x_54, 0x_3F, 0x_5E, 0x_03, 0x_E8, 0x_6B, 0x_E1, 0x_1F, 0x_4A, 0x_F0,
	];

	helper(S, BASE, -120_821);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_7_521_740_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_7_521_740_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32,
		0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32,
		0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32, 0x_32,
		0x_9D, 0x_F2, 0x_0F, 0x_58, 0x_E5, 0x_B6, 0x_05, 0x_80, 0x_30, 0x_73, 0x_58, 0x_92, 0x_42, 0x_E3, 0x_E3,
		0x_7C, 0x_32, 0x_B0, 0x_F6, 0x_7F, 0x_C5, 0x_CE, 0x_34, 0x_3F, 0x_13, 0x_14, 0x_4B, 0x_3F, 0x_4B, 0x_16,
		0x_C5, 0x_05,
	];
	const BASE: &[u8] = &[
		0x_32, 0x_D8, 0x_6B, 0x_E0, 0x_73, 0x_EB, 0x_E3, 0x_88, 0x_7B, 0x_34, 0x_45, 0x_DF, 0x_83, 0x_92, 0x_CF,
		0x_37, 0x_56, 0x_DE, 0x_4B, 0x_9D, 0x_7C, 0x_30, 0x_49, 0x_B2, 0x_F2, 0x_15, 0x_74, 0x_78, 0x_1D, 0x_D1,
		0x_54, 0x_3F, 0x_A7, 0x_50, 0x_0F, 0x_77, 0x_BF, 0x_52, 0x_F6, 0x_58, 0x_1A, 0x_B4, 0x_35, 0x_C5, 0x_EA,
		0x_3C, 0x_42, 0x_6E, 0x_47, 0x_21, 0x_7F, 0x_9B, 0x_B6, 0x_7A, 0x_CE, 0x_04, 0x_16, 0x_F0, 0x_13, 0x_05,
		0x_B0, 0x_14, 0x_80, 0x_4C, 0x_E6, 0x_29, 0x_B5, 0x_23, 0x_9C, 0x_0E, 0x_84, 0x_3A, 0x_75,
	];

	helper(S, BASE, -7_521_740);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_72_629_088_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_72_629_088_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_CC, 0x_CC, 0x_CC, 0x_64, 0x_11, 0x_71, 0x_64, 0x_F6, 0x_97, 0x_DE, 0x_71, 0x_5D, 0x_7F, 0x_73, 0x_F9,
		0x_66, 0x_93, 0x_22, 0x_3F, 0x_DF, 0x_67, 0x_AD, 0x_48, 0x_17, 0x_51, 0x_D9, 0x_67, 0x_9B, 0x_04, 0x_FC,
		0x_66, 0x_EA, 0x_B2, 0x_DF, 0x_B4, 0x_1A, 0x_D2, 0x_31, 0x_AD, 0x_74, 0x_DA,
	];
	const BASE: &[u8] = &[
		0x_CC, 0x_F6, 0x_64, 0x_D2, 0x_DE, 0x_B2, 0x_51, 0x_48, 0x_14, 0x_DB, 0x_3B, 0x_15, 0x_53, 0x_E3, 0x_6D,
		0x_EA, 0x_AA, 0x_AC, 0x_5D, 0x_86, 0x_A8, 0x_E8, 0x_AD, 0x_66, 0x_F1, 0x_3F, 0x_9E, 0x_67, 0x_04, 0x_FC,
		0x_DA, 0x_93, 0x_40, 0x_05, 0x_69, 0x_F9, 0x_31, 0x_6B, 0x_47, 0x_22, 0x_11, 0x_83, 0x_01, 0x_BF, 0x_B4,
		0x_F7, 0x_50, 0x_F4, 0x_17, 0x_2E, 0x_99, 0x_71, 0x_73, 0x_E1, 0x_90, 0x_9B, 0x_CB, 0x_DF, 0x_62, 0x_CD,
		0x_7F, 0x_07, 0x_C9, 0x_3A, 0x_85, 0x_74, 0x_D9, 0x_1A, 0x_C6, 0x_26, 0x_32, 0x_72, 0x_7B,
	];

	helper(S, BASE, -72_629_088);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_927_922_585_in_base_73_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_927_922_585_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_C9, 0x_C9, 0x_C9, 0x_C9,
		0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_C9, 0x_2C, 0x_43, 0x_E6,
		0x_B3, 0x_E6, 0x_10, 0x_23, 0x_D2, 0x_BC, 0x_EF, 0x_91, 0x_C7, 0x_27, 0x_2F, 0x_53, 0x_F4, 0x_FD, 0x_08,
		0x_6E, 0x_B2, 0x_16, 0x_C7, 0x_EF, 0x_59, 0x_A4, 0x_58, 0x_7B, 0x_62, 0x_1A, 0x_EF, 0x_D2, 0x_71, 0x_12,
		0x_C4, 0x_FD, 0x_E6, 0x_7B, 0x_A4, 0x_A3, 0x_2F,
	];
	const BASE: &[u8] = &[
		0x_C9, 0x_D0, 0x_5F, 0x_FD, 0x_2F, 0x_6E, 0x_69, 0x_F4, 0x_C4, 0x_D2, 0x_71, 0x_12, 0x_C7, 0x_FE, 0x_80,
		0x_E1, 0x_A9, 0x_9B, 0x_EE, 0x_A3, 0x_14, 0x_E6, 0x_39, 0x_62, 0x_EF, 0x_45, 0x_27, 0x_52, 0x_B4, 0x_36,
		0x_F0, 0x_57, 0x_2C, 0x_5A, 0x_53, 0x_BC, 0x_9A, 0x_99, 0x_BF, 0x_26, 0x_87, 0x_B2, 0x_2A, 0x_1A, 0x_4C,
		0x_E8, 0x_23, 0x_1B, 0x_08, 0x_43, 0x_04, 0x_8A, 0x_F2, 0x_6A, 0x_4B, 0x_72, 0x_58, 0x_FF, 0x_91, 0x_D3,
		0x_46, 0x_7E, 0x_6B, 0x_7B, 0x_A4, 0x_59, 0x_CE, 0x_16, 0x_BA, 0x_BB, 0x_B3, 0x_3B, 0x_83,
	];

	helper(S, BASE, -927_922_585);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_6_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_6_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_CF,
		0x_A3, 0x_A6, 0x_37, 0x_7C, 0x_EA, 0x_29, 0x_78, 0x_FC, 0x_E4, 0x_B5, 0x_56, 0x_9F, 0x_B6, 0x_6A, 0x_29,
		0x_EA, 0x_EF, 0x_A2, 0x_E6, 0x_4B, 0x_65, 0x_C0, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_43, 0x_04, 0x_47, 0x_8D, 0x_3F, 0x_A3, 0x_1E, 0x_D0, 0x_56, 0x_85, 0x_08, 0x_05, 0x_10, 0x_2F,
		0x_DD, 0x_9A, 0x_F6, 0x_94, 0x_B6, 0x_02, 0x_9F, 0x_8B, 0x_33, 0x_E6, 0x_84, 0x_4B, 0x_7C, 0x_64, 0x_39,
		0x_52, 0x_A2, 0x_C0, 0x_6B, 0x_C2, 0x_31, 0x_FA, 0x_BC, 0x_BB, 0x_CD, 0x_46, 0x_E5, 0x_2C, 0x_87, 0x_49,
		0x_93, 0x_6D, 0x_65, 0x_E3, 0x_D3, 0x_14, 0x_61, 0x_37, 0x_66, 0x_F2, 0x_0F, 0x_B8, 0x_3E, 0x_B2, 0x_A4,
		0x_F3, 0x_4C, 0x_A0, 0x_76, 0x_8C, 0x_79, 0x_D8, 0x_78, 0x_F9, 0x_BE, 0x_5B, 0x_97, 0x_07, 0x_A5, 0x_48,
		0x_A7, 0x_2E, 0x_AD, 0x_6F, 0x_DF, 0x_E4, 0x_F4, 0x_40, 0x_77, 0x_D1, 0x_1A, 0x_01, 0x_FC, 0x_81, 0x_2A,
		0x_B5, 0x_75, 0x_DC, 0x_B1, 0x_92, 0x_24, 0x_89, 0x_67, 0x_6E, 0x_C5, 0x_B9, 0x_EF, 0x_7B, 0x_82, 0x_9C,
		0x_EA, 0x_70, 0x_29, 0x_C9, 0x_59, 0x_54, 0x_6A, 0x_CC,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_83_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_83_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_7F, 0x_8E, 0x_D5, 0x_44,
		0x_61, 0x_C8,
	];
	const BASE: &[u8] = &[
		0x_7F, 0x_DD, 0x_06, 0x_27, 0x_39, 0x_34, 0x_D6, 0x_29, 0x_63, 0x_F0, 0x_E6, 0x_EB, 0x_02, 0x_47, 0x_1E,
		0x_65, 0x_49, 0x_EA, 0x_AA, 0x_95, 0x_FC, 0x_3D, 0x_C6, 0x_B1, 0x_AD, 0x_1C, 0x_24, 0x_2A, 0x_3C, 0x_46,
		0x_97, 0x_52, 0x_28, 0x_1F, 0x_A9, 0x_A7, 0x_59, 0x_5C, 0x_CB, 0x_C5, 0x_91, 0x_60, 0x_5E, 0x_7B, 0x_79,
		0x_54, 0x_9B, 0x_83, 0x_41, 0x_BB, 0x_81, 0x_89, 0x_3A, 0x_33, 0x_73, 0x_D8, 0x_68, 0x_6B, 0x_4A, 0x_A2,
		0x_7A, 0x_E2, 0x_8D, 0x_CC, 0x_C7, 0x_B6, 0x_9D, 0x_CD, 0x_C8, 0x_85, 0x_42, 0x_E9, 0x_B0, 0x_A4, 0x_67,
		0x_B7, 0x_01, 0x_F2, 0x_76, 0x_DA, 0x_BA, 0x_61, 0x_BD, 0x_8E, 0x_F5, 0x_C2, 0x_1B, 0x_C1, 0x_44, 0x_56,
		0x_38, 0x_4E, 0x_96, 0x_8A, 0x_AC, 0x_AF, 0x_77, 0x_ED, 0x_07, 0x_4B, 0x_14, 0x_9C, 0x_A5, 0x_13, 0x_DE,
		0x_22, 0x_08, 0x_36, 0x_6C, 0x_FE, 0x_6E, 0x_2C, 0x_B2,
	];

	helper(S, BASE, -83);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_751_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_751_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_65, 0x_65, 0x_65, 0x_65,
		0x_65, 0x_65, 0x_65, 0x_65, 0x_D2, 0x_3E, 0x_09, 0x_4E, 0x_D2, 0x_A6, 0x_F6, 0x_64, 0x_7C, 0x_95, 0x_2C,
		0x_0E, 0x_D3, 0x_71, 0x_55, 0x_A2, 0x_B0, 0x_66, 0x_D6, 0x_4C, 0x_C6, 0x_F3, 0x_67, 0x_E8, 0x_A8, 0x_9F,
		0x_FE, 0x_13, 0x_6C, 0x_44, 0x_71, 0x_C0,
	];
	const BASE: &[u8] = &[
		0x_65, 0x_EF, 0x_4C, 0x_D0, 0x_9B, 0x_4B, 0x_D2, 0x_B0, 0x_29, 0x_71, 0x_67, 0x_AF, 0x_D6, 0x_D3, 0x_0F,
		0x_89, 0x_E8, 0x_6B, 0x_BB, 0x_EB, 0x_C6, 0x_2F, 0x_4E, 0x_D9, 0x_51, 0x_9A, 0x_FE, 0x_B4, 0x_DF, 0x_7B,
		0x_37, 0x_44, 0x_6C, 0x_E1, 0x_F3, 0x_E6, 0x_48, 0x_AC, 0x_2A, 0x_6F, 0x_1A, 0x_F6, 0x_95, 0x_0E, 0x_88,
		0x_77, 0x_9E, 0x_12, 0x_B2, 0x_FA, 0x_1B, 0x_80, 0x_14, 0x_B7, 0x_C1, 0x_A3, 0x_8E, 0x_2E, 0x_3B, 0x_33,
		0x_A8, 0x_79, 0x_55, 0x_FB, 0x_21, 0x_AB, 0x_B5, 0x_F0, 0x_7C, 0x_1F, 0x_D7, 0x_54, 0x_86, 0x_3E, 0x_AD,
		0x_52, 0x_18, 0x_9F, 0x_B6, 0x_60, 0x_13, 0x_07, 0x_DC, 0x_8D, 0x_7D, 0x_BA, 0x_64, 0x_5A, 0x_E3, 0x_EC,
		0x_91, 0x_A2, 0x_81, 0x_A0, 0x_A4, 0x_62, 0x_A5, 0x_4D, 0x_CF, 0x_90, 0x_66, 0x_C5, 0x_2C, 0x_96, 0x_76,
		0x_E0, 0x_70, 0x_6E, 0x_C0, 0x_A6, 0x_1D, 0x_DD, 0x_A7,
	];

	helper(S, BASE, -751);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_2_476_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_2_476_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_1D, 0x_42, 0x_95, 0x_72, 0x_5C, 0x_49, 0x_19, 0x_81,
		0x_7F, 0x_C6, 0x_C1, 0x_8D, 0x_A6, 0x_EB, 0x_BC, 0x_72, 0x_14, 0x_D3, 0x_7F, 0x_EF, 0x_FB, 0x_99, 0x_4F,
		0x_7B, 0x_AE, 0x_B2, 0x_E1, 0x_1B, 0x_F5, 0x_02, 0x_7B, 0x_BD, 0x_71, 0x_68, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_BC, 0x_49, 0x_E3, 0x_8D, 0x_22, 0x_11, 0x_AB, 0x_AD, 0x_99, 0x_84, 0x_91, 0x_B4, 0x_30, 0x_28,
		0x_A9, 0x_75, 0x_B7, 0x_EB, 0x_9C, 0x_FF, 0x_1D, 0x_C2, 0x_02, 0x_6E, 0x_7E, 0x_14, 0x_FB, 0x_C8, 0x_9F,
		0x_4B, 0x_04, 0x_72, 0x_B8, 0x_68, 0x_C7, 0x_BD, 0x_51, 0x_BE, 0x_D4, 0x_48, 0x_E7, 0x_5A, 0x_66, 0x_5E,
		0x_9B, 0x_03, 0x_71, 0x_2C, 0x_79, 0x_CE, 0x_8C, 0x_34, 0x_7F, 0x_1F, 0x_C6, 0x_64, 0x_C5, 0x_88, 0x_C1,
		0x_FD, 0x_BA, 0x_93, 0x_9D, 0x_3B, 0x_29, 0x_96, 0x_70, 0x_53, 0x_FA, 0x_67, 0x_1B, 0x_4A, 0x_A6, 0x_8F,
		0x_81, 0x_5C, 0x_4F, 0x_3A, 0x_EF, 0x_AE, 0x_7B, 0x_F3, 0x_39, 0x_12, 0x_B6, 0x_5B, 0x_D3, 0x_B1, 0x_F1,
		0x_65, 0x_38, 0x_26, 0x_76, 0x_3C, 0x_45, 0x_92, 0x_CF, 0x_F5, 0x_15, 0x_69, 0x_27, 0x_E2, 0x_42, 0x_F4,
		0x_3E, 0x_19, 0x_06, 0x_C4, 0x_CD, 0x_CC, 0x_A0, 0x_B2,
	];

	helper(S, BASE, -2_476);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_86_894_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_86_894_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE,
		0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_DE, 0x_9C,
		0x_4E, 0x_6C, 0x_41, 0x_DE, 0x_7E, 0x_FB, 0x_3B, 0x_9C, 0x_98, 0x_A7, 0x_31, 0x_8C, 0x_A6, 0x_31, 0x_61,
		0x_CB, 0x_39, 0x_4A, 0x_2E, 0x_B8, 0x_1D,
	];
	const BASE: &[u8] = &[
		0x_DE, 0x_FD, 0x_4C, 0x_C7, 0x_90, 0x_F5, 0x_9C, 0x_39, 0x_C5, 0x_31, 0x_E8, 0x_36, 0x_77, 0x_6F, 0x_D7,
		0x_76, 0x_2E, 0x_BD, 0x_FE, 0x_A6, 0x_B7, 0x_B8, 0x_D5, 0x_63, 0x_7C, 0x_67, 0x_29, 0x_82, 0x_06, 0x_2F,
		0x_93, 0x_E2, 0x_F2, 0x_A8, 0x_26, 0x_8F, 0x_0F, 0x_2A, 0x_E4, 0x_CE, 0x_8C, 0x_45, 0x_38, 0x_1F, 0x_8B,
		0x_03, 0x_19, 0x_44, 0x_84, 0x_B2, 0x_8A, 0x_3F, 0x_52, 0x_24, 0x_C8, 0x_9B, 0x_DD, 0x_BE, 0x_10, 0x_91,
		0x_1D, 0x_7E, 0x_AC, 0x_4A, 0x_A9, 0x_5F, 0x_EB, 0x_D2, 0x_92, 0x_47, 0x_95, 0x_30, 0x_46, 0x_FB, 0x_A7,
		0x_B1, 0x_5A, 0x_B9, 0x_A4, 0x_3B, 0x_1C, 0x_DB, 0x_7B, 0x_D0, 0x_DF, 0x_CD, 0x_CB, 0x_61, 0x_D1, 0x_59,
		0x_4E, 0x_11, 0x_6B, 0x_56, 0x_1E, 0x_7F, 0x_3D, 0x_E0, 0x_5D, 0x_21, 0x_54, 0x_D4, 0x_87, 0x_12, 0x_FC,
		0x_4F, 0x_F7, 0x_23, 0x_ED, 0x_FF, 0x_6C, 0x_07, 0x_98,
	];

	helper(S, BASE, -86_894);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_465_776_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_465_776_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_4B, 0x_4B, 0x_4B, 0x_4B,
		0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_4B, 0x_79,
		0x_3F, 0x_E0, 0x_2D, 0x_CF, 0x_7C, 0x_DA, 0x_62, 0x_03, 0x_EF, 0x_E3, 0x_76, 0x_D4, 0x_89, 0x_81, 0x_54,
		0x_23, 0x_DA, 0x_99, 0x_90, 0x_A9, 0x_21, 0x_03, 0x_A0, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_4B, 0x_75, 0x_01, 0x_7F, 0x_99, 0x_49, 0x_B8, 0x_B3, 0x_19, 0x_30, 0x_21, 0x_2C, 0x_25, 0x_61, 0x_DA,
		0x_40, 0x_32, 0x_AE, 0x_B5, 0x_B9, 0x_7C, 0x_27, 0x_22, 0x_AF, 0x_B1, 0x_E5, 0x_DC, 0x_C1, 0x_5E, 0x_A3,
		0x_1E, 0x_47, 0x_41, 0x_0E, 0x_C2, 0x_5C, 0x_79, 0x_35, 0x_A9, 0x_1A, 0x_48, 0x_52, 0x_90, 0x_93, 0x_F3,
		0x_8B, 0x_62, 0x_8C, 0x_38, 0x_D7, 0x_16, 0x_D3, 0x_82, 0x_3F, 0x_CC, 0x_89, 0x_CF, 0x_F0, 0x_6C, 0x_C4,
		0x_A0, 0x_36, 0x_D4, 0x_5A, 0x_5D, 0x_3C, 0x_73, 0x_56, 0x_71, 0x_A7, 0x_A8, 0x_AD, 0x_E3, 0x_AA, 0x_4E,
		0x_6F, 0x_80, 0x_78, 0x_31, 0x_23, 0x_F6, 0x_55, 0x_17, 0x_1C, 0x_A4, 0x_81, 0x_E2, 0x_D1, 0x_05, 0x_4C,
		0x_C6, 0x_5B, 0x_AB, 0x_92, 0x_84, 0x_54, 0x_9D, 0x_77, 0x_C3, 0x_D6, 0x_08, 0x_07, 0x_E4, 0x_E0, 0x_A2,
		0x_76, 0x_E8, 0x_F9, 0x_EF, 0x_0F, 0x_F4, 0x_C9, 0x_03,
	];

	helper(S, BASE, -465_776);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_5_345_742_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_5_345_742_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_F6, 0x_29, 0x_EF, 0x_F1,
		0x_88, 0x_53, 0x_D3, 0x_47, 0x_41, 0x_99, 0x_4E, 0x_89, 0x_DD, 0x_EF, 0x_1A, 0x_D2, 0x_50, 0x_2A, 0x_42,
		0x_68, 0x_D2, 0x_74, 0x_F1, 0x_33, 0x_8A, 0x_95, 0x_7E, 0x_2C, 0x_C1, 0x_47, 0x_C9, 0x_38, 0x_89, 0x_D6,
		0x_77, 0x_7D, 0x_07, 0x_65, 0x_7A, 0x_51, 0x_95, 0x_29, 0x_1A, 0x_8A, 0x_5F, 0x_D2, 0x_03,
	];
	const BASE: &[u8] = &[
		0x_F6, 0x_86, 0x_7A, 0x_29, 0x_7B, 0x_60, 0x_81, 0x_12, 0x_2C, 0x_B1, 0x_B4, 0x_BF, 0x_44, 0x_1C, 0x_2A,
		0x_C1, 0x_9A, 0x_3D, 0x_E4, 0x_9F, 0x_58, 0x_A9, 0x_E7, 0x_99, 0x_EB, 0x_7C, 0x_06, 0x_95, 0x_AB, 0x_1A,
		0x_D2, 0x_7E, 0x_A4, 0x_F9, 0x_84, 0x_7D, 0x_CD, 0x_01, 0x_80, 0x_A3, 0x_92, 0x_B7, 0x_AF, 0x_21, 0x_54,
		0x_4D, 0x_A2, 0x_DC, 0x_14, 0x_E2, 0x_FD, 0x_88, 0x_4F, 0x_38, 0x_89, 0x_74, 0x_D3, 0x_FF, 0x_E9, 0x_A1,
		0x_48, 0x_18, 0x_C9, 0x_1F, 0x_62, 0x_CE, 0x_9B, 0x_F5, 0x_47, 0x_69, 0x_CA, 0x_8A, 0x_42, 0x_F1, 0x_AE,
		0x_33, 0x_50, 0x_8F, 0x_6E, 0x_EF, 0x_5A, 0x_68, 0x_55, 0x_BD, 0x_03, 0x_DD, 0x_5F, 0x_25, 0x_65, 0x_05,
		0x_45, 0x_10, 0x_41, 0x_77, 0x_19, 0x_2E, 0x_39, 0x_96, 0x_E3, 0x_71, 0x_6B, 0x_57, 0x_6A, 0x_51, 0x_3A,
		0x_5E, 0x_6C, 0x_28, 0x_07, 0x_D6, 0x_9E, 0x_DA, 0x_4E,
	];

	helper(S, BASE, -5_345_742);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_69_024_925_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_69_024_925_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C,
		0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_4C, 0x_CA, 0x_F8, 0x_54, 0x_F7, 0x_02, 0x_EE, 0x_F2, 0x_77, 0x_1B, 0x_D1,
		0x_0E, 0x_FA, 0x_CB, 0x_CA, 0x_68, 0x_D5, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_4C, 0x_46, 0x_BB, 0x_5B, 0x_15, 0x_F7, 0x_21, 0x_AA, 0x_9F, 0x_58, 0x_EA, 0x_BE, 0x_96, 0x_98, 0x_66,
		0x_A6, 0x_9D, 0x_D0, 0x_43, 0x_6F, 0x_E8, 0x_3C, 0x_40, 0x_73, 0x_92, 0x_13, 0x_0E, 0x_9E, 0x_49, 0x_68,
		0x_C0, 0x_1F, 0x_5C, 0x_77, 0x_CB, 0x_30, 0x_71, 0x_47, 0x_7B, 0x_6C, 0x_ED, 0x_DB, 0x_F6, 0x_A8, 0x_7D,
		0x_86, 0x_E0, 0x_CA, 0x_56, 0x_52, 0x_6D, 0x_FB, 0x_5F, 0x_A4, 0x_D5, 0x_41, 0x_63, 0x_2E, 0x_95, 0x_60,
		0x_E1, 0x_BC, 0x_A7, 0x_EB, 0x_90, 0x_BF, 0x_99, 0x_67, 0x_7C, 0x_39, 0x_1D, 0x_1B, 0x_D1, 0x_17, 0x_EF,
		0x_54, 0x_53, 0x_1A, 0x_59, 0x_F2, 0x_CC, 0x_AD, 0x_0F, 0x_18, 0x_33, 0x_EE, 0x_B3, 0x_FA, 0x_8B, 0x_19,
		0x_69, 0x_38, 0x_B6, 0x_E2, 0x_F8, 0x_C4, 0x_5D, 0x_E5, 0x_35, 0x_62, 0x_26, 0x_81, 0x_93, 0x_DD, 0x_44,
		0x_B2, 0x_6E, 0x_CD, 0x_F3, 0x_8F, 0x_D7, 0x_4D, 0x_2C,
	];

	helper(S, BASE, -69_024_925);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_578_131_201_in_base_113_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_578_131_201_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD,
		0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD,
		0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_DD, 0x_71, 0x_C6, 0x_5B, 0x_C4,
		0x_5F, 0x_A8, 0x_3F, 0x_CF, 0x_6E, 0x_F7, 0x_B3, 0x_10, 0x_EA, 0x_5F, 0x_44, 0x_B3, 0x_59, 0x_25, 0x_A6,
		0x_D6, 0x_D6, 0x_EA, 0x_A6, 0x_73, 0x_98, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_DD, 0x_C2, 0x_88, 0x_71, 0x_74, 0x_B1, 0x_BF, 0x_C0, 0x_D1, 0x_95, 0x_7E, 0x_DF, 0x_94, 0x_BC, 0x_CA,
		0x_9F, 0x_E4, 0x_C4, 0x_F1, 0x_6A, 0x_9C, 0x_3B, 0x_4C, 0x_D7, 0x_DE, 0x_BE, 0x_AF, 0x_48, 0x_D4, 0x_4B,
		0x_F2, 0x_CF, 0x_AB, 0x_44, 0x_02, 0x_61, 0x_5F, 0x_89, 0x_EF, 0x_19, 0x_34, 0x_2A, 0x_4A, 0x_4E, 0x_90,
		0x_A9, 0x_1B, 0x_C5, 0x_5A, 0x_10, 0x_43, 0x_59, 0x_DB, 0x_15, 0x_FB, 0x_4F, 0x_99, 0x_80, 0x_11, 0x_39,
		0x_70, 0x_C6, 0x_75, 0x_CB, 0x_21, 0x_68, 0x_3F, 0x_25, 0x_04, 0x_5E, 0x_A6, 0x_B3, 0x_AE, 0x_1E, 0x_77,
		0x_F7, 0x_5B, 0x_CC, 0x_18, 0x_73, 0x_BB, 0x_7A, 0x_86, 0x_03, 0x_7D, 0x_76, 0x_E2, 0x_D9, 0x_C8, 0x_9D,
		0x_A4, 0x_98, 0x_7C, 0x_EA, 0x_C7, 0x_A1, 0x_0F, 0x_FE, 0x_8F, 0x_D6, 0x_A5, 0x_58, 0x_D8, 0x_ED, 0x_2E,
		0x_93, 0x_E6, 0x_BD, 0x_01, 0x_C9, 0x_6E, 0x_CE, 0x_B5,
	];

	helper(S, BASE, -578_131_201);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_3_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_3_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_F9, 0x_F9, 0x_F9, 0x_F9,
		0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9,
		0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_F9, 0x_05,
		0x_5E, 0x_22, 0x_76, 0x_D4, 0x_3B, 0x_90, 0x_3C, 0x_2E, 0x_7A,
	];
	const BASE: &[u8] = &[
		0x_F9, 0x_79, 0x_85, 0x_05, 0x_08, 0x_62, 0x_40, 0x_33, 0x_AD, 0x_1F, 0x_7D, 0x_34, 0x_63, 0x_27, 0x_EB,
		0x_26, 0x_80, 0x_38, 0x_31, 0x_14, 0x_71, 0x_0E, 0x_65, 0x_FF, 0x_E5, 0x_E2, 0x_8F, 0x_6E, 0x_B4, 0x_BB,
		0x_A3, 0x_5C, 0x_B0, 0x_58, 0x_AE, 0x_ED, 0x_29, 0x_47, 0x_E6, 0x_51, 0x_9D, 0x_E3, 0x_DD, 0x_B9, 0x_C9,
		0x_BF, 0x_D7, 0x_87, 0x_56, 0x_D5, 0x_5B, 0x_B2, 0x_50, 0x_97, 0x_3D, 0x_F8, 0x_46, 0x_D4, 0x_A8, 0x_74,
		0x_9A, 0x_BC, 0x_61, 0x_04, 0x_42, 0x_D8, 0x_18, 0x_7A, 0x_7B, 0x_4E, 0x_94, 0x_F5, 0x_17, 0x_5F, 0x_6D,
		0x_91, 0x_3F, 0x_F3, 0x_EF, 0x_4A, 0x_C4, 0x_90, 0x_BE, 0x_83, 0x_67, 0x_1D, 0x_5D, 0x_78, 0x_CA, 0x_4C,
		0x_E8, 0x_CB, 0x_FE, 0x_E0, 0x_2F, 0x_70, 0x_54, 0x_59, 0x_D0, 0x_99, 0x_92, 0x_1B, 0x_2E, 0x_23, 0x_6B,
		0x_15, 0x_1C, 0x_EE, 0x_DB, 0x_11, 0x_64, 0x_39, 0x_BD, 0x_3C, 0x_01, 0x_19, 0x_C5, 0x_AA, 0x_86, 0x_E4,
		0x_DF, 0x_44, 0x_C6, 0x_41, 0x_B3, 0x_06, 0x_CC, 0x_A2, 0x_9E, 0x_76, 0x_25, 0x_A5, 0x_9F, 0x_A0, 0x_30,
		0x_CD, 0x_B8, 0x_E1, 0x_FD, 0x_9B, 0x_FB, 0x_84, 0x_3B, 0x_C7, 0x_F1, 0x_81, 0x_AF, 0x_D3, 0x_2A, 0x_BA,
		0x_EC, 0x_E9, 0x_FC, 0x_3A, 0x_C2, 0x_75, 0x_13, 0x_AB, 0x_B7, 0x_F6, 0x_F2, 0x_43, 0x_DC, 0x_4F, 0x_82,
		0x_55, 0x_32, 0x_07, 0x_8B, 0x_A1, 0x_21, 0x_8A, 0x_03, 0x_0F, 0x_B5, 0x_F4, 0x_49, 0x_E7, 0x_F0, 0x_72,
		0x_8C, 0x_22, 0x_45, 0x_7F, 0x_7E, 0x_CF, 0x_D1, 0x_B1, 0x_53, 0x_96, 0x_57, 0x_37, 0x_C8,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_97_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_97_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52,
		0x_52, 0x_52, 0x_52, 0x_0E, 0x_20, 0x_39, 0x_9A, 0x_42, 0x_24, 0x_12, 0x_46, 0x_32, 0x_DC, 0x_4A, 0x_16,
		0x_66, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_74, 0x_EF, 0x_A4, 0x_6A, 0x_3D, 0x_D9, 0x_19, 0x_E6, 0x_3E, 0x_77, 0x_A6, 0x_69, 0x_17, 0x_33,
		0x_3C, 0x_E9, 0x_9C, 0x_C1, 0x_7F, 0x_2C, 0x_86, 0x_7D, 0x_4A, 0x_AE, 0x_C8, 0x_BF, 0x_29, 0x_AB, 0x_16,
		0x_89, 0x_1A, 0x_30, 0x_12, 0x_B3, 0x_61, 0x_73, 0x_8F, 0x_91, 0x_59, 0x_D6, 0x_95, 0x_24, 0x_4F, 0x_E2,
		0x_A8, 0x_B5, 0x_35, 0x_1B, 0x_DE, 0x_66, 0x_22, 0x_D3, 0x_72, 0x_B2, 0x_B7, 0x_B8, 0x_9E, 0x_37, 0x_3B,
		0x_6C, 0x_EE, 0x_7A, 0x_50, 0x_6F, 0x_EB, 0x_AD, 0x_5D, 0x_21, 0x_DD, 0x_15, 0x_F9, 0x_A9, 0x_4E, 0x_42,
		0x_1E, 0x_F8, 0x_B6, 0x_04, 0x_AF, 0x_92, 0x_F3, 0x_07, 0x_45, 0x_FF, 0x_7E, 0x_C7, 0x_8B, 0x_D2, 0x_DC,
		0x_E8, 0x_93, 0x_DB, 0x_90, 0x_99, 0x_BC, 0x_26, 0x_0E, 0x_F7, 0x_D5, 0x_A3, 0x_C6, 0x_75, 0x_0F, 0x_AA,
		0x_AC, 0x_E1, 0x_B4, 0x_76, 0x_A0, 0x_87, 0x_CB, 0x_E7, 0x_EC, 0x_E4, 0x_88, 0x_28, 0x_B1, 0x_32, 0x_51,
		0x_13, 0x_49, 0x_8E, 0x_25, 0x_C2, 0x_BB, 0x_7C, 0x_8C, 0x_48, 0x_44, 0x_1C, 0x_BE, 0x_F4, 0x_1F, 0x_96,
		0x_C9, 0x_43, 0x_2E, 0x_14, 0x_6B, 0x_CC, 0x_31, 0x_27, 0x_D1, 0x_DF, 0x_B0, 0x_39, 0x_11, 0x_55, 0x_FD,
		0x_6D, 0x_47, 0x_5B, 0x_E5, 0x_D7, 0x_85, 0x_36, 0x_9A, 0x_F0, 0x_9F, 0x_94, 0x_5C, 0x_A1, 0x_3A, 0x_9B,
		0x_46, 0x_E0, 0x_A2, 0x_98, 0x_03, 0x_53, 0x_D4, 0x_D0, 0x_C5, 0x_02, 0x_CA, 0x_83, 0x_40, 0x_1D, 0x_82,
		0x_78, 0x_10, 0x_81, 0x_8D, 0x_BD, 0x_FB, 0x_60, 0x_05, 0x_84, 0x_23, 0x_56, 0x_41, 0x_CE,
	];

	helper(S, BASE, -97);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_544_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_544_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_2E, 0x_27, 0x_99, 0x_A7, 0x_2A, 0x_34,
		0x_89,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_AC, 0x_2E, 0x_A7, 0x_CA, 0x_5A, 0x_B5, 0x_3B, 0x_25, 0x_8F, 0x_33, 0x_59, 0x_F8, 0x_C5, 0x_B6,
		0x_13, 0x_7E, 0x_E3, 0x_6E, 0x_51, 0x_1E, 0x_BF, 0x_E7, 0x_46, 0x_97, 0x_3F, 0x_2F, 0x_F1, 0x_BC, 0x_56,
		0x_96, 0x_1D, 0x_4A, 0x_A6, 0x_16, 0x_98, 0x_E4, 0x_75, 0x_B0, 0x_26, 0x_4B, 0x_88, 0x_19, 0x_B1, 0x_E6,
		0x_CB, 0x_D2, 0x_E9, 0x_C2, 0x_28, 0x_F7, 0x_90, 0x_40, 0x_F5, 0x_02, 0x_6F, 0x_6B, 0x_58, 0x_11, 0x_43,
		0x_41, 0x_A0, 0x_D9, 0x_9D, 0x_45, 0x_B8, 0x_FC, 0x_D3, 0x_89, 0x_BA, 0x_77, 0x_EB, 0x_E1, 0x_DF, 0x_CF,
		0x_15, 0x_14, 0x_66, 0x_0E, 0x_9C, 0x_85, 0x_A2, 0x_5F, 0x_A5, 0x_55, 0x_03, 0x_D5, 0x_AE, 0x_83, 0x_17,
		0x_C0, 0x_69, 0x_5D, 0x_50, 0x_B3, 0x_21, 0x_B7, 0x_0F, 0x_EC, 0x_3A, 0x_8A, 0x_31, 0x_E2, 0x_BD, 0x_EF,
		0x_24, 0x_A8, 0x_29, 0x_EE, 0x_82, 0x_06, 0x_54, 0x_DE, 0x_8C, 0x_95, 0x_35, 0x_04, 0x_D1, 0x_87, 0x_CE,
		0x_62, 0x_32, 0x_36, 0x_7F, 0x_7C, 0x_7B, 0x_61, 0x_3D, 0x_93, 0x_4F, 0x_F6, 0x_34, 0x_C6, 0x_CD, 0x_37,
		0x_80, 0x_4C, 0x_D6, 0x_1F, 0x_A3, 0x_2A, 0x_DD, 0x_52, 0x_42, 0x_5B, 0x_1C, 0x_49, 0x_70, 0x_C1, 0x_C7,
		0x_F3, 0x_AF, 0x_D8, 0x_8B, 0x_9F, 0x_C3, 0x_EA, 0x_D4, 0x_27, 0x_B4, 0x_9A, 0x_E8, 0x_79, 0x_B2, 0x_4E,
		0x_F4, 0x_F2, 0x_D7, 0x_A4, 0x_12, 0x_C9, 0x_AB, 0x_FE, 0x_ED, 0x_63, 0x_81, 0x_91, 0x_8D, 0x_73, 0x_CC,
		0x_64, 0x_D0, 0x_DA, 0x_8E, 0x_10, 0x_F9, 0x_47, 0x_DB, 0x_38, 0x_9E, 0x_1B, 0x_AD, 0x_4D,
	];

	helper(S, BASE, -544);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_4_295_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_4_295_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_AC, 0x_AC, 0x_AC,
		0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_DC, 0x_82, 0x_B0, 0x_71, 0x_34, 0x_81, 0x_D7, 0x_F1,
		0x_29, 0x_FB, 0x_8F, 0x_52, 0x_3A, 0x_2E, 0x_CE, 0x_71, 0x_3D, 0x_E6, 0x_AA, 0x_08, 0x_30, 0x_30, 0x_AA,
		0x_DA, 0x_E8, 0x_DD, 0x_AF, 0x_70, 0x_81, 0x_92, 0x_B8, 0x_C6, 0x_48, 0x_92, 0x_38, 0x_11, 0x_3C, 0x_9D,
		0x_E6, 0x_E7,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_BB, 0x_AB, 0x_F2, 0x_B5, 0x_C6, 0x_19, 0x_EA, 0x_6B, 0x_F7, 0x_CF, 0x_DF, 0x_78, 0x_D0, 0x_7A,
		0x_F5, 0x_B7, 0x_25, 0x_69, 0x_80, 0x_77, 0x_EE, 0x_DC, 0x_BA, 0x_7B, 0x_4C, 0x_E4, 0x_5A, 0x_95, 0x_2C,
		0x_9C, 0x_5B, 0x_22, 0x_E5, 0x_F1, 0x_A8, 0x_B3, 0x_71, 0x_5E, 0x_01, 0x_BC, 0x_B9, 0x_AE, 0x_7F, 0x_D6,
		0x_1C, 0x_39, 0x_3C, 0x_EF, 0x_82, 0x_06, 0x_A6, 0x_E0, 0x_90, 0x_D2, 0x_61, 0x_CA, 0x_FA, 0x_FD, 0x_0F,
		0x_6C, 0x_C5, 0x_FE, 0x_4F, 0x_72, 0x_A1, 0x_79, 0x_CE, 0x_3D, 0x_C2, 0x_4B, 0x_64, 0x_29, 0x_4A, 0x_33,
		0x_87, 0x_08, 0x_7C, 0x_D5, 0x_27, 0x_8B, 0x_AF, 0x_81, 0x_DD, 0x_DA, 0x_10, 0x_B2, 0x_59, 0x_37, 0x_AD,
		0x_35, 0x_BF, 0x_EB, 0x_47, 0x_70, 0x_B1, 0x_D4, 0x_9F, 0x_1E, 0x_8F, 0x_D3, 0x_45, 0x_46, 0x_93, 0x_CC,
		0x_AA, 0x_96, 0x_3A, 0x_52, 0x_63, 0x_0E, 0x_66, 0x_1B, 0x_89, 0x_02, 0x_C7, 0x_C4, 0x_C9, 0x_26, 0x_9E,
		0x_18, 0x_7D, 0x_6A, 0x_83, 0x_E9, 0x_2F, 0x_86, 0x_13, 0x_ED, 0x_E6, 0x_8E, 0x_21, 0x_15, 0x_12, 0x_1F,
		0x_68, 0x_C0, 0x_FF, 0x_17, 0x_8D, 0x_DB, 0x_85, 0x_11, 0x_74, 0x_E7, 0x_49, 0x_3E, 0x_9D, 0x_24, 0x_8A,
		0x_B8, 0x_FB, 0x_38, 0x_E1, 0x_6D, 0x_5C, 0x_31, 0x_A3, 0x_2A, 0x_3B, 0x_9B, 0x_E8, 0x_40, 0x_94, 0x_A0,
		0x_50, 0x_5F, 0x_F8, 0x_88, 0x_51, 0x_48, 0x_E2, 0x_2E, 0x_D8, 0x_A4, 0x_91, 0x_41, 0x_5D, 0x_CB, 0x_23,
		0x_65, 0x_62, 0x_B4, 0x_14, 0x_34, 0x_92, 0x_42, 0x_4E, 0x_D7, 0x_28, 0x_30, 0x_03, 0x_76,
	];

	helper(S, BASE, -4_295);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_35_653_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_35_653_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46,
		0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_46, 0x_B0, 0x_B3,
		0x_30, 0x_DA, 0x_D0, 0x_86, 0x_92, 0x_F9, 0x_96, 0x_94, 0x_C5, 0x_86, 0x_25, 0x_5E, 0x_51, 0x_95, 0x_94,
		0x_F4, 0x_CC, 0x_54, 0x_FA, 0x_F5,
	];
	const BASE: &[u8] = &[
		0x_46, 0x_A0, 0x_A8, 0x_9F, 0x_6B, 0x_4A, 0x_1D, 0x_82, 0x_16, 0x_C5, 0x_BD, 0x_B1, 0x_54, 0x_01, 0x_F7,
		0x_ED, 0x_78, 0x_22, 0x_74, 0x_3F, 0x_0E, 0x_3E, 0x_C7, 0x_CA, 0x_12, 0x_77, 0x_91, 0x_FA, 0x_F4, 0x_7B,
		0x_88, 0x_C6, 0x_D1, 0x_EF, 0x_61, 0x_A2, 0x_6D, 0x_6A, 0x_8B, 0x_BE, 0x_EE, 0x_FB, 0x_A9, 0x_CD, 0x_19,
		0x_C3, 0x_02, 0x_7E, 0x_EA, 0x_DF, 0x_48, 0x_1F, 0x_DA, 0x_A5, 0x_49, 0x_33, 0x_57, 0x_66, 0x_AD, 0x_6E,
		0x_13, 0x_FF, 0x_EC, 0x_18, 0x_5F, 0x_40, 0x_BC, 0x_7A, 0x_23, 0x_B7, 0x_C8, 0x_FD, 0x_24, 0x_E3, 0x_5B,
		0x_29, 0x_7D, 0x_CC, 0x_4D, 0x_E9, 0x_C9, 0x_92, 0x_47, 0x_5E, 0x_94, 0x_CF, 0x_1B, 0x_7F, 0x_52, 0x_F5,
		0x_8A, 0x_65, 0x_6F, 0x_44, 0x_F9, 0x_AF, 0x_45, 0x_25, 0x_50, 0x_06, 0x_5C, 0x_C2, 0x_4F, 0x_3A, 0x_76,
		0x_2E, 0x_B2, 0x_BB, 0x_93, 0x_C0, 0x_15, 0x_08, 0x_35, 0x_17, 0x_34, 0x_21, 0x_53, 0x_D4, 0x_97, 0x_43,
		0x_E2, 0x_8C, 0x_85, 0x_CE, 0x_60, 0x_4B, 0x_9C, 0x_F2, 0x_11, 0x_0F, 0x_F0, 0x_4C, 0x_8D, 0x_56, 0x_BA,
		0x_59, 0x_A3, 0x_37, 0x_42, 0x_96, 0x_A7, 0x_B3, 0x_10, 0x_1A, 0x_2F, 0x_D0, 0x_E5, 0x_07, 0x_83, 0x_8F,
		0x_99, 0x_DE, 0x_D7, 0x_86, 0x_B4, 0x_73, 0x_81, 0x_87, 0x_3B, 0x_DC, 0x_A4, 0x_5D, 0x_64, 0x_F6, 0x_6C,
		0x_B9, 0x_E0, 0x_E4, 0x_F1, 0x_B8, 0x_51, 0x_90, 0x_79, 0x_9E, 0x_27, 0x_26, 0x_BF, 0x_E1, 0x_1C, 0x_AB,
		0x_2C, 0x_FE, 0x_70, 0x_AA, 0x_B0, 0x_2A, 0x_95, 0x_D5, 0x_55, 0x_28, 0x_B6, 0x_98, 0x_CB,
	];

	helper(S, BASE, -35_653);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_558_821_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_558_821_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37,
		0x_37, 0x_C1, 0x_37, 0x_24, 0x_E3, 0x_90, 0x_A0, 0x_21, 0x_32, 0x_86, 0x_2E, 0x_86, 0x_89, 0x_68, 0x_72,
		0x_C0, 0x_64, 0x_3E, 0x_3D, 0x_B3, 0x_C1, 0x_81, 0x_C0, 0x_51, 0x_1A, 0x_1D, 0x_95, 0x_1E, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_12, 0x_DF, 0x_6B, 0x_38, 0x_76, 0x_CF, 0x_04, 0x_7E, 0x_85, 0x_8B, 0x_A2, 0x_98, 0x_95, 0x_48,
		0x_C1, 0x_27, 0x_5A, 0x_D0, 0x_47, 0x_25, 0x_B5, 0x_4B, 0x_AF, 0x_15, 0x_1E, 0x_26, 0x_A3, 0x_3D, 0x_11,
		0x_5C, 0x_1B, 0x_8A, 0x_2C, 0x_EA, 0x_DB, 0x_F2, 0x_87, 0x_49, 0x_D2, 0x_79, 0x_9F, 0x_C2, 0x_9A, 0x_BE,
		0x_C7, 0x_8E, 0x_05, 0x_4A, 0x_B0, 0x_FC, 0x_41, 0x_C8, 0x_AD, 0x_61, 0x_E7, 0x_99, 0x_5D, 0x_A8, 0x_1A,
		0x_60, 0x_C9, 0x_A4, 0x_E9, 0x_8D, 0x_32, 0x_84, 0x_83, 0x_B1, 0x_89, 0x_9D, 0x_44, 0x_7F, 0x_75, 0x_F3,
		0x_5F, 0x_92, 0x_F5, 0x_30, 0x_F1, 0x_51, 0x_31, 0x_3A, 0x_7D, 0x_BA, 0x_90, 0x_24, 0x_C6, 0x_52, 0x_5E,
		0x_72, 0x_AA, 0x_18, 0x_6D, 0x_C3, 0x_03, 0x_BD, 0x_62, 0x_CD, 0x_C4, 0x_A6, 0x_B9, 0x_53, 0x_DC, 0x_FE,
		0x_EF, 0x_F8, 0x_A5, 0x_F0, 0x_E5, 0x_74, 0x_E1, 0x_6E, 0x_96, 0x_FF, 0x_45, 0x_10, 0x_4D, 0x_6F, 0x_91,
		0x_E6, 0x_67, 0x_21, 0x_17, 0x_4E, 0x_C0, 0x_22, 0x_80, 0x_59, 0x_1F, 0x_69, 0x_0E, 0x_FB, 0x_CE, 0x_D5,
		0x_B6, 0x_81, 0x_CC, 0x_D3, 0x_55, 0x_B3, 0x_2F, 0x_5B, 0x_08, 0x_70, 0x_86, 0x_3F, 0x_07, 0x_9B, 0x_BB,
		0x_B2, 0x_7A, 0x_58, 0x_36, 0x_33, 0x_BC, 0x_2A, 0x_F4, 0x_64, 0x_9C, 0x_8C, 0x_ED, 0x_3E, 0x_D6, 0x_06,
		0x_EC, 0x_DE, 0x_19, 0x_B8, 0x_E4, 0x_E2, 0x_68, 0x_B4, 0x_66, 0x_2E, 0x_01, 0x_3B, 0x_42, 0x_13, 0x_39,
		0x_CA, 0x_73, 0x_A0, 0x_1D, 0x_AB, 0x_40, 0x_EB, 0x_D1, 0x_57, 0x_AE, 0x_6A, 0x_78, 0x_FA,
	];

	helper(S, BASE, -558_821);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_7_331_471_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_7_331_471_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F, 0x_5F,
		0x_69, 0x_FA, 0x_67, 0x_C0, 0x_EC, 0x_66, 0x_FD, 0x_F8, 0x_13, 0x_1C, 0x_B2, 0x_9C, 0x_21, 0x_7B, 0x_68,
		0x_A5, 0x_AD, 0x_60, 0x_1F, 0x_C7, 0x_60, 0x_B0, 0x_C1, 0x_3D, 0x_4E, 0x_12, 0x_B7, 0x_CF, 0x_C3, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_5F, 0x_69, 0x_1F, 0x_FA, 0x_B5, 0x_66, 0x_A7, 0x_3F, 0x_FF, 0x_93, 0x_90, 0x_22, 0x_37, 0x_1B, 0x_AE,
		0x_C3, 0x_97, 0x_FB, 0x_65, 0x_54, 0x_7C, 0x_1C, 0x_96, 0x_A5, 0x_AA, 0x_4A, 0x_08, 0x_8C, 0x_5A, 0x_C4,
		0x_95, 0x_BB, 0x_68, 0x_A8, 0x_12, 0x_70, 0x_30, 0x_49, 0x_A4, 0x_94, 0x_C9, 0x_EA, 0x_32, 0x_C5, 0x_58,
		0x_25, 0x_6F, 0x_A1, 0x_E9, 0x_6E, 0x_F7, 0x_CD, 0x_BA, 0x_1A, 0x_92, 0x_60, 0x_5E, 0x_63, 0x_77, 0x_17,
		0x_EB, 0x_11, 0x_B7, 0x_91, 0x_06, 0x_9A, 0x_50, 0x_A6, 0x_0F, 0x_EE, 0x_C6, 0x_C2, 0x_1D, 0x_F2, 0x_A0,
		0x_18, 0x_A9, 0x_51, 0x_79, 0x_82, 0x_B3, 0x_01, 0x_C8, 0x_BE, 0x_E5, 0x_DD, 0x_45, 0x_BD, 0x_71, 0x_02,
		0x_85, 0x_81, 0x_2A, 0x_6C, 0x_BF, 0x_29, 0x_4F, 0x_E1, 0x_7E, 0x_16, 0x_AC, 0x_6B, 0x_D5, 0x_FD, 0x_AD,
		0x_3D, 0x_76, 0x_B2, 0x_4C, 0x_57, 0x_15, 0x_10, 0x_B4, 0x_DF, 0x_62, 0x_F5, 0x_4E, 0x_E7, 0x_52, 0x_BC,
		0x_44, 0x_2E, 0x_8B, 0x_55, 0x_9E, 0x_DB, 0x_34, 0x_75, 0x_7D, 0x_07, 0x_D1, 0x_80, 0x_27, 0x_8A, 0x_B0,
		0x_F9, 0x_9C, 0x_35, 0x_C7, 0x_F6, 0x_8F, 0x_64, 0x_3B, 0x_48, 0x_47, 0x_5C, 0x_03, 0x_C1, 0x_26, 0x_2F,
		0x_6A, 0x_46, 0x_31, 0x_05, 0x_53, 0x_98, 0x_CE, 0x_8D, 0x_67, 0x_04, 0x_CA, 0x_78, 0x_D2, 0x_A3, 0x_99,
		0x_13, 0x_38, 0x_23, 0x_28, 0x_3E, 0x_E3, 0x_0E, 0x_7A, 0x_C0, 0x_B6, 0x_F4, 0x_F8, 0x_3A, 0x_E4, 0x_43,
		0x_9B, 0x_AB, 0x_59, 0x_7B, 0x_D0, 0x_ED, 0x_6D, 0x_5B, 0x_21, 0x_D9, 0x_84, 0x_DA, 0x_CF,
	];

	helper(S, BASE, -7_331_471);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_83_086_439_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_83_086_439_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D, 0x_1D,
		0x_E0, 0x_57, 0x_75, 0x_BF, 0x_F8, 0x_B6, 0x_43, 0x_DC, 0x_60, 0x_E0, 0x_7E, 0x_23, 0x_68, 0x_4D, 0x_82,
		0x_6D, 0x_3D, 0x_B1, 0x_B6, 0x_C3, 0x_CC, 0x_68, 0x_AB, 0x_AB, 0x_78, 0x_3C, 0x_B8, 0x_E2, 0x_22, 0x_BB,
		0x_72, 0x_39, 0x_CC, 0x_5B, 0x_3B, 0x_D7, 0x_5C, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_1D, 0x_C1, 0x_69, 0x_A5, 0x_2F, 0x_7E, 0x_6A, 0x_85, 0x_30, 0x_14, 0x_19, 0x_E0, 0x_B4, 0x_D4, 0x_BC,
		0x_C4, 0x_E3, 0x_39, 0x_47, 0x_D2, 0x_52, 0x_D6, 0x_66, 0x_DA, 0x_86, 0x_07, 0x_ED, 0x_F0, 0x_6F, 0x_D8,
		0x_A6, 0x_42, 0x_AC, 0x_28, 0x_79, 0x_62, 0x_F9, 0x_94, 0x_AD, 0x_A1, 0x_1A, 0x_4A, 0x_8B, 0x_90, 0x_83,
		0x_68, 0x_3E, 0x_5F, 0x_B8, 0x_64, 0x_CA, 0x_CC, 0x_3C, 0x_12, 0x_6D, 0x_FD, 0x_54, 0x_15, 0x_B9, 0x_02,
		0x_78, 0x_FA, 0x_EA, 0x_72, 0x_81, 0x_B6, 0x_DE, 0x_D0, 0x_7D, 0x_98, 0x_8A, 0x_D3, 0x_3B, 0x_F2, 0x_34,
		0x_EB, 0x_6B, 0x_F4, 0x_E4, 0x_45, 0x_4B, 0x_A3, 0x_84, 0x_82, 0x_36, 0x_73, 0x_C2, 0x_4F, 0x_60, 0x_7C,
		0x_55, 0x_BE, 0x_35, 0x_8F, 0x_8D, 0x_23, 0x_99, 0x_80, 0x_2E, 0x_38, 0x_A4, 0x_DB, 0x_EF, 0x_DC, 0x_A2,
		0x_CD, 0x_C6, 0x_57, 0x_6E, 0x_75, 0x_59, 0x_AF, 0x_EC, 0x_5E, 0x_48, 0x_D7, 0x_21, 0x_D5, 0x_AA, 0x_22,
		0x_F6, 0x_E2, 0x_BB, 0x_08, 0x_29, 0x_1E, 0x_6C, 0x_18, 0x_5B, 0x_50, 0x_B5, 0x_C3, 0x_BF, 0x_4D, 0x_E8,
		0x_51, 0x_5C, 0x_9D, 0x_4E, 0x_97, 0x_B3, 0x_91, 0x_41, 0x_10, 0x_DD, 0x_43, 0x_BA, 0x_B0, 0x_25, 0x_7B,
		0x_BD, 0x_A8, 0x_8C, 0x_46, 0x_56, 0x_5D, 0x_F7, 0x_C5, 0x_96, 0x_1C, 0x_89, 0x_F3, 0x_71, 0x_44, 0x_9E,
		0x_95, 0x_C9, 0x_2C, 0x_5A, 0x_3D, 0x_63, 0x_9A, 0x_F1, 0x_FE, 0x_31, 0x_C0, 0x_A9, 0x_9F, 0x_CE, 0x_C8,
		0x_13, 0x_03, 0x_E6, 0x_E1, 0x_26, 0x_B1, 0x_24, 0x_AB, 0x_E9, 0x_1B, 0x_74, 0x_CF, 0x_2A,
	];

	helper(S, BASE, -83_086_439);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_253_727_957_in_base_193_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_253_727_957_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2E, 0x_2E, 0x_2E,
		0x_2E, 0x_2E, 0x_2E, 0x_2E, 0x_FA, 0x_97, 0x_B6, 0x_40, 0x_EC, 0x_40, 0x_BE, 0x_11, 0x_84, 0x_BE, 0x_5C,
		0x_97, 0x_75, 0x_B1, 0x_C1, 0x_F2, 0x_5C, 0x_34, 0x_17, 0x_66, 0x_B4, 0x_C1, 0x_D3, 0x_B4, 0x_71, 0x_87,
		0x_A8, 0x_F9, 0x_C3, 0x_4C, 0x_7C,
	];
	const BASE: &[u8] = &[
		0x_2E, 0x_A5, 0x_E9, 0x_F7, 0x_C3, 0x_63, 0x_AF, 0x_86, 0x_F0, 0x_7C, 0x_3F, 0x_68, 0x_95, 0x_CB, 0x_A9,
		0x_FD, 0x_6F, 0x_D2, 0x_4C, 0x_14, 0x_89, 0x_5D, 0x_C0, 0x_5B, 0x_AB, 0x_D9, 0x_72, 0x_C6, 0x_85, 0x_BE,
		0x_3D, 0x_F3, 0x_F9, 0x_90, 0x_35, 0x_FA, 0x_84, 0x_9F, 0x_17, 0x_C1, 0x_1C, 0x_49, 0x_1A, 0x_DE, 0x_74,
		0x_C5, 0x_B2, 0x_21, 0x_0E, 0x_7E, 0x_8B, 0x_B4, 0x_02, 0x_3A, 0x_F8, 0x_08, 0x_97, 0x_D1, 0x_4A, 0x_F4,
		0x_A1, 0x_ED, 0x_EA, 0x_94, 0x_0F, 0x_1F, 0x_EE, 0x_41, 0x_6C, 0x_DC, 0x_99, 0x_98, 0x_A0, 0x_44, 0x_04,
		0x_96, 0x_12, 0x_2A, 0x_54, 0x_83, 0x_34, 0x_CA, 0x_10, 0x_5F, 0x_B1, 0x_8D, 0x_36, 0x_78, 0x_6E, 0x_E4,
		0x_25, 0x_9D, 0x_A7, 0x_4F, 0x_11, 0x_26, 0x_4D, 0x_FC, 0x_A8, 0x_BA, 0x_05, 0x_73, 0x_FB, 0x_8E, 0x_E6,
		0x_77, 0x_C9, 0x_69, 0x_6B, 0x_B5, 0x_D3, 0x_2C, 0x_28, 0x_51, 0x_EB, 0x_B8, 0x_07, 0x_D0, 0x_18, 0x_7A,
		0x_24, 0x_40, 0x_D6, 0x_9E, 0x_67, 0x_E5, 0x_8F, 0x_B3, 0x_46, 0x_B6, 0x_27, 0x_5E, 0x_B9, 0x_87, 0x_E3,
		0x_2F, 0x_EF, 0x_65, 0x_BB, 0x_48, 0x_53, 0x_E2, 0x_79, 0x_92, 0x_BF, 0x_8A, 0x_1E, 0x_DA, 0x_CE, 0x_3B,
		0x_1B, 0x_E7, 0x_FE, 0x_43, 0x_16, 0x_A3, 0x_D8, 0x_22, 0x_D7, 0x_71, 0x_CF, 0x_37, 0x_29, 0x_AD, 0x_5C,
		0x_C4, 0x_59, 0x_5A, 0x_F2, 0x_E8, 0x_56, 0x_39, 0x_47, 0x_F5, 0x_70, 0x_9B, 0x_50, 0x_C8, 0x_55, 0x_DF,
		0x_06, 0x_52, 0x_66, 0x_4B, 0x_D4, 0x_60, 0x_31, 0x_3E, 0x_6A, 0x_A4, 0x_DB, 0x_75, 0x_15,
	];

	helper(S, BASE, -253_727_957);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_8_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_8_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_29, 0x_29, 0x_29,
		0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29,
		0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29, 0x_29,
		0x_29, 0x_29, 0x_29, 0x_29, 0x_C3, 0x_0B, 0x_3A,
	];
	const BASE: &[u8] = &[
		0x_29, 0x_E7, 0x_D7, 0x_47, 0x_E5, 0x_AB, 0x_18, 0x_E2, 0x_C3, 0x_22, 0x_EA, 0x_41, 0x_BC, 0x_F0, 0x_AE,
		0x_71, 0x_1E, 0x_5B, 0x_99, 0x_48, 0x_14, 0x_B7, 0x_A2, 0x_80, 0x_1B, 0x_CB, 0x_A8, 0x_63, 0x_9B, 0x_97,
		0x_F3, 0x_92, 0x_C0, 0x_F9, 0x_76, 0x_05, 0x_10, 0x_E8, 0x_AF, 0x_12, 0x_5F, 0x_F8, 0x_C5, 0x_56, 0x_2E,
		0x_94, 0x_A7, 0x_60, 0x_4C, 0x_68, 0x_98, 0x_A1, 0x_40, 0x_74, 0x_50, 0x_13, 0x_4B, 0x_FD, 0x_17, 0x_45,
		0x_0E, 0x_9A, 0x_C8, 0x_F7, 0x_3B, 0x_1D, 0x_07, 0x_FA, 0x_6A, 0x_32, 0x_E3, 0x_19, 0x_FC, 0x_4A, 0x_B3,
		0x_DD, 0x_64, 0x_66, 0x_81, 0x_69, 0x_52, 0x_6C, 0x_D0, 0x_CE, 0x_36, 0x_5A, 0x_16, 0x_4F, 0x_54, 0x_D8,
		0x_82, 0x_7E, 0x_C1, 0x_9F, 0x_7A, 0x_CC, 0x_0F, 0x_BA, 0x_E1, 0x_53, 0x_6E, 0x_72, 0x_DB, 0x_FF, 0x_7F,
		0x_7C, 0x_91, 0x_A3, 0x_3C, 0x_84, 0x_BD, 0x_58, 0x_78, 0x_02, 0x_8C, 0x_4D, 0x_62, 0x_87, 0x_28, 0x_46,
		0x_4E, 0x_7D, 0x_43, 0x_EB, 0x_DE, 0x_E0, 0x_B9, 0x_8D, 0x_6F, 0x_CF, 0x_55, 0x_26, 0x_8F, 0x_30, 0x_E9,
		0x_B1, 0x_E4, 0x_FE, 0x_C2, 0x_AD, 0x_9E, 0x_A0, 0x_73, 0x_51, 0x_2A, 0x_B8, 0x_5E, 0x_5C, 0x_1C, 0x_8B,
		0x_85, 0x_01, 0x_3E, 0x_AC, 0x_B0, 0x_79, 0x_BF, 0x_C7, 0x_DA, 0x_CD, 0x_39, 0x_B5, 0x_E6, 0x_33, 0x_49,
		0x_70, 0x_ED, 0x_EF, 0x_2C, 0x_8A, 0x_F2, 0x_75, 0x_C9, 0x_95, 0x_F6, 0x_8E, 0x_93, 0x_C4, 0x_61, 0x_6B,
		0x_31, 0x_D1, 0x_2F, 0x_BB, 0x_35, 0x_57, 0x_25, 0x_9C, 0x_03, 0x_90, 0x_5D, 0x_1F, 0x_21, 0x_27, 0x_67,
		0x_D9, 0x_08, 0x_65, 0x_89, 0x_96, 0x_11, 0x_15, 0x_EC, 0x_BE, 0x_D5, 0x_D6, 0x_F5, 0x_42, 0x_06, 0x_86,
		0x_B4, 0x_9D, 0x_88, 0x_EE, 0x_34, 0x_3A, 0x_DF, 0x_37, 0x_AA, 0x_04, 0x_C6, 0x_F4, 0x_7B, 0x_A6, 0x_77,
		0x_F1, 0x_B2, 0x_DC, 0x_CA, 0x_59, 0x_D3, 0x_23, 0x_3D, 0x_FB, 0x_A9, 0x_A4, 0x_D2, 0x_B6, 0x_24, 0x_38,
		0x_83, 0x_6D, 0x_A5, 0x_44, 0x_3F, 0x_1A, 0x_D4,
	];

	helper(S, BASE, -8);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_84_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_84_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_D6,
		0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6,
		0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_D6, 0x_8F, 0x_2D, 0x_32, 0x_B9, 0x_C9, 0x_21, 0x_46, 0x_34, 0x_0E,
		0x_0E, 0x_6D, 0x_89, 0x_23, 0x_CE, 0x_7A, 0x_4B, 0x_FD, 0x_B9, 0x_30, 0x_2E, 0x_8D, 0x_BB, 0x_F5, 0x_A1,
		0x_F2, 0x_DF, 0x_5B, 0x_7C, 0x_7C, 0x_5A, 0x_DA, 0x_D1, 0x_1D, 0x_5E,
	];
	const BASE: &[u8] = &[
		0x_D6, 0x_3B, 0x_66, 0x_ED, 0x_68, 0x_EE, 0x_49, 0x_75, 0x_91, 0x_08, 0x_E6, 0x_3F, 0x_B1, 0x_AD, 0x_C5,
		0x_B2, 0x_42, 0x_DE, 0x_60, 0x_64, 0x_53, 0x_4B, 0x_44, 0x_43, 0x_5C, 0x_92, 0x_7A, 0x_10, 0x_CB, 0x_18,
		0x_11, 0x_30, 0x_1F, 0x_17, 0x_93, 0x_C0, 0x_F6, 0x_A9, 0x_74, 0x_38, 0x_FC, 0x_1A, 0x_3A, 0x_4C, 0x_AA,
		0x_40, 0x_4A, 0x_02, 0x_F3, 0x_72, 0x_CD, 0x_83, 0x_29, 0x_2A, 0x_89, 0x_76, 0x_48, 0x_67, 0x_1D, 0x_D4,
		0x_80, 0x_AF, 0x_E3, 0x_05, 0x_86, 0x_C3, 0x_98, 0x_23, 0x_A7, 0x_21, 0x_FA, 0x_F8, 0x_46, 0x_A6, 0x_FD,
		0x_88, 0x_73, 0x_9C, 0x_3E, 0x_9E, 0x_24, 0x_03, 0x_C7, 0x_99, 0x_8F, 0x_9B, 0x_FF, 0x_C9, 0x_CA, 0x_BE,
		0x_FE, 0x_BB, 0x_5D, 0x_0F, 0x_B5, 0x_EF, 0x_1E, 0x_3D, 0x_07, 0x_35, 0x_EB, 0x_BA, 0x_45, 0x_15, 0x_EC,
		0x_F0, 0x_DF, 0x_61, 0x_C6, 0x_56, 0x_7E, 0x_C1, 0x_3C, 0x_50, 0x_A1, 0x_32, 0x_58, 0x_63, 0x_E0, 0x_D7,
		0x_70, 0x_36, 0x_95, 0x_84, 0x_85, 0x_F2, 0x_39, 0x_CC, 0x_AC, 0x_6F, 0x_97, 0x_A8, 0x_B4, 0x_A3, 0x_E7,
		0x_19, 0x_9A, 0x_B7, 0x_78, 0x_D0, 0x_E8, 0x_28, 0x_71, 0x_E2, 0x_59, 0x_04, 0x_A5, 0x_E4, 0x_D3, 0x_82,
		0x_7D, 0x_47, 0x_2E, 0x_96, 0x_13, 0x_81, 0x_F4, 0x_51, 0x_4D, 0x_E5, 0x_B0, 0x_12, 0x_5B, 0x_34, 0x_EA,
		0x_87, 0x_8E, 0x_B9, 0x_F5, 0x_7B, 0x_31, 0x_65, 0x_6D, 0x_B3, 0x_DB, 0x_C2, 0x_5E, 0x_BF, 0x_F1, 0x_8B,
		0x_6C, 0x_33, 0x_1B, 0x_5A, 0x_BD, 0x_22, 0x_7C, 0x_2F, 0x_DA, 0x_14, 0x_90, 0x_C8, 0x_57, 0x_E9, 0x_27,
		0x_2C, 0x_DD, 0x_D8, 0x_6B, 0x_8C, 0x_CE, 0x_D1, 0x_9D, 0x_62, 0x_52, 0x_94, 0x_AB, 0x_4E, 0x_DC, 0x_A4,
		0x_A0, 0x_D9, 0x_BC, 0x_4F, 0x_55, 0x_8A, 0x_6A, 0x_77, 0x_16, 0x_B8, 0x_69, 0x_6E, 0x_FB, 0x_26, 0x_F7,
		0x_AE, 0x_C4, 0x_79, 0x_41, 0x_F9, 0x_54, 0x_37, 0x_9F, 0x_B6, 0x_7F, 0x_25, 0x_01, 0x_CF, 0x_E1, 0x_D2,
		0x_0E, 0x_5F, 0x_06, 0x_D5, 0x_A2, 0x_8D, 0x_1C,
	];

	helper(S, BASE, -84);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_954_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_954_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_9F, 0x_7D, 0x_0A, 0x_FB, 0x_8C, 0x_31, 0x_59,
		0x_C0, 0x_12, 0x_25, 0x_D4, 0x_1C, 0x_53, 0x_A3, 0x_29, 0x_10, 0x_C4, 0x_95, 0x_3C, 0x_2E, 0x_5D, 0x_18,
		0x_07, 0x_67, 0x_86, 0x_E1, 0x_6D, 0x_2A, 0x_2A, 0x_89, 0x_A3, 0x_5E, 0x_83, 0x_CE, 0x_45, 0x_32, 0x_40,
		0x_7A, 0x_91, 0x_EC, 0x_F1, 0x_95, 0x_A9, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_EB, 0x_D4, 0x_9F, 0x_A0, 0x_92, 0x_81, 0x_D2, 0x_58, 0x_5B, 0x_D7, 0x_8A, 0x_B2, 0x_E4, 0x_41,
		0x_3E, 0x_9B, 0x_F5, 0x_B6, 0x_7A, 0x_F2, 0x_05, 0x_BF, 0x_F7, 0x_44, 0x_76, 0x_E7, 0x_23, 0x_71, 0x_88,
		0x_6D, 0x_EE, 0x_1F, 0x_E9, 0x_7C, 0x_84, 0x_25, 0x_2A, 0x_B3, 0x_39, 0x_27, 0x_C2, 0x_35, 0x_E8, 0x_72,
		0x_38, 0x_18, 0x_D0, 0x_4A, 0x_6A, 0x_6C, 0x_3C, 0x_A5, 0x_61, 0x_AF, 0x_04, 0x_45, 0x_77, 0x_01, 0x_EF,
		0x_3D, 0x_7B, 0x_A7, 0x_08, 0x_37, 0x_A2, 0x_2E, 0x_DD, 0x_A6, 0x_57, 0x_82, 0x_BD, 0x_93, 0x_80, 0x_F9,
		0x_03, 0x_F8, 0x_DB, 0x_60, 0x_29, 0x_F4, 0x_CD, 0x_47, 0x_46, 0x_67, 0x_19, 0x_49, 0x_5C, 0x_D9, 0x_64,
		0x_C3, 0x_07, 0x_BE, 0x_33, 0x_99, 0x_9C, 0x_C0, 0x_C6, 0x_FD, 0x_11, 0x_F1, 0x_B1, 0x_6F, 0x_EA, 0x_78,
		0x_B4, 0x_1E, 0x_0F, 0x_AD, 0x_1B, 0x_91, 0x_26, 0x_AC, 0x_21, 0x_17, 0x_54, 0x_8D, 0x_7E, 0x_34, 0x_4F,
		0x_DC, 0x_CE, 0x_A3, 0x_DA, 0x_8B, 0x_22, 0x_31, 0x_DF, 0x_B0, 0x_D1, 0x_F0, 0x_D5, 0x_6B, 0x_53, 0x_12,
		0x_66, 0x_BB, 0x_A8, 0x_9A, 0x_14, 0x_C4, 0x_15, 0x_CF, 0x_A4, 0x_3B, 0x_F6, 0x_CC, 0x_4D, 0x_90, 0x_C5,
		0x_10, 0x_E3, 0x_4B, 0x_9D, 0x_97, 0x_E2, 0x_48, 0x_8C, 0x_2C, 0x_6E, 0x_1A, 0x_36, 0x_DE, 0x_ED, 0x_A9,
		0x_8F, 0x_E6, 0x_E5, 0x_32, 0x_FF, 0x_85, 0x_E0, 0x_5D, 0x_62, 0x_CB, 0x_E1, 0x_5E, 0x_69, 0x_8E, 0x_AE,
		0x_63, 0x_3A, 0x_16, 0x_70, 0x_30, 0x_F3, 0x_B7, 0x_EC, 0x_96, 0x_C1, 0x_42, 0x_AA, 0x_FE, 0x_06, 0x_BA,
		0x_7F, 0x_13, 0x_50, 0x_B8, 0x_56, 0x_87, 0x_1C, 0x_C8, 0x_D6, 0x_2F, 0x_5F, 0x_86, 0x_59, 0x_83, 0x_52,
		0x_BC, 0x_79, 0x_FB, 0x_7D, 0x_28, 0x_9E, 0x_75, 0x_FC, 0x_68, 0x_D8, 0x_C9, 0x_24, 0x_A1, 0x_4E, 0x_0E,
		0x_1D, 0x_94, 0x_89, 0x_5A, 0x_74, 0x_CA, 0x_B5, 0x_D3, 0x_51, 0x_73, 0x_02, 0x_C7, 0x_43, 0x_40, 0x_3F,
		0x_65, 0x_95, 0x_B9, 0x_4C, 0x_AB, 0x_55, 0x_98,
	];

	helper(S, BASE, -954);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_5_889_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_5_889_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_1E, 0x_E0, 0x_AA, 0x_2B, 0x_42, 0x_B2, 0x_D9, 0x_C6, 0x_2A,
		0x_28, 0x_10, 0x_9C, 0x_DF, 0x_9A, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_1E, 0x_B2, 0x_96, 0x_44, 0x_AC, 0x_4A, 0x_B0, 0x_F3, 0x_BC, 0x_33, 0x_31, 0x_82, 0x_4C, 0x_F5, 0x_87,
		0x_95, 0x_69, 0x_9C, 0x_F0, 0x_E6, 0x_17, 0x_AE, 0x_E8, 0x_E0, 0x_7A, 0x_BD, 0x_E1, 0x_92, 0x_61, 0x_84,
		0x_FF, 0x_5D, 0x_74, 0x_E2, 0x_A8, 0x_10, 0x_C0, 0x_55, 0x_DD, 0x_9B, 0x_37, 0x_98, 0x_36, 0x_FA, 0x_19,
		0x_C3, 0x_D7, 0x_FC, 0x_06, 0x_8A, 0x_F9, 0x_78, 0x_BF, 0x_05, 0x_B1, 0x_1C, 0x_B3, 0x_CA, 0x_2A, 0x_39,
		0x_EB, 0x_D2, 0x_E3, 0x_3E, 0x_9E, 0x_5B, 0x_2E, 0x_3C, 0x_35, 0x_ED, 0x_E7, 0x_EE, 0x_50, 0x_1B, 0x_79,
		0x_15, 0x_81, 0x_D9, 0x_6B, 0x_CD, 0x_56, 0x_67, 0x_DA, 0x_01, 0x_64, 0x_DF, 0x_C9, 0x_A2, 0x_60, 0x_99,
		0x_5F, 0x_6F, 0x_A9, 0x_D8, 0x_A4, 0x_8E, 0x_40, 0x_86, 0x_89, 0x_5A, 0x_9A, 0x_CC, 0x_7C, 0x_D0, 0x_71,
		0x_B9, 0x_D1, 0x_C6, 0x_C1, 0x_5C, 0x_51, 0x_80, 0x_CE, 0x_47, 0x_F8, 0x_52, 0x_54, 0x_8D, 0x_04, 0x_13,
		0x_F7, 0x_AB, 0x_53, 0x_75, 0x_0F, 0x_11, 0x_97, 0x_C8, 0x_BE, 0x_25, 0x_3D, 0x_94, 0x_EC, 0x_77, 0x_F4,
		0x_9F, 0x_B8, 0x_C4, 0x_6E, 0x_0E, 0x_24, 0x_49, 0x_91, 0x_28, 0x_DC, 0x_7D, 0x_7F, 0x_93, 0x_27, 0x_4E,
		0x_3F, 0x_8F, 0x_34, 0x_DE, 0x_EF, 0x_7B, 0x_6C, 0x_72, 0x_4B, 0x_70, 0x_A3, 0x_3A, 0x_12, 0x_14, 0x_B5,
		0x_FD, 0x_22, 0x_FE, 0x_A5, 0x_AD, 0x_A0, 0x_D5, 0x_21, 0x_E9, 0x_B4, 0x_03, 0x_1A, 0x_38, 0x_73, 0x_D3,
		0x_83, 0x_59, 0x_A1, 0x_46, 0x_07, 0x_48, 0x_CF, 0x_F1, 0x_1F, 0x_45, 0x_18, 0x_BB, 0x_C7, 0x_30, 0x_4D,
		0x_A6, 0x_32, 0x_E5, 0x_57, 0x_DB, 0x_6D, 0x_66, 0x_6A, 0x_F6, 0x_A7, 0x_2C, 0x_43, 0x_3B, 0x_AA, 0x_23,
		0x_42, 0x_02, 0x_62, 0x_88, 0x_85, 0x_D6, 0x_16, 0x_08, 0x_B7, 0x_90, 0x_9D, 0x_C5, 0x_F2, 0x_68, 0x_2F,
		0x_8C, 0x_C2, 0x_63, 0x_FB, 0x_76, 0x_26, 0x_B6, 0x_BA, 0x_E4, 0x_65, 0x_AF, 0x_8B, 0x_D4, 0x_7E, 0x_29,
		0x_1D, 0x_CB, 0x_5E, 0x_4F, 0x_EA, 0x_58, 0x_41,
	];

	helper(S, BASE, -5_889);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_95_901_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_95_901_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA,
		0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_FA, 0x_6F,
		0x_68, 0x_CF, 0x_0B, 0x_99, 0x_75, 0x_BF, 0x_D1, 0x_A9, 0x_4C, 0x_DA, 0x_A6, 0x_BB, 0x_C4, 0x_58, 0x_42,
		0x_C1, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_FA, 0x_6F, 0x_61, 0x_CC, 0x_A3, 0x_C9, 0x_60, 0x_FB, 0x_59, 0x_C2, 0x_9B, 0x_73, 0x_86, 0x_EA, 0x_B1,
		0x_1D, 0x_43, 0x_22, 0x_08, 0x_E2, 0x_AA, 0x_9A, 0x_38, 0x_7E, 0x_30, 0x_0F, 0x_80, 0x_A0, 0x_2E, 0x_7B,
		0x_CD, 0x_F7, 0x_EB, 0x_C7, 0x_51, 0x_71, 0x_89, 0x_E3, 0x_19, 0x_C6, 0x_77, 0x_F8, 0x_3D, 0x_4F, 0x_D9,
		0x_95, 0x_3B, 0x_BB, 0x_BD, 0x_E8, 0x_B3, 0x_82, 0x_C5, 0x_D0, 0x_DD, 0x_07, 0x_C8, 0x_16, 0x_25, 0x_28,
		0x_5F, 0x_D2, 0x_AC, 0x_66, 0x_27, 0x_CF, 0x_F2, 0x_DE, 0x_F1, 0x_AF, 0x_85, 0x_55, 0x_63, 0x_9C, 0x_A7,
		0x_83, 0x_5D, 0x_88, 0x_E7, 0x_24, 0x_72, 0x_F4, 0x_98, 0x_65, 0x_29, 0x_BC, 0x_FE, 0x_39, 0x_1E, 0x_4B,
		0x_DB, 0x_48, 0x_06, 0x_33, 0x_D4, 0x_E9, 0x_7D, 0x_78, 0x_02, 0x_84, 0x_4D, 0x_10, 0x_A1, 0x_9F, 0x_34,
		0x_AD, 0x_64, 0x_3A, 0x_F5, 0x_36, 0x_37, 0x_B0, 0x_57, 0x_32, 0x_1A, 0x_A9, 0x_A4, 0x_D8, 0x_74, 0x_58,
		0x_70, 0x_47, 0x_6B, 0x_FD, 0x_8C, 0x_99, 0x_DA, 0x_81, 0x_E0, 0x_53, 0x_DF, 0x_CA, 0x_AE, 0x_50, 0x_EC,
		0x_42, 0x_D1, 0x_15, 0x_21, 0x_31, 0x_FC, 0x_68, 0x_9E, 0x_B4, 0x_BE, 0x_2F, 0x_CB, 0x_91, 0x_6E, 0x_05,
		0x_8B, 0x_40, 0x_A6, 0x_B5, 0x_97, 0x_B8, 0x_8F, 0x_4A, 0x_87, 0x_96, 0x_F9, 0x_45, 0x_BF, 0x_ED, 0x_0E,
		0x_7F, 0x_03, 0x_F6, 0x_13, 0x_3F, 0x_EF, 0x_C4, 0x_11, 0x_2A, 0x_A8, 0x_92, 0x_75, 0x_F3, 0x_35, 0x_49,
		0x_A2, 0x_C0, 0x_7A, 0x_C1, 0x_5C, 0x_AB, 0x_79, 0x_2C, 0x_F0, 0x_8E, 0x_26, 0x_01, 0x_D6, 0x_B6, 0x_5B,
		0x_FF, 0x_1C, 0x_C3, 0x_90, 0x_46, 0x_D7, 0x_56, 0x_93, 0x_94, 0x_17, 0x_E1, 0x_3C, 0x_B9, 0x_54, 0x_8D,
		0x_1B, 0x_14, 0x_D3, 0x_A5, 0x_18, 0x_9D, 0x_5A, 0x_41, 0x_B2, 0x_23, 0x_D5, 0x_E5, 0x_44, 0x_62, 0x_12,
		0x_E4, 0x_B7, 0x_CE, 0x_4E, 0x_EE, 0x_04, 0x_76, 0x_6A, 0x_69, 0x_4C, 0x_67, 0x_6D, 0x_E6, 0x_1F, 0x_8A,
		0x_7C, 0x_DC, 0x_3E, 0x_52, 0x_BA, 0x_6C, 0x_5E,
	];

	helper(S, BASE, -95_901);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_958_135_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_958_135_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA,
		0x_9E, 0x_22, 0x_6C, 0x_20, 0x_A5, 0x_E6, 0x_1A, 0x_28, 0x_E1, 0x_12, 0x_DD, 0x_6F, 0x_CC, 0x_B4, 0x_D7,
		0x_D2, 0x_C4, 0x_2A, 0x_F8, 0x_47, 0x_37, 0x_6F, 0x_A7, 0x_1A, 0x_4A, 0x_16, 0x_10, 0x_BC, 0x_7F, 0x_51,
		0x_FF, 0x_65, 0x_E2, 0x_EE, 0x_1A, 0x_21, 0x_E0, 0x_38, 0x_36,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_F9, 0x_8D, 0x_7B, 0x_F7, 0x_51, 0x_08, 0x_12, 0x_F3, 0x_CF, 0x_1F, 0x_70, 0x_F5, 0x_5A, 0x_A3,
		0x_9E, 0x_4F, 0x_44, 0x_5B, 0x_25, 0x_A4, 0x_E6, 0x_6C, 0x_4D, 0x_AD, 0x_A6, 0x_74, 0x_9D, 0x_49, 0x_41,
		0x_05, 0x_04, 0x_F2, 0x_52, 0x_AB, 0x_C9, 0x_FF, 0x_E0, 0x_B4, 0x_CA, 0x_FC, 0x_C6, 0x_CE, 0x_3A, 0x_39,
		0x_CC, 0x_D9, 0x_B1, 0x_07, 0x_1B, 0x_03, 0x_23, 0x_3C, 0x_27, 0x_21, 0x_60, 0x_EF, 0x_96, 0x_EC, 0x_47,
		0x_58, 0x_33, 0x_14, 0x_D0, 0x_46, 0x_E1, 0x_6A, 0x_FE, 0x_11, 0x_B5, 0x_C4, 0x_66, 0x_97, 0x_DF, 0x_61,
		0x_15, 0x_77, 0x_78, 0x_BB, 0x_24, 0x_9F, 0x_8F, 0x_5D, 0x_3D, 0x_E5, 0x_1A, 0x_0E, 0x_DC, 0x_D5, 0x_0F,
		0x_7A, 0x_6B, 0x_E9, 0x_AC, 0x_B3, 0x_F0, 0x_FD, 0x_64, 0x_6E, 0x_B8, 0x_CB, 0x_E4, 0x_E8, 0x_62, 0x_EB,
		0x_65, 0x_8C, 0x_2A, 0x_28, 0x_C5, 0x_1C, 0x_D3, 0x_01, 0x_42, 0x_D4, 0x_7C, 0x_FB, 0x_87, 0x_C3, 0x_A0,
		0x_D8, 0x_5F, 0x_8B, 0x_A5, 0x_13, 0x_A8, 0x_1D, 0x_D1, 0x_59, 0x_8A, 0x_A1, 0x_6F, 0x_8E, 0x_DD, 0x_B6,
		0x_89, 0x_43, 0x_94, 0x_95, 0x_32, 0x_4C, 0x_BF, 0x_76, 0x_80, 0x_B0, 0x_73, 0x_30, 0x_88, 0x_B2, 0x_7E,
		0x_E3, 0x_16, 0x_83, 0x_C8, 0x_98, 0x_34, 0x_35, 0x_EE, 0x_54, 0x_E7, 0x_CD, 0x_06, 0x_84, 0x_68, 0x_85,
		0x_9C, 0x_F4, 0x_56, 0x_4E, 0x_18, 0x_40, 0x_36, 0x_82, 0x_ED, 0x_22, 0x_9A, 0x_86, 0x_2E, 0x_37, 0x_57,
		0x_93, 0x_DA, 0x_5E, 0x_10, 0x_C7, 0x_3E, 0x_F6, 0x_FA, 0x_F8, 0x_81, 0x_AE, 0x_38, 0x_2F, 0x_A7, 0x_72,
		0x_C1, 0x_D2, 0x_3F, 0x_A2, 0x_91, 0x_1E, 0x_EA, 0x_D7, 0x_90, 0x_50, 0x_26, 0x_02, 0x_92, 0x_F1, 0x_6D,
		0x_79, 0x_45, 0x_4B, 0x_29, 0x_9B, 0x_69, 0x_DB, 0x_C0, 0x_2C, 0x_B7, 0x_BA, 0x_B9, 0x_BC, 0x_C2, 0x_AF,
		0x_D6, 0x_75, 0x_55, 0x_31, 0x_3B, 0x_DE, 0x_BD, 0x_48, 0x_19, 0x_BE, 0x_67, 0x_E2, 0x_99, 0x_63, 0x_71,
		0x_53, 0x_5C, 0x_4A, 0x_7F, 0x_17, 0x_A9, 0x_7D,
	];

	helper(S, BASE, -958_135);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_8_248_010_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_8_248_010_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1,
		0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1,
		0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_E1, 0x_58, 0x_3A, 0x_10, 0x_0C, 0x_BF, 0x_04, 0x_D1, 0x_85, 0x_85,
		0x_DC, 0x_FD, 0x_91, 0x_4E, 0x_F6, 0x_C8, 0x_9F, 0x_64,
	];
	const BASE: &[u8] = &[
		0x_E1, 0x_1C, 0x_23, 0x_8F, 0x_CF, 0x_96, 0x_CC, 0x_E0, 0x_AD, 0x_D3, 0x_9B, 0x_25, 0x_C0, 0x_68, 0x_4B,
		0x_36, 0x_6A, 0x_7F, 0x_48, 0x_32, 0x_E6, 0x_D2, 0x_45, 0x_E9, 0x_CA, 0x_FA, 0x_78, 0x_22, 0x_02, 0x_BC,
		0x_01, 0x_FB, 0x_81, 0x_0E, 0x_C8, 0x_A0, 0x_DB, 0x_11, 0x_18, 0x_55, 0x_2F, 0x_60, 0x_FE, 0x_14, 0x_31,
		0x_F2, 0x_65, 0x_3A, 0x_94, 0x_12, 0x_1B, 0x_83, 0x_39, 0x_92, 0x_9D, 0x_D4, 0x_63, 0x_B3, 0x_BF, 0x_6B,
		0x_E8, 0x_9E, 0x_8B, 0x_7D, 0x_8D, 0x_AB, 0x_15, 0x_08, 0x_82, 0x_A5, 0x_06, 0x_D6, 0x_5C, 0x_EB, 0x_CD,
		0x_1F, 0x_29, 0x_33, 0x_40, 0x_EE, 0x_43, 0x_8A, 0x_98, 0x_F3, 0x_69, 0x_1A, 0x_C4, 0x_59, 0x_DD, 0x_26,
		0x_64, 0x_30, 0x_C7, 0x_BE, 0x_77, 0x_91, 0x_27, 0x_B5, 0x_E7, 0x_61, 0x_F4, 0x_5D, 0x_4A, 0x_6D, 0x_0F,
		0x_A4, 0x_35, 0x_62, 0x_A9, 0x_89, 0x_FD, 0x_76, 0x_4C, 0x_24, 0x_79, 0x_D5, 0x_DC, 0x_3F, 0x_2C, 0x_FF,
		0x_A8, 0x_28, 0x_D0, 0x_86, 0x_51, 0x_C6, 0x_AE, 0x_19, 0x_F7, 0x_CB, 0x_53, 0x_44, 0x_66, 0x_5B, 0x_7B,
		0x_58, 0x_F0, 0x_BB, 0x_3C, 0x_49, 0x_C3, 0x_72, 0x_46, 0x_05, 0x_B8, 0x_F9, 0x_F1, 0x_4F, 0x_17, 0x_4D,
		0x_16, 0x_03, 0x_21, 0x_B2, 0x_6E, 0x_2E, 0x_5F, 0x_52, 0x_07, 0x_B0, 0x_D1, 0x_AC, 0x_1E, 0x_DE, 0x_57,
		0x_9A, 0x_5E, 0x_34, 0x_CE, 0x_74, 0x_DA, 0x_A3, 0x_04, 0x_9C, 0x_C9, 0x_D9, 0x_C5, 0x_3B, 0x_6C, 0x_8C,
		0x_37, 0x_2A, 0x_7C, 0x_84, 0x_D7, 0x_50, 0x_10, 0x_67, 0x_F8, 0x_99, 0x_F5, 0x_38, 0x_90, 0x_7E, 0x_A6,
		0x_41, 0x_AA, 0x_3D, 0x_E4, 0x_B9, 0x_71, 0x_BA, 0x_6F, 0x_AF, 0x_E2, 0x_FC, 0x_C2, 0x_8E, 0x_DF, 0x_93,
		0x_EA, 0x_88, 0x_C1, 0x_EC, 0x_B1, 0x_5A, 0x_47, 0x_9F, 0x_95, 0x_EF, 0x_56, 0x_ED, 0x_87, 0x_75, 0x_7A,
		0x_A1, 0x_54, 0x_85, 0x_80, 0x_B6, 0x_B4, 0x_F6, 0x_3E, 0x_A2, 0x_70, 0x_E3, 0x_E5, 0x_4E, 0x_B7, 0x_D8,
		0x_42, 0x_97, 0x_1D, 0x_BD, 0x_A7, 0x_73, 0x_13,
	];

	helper(S, BASE, -8_248_010);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_13_483_194_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_13_483_194_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF,
		0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_28, 0x_DF, 0x_F8, 0x_0D, 0x_FA, 0x_B0,
		0x_51, 0x_97, 0x_D7, 0x_8A, 0x_32, 0x_3C, 0x_3D, 0x_17, 0x_81, 0x_65, 0x_83, 0x_32, 0x_2F, 0x_C6, 0x_84,
		0x_13, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_15, 0x_3A, 0x_33, 0x_BB, 0x_22, 0x_E1, 0x_06, 0x_EA, 0x_14, 0x_55, 0x_1C, 0x_DD, 0x_1E, 0x_73,
		0x_E0, 0x_B0, 0x_5B, 0x_DE, 0x_F4, 0x_2A, 0x_54, 0x_BF, 0x_DC, 0x_32, 0x_A5, 0x_E9, 0x_B4, 0x_8F, 0x_7D,
		0x_83, 0x_01, 0x_CD, 0x_D8, 0x_5A, 0x_40, 0x_E2, 0x_EE, 0x_4F, 0x_67, 0x_4B, 0x_BC, 0x_8A, 0x_A7, 0x_69,
		0x_D9, 0x_56, 0x_80, 0x_5E, 0x_57, 0x_A9, 0x_9F, 0x_4D, 0x_0F, 0x_45, 0x_4E, 0x_31, 0x_34, 0x_D7, 0x_62,
		0x_44, 0x_CB, 0x_77, 0x_B9, 0x_03, 0x_25, 0x_1D, 0x_F7, 0x_64, 0x_12, 0x_D4, 0x_88, 0x_35, 0x_A2, 0x_82,
		0x_CE, 0x_96, 0x_07, 0x_79, 0x_89, 0x_48, 0x_37, 0x_8B, 0x_6C, 0x_95, 0x_DA, 0x_02, 0x_9D, 0x_C4, 0x_AB,
		0x_C5, 0x_C7, 0x_CA, 0x_A0, 0x_3B, 0x_42, 0x_24, 0x_FA, 0x_E3, 0x_E7, 0x_F5, 0x_1B, 0x_A6, 0x_EB, 0x_B8,
		0x_BE, 0x_74, 0x_3E, 0x_97, 0x_B7, 0x_17, 0x_F1, 0x_0E, 0x_C1, 0x_59, 0x_65, 0x_63, 0x_E4, 0x_C0, 0x_87,
		0x_90, 0x_EC, 0x_6E, 0x_98, 0x_EF, 0x_81, 0x_16, 0x_ED, 0x_8D, 0x_92, 0x_91, 0x_B2, 0x_FD, 0x_F2, 0x_6D,
		0x_E8, 0x_9E, 0x_58, 0x_61, 0x_AC, 0x_05, 0x_D1, 0x_F9, 0x_BD, 0x_D2, 0x_50, 0x_D0, 0x_C8, 0x_85, 0x_5C,
		0x_E5, 0x_CC, 0x_C6, 0x_C3, 0x_7E, 0x_30, 0x_BA, 0x_52, 0x_72, 0x_5D, 0x_2C, 0x_94, 0x_51, 0x_3F, 0x_47,
		0x_2F, 0x_04, 0x_7A, 0x_76, 0x_DB, 0x_1A, 0x_F3, 0x_7C, 0x_93, 0x_10, 0x_6A, 0x_B3, 0x_71, 0x_AE, 0x_E6,
		0x_29, 0x_2E, 0x_13, 0x_AA, 0x_9C, 0x_8C, 0x_19, 0x_D5, 0x_23, 0x_26, 0x_7F, 0x_68, 0x_4C, 0x_C9, 0x_1F,
		0x_F0, 0x_3C, 0x_78, 0x_49, 0x_8E, 0x_43, 0x_99, 0x_9A, 0x_86, 0x_FF, 0x_F8, 0x_46, 0x_27, 0x_6B, 0x_F6,
		0x_FE, 0x_4A, 0x_75, 0x_38, 0x_B6, 0x_FC, 0x_36, 0x_A4, 0x_08, 0x_66, 0x_84, 0x_28, 0x_D6, 0x_D3, 0x_60,
		0x_A1, 0x_B1, 0x_6F, 0x_AF, 0x_39, 0x_FB, 0x_41, 0x_A8, 0x_A3, 0x_11, 0x_70, 0x_18, 0x_9B, 0x_AD, 0x_CF,
		0x_3D, 0x_53, 0x_7B, 0x_5F, 0x_B5, 0x_21, 0x_C2,
	];

	helper(S, BASE, -13_483_194);
}
// endregion
// region: s_has_signs_and_zeros_and_minus_943_252_207_in_base_247_and_insignificant_bytes
#[test]
fn s_has_signs_and_zeros_and_minus_943_252_207_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55, 0x_55,
		0x_55, 0x_55, 0x_A5, 0x_BF, 0x_A8, 0x_26, 0x_20, 0x_AB, 0x_13, 0x_FB, 0x_87, 0x_E9, 0x_FA, 0x_58, 0x_E9,
		0x_4F, 0x_5D, 0x_AC, 0x_1C, 0x_CB, 0x_07,
	];
	const BASE: &[u8] = &[
		0x_55, 0x_49, 0x_4F, 0x_70, 0x_F3, 0x_AB, 0x_E0, 0x_99, 0x_D4, 0x_28, 0x_3A, 0x_C2, 0x_17, 0x_4A, 0x_56,
		0x_B5, 0x_65, 0x_62, 0x_04, 0x_DE, 0x_79, 0x_43, 0x_CC, 0x_A9, 0x_F4, 0x_3C, 0x_96, 0x_88, 0x_0F, 0x_3E,
		0x_D2, 0x_11, 0x_B3, 0x_D8, 0x_9D, 0x_2C, 0x_98, 0x_DF, 0x_DD, 0x_18, 0x_46, 0x_BC, 0x_AC, 0x_BB, 0x_1C,
		0x_C5, 0x_1D, 0x_02, 0x_39, 0x_48, 0x_A3, 0x_01, 0x_23, 0x_31, 0x_8B, 0x_B6, 0x_91, 0x_B0, 0x_2A, 0x_3B,
		0x_07, 0x_13, 0x_A5, 0x_A6, 0x_FE, 0x_2E, 0x_DB, 0x_33, 0x_90, 0x_6F, 0x_F1, 0x_53, 0x_47, 0x_1A, 0x_58,
		0x_D5, 0x_5E, 0x_BA, 0x_C9, 0x_81, 0x_F8, 0x_6E, 0x_12, 0x_67, 0x_7F, 0x_EA, 0x_EF, 0x_D3, 0x_63, 0x_CA,
		0x_AD, 0x_05, 0x_6D, 0x_4E, 0x_89, 0x_C0, 0x_9A, 0x_8E, 0x_71, 0x_A4, 0x_10, 0x_7B, 0x_9C, 0x_E9, 0x_1B,
		0x_0E, 0x_E2, 0x_C6, 0x_A7, 0x_21, 0x_8C, 0x_95, 0x_52, 0x_ED, 0x_92, 0x_D7, 0x_74, 0x_45, 0x_BE, 0x_61,
		0x_14, 0x_C3, 0x_27, 0x_FC, 0x_DC, 0x_9B, 0x_6A, 0x_38, 0x_41, 0x_51, 0x_83, 0x_EB, 0x_6B, 0x_84, 0x_FF,
		0x_76, 0x_DA, 0x_E5, 0x_57, 0x_B9, 0x_75, 0x_D0, 0x_42, 0x_30, 0x_E1, 0x_15, 0x_BF, 0x_A1, 0x_85, 0x_AA,
		0x_FA, 0x_4B, 0x_AE, 0x_F2, 0x_82, 0x_F6, 0x_19, 0x_69, 0x_9F, 0x_80, 0x_87, 0x_73, 0x_C4, 0x_C1, 0x_66,
		0x_36, 0x_25, 0x_AF, 0x_2F, 0x_A2, 0x_7A, 0x_86, 0x_CD, 0x_1F, 0x_FB, 0x_BD, 0x_94, 0x_44, 0x_CB, 0x_B8,
		0x_1E, 0x_F0, 0x_7D, 0x_CF, 0x_8A, 0x_D9, 0x_64, 0x_54, 0x_CE, 0x_03, 0x_C8, 0x_EC, 0x_F9, 0x_D1, 0x_5D,
		0x_4C, 0x_EE, 0x_35, 0x_8D, 0x_A0, 0x_B7, 0x_59, 0x_5C, 0x_3D, 0x_C7, 0x_24, 0x_16, 0x_FD, 0x_5B, 0x_26,
		0x_40, 0x_77, 0x_6C, 0x_7E, 0x_A8, 0x_7C, 0x_60, 0x_34, 0x_37, 0x_97, 0x_8F, 0x_D6, 0x_E8, 0x_22, 0x_06,
		0x_E3, 0x_50, 0x_32, 0x_B1, 0x_93, 0x_4D, 0x_B2, 0x_72, 0x_F5, 0x_E7, 0x_E6, 0x_5A, 0x_29, 0x_08, 0x_B4,
		0x_3F, 0x_F7, 0x_68, 0x_78, 0x_5F, 0x_E4, 0x_9E,
	];

	helper(S, BASE, -943_252_207);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0B, 0x_09, 0x_20, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2,
		0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_90, 0x_C2, 0x_33, 0x_90, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_90, 0x_90,
		0x_90, 0x_C2, 0x_90, 0x_90, 0x_90, 0x_90, 0x_C2, 0x_C2, 0x_90, 0x_90, 0x_C2, 0x_C2, 0x_C2, 0x_C2, 0x_C2,
		0x_90, 0x_C2,
	];
	const BASE: &[u8] = &[
		0x_C2, 0x_90,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_34_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_34_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_20,
		0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0B,
		0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25,
		0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_25, 0x_75, 0x_25, 0x_25, 0x_25, 0x_75, 0x_25,
		0x_10, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_25, 0x_75, 0x_75, 0x_25, 0x_75, 0x_25, 0x_75,
		0x_25, 0x_75, 0x_25, 0x_75, 0x_75, 0x_25, 0x_25, 0x_25, 0x_25, 0x_75, 0x_25, 0x_25,
	];
	const BASE: &[u8] = &[
		0x_25, 0x_75,
	];

	helper(S, BASE, -34);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_297_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_297_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_20,
		0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_0D, 0x_0B,
		0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16,
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16,
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_6A, 0x_16, 0x_16,
		0x_6A, 0x_16, 0x_6A, 0x_16, 0x_16, 0x_6A, 0x_F2, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_16, 0x_6A, 0x_16,
		0x_16, 0x_16, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_6A, 0x_16, 0x_16, 0x_6A, 0x_6A, 0x_16, 0x_6A,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_6A,
	];

	helper(S, BASE, -297);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_7_251_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_7_251_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_20, 0x_0B,
		0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_0B,
		0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33,
		0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_49, 0x_49, 0x_49, 0x_33, 0x_33, 0x_33, 0x_49, 0x_33, 0x_49,
		0x_33, 0x_33, 0x_49, 0x_49, 0x_BF, 0x_33, 0x_49, 0x_49, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_33, 0x_49,
		0x_33, 0x_33, 0x_49, 0x_33, 0x_33, 0x_33, 0x_49,
	];
	const BASE: &[u8] = &[
		0x_33, 0x_49,
	];

	helper(S, BASE, -7_251);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_28_476_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_28_476_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0A,
		0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_0D, 0x_09, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_7B, 0x_7B, 0x_7B,
		0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B,
		0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B,
		0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_D4, 0x_D4, 0x_7B, 0x_D4, 0x_D4, 0x_D4,
		0x_D4, 0x_7B, 0x_7B, 0x_D4, 0x_D4, 0x_D4, 0x_D4, 0x_7B, 0x_7B, 0x_3B, 0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_D4,
		0x_7B, 0x_7B, 0x_7B, 0x_7B, 0x_D4, 0x_D4, 0x_D4, 0x_D4,
	];
	const BASE: &[u8] = &[
		0x_7B, 0x_D4,
	];

	helper(S, BASE, -28_476);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_490_785_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_490_785_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0C,
		0x_09, 0x_0B, 0x_0A, 0x_0B, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_20, 0x_09, 0x_0D,
		0x_0D, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_20, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB,
		0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_AB, 0x_05, 0x_05, 0x_05,
		0x_AB, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_AB, 0x_05, 0x_AB, 0x_AB, 0x_05, 0x_AB, 0x_AB, 0x_AB, 0x_AB,
		0x_05, 0x_D0, 0x_05, 0x_AB, 0x_05, 0x_05, 0x_05, 0x_AB, 0x_AB, 0x_05, 0x_AB, 0x_AB, 0x_05, 0x_AB, 0x_AB,
		0x_05, 0x_AB, 0x_AB, 0x_05, 0x_AB, 0x_05, 0x_05, 0x_05, 0x_05, 0x_05, 0x_AB, 0x_AB, 0x_AB, 0x_05, 0x_AB,
		0x_AB, 0x_05, 0x_05, 0x_05, 0x_AB, 0x_05, 0x_05, 0x_AB, 0x_05, 0x_AB, 0x_AB, 0x_05, 0x_05, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_AB, 0x_05,
	];

	helper(S, BASE, -490_785);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_7_920_853_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_7_920_853_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62, 0x_62,
		0x_62, 0x_62, 0x_62, 0x_62, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_62, 0x_62, 0x_62, 0x_3B, 0x_3B, 0x_62, 0x_3B,
		0x_3B, 0x_3B, 0x_62, 0x_62, 0x_3B, 0x_3B, 0x_62, 0x_3B, 0x_62, 0x_3B, 0x_62, 0x_3B, 0x_E4, 0x_3B, 0x_62,
		0x_3B, 0x_3B, 0x_62, 0x_62, 0x_3B, 0x_3B, 0x_62, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_3B, 0x_62, 0x_3B, 0x_3B,
		0x_62, 0x_62, 0x_3B, 0x_3B, 0x_3B,
	];
	const BASE: &[u8] = &[
		0x_62, 0x_3B,
	];

	helper(S, BASE, -7_920_853);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_87_166_349_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_87_166_349_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0D, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB,
		0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_E1, 0x_DB, 0x_E1, 0x_DB,
		0x_DB, 0x_E1, 0x_E1, 0x_DB, 0x_DB, 0x_E1, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_DB, 0x_E1, 0x_E1, 0x_DB, 0x_E1,
		0x_E1, 0x_DB, 0x_DB, 0x_DB, 0x_E1, 0x_E1, 0x_DB, 0x_E1, 0x_19, 0x_DB, 0x_DB, 0x_E1, 0x_E1, 0x_E1, 0x_DB,
		0x_DB, 0x_DB, 0x_E1, 0x_DB, 0x_DB, 0x_DB, 0x_E1, 0x_DB, 0x_DB, 0x_DB, 0x_E1, 0x_DB, 0x_DB, 0x_E1, 0x_DB,
		0x_DB, 0x_E1, 0x_E1, 0x_DB, 0x_DB, 0x_E1, 0x_E1, 0x_DB, 0x_DB, 0x_E1, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_DB, 0x_E1,
	];

	helper(S, BASE, -87_166_349);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_557_798_930_in_base_2_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_557_798_930_in_base_2_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_20, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_0C,
		0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_20,
		0x_0B, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_94, 0x_B5, 0x_B5, 0x_B5, 0x_B5, 0x_94, 0x_B5, 0x_B5, 0x_94, 0x_94,
		0x_94, 0x_94, 0x_94, 0x_94, 0x_B5, 0x_94, 0x_B5, 0x_94, 0x_B5, 0x_94, 0x_94, 0x_B5, 0x_B5, 0x_B5, 0x_B5,
		0x_94, 0x_B5, 0x_B5, 0x_94, 0x_B5, 0x_67, 0x_B5, 0x_B5, 0x_94, 0x_94, 0x_B5, 0x_94, 0x_B5, 0x_94, 0x_B5,
		0x_94, 0x_B5, 0x_94, 0x_94, 0x_94, 0x_94, 0x_B5, 0x_B5, 0x_94, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_B5, 0x_94,
	];

	helper(S, BASE, -557_798_930);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_3_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_3_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_0A,
		0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_20,
		0x_20, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81,
		0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_8B, 0x_81, 0x_B4, 0x_8B, 0x_81, 0x_8B, 0x_3C,
		0x_8B, 0x_8B, 0x_81, 0x_8B, 0x_8B, 0x_81, 0x_8B, 0x_3C, 0x_3C, 0x_8B, 0x_3C, 0x_81, 0x_8B, 0x_8B, 0x_81,
		0x_3C, 0x_81, 0x_3C, 0x_3C, 0x_3C, 0x_81, 0x_3C, 0x_3C, 0x_81, 0x_8B, 0x_3C, 0x_3C, 0x_8B, 0x_8B,
	];
	const BASE: &[u8] = &[
		0x_81, 0x_8B, 0x_3C,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_51_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_51_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_09,
		0x_0C, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_09, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_57, 0x_3C, 0x_31, 0x_31, 0x_57, 0x_D9, 0x_31,
		0x_3C, 0x_3C,
	];
	const BASE: &[u8] = &[
		0x_57, 0x_3C, 0x_31,
	];

	helper(S, BASE, -51);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_513_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_513_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_09,
		0x_20, 0x_09, 0x_0B, 0x_09, 0x_09, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_08, 0x_08, 0x_54, 0x_08, 0x_DC, 0x_08, 0x_08, 0x_08, 0x_AD,
		0x_08, 0x_DC, 0x_08, 0x_08, 0x_DC, 0x_DC, 0x_54, 0x_54, 0x_54,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_DC, 0x_54,
	];

	helper(S, BASE, -513);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_1_552_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_1_552_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_20, 0x_09, 0x_0A,
		0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0A, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_0C,
		0x_0B, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_08,
		0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_08, 0x_F1, 0x_08, 0x_DB, 0x_08, 0x_DB,
		0x_DB, 0x_DB, 0x_CE, 0x_F1, 0x_F1, 0x_DB, 0x_DB, 0x_08, 0x_08, 0x_F1, 0x_08, 0x_F1, 0x_DB, 0x_DB, 0x_F1,
		0x_F1, 0x_08, 0x_F1, 0x_F1, 0x_08, 0x_DB, 0x_F1, 0x_DB, 0x_08, 0x_F1, 0x_DB, 0x_DB, 0x_DB, 0x_F1, 0x_F1,
		0x_DB, 0x_DB, 0x_DB, 0x_08, 0x_08, 0x_DB, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_08, 0x_DB, 0x_F1,
	];

	helper(S, BASE, -1_552);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_64_448_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_64_448_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0B, 0x_09,
		0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_46, 0x_3F, 0x_3F, 0x_92, 0x_46, 0x_46, 0x_3F, 0x_46, 0x_92, 0x_92, 0x_92, 0x_4B, 0x_92,
		0x_46, 0x_46, 0x_3F, 0x_46, 0x_92, 0x_3F, 0x_92, 0x_46, 0x_46, 0x_92, 0x_46, 0x_92, 0x_3F, 0x_46, 0x_92,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_46, 0x_92,
	];

	helper(S, BASE, -64_448);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_882_548_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_882_548_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0A, 0x_20, 0x_09, 0x_20,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8,
		0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_A8, 0x_94,
		0x_94, 0x_F5, 0x_F5, 0x_F5, 0x_94, 0x_94, 0x_94, 0x_F5, 0x_94, 0x_F5, 0x_F5, 0x_F5, 0x_AB, 0x_94, 0x_A8,
		0x_94, 0x_A8, 0x_F5, 0x_94, 0x_F5, 0x_94, 0x_94, 0x_F5, 0x_94, 0x_A8, 0x_F5, 0x_94, 0x_F5, 0x_A8, 0x_A8,
		0x_F5, 0x_F5, 0x_94, 0x_F5, 0x_F5, 0x_94, 0x_F5, 0x_A8, 0x_A8, 0x_A8, 0x_94, 0x_94, 0x_A8, 0x_94,
	];
	const BASE: &[u8] = &[
		0x_A8, 0x_94, 0x_F5,
	];

	helper(S, BASE, -882_548);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_457_719_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_457_719_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_0C, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0A,
		0x_0C, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_09,
		0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_09, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_B5, 0x_07, 0x_07, 0x_07, 0x_B5, 0x_1A, 0x_B5, 0x_B5, 0x_B5,
		0x_B5, 0x_B5, 0x_07, 0x_07, 0x_07, 0x_1A, 0x_0F, 0x_B5, 0x_1A, 0x_B5, 0x_B5, 0x_1A, 0x_B5, 0x_07, 0x_1A,
		0x_1A, 0x_B5, 0x_B5, 0x_07, 0x_07, 0x_07, 0x_1A, 0x_B5, 0x_1A, 0x_1A, 0x_B5, 0x_B5, 0x_1A, 0x_B5, 0x_1A,
		0x_B5, 0x_07, 0x_1A, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_B5, 0x_07,
	];

	helper(S, BASE, -9_457_719);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_72_775_397_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_72_775_397_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0D,
		0x_09, 0x_0B, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C, 0x_5C,
		0x_5C, 0x_5C, 0x_5C, 0x_48, 0x_82, 0x_5C, 0x_5C, 0x_48, 0x_82, 0x_82, 0x_48, 0x_48, 0x_5C, 0x_48, 0x_5C,
		0x_5C, 0x_82, 0x_5C, 0x_5C, 0x_82, 0x_B0, 0x_48, 0x_48, 0x_5C, 0x_48, 0x_82, 0x_48, 0x_5C, 0x_48, 0x_5C,
		0x_48, 0x_5C, 0x_5C, 0x_82, 0x_82, 0x_48, 0x_5C, 0x_5C, 0x_82, 0x_82, 0x_48, 0x_82, 0x_48, 0x_82, 0x_82,
		0x_48, 0x_5C, 0x_5C, 0x_82, 0x_5C, 0x_82, 0x_5C, 0x_5C, 0x_5C, 0x_48, 0x_82, 0x_5C, 0x_82, 0x_5C, 0x_82,
		0x_5C, 0x_82, 0x_5C,
	];
	const BASE: &[u8] = &[
		0x_5C, 0x_48, 0x_82,
	];

	helper(S, BASE, -72_775_397);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_541_577_152_in_base_3_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_541_577_152_in_base_3_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0A, 0x_0D,
		0x_09, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0C, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_E5, 0x_3D, 0x_3D, 0x_E5, 0x_3D, 0x_5B,
		0x_E5, 0x_5B, 0x_E5, 0x_E5, 0x_3D, 0x_5B, 0x_5B, 0x_5B, 0x_E5, 0x_3D, 0x_5B, 0x_E5, 0x_E5, 0x_3D, 0x_05,
		0x_E5, 0x_5B, 0x_5B, 0x_3D, 0x_5B,
	];
	const BASE: &[u8] = &[
		0x_E5, 0x_3D, 0x_5B,
	];

	helper(S, BASE, -541_577_152);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_1_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_1_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0C, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0A,
		0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0D,
		0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8,
		0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_92,
		0x_80, 0x_92, 0x_E8,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_92, 0x_E8, 0x_DE, 0x_C2,
	];

	helper(S, BASE, -1);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_69_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_69_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0D,
		0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0A, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_B6, 0x_B6, 0x_B6,
		0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_B6, 0x_44, 0x_5C, 0x_F1, 0x_45,
		0x_B6, 0x_F1, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_B6, 0x_75, 0x_44, 0x_5C, 0x_F1,
	];

	helper(S, BASE, -69);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_851_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_851_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_09,
		0x_09, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0C,
		0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37,
		0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_37, 0x_33, 0x_33, 0x_52, 0x_37,
		0x_33, 0x_B4, 0x_52, 0x_52, 0x_52, 0x_37, 0x_52, 0x_37, 0x_80, 0x_37, 0x_80, 0x_33, 0x_33, 0x_80, 0x_FF,
		0x_80, 0x_FF, 0x_FF, 0x_37, 0x_37, 0x_FF, 0x_FF, 0x_37, 0x_33, 0x_52, 0x_37, 0x_37, 0x_FF, 0x_80, 0x_52,
		0x_80, 0x_37, 0x_37, 0x_37, 0x_33,
	];
	const BASE: &[u8] = &[
		0x_37, 0x_33, 0x_80, 0x_FF, 0x_52,
	];

	helper(S, BASE, -851);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_3_975_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_3_975_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0A, 0x_0D, 0x_0B,
		0x_09, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_A9, 0x_A9, 0x_A9, 0x_EF, 0x_30, 0x_30, 0x_11, 0x_B1, 0x_EF, 0x_EF, 0x_27, 0x_B1, 0x_EF,
		0x_A9, 0x_EF, 0x_B1, 0x_27, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_A9, 0x_B1, 0x_27, 0x_EF,
	];

	helper(S, BASE, -3_975);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_95_484_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_95_484_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_20, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_09, 0x_0A, 0x_0D,
		0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_36, 0x_02, 0x_02, 0x_36, 0x_ED, 0x_0E, 0x_88, 0x_02, 0x_88, 0x_23, 0x_02,
		0x_36, 0x_88, 0x_88, 0x_02, 0x_88, 0x_88, 0x_02, 0x_0E, 0x_02, 0x_0E, 0x_36, 0x_0E, 0x_ED, 0x_36, 0x_ED,
		0x_02, 0x_ED, 0x_88, 0x_36, 0x_0E, 0x_02, 0x_02, 0x_0E, 0x_36, 0x_02, 0x_88,
	];
	const BASE: &[u8] = &[
		0x_36, 0x_02, 0x_ED, 0x_0E, 0x_88,
	];

	helper(S, BASE, -95_484);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_444_546_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_444_546_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0A,
		0x_09, 0x_0C, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_09,
		0x_0D, 0x_20, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_3C, 0x_3C, 0x_3C, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C,
		0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C, 0x_3C,
		0x_7B, 0x_3C, 0x_9F, 0x_D5, 0x_7B, 0x_7B, 0x_7B, 0x_83, 0x_7B, 0x_D8, 0x_3C, 0x_83, 0x_83, 0x_83, 0x_D5,
		0x_9F, 0x_D5, 0x_83, 0x_3C, 0x_9F, 0x_83, 0x_83, 0x_9F, 0x_D5, 0x_7B, 0x_9F, 0x_3C, 0x_9F, 0x_7B, 0x_7B,
		0x_9F, 0x_9F, 0x_7B, 0x_7B, 0x_83, 0x_3C, 0x_3C, 0x_3C, 0x_D5, 0x_7B, 0x_7B, 0x_D5, 0x_83, 0x_9F, 0x_7B,
		0x_3C, 0x_83, 0x_83, 0x_D5, 0x_D5, 0x_9F, 0x_83,
	];
	const BASE: &[u8] = &[
		0x_3C, 0x_7B, 0x_D5, 0x_9F, 0x_83,
	];

	helper(S, BASE, -444_546);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_8_640_381_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_8_640_381_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_81, 0x_FE, 0x_59, 0x_81, 0x_59, 0x_FE, 0x_FE,
		0x_3F, 0x_81, 0x_1A, 0x_1A, 0x_32, 0x_1A, 0x_FE, 0x_59, 0x_FE, 0x_3F, 0x_81, 0x_1A, 0x_1A, 0x_FE, 0x_59,
		0x_1A, 0x_59,
	];
	const BASE: &[u8] = &[
		0x_81, 0x_1A, 0x_59, 0x_3F, 0x_FE,
	];

	helper(S, BASE, -8_640_381);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_21_123_022_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_21_123_022_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0C,
		0x_20, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D, 0x_8D,
		0x_8D, 0x_8D, 0x_8D, 0x_B4, 0x_8D, 0x_CD, 0x_8D, 0x_F2, 0x_CD, 0x_F2, 0x_CD, 0x_8D, 0x_CD, 0x_B4, 0x_FA,
		0x_F2, 0x_F2, 0x_01, 0x_8D, 0x_B4, 0x_F2, 0x_B4, 0x_CD, 0x_B4, 0x_CD,
	];
	const BASE: &[u8] = &[
		0x_8D, 0x_F2, 0x_B4, 0x_01, 0x_CD,
	];

	helper(S, BASE, -21_123_022);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_657_701_750_in_base_5_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_657_701_750_in_base_5_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_0D,
		0x_09, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9,
		0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_A9, 0x_DD, 0x_33, 0x_DD, 0x_8F, 0x_33, 0x_33, 0x_DD,
		0x_8A, 0x_DD, 0x_8A, 0x_A9, 0x_A9, 0x_A9, 0x_8C, 0x_DD, 0x_A9, 0x_33, 0x_A9, 0x_8A, 0x_A9, 0x_8F, 0x_DD,
		0x_33, 0x_8A, 0x_A9, 0x_A9, 0x_DD, 0x_8A, 0x_8A, 0x_8A, 0x_A9, 0x_8F, 0x_8F, 0x_DD, 0x_DD,
	];
	const BASE: &[u8] = &[
		0x_A9, 0x_8F, 0x_DD, 0x_33, 0x_8A,
	];

	helper(S, BASE, -657_701_750);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_0B, 0x_0D, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_20,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_FF, 0x_C0, 0x_82,
		0x_44, 0x_CD, 0x_EC, 0x_41, 0x_FF, 0x_82, 0x_41, 0x_6A, 0x_FF, 0x_FF, 0x_CD, 0x_FF, 0x_CD, 0x_6A, 0x_FF,
		0x_6A, 0x_44, 0x_41, 0x_82, 0x_CD, 0x_44, 0x_EC, 0x_FF,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_CD, 0x_FF, 0x_6A, 0x_41, 0x_EC, 0x_82,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_33_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_33_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_0A, 0x_0A, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0A,
		0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_09,
		0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_5D, 0x_5D,
		0x_5D, 0x_5D, 0x_B6, 0x_7C, 0x_17, 0x_FB, 0x_18, 0x_B6, 0x_5D, 0x_FB, 0x_5D, 0x_18, 0x_B6, 0x_FB, 0x_57,
		0x_5D, 0x_FB, 0x_F2, 0x_5D, 0x_FB, 0x_5D, 0x_F2, 0x_7C, 0x_18, 0x_18, 0x_57, 0x_7C, 0x_B6, 0x_F2, 0x_F2,
		0x_57, 0x_18, 0x_7C, 0x_B6, 0x_FB, 0x_7C, 0x_B6, 0x_5D, 0x_7C, 0x_FB, 0x_B6, 0x_B6,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_57, 0x_FB, 0x_18, 0x_B6, 0x_7C, 0x_F2,
	];

	helper(S, BASE, -33);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_305_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_305_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0D, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0D,
		0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F,
		0x_27, 0x_E9, 0x_6E, 0x_AD, 0x_8F, 0x_6A, 0x_6E, 0x_6E, 0x_8F, 0x_27, 0x_6E, 0x_D7, 0x_8F, 0x_27, 0x_3C,
		0x_D7, 0x_D7, 0x_8F, 0x_6A, 0x_D7, 0x_E9, 0x_8F, 0x_8F, 0x_3C, 0x_6E, 0x_6A, 0x_D7, 0x_3C, 0x_6E, 0x_E9,
		0x_8F, 0x_3C, 0x_6A, 0x_6E, 0x_D7, 0x_6E, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_E9, 0x_6A, 0x_D7, 0x_6E, 0x_3C, 0x_27,
	];

	helper(S, BASE, -305);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_038_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_038_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0D,
		0x_20, 0x_20, 0x_09, 0x_09, 0x_20, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF, 0x_FF,
		0x_FF, 0x_54, 0x_31, 0x_3D, 0x_54, 0x_21, 0x_86, 0x_54, 0x_08, 0x_21, 0x_31, 0x_08, 0x_FF, 0x_5A, 0x_54,
		0x_31, 0x_5A, 0x_21, 0x_08, 0x_FF, 0x_FF, 0x_08, 0x_54, 0x_3D, 0x_5A, 0x_5A, 0x_21, 0x_FF, 0x_5A, 0x_08,
		0x_31, 0x_31, 0x_31, 0x_FF, 0x_5A, 0x_31, 0x_FF, 0x_31, 0x_31, 0x_FF, 0x_FF, 0x_08, 0x_3D, 0x_54, 0x_31,
		0x_FF, 0x_FF, 0x_54, 0x_21,
	];
	const BASE: &[u8] = &[
		0x_FF, 0x_21, 0x_3D, 0x_54, 0x_08, 0x_31, 0x_5A,
	];

	helper(S, BASE, -9_038);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_46_466_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_46_466_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_0B, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_20, 0x_0C,
		0x_20, 0x_0D, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_0D, 0x_0D, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7,
		0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_E7, 0x_EF, 0x_37, 0x_EF, 0x_79, 0x_EF, 0x_E7, 0x_2E, 0x_37,
		0x_BD, 0x_79, 0x_E7, 0x_5F, 0x_EF, 0x_79, 0x_E7, 0x_EF, 0x_37, 0x_3D, 0x_BD,
	];
	const BASE: &[u8] = &[
		0x_E7, 0x_BD, 0x_EF, 0x_79, 0x_3D, 0x_37, 0x_5F,
	];

	helper(S, BASE, -46_466);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_865_779_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_865_779_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04,
		0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_04, 0x_9D, 0x_04, 0x_91, 0x_4F, 0x_57, 0x_04, 0x_51, 0x_45, 0x_DA,
		0x_9D, 0x_45, 0x_4F, 0x_4F, 0x_57, 0x_91, 0x_4F, 0x_51, 0x_91, 0x_4F, 0x_9D, 0x_9D, 0x_04, 0x_4F, 0x_91,
		0x_91, 0x_91, 0x_04, 0x_4F, 0x_57, 0x_91, 0x_57, 0x_4F, 0x_57, 0x_57, 0x_57, 0x_9D, 0x_4F, 0x_57, 0x_57,
		0x_45, 0x_57, 0x_45, 0x_45,
	];
	const BASE: &[u8] = &[
		0x_04, 0x_9D, 0x_91, 0x_4F, 0x_57, 0x_45, 0x_51,
	];

	helper(S, BASE, -865_779);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_5_819_810_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_5_819_810_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_09,
		0x_0C, 0x_0B, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68,
		0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_68, 0x_AA, 0x_68,
		0x_68, 0x_F1, 0x_AA, 0x_D8, 0x_E2, 0x_1B, 0x_F1, 0x_16, 0x_68, 0x_AA, 0x_F1, 0x_AA, 0x_68, 0x_1B, 0x_1B,
		0x_AA, 0x_D8, 0x_D8, 0x_AA, 0x_68, 0x_AA, 0x_68, 0x_F1, 0x_68, 0x_D8, 0x_F1, 0x_E2, 0x_68, 0x_D8, 0x_AA,
		0x_F1, 0x_D8,
	];
	const BASE: &[u8] = &[
		0x_68, 0x_AA, 0x_E2, 0x_F1, 0x_1B, 0x_6B, 0x_D8,
	];

	helper(S, BASE, -5_819_810);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_82_277_261_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_82_277_261_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_A3, 0x_A3, 0x_A3, 0x_82, 0x_A3, 0x_1A, 0x_34, 0x_82, 0x_82, 0x_34, 0x_82, 0x_89, 0x_E5, 0x_DE,
		0x_E5, 0x_E5, 0x_A3, 0x_1A, 0x_E5, 0x_A3, 0x_E5, 0x_F9, 0x_E5, 0x_89, 0x_34, 0x_1A, 0x_89, 0x_34, 0x_89,
		0x_F9, 0x_82, 0x_82, 0x_A3, 0x_89, 0x_F9, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_A3, 0x_1A, 0x_82, 0x_E5, 0x_F9, 0x_89, 0x_34,
	];

	helper(S, BASE, -82_277_261);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_963_541_037_in_base_7_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_963_541_037_in_base_7_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_09, 0x_09, 0x_09, 0x_20, 0x_09, 0x_0D,
		0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_0D, 0x_09, 0x_0B, 0x_0C, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A,
		0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_4A, 0x_F5, 0x_AC, 0x_44,
		0x_4A, 0x_44, 0x_44, 0x_AD, 0x_96, 0x_F5, 0x_AD, 0x_EA, 0x_BB, 0x_44, 0x_EA, 0x_EA, 0x_44, 0x_96, 0x_96,
		0x_EA, 0x_AC, 0x_EA, 0x_44, 0x_F5, 0x_4A, 0x_AD, 0x_AD, 0x_F5, 0x_4A, 0x_F5, 0x_44, 0x_AC, 0x_96, 0x_96,
		0x_AD, 0x_4A, 0x_4A, 0x_AC, 0x_F5, 0x_96, 0x_EA, 0x_96, 0x_44, 0x_44, 0x_44, 0x_EA, 0x_96, 0x_EA, 0x_96,
		0x_4A, 0x_AC, 0x_44,
	];
	const BASE: &[u8] = &[
		0x_4A, 0x_96, 0x_AC, 0x_F5, 0x_EA, 0x_AD, 0x_44,
	];

	helper(S, BASE, -963_541_037);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54,
		0x_1A, 0x_74, 0x_D5, 0x_C4, 0x_D5, 0x_A5, 0x_AC, 0x_7D, 0x_C4, 0x_21, 0x_AC, 0x_7D, 0x_C4, 0x_A5, 0x_C7,
		0x_AC, 0x_5F, 0x_88, 0x_D5, 0x_D5,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_C7, 0x_1A, 0x_88, 0x_21, 0x_AC, 0x_5F, 0x_A5, 0x_D5, 0x_C4, 0x_7D,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_83_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_83_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_09, 0x_0D, 0x_20, 0x_0C, 0x_0B, 0x_0A,
		0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_09,
		0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_D4, 0x_36, 0x_D8, 0x_23, 0x_19, 0x_B3, 0x_67, 0x_19, 0x_67, 0x_36, 0x_23, 0x_01, 0x_19, 0x_B3, 0x_19,
		0x_01, 0x_12, 0x_23, 0x_19, 0x_B3, 0x_8D, 0x_23, 0x_D4, 0x_01, 0x_67,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_06, 0x_67, 0x_12, 0x_23, 0x_8D, 0x_36, 0x_D4, 0x_5B, 0x_19, 0x_01,
	];

	helper(S, BASE, -83);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_267_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_267_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_09, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3,
		0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_C3, 0x_A6, 0x_A6, 0x_D8, 0x_75,
		0x_F1, 0x_6C, 0x_D8, 0x_48, 0x_C3, 0x_B1, 0x_A6, 0x_8F, 0x_48, 0x_D8, 0x_48,
	];
	const BASE: &[u8] = &[
		0x_C3, 0x_8F, 0x_A6, 0x_D8, 0x_B1, 0x_C1, 0x_48, 0x_7A, 0x_6C, 0x_76, 0x_F1,
	];

	helper(S, BASE, -267);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_4_049_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_4_049_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_20, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0B,
		0x_0C, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0A,
		0x_0A, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_4B, 0x_91, 0x_4D, 0x_B3, 0x_28,
		0x_37, 0x_37, 0x_1C, 0x_37, 0x_37, 0x_5D, 0x_6F, 0x_91, 0x_42, 0x_4D, 0x_91, 0x_6F, 0x_42, 0x_B3, 0x_43,
		0x_4B, 0x_43, 0x_4D, 0x_1C, 0x_4D, 0x_5D, 0x_42, 0x_91, 0x_B3, 0x_4B, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_B3, 0x_5D, 0x_4B, 0x_92, 0x_4D, 0x_6F, 0x_42, 0x_1C, 0x_43, 0x_37,
	];

	helper(S, BASE, -4_049);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_26_250_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_26_250_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_0B, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_0B,
		0x_0B, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19,
		0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_19, 0x_74, 0x_F2, 0x_8C, 0x_A0, 0x_08,
		0x_D0, 0x_F2, 0x_C6, 0x_91, 0x_A0, 0x_08, 0x_91, 0x_8C, 0x_F2, 0x_91, 0x_8C, 0x_A0, 0x_C6, 0x_74, 0x_19,
		0x_C6, 0x_A0, 0x_91, 0x_67, 0x_91, 0x_91, 0x_74, 0x_91, 0x_67, 0x_19, 0x_74, 0x_67, 0x_A0, 0x_91, 0x_91,
		0x_A0, 0x_C6, 0x_8C, 0x_EE, 0x_F2, 0x_74, 0x_98, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_19, 0x_74, 0x_67, 0x_91, 0x_08, 0x_EE, 0x_C6, 0x_8C, 0x_F2, 0x_98, 0x_A0,
	];

	helper(S, BASE, -26_250);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_437_559_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_437_559_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_09, 0x_09, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_20, 0x_0A, 0x_20, 0x_0A,
		0x_0C, 0x_0C, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_2A, 0x_87, 0x_6A, 0x_9C, 0x_2A, 0x_D1, 0x_5C, 0x_9C,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_D1, 0x_2A, 0x_66, 0x_03, 0x_33, 0x_1B, 0x_87, 0x_9C, 0x_6A, 0x_F0,
	];

	helper(S, BASE, -437_559);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_159_560_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_159_560_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0D,
		0x_0A, 0x_0A, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_09,
		0x_0D, 0x_0A, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_7E, 0x_7E, 0x_7E,
		0x_45, 0x_A6, 0x_D7, 0x_8E, 0x_8E, 0x_47, 0x_FA, 0x_D3, 0x_FA, 0x_7E, 0x_7E, 0x_D7, 0x_45, 0x_9C, 0x_12,
		0x_47, 0x_A6, 0x_7E, 0x_9C, 0x_D7, 0x_FA, 0x_D7, 0x_47, 0x_23, 0x_8E, 0x_7E, 0x_8E, 0x_23, 0x_A6, 0x_9C,
		0x_FA, 0x_FA, 0x_23, 0x_DF, 0x_12, 0x_A6,
	];
	const BASE: &[u8] = &[
		0x_7E, 0x_45, 0x_A6, 0x_DF, 0x_D7, 0x_8E, 0x_47, 0x_FA, 0x_12, 0x_9C, 0x_23,
	];

	helper(S, BASE, -2_159_560);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_43_233_987_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_43_233_987_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_09, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0C,
		0x_0B, 0x_0A, 0x_0C, 0x_0A, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0C, 0x_0D, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7, 0x_C7,
		0x_C7, 0x_F4, 0x_F4, 0x_86, 0x_86, 0x_CA, 0x_63, 0x_AC, 0x_61, 0x_36, 0x_AC, 0x_63, 0x_C7, 0x_14, 0x_76,
		0x_CA, 0x_86, 0x_AC, 0x_F4, 0x_72,
	];
	const BASE: &[u8] = &[
		0x_C7, 0x_76, 0x_F4, 0x_63, 0x_86, 0x_61, 0x_72, 0x_AC, 0x_D7, 0x_14, 0x_CA,
	];

	helper(S, BASE, -43_233_987);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_876_612_828_in_base_11_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_876_612_828_in_base_11_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_CF, 0x_CF,
		0x_CF, 0x_CF, 0x_CF, 0x_CF, 0x_38, 0x_CF, 0x_32, 0x_87, 0x_CF, 0x_87, 0x_FE, 0x_2E, 0x_36, 0x_E5, 0x_CF,
		0x_DD, 0x_36, 0x_36, 0x_FE, 0x_68, 0x_2E, 0x_2E, 0x_36, 0x_2E, 0x_2E, 0x_DD, 0x_32, 0x_32, 0x_FC, 0x_38,
		0x_38, 0x_38, 0x_DD, 0x_32, 0x_6E, 0x_32, 0x_38, 0x_87, 0x_6E, 0x_38, 0x_DD, 0x_DD, 0x_68, 0x_6E, 0x_32,
		0x_38, 0x_CF, 0x_6E, 0x_FE, 0x_2E, 0x_87, 0x_32, 0x_32, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_CF, 0x_2E, 0x_FE, 0x_36, 0x_38, 0x_6E, 0x_FC, 0x_68, 0x_DD, 0x_87, 0x_32,
	];

	helper(S, BASE, -876_612_828);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_7_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_7_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_09, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_56, 0x_56, 0x_56, 0x_56,
		0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56,
		0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56, 0x_56,
		0x_56, 0x_56, 0x_56, 0x_56, 0x_90, 0x_C3, 0x_01, 0x_1E, 0x_90, 0x_44, 0x_9E, 0x_FE, 0x_1E, 0x_44, 0x_FE,
		0x_E0, 0x_1C, 0x_FE, 0x_FB, 0x_1E, 0x_01, 0x_BC, 0x_82, 0x_9E,
	];
	const BASE: &[u8] = &[
		0x_56, 0x_01, 0x_44, 0x_82, 0x_E0, 0x_BC, 0x_FB, 0x_90, 0x_FE, 0x_9E, 0x_3D, 0x_1C, 0x_1E,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_82_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_82_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_0A, 0x_0B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80,
		0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_80, 0x_5D, 0x_15, 0x_EF, 0x_91, 0x_80, 0x_5D, 0x_4C,
		0x_18, 0x_80, 0x_4A, 0x_11, 0x_18, 0x_5D, 0x_D8, 0x_80, 0x_80, 0x_5D, 0x_5D, 0x_6D, 0x_4A, 0x_5D, 0x_B5,
		0x_5D, 0x_18, 0x_6D,
	];
	const BASE: &[u8] = &[
		0x_80, 0x_D8, 0x_11, 0x_18, 0x_15, 0x_6D, 0x_5D, 0x_4A, 0x_91, 0x_B5, 0x_73, 0x_7A, 0x_4C,
	];

	helper(S, BASE, -82);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_777_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_777_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC,
		0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC,
		0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_AC, 0x_42, 0x_18,
		0x_19, 0x_93, 0x_32, 0x_AC, 0x_77, 0x_7C, 0x_BB, 0x_32,
	];
	const BASE: &[u8] = &[
		0x_AC, 0x_38, 0x_32, 0x_34, 0x_42, 0x_E7, 0x_50, 0x_18, 0x_7C, 0x_5A, 0x_19, 0x_77, 0x_BB,
	];

	helper(S, BASE, -777);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_581_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_581_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_20, 0x_09, 0x_0A, 0x_0A, 0x_09, 0x_0B, 0x_0D,
		0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_0B, 0x_0B,
		0x_0C, 0x_0A, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0C, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA,
		0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_4D, 0x_4D, 0x_5E,
		0x_CA, 0x_B7, 0x_DB, 0x_4D, 0x_DB,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_41, 0x_7E, 0x_FD, 0x_4D, 0x_D2, 0x_DB, 0x_55, 0x_B0, 0x_5E, 0x_3B, 0x_97, 0x_98,
	];

	helper(S, BASE, -9_581);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_99_825_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_99_825_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_20, 0x_09, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A,
		0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A, 0x_9A,
		0x_9A, 0x_07, 0x_1D, 0x_96, 0x_03, 0x_B0, 0x_25, 0x_FC, 0x_18, 0x_03, 0x_03, 0x_18, 0x_07, 0x_E3, 0x_1D,
		0x_19, 0x_01, 0x_01, 0x_1D, 0x_01, 0x_18, 0x_03, 0x_19, 0x_07, 0x_01, 0x_2A, 0x_E3, 0x_B0, 0x_07, 0x_03,
		0x_FC, 0x_18, 0x_2A, 0x_9A, 0x_E3, 0x_19, 0x_2A,
	];
	const BASE: &[u8] = &[
		0x_9A, 0x_18, 0x_01, 0x_07, 0x_19, 0x_96, 0x_1D, 0x_37, 0x_03, 0x_E3, 0x_2A, 0x_B0, 0x_FC,
	];

	helper(S, BASE, -99_825);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_782_627_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_782_627_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_09, 0x_09, 0x_0A, 0x_20, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_0C, 0x_09, 0x_0D, 0x_0B, 0x_20,
		0x_0B, 0x_20, 0x_20, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_0C, 0x_0C,
		0x_09, 0x_2B, 0x_2D, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A,
		0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_1A, 0x_32, 0x_15, 0x_60, 0x_32,
		0x_5C, 0x_15, 0x_8C, 0x_D6, 0x_5C, 0x_F0, 0x_5D, 0x_D6, 0x_5D, 0x_AE, 0x_5D, 0x_32, 0x_AE, 0x_C4, 0x_D6,
		0x_60, 0x_CC, 0x_1A, 0x_32, 0x_CC, 0x_BF, 0x_C4, 0x_1A, 0x_CC, 0x_1A,
	];
	const BASE: &[u8] = &[
		0x_1A, 0x_15, 0x_32, 0x_AE, 0x_D6, 0x_60, 0x_B2, 0x_C4, 0x_BF, 0x_5D, 0x_F0, 0x_CC, 0x_5C,
	];

	helper(S, BASE, -782_627);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_159_646_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_159_646_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_3D, 0x_9B, 0x_F7, 0x_A1, 0x_96, 0x_34, 0x_9B,
		0x_34, 0x_F3, 0x_3D, 0x_9B, 0x_F7, 0x_27, 0x_FF, 0x_B7, 0x_F4, 0x_9B, 0x_34, 0x_B1, 0x_F7, 0x_96, 0x_F7,
		0x_B7, 0x_96, 0x_A1, 0x_27, 0x_99, 0x_9B, 0x_B1, 0x_83, 0x_F4, 0x_B1, 0x_9B, 0x_FF, 0x_3D, 0x_A1, 0x_96,
		0x_A1, 0x_83, 0x_3D, 0x_96, 0x_A1,
	];
	const BASE: &[u8] = &[
		0x_3D, 0x_9B, 0x_34, 0x_FF, 0x_99, 0x_B1, 0x_83, 0x_27, 0x_A1, 0x_96, 0x_F4, 0x_F7, 0x_B7,
	];

	helper(S, BASE, -9_159_646);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_15_455_140_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_15_455_140_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_20,
		0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_20, 0x_0B, 0x_0C, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97,
		0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97,
		0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_97, 0x_66, 0x_A7, 0x_DC, 0x_D0, 0x_DC, 0x_A6,
		0x_72, 0x_B9, 0x_72, 0x_66, 0x_D0, 0x_60, 0x_A8, 0x_EF, 0x_DC, 0x_A8, 0x_DC, 0x_DC, 0x_97, 0x_DC, 0x_A7,
		0x_D0, 0x_A6, 0x_A7, 0x_11, 0x_60, 0x_D0, 0x_EF, 0x_72, 0x_A8, 0x_8F, 0x_A7, 0x_F6, 0x_66, 0x_A8, 0x_DC,
		0x_A6, 0x_A8, 0x_A8, 0x_8F, 0x_A6, 0x_66, 0x_A6, 0x_A6, 0x_72, 0x_DC, 0x_D0, 0x_66,
	];
	const BASE: &[u8] = &[
		0x_97, 0x_D0, 0x_A7, 0x_66, 0x_F6, 0x_8F, 0x_A6, 0x_EF, 0x_DC, 0x_60, 0x_11, 0x_A8, 0x_72,
	];

	helper(S, BASE, -15_455_140);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_386_643_572_in_base_13_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_386_643_572_in_base_13_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_0B, 0x_0B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_5D, 0x_EB, 0x_10, 0x_65, 0x_32, 0x_EB, 0x_5D, 0x_2F, 0x_46, 0x_53,
		0x_8D, 0x_91, 0x_32, 0x_EB, 0x_65, 0x_8D, 0x_8D, 0x_8D, 0x_46, 0x_65, 0x_8D, 0x_12, 0x_12, 0x_10, 0x_10,
		0x_91, 0x_12, 0x_10, 0x_32, 0x_AA, 0x_12, 0x_EB, 0x_91, 0x_12, 0x_79, 0x_46, 0x_AA, 0x_91, 0x_AA, 0x_2F,
		0x_65, 0x_79, 0x_12, 0x_5D, 0x_12, 0x_8D, 0x_46, 0x_5D,
	];
	const BASE: &[u8] = &[
		0x_5D, 0x_65, 0x_10, 0x_46, 0x_32, 0x_79, 0x_EB, 0x_AA, 0x_8D, 0x_91, 0x_2F, 0x_12, 0x_2E,
	];

	helper(S, BASE, -386_643_572);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_0A, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47,
		0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47,
		0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_47, 0x_96, 0x_62, 0x_16, 0x_E0, 0x_96,
		0x_F2, 0x_47, 0x_0F, 0x_47, 0x_14, 0x_14, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_47, 0x_68, 0x_96, 0x_0F, 0x_B3, 0x_F2, 0x_E0, 0x_8F, 0x_C9, 0x_8C, 0x_FE, 0x_83, 0x_16, 0x_AD, 0x_C6,
		0x_3A, 0x_4B, 0x_56, 0x_14,
	];

	helper(S, BASE, -2);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_47_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_47_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_20, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_0D,
		0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_20, 0x_20, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_0A, 0x_0C, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_AF, 0x_F4,
		0x_48, 0x_D2, 0x_B7, 0x_AF, 0x_04, 0x_04, 0x_0F, 0x_62, 0x_22, 0x_75, 0x_7A, 0x_68, 0x_B7, 0x_52, 0x_62,
		0x_D2, 0x_5A, 0x_6C, 0x_D2, 0x_B7, 0x_6C, 0x_C3, 0x_5A, 0x_52, 0x_AF, 0x_AC, 0x_7A, 0x_C3, 0x_22, 0x_62,
		0x_EE, 0x_30, 0x_62,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_EE, 0x_AF, 0x_75, 0x_68, 0x_62, 0x_C3, 0x_B7, 0x_0F, 0x_F4, 0x_22, 0x_04, 0x_8A, 0x_5A, 0x_6C,
		0x_AC, 0x_7A, 0x_52, 0x_30,
	];

	helper(S, BASE, -47);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_972_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_972_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0C, 0x_0C, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_1C, 0x_1C, 0x_1C,
		0x_1C, 0x_1C, 0x_1C, 0x_76, 0x_08, 0x_81, 0x_C1, 0x_76,
	];
	const BASE: &[u8] = &[
		0x_1C, 0x_7E, 0x_76, 0x_81, 0x_31, 0x_92, 0x_FE, 0x_50, 0x_4C, 0x_66, 0x_FD, 0x_DB, 0x_2C, 0x_08, 0x_0E,
		0x_FB, 0x_3C, 0x_57, 0x_1F,
	];

	helper(S, BASE, -972);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_8_244_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_8_244_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_20, 0x_0B, 0x_0D, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_20, 0x_0A, 0x_0A, 0x_0C, 0x_20,
		0x_09, 0x_0B, 0x_20, 0x_20, 0x_0C, 0x_0B, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0A, 0x_09, 0x_20, 0x_09,
		0x_0D, 0x_20, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_09, 0x_0D, 0x_20, 0x_09, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48, 0x_48,
		0x_48, 0x_48, 0x_48, 0x_48, 0x_3F, 0x_7A, 0x_1F, 0x_30, 0x_F1, 0x_1F, 0x_44, 0x_AA, 0x_0E, 0x_85, 0x_AE,
		0x_0E, 0x_3F, 0x_AE, 0x_7A, 0x_48, 0x_1E, 0x_1F, 0x_1E, 0x_48, 0x_3F, 0x_50, 0x_C8, 0x_1F, 0x_0E, 0x_60,
		0x_AE, 0x_48, 0x_1F, 0x_DF, 0x_AE, 0x_7A, 0x_AE,
	];
	const BASE: &[u8] = &[
		0x_48, 0x_3F, 0x_AA, 0x_7A, 0x_DD, 0x_C8, 0x_DF, 0x_85, 0x_44, 0x_2E, 0x_1E, 0x_26, 0x_AE, 0x_60, 0x_50,
		0x_1F, 0x_0E, 0x_30, 0x_17,
	];

	helper(S, BASE, -8_244);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_95_706_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_95_706_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_C4, 0x_AB, 0x_1A, 0x_EE, 0x_59, 0x_8F, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_E2, 0x_1A, 0x_EE, 0x_28, 0x_BD, 0x_4D, 0x_5B, 0x_E6, 0x_48, 0x_24, 0x_61, 0x_FA, 0x_C4, 0x_B9,
		0x_3F, 0x_8F, 0x_39, 0x_AB,
	];

	helper(S, BASE, -95_706);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_616_036_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_616_036_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_0D,
		0x_20, 0x_09, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0A,
		0x_0A, 0x_0A, 0x_0D, 0x_0C, 0x_09, 0x_20, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_8C, 0x_13,
		0x_77, 0x_BB, 0x_C5, 0x_4F, 0x_C1, 0x_38, 0x_98, 0x_CA,
	];
	const BASE: &[u8] = &[
		0x_8C, 0x_95, 0x_A0, 0x_CA, 0x_13, 0x_5D, 0x_C6, 0x_B8, 0x_C5, 0x_98, 0x_2E, 0x_86, 0x_C7, 0x_77, 0x_38,
		0x_BB, 0x_66, 0x_55, 0x_4F,
	];

	helper(S, BASE, -616_036);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_3_302_647_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_3_302_647_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_09, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_06, 0x_99, 0x_99, 0x_F6, 0x_F4, 0x_1B, 0x_50, 0x_A5,
		0x_03, 0x_C5, 0x_2F, 0x_BA, 0x_D6, 0x_67, 0x_7A, 0x_7A, 0x_36, 0x_7A, 0x_1B, 0x_C5, 0x_1B, 0x_36, 0x_06,
		0x_BA, 0x_A5, 0x_03, 0x_99, 0x_2F, 0x_99, 0x_36, 0x_1B, 0x_C5, 0x_06, 0x_1B, 0x_A5, 0x_99, 0x_99, 0x_07,
		0x_D6, 0x_1B, 0x_03, 0x_82, 0x_40, 0x_C5, 0x_D6, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_06, 0x_2F, 0x_BA, 0x_A5, 0x_D6, 0x_99, 0x_82, 0x_89, 0x_F6, 0x_1B, 0x_F4, 0x_C5, 0x_67, 0x_A3,
		0x_36, 0x_07, 0x_7A, 0x_40,
	];

	helper(S, BASE, -3_302_647);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_64_707_053_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_64_707_053_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_20, 0x_0A,
		0x_09, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65, 0x_65,
		0x_65, 0x_F4, 0x_4E, 0x_06, 0x_7D, 0x_DF, 0x_2F, 0x_4E, 0x_60, 0x_2F, 0x_06, 0x_71, 0x_2C, 0x_2F, 0x_2F,
		0x_DF, 0x_F4, 0x_55, 0x_E8, 0x_F4, 0x_12, 0x_4E, 0x_65, 0x_65, 0x_5B, 0x_12, 0x_2F, 0x_7D, 0x_71, 0x_47,
		0x_55,
	];
	const BASE: &[u8] = &[
		0x_65, 0x_F4, 0x_06, 0x_B9, 0x_2C, 0x_47, 0x_55, 0x_4E, 0x_88, 0x_7D, 0x_58, 0x_8C, 0x_71, 0x_1C, 0x_5B,
		0x_E8, 0x_DF, 0x_2F, 0x_12,
	];

	helper(S, BASE, -64_707_053);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_248_106_385_in_base_19_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_248_106_385_in_base_19_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0B, 0x_0D, 0x_0B, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_0B, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_20,
		0x_0B, 0x_0C, 0x_0C, 0x_20, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_CA, 0x_CA, 0x_CA, 0x_CA, 0x_B1, 0x_B1, 0x_90, 0x_CD, 0x_8F, 0x_B1, 0x_CD, 0x_DF, 0x_93, 0x_B9,
		0x_90, 0x_C4,
	];
	const BASE: &[u8] = &[
		0x_CA, 0x_D1, 0x_B9, 0x_90, 0x_3A, 0x_B1, 0x_70, 0x_8F, 0x_D9, 0x_26, 0x_10, 0x_6A, 0x_C4, 0x_B7, 0x_28,
		0x_CD, 0x_93, 0x_BF, 0x_7F,
	];

	helper(S, BASE, -248_106_385);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_7_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_7_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0D, 0x_09, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD,
		0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_BD, 0x_A2, 0x_A0,
		0x_1E, 0x_97, 0x_8D, 0x_1E, 0x_23, 0x_37, 0x_54, 0x_CC, 0x_C1, 0x_78, 0x_87,
	];
	const BASE: &[u8] = &[
		0x_BD, 0x_17, 0x_61, 0x_64, 0x_37, 0x_AC, 0x_87, 0x_A2, 0x_C1, 0x_CC, 0x_41, 0x_5F, 0x_2A, 0x_23, 0x_57,
		0x_B5, 0x_58, 0x_8D, 0x_32, 0x_E5, 0x_54, 0x_60, 0x_97, 0x_A8, 0x_43, 0x_68, 0x_D0, 0x_C4, 0x_9A, 0x_1E,
		0x_D8, 0x_FC, 0x_DD, 0x_22, 0x_49, 0x_DB, 0x_82, 0x_80, 0x_78, 0x_8E, 0x_76, 0x_A1,
	];

	helper(S, BASE, -7);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_22_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_22_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3, 0x_B3,
		0x_65, 0x_0A, 0x_B3, 0x_6B, 0x_B3, 0x_EB, 0x_B6, 0x_05, 0x_05, 0x_B3, 0x_06, 0x_EB, 0x_5E, 0x_B6, 0x_C8,
		0x_14, 0x_82, 0x_94, 0x_67, 0x_06, 0x_92, 0x_82, 0x_14, 0x_67, 0x_6A, 0x_FA, 0x_A9, 0x_50, 0x_94, 0x_94,
		0x_0E, 0x_3F, 0x_1D, 0x_FA, 0x_3F, 0x_DB, 0x_BC, 0x_EB, 0x_9F, 0x_C9, 0x_6B, 0x_D0, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_B3, 0x_3F, 0x_FA, 0x_EB, 0x_5D, 0x_67, 0x_14, 0x_B6, 0x_06, 0x_5E, 0x_3A, 0x_1C, 0x_6B, 0x_05, 0x_C2,
		0x_82, 0x_70, 0x_D6, 0x_01, 0x_4A, 0x_D0, 0x_62, 0x_65, 0x_C8, 0x_9F, 0x_94, 0x_E5, 0x_C4, 0x_50, 0x_B1,
		0x_B0, 0x_6A, 0x_92, 0x_9B, 0x_02, 0x_C9, 0x_CF, 0x_0E, 0x_BC, 0x_A9, 0x_DB, 0x_1D,
	];

	helper(S, BASE, -22);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_121_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_121_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_0D, 0x_0C, 0x_0B, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_0D,
		0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_09, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D,
		0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_9D, 0x_12, 0x_59, 0x_74, 0x_AA, 0x_1D, 0x_01,
		0x_FB, 0x_A8, 0x_C5, 0x_A8, 0x_AA, 0x_FE, 0x_F1, 0x_7E, 0x_01, 0x_DC, 0x_6B, 0x_15, 0x_59, 0x_12, 0x_A4,
		0x_DC, 0x_12, 0x_BE, 0x_75, 0x_4A, 0x_AA, 0x_55, 0x_08, 0x_17, 0x_9D,
	];
	const BASE: &[u8] = &[
		0x_9D, 0x_C4, 0x_12, 0x_22, 0x_8F, 0x_B6, 0x_C5, 0x_70, 0x_F6, 0x_17, 0x_02, 0x_A8, 0x_FE, 0x_44, 0x_E0,
		0x_D3, 0x_01, 0x_36, 0x_6B, 0x_A4, 0x_18, 0x_EA, 0x_90, 0x_55, 0x_D9, 0x_FB, 0x_75, 0x_9C, 0x_08, 0x_7E,
		0x_AA, 0x_1D, 0x_F1, 0x_BE, 0x_4A, 0x_15, 0x_ED, 0x_59, 0x_72, 0x_27, 0x_DC, 0x_46,
	];

	helper(S, BASE, -121);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_3_212_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_3_212_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_0C, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_0D,
		0x_0A, 0x_20, 0x_20, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_13, 0x_BF, 0x_0F, 0x_37, 0x_DA, 0x_83, 0x_46, 0x_4A,
	];
	const BASE: &[u8] = &[
		0x_13, 0x_BF, 0x_45, 0x_CF, 0x_F5, 0x_E4, 0x_79, 0x_AB, 0x_4A, 0x_D4, 0x_19, 0x_97, 0x_ED, 0x_25, 0x_46,
		0x_E8, 0x_83, 0x_18, 0x_86, 0x_C9, 0x_37, 0x_82, 0x_E3, 0x_BC, 0x_D3, 0x_11, 0x_4D, 0x_F2, 0x_89, 0x_08,
		0x_9A, 0x_34, 0x_57, 0x_50, 0x_0F, 0x_05, 0x_75, 0x_32, 0x_E0, 0x_DC, 0x_5E, 0x_4B,
	];

	helper(S, BASE, -3_212);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_58_190_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_58_190_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_0C, 0x_0D, 0x_0A, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_5E, 0x_5E, 0x_5E, 0x_23,
		0x_27, 0x_57, 0x_A8, 0x_1F, 0x_3D, 0x_9B, 0x_B5,
	];
	const BASE: &[u8] = &[
		0x_5E, 0x_8F, 0x_E2, 0x_D2, 0x_C9, 0x_35, 0x_79, 0x_48, 0x_88, 0x_89, 0x_C4, 0x_A2, 0x_AD, 0x_55, 0x_40,
		0x_65, 0x_91, 0x_86, 0x_9B, 0x_C7, 0x_57, 0x_E3, 0x_2F, 0x_BB, 0x_9F, 0x_6C, 0x_0F, 0x_C8, 0x_1F, 0x_F2,
		0x_CE, 0x_EF, 0x_23, 0x_F7, 0x_29, 0x_BD, 0x_3D, 0x_82, 0x_C0, 0x_E1, 0x_B5, 0x_27,
	];

	helper(S, BASE, -58_190);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_971_186_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_971_186_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0C, 0x_0D, 0x_20, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_20, 0x_20, 0x_20, 0x_0A,
		0x_0D, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_20, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_20, 0x_0C, 0x_0C,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_AA, 0x_E8, 0x_31, 0x_B8, 0x_1A,
		0x_A9, 0x_B1,
	];
	const BASE: &[u8] = &[
		0x_AA, 0x_3D, 0x_DF, 0x_BD, 0x_31, 0x_EE, 0x_D0, 0x_DD, 0x_9E, 0x_BE, 0x_FB, 0x_83, 0x_C0, 0x_E8, 0x_F9,
		0x_A2, 0x_25, 0x_3F, 0x_59, 0x_CB, 0x_1A, 0x_CA, 0x_CF, 0x_B8, 0x_B1, 0x_18, 0x_29, 0x_84, 0x_BC, 0x_C3,
		0x_F8, 0x_B0, 0x_13, 0x_51, 0x_E1, 0x_23, 0x_26, 0x_E5, 0x_24, 0x_D8, 0x_55, 0x_F0,
	];

	helper(S, BASE, -971_186);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_8_251_399_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_8_251_399_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0A, 0x_0C, 0x_0C, 0x_0D, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23,
		0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_23, 0x_88, 0x_FA, 0x_13, 0x_FA, 0x_A7, 0x_5A, 0x_12, 0x_A2, 0x_BE,
		0x_84, 0x_16, 0x_23, 0x_84, 0x_36, 0x_25, 0x_85, 0x_3A, 0x_45, 0x_21, 0x_28, 0x_36, 0x_FC, 0x_01, 0x_53,
		0x_A2, 0x_23,
	];
	const BASE: &[u8] = &[
		0x_23, 0x_BE, 0x_88, 0x_A3, 0x_BF, 0x_01, 0x_53, 0x_FC, 0x_B2, 0x_84, 0x_29, 0x_66, 0x_7B, 0x_21, 0x_ED,
		0x_13, 0x_D2, 0x_1D, 0x_C9, 0x_87, 0x_27, 0x_E4, 0x_7F, 0x_28, 0x_3A, 0x_E0, 0x_36, 0x_FA, 0x_A1, 0x_12,
		0x_75, 0x_16, 0x_7C, 0x_85, 0x_45, 0x_25, 0x_2E, 0x_A7, 0x_A2, 0x_1E, 0x_70, 0x_78,
	];

	helper(S, BASE, -8_251_399);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_25_657_418_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_25_657_418_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12,
		0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_12, 0x_D5,
		0x_53, 0x_B4, 0x_12, 0x_31, 0x_9D, 0x_7D, 0x_BF, 0x_F1, 0x_12, 0x_87, 0x_9E, 0x_F3, 0x_7D, 0x_8F, 0x_D5,
		0x_3F, 0x_B5, 0x_8F, 0x_BB, 0x_BF, 0x_32, 0x_B5, 0x_EC, 0x_B8, 0x_9E, 0x_45, 0x_62, 0x_EC, 0x_F3, 0x_A4,
		0x_82, 0x_79, 0x_11, 0x_45, 0x_61, 0x_2F, 0x_31, 0x_1E, 0x_A7, 0x_57, 0x_E3, 0x_AE, 0x_A4, 0x_7C, 0x_EC,
		0x_A3,
	];
	const BASE: &[u8] = &[
		0x_12, 0x_F3, 0x_B8, 0x_BF, 0x_CF, 0x_87, 0x_F1, 0x_B5, 0x_D5, 0x_32, 0x_53, 0x_BB, 0x_A3, 0x_B4, 0x_82,
		0x_61, 0x_A4, 0x_2F, 0x_C6, 0x_B0, 0x_79, 0x_7C, 0x_76, 0x_9E, 0x_0E, 0x_16, 0x_EC, 0x_57, 0x_3F, 0x_AE,
		0x_E3, 0x_A7, 0x_62, 0x_47, 0x_11, 0x_D7, 0x_90, 0x_45, 0x_31, 0x_8F, 0x_1E, 0x_7D,
	];

	helper(S, BASE, -25_657_418);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_925_025_278_in_base_42_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_925_025_278_in_base_42_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0A, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_09, 0x_09, 0x_0C, 0x_20, 0x_0A,
		0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0B, 0x_0D, 0x_0A, 0x_0A, 0x_0A, 0x_0D, 0x_0A, 0x_2B,
		0x_2B, 0x_2D, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B,
		0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_6B,
		0x_6B, 0x_6B, 0x_6B, 0x_6B, 0x_8A, 0x_08, 0x_68, 0x_F8, 0x_02, 0x_69, 0x_79, 0x_FF, 0x_B0, 0x_78, 0x_89,
		0x_89, 0x_71, 0x_DC, 0x_28, 0x_6A, 0x_25, 0x_B0, 0x_41, 0x_25, 0x_2A, 0x_F8, 0x_EF, 0x_B0, 0x_25, 0x_1F,
		0x_59, 0x_1F, 0x_FC, 0x_71, 0x_F8, 0x_78, 0x_71, 0x_DC, 0x_6A, 0x_69, 0x_33, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_6B, 0x_D5, 0x_89, 0x_08, 0x_47, 0x_F9, 0x_2A, 0x_8A, 0x_E8, 0x_06, 0x_97, 0x_68, 0x_B1, 0x_7A, 0x_33,
		0x_59, 0x_69, 0x_25, 0x_28, 0x_41, 0x_F8, 0x_78, 0x_12, 0x_D7, 0x_42, 0x_52, 0x_9A, 0x_8C, 0x_71, 0x_EF,
		0x_26, 0x_02, 0x_FF, 0x_39, 0x_67, 0x_1F, 0x_6A, 0x_AB, 0x_B0, 0x_DC, 0x_77, 0x_FC,
	];

	helper(S, BASE, -925_025_278);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_4_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_4_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_0A, 0x_20, 0x_09, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_0B,
		0x_09, 0x_20, 0x_0C, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_20, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30,
		0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_30, 0x_04, 0x_FF, 0x_ED, 0x_12, 0x_5B, 0x_83, 0x_57, 0x_1D, 0x_C2,
		0x_39, 0x_12, 0x_CF, 0x_92, 0x_5B,
	];
	const BASE: &[u8] = &[
		0x_30, 0x_96, 0x_E7, 0x_28, 0x_04, 0x_FB, 0x_64, 0x_7C, 0x_39, 0x_93, 0x_9F, 0x_A6, 0x_8C, 0x_8D, 0x_43,
		0x_73, 0x_D9, 0x_71, 0x_57, 0x_C1, 0x_CF, 0x_1F, 0x_90, 0x_5B, 0x_E1, 0x_BA, 0x_4D, 0x_BE, 0x_1D, 0x_D7,
		0x_DE, 0x_08, 0x_F4, 0x_B0, 0x_C0, 0x_F1, 0x_63, 0x_ED, 0x_EA, 0x_9D, 0x_A0, 0x_3C, 0x_92, 0x_53, 0x_60,
		0x_B4, 0x_B6, 0x_C2, 0x_F0, 0x_AD, 0x_3F, 0x_CE, 0x_14, 0x_E4, 0x_23, 0x_16, 0x_2C, 0x_12, 0x_AA, 0x_81,
		0x_61, 0x_68, 0x_83, 0x_6F, 0x_FA, 0x_9C, 0x_51, 0x_72, 0x_5F, 0x_BB, 0x_C4, 0x_7F, 0x_A1,
	];

	helper(S, BASE, -4);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_28_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_28_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_20, 0x_0B, 0x_09, 0x_20,
		0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_0B, 0x_0A, 0x_20, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0B, 0x_0D,
		0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_20, 0x_20, 0x_0B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53, 0x_53,
		0x_53, 0x_53, 0x_04, 0x_72, 0x_A3, 0x_3A, 0x_52, 0x_38, 0x_A1, 0x_6B, 0x_06, 0x_FB, 0x_BE,
	];
	const BASE: &[u8] = &[
		0x_53, 0x_3B, 0x_6D, 0x_BE, 0x_A7, 0x_0F, 0x_FB, 0x_52, 0x_3C, 0x_43, 0x_64, 0x_57, 0x_4B, 0x_6B, 0x_66,
		0x_B6, 0x_74, 0x_EC, 0x_1B, 0x_A1, 0x_83, 0x_39, 0x_1E, 0x_B3, 0x_AC, 0x_2C, 0x_F7, 0x_12, 0x_04, 0x_5C,
		0x_1F, 0x_ED, 0x_38, 0x_1A, 0x_DD, 0x_0E, 0x_31, 0x_22, 0x_CC, 0x_A3, 0x_81, 0x_F1, 0x_65, 0x_3A, 0x_7A,
		0x_10, 0x_46, 0x_90, 0x_17, 0x_F4, 0x_D4, 0x_59, 0x_BB, 0x_E6, 0x_C4, 0x_97, 0x_1C, 0x_98, 0x_15, 0x_34,
		0x_DC, 0x_F3, 0x_BD, 0x_FE, 0x_9F, 0x_75, 0x_07, 0x_E2, 0x_06, 0x_35, 0x_B0, 0x_FA, 0x_78,
	];

	helper(S, BASE, -28);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_247_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_247_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_3A, 0x_3A,
		0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_3A, 0x_EC, 0x_9A, 0x_E7, 0x_93, 0x_1F, 0x_45, 0x_E4, 0x_E1,
		0x_6B, 0x_77, 0x_6C, 0x_AF, 0x_B3, 0x_98, 0x_01, 0x_74, 0x_C1, 0x_04, 0x_11, 0x_38, 0x_9A, 0x_43, 0x_1F,
		0x_32, 0x_01, 0x_43, 0x_32, 0x_14, 0x_97, 0x_9A, 0x_11, 0x_38, 0x_82, 0x_91, 0x_3D, 0x_51, 0x_82, 0x_02,
		0x_08, 0x_11, 0x_92, 0x_40, 0x_45, 0x_01,
	];
	const BASE: &[u8] = &[
		0x_3A, 0x_36, 0x_68, 0x_EC, 0x_B3, 0x_08, 0x_CD, 0x_48, 0x_B2, 0x_43, 0x_9E, 0x_E2, 0x_32, 0x_D3, 0x_DD,
		0x_70, 0x_7F, 0x_E0, 0x_92, 0x_9F, 0x_C1, 0x_ED, 0x_6B, 0x_BF, 0x_54, 0x_D9, 0x_45, 0x_E4, 0x_9A, 0x_93,
		0x_91, 0x_C8, 0x_59, 0x_02, 0x_40, 0x_3D, 0x_79, 0x_7B, 0x_07, 0x_EB, 0x_1F, 0x_8A, 0x_DA, 0x_98, 0x_14,
		0x_74, 0x_11, 0x_58, 0x_F3, 0x_8B, 0x_73, 0x_80, 0x_51, 0x_D1, 0x_E9, 0x_04, 0x_56, 0x_AF, 0x_38, 0x_1B,
		0x_66, 0x_97, 0x_B6, 0x_01, 0x_E1, 0x_77, 0x_16, 0x_82, 0x_B8, 0x_6C, 0x_A2, 0x_3C, 0x_27,
	];

	helper(S, BASE, -247);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_4_779_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_4_779_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0D, 0x_0B, 0x_0D, 0x_09, 0x_0A, 0x_0B, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0D, 0x_0A, 0x_0D,
		0x_20, 0x_09, 0x_0B, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0D,
		0x_09, 0x_20, 0x_0C, 0x_09, 0x_0B, 0x_0C, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1, 0x_C1,
		0x_F8, 0x_22, 0x_52, 0x_2E, 0x_DD, 0x_50, 0x_4A, 0x_AD, 0x_4E, 0x_22,
	];
	const BASE: &[u8] = &[
		0x_C1, 0x_50, 0x_11, 0x_F9, 0x_4A, 0x_6F, 0x_26, 0x_DE, 0x_FC, 0x_EC, 0x_5F, 0x_4F, 0x_F3, 0x_8B, 0x_E4,
		0x_47, 0x_FF, 0x_6E, 0x_80, 0x_88, 0x_2E, 0x_83, 0x_EF, 0x_FA, 0x_84, 0x_08, 0x_ED, 0x_7D, 0x_17, 0x_60,
		0x_DD, 0x_D3, 0x_42, 0x_FD, 0x_22, 0x_29, 0x_85, 0x_AD, 0x_7A, 0x_41, 0x_2C, 0x_25, 0x_1D, 0x_49, 0x_33,
		0x_0F, 0x_6A, 0x_AC, 0x_1B, 0x_E3, 0x_C8, 0x_38, 0x_4E, 0x_70, 0x_78, 0x_68, 0x_31, 0x_44, 0x_57, 0x_F7,
		0x_61, 0x_A4, 0x_2F, 0x_C3, 0x_76, 0x_F8, 0x_16, 0x_F1, 0x_12, 0x_E8, 0x_A0, 0x_CA, 0x_64,
	];

	helper(S, BASE, -4_779);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_69_085_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_69_085_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0A, 0x_0B, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_20,
		0x_0A, 0x_20, 0x_0D, 0x_0C, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91,
		0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_91, 0x_23, 0x_3D, 0x_3A, 0x_46,
		0x_DC, 0x_72, 0x_56, 0x_68, 0x_E4, 0x_D2, 0x_23, 0x_49, 0x_51, 0x_AD, 0x_4A, 0x_48, 0x_0F, 0x_CC, 0x_26,
		0x_0F, 0x_BA,
	];
	const BASE: &[u8] = &[
		0x_91, 0x_A3, 0x_E4, 0x_7A, 0x_7F, 0x_F0, 0x_1F, 0x_CC, 0x_66, 0x_98, 0x_FF, 0x_26, 0x_23, 0x_F8, 0x_72,
		0x_E0, 0x_84, 0x_8C, 0x_89, 0x_37, 0x_D7, 0x_25, 0x_9A, 0x_49, 0x_CA, 0x_76, 0x_57, 0x_3A, 0x_EE, 0x_44,
		0x_95, 0x_AA, 0x_8E, 0x_27, 0x_BA, 0x_42, 0x_35, 0x_AD, 0x_93, 0x_D1, 0x_5D, 0x_DC, 0x_0F, 0x_AF, 0x_2E,
		0x_82, 0x_8F, 0x_EA, 0x_4A, 0x_51, 0x_D4, 0x_77, 0x_D2, 0x_FC, 0x_70, 0x_ED, 0x_79, 0x_CD, 0x_4E, 0x_56,
		0x_92, 0x_78, 0x_2C, 0x_18, 0x_12, 0x_C0, 0x_48, 0x_13, 0x_58, 0x_28, 0x_3D, 0x_68, 0x_64,
	];

	helper(S, BASE, -69_085);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_208_227_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_208_227_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0D, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0D,
		0x_0C, 0x_0C, 0x_0B, 0x_20, 0x_0A, 0x_0B, 0x_0C, 0x_0B, 0x_0D, 0x_0B, 0x_0D, 0x_0C, 0x_0D, 0x_0C, 0x_2B,
		0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_54, 0x_54, 0x_54,
		0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_54, 0x_B7, 0x_F3, 0x_FF,
		0x_12, 0x_A6, 0x_D3, 0x_94, 0x_C8, 0x_93, 0x_17, 0x_05, 0x_F3, 0x_B7, 0x_BF, 0x_56, 0x_46, 0x_61, 0x_2E,
		0x_A0, 0x_E7, 0x_F6, 0x_F3, 0x_B0, 0x_79, 0x_DC, 0x_A4, 0x_D4, 0x_F3, 0x_7B, 0x_9F, 0x_B4, 0x_56, 0x_4B,
		0x_71, 0x_79, 0x_AF, 0x_05, 0x_A0,
	];
	const BASE: &[u8] = &[
		0x_54, 0x_D3, 0x_DD, 0x_6C, 0x_C9, 0x_F3, 0x_4F, 0x_C6, 0x_05, 0x_93, 0x_D4, 0x_46, 0x_5B, 0x_7B, 0x_88,
		0x_E9, 0x_C0, 0x_73, 0x_31, 0x_EE, 0x_A0, 0x_AB, 0x_56, 0x_79, 0x_92, 0x_B1, 0x_C1, 0x_ED, 0x_AD, 0x_BB,
		0x_DC, 0x_FF, 0x_FB, 0x_06, 0x_22, 0x_90, 0x_15, 0x_A3, 0x_7E, 0x_B7, 0x_2C, 0x_61, 0x_B9, 0x_86, 0x_1F,
		0x_C8, 0x_9F, 0x_17, 0x_4B, 0x_2E, 0x_44, 0x_82, 0x_33, 0x_D5, 0x_B3, 0x_71, 0x_C3, 0x_B4, 0x_9E, 0x_87,
		0x_A9, 0x_AF, 0x_A1, 0x_BF, 0x_94, 0x_7F, 0x_F6, 0x_A4, 0x_B0, 0x_74, 0x_A6, 0x_E7, 0x_F2,
	];

	helper(S, BASE, -208_227);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_5_620_084_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_5_620_084_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0C, 0x_09, 0x_0C, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2,
		0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_D2, 0x_C4, 0x_9A, 0x_1F, 0x_FE, 0x_92, 0x_11,
		0x_CA, 0x_1A, 0x_59, 0x_90, 0x_73, 0x_1E, 0x_F2, 0x_93, 0x_DC, 0x_63, 0x_9A, 0x_EB, 0x_26, 0x_CE, 0x_A0,
		0x_3E, 0x_67, 0x_65, 0x_A5, 0x_C2, 0x_31, 0x_71, 0x_F6, 0x_1A, 0x_3E, 0x_16, 0x_57, 0x_FE, 0x_C5, 0x_A5,
		0x_63, 0x_1E, 0x_9B, 0x_AB, 0x_71, 0x_A0, 0x_E2, 0x_1B, 0x_E0, 0x_C5,
	];
	const BASE: &[u8] = &[
		0x_D2, 0x_F5, 0x_E0, 0x_1B, 0x_1E, 0x_F3, 0x_C5, 0x_73, 0x_7D, 0x_A0, 0x_68, 0x_A5, 0x_26, 0x_AB, 0x_C4,
		0x_F2, 0x_12, 0x_E2, 0x_15, 0x_C2, 0x_F6, 0x_DC, 0x_16, 0x_B6, 0x_30, 0x_3F, 0x_86, 0x_95, 0x_4B, 0x_14,
		0x_63, 0x_75, 0x_9A, 0x_FE, 0x_59, 0x_96, 0x_1C, 0x_C1, 0x_0F, 0x_02, 0x_CD, 0x_57, 0x_A3, 0x_84, 0x_35,
		0x_1F, 0x_D8, 0x_D7, 0x_7B, 0x_5D, 0x_67, 0x_3A, 0x_90, 0x_7F, 0x_AF, 0x_71, 0x_9E, 0x_9B, 0x_6A, 0x_A1,
		0x_07, 0x_EB, 0x_CA, 0x_77, 0x_1A, 0x_11, 0x_31, 0x_93, 0x_13, 0x_CE, 0x_65, 0x_05, 0x_3E,
	];

	helper(S, BASE, -5_620_084);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_37_291_214_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_37_291_214_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_2B, 0x_2D, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75,
		0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_75, 0x_16, 0x_66, 0x_40, 0x_25, 0x_93, 0x_2A, 0x_E8,
		0x_06, 0x_7D, 0x_25, 0x_FD, 0x_6F, 0x_21, 0x_33, 0x_7E, 0x_DB, 0x_6F, 0x_01, 0x_E5, 0x_EA, 0x_FC, 0x_EB,
		0x_EB, 0x_E3, 0x_DB, 0x_6F,
	];
	const BASE: &[u8] = &[
		0x_75, 0x_16, 0x_1C, 0x_05, 0x_7A, 0x_11, 0x_94, 0x_6B, 0x_47, 0x_EA, 0x_87, 0x_DF, 0x_E0, 0x_A1, 0x_06,
		0x_97, 0x_85, 0x_69, 0x_FD, 0x_BC, 0x_F1, 0x_62, 0x_66, 0x_FC, 0x_3A, 0x_DD, 0x_8A, 0x_6C, 0x_30, 0x_E4,
		0x_B9, 0x_1D, 0x_82, 0x_E2, 0x_E3, 0x_46, 0x_27, 0x_7F, 0x_99, 0x_E5, 0x_93, 0x_E1, 0x_DB, 0x_6F, 0x_19,
		0x_65, 0x_7D, 0x_84, 0x_61, 0x_42, 0x_A5, 0x_71, 0x_A6, 0x_01, 0x_21, 0x_95, 0x_2C, 0x_25, 0x_E8, 0x_33,
		0x_FE, 0x_CF, 0x_40, 0x_98, 0x_8E, 0x_73, 0x_7E, 0x_EB, 0x_F6, 0x_72, 0x_08, 0x_8D, 0x_9A,
	];

	helper(S, BASE, -37_291_214);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_480_243_108_in_base_73_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_480_243_108_in_base_73_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_0C, 0x_0B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44,
		0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_44, 0x_CD, 0x_D1,
		0x_79, 0x_65, 0x_1A, 0x_03, 0x_CE, 0x_43, 0x_89, 0x_B0, 0x_FE, 0x_1E, 0x_1E, 0x_43, 0x_FE, 0x_7A, 0x_50,
		0x_CF, 0x_1C, 0x_4C, 0x_A7, 0x_D1, 0x_ED, 0x_26, 0x_6E, 0x_95, 0x_D0, 0x_D1, 0x_05, 0x_D0, 0x_1C, 0x_1A,
		0x_38, 0x_A6, 0x_AD, 0x_51, 0x_3B, 0x_8F, 0x_8F, 0x_43, 0x_ED, 0x_7F, 0x_27, 0x_D1, 0x_79, 0x_E7,
	];
	const BASE: &[u8] = &[
		0x_44, 0x_4A, 0x_97, 0x_87, 0x_6D, 0x_0F, 0x_10, 0x_8F, 0x_38, 0x_AD, 0x_E7, 0x_50, 0x_53, 0x_E4, 0x_7F,
		0x_ED, 0x_CD, 0x_4C, 0x_D4, 0x_4F, 0x_05, 0x_6C, 0x_EE, 0x_7A, 0x_66, 0x_F7, 0x_24, 0x_88, 0x_9F, 0x_76,
		0x_27, 0x_CF, 0x_B9, 0x_AC, 0x_1E, 0x_96, 0x_79, 0x_7B, 0x_B8, 0x_C3, 0x_B0, 0x_D8, 0x_83, 0x_CE, 0x_43,
		0x_51, 0x_D0, 0x_9B, 0x_99, 0x_19, 0x_26, 0x_A6, 0x_1A, 0x_A7, 0x_16, 0x_7C, 0x_D7, 0x_FE, 0x_65, 0x_33,
		0x_95, 0x_6E, 0x_36, 0x_52, 0x_1C, 0x_DA, 0x_D1, 0x_4B, 0x_E8, 0x_3B, 0x_FB, 0x_57, 0x_89,
	];

	helper(S, BASE, -480_243_108);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_5_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_5_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_0B, 0x_0C, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64, 0x_64,
		0x_64, 0x_64, 0x_CF, 0x_42, 0x_59, 0x_05, 0x_A3, 0x_6D, 0x_EC, 0x_6D, 0x_69, 0x_D0, 0x_F5, 0x_37, 0x_28,
		0x_50, 0x_5F, 0x_64, 0x_F6, 0x_69, 0x_F5, 0x_F6, 0x_B6, 0x_24, 0x_89, 0x_A8, 0x_C0, 0x_88, 0x_60, 0x_E5,
		0x_ED, 0x_C3, 0x_44, 0x_4D, 0x_F2, 0x_86, 0x_97, 0x_4B, 0x_1E, 0x_10,
	];
	const BASE: &[u8] = &[
		0x_64, 0x_5A, 0x_B6, 0x_77, 0x_96, 0x_CF, 0x_26, 0x_87, 0x_15, 0x_99, 0x_4D, 0x_3B, 0x_A8, 0x_DF, 0x_F5,
		0x_F7, 0x_19, 0x_BB, 0x_1E, 0x_D0, 0x_05, 0x_1D, 0x_5F, 0x_60, 0x_DA, 0x_65, 0x_9B, 0x_48, 0x_ED, 0x_F0,
		0x_4B, 0x_07, 0x_F9, 0x_1F, 0x_F3, 0x_88, 0x_86, 0x_31, 0x_3C, 0x_1B, 0x_55, 0x_AC, 0x_81, 0x_C6, 0x_A2,
		0x_29, 0x_58, 0x_C3, 0x_01, 0x_7A, 0x_89, 0x_7F, 0x_2A, 0x_28, 0x_C0, 0x_18, 0x_E7, 0x_94, 0x_9E, 0x_DE,
		0x_24, 0x_B7, 0x_7B, 0x_D4, 0x_59, 0x_78, 0x_85, 0x_95, 0x_37, 0x_50, 0x_2F, 0x_D7, 0x_38, 0x_10, 0x_F6,
		0x_6D, 0x_BC, 0x_53, 0x_E5, 0x_22, 0x_27, 0x_B9, 0x_E1, 0x_F2, 0x_68, 0x_FE, 0x_61, 0x_F1, 0x_34, 0x_3F,
		0x_CA, 0x_4F, 0x_80, 0x_12, 0x_E8, 0x_A3, 0x_D2, 0x_EE, 0x_FC, 0x_08, 0x_44, 0x_97, 0x_7D, 0x_6B, 0x_75,
		0x_39, 0x_4E, 0x_90, 0x_EF, 0x_B4, 0x_23, 0x_EC, 0x_69,
	];

	helper(S, BASE, -5);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_33_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_33_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0A, 0x_0B, 0x_0B, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_20, 0x_09, 0x_0D, 0x_20, 0x_20, 0x_09, 0x_0B, 0x_0B,
		0x_20, 0x_0C, 0x_20, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0C, 0x_0C, 0x_09, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E,
		0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_0E, 0x_DF, 0x_79, 0x_0F, 0x_DF, 0x_ED, 0x_6D, 0x_A5, 0x_26, 0x_08,
		0x_A4, 0x_40, 0x_F4, 0x_68, 0x_15, 0x_35, 0x_B9,
	];
	const BASE: &[u8] = &[
		0x_0E, 0x_E9, 0x_F4, 0x_05, 0x_91, 0x_97, 0x_C8, 0x_67, 0x_32, 0x_CC, 0x_A5, 0x_12, 0x_10, 0x_4D, 0x_15,
		0x_4C, 0x_F6, 0x_1B, 0x_4B, 0x_9C, 0x_64, 0x_CB, 0x_D8, 0x_61, 0x_E6, 0x_40, 0x_FD, 0x_77, 0x_AD, 0x_2C,
		0x_90, 0x_CE, 0x_E2, 0x_DF, 0x_88, 0x_17, 0x_72, 0x_EA, 0x_49, 0x_02, 0x_BD, 0x_5B, 0x_BA, 0x_35, 0x_04,
		0x_EC, 0x_6C, 0x_6F, 0x_BC, 0x_B9, 0x_B2, 0x_1D, 0x_21, 0x_8A, 0x_FA, 0x_48, 0x_60, 0x_5F, 0x_95, 0x_DB,
		0x_C5, 0x_68, 0x_59, 0x_7C, 0x_9D, 0x_B4, 0x_C1, 0x_07, 0x_5A, 0x_6B, 0x_B0, 0x_57, 0x_B1, 0x_6D, 0x_94,
		0x_22, 0x_50, 0x_D7, 0x_26, 0x_81, 0x_08, 0x_63, 0x_6E, 0x_37, 0x_9B, 0x_A0, 0x_7F, 0x_B3, 0x_DE, 0x_C4,
		0x_ED, 0x_58, 0x_78, 0x_2F, 0x_D4, 0x_CA, 0x_D9, 0x_F5, 0x_D2, 0x_EB, 0x_28, 0x_A4, 0x_C0, 0x_54, 0x_46,
		0x_5E, 0x_C9, 0x_0F, 0x_AB, 0x_73, 0x_5C, 0x_F1, 0x_83,
	];

	helper(S, BASE, -33);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_341_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_341_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_09, 0x_09, 0x_0A, 0x_09, 0x_0B, 0x_0A, 0x_0D, 0x_20, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_20,
		0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_0B, 0x_0D, 0x_09, 0x_09, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_0B, 0x_20, 0x_09,
		0x_0A, 0x_20, 0x_0D, 0x_0A, 0x_0B, 0x_0D, 0x_0A, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52,
		0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52,
		0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52, 0x_52,
		0x_52, 0x_52, 0x_52, 0x_CC, 0x_8B, 0x_F0, 0x_44, 0x_82, 0x_21, 0x_80, 0x_B1, 0x_1B, 0x_52, 0x_33, 0x_AB,
	];
	const BASE: &[u8] = &[
		0x_52, 0x_38, 0x_8B, 0x_CC, 0x_F2, 0x_64, 0x_6E, 0x_16, 0x_4E, 0x_02, 0x_A0, 0x_44, 0x_15, 0x_B7, 0x_AF,
		0x_49, 0x_C2, 0x_A6, 0x_87, 0x_88, 0x_B9, 0x_AB, 0x_C6, 0x_FE, 0x_74, 0x_ED, 0x_17, 0x_23, 0x_1B, 0x_8A,
		0x_30, 0x_B4, 0x_9F, 0x_48, 0x_4A, 0x_C7, 0x_8D, 0x_84, 0x_5D, 0x_C1, 0x_45, 0x_EB, 0x_DE, 0x_3C, 0x_A3,
		0x_E3, 0x_8F, 0x_91, 0x_47, 0x_11, 0x_58, 0x_94, 0x_9E, 0x_03, 0x_DD, 0x_06, 0x_D6, 0x_66, 0x_5F, 0x_39,
		0x_57, 0x_B1, 0x_80, 0x_C4, 0x_3F, 0x_12, 0x_B3, 0x_05, 0x_EE, 0x_D4, 0x_4F, 0x_14, 0x_63, 0x_C5, 0x_8C,
		0x_95, 0x_4B, 0x_04, 0x_61, 0x_27, 0x_36, 0x_34, 0x_B0, 0x_83, 0x_26, 0x_01, 0x_D8, 0x_3B, 0x_D1, 0x_71,
		0x_24, 0x_21, 0x_E8, 0x_BD, 0x_C8, 0x_50, 0x_1A, 0x_A5, 0x_82, 0x_BE, 0x_AA, 0x_73, 0x_EF, 0x_C0, 0x_6B,
		0x_69, 0x_2A, 0x_35, 0x_5B, 0x_33, 0x_96, 0x_40, 0x_A8,
	];

	helper(S, BASE, -341);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_2_317_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_2_317_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_20, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_0C, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51,
		0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51,
		0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_51, 0x_45, 0x_F5, 0x_0B,
		0x_E4, 0x_91,
	];
	const BASE: &[u8] = &[
		0x_51, 0x_CC, 0x_B5, 0x_DD, 0x_5B, 0x_D4, 0x_A7, 0x_FA, 0x_AD, 0x_82, 0x_A4, 0x_EA, 0x_19, 0x_6F, 0x_E6,
		0x_CD, 0x_A0, 0x_DB, 0x_A3, 0x_3F, 0x_45, 0x_FE, 0x_79, 0x_9D, 0x_15, 0x_9F, 0x_C0, 0x_34, 0x_CF, 0x_D6,
		0x_A5, 0x_21, 0x_F7, 0x_B0, 0x_80, 0x_E4, 0x_84, 0x_A2, 0x_C5, 0x_CE, 0x_C3, 0x_3E, 0x_56, 0x_EB, 0x_6E,
		0x_85, 0x_75, 0x_D1, 0x_FB, 0x_9A, 0x_03, 0x_C9, 0x_86, 0x_7B, 0x_30, 0x_91, 0x_2A, 0x_F5, 0x_41, 0x_94,
		0x_13, 0x_50, 0x_4E, 0x_5F, 0x_54, 0x_4D, 0x_74, 0x_02, 0x_8E, 0x_FC, 0x_67, 0x_92, 0x_F9, 0x_10, 0x_58,
		0x_29, 0x_D7, 0x_B1, 0x_AE, 0x_B7, 0x_46, 0x_4F, 0x_63, 0x_27, 0x_08, 0x_32, 0x_22, 0x_C7, 0x_81, 0x_06,
		0x_97, 0x_73, 0x_DA, 0x_8C, 0x_05, 0x_4B, 0x_DF, 0x_7D, 0x_01, 0x_53, 0x_16, 0x_F6, 0x_C1, 0x_E3, 0x_4A,
		0x_F3, 0x_B9, 0x_88, 0x_49, 0x_33, 0x_2C, 0x_93, 0x_D9,
	];

	helper(S, BASE, -2_317);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_83_283_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_83_283_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_09, 0x_20, 0x_09, 0x_09, 0x_0B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB,
		0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB,
		0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_FB, 0x_56,
		0x_BF, 0x_FC, 0x_8D, 0x_4F, 0x_3B, 0x_B1, 0x_3E, 0x_E8, 0x_BF, 0x_37, 0x_E1, 0x_3A, 0x_3D, 0x_BF, 0x_37,
		0x_E9, 0x_4F, 0x_1D, 0x_C1, 0x_BC, 0x_38, 0x_BC, 0x_70, 0x_11, 0x_C7, 0x_5F, 0x_32, 0x_FC, 0x_8C,
	];
	const BASE: &[u8] = &[
		0x_FB, 0x_ED, 0x_FC, 0x_B6, 0x_BC, 0x_E6, 0x_56, 0x_B0, 0x_62, 0x_2C, 0x_E1, 0x_44, 0x_99, 0x_80, 0x_96,
		0x_49, 0x_F1, 0x_8A, 0x_E8, 0x_A4, 0x_27, 0x_BA, 0x_E0, 0x_34, 0x_FF, 0x_35, 0x_1D, 0x_0E, 0x_D1, 0x_DB,
		0x_8F, 0x_16, 0x_83, 0x_F9, 0x_F4, 0x_9E, 0x_02, 0x_55, 0x_11, 0x_54, 0x_C7, 0x_42, 0x_5F, 0x_B1, 0x_19,
		0x_77, 0x_6E, 0x_3D, 0x_AA, 0x_6D, 0x_0F, 0x_06, 0x_43, 0x_B4, 0x_C3, 0x_08, 0x_90, 0x_36, 0x_14, 0x_BF,
		0x_7B, 0x_37, 0x_F7, 0x_58, 0x_7F, 0x_E9, 0x_C6, 0x_30, 0x_BB, 0x_F3, 0x_3A, 0x_38, 0x_3B, 0x_85, 0x_EA,
		0x_28, 0x_8B, 0x_33, 0x_D7, 0x_70, 0x_D0, 0x_C1, 0x_05, 0x_8C, 0x_A0, 0x_01, 0x_DC, 0x_9B, 0x_B9, 0x_FE,
		0x_4A, 0x_60, 0x_AD, 0x_D4, 0x_A3, 0x_32, 0x_D9, 0x_A9, 0x_BD, 0x_24, 0x_C5, 0x_39, 0x_DA, 0x_29, 0x_6C,
		0x_C4, 0x_CA, 0x_3E, 0x_E7, 0x_4D, 0x_4F, 0x_B2, 0x_EF,
	];

	helper(S, BASE, -83_283);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_792_372_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_792_372_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_20, 0x_0A, 0x_09, 0x_0C, 0x_09, 0x_0A, 0x_0B, 0x_0D,
		0x_0B, 0x_20, 0x_0D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F, 0x_8F,
		0x_8F, 0x_8F, 0x_6E, 0x_1C, 0x_D0, 0x_90, 0x_39, 0x_8B, 0x_CA, 0x_EE, 0x_4A, 0x_E6, 0x_B9, 0x_36, 0x_6C,
		0x_58, 0x_3E, 0x_E1, 0x_4F, 0x_4F, 0x_39, 0x_2A, 0x_36, 0x_4E, 0x_47, 0x_94, 0x_7E, 0x_2E, 0x_F1, 0x_F9,
		0x_EE, 0x_1C, 0x_5C, 0x_46, 0x_E9, 0x_AF, 0x_EE, 0x_CA, 0x_A6, 0x_2E, 0x_A6, 0x_35,
	];
	const BASE: &[u8] = &[
		0x_8F, 0x_4E, 0x_65, 0x_EB, 0x_1F, 0x_A6, 0x_1C, 0x_6B, 0x_E7, 0x_84, 0x_F9, 0x_47, 0x_EF, 0x_0E, 0x_7E,
		0x_6C, 0x_D0, 0x_03, 0x_81, 0x_17, 0x_57, 0x_9D, 0x_C6, 0x_B8, 0x_E1, 0x_E6, 0x_58, 0x_FF, 0x_A0, 0x_27,
		0x_B7, 0x_0F, 0x_29, 0x_D9, 0x_62, 0x_A5, 0x_91, 0x_3F, 0x_21, 0x_FC, 0x_3C, 0x_EE, 0x_9C, 0x_53, 0x_4B,
		0x_AF, 0x_88, 0x_E5, 0x_EC, 0x_E9, 0x_72, 0x_9B, 0x_07, 0x_9A, 0x_CB, 0x_71, 0x_12, 0x_5C, 0x_CC, 0x_46,
		0x_C5, 0x_7B, 0x_6E, 0x_05, 0x_26, 0x_6D, 0x_8B, 0x_BE, 0x_FB, 0x_A3, 0x_C0, 0x_98, 0x_94, 0x_F8, 0x_6A,
		0x_4A, 0x_5A, 0x_E4, 0x_B9, 0x_CA, 0x_DD, 0x_5E, 0x_DC, 0x_5B, 0x_39, 0x_13, 0x_2E, 0x_C8, 0x_AA, 0x_7C,
		0x_89, 0x_B6, 0x_36, 0x_DA, 0x_4F, 0x_B1, 0x_8D, 0x_42, 0x_2A, 0x_F1, 0x_1D, 0x_83, 0x_35, 0x_BF, 0x_56,
		0x_2C, 0x_97, 0x_95, 0x_82, 0x_3E, 0x_48, 0x_68, 0x_E3,
	];

	helper(S, BASE, -792_372);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_6_302_768_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_6_302_768_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0A, 0x_09, 0x_0D, 0x_0D, 0x_0D, 0x_09, 0x_0C, 0x_0B, 0x_09, 0x_0B,
		0x_0A, 0x_20, 0x_20, 0x_20, 0x_0D, 0x_20, 0x_0D, 0x_0C, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0C,
		0x_0D, 0x_0D, 0x_09, 0x_20, 0x_0B, 0x_0D, 0x_20, 0x_09, 0x_0B, 0x_0C, 0x_0D, 0x_0A, 0x_2B, 0x_2B, 0x_2D,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_FE,
		0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE,
		0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_FE, 0x_75, 0x_3A, 0x_86, 0x_C9, 0x_19, 0x_03, 0x_1A, 0x_D7,
		0x_1D, 0x_CE, 0x_E9, 0x_8D, 0x_A0, 0x_5F, 0x_2A, 0x_CF, 0x_5E, 0x_AB, 0x_18, 0x_93, 0x_93, 0x_B0, 0x_69,
		0x_3A, 0x_61, 0x_78, 0x_96, 0x_6A, 0x_E1, 0x_21, 0x_D4, 0x_D7, 0x_ED, 0x_8D, 0x_8D, 0x_9D, 0x_FE, 0x_E6,
		0x_CB, 0x_66, 0x_73, 0x_3D, 0x_93, 0x_16,
	];
	const BASE: &[u8] = &[
		0x_FE, 0x_94, 0x_F8, 0x_35, 0x_75, 0x_29, 0x_F9, 0x_FC, 0x_9B, 0x_96, 0x_CD, 0x_4F, 0x_CB, 0x_9D, 0x_3F,
		0x_33, 0x_39, 0x_DE, 0x_07, 0x_79, 0x_FB, 0x_CC, 0x_4E, 0x_CE, 0x_38, 0x_DA, 0x_4D, 0x_F0, 0x_5E, 0x_3E,
		0x_3B, 0x_4A, 0x_6C, 0x_ED, 0x_3C, 0x_72, 0x_48, 0x_E1, 0x_7C, 0x_23, 0x_76, 0x_3A, 0x_53, 0x_13, 0x_E6,
		0x_5C, 0x_25, 0x_64, 0x_1D, 0x_1A, 0x_B8, 0x_8C, 0x_D2, 0x_E7, 0x_8F, 0x_D4, 0x_CF, 0x_8D, 0x_C1, 0x_03,
		0x_67, 0x_52, 0x_D7, 0x_1B, 0x_C2, 0x_04, 0x_6A, 0x_86, 0x_68, 0x_B0, 0x_99, 0x_51, 0x_EA, 0x_85, 0x_A0,
		0x_78, 0x_C8, 0x_61, 0x_B2, 0x_69, 0x_C9, 0x_F1, 0x_42, 0x_28, 0x_4B, 0x_71, 0x_E2, 0x_43, 0x_BE, 0x_92,
		0x_AB, 0x_49, 0x_18, 0x_B6, 0x_E9, 0x_3D, 0x_73, 0x_DC, 0x_16, 0x_41, 0x_B9, 0x_7A, 0x_2A, 0x_AC, 0x_84,
		0x_21, 0x_F5, 0x_66, 0x_F2, 0x_5F, 0x_93, 0x_54, 0x_6E,
	];

	helper(S, BASE, -6_302_768);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_54_727_213_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_54_727_213_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_20, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7,
		0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7,
		0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_A7, 0x_94, 0x_C1, 0x_44, 0x_35, 0x_74, 0x_58, 0x_41, 0x_C6,
		0x_D7, 0x_15, 0x_13, 0x_BF, 0x_AD, 0x_EA, 0x_43, 0x_30, 0x_F2, 0x_F7,
	];
	const BASE: &[u8] = &[
		0x_A7, 0x_1A, 0x_46, 0x_73, 0x_A9, 0x_D4, 0x_F2, 0x_D8, 0x_4B, 0x_66, 0x_C6, 0x_65, 0x_C9, 0x_CE, 0x_5C,
		0x_6F, 0x_CF, 0x_83, 0x_1D, 0x_63, 0x_E0, 0x_B8, 0x_54, 0x_87, 0x_36, 0x_DA, 0x_ED, 0x_28, 0x_91, 0x_08,
		0x_5D, 0x_B1, 0x_15, 0x_96, 0x_39, 0x_5B, 0x_EB, 0x_94, 0x_12, 0x_E5, 0x_CD, 0x_02, 0x_CA, 0x_2A, 0x_93,
		0x_6A, 0x_F8, 0x_CC, 0x_40, 0x_3A, 0x_30, 0x_13, 0x_55, 0x_B2, 0x_41, 0x_FA, 0x_A3, 0x_03, 0x_8B, 0x_78,
		0x_C2, 0x_A4, 0x_4D, 0x_B9, 0x_F7, 0x_3D, 0x_56, 0x_82, 0x_61, 0x_A5, 0x_35, 0x_D7, 0x_25, 0x_5E, 0x_68,
		0x_F1, 0x_F9, 0x_C8, 0x_34, 0x_11, 0x_D6, 0x_E8, 0x_BF, 0x_BD, 0x_D2, 0x_58, 0x_4F, 0x_8E, 0x_6E, 0x_99,
		0x_AD, 0x_BA, 0x_64, 0x_04, 0x_AF, 0x_21, 0x_45, 0x_EA, 0x_2F, 0x_7D, 0x_77, 0x_01, 0x_3E, 0x_C5, 0x_C1,
		0x_69, 0x_44, 0x_D0, 0x_2E, 0x_85, 0x_43, 0x_B4, 0x_80,
	];

	helper(S, BASE, -54_727_213);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_781_943_607_in_base_113_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_781_943_607_in_base_113_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_0A, 0x_0C, 0x_0B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F,
		0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_6F, 0x_C0,
		0x_9A, 0x_17, 0x_5B, 0x_F4, 0x_7E, 0x_B1, 0x_6E, 0x_33, 0x_D1, 0x_5B, 0x_90, 0x_06, 0x_92, 0x_C0, 0x_74,
		0x_88, 0x_E4, 0x_65, 0x_33, 0x_38, 0x_B1, 0x_2A, 0x_BD, 0x_C0, 0x_4C, 0x_AF, 0x_D5, 0x_3E, 0x_57, 0x_76,
		0x_61, 0x_F4, 0x_2A, 0x_3B, 0x_61, 0x_C5, 0x_16, 0x_C0, 0x_BD, 0x_D5, 0x_E1,
	];
	const BASE: &[u8] = &[
		0x_6F, 0x_FE, 0x_2A, 0x_94, 0x_C0, 0x_D1, 0x_DA, 0x_65, 0x_B6, 0x_3E, 0x_8B, 0x_B7, 0x_16, 0x_75, 0x_21,
		0x_F8, 0x_6C, 0x_4E, 0x_F5, 0x_F0, 0x_88, 0x_76, 0x_61, 0x_BD, 0x_4C, 0x_22, 0x_E5, 0x_27, 0x_A2, 0x_D4,
		0x_E4, 0x_14, 0x_58, 0x_6E, 0x_E1, 0x_A6, 0x_15, 0x_D5, 0x_85, 0x_12, 0x_0E, 0x_56, 0x_95, 0x_C1, 0x_68,
		0x_06, 0x_D3, 0x_29, 0x_96, 0x_44, 0x_EF, 0x_1D, 0x_38, 0x_EA, 0x_5D, 0x_48, 0x_83, 0x_79, 0x_E2, 0x_23,
		0x_63, 0x_F9, 0x_4D, 0x_8C, 0x_33, 0x_4B, 0x_F1, 0x_EC, 0x_87, 0x_2E, 0x_E6, 0x_A0, 0x_E7, 0x_5B, 0x_03,
		0x_67, 0x_F2, 0x_92, 0x_DD, 0x_41, 0x_90, 0x_3C, 0x_DE, 0x_11, 0x_57, 0x_42, 0x_3B, 0x_32, 0x_84, 0x_9A,
		0x_D6, 0x_1E, 0x_C5, 0x_EE, 0x_A7, 0x_8D, 0x_BB, 0x_B1, 0x_40, 0x_71, 0x_35, 0x_51, 0x_72, 0x_98, 0x_17,
		0x_F4, 0x_FA, 0x_AF, 0x_02, 0x_74, 0x_3F, 0x_C2, 0x_97,
	];

	helper(S, BASE, -781_943_607);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_6_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_6_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0A, 0x_0B, 0x_0B, 0x_09, 0x_0C, 0x_20, 0x_20, 0x_0C, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0C,
		0x_20, 0x_0D, 0x_0A, 0x_0C, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0C,
		0x_0A, 0x_0D, 0x_20, 0x_09, 0x_09, 0x_0A, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_0A, 0x_09, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16,
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_16,
		0x_16, 0x_16, 0x_16, 0x_16, 0x_16, 0x_BB, 0x_7A, 0x_FF, 0x_EB, 0x_6F, 0x_46, 0x_31, 0x_D7,
	];
	const BASE: &[u8] = &[
		0x_16, 0x_DC, 0x_73, 0x_C1, 0x_FC, 0x_4B, 0x_BB, 0x_D6, 0x_EE, 0x_8F, 0x_F6, 0x_E6, 0x_86, 0x_0F, 0x_38,
		0x_66, 0x_3C, 0x_03, 0x_B5, 0x_60, 0x_CF, 0x_9B, 0x_AB, 0x_37, 0x_90, 0x_5E, 0x_68, 0x_BF, 0x_88, 0x_84,
		0x_6F, 0x_3B, 0x_5B, 0x_1B, 0x_3F, 0x_F9, 0x_FF, 0x_9D, 0x_1E, 0x_7F, 0x_6E, 0x_98, 0x_6A, 0x_02, 0x_14,
		0x_B4, 0x_83, 0x_89, 0x_71, 0x_64, 0x_8E, 0x_C9, 0x_22, 0x_3D, 0x_31, 0x_B6, 0x_40, 0x_94, 0x_1C, 0x_8C,
		0x_61, 0x_41, 0x_53, 0x_01, 0x_4F, 0x_5F, 0x_A8, 0x_96, 0x_59, 0x_5A, 0x_43, 0x_D5, 0x_FB, 0x_CB, 0x_DD,
		0x_D9, 0x_A4, 0x_A9, 0x_36, 0x_21, 0x_CE, 0x_8B, 0x_51, 0x_39, 0x_18, 0x_4E, 0x_79, 0x_FE, 0x_23, 0x_6B,
		0x_5C, 0x_B9, 0x_ED, 0x_C8, 0x_F1, 0x_10, 0x_CD, 0x_75, 0x_BA, 0x_33, 0x_B7, 0x_04, 0x_C3, 0x_46, 0x_62,
		0x_FD, 0x_D1, 0x_F5, 0x_E0, 0x_08, 0x_DB, 0x_2C, 0x_9C, 0x_5D, 0x_77, 0x_87, 0x_13, 0x_92, 0x_82, 0x_AA,
		0x_34, 0x_7D, 0x_80, 0x_76, 0x_F4, 0x_99, 0x_A3, 0x_9A, 0x_A7, 0x_AE, 0x_AD, 0x_3E, 0x_95, 0x_24, 0x_72,
		0x_67, 0x_06, 0x_45, 0x_9F, 0x_35, 0x_69, 0x_EB, 0x_CA, 0x_EC, 0x_52, 0x_42, 0x_A2, 0x_E1, 0x_EA, 0x_D7,
		0x_C4, 0x_F2, 0x_74, 0x_A5, 0x_A0, 0x_1A, 0x_11, 0x_57, 0x_AC, 0x_27, 0x_70, 0x_50, 0x_BD, 0x_6C, 0x_E2,
		0x_D8, 0x_2F, 0x_65, 0x_B3, 0x_E8, 0x_4D, 0x_56, 0x_91, 0x_1F, 0x_97, 0x_8D, 0x_B1, 0x_0E, 0x_85, 0x_C0,
		0x_55, 0x_CC, 0x_54, 0x_D4, 0x_48, 0x_58, 0x_49, 0x_E5, 0x_F8, 0x_7E, 0x_26, 0x_9E, 0x_07,
	];

	helper(S, BASE, -6);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_43_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_43_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0B, 0x_0A, 0x_0A, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF,
		0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_DF, 0x_AE, 0x_0C, 0x_4B, 0x_CE,
		0x_92, 0x_AA, 0x_F6, 0x_4D, 0x_1B, 0x_88, 0x_FF, 0x_DA, 0x_07, 0x_7B,
	];
	const BASE: &[u8] = &[
		0x_DF, 0x_C5, 0x_44, 0x_47, 0x_8E, 0x_5F, 0x_A1, 0x_67, 0x_AD, 0x_26, 0x_90, 0x_E2, 0x_B3, 0x_BD, 0x_55,
		0x_6A, 0x_2A, 0x_AC, 0x_83, 0x_1B, 0x_BE, 0x_84, 0x_17, 0x_36, 0x_21, 0x_B7, 0x_EC, 0x_DE, 0x_DC, 0x_A8,
		0x_D3, 0x_EE, 0x_5B, 0x_92, 0x_58, 0x_16, 0x_D6, 0x_97, 0x_A3, 0x_12, 0x_98, 0x_54, 0x_C7, 0x_AE, 0x_FE,
		0x_BB, 0x_03, 0x_9E, 0x_B4, 0x_F2, 0x_2E, 0x_EA, 0x_C6, 0x_01, 0x_9D, 0x_31, 0x_1E, 0x_75, 0x_35, 0x_9C,
		0x_A0, 0x_A5, 0x_64, 0x_7D, 0x_5E, 0x_FA, 0x_7C, 0x_E0, 0x_FF, 0x_D9, 0x_2F, 0x_FC, 0x_06, 0x_CE, 0x_72,
		0x_EB, 0x_46, 0x_ED, 0x_E6, 0x_CC, 0x_4A, 0x_02, 0x_66, 0x_33, 0x_27, 0x_62, 0x_86, 0x_41, 0x_E9, 0x_F3,
		0x_BA, 0x_A4, 0x_F9, 0x_C2, 0x_53, 0x_E1, 0x_63, 0x_3B, 0x_34, 0x_18, 0x_95, 0x_6D, 0x_FB, 0x_F4, 0x_D7,
		0x_76, 0x_69, 0x_F6, 0x_F0, 0x_37, 0x_39, 0x_25, 0x_05, 0x_AF, 0x_A7, 0x_3E, 0x_94, 0x_38, 0x_F7, 0x_87,
		0x_3D, 0x_3A, 0x_B8, 0x_BC, 0x_85, 0x_43, 0x_7E, 0x_14, 0x_81, 0x_AA, 0x_C0, 0x_7B, 0x_1A, 0x_3C, 0x_E7,
		0x_10, 0x_07, 0x_E8, 0x_57, 0x_42, 0x_4D, 0x_6C, 0x_F5, 0x_9F, 0x_68, 0x_13, 0x_F1, 0x_DA, 0x_9B, 0x_29,
		0x_7A, 0x_CF, 0x_B5, 0x_B6, 0x_74, 0x_2C, 0x_EF, 0x_1C, 0x_BF, 0x_B0, 0x_8A, 0x_08, 0x_C3, 0x_71, 0x_5C,
		0x_91, 0x_80, 0x_1D, 0x_B2, 0x_51, 0x_D2, 0x_4E, 0x_40, 0x_73, 0x_A9, 0x_52, 0x_E5, 0x_F8, 0x_3F, 0x_4B,
		0x_88, 0x_0F, 0x_8C, 0x_C9, 0x_9A, 0x_23, 0x_48, 0x_28, 0x_7F, 0x_56, 0x_30, 0x_CA, 0x_C1,
	];

	helper(S, BASE, -43);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_979_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_979_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0B, 0x_09, 0x_09, 0x_0B, 0x_0C, 0x_20, 0x_0D, 0x_09, 0x_0C, 0x_09, 0x_0C, 0x_09, 0x_0B, 0x_20, 0x_0D,
		0x_0C, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_0A, 0x_09, 0x_0D, 0x_09, 0x_20, 0x_0D, 0x_0D, 0x_0B, 0x_0A, 0x_09,
		0x_09, 0x_0D, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B,
		0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F,
		0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_3F, 0x_D7,
		0x_71, 0x_0D, 0x_89, 0x_16, 0x_41, 0x_CA, 0x_5B, 0x_1D, 0x_11, 0x_FA, 0x_EB, 0x_E4, 0x_AE, 0x_4A, 0x_9B,
		0x_9E, 0x_72, 0x_BE, 0x_B8, 0x_26, 0x_E7, 0x_49, 0x_4C, 0x_48, 0x_19, 0x_C2, 0x_92, 0x_65, 0x_5A, 0x_D9,
		0x_48,
	];
	const BASE: &[u8] = &[
		0x_3F, 0x_B5, 0x_11, 0x_6C, 0x_79, 0x_D7, 0x_F6, 0x_9A, 0x_3A, 0x_E6, 0x_EA, 0x_9D, 0x_4B, 0x_96, 0x_71,
		0x_49, 0x_CE, 0x_89, 0x_23, 0x_DB, 0x_C5, 0x_A6, 0x_6A, 0x_06, 0x_26, 0x_1C, 0x_14, 0x_D2, 0x_1D, 0x_2C,
		0x_C3, 0x_FD, 0x_7C, 0x_B2, 0x_62, 0x_98, 0x_E9, 0x_C8, 0x_7B, 0x_A9, 0x_C1, 0x_6F, 0x_E1, 0x_86, 0x_7D,
		0x_93, 0x_CB, 0x_FA, 0x_BB, 0x_CA, 0x_C6, 0x_E3, 0x_44, 0x_8D, 0x_C2, 0x_36, 0x_22, 0x_94, 0x_61, 0x_0E,
		0x_92, 0x_35, 0x_84, 0x_8F, 0x_57, 0x_B3, 0x_8A, 0x_64, 0x_95, 0x_AE, 0x_C9, 0x_01, 0x_63, 0x_A8, 0x_1B,
		0x_5F, 0x_5B, 0x_7E, 0x_D4, 0x_ED, 0x_59, 0x_9E, 0x_E2, 0x_0F, 0x_D6, 0x_7F, 0x_5E, 0x_6E, 0x_33, 0x_E7,
		0x_07, 0x_AD, 0x_24, 0x_6B, 0x_F1, 0x_28, 0x_10, 0x_EE, 0x_45, 0x_5A, 0x_5D, 0x_C4, 0x_90, 0x_BE, 0x_3D,
		0x_DC, 0x_88, 0x_47, 0x_1A, 0x_4A, 0x_4E, 0x_BD, 0x_5C, 0x_60, 0x_65, 0x_AB, 0x_D9, 0x_25, 0x_69, 0x_85,
		0x_70, 0x_B0, 0x_A1, 0x_8B, 0x_F8, 0x_3E, 0x_EB, 0x_A7, 0x_2F, 0x_82, 0x_68, 0x_19, 0x_F7, 0x_2A, 0x_66,
		0x_FF, 0x_C0, 0x_E5, 0x_9F, 0x_52, 0x_D5, 0x_B8, 0x_F4, 0x_31, 0x_8E, 0x_30, 0x_A2, 0x_F2, 0x_05, 0x_AC,
		0x_9C, 0x_8C, 0x_4C, 0x_76, 0x_21, 0x_1F, 0x_FB, 0x_D0, 0x_97, 0x_B1, 0x_9B, 0x_99, 0x_D1, 0x_80, 0x_A0,
		0x_3C, 0x_38, 0x_72, 0x_2E, 0x_7A, 0x_CF, 0x_81, 0x_DD, 0x_32, 0x_53, 0x_CD, 0x_55, 0x_75, 0x_48, 0x_B7,
		0x_12, 0x_A3, 0x_54, 0x_E4, 0x_E0, 0x_18, 0x_13, 0x_16, 0x_B9, 0x_C7, 0x_41, 0x_91, 0x_51,
	];

	helper(S, BASE, -979);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_1_820_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_1_820_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_20, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_20, 0x_0B, 0x_09,
		0x_0B, 0x_0D, 0x_0D, 0x_0A, 0x_0A, 0x_20, 0x_0D, 0x_0B, 0x_0D, 0x_20, 0x_0D, 0x_0B, 0x_0C, 0x_09, 0x_09,
		0x_0C, 0x_0B, 0x_09, 0x_20, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10,
		0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_10, 0x_D4, 0x_76, 0x_3B, 0x_D4, 0x_D1, 0x_CE, 0x_24,
		0x_59, 0x_6E, 0x_4A, 0x_4D, 0x_C2, 0x_CA, 0x_BC, 0x_65, 0x_4A, 0x_26, 0x_59, 0x_50, 0x_9B, 0x_97, 0x_89,
		0x_12, 0x_8E, 0x_8B, 0x_F2, 0x_A5, 0x_18,
	];
	const BASE: &[u8] = &[
		0x_10, 0x_AB, 0x_3E, 0x_19, 0x_B3, 0x_9C, 0x_16, 0x_A0, 0x_65, 0x_D4, 0x_DB, 0x_C4, 0x_91, 0x_24, 0x_78,
		0x_7B, 0x_83, 0x_1D, 0x_07, 0x_51, 0x_BE, 0x_FB, 0x_5A, 0x_A3, 0x_BD, 0x_B4, 0x_7E, 0x_D3, 0x_26, 0x_E1,
		0x_4F, 0x_E2, 0x_FD, 0x_11, 0x_E8, 0x_38, 0x_E6, 0x_4A, 0x_A6, 0x_88, 0x_55, 0x_C5, 0x_CA, 0x_5B, 0x_86,
		0x_AA, 0x_02, 0x_58, 0x_E3, 0x_B7, 0x_15, 0x_A8, 0x_A5, 0x_8C, 0x_6F, 0x_F2, 0x_D7, 0x_85, 0x_EB, 0x_B1,
		0x_DD, 0x_4C, 0x_31, 0x_97, 0x_4E, 0x_47, 0x_46, 0x_ED, 0x_C6, 0x_9A, 0x_BB, 0x_06, 0x_FE, 0x_B9, 0x_D9,
		0x_87, 0x_90, 0x_6B, 0x_CE, 0x_40, 0x_CC, 0x_EA, 0x_18, 0x_76, 0x_7D, 0x_C1, 0x_E7, 0x_FF, 0x_73, 0x_37,
		0x_42, 0x_EE, 0x_1E, 0x_A7, 0x_77, 0x_4D, 0x_3A, 0x_A2, 0x_14, 0x_92, 0x_5D, 0x_B6, 0x_F5, 0x_60, 0x_52,
		0x_69, 0x_68, 0x_9B, 0x_12, 0x_59, 0x_79, 0x_B8, 0x_03, 0x_5C, 0x_7C, 0x_71, 0x_35, 0x_89, 0x_74, 0x_B5,
		0x_50, 0x_A9, 0x_8F, 0x_F0, 0x_2A, 0x_C9, 0x_8B, 0x_04, 0x_C2, 0x_33, 0x_7A, 0x_CF, 0x_21, 0x_D6, 0x_C8,
		0x_2C, 0x_29, 0x_54, 0x_7F, 0x_57, 0x_9F, 0x_64, 0x_43, 0x_93, 0x_23, 0x_6A, 0x_05, 0x_67, 0x_B0, 0x_99,
		0x_81, 0x_F9, 0x_CB, 0x_D2, 0x_25, 0x_61, 0x_D5, 0x_3C, 0x_FC, 0x_28, 0x_32, 0x_3D, 0x_AC, 0x_6D, 0x_56,
		0x_E5, 0x_AF, 0x_08, 0x_BF, 0x_95, 0x_63, 0x_DA, 0x_F8, 0x_0F, 0x_1C, 0x_5F, 0x_D1, 0x_6E, 0x_53, 0x_72,
		0x_5E, 0x_1F, 0x_A1, 0x_2E, 0x_13, 0x_BC, 0x_F6, 0x_0E, 0x_8E, 0x_45, 0x_1A, 0x_3F, 0x_F4,
	];

	helper(S, BASE, -1_820);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_36_724_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_36_724_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0D, 0x_09, 0x_0A, 0x_0C, 0x_20,
		0x_0D, 0x_20, 0x_0A, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_0A, 0x_0B, 0x_09, 0x_0A, 0x_0D, 0x_0C, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_34, 0x_34, 0x_34, 0x_34,
		0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_34, 0x_4E, 0x_EB, 0x_29, 0x_EE, 0x_85,
		0x_03, 0x_EB,
	];
	const BASE: &[u8] = &[
		0x_34, 0x_C1, 0x_95, 0x_AB, 0x_A5, 0x_9F, 0x_15, 0x_F1, 0x_76, 0x_F6, 0x_A2, 0x_96, 0x_5C, 0x_A7, 0x_27,
		0x_19, 0x_6A, 0x_26, 0x_A8, 0x_72, 0x_D0, 0x_5A, 0x_69, 0x_C3, 0x_21, 0x_46, 0x_CA, 0x_BB, 0x_FF, 0x_65,
		0x_7F, 0x_CD, 0x_6D, 0x_85, 0x_10, 0x_88, 0x_44, 0x_40, 0x_F3, 0x_59, 0x_9D, 0x_52, 0x_01, 0x_CC, 0x_8F,
		0x_E5, 0x_58, 0x_A0, 0x_CF, 0x_ED, 0x_6F, 0x_EA, 0x_F5, 0x_33, 0x_EB, 0x_1F, 0x_EE, 0x_D2, 0x_B1, 0x_16,
		0x_B9, 0x_BC, 0x_28, 0x_22, 0x_64, 0x_DE, 0x_E6, 0x_49, 0x_FC, 0x_DD, 0x_75, 0x_2E, 0x_5D, 0x_D9, 0x_0E,
		0x_50, 0x_7B, 0x_AE, 0x_B4, 0x_D4, 0x_4D, 0x_93, 0x_B5, 0x_AD, 0x_DA, 0x_11, 0x_7A, 0x_CE, 0x_A4, 0x_25,
		0x_C0, 0x_AF, 0x_FB, 0x_F8, 0x_8C, 0x_60, 0x_37, 0x_DF, 0x_D3, 0x_B3, 0x_67, 0x_35, 0x_1A, 0x_B0, 0x_91,
		0x_14, 0x_1D, 0x_B7, 0x_80, 0x_8D, 0x_E0, 0x_FA, 0x_FE, 0x_D7, 0x_8B, 0x_BA, 0x_08, 0x_D1, 0x_79, 0x_EC,
		0x_DC, 0x_EF, 0x_5E, 0x_9C, 0x_C8, 0x_03, 0x_38, 0x_63, 0x_AC, 0x_E4, 0x_90, 0x_12, 0x_9A, 0x_3C, 0x_2C,
		0x_4B, 0x_70, 0x_9E, 0x_DB, 0x_73, 0x_C6, 0x_7E, 0x_1C, 0x_D8, 0x_23, 0x_C2, 0x_3F, 0x_A9, 0x_F9, 0x_39,
		0x_E8, 0x_83, 0x_AA, 0x_31, 0x_84, 0x_0F, 0x_A1, 0x_7D, 0x_8E, 0x_57, 0x_4F, 0x_97, 0x_B6, 0x_4C, 0x_87,
		0x_45, 0x_F2, 0x_81, 0x_C5, 0x_1B, 0x_3A, 0x_05, 0x_47, 0x_A3, 0x_3E, 0x_2A, 0x_66, 0x_C9, 0x_98, 0x_42,
		0x_FD, 0x_61, 0x_B8, 0x_4A, 0x_1E, 0x_A6, 0x_2F, 0x_62, 0x_9B, 0x_D5, 0x_4E, 0x_F7, 0x_E1,
	];

	helper(S, BASE, -36_724);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_314_644_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_314_644_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0C, 0x_0D, 0x_0C, 0x_0B, 0x_0B, 0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_20, 0x_09, 0x_20, 0x_0D, 0x_0C,
		0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_0B, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_0D, 0x_0C, 0x_0D, 0x_0D, 0x_0C, 0x_0D,
		0x_0D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_89, 0x_89, 0x_3B, 0x_46, 0x_2F, 0x_20,
		0x_90, 0x_26, 0x_D8, 0x_27, 0x_C7, 0x_03, 0x_BC, 0x_63, 0x_45, 0x_D4, 0x_BC, 0x_F3, 0x_8B, 0x_CF, 0x_CF,
		0x_FD, 0x_81, 0x_57, 0x_44, 0x_EF, 0x_E8, 0x_4C, 0x_E9, 0x_6E, 0x_E7, 0x_5D, 0x_9F, 0x_AA, 0x_03, 0x_4D,
		0x_87, 0x_D0, 0x_7A, 0x_96, 0x_EE, 0x_C1, 0x_4C,
	];
	const BASE: &[u8] = &[
		0x_89, 0x_EE, 0x_34, 0x_AA, 0x_7D, 0x_35, 0x_6B, 0x_56, 0x_3B, 0x_A9, 0x_F9, 0x_EF, 0x_F3, 0x_75, 0x_E4,
		0x_05, 0x_9C, 0x_D1, 0x_A5, 0x_68, 0x_44, 0x_D6, 0x_94, 0x_25, 0x_8D, 0x_53, 0x_F4, 0x_C7, 0x_7A, 0x_D4,
		0x_BD, 0x_C6, 0x_DA, 0x_A8, 0x_8C, 0x_AE, 0x_37, 0x_01, 0x_49, 0x_CD, 0x_D8, 0x_74, 0x_43, 0x_98, 0x_A7,
		0x_41, 0x_C4, 0x_D3, 0x_52, 0x_2A, 0x_C3, 0x_E7, 0x_DD, 0x_AC, 0x_2F, 0x_A3, 0x_81, 0x_DC, 0x_32, 0x_8B,
		0x_18, 0x_27, 0x_9F, 0x_A1, 0x_2C, 0x_6E, 0x_21, 0x_07, 0x_82, 0x_48, 0x_1C, 0x_AF, 0x_17, 0x_45, 0x_B8,
		0x_84, 0x_BB, 0x_6F, 0x_1D, 0x_67, 0x_2E, 0x_D0, 0x_7E, 0x_4E, 0x_92, 0x_31, 0x_46, 0x_96, 0x_83, 0x_3D,
		0x_3C, 0x_66, 0x_D2, 0x_8F, 0x_ED, 0x_50, 0x_F5, 0x_CE, 0x_4D, 0x_1A, 0x_B2, 0x_70, 0x_DB, 0x_9A, 0x_E1,
		0x_A6, 0x_B5, 0x_26, 0x_16, 0x_63, 0x_5D, 0x_0E, 0x_97, 0x_3F, 0x_06, 0x_F6, 0x_22, 0x_33, 0x_90, 0x_8E,
		0x_1E, 0x_42, 0x_6A, 0x_9B, 0x_51, 0x_72, 0x_C0, 0x_5E, 0x_FE, 0x_E5, 0x_69, 0x_4B, 0x_28, 0x_4F, 0x_5C,
		0x_15, 0x_03, 0x_BC, 0x_D5, 0x_CA, 0x_02, 0x_FB, 0x_6D, 0x_BA, 0x_D7, 0x_CF, 0x_13, 0x_3E, 0x_BE, 0x_87,
		0x_04, 0x_54, 0x_88, 0x_58, 0x_7C, 0x_E6, 0x_8A, 0x_C5, 0x_C1, 0x_39, 0x_B1, 0x_36, 0x_30, 0x_23, 0x_CC,
		0x_47, 0x_CB, 0x_BF, 0x_79, 0x_40, 0x_B6, 0x_B3, 0x_5A, 0x_0F, 0x_99, 0x_3A, 0x_7F, 0x_85, 0x_08, 0x_E8,
		0x_62, 0x_4C, 0x_57, 0x_F0, 0x_B0, 0x_B7, 0x_DF, 0x_AD, 0x_F2, 0x_E9, 0x_EB, 0x_29, 0x_FD,
	];

	helper(S, BASE, -314_644);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_255_447_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_255_447_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_0D, 0x_20, 0x_20, 0x_0D, 0x_09, 0x_09, 0x_0A, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0B,
		0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_09, 0x_0D, 0x_09, 0x_0B, 0x_0D,
		0x_0D, 0x_0A, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_3E, 0x_5C, 0x_5E, 0x_16, 0x_C3,
		0x_09, 0x_40, 0x_D8, 0x_D2, 0x_41, 0x_52, 0x_A3, 0x_FB,
	];
	const BASE: &[u8] = &[
		0x_3E, 0x_5C, 0x_B1, 0x_51, 0x_04, 0x_85, 0x_9F, 0x_4A, 0x_A8, 0x_3F, 0x_A2, 0x_12, 0x_9C, 0x_24, 0x_74,
		0x_DC, 0x_B5, 0x_52, 0x_66, 0x_37, 0x_EB, 0x_7E, 0x_CD, 0x_C1, 0x_6B, 0x_68, 0x_93, 0x_A9, 0x_F2, 0x_4D,
		0x_76, 0x_07, 0x_2C, 0x_BD, 0x_B0, 0x_E6, 0x_30, 0x_2A, 0x_08, 0x_C5, 0x_6C, 0x_D4, 0x_29, 0x_3A, 0x_5A,
		0x_9D, 0x_18, 0x_27, 0x_F1, 0x_80, 0x_F5, 0x_D8, 0x_71, 0x_81, 0x_A7, 0x_5E, 0x_E2, 0x_98, 0x_F6, 0x_EE,
		0x_D1, 0x_C7, 0x_39, 0x_83, 0x_7A, 0x_B3, 0x_B6, 0x_96, 0x_FB, 0x_05, 0x_AF, 0x_46, 0x_AC, 0x_40, 0x_8A,
		0x_95, 0x_42, 0x_25, 0x_ED, 0x_D7, 0x_CF, 0x_2F, 0x_73, 0x_63, 0x_8D, 0x_CA, 0x_23, 0x_DD, 0x_A4, 0x_14,
		0x_11, 0x_16, 0x_0E, 0x_CE, 0x_44, 0x_D2, 0x_36, 0x_FA, 0x_E4, 0x_F7, 0x_AB, 0x_41, 0x_17, 0x_B7, 0x_60,
		0x_A5, 0x_61, 0x_89, 0x_22, 0x_90, 0x_59, 0x_B4, 0x_F3, 0x_67, 0x_15, 0x_D5, 0x_43, 0x_35, 0x_92, 0x_7C,
		0x_94, 0x_BA, 0x_EF, 0x_6F, 0x_DB, 0x_01, 0x_5F, 0x_57, 0x_1E, 0x_C0, 0x_B2, 0x_02, 0x_C3, 0x_13, 0x_6A,
		0x_F0, 0x_FF, 0x_0F, 0x_DE, 0x_06, 0x_69, 0x_C8, 0x_E3, 0x_4B, 0x_3B, 0x_88, 0x_31, 0x_6D, 0x_4C, 0x_D0,
		0x_9A, 0x_7B, 0x_75, 0x_A1, 0x_33, 0x_86, 0x_E1, 0x_62, 0x_A3, 0x_19, 0x_1C, 0x_D9, 0x_AA, 0x_B9, 0x_77,
		0x_5D, 0x_BB, 0x_50, 0x_CB, 0x_1B, 0x_F4, 0x_4E, 0x_F9, 0x_21, 0x_3D, 0x_53, 0x_26, 0x_BF, 0x_1F, 0x_D6,
		0x_D3, 0x_70, 0x_FE, 0x_49, 0x_7D, 0x_48, 0x_FD, 0x_38, 0x_87, 0x_E9, 0x_E0, 0x_65, 0x_2E,
	];

	helper(S, BASE, -9_255_447);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_63_020_854_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_63_020_854_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0C, 0x_20, 0x_09, 0x_0B, 0x_20, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0A, 0x_0B, 0x_20, 0x_0D, 0x_09, 0x_09,
		0x_09, 0x_20, 0x_0B, 0x_0A, 0x_09, 0x_20, 0x_0A, 0x_0B, 0x_0D, 0x_20, 0x_0B, 0x_0B, 0x_0D, 0x_0A, 0x_0D,
		0x_0D, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_38, 0x_38, 0x_D7, 0x_FE, 0x_A2, 0x_4A, 0x_EC,
		0x_34, 0x_E3, 0x_6D, 0x_FD,
	];
	const BASE: &[u8] = &[
		0x_38, 0x_C5, 0x_7F, 0x_26, 0x_25, 0x_C7, 0x_05, 0x_E2, 0x_D7, 0x_70, 0x_CF, 0x_15, 0x_F1, 0x_49, 0x_8C,
		0x_86, 0x_82, 0x_66, 0x_10, 0x_1E, 0x_27, 0x_75, 0x_7C, 0x_79, 0x_BC, 0x_51, 0x_81, 0x_EB, 0x_FB, 0x_DB,
		0x_87, 0x_5B, 0x_69, 0x_62, 0x_B6, 0x_58, 0x_7B, 0x_7A, 0x_CE, 0x_CA, 0x_80, 0x_B7, 0x_56, 0x_98, 0x_E8,
		0x_91, 0x_C8, 0x_C2, 0x_29, 0x_5E, 0x_68, 0x_E9, 0x_B2, 0x_A0, 0x_FC, 0x_8D, 0x_73, 0x_B9, 0x_EE, 0x_4E,
		0x_02, 0x_FA, 0x_8B, 0x_DD, 0x_C3, 0x_B1, 0x_AB, 0x_47, 0x_96, 0x_34, 0x_60, 0x_77, 0x_11, 0x_EA, 0x_53,
		0x_6E, 0x_A5, 0x_D9, 0x_B4, 0x_24, 0x_89, 0x_A3, 0x_BF, 0x_0F, 0x_85, 0x_9C, 0x_9A, 0x_D2, 0x_A9, 0x_6D,
		0x_94, 0x_D6, 0x_30, 0x_4C, 0x_78, 0x_D5, 0x_C6, 0x_37, 0x_EF, 0x_DE, 0x_50, 0x_44, 0x_08, 0x_83, 0x_5F,
		0x_F0, 0x_88, 0x_7D, 0x_14, 0x_FF, 0x_4F, 0x_22, 0x_0E, 0x_5D, 0x_52, 0x_5A, 0x_61, 0x_AF, 0x_CC, 0x_7E,
		0x_AA, 0x_36, 0x_6F, 0x_1F, 0x_17, 0x_13, 0x_D1, 0x_8A, 0x_04, 0x_E5, 0x_72, 0x_39, 0x_9D, 0x_97, 0x_4B,
		0x_63, 0x_ED, 0x_3C, 0x_F6, 0x_42, 0x_21, 0x_99, 0x_9E, 0x_E4, 0x_48, 0x_BD, 0x_1C, 0x_FE, 0x_E3, 0x_B8,
		0x_BB, 0x_FD, 0x_07, 0x_6C, 0x_90, 0x_2C, 0x_8E, 0x_84, 0x_E1, 0x_32, 0x_AE, 0x_95, 0x_18, 0x_1A, 0x_28,
		0x_41, 0x_03, 0x_B3, 0x_01, 0x_A2, 0x_6A, 0x_6B, 0x_9F, 0x_76, 0x_F7, 0x_1D, 0x_D3, 0x_43, 0x_4A, 0x_D8,
		0x_19, 0x_DC, 0x_2E, 0x_8F, 0x_AD, 0x_C1, 0x_2A, 0x_D4, 0x_67, 0x_40, 0x_1B, 0x_3D, 0x_35,
	];

	helper(S, BASE, -63_020_854);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_513_896_209_in_base_193_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_513_896_209_in_base_193_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0D, 0x_09, 0x_09, 0x_0B, 0x_0A, 0x_0A, 0x_0D, 0x_0D, 0x_20, 0x_09, 0x_0C, 0x_0C, 0x_20, 0x_0A,
		0x_09, 0x_0C, 0x_0D, 0x_09, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_20, 0x_0C, 0x_2B,
		0x_2B, 0x_2D, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11,
		0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_11, 0x_ED, 0x_26, 0x_70, 0x_47, 0x_0D, 0x_B0,
		0x_91, 0x_1B, 0x_CF, 0x_23, 0x_97, 0x_A0, 0x_A3, 0x_AC, 0x_E8, 0x_AC, 0x_D0, 0x_C5, 0x_56, 0x_A0, 0x_8B,
		0x_5C, 0x_7B, 0x_75, 0x_66, 0x_CD, 0x_15, 0x_44, 0x_16, 0x_FD, 0x_94, 0x_88, 0x_5F, 0x_34, 0x_10, 0x_26,
		0x_C3, 0x_A1, 0x_CB, 0x_13, 0x_E6, 0x_C4, 0x_98, 0x_A9,
	];
	const BASE: &[u8] = &[
		0x_11, 0x_7F, 0x_F3, 0x_DF, 0x_A1, 0x_D8, 0x_96, 0x_BC, 0x_3C, 0x_FB, 0x_BD, 0x_98, 0x_A7, 0x_8E, 0x_87,
		0x_10, 0x_97, 0x_C9, 0x_5C, 0x_F8, 0x_EE, 0x_E0, 0x_3F, 0x_2E, 0x_29, 0x_45, 0x_B0, 0x_71, 0x_9A, 0x_54,
		0x_DD, 0x_1F, 0x_7A, 0x_60, 0x_B8, 0x_E3, 0x_9C, 0x_AD, 0x_35, 0x_EC, 0x_B4, 0x_1D, 0x_43, 0x_A9, 0x_7B,
		0x_85, 0x_70, 0x_1A, 0x_16, 0x_41, 0x_A3, 0x_D5, 0x_49, 0x_BB, 0x_36, 0x_31, 0x_F7, 0x_D9, 0x_F4, 0x_E9,
		0x_9E, 0x_28, 0x_A6, 0x_E6, 0x_2F, 0x_01, 0x_B9, 0x_B1, 0x_8A, 0x_50, 0x_32, 0x_ED, 0x_E5, 0x_02, 0x_5D,
		0x_A4, 0x_9B, 0x_58, 0x_07, 0x_91, 0x_23, 0x_C6, 0x_66, 0x_72, 0x_CF, 0x_3A, 0x_6B, 0x_0F, 0x_89, 0x_AF,
		0x_69, 0x_59, 0x_0E, 0x_26, 0x_79, 0x_17, 0x_57, 0x_C3, 0x_A5, 0x_CD, 0x_6A, 0x_1E, 0x_90, 0x_2C, 0x_38,
		0x_FF, 0x_27, 0x_42, 0x_2A, 0x_FC, 0x_A8, 0x_B3, 0x_6C, 0x_E8, 0x_74, 0x_39, 0x_6E, 0x_06, 0x_15, 0x_14,
		0x_B2, 0x_D4, 0x_EB, 0x_8C, 0x_34, 0x_3B, 0x_D2, 0x_47, 0x_44, 0x_6D, 0x_56, 0x_EA, 0x_8B, 0x_DC, 0x_DB,
		0x_1B, 0x_5F, 0x_03, 0x_AE, 0x_19, 0x_F6, 0x_22, 0x_CA, 0x_C1, 0x_EF, 0x_9F, 0x_68, 0x_A2, 0x_CB, 0x_F2,
		0x_88, 0x_51, 0x_08, 0x_75, 0x_83, 0x_E2, 0x_C7, 0x_C2, 0x_8F, 0x_C4, 0x_E4, 0x_B5, 0x_55, 0x_AC, 0x_4A,
		0x_3D, 0x_FA, 0x_7D, 0x_D0, 0x_5B, 0x_30, 0x_6F, 0x_BE, 0x_86, 0x_F9, 0x_FD, 0x_7C, 0x_13, 0x_C0, 0x_48,
		0x_A0, 0x_CC, 0x_61, 0x_E1, 0x_21, 0x_46, 0x_D3, 0x_94, 0x_12, 0x_63, 0x_67, 0x_C5, 0x_5A,
	];

	helper(S, BASE, -513_896_209);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_3_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_3_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03,
		0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_03, 0x_88, 0x_2D, 0x_28,
		0x_D6, 0x_BB, 0x_F2, 0x_95, 0x_56, 0x_36, 0x_8A, 0x_EF, 0x_76, 0x_A6, 0x_18, 0x_34, 0x_67, 0x_BD, 0x_BA,
		0x_2C, 0x_36, 0x_CC, 0x_5B, 0x_30, 0x_96, 0x_C9, 0x_69, 0x_A7, 0x_58, 0x_A7, 0x_EF, 0x_76, 0x_5B, 0x_C8,
		0x_87, 0x_06, 0x_D8, 0x_38, 0x_3D,
	];
	const BASE: &[u8] = &[
		0x_03, 0x_64, 0x_59, 0x_88, 0x_93, 0x_C8, 0x_05, 0x_B2, 0x_C5, 0x_F9, 0x_46, 0x_E5, 0x_26, 0x_BB, 0x_47,
		0x_C1, 0x_D6, 0x_84, 0x_54, 0x_B0, 0x_22, 0x_37, 0x_8E, 0x_21, 0x_E0, 0x_BC, 0x_32, 0x_E1, 0x_70, 0x_50,
		0x_ED, 0x_3A, 0x_D2, 0x_7E, 0x_72, 0x_9E, 0x_83, 0x_6B, 0x_28, 0x_63, 0x_60, 0x_FC, 0x_31, 0x_4A, 0x_CB,
		0x_4C, 0x_62, 0x_91, 0x_9A, 0x_01, 0x_9B, 0x_BA, 0x_5A, 0x_74, 0x_1C, 0x_B1, 0x_8A, 0x_E9, 0x_DF, 0x_76,
		0x_6D, 0x_AD, 0x_94, 0x_2A, 0x_DA, 0x_D4, 0x_5B, 0x_CA, 0x_5E, 0x_F1, 0x_D0, 0x_FA, 0x_DB, 0x_27, 0x_36,
		0x_EA, 0x_92, 0x_FB, 0x_B7, 0x_C3, 0x_F0, 0x_16, 0x_7D, 0x_61, 0x_EE, 0x_D5, 0x_6A, 0x_8F, 0x_85, 0x_E8,
		0x_89, 0x_A0, 0x_4E, 0x_C7, 0x_81, 0x_24, 0x_13, 0x_9C, 0x_33, 0x_69, 0x_7C, 0x_1B, 0x_45, 0x_D7, 0x_6E,
		0x_44, 0x_D3, 0x_CD, 0x_18, 0x_2E, 0x_3C, 0x_39, 0x_9D, 0x_D1, 0x_41, 0x_F6, 0x_B5, 0x_A5, 0x_B9, 0x_DD,
		0x_1E, 0x_AC, 0x_E4, 0x_2C, 0x_11, 0x_4F, 0x_77, 0x_A1, 0x_51, 0x_2F, 0x_23, 0x_FF, 0x_07, 0x_B6, 0x_EF,
		0x_80, 0x_DC, 0x_1D, 0x_C2, 0x_7A, 0x_A9, 0x_78, 0x_4B, 0x_D9, 0x_F4, 0x_17, 0x_14, 0x_CF, 0x_EC, 0x_53,
		0x_BF, 0x_71, 0x_90, 0x_40, 0x_B4, 0x_C0, 0x_AE, 0x_42, 0x_67, 0x_04, 0x_49, 0x_EB, 0x_CE, 0x_F3, 0x_A8,
		0x_AB, 0x_19, 0x_3B, 0x_8B, 0x_C9, 0x_87, 0x_0E, 0x_AF, 0x_1F, 0x_29, 0x_35, 0x_56, 0x_99, 0x_E6, 0x_95,
		0x_AA, 0x_43, 0x_6F, 0x_A2, 0x_06, 0x_E3, 0x_5F, 0x_25, 0x_6C, 0x_57, 0x_3D, 0x_73, 0x_15, 0x_DE, 0x_86,
		0x_97, 0x_E7, 0x_08, 0x_A4, 0x_79, 0x_E2, 0x_F5, 0x_10, 0x_58, 0x_7F, 0x_BD, 0x_F2, 0x_F7, 0x_FE, 0x_12,
		0x_30, 0x_BE, 0x_B3, 0x_9F, 0x_B8, 0x_A7, 0x_5D, 0x_8C, 0x_4D, 0x_82, 0x_7B, 0x_34, 0x_F8, 0x_48, 0x_A3,
		0x_65, 0x_D8, 0x_0F, 0x_38, 0x_3F, 0x_1A, 0x_3E, 0x_96, 0x_C4, 0x_5C, 0x_FD, 0x_55, 0x_66, 0x_CC, 0x_52,
		0x_8D, 0x_98, 0x_A6, 0x_C6, 0x_75, 0x_02, 0x_68,
	];

	helper(S, BASE, -3);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_41_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_41_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_0C, 0x_0A, 0x_0B, 0x_0C, 0x_09, 0x_09, 0x_0D, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0D,
		0x_0B, 0x_0D, 0x_0A, 0x_0C, 0x_09, 0x_0B, 0x_0A, 0x_20, 0x_0B, 0x_0B, 0x_20, 0x_20, 0x_0A, 0x_0D, 0x_2B,
		0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_8A, 0x_8A, 0x_8A,
		0x_8A, 0x_8A, 0x_58, 0x_0C, 0x_1F, 0x_23, 0x_3B, 0x_10, 0x_C9, 0x_78, 0x_55, 0x_9E, 0x_19, 0x_CE, 0x_54,
		0x_D9, 0x_CE, 0x_B9, 0x_7C, 0x_6D, 0x_6A, 0x_11, 0x_E2, 0x_BC, 0x_22, 0x_59, 0x_76, 0x_99, 0x_70, 0x_16,
		0x_3E, 0x_46,
	];
	const BASE: &[u8] = &[
		0x_8A, 0x_7E, 0x_A8, 0x_F3, 0x_E4, 0x_8F, 0x_8E, 0x_30, 0x_3F, 0x_B3, 0x_78, 0x_C1, 0x_68, 0x_5C, 0x_C4,
		0x_D5, 0x_6A, 0x_07, 0x_AC, 0x_B6, 0x_93, 0x_A5, 0x_95, 0x_74, 0x_7B, 0x_9B, 0x_6C, 0x_E7, 0x_86, 0x_37,
		0x_F5, 0x_7C, 0x_B9, 0x_60, 0x_6F, 0x_27, 0x_F4, 0x_CA, 0x_0F, 0x_77, 0x_33, 0x_58, 0x_67, 0x_D9, 0x_15,
		0x_21, 0x_DF, 0x_06, 0x_28, 0x_1C, 0x_F0, 0x_AE, 0x_F8, 0x_A0, 0x_72, 0x_1D, 0x_83, 0x_39, 0x_2C, 0x_D7,
		0x_EB, 0x_87, 0x_E6, 0x_D0, 0x_96, 0x_04, 0x_5B, 0x_2E, 0x_E5, 0x_3D, 0x_A3, 0x_E0, 0x_EC, 0x_7A, 0x_03,
		0x_70, 0x_41, 0x_8B, 0x_1B, 0x_14, 0x_82, 0x_EA, 0x_66, 0x_FD, 0x_CE, 0x_7D, 0x_9E, 0x_51, 0x_36, 0x_19,
		0x_23, 0x_9D, 0x_71, 0x_BF, 0x_7F, 0x_C2, 0x_AF, 0x_F9, 0x_A4, 0x_12, 0x_ED, 0x_4A, 0x_9A, 0x_5E, 0x_C3,
		0x_98, 0x_80, 0x_31, 0x_48, 0x_0E, 0x_DD, 0x_D2, 0x_3A, 0x_B4, 0x_11, 0x_BA, 0x_69, 0x_01, 0x_59, 0x_35,
		0x_38, 0x_4F, 0x_A9, 0x_A6, 0x_FF, 0x_52, 0x_76, 0x_16, 0x_8C, 0x_B0, 0x_22, 0x_3B, 0x_D4, 0x_B7, 0x_50,
		0x_E1, 0x_BC, 0x_A1, 0x_6E, 0x_C6, 0x_EF, 0x_5F, 0x_40, 0x_75, 0x_44, 0x_05, 0x_E3, 0x_FC, 0x_FA, 0x_DC,
		0x_53, 0x_18, 0x_90, 0x_9C, 0x_DA, 0x_47, 0x_26, 0x_55, 0x_94, 0x_57, 0x_E8, 0x_91, 0x_2A, 0x_C0, 0x_85,
		0x_AB, 0x_73, 0x_3C, 0x_88, 0x_5A, 0x_02, 0x_81, 0x_6B, 0x_F1, 0x_BB, 0x_43, 0x_C8, 0x_79, 0x_AD, 0x_64,
		0x_CC, 0x_3E, 0x_62, 0x_DE, 0x_B5, 0x_FB, 0x_D3, 0x_B1, 0x_56, 0x_46, 0x_1E, 0x_DB, 0x_10, 0x_13, 0x_D8,
		0x_D6, 0x_4B, 0x_E2, 0x_84, 0x_EE, 0x_F2, 0x_54, 0x_AA, 0x_9F, 0x_A7, 0x_C9, 0x_B8, 0x_61, 0x_63, 0x_F7,
		0x_4C, 0x_08, 0x_45, 0x_65, 0x_D1, 0x_34, 0x_6D, 0x_25, 0x_24, 0x_4D, 0x_8D, 0x_CB, 0x_97, 0x_E9, 0x_99,
		0x_BD, 0x_89, 0x_2F, 0x_4E, 0x_BE, 0x_F6, 0x_C7, 0x_42, 0x_CF, 0x_FE, 0x_1A, 0x_17, 0x_A2, 0x_32, 0x_B2,
		0x_1F, 0x_49, 0x_29, 0x_92, 0x_5D, 0x_C5, 0x_CD,
	];

	helper(S, BASE, -41);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_577_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_577_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0C, 0x_0B, 0x_0C, 0x_0C, 0x_09, 0x_0B, 0x_0B, 0x_0C, 0x_0B, 0x_09, 0x_0C, 0x_0D, 0x_0B,
		0x_0B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_41, 0x_41, 0x_41,
		0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_41, 0x_5C, 0x_83, 0x_0A, 0x_73, 0x_45, 0x_60, 0x_9A,
		0x_F6, 0x_DA, 0x_B3, 0x_3B, 0x_C1, 0x_C9, 0x_75, 0x_B3,
	];
	const BASE: &[u8] = &[
		0x_41, 0x_EB, 0x_5C, 0x_42, 0x_22, 0x_30, 0x_BE, 0x_90, 0x_A8, 0x_E8, 0x_80, 0x_B9, 0x_FD, 0x_69, 0x_CB,
		0x_B1, 0x_85, 0x_44, 0x_B2, 0x_E2, 0x_6B, 0x_C6, 0x_5A, 0x_1D, 0x_23, 0x_FE, 0x_DD, 0x_07, 0x_47, 0x_76,
		0x_4A, 0x_24, 0x_68, 0x_6E, 0x_21, 0x_FA, 0x_04, 0x_59, 0x_6C, 0x_2C, 0x_36, 0x_98, 0x_8C, 0x_16, 0x_A7,
		0x_96, 0x_5F, 0x_49, 0x_D4, 0x_45, 0x_72, 0x_F3, 0x_DC, 0x_95, 0x_BA, 0x_E1, 0x_A3, 0x_52, 0x_7C, 0x_DE,
		0x_9B, 0x_28, 0x_DB, 0x_5B, 0x_C8, 0x_57, 0x_11, 0x_B3, 0x_AD, 0x_E9, 0x_8A, 0x_A9, 0x_14, 0x_F2, 0x_B7,
		0x_1A, 0x_CC, 0x_89, 0x_58, 0x_34, 0x_D8, 0x_3B, 0x_29, 0x_83, 0x_62, 0x_C3, 0x_9C, 0x_ED, 0x_F4, 0x_84,
		0x_EC, 0x_AE, 0x_50, 0x_5D, 0x_2E, 0x_CF, 0x_08, 0x_F5, 0x_EE, 0x_6F, 0x_9F, 0x_88, 0x_FF, 0x_AA, 0x_9A,
		0x_EA, 0x_A4, 0x_43, 0x_2A, 0x_0E, 0x_E5, 0x_0F, 0x_3F, 0x_4C, 0x_AC, 0x_93, 0x_1E, 0x_1F, 0x_B8, 0x_BC,
		0x_4F, 0x_10, 0x_13, 0x_7A, 0x_6D, 0x_4E, 0x_A6, 0x_2F, 0x_71, 0x_06, 0x_E4, 0x_D2, 0x_7E, 0x_86, 0x_CE,
		0x_02, 0x_C9, 0x_35, 0x_74, 0x_51, 0x_CA, 0x_7D, 0x_92, 0x_1B, 0x_A2, 0x_38, 0x_26, 0x_77, 0x_C2, 0x_61,
		0x_A1, 0x_9D, 0x_54, 0x_FB, 0x_55, 0x_D3, 0x_F0, 0x_7F, 0x_75, 0x_AF, 0x_66, 0x_81, 0x_FC, 0x_31, 0x_4B,
		0x_27, 0x_70, 0x_F9, 0x_C7, 0x_B6, 0x_8D, 0x_5E, 0x_73, 0x_E6, 0x_56, 0x_67, 0x_87, 0x_A5, 0x_D5, 0x_BB,
		0x_63, 0x_32, 0x_F6, 0x_E0, 0x_40, 0x_1C, 0x_97, 0x_DF, 0x_03, 0x_BF, 0x_DA, 0x_EF, 0x_37, 0x_82, 0x_D7,
		0x_78, 0x_3E, 0x_B4, 0x_25, 0x_F8, 0x_8F, 0x_C1, 0x_64, 0x_15, 0x_12, 0x_D9, 0x_79, 0x_65, 0x_6A, 0x_94,
		0x_A0, 0x_E7, 0x_60, 0x_D1, 0x_3A, 0x_D0, 0x_05, 0x_C5, 0x_91, 0x_19, 0x_AB, 0x_99, 0x_4D, 0x_3C, 0x_BD,
		0x_B0, 0x_18, 0x_F7, 0x_46, 0x_F1, 0x_9E, 0x_3D, 0x_33, 0x_01, 0x_7B, 0x_8B, 0x_C0, 0x_B5, 0x_CD, 0x_39,
		0x_8E, 0x_E3, 0x_48, 0x_C4, 0x_53, 0x_D6, 0x_17,
	];

	helper(S, BASE, -577);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_7_725_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_7_725_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_20, 0x_09, 0x_09, 0x_0C, 0x_0D, 0x_0D, 0x_0A, 0x_0C, 0x_0C, 0x_0C, 0x_0D, 0x_0B, 0x_20, 0x_09,
		0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0B, 0x_0B, 0x_0B, 0x_0B, 0x_09, 0x_0B, 0x_0B, 0x_20, 0x_0A, 0x_09, 0x_09,
		0x_0A, 0x_0A, 0x_0A, 0x_0C, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_CD, 0x_CD,
		0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_CD, 0x_A8, 0x_1E,
		0x_20, 0x_65, 0x_EC, 0x_38, 0x_E8, 0x_F3, 0x_80, 0x_4D, 0x_67, 0x_69, 0x_11, 0x_EF, 0x_A0, 0x_A2, 0x_7D,
		0x_FD, 0x_EB, 0x_0E, 0x_05, 0x_C6, 0x_66, 0x_19, 0x_17, 0x_72, 0x_E5, 0x_EF, 0x_1C, 0x_92, 0x_38, 0x_C8,
		0x_9F, 0x_71, 0x_F2, 0x_BC,
	];
	const BASE: &[u8] = &[
		0x_CD, 0x_5F, 0x_C5, 0x_D7, 0x_02, 0x_3E, 0x_B5, 0x_62, 0x_12, 0x_C1, 0x_EC, 0x_9D, 0x_AE, 0x_67, 0x_CB,
		0x_8F, 0x_50, 0x_F5, 0x_E1, 0x_36, 0x_8D, 0x_51, 0x_76, 0x_FF, 0x_A3, 0x_A5, 0x_C0, 0x_E9, 0x_80, 0x_BB,
		0x_10, 0x_A8, 0x_31, 0x_EB, 0x_0E, 0x_C9, 0x_90, 0x_6F, 0x_C2, 0x_6B, 0x_C3, 0x_1F, 0x_F9, 0x_7D, 0x_B1,
		0x_05, 0x_13, 0x_3A, 0x_98, 0x_07, 0x_D1, 0x_52, 0x_84, 0x_F6, 0x_25, 0x_A2, 0x_72, 0x_DC, 0x_D3, 0x_A1,
		0x_47, 0x_E0, 0x_59, 0x_F8, 0x_AB, 0x_9B, 0x_34, 0x_D6, 0x_1E, 0x_FA, 0x_01, 0x_87, 0x_48, 0x_DF, 0x_5B,
		0x_08, 0x_5D, 0x_8A, 0x_B0, 0x_AA, 0x_E2, 0x_79, 0x_BA, 0x_FB, 0x_A9, 0x_8B, 0x_CA, 0x_04, 0x_DE, 0x_54,
		0x_E3, 0x_70, 0x_86, 0x_22, 0x_BD, 0x_39, 0x_2C, 0x_FD, 0x_82, 0x_26, 0x_2F, 0x_AC, 0x_5A, 0x_E4, 0x_53,
		0x_03, 0x_32, 0x_93, 0x_97, 0x_C8, 0x_71, 0x_35, 0x_56, 0x_3D, 0x_8E, 0x_CF, 0x_B9, 0x_D8, 0x_4B, 0x_14,
		0x_B8, 0x_16, 0x_69, 0x_9F, 0x_9E, 0x_A4, 0x_C7, 0x_60, 0x_11, 0x_41, 0x_EF, 0x_24, 0x_B3, 0x_06, 0x_75,
		0x_91, 0x_C6, 0x_B6, 0x_AD, 0x_94, 0x_92, 0x_43, 0x_63, 0x_2E, 0x_1C, 0x_1A, 0x_3F, 0x_E7, 0x_1D, 0x_58,
		0x_30, 0x_6E, 0x_9A, 0x_23, 0x_E6, 0x_4C, 0x_EE, 0x_85, 0x_40, 0x_DB, 0x_FE, 0x_C4, 0x_6C, 0x_D9, 0x_F7,
		0x_AF, 0x_66, 0x_7B, 0x_15, 0x_BE, 0x_65, 0x_19, 0x_D0, 0x_5E, 0x_0F, 0x_F4, 0x_57, 0x_ED, 0x_1B, 0x_29,
		0x_F0, 0x_BC, 0x_44, 0x_45, 0x_DD, 0x_37, 0x_B4, 0x_95, 0x_68, 0x_73, 0x_7A, 0x_18, 0x_2A, 0x_55, 0x_3C,
		0x_6D, 0x_21, 0x_64, 0x_28, 0x_17, 0x_A7, 0x_38, 0x_D4, 0x_5C, 0x_4F, 0x_42, 0x_4E, 0x_E5, 0x_A6, 0x_4A,
		0x_83, 0x_F1, 0x_FC, 0x_B7, 0x_9C, 0x_88, 0x_CE, 0x_D5, 0x_33, 0x_7E, 0x_CC, 0x_49, 0x_6A, 0x_78, 0x_46,
		0x_89, 0x_77, 0x_BF, 0x_74, 0x_27, 0x_61, 0x_99, 0x_B2, 0x_7C, 0x_7F, 0x_E8, 0x_D2, 0x_DA, 0x_A0, 0x_4D,
		0x_96, 0x_3B, 0x_81, 0x_F2, 0x_F3, 0x_EA, 0x_8C,
	];

	helper(S, BASE, -7_725);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_60_201_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_60_201_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0B, 0x_0B, 0x_20, 0x_09, 0x_09, 0x_0C, 0x_0C, 0x_0B, 0x_0D, 0x_0D, 0x_0B, 0x_0B, 0x_0A,
		0x_20, 0x_0B, 0x_0C, 0x_0C, 0x_0B, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_9D, 0x_9D, 0x_9D,
		0x_9D, 0x_9D, 0x_3E, 0x_C8, 0x_09, 0x_D4, 0x_4B, 0x_D3, 0x_FB, 0x_24, 0x_DB, 0x_BE, 0x_4B, 0x_25, 0x_AA,
		0x_80, 0x_6A, 0x_63, 0x_D3, 0x_B5, 0x_EA, 0x_47, 0x_FF, 0x_62, 0x_F9, 0x_F1, 0x_95, 0x_47, 0x_3A, 0x_E1,
		0x_A2, 0x_3D, 0x_65, 0x_85, 0x_AA, 0x_5F, 0x_28, 0x_25, 0x_44, 0x_51, 0x_E2, 0x_B0, 0x_CD, 0x_C1,
	];
	const BASE: &[u8] = &[
		0x_9D, 0x_89, 0x_85, 0x_70, 0x_F7, 0x_FE, 0x_90, 0x_63, 0x_33, 0x_D2, 0x_51, 0x_52, 0x_C6, 0x_04, 0x_14,
		0x_EB, 0x_AE, 0x_E8, 0x_B9, 0x_80, 0x_73, 0x_5A, 0x_8E, 0x_8F, 0x_CD, 0x_67, 0x_6D, 0x_AD, 0x_47, 0x_05,
		0x_13, 0x_CF, 0x_11, 0x_3C, 0x_B8, 0x_66, 0x_1A, 0x_BA, 0x_43, 0x_A1, 0x_81, 0x_60, 0x_F8, 0x_2F, 0x_9F,
		0x_9B, 0x_F9, 0x_BE, 0x_CA, 0x_50, 0x_1F, 0x_D7, 0x_FF, 0x_D4, 0x_C3, 0x_25, 0x_07, 0x_19, 0x_3D, 0x_DA,
		0x_DB, 0x_E5, 0x_7E, 0x_17, 0x_61, 0x_4D, 0x_84, 0x_23, 0x_97, 0x_10, 0x_DE, 0x_F3, 0x_99, 0x_E2, 0x_58,
		0x_56, 0x_03, 0x_C1, 0x_2A, 0x_AC, 0x_30, 0x_5D, 0x_ED, 0x_48, 0x_EE, 0x_BC, 0x_DD, 0x_98, 0x_8C, 0x_1E,
		0x_F0, 0x_64, 0x_B1, 0x_5B, 0x_6F, 0x_E7, 0x_CB, 0x_01, 0x_EA, 0x_2C, 0x_D8, 0x_AB, 0x_FD, 0x_94, 0x_C5,
		0x_A3, 0x_32, 0x_6B, 0x_9C, 0x_9E, 0x_3A, 0x_44, 0x_49, 0x_E0, 0x_7D, 0x_4F, 0x_02, 0x_0E, 0x_8A, 0x_A4,
		0x_9A, 0x_41, 0x_3B, 0x_83, 0x_BD, 0x_8B, 0x_D9, 0x_34, 0x_E4, 0x_46, 0x_B6, 0x_40, 0x_D5, 0x_29, 0x_5E,
		0x_D0, 0x_91, 0x_B2, 0x_59, 0x_5F, 0x_6E, 0x_12, 0x_96, 0x_A7, 0x_27, 0x_B7, 0x_28, 0x_57, 0x_18, 0x_A0,
		0x_6C, 0x_65, 0x_E3, 0x_C9, 0x_4C, 0x_F6, 0x_37, 0x_36, 0x_CC, 0x_B5, 0x_16, 0x_35, 0x_95, 0x_7F, 0x_C2,
		0x_E1, 0x_87, 0x_A5, 0x_EC, 0x_2E, 0x_88, 0x_79, 0x_42, 0x_F1, 0x_D6, 0x_A9, 0x_F4, 0x_75, 0x_53, 0x_4A,
		0x_C8, 0x_E6, 0x_CE, 0x_62, 0x_78, 0x_7C, 0x_1B, 0x_76, 0x_55, 0x_E9, 0x_0F, 0x_26, 0x_A6, 0x_31, 0x_1C,
		0x_38, 0x_4B, 0x_FC, 0x_5C, 0x_BF, 0x_8D, 0x_EF, 0x_F2, 0x_86, 0x_4E, 0x_DC, 0x_B4, 0x_7B, 0x_24, 0x_A8,
		0x_F5, 0x_54, 0x_72, 0x_68, 0x_06, 0x_22, 0x_93, 0x_AF, 0x_D3, 0x_C4, 0x_D1, 0x_82, 0x_B0, 0x_1D, 0x_21,
		0x_69, 0x_15, 0x_71, 0x_C0, 0x_39, 0x_B3, 0x_77, 0x_FA, 0x_92, 0x_45, 0x_3F, 0x_C7, 0x_BB, 0x_6A, 0x_08,
		0x_7A, 0x_74, 0x_AA, 0x_3E, 0x_A2, 0x_FB, 0x_DF,
	];

	helper(S, BASE, -60_201);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_987_859_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_987_859_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_20, 0x_0C, 0x_0C, 0x_0C, 0x_09, 0x_0A, 0x_09, 0x_0D, 0x_0B, 0x_20, 0x_0B, 0x_09, 0x_0C, 0x_0A, 0x_09,
		0x_0A, 0x_0C, 0x_09, 0x_0C, 0x_0C, 0x_09, 0x_0C, 0x_20, 0x_0A, 0x_0A, 0x_0B, 0x_0A, 0x_2D, 0x_2D, 0x_2D,
		0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2B,
		0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F,
		0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_9F, 0x_A5, 0x_42,
		0x_9C, 0x_09, 0x_C8, 0x_B6, 0x_58, 0x_90, 0x_FD, 0x_77, 0x_55, 0x_C2, 0x_90,
	];
	const BASE: &[u8] = &[
		0x_9F, 0x_BD, 0x_2A, 0x_94, 0x_A6, 0x_2C, 0x_8F, 0x_84, 0x_77, 0x_90, 0x_9E, 0x_BE, 0x_C3, 0x_1D, 0x_B7,
		0x_F0, 0x_A5, 0x_FE, 0x_1B, 0x_0F, 0x_15, 0x_F6, 0x_5F, 0x_33, 0x_C9, 0x_37, 0x_7E, 0x_D2, 0x_1C, 0x_24,
		0x_8D, 0x_4C, 0x_AC, 0x_F5, 0x_27, 0x_5C, 0x_B1, 0x_39, 0x_08, 0x_3F, 0x_43, 0x_96, 0x_2E, 0x_E8, 0x_8B,
		0x_53, 0x_E9, 0x_42, 0x_4A, 0x_BB, 0x_04, 0x_95, 0x_64, 0x_8C, 0x_6E, 0x_7A, 0x_38, 0x_FC, 0x_5B, 0x_E6,
		0x_86, 0x_12, 0x_36, 0x_13, 0x_EA, 0x_19, 0x_05, 0x_50, 0x_CA, 0x_28, 0x_10, 0x_52, 0x_93, 0x_34, 0x_25,
		0x_85, 0x_E3, 0x_B6, 0x_C7, 0x_57, 0x_DC, 0x_29, 0x_AD, 0x_11, 0x_7D, 0x_F9, 0x_CC, 0x_F2, 0x_14, 0x_FB,
		0x_FD, 0x_E4, 0x_A2, 0x_0E, 0x_16, 0x_54, 0x_6B, 0x_71, 0x_A8, 0x_B2, 0x_CF, 0x_B5, 0x_EE, 0x_AB, 0x_EF,
		0x_F1, 0x_9C, 0x_79, 0x_C8, 0x_F7, 0x_69, 0x_63, 0x_D5, 0x_C1, 0x_BC, 0x_D1, 0x_DB, 0x_DD, 0x_75, 0x_65,
		0x_F4, 0x_DA, 0x_4F, 0x_B4, 0x_45, 0x_97, 0x_E2, 0x_44, 0x_FF, 0x_87, 0x_07, 0x_3A, 0x_A7, 0x_3D, 0x_4D,
		0x_72, 0x_8A, 0x_B9, 0x_70, 0x_35, 0x_C6, 0x_30, 0x_23, 0x_CB, 0x_FA, 0x_18, 0x_F8, 0x_3E, 0x_99, 0x_3B,
		0x_22, 0x_98, 0x_92, 0x_7B, 0x_62, 0x_A9, 0x_D3, 0x_82, 0x_E5, 0x_81, 0x_B0, 0x_5E, 0x_9D, 0x_D7, 0x_91,
		0x_66, 0x_A1, 0x_80, 0x_8E, 0x_E7, 0x_CE, 0x_02, 0x_E1, 0x_61, 0x_DF, 0x_1A, 0x_32, 0x_06, 0x_89, 0x_26,
		0x_F3, 0x_6A, 0x_73, 0x_3C, 0x_1F, 0x_01, 0x_76, 0x_C5, 0x_6C, 0x_EB, 0x_4B, 0x_D0, 0x_D6, 0x_78, 0x_AF,
		0x_D8, 0x_B8, 0x_1E, 0x_03, 0x_41, 0x_5D, 0x_A4, 0x_AE, 0x_55, 0x_6F, 0x_59, 0x_BA, 0x_47, 0x_6D, 0x_48,
		0x_46, 0x_D4, 0x_AA, 0x_2F, 0x_E0, 0x_9B, 0x_A0, 0x_31, 0x_49, 0x_7C, 0x_A3, 0x_EC, 0x_DE, 0x_56, 0x_9A,
		0x_C2, 0x_5A, 0x_17, 0x_C0, 0x_21, 0x_40, 0x_74, 0x_BF, 0x_7F, 0x_58, 0x_83, 0x_60, 0x_51, 0x_ED, 0x_67,
		0x_68, 0x_CD, 0x_C4, 0x_D9, 0x_4E, 0x_B3, 0x_88,
	];

	helper(S, BASE, -987_859);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_9_760_994_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_9_760_994_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0B, 0x_0B, 0x_0A, 0x_0D, 0x_0B, 0x_09, 0x_0D, 0x_0A, 0x_09, 0x_0A, 0x_0C, 0x_0A, 0x_0D, 0x_20,
		0x_09, 0x_20, 0x_0B, 0x_0B, 0x_0C, 0x_09, 0x_20, 0x_0D, 0x_09, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_F8,
		0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8,
		0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8, 0x_F8,
		0x_22, 0x_32, 0x_9A, 0x_0B, 0x_B4, 0x_C3, 0x_12, 0x_33, 0x_3E, 0x_2C, 0x_B9, 0x_1D, 0x_1E, 0x_7D, 0x_37,
		0x_3F, 0x_C9, 0x_D6, 0x_D2, 0x_57, 0x_C4, 0x_A6, 0x_84, 0x_07, 0x_3C, 0x_91, 0x_66, 0x_52, 0x_60, 0x_81,
		0x_F4, 0x_C1, 0x_CE, 0x_58, 0x_58, 0x_26, 0x_84, 0x_7D, 0x_78,
	];
	const BASE: &[u8] = &[
		0x_F8, 0x_52, 0x_5F, 0x_48, 0x_1C, 0x_B2, 0x_D9, 0x_70, 0x_B1, 0x_D1, 0x_72, 0x_46, 0x_CF, 0x_FB, 0x_F7,
		0x_BA, 0x_E5, 0x_2A, 0x_F1, 0x_4F, 0x_A1, 0x_3F, 0x_6A, 0x_06, 0x_26, 0x_B6, 0x_78, 0x_F6, 0x_97, 0x_21,
		0x_56, 0x_05, 0x_9F, 0x_BC, 0x_B7, 0x_62, 0x_7D, 0x_EF, 0x_DF, 0x_02, 0x_94, 0x_75, 0x_8E, 0x_C3, 0x_A0,
		0x_AE, 0x_86, 0x_8D, 0x_9A, 0x_DD, 0x_89, 0x_10, 0x_0F, 0x_6B, 0x_51, 0x_C7, 0x_14, 0x_76, 0x_6F, 0x_ED,
		0x_5A, 0x_A6, 0x_2C, 0x_F4, 0x_90, 0x_47, 0x_65, 0x_61, 0x_AF, 0x_59, 0x_C0, 0x_FC, 0x_68, 0x_3E, 0x_91,
		0x_F3, 0x_5E, 0x_93, 0x_79, 0x_69, 0x_AC, 0x_E7, 0x_E2, 0x_DC, 0x_11, 0x_C1, 0x_C4, 0x_EC, 0x_E0, 0x_4E,
		0x_B8, 0x_CC, 0x_7B, 0x_01, 0x_D5, 0x_39, 0x_44, 0x_41, 0x_98, 0x_AD, 0x_BE, 0x_CA, 0x_31, 0x_7F, 0x_57,
		0x_16, 0x_17, 0x_D7, 0x_CE, 0x_77, 0x_2F, 0x_04, 0x_6C, 0x_3C, 0x_C6, 0x_28, 0x_E4, 0x_71, 0x_95, 0x_A3,
		0x_64, 0x_2E, 0x_B5, 0x_87, 0x_4A, 0x_C5, 0x_BB, 0x_CD, 0x_6D, 0x_49, 0x_37, 0x_C8, 0x_7A, 0x_9D, 0x_BD,
		0x_D2, 0x_3D, 0x_B3, 0x_DB, 0x_E6, 0x_9C, 0x_FD, 0x_DA, 0x_D0, 0x_8B, 0x_8F, 0x_88, 0x_55, 0x_4C, 0x_DE,
		0x_FF, 0x_67, 0x_A9, 0x_B9, 0x_35, 0x_83, 0x_CB, 0x_D8, 0x_81, 0x_22, 0x_5C, 0x_6E, 0x_73, 0x_1F, 0x_96,
		0x_7E, 0x_EA, 0x_E8, 0x_8C, 0x_19, 0x_60, 0x_B0, 0x_F0, 0x_29, 0x_85, 0x_A2, 0x_EE, 0x_1D, 0x_18, 0x_03,
		0x_0E, 0x_84, 0x_92, 0x_4D, 0x_99, 0x_C2, 0x_1E, 0x_E3, 0x_43, 0x_B4, 0x_25, 0x_36, 0x_15, 0x_8A, 0x_4B,
		0x_66, 0x_3A, 0x_08, 0x_FA, 0x_80, 0x_42, 0x_58, 0x_34, 0x_1B, 0x_24, 0x_F2, 0x_82, 0x_F9, 0x_A7, 0x_40,
		0x_A5, 0x_74, 0x_33, 0x_9E, 0x_D3, 0x_12, 0x_D6, 0x_30, 0x_50, 0x_9B, 0x_FE, 0x_EB, 0x_AB, 0x_13, 0x_A4,
		0x_5B, 0x_5D, 0x_27, 0x_E1, 0x_63, 0x_53, 0x_38, 0x_F5, 0x_07, 0x_45, 0x_E9, 0x_A8, 0x_D4, 0x_7C, 0x_23,
		0x_C9, 0x_BF, 0x_3B, 0x_1A, 0x_AA, 0x_32, 0x_54,
	];

	helper(S, BASE, -9_760_994);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_20_963_229_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_20_963_229_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_0D, 0x_0C, 0x_0D, 0x_09, 0x_09, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_74, 0x_74,
		0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_74, 0x_DB, 0x_D7, 0x_50, 0x_58, 0x_0C, 0x_FB, 0x_DA, 0x_B5,
		0x_31, 0x_CD, 0x_69, 0x_7D, 0x_69, 0x_74, 0x_42, 0x_9A, 0x_0E, 0x_B8, 0x_F2, 0x_98, 0x_89, 0x_42, 0x_92,
		0x_EB, 0x_F8, 0x_BC, 0x_33, 0x_31,
	];
	const BASE: &[u8] = &[
		0x_74, 0x_DB, 0x_43, 0x_C8, 0x_51, 0x_E4, 0x_86, 0x_5A, 0x_8F, 0x_7D, 0x_CF, 0x_06, 0x_AE, 0x_B6, 0x_18,
		0x_10, 0x_2E, 0x_3A, 0x_11, 0x_CC, 0x_27, 0x_C2, 0x_A7, 0x_16, 0x_47, 0x_F5, 0x_3C, 0x_80, 0x_65, 0x_81,
		0x_32, 0x_7B, 0x_F9, 0x_91, 0x_66, 0x_54, 0x_D3, 0x_99, 0x_C0, 0x_C6, 0x_29, 0x_2C, 0x_A2, 0x_67, 0x_14,
		0x_F0, 0x_ED, 0x_94, 0x_15, 0x_98, 0x_E2, 0x_D9, 0x_E1, 0x_59, 0x_9B, 0x_33, 0x_6B, 0x_CD, 0x_3F, 0x_1A,
		0x_AF, 0x_25, 0x_1E, 0x_69, 0x_EA, 0x_46, 0x_D6, 0x_DC, 0x_A8, 0x_6F, 0x_62, 0x_BA, 0x_3D, 0x_D8, 0x_04,
		0x_F2, 0x_C3, 0x_88, 0x_05, 0x_B8, 0x_DA, 0x_31, 0x_92, 0x_CA, 0x_85, 0x_68, 0x_6D, 0x_96, 0x_C7, 0x_53,
		0x_6E, 0x_CB, 0x_58, 0x_8D, 0x_D5, 0x_E0, 0x_D7, 0x_4A, 0x_8A, 0x_BE, 0x_22, 0x_49, 0x_AB, 0x_4E, 0x_5F,
		0x_D0, 0x_EF, 0x_8E, 0x_6A, 0x_A0, 0x_F7, 0x_52, 0x_2A, 0x_A4, 0x_42, 0x_C1, 0x_E9, 0x_B1, 0x_08, 0x_7A,
		0x_0E, 0x_5C, 0x_B2, 0x_FF, 0x_01, 0x_41, 0x_13, 0x_EE, 0x_28, 0x_2F, 0x_BC, 0x_9F, 0x_71, 0x_79, 0x_64,
		0x_EB, 0x_95, 0x_B5, 0x_77, 0x_93, 0x_55, 0x_21, 0x_82, 0x_37, 0x_C9, 0x_7F, 0x_73, 0x_87, 0x_9E, 0x_38,
		0x_50, 0x_E3, 0x_D4, 0x_56, 0x_E5, 0x_A5, 0x_C4, 0x_DF, 0x_3E, 0x_7C, 0x_A9, 0x_D2, 0x_BB, 0x_4F, 0x_5D,
		0x_EC, 0x_36, 0x_30, 0x_B7, 0x_E7, 0x_72, 0x_DE, 0x_63, 0x_FC, 0x_83, 0x_D1, 0x_89, 0x_4C, 0x_9C, 0x_9D,
		0x_E8, 0x_B4, 0x_35, 0x_F1, 0x_5B, 0x_23, 0x_75, 0x_A1, 0x_57, 0x_90, 0x_12, 0x_FD, 0x_8B, 0x_34, 0x_07,
		0x_7E, 0x_BD, 0x_4B, 0x_0F, 0x_26, 0x_5E, 0x_FB, 0x_B3, 0x_3B, 0x_9A, 0x_02, 0x_03, 0x_B9, 0x_1B, 0x_84,
		0x_17, 0x_76, 0x_CE, 0x_AA, 0x_FA, 0x_DD, 0x_BF, 0x_F4, 0x_AD, 0x_B0, 0x_1C, 0x_40, 0x_1D, 0x_8C, 0x_A3,
		0x_44, 0x_48, 0x_6C, 0x_FE, 0x_F6, 0x_78, 0x_C5, 0x_39, 0x_F3, 0x_97, 0x_4D, 0x_61, 0x_19, 0x_45, 0x_AC,
		0x_1F, 0x_F8, 0x_24, 0x_60, 0x_70, 0x_A6, 0x_E6,
	];

	helper(S, BASE, -20_963_229);
}
// endregion
// region: s_has_whitespaces_and_signs_and_zeros_and_minus_524_327_448_in_base_247_and_insignificant_bytes
#[test]
fn s_has_whitespaces_and_signs_and_zeros_and_minus_524_327_448_in_base_247_and_insignificant_bytes() {
	const S: &[u8] = &[
		0x_09, 0x_0A, 0x_0B, 0x_0C, 0x_0A, 0x_09, 0x_0C, 0x_0A, 0x_0A, 0x_0A, 0x_09, 0x_0C, 0x_0D, 0x_20, 0x_0B,
		0x_20, 0x_20, 0x_0C, 0x_0A, 0x_0D, 0x_2B, 0x_2B, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2B,
		0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2B, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2B,
		0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2B, 0x_2D, 0x_2D, 0x_2D, 0x_1B, 0x_1B, 0x_1B,
		0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B,
		0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_1B, 0x_58, 0x_50, 0x_F8, 0x_FD, 0x_0B, 0x_FC,
		0x_92, 0x_49, 0x_21, 0x_1F, 0x_8C, 0x_9D, 0x_1C, 0x_A2, 0x_B3, 0x_3E, 0x_BD, 0x_6A, 0x_24, 0x_28, 0x_F3,
		0x_7E, 0x_F9, 0x_41,
	];
	const BASE: &[u8] = &[
		0x_1B, 0x_40, 0x_94, 0x_BC, 0x_5A, 0x_5F, 0x_DC, 0x_A2, 0x_D5, 0x_F3, 0x_C3, 0x_57, 0x_F5, 0x_ED, 0x_05,
		0x_BE, 0x_36, 0x_3A, 0x_98, 0x_DD, 0x_83, 0x_C2, 0x_2C, 0x_3F, 0x_9F, 0x_5B, 0x_56, 0x_E1, 0x_B8, 0x_63,
		0x_9D, 0x_D9, 0x_06, 0x_B2, 0x_58, 0x_1F, 0x_E7, 0x_1A, 0x_7F, 0x_95, 0x_96, 0x_44, 0x_41, 0x_02, 0x_75,
		0x_D1, 0x_27, 0x_FD, 0x_BD, 0x_A8, 0x_62, 0x_FB, 0x_90, 0x_CC, 0x_BF, 0x_CE, 0x_B3, 0x_59, 0x_E8, 0x_DA,
		0x_49, 0x_D3, 0x_D7, 0x_AD, 0x_3B, 0x_F8, 0x_EB, 0x_B9, 0x_EC, 0x_26, 0x_8E, 0x_E5, 0x_9C, 0x_5E, 0x_E4,
		0x_7E, 0x_F9, 0x_9E, 0x_91, 0x_4F, 0x_C8, 0x_CD, 0x_6E, 0x_14, 0x_E2, 0x_85, 0x_34, 0x_C1, 0x_AE, 0x_03,
		0x_8F, 0x_71, 0x_A5, 0x_92, 0x_DF, 0x_77, 0x_8D, 0x_16, 0x_6A, 0x_AB, 0x_79, 0x_89, 0x_69, 0x_9A, 0x_60,
		0x_01, 0x_B1, 0x_15, 0x_52, 0x_23, 0x_6C, 0x_CA, 0x_F2, 0x_81, 0x_80, 0x_07, 0x_AF, 0x_D6, 0x_FE, 0x_A0,
		0x_2A, 0x_54, 0x_E0, 0x_74, 0x_84, 0x_0E, 0x_C4, 0x_33, 0x_DB, 0x_38, 0x_99, 0x_A4, 0x_EA, 0x_29, 0x_A3,
		0x_BB, 0x_86, 0x_2E, 0x_70, 0x_11, 0x_35, 0x_EE, 0x_A6, 0x_3C, 0x_FC, 0x_76, 0x_B0, 0x_22, 0x_DE, 0x_A7,
		0x_21, 0x_87, 0x_65, 0x_53, 0x_4B, 0x_08, 0x_AA, 0x_EF, 0x_6B, 0x_4E, 0x_13, 0x_42, 0x_3D, 0x_72, 0x_19,
		0x_E9, 0x_5C, 0x_43, 0x_C0, 0x_C9, 0x_1D, 0x_46, 0x_F1, 0x_F7, 0x_7B, 0x_61, 0x_78, 0x_D4, 0x_FA, 0x_17,
		0x_30, 0x_C6, 0x_A9, 0x_39, 0x_F6, 0x_C5, 0x_82, 0x_64, 0x_E3, 0x_3E, 0x_BA, 0x_0F, 0x_31, 0x_88, 0x_73,
		0x_B6, 0x_50, 0x_5D, 0x_C7, 0x_93, 0x_24, 0x_7C, 0x_45, 0x_8B, 0x_AC, 0x_47, 0x_7D, 0x_B7, 0x_51, 0x_E6,
		0x_97, 0x_D0, 0x_04, 0x_9B, 0x_32, 0x_4D, 0x_F0, 0x_66, 0x_2F, 0x_CB, 0x_8A, 0x_6F, 0x_4A, 0x_7A, 0x_FF,
		0x_D2, 0x_28, 0x_F4, 0x_10, 0x_68, 0x_37, 0x_B5, 0x_12, 0x_1E, 0x_1C, 0x_55, 0x_D8, 0x_B4, 0x_8C, 0x_48,
		0x_18, 0x_CF, 0x_25, 0x_4C, 0x_67, 0x_6D, 0x_A1,
	];

	helper(S, BASE, -524_327_448);
}
// endregion
